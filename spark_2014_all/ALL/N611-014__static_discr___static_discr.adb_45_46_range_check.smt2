;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort natural 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ((natural__ref 0))
(((mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range2
                                     temp___expr_33)))

(declare-fun to_rep (natural) Int)

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ((map__ref 0))
(((mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))

;; slide_eq
  (assert
  (forall ((a (Array Int natural)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int natural)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int natural) Int Int (Array Int natural) Int
  Int) (Array Int natural))

;; concat_def
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (natural Int) (Array Int natural))

;; singleton_def
  (assert
  (forall ((v natural))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int)
  (b (Array Int natural)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep (select a temp___idx_132)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int natural) Int Int (Array Int natural) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-sort positive 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (positive positive) Bool)

(declare-const dummy2 positive)

(declare-datatypes ((positive__ref 0))
(((mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range3 low) (in_range3 high))))))

(declare-datatypes ((us_t 0)) (((mk___t (elts (Array Int natural))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))

(define-fun of_array ((a (Array Int natural)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-fun object__size ((Array Int natural)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int natural)) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment ((Array Int natural)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int natural))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-datatypes ((nat_array__ref 0))
(((mk_nat_array__ref (nat_array__content us_t)))))
(define-fun nat_array__ref___projection ((a nat_array__ref)) us_t (nat_array__content
                                                                  a))

(define-fun dynamic_invariant1 ((temp___expr_155 us_t)
  (temp___is_init_152 Bool) (temp___skip_constant_153 Bool)
  (temp___do_toplevel_154 Bool)) Bool (=>
                                      (not (= temp___skip_constant_153 true))
                                      (dynamic_property 1 2147483647
                                      (first1 temp___expr_155)
                                      (last1 temp___expr_155))))

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (integer integer) Bool)

(declare-const dummy4 integer)

(declare-datatypes ((t3s__ref 0)) (((mk_t3s__ref (t3s__content integer)))))
(define-fun t3s__ref___projection ((a t3s__ref)) integer (t3s__content a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first2 (mk1 f l))) f)
     (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ((us_t1 0))
(((mk___t1 (elts1 (Array Int natural))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int natural) (elts1 a))

(define-fun of_array1 ((a (Array Int natural)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-const value__size1 Int)

(declare-fun object__size1 ((Array Int natural)) Int)

(declare-const value__component__size1 Int)

(declare-fun object__component__size1 ((Array Int natural)) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 ((Array Int natural)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int natural))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__alignment1 a))))

(define-fun bool_eq2 ((x us_t1)
  (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x)))
                  (to_rep1 (last2 (rt1 x))) (elts1 y)
                  (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))

(declare-fun user_eq5 (us_t1 us_t1) Bool)

(declare-const dummy5 us_t1)

(declare-datatypes ((t4s__ref 0)) (((mk_t4s__ref (t4s__content us_t1)))))
(define-fun t4s__ref___projection ((a t4s__ref)) us_t1 (t4s__content a))

(declare-datatypes ((us_split_discrs 0))
(((mk___split_discrs
  (rec__static_discr__i_holder__unused natural)(rec__static_discr__i_holder__c natural)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural
  (rec__static_discr__i_holder__unused a))

(define-fun us_split_discrs___2__projection ((a us_split_discrs)) natural
  (rec__static_discr__i_holder__c a))

(declare-datatypes ((us_split_discrs__ref 0))
(((mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ((us_split_fields 0))
(((mk___split_fields (rec__static_discr__i_holder__content us_t1)))))
(define-fun us_split_fields_Content__projection ((a us_split_fields)) us_t1
  (rec__static_discr__i_holder__content a))

(declare-datatypes ((us_split_fields__ref 0))
(((mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((mk___rep
  (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(define-fun bool_eq3 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep
                           (rec__static_discr__i_holder__unused
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__static_discr__i_holder__unused
                                                  (us_split_discrs1 b))))
                        (= (to_rep
                           (rec__static_discr__i_holder__c
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__static_discr__i_holder__c
                                                  (us_split_discrs1 b)))))
                        (= (bool_eq2
                           (rec__static_discr__i_holder__content
                           (us_split_fields1 a))
                           (rec__static_discr__i_holder__content
                           (us_split_fields1 b))) true))
                   true false))

(declare-const value__size2 Int)

(declare-fun object__size2 (us_rep) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))

(declare-const static_discr__i_holder__unused__first__bit Int)

(declare-const static_discr__i_holder__unused__last__bit Int)

(declare-const static_discr__i_holder__unused__position Int)

;; static_discr__i_holder__unused__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__unused__first__bit))

;; static_discr__i_holder__unused__last__bit_axiom
  (assert
  (< static_discr__i_holder__unused__first__bit static_discr__i_holder__unused__last__bit))

;; static_discr__i_holder__unused__position_axiom
  (assert (<= 0 static_discr__i_holder__unused__position))

(declare-const static_discr__i_holder__c__first__bit Int)

(declare-const static_discr__i_holder__c__last__bit Int)

(declare-const static_discr__i_holder__c__position Int)

;; static_discr__i_holder__c__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__c__first__bit))

;; static_discr__i_holder__c__last__bit_axiom
  (assert
  (< static_discr__i_holder__c__first__bit static_discr__i_holder__c__last__bit))

;; static_discr__i_holder__c__position_axiom
  (assert (<= 0 static_discr__i_holder__c__position))

(declare-const static_discr__i_holder__content__first__bit Int)

(declare-const static_discr__i_holder__content__last__bit Int)

(declare-const static_discr__i_holder__content__position Int)

;; static_discr__i_holder__content__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__content__first__bit))

;; static_discr__i_holder__content__last__bit_axiom
  (assert
  (< static_discr__i_holder__content__first__bit static_discr__i_holder__content__last__bit))

;; static_discr__i_holder__content__position_axiom
  (assert (<= 0 static_discr__i_holder__content__position))

(declare-fun user_eq6 (us_rep us_rep) Bool)

(declare-const dummy6 us_rep)

(declare-datatypes ((i_holder__ref 0))
(((mk_i_holder__ref (i_holder__content us_rep)))))
(define-fun i_holder__ref___projection ((a i_holder__ref)) us_rep (i_holder__content
                                                                  a))

(define-fun dynamic_property3 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq7 (integer integer) Bool)

(declare-const dummy7 integer)

(declare-datatypes ((tT6sP1__ref 0))
(((mk_tT6sP1__ref (tT6sP1__content integer)))))
(define-fun tT6sP1__ref___projection ((a tT6sP1__ref)) integer (tT6sP1__content
                                                               a))

(declare-sort t2 0)

(declare-fun first4 (t2) integer)

(declare-fun last4 (t2) integer)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first4 (mk2 f l))) f)
     (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)) )))

(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property3 range_first range_last low)
                   (dynamic_property3 range_first range_last high))))))

(declare-datatypes ((us_t2 0))
(((mk___t2 (elts2 (Array Int natural))(rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int natural) (elts2 a))

(define-fun of_array2 ((a (Array Int natural)) (f Int)
  (l Int)) us_t2 (mk___t2 a (mk2 f l)))

(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))

(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a))
                                    (+ (- (last5 a) (first5 a)) 1) 0))

(declare-const value__size3 Int)

(declare-fun object__size3 ((Array Int natural)) Int)

(declare-const value__component__size2 Int)

(declare-fun object__component__size2 ((Array Int natural)) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 ((Array Int natural)) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__size3 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int natural))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__alignment3 a))))

(define-fun bool_eq4 ((x us_t2)
  (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x)))
                  (to_rep1 (last4 (rt2 x))) (elts2 y)
                  (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))

(declare-fun user_eq8 (us_t2 us_t2) Bool)

(declare-const dummy8 us_t2)

(declare-datatypes ((t6s__ref 0)) (((mk_t6s__ref (t6s__content us_t2)))))
(define-fun t6s__ref___projection ((a t6s__ref)) us_t2 (t6s__content a))

(declare-datatypes ((us_split_fields2 0))
(((mk___split_fields1 (rec__static_discr__i_holder__content1 us_t2)))))
(define-fun us_split_fields_Content__2__projection ((a us_split_fields2)) us_t2
  (rec__static_discr__i_holder__content1 a))

(declare-datatypes ((us_split_fields__ref1 0))
(((mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep1 0))
(((mk___rep1
  (us_split_discrs2 us_split_discrs)(us_split_fields3 us_split_fields2)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_discrs (us_split_discrs2
                                                                 a))

(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                  a))

(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a)
                                         (mk___split_fields
                                         (let ((temp___134 (rec__static_discr__i_holder__content1
                                                           (us_split_fields3
                                                           a))))
                                         (of_array1 (to_array2 temp___134)
                                         (first5 temp___134)
                                         (last5 temp___134))))))

(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r)
                                         (mk___split_fields1
                                         (let ((temp___133 (rec__static_discr__i_holder__content
                                                           (us_split_fields1
                                                           r))))
                                         (of_array2 (to_array1 temp___133)
                                         (first3 temp___133)
                                         (last3 temp___133))))))

(define-fun bool_eq5 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__static_discr__i_holder__unused
                            (us_split_discrs2 a))) (to_rep
                                                   (rec__static_discr__i_holder__unused
                                                   (us_split_discrs2 b))))
                         (= (to_rep
                            (rec__static_discr__i_holder__c
                            (us_split_discrs2 a))) (to_rep
                                                   (rec__static_discr__i_holder__c
                                                   (us_split_discrs2 b)))))
                         (= (bool_eq4
                            (rec__static_discr__i_holder__content1
                            (us_split_fields3 a))
                            (rec__static_discr__i_holder__content1
                            (us_split_fields3 b))) true))
                    true false))

(define-fun in_range4 ((rec__static_discr__i_holder__unused1 Int)
  (rec__static_discr__i_holder__c1 Int)
  (a us_rep)) Bool (and
                   (= rec__static_discr__i_holder__unused1 (to_rep
                                                           (rec__static_discr__i_holder__unused
                                                           (us_split_discrs1
                                                           a))))
                   (= rec__static_discr__i_holder__c1 (to_rep
                                                      (rec__static_discr__i_holder__c
                                                      (us_split_discrs1 a))))))

(declare-const value__size4 Int)

(declare-fun object__size4 (us_rep1) Int)

(declare-const value__alignment4 Int)

(declare-fun object__alignment4 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment4 a))))

(declare-const static_discr__i_holder__unused__first__bit1 Int)

(declare-const static_discr__i_holder__unused__last__bit1 Int)

(declare-const static_discr__i_holder__unused__position1 Int)

;; static_discr__i_holder__unused__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__unused__first__bit1))

;; static_discr__i_holder__unused__last__bit_axiom
  (assert
  (< static_discr__i_holder__unused__first__bit1 static_discr__i_holder__unused__last__bit1))

;; static_discr__i_holder__unused__position_axiom
  (assert (<= 0 static_discr__i_holder__unused__position1))

(declare-const static_discr__i_holder__c__first__bit1 Int)

(declare-const static_discr__i_holder__c__last__bit1 Int)

(declare-const static_discr__i_holder__c__position1 Int)

;; static_discr__i_holder__c__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__c__first__bit1))

;; static_discr__i_holder__c__last__bit_axiom
  (assert
  (< static_discr__i_holder__c__first__bit1 static_discr__i_holder__c__last__bit1))

;; static_discr__i_holder__c__position_axiom
  (assert (<= 0 static_discr__i_holder__c__position1))

(declare-const static_discr__i_holder__content__first__bit1 Int)

(declare-const static_discr__i_holder__content__last__bit1 Int)

(declare-const static_discr__i_holder__content__position1 Int)

;; static_discr__i_holder__content__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__content__first__bit1))

;; static_discr__i_holder__content__last__bit_axiom
  (assert
  (< static_discr__i_holder__content__first__bit1 static_discr__i_holder__content__last__bit1))

;; static_discr__i_holder__content__position_axiom
  (assert (<= 0 static_discr__i_holder__content__position1))

(declare-fun user_eq9 (us_rep1 us_rep1) Bool)

(declare-const dummy9 us_rep1)

(declare-datatypes ((t5s__ref 0)) (((mk_t5s__ref (t5s__content us_rep1)))))
(define-fun t5s__ref___projection ((a t5s__ref)) us_rep1 (t5s__content a))

(declare-datatypes ((us_split_discrs3 0))
(((mk___split_discrs1
  (rec__static_discr__holder__unused natural)(rec__static_discr__holder__c natural)))))
(define-fun us_split_discrs___3__projection ((a us_split_discrs3)) natural
  (rec__static_discr__holder__unused a))

(define-fun us_split_discrs___4__projection ((a us_split_discrs3)) natural
  (rec__static_discr__holder__c a))

(declare-datatypes ((us_split_discrs__ref1 0))
(((mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs3)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref1)) us_split_discrs3
  (us_split_discrs__content1 a))

(declare-datatypes ((us_split_fields4 0))
(((mk___split_fields2
  (rec__static_discr__holder__content us_rep1)(rec__static_discr__holder__length natural)))))
(define-fun us_split_fields_Content__3__projection ((a us_split_fields4)) us_rep1
  (rec__static_discr__holder__content a))

(define-fun us_split_fields_Length__projection ((a us_split_fields4)) natural
  (rec__static_discr__holder__length a))

(declare-datatypes ((us_split_fields__ref2 0))
(((mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4
  (us_split_fields__content2 a))

(declare-datatypes ((us_rep2 0))
(((mk___rep2
  (us_split_discrs4 us_split_discrs3)(us_split_fields5 us_split_fields4)))))
(define-fun us_rep___5__projection ((a us_rep2)) us_split_discrs3 (us_split_discrs4
                                                                  a))

(define-fun us_rep___6__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                  a))

(define-fun bool_eq6 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (and
                         (= (to_rep
                            (rec__static_discr__holder__unused
                            (us_split_discrs4 a))) (to_rep
                                                   (rec__static_discr__holder__unused
                                                   (us_split_discrs4 b))))
                         (= (to_rep
                            (rec__static_discr__holder__c
                            (us_split_discrs4 a))) (to_rep
                                                   (rec__static_discr__holder__c
                                                   (us_split_discrs4 b)))))
                         (= (bool_eq5
                            (rec__static_discr__holder__content
                            (us_split_fields5 a))
                            (rec__static_discr__holder__content
                            (us_split_fields5 b))) true))
                         (= (to_rep
                            (rec__static_discr__holder__length
                            (us_split_fields5 a))) (to_rep
                                                   (rec__static_discr__holder__length
                                                   (us_split_fields5 b)))))
                    true false))

(declare-const value__size5 Int)

(declare-fun object__size5 (us_rep2) Int)

(declare-const value__alignment5 Int)

(declare-fun object__alignment5 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))

(declare-const static_discr__holder__unused__first__bit Int)

(declare-const static_discr__holder__unused__last__bit Int)

(declare-const static_discr__holder__unused__position Int)

;; static_discr__holder__unused__first__bit_axiom
  (assert (<= 0 static_discr__holder__unused__first__bit))

;; static_discr__holder__unused__last__bit_axiom
  (assert
  (< static_discr__holder__unused__first__bit static_discr__holder__unused__last__bit))

;; static_discr__holder__unused__position_axiom
  (assert (<= 0 static_discr__holder__unused__position))

(declare-const static_discr__holder__c__first__bit Int)

(declare-const static_discr__holder__c__last__bit Int)

(declare-const static_discr__holder__c__position Int)

;; static_discr__holder__c__first__bit_axiom
  (assert (<= 0 static_discr__holder__c__first__bit))

;; static_discr__holder__c__last__bit_axiom
  (assert
  (< static_discr__holder__c__first__bit static_discr__holder__c__last__bit))

;; static_discr__holder__c__position_axiom
  (assert (<= 0 static_discr__holder__c__position))

(declare-const static_discr__holder__content__first__bit Int)

(declare-const static_discr__holder__content__last__bit Int)

(declare-const static_discr__holder__content__position Int)

;; static_discr__holder__content__first__bit_axiom
  (assert (<= 0 static_discr__holder__content__first__bit))

;; static_discr__holder__content__last__bit_axiom
  (assert
  (< static_discr__holder__content__first__bit static_discr__holder__content__last__bit))

;; static_discr__holder__content__position_axiom
  (assert (<= 0 static_discr__holder__content__position))

(declare-const static_discr__holder__length__first__bit Int)

(declare-const static_discr__holder__length__last__bit Int)

(declare-const static_discr__holder__length__position Int)

;; static_discr__holder__length__first__bit_axiom
  (assert (<= 0 static_discr__holder__length__first__bit))

;; static_discr__holder__length__last__bit_axiom
  (assert
  (< static_discr__holder__length__first__bit static_discr__holder__length__last__bit))

;; static_discr__holder__length__position_axiom
  (assert (<= 0 static_discr__holder__length__position))

(declare-fun user_eq10 (us_rep2 us_rep2) Bool)

(declare-const dummy10 us_rep2)

(declare-datatypes ((holder__ref 0))
(((mk_holder__ref (holder__content us_rep2)))))
(define-fun holder__ref___projection ((a holder__ref)) us_rep2 (holder__content
                                                               a))

(declare-const a us_t)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const e Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun dynamic_property5 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq11 (integer integer) Bool)

(declare-const dummy11 integer)

(declare-datatypes ((tT16bP1__ref 0))
(((mk_tT16bP1__ref (tT16bP1__content integer)))))
(define-fun tT16bP1__ref___projection ((a1 tT16bP1__ref)) integer (tT16bP1__content
                                                                  a1))

(declare-sort t3 0)

(declare-fun first6 (t3) integer)

(declare-fun last6 (t3) integer)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first6 (mk3 f l))) f)
     (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)) )))

(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property5 range_first range_last low)
                   (dynamic_property5 range_first range_last high))))))

(declare-datatypes ((us_t3 0))
(((mk___t3 (elts3 (Array Int natural))(rt3 t3)))))
(define-fun to_array3 ((a1 us_t3)) (Array Int natural) (elts3 a1))

(define-fun of_array3 ((a1 (Array Int natural)) (f Int)
  (l Int)) us_t3 (mk___t3 a1 (mk3 f l)))

(define-fun first7 ((a1 us_t3)) Int (to_rep1 (first6 (rt3 a1))))

(define-fun last7 ((a1 us_t3)) Int (to_rep1 (last6 (rt3 a1))))

(define-fun length3 ((a1 us_t3)) Int (ite (<= (first7 a1) (last7 a1))
                                     (+ (- (last7 a1) (first7 a1)) 1) 0))

(declare-const value__size6 Int)

(declare-fun object__size6 ((Array Int natural)) Int)

(declare-const value__component__size3 Int)

(declare-fun object__component__size3 ((Array Int natural)) Int)

(declare-const value__alignment6 Int)

(declare-fun object__alignment6 ((Array Int natural)) Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (forall ((a1 (Array Int natural))) (<= 0 (object__size6 a1))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a1 (Array Int natural))) (<= 0 (object__component__size3 a1))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

;; object__alignment_axiom
  (assert (forall ((a1 (Array Int natural))) (<= 0 (object__alignment6 a1))))

(define-fun bool_eq7 ((x us_t3)
  (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first6 (rt3 x)))
                  (to_rep1 (last6 (rt3 x))) (elts3 y)
                  (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))

(declare-fun user_eq12 (us_t3 us_t3) Bool)

(declare-const dummy12 us_t3)

(declare-datatypes ((t16b__ref 0)) (((mk_t16b__ref (t16b__content us_t3)))))
(define-fun t16b__ref___projection ((a1 t16b__ref)) us_t3 (t16b__content a1))

(declare-datatypes ((us_split_fields6 0))
(((mk___split_fields3 (rec__static_discr__i_holder__content2 us_t3)))))
(define-fun us_split_fields_Content__8__projection ((a1 us_split_fields6)) us_t3
  (rec__static_discr__i_holder__content2 a1))

(declare-datatypes ((us_split_fields__ref3 0))
(((mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___8__projection ((a1 us_split_fields__ref3)) us_split_fields6
  (us_split_fields__content3 a1))

(declare-datatypes ((us_rep3 0))
(((mk___rep3
  (us_split_discrs5 us_split_discrs)(us_split_fields7 us_split_fields6)))))
(define-fun us_rep___15__projection ((a1 us_rep3)) us_split_discrs (us_split_discrs5
                                                                   a1))

(define-fun us_rep___16__projection ((a1 us_rep3)) us_split_fields6 (us_split_fields7
                                                                    a1))

(define-fun to_base1 ((a1 us_rep3)) us_rep (mk___rep (us_split_discrs5 a1)
                                           (mk___split_fields
                                           (let ((temp___139 (rec__static_discr__i_holder__content2
                                                             (us_split_fields7
                                                             a1))))
                                           (of_array1 (to_array3 temp___139)
                                           (first7 temp___139)
                                           (last7 temp___139))))))

(define-fun of_base1 ((r us_rep)) us_rep3 (mk___rep3 (us_split_discrs1 r)
                                          (mk___split_fields3
                                          (let ((temp___138 (rec__static_discr__i_holder__content
                                                            (us_split_fields1
                                                            r))))
                                          (of_array3 (to_array1 temp___138)
                                          (first3 temp___138)
                                          (last3 temp___138))))))

(define-fun bool_eq8 ((a1 us_rep3)
  (b us_rep3)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__static_discr__i_holder__unused
                            (us_split_discrs5 a1))) (to_rep
                                                    (rec__static_discr__i_holder__unused
                                                    (us_split_discrs5 b))))
                         (= (to_rep
                            (rec__static_discr__i_holder__c
                            (us_split_discrs5 a1))) (to_rep
                                                    (rec__static_discr__i_holder__c
                                                    (us_split_discrs5 b)))))
                         (= (bool_eq7
                            (rec__static_discr__i_holder__content2
                            (us_split_fields7 a1))
                            (rec__static_discr__i_holder__content2
                            (us_split_fields7 b))) true))
                    true false))

(define-fun in_range5 ((rec__static_discr__i_holder__unused1 Int)
  (rec__static_discr__i_holder__c1 Int)
  (a1 us_rep)) Bool (and
                    (= rec__static_discr__i_holder__unused1 (to_rep
                                                            (rec__static_discr__i_holder__unused
                                                            (us_split_discrs1
                                                            a1))))
                    (= rec__static_discr__i_holder__c1 (to_rep
                                                       (rec__static_discr__i_holder__c
                                                       (us_split_discrs1 a1))))))

(declare-const value__size7 Int)

(declare-fun object__size7 (us_rep3) Int)

(declare-const value__alignment7 Int)

(declare-fun object__alignment7 (us_rep3) Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (forall ((a1 us_rep3)) (<= 0 (object__size7 a1))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment7))

;; object__alignment_axiom
  (assert (forall ((a1 us_rep3)) (<= 0 (object__alignment7 a1))))

(declare-const static_discr__i_holder__unused__first__bit2 Int)

(declare-const static_discr__i_holder__unused__last__bit2 Int)

(declare-const static_discr__i_holder__unused__position2 Int)

;; static_discr__i_holder__unused__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__unused__first__bit2))

;; static_discr__i_holder__unused__last__bit_axiom
  (assert
  (< static_discr__i_holder__unused__first__bit2 static_discr__i_holder__unused__last__bit2))

;; static_discr__i_holder__unused__position_axiom
  (assert (<= 0 static_discr__i_holder__unused__position2))

(declare-const static_discr__i_holder__c__first__bit2 Int)

(declare-const static_discr__i_holder__c__last__bit2 Int)

(declare-const static_discr__i_holder__c__position2 Int)

;; static_discr__i_holder__c__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__c__first__bit2))

;; static_discr__i_holder__c__last__bit_axiom
  (assert
  (< static_discr__i_holder__c__first__bit2 static_discr__i_holder__c__last__bit2))

;; static_discr__i_holder__c__position_axiom
  (assert (<= 0 static_discr__i_holder__c__position2))

(declare-const static_discr__i_holder__content__first__bit2 Int)

(declare-const static_discr__i_holder__content__last__bit2 Int)

(declare-const static_discr__i_holder__content__position2 Int)

;; static_discr__i_holder__content__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__content__first__bit2))

;; static_discr__i_holder__content__last__bit_axiom
  (assert
  (< static_discr__i_holder__content__first__bit2 static_discr__i_holder__content__last__bit2))

;; static_discr__i_holder__content__position_axiom
  (assert (<= 0 static_discr__i_holder__content__position2))

(declare-fun user_eq13 (us_rep3 us_rep3) Bool)

(declare-const dummy13 us_rep3)

(declare-datatypes ((t15b__ref 0))
(((mk_t15b__ref (t15b__content us_rep3)))))
(define-fun t15b__ref___projection ((a1 t15b__ref)) us_rep3 (t15b__content
                                                            a1))

(declare-datatypes ((us_split_fields8 0))
(((mk___split_fields4
  (rec__static_discr__holder__content1 us_rep3)(rec__static_discr__holder__length1 natural)))))
(define-fun us_split_fields_Content__9__projection ((a1 us_split_fields8)) us_rep3
  (rec__static_discr__holder__content1 a1))

(define-fun us_split_fields_Length__4__projection ((a1 us_split_fields8)) natural
  (rec__static_discr__holder__length1 a1))

(declare-datatypes ((us_split_fields__ref4 0))
(((mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___9__projection ((a1 us_split_fields__ref4)) us_split_fields8
  (us_split_fields__content4 a1))

(declare-datatypes ((us_rep4 0))
(((mk___rep4
  (us_split_discrs6 us_split_discrs3)(us_split_fields9 us_split_fields8)))))
(define-fun us_rep___17__projection ((a1 us_rep4)) us_split_discrs3 (us_split_discrs6
                                                                    a1))

(define-fun us_rep___18__projection ((a1 us_rep4)) us_split_fields8 (us_split_fields9
                                                                    a1))

(define-fun to_base2 ((a1 us_rep4)) us_rep2 (mk___rep2 (us_split_discrs6 a1)
                                            (mk___split_fields2
                                            (of_base
                                            (to_base1
                                            (rec__static_discr__holder__content1
                                            (us_split_fields9 a1))))
                                            (rec__static_discr__holder__length1
                                            (us_split_fields9 a1)))))

(define-fun of_base2 ((r us_rep2)) us_rep4 (mk___rep4 (us_split_discrs4 r)
                                           (mk___split_fields4
                                           (of_base1
                                           (to_base
                                           (rec__static_discr__holder__content
                                           (us_split_fields5 r))))
                                           (rec__static_discr__holder__length
                                           (us_split_fields5 r)))))

(define-fun bool_eq9 ((a1 us_rep4)
  (b us_rep4)) Bool (ite (and
                         (and
                         (and
                         (= (to_rep
                            (rec__static_discr__holder__unused
                            (us_split_discrs6 a1))) (to_rep
                                                    (rec__static_discr__holder__unused
                                                    (us_split_discrs6 b))))
                         (= (to_rep
                            (rec__static_discr__holder__c
                            (us_split_discrs6 a1))) (to_rep
                                                    (rec__static_discr__holder__c
                                                    (us_split_discrs6 b)))))
                         (= (bool_eq8
                            (rec__static_discr__holder__content1
                            (us_split_fields9 a1))
                            (rec__static_discr__holder__content1
                            (us_split_fields9 b))) true))
                         (= (to_rep
                            (rec__static_discr__holder__length1
                            (us_split_fields9 a1))) (to_rep
                                                    (rec__static_discr__holder__length1
                                                    (us_split_fields9 b)))))
                    true false))

(define-fun in_range6 ((rec__static_discr__holder__unused1 Int)
  (rec__static_discr__holder__c1 Int)
  (a1 us_rep2)) Bool (and
                     (= rec__static_discr__holder__unused1 (to_rep
                                                           (rec__static_discr__holder__unused
                                                           (us_split_discrs4
                                                           a1))))
                     (= rec__static_discr__holder__c1 (to_rep
                                                      (rec__static_discr__holder__c
                                                      (us_split_discrs4 a1))))))

(declare-const value__size8 Int)

(declare-fun object__size8 (us_rep4) Int)

(declare-const value__alignment8 Int)

(declare-fun object__alignment8 (us_rep4) Int)

;; value__size_axiom
  (assert (<= 0 value__size8))

;; object__size_axiom
  (assert (forall ((a1 us_rep4)) (<= 0 (object__size8 a1))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment8))

;; object__alignment_axiom
  (assert (forall ((a1 us_rep4)) (<= 0 (object__alignment8 a1))))

(declare-const static_discr__holder__unused__first__bit1 Int)

(declare-const static_discr__holder__unused__last__bit1 Int)

(declare-const static_discr__holder__unused__position1 Int)

;; static_discr__holder__unused__first__bit_axiom
  (assert (<= 0 static_discr__holder__unused__first__bit1))

;; static_discr__holder__unused__last__bit_axiom
  (assert
  (< static_discr__holder__unused__first__bit1 static_discr__holder__unused__last__bit1))

;; static_discr__holder__unused__position_axiom
  (assert (<= 0 static_discr__holder__unused__position1))

(declare-const static_discr__holder__c__first__bit1 Int)

(declare-const static_discr__holder__c__last__bit1 Int)

(declare-const static_discr__holder__c__position1 Int)

;; static_discr__holder__c__first__bit_axiom
  (assert (<= 0 static_discr__holder__c__first__bit1))

;; static_discr__holder__c__last__bit_axiom
  (assert
  (< static_discr__holder__c__first__bit1 static_discr__holder__c__last__bit1))

;; static_discr__holder__c__position_axiom
  (assert (<= 0 static_discr__holder__c__position1))

(declare-const static_discr__holder__content__first__bit1 Int)

(declare-const static_discr__holder__content__last__bit1 Int)

(declare-const static_discr__holder__content__position1 Int)

;; static_discr__holder__content__first__bit_axiom
  (assert (<= 0 static_discr__holder__content__first__bit1))

;; static_discr__holder__content__last__bit_axiom
  (assert
  (< static_discr__holder__content__first__bit1 static_discr__holder__content__last__bit1))

;; static_discr__holder__content__position_axiom
  (assert (<= 0 static_discr__holder__content__position1))

(declare-const static_discr__holder__length__first__bit1 Int)

(declare-const static_discr__holder__length__last__bit1 Int)

(declare-const static_discr__holder__length__position1 Int)

;; static_discr__holder__length__first__bit_axiom
  (assert (<= 0 static_discr__holder__length__first__bit1))

;; static_discr__holder__length__last__bit_axiom
  (assert
  (< static_discr__holder__length__first__bit1 static_discr__holder__length__last__bit1))

;; static_discr__holder__length__position_axiom
  (assert (<= 0 static_discr__holder__length__position1))

(declare-fun user_eq14 (us_rep4 us_rep4) Bool)

(declare-const dummy14 us_rep4)

(declare-datatypes ((my_holder__ref 0))
(((mk_my_holder__ref (my_holder__content us_rep4)))))
(define-fun my_holder__ref___projection ((a1 my_holder__ref)) us_rep4
  (my_holder__content a1))

(define-fun dynamic_invariant2 ((temp___expr_224 us_rep4)
  (temp___is_init_221 Bool) (temp___skip_constant_222 Bool)
  (temp___do_toplevel_223 Bool)) Bool (and
                                      (=>
                                      (not (= temp___skip_constant_222 true))
                                      (in_range6 (last1 a) (last1 a)
                                      (to_base2 temp___expr_224)))
                                      (and (in_range5 (last1 a) (last1 a)
                                      (to_base1
                                      (rec__static_discr__holder__content1
                                      (us_split_fields9 temp___expr_224))))
                                      (and (dynamic_property6 1 (last1 a)
                                      (first7
                                      (rec__static_discr__i_holder__content2
                                      (us_split_fields7
                                      (rec__static_discr__holder__content1
                                      (us_split_fields9 temp___expr_224)))))
                                      (last7
                                      (rec__static_discr__i_holder__content2
                                      (us_split_fields7
                                      (rec__static_discr__holder__content1
                                      (us_split_fields9 temp___expr_224))))))
                                      (and
                                      (= (first7
                                         (rec__static_discr__i_holder__content2
                                         (us_split_fields7
                                         (rec__static_discr__holder__content1
                                         (us_split_fields9 temp___expr_224))))) 1)
                                      (= (last7
                                         (rec__static_discr__i_holder__content2
                                         (us_split_fields7
                                         (rec__static_discr__holder__content1
                                         (us_split_fields9 temp___expr_224)))))
                                      (last1 a)))))))

(define-fun default_initial_assumption ((temp___expr_230 us_rep4)
  (temp___skip_top_level_231 Bool)) Bool (and
                                         (and
                                         (= (to_rep
                                            (rec__static_discr__holder__unused
                                            (us_split_discrs6
                                            temp___expr_230))) (last1 a))
                                         (= (to_rep
                                            (rec__static_discr__holder__c
                                            (us_split_discrs6
                                            temp___expr_230))) (last1 a)))
                                         (and
                                         (= (to_rep
                                            (rec__static_discr__i_holder__unused
                                            (us_split_discrs5
                                            (rec__static_discr__holder__content1
                                            (us_split_fields9
                                            temp___expr_230))))) (last1 a))
                                         (= (to_rep
                                            (rec__static_discr__i_holder__c
                                            (us_split_discrs5
                                            (rec__static_discr__holder__content1
                                            (us_split_fields9
                                            temp___expr_230))))) (last1 a)))))

(define-fun dynamic_property7 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq15 (integer integer) Bool)

(declare-const dummy15 integer)

(declare-datatypes ((tT25bP1__ref 0))
(((mk_tT25bP1__ref (tT25bP1__content integer)))))
(define-fun tT25bP1__ref___projection ((a1 tT25bP1__ref)) integer (tT25bP1__content
                                                                  a1))

(declare-sort t4 0)

(declare-fun first8 (t4) integer)

(declare-fun last8 (t4) integer)

(declare-fun mk4 (Int Int) t4)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first8 (mk4 f l))) f)
     (= (to_rep1 (last8 (mk4 f l))) l)))) :pattern ((mk4 f l)) )))

(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property7 range_first range_last low)
                   (dynamic_property7 range_first range_last high))))))

(declare-datatypes ((us_t4 0))
(((mk___t4 (elts4 (Array Int natural))(rt4 t4)))))
(define-fun to_array4 ((a1 us_t4)) (Array Int natural) (elts4 a1))

(define-fun of_array4 ((a1 (Array Int natural)) (f Int)
  (l Int)) us_t4 (mk___t4 a1 (mk4 f l)))

(define-fun first9 ((a1 us_t4)) Int (to_rep1 (first8 (rt4 a1))))

(define-fun last9 ((a1 us_t4)) Int (to_rep1 (last8 (rt4 a1))))

(define-fun length4 ((a1 us_t4)) Int (ite (<= (first9 a1) (last9 a1))
                                     (+ (- (last9 a1) (first9 a1)) 1) 0))

(declare-const value__size9 Int)

(declare-fun object__size9 ((Array Int natural)) Int)

(declare-const value__component__size4 Int)

(declare-fun object__component__size4 ((Array Int natural)) Int)

(declare-const value__alignment9 Int)

(declare-fun object__alignment9 ((Array Int natural)) Int)

;; value__size_axiom
  (assert (<= 0 value__size9))

;; object__size_axiom
  (assert (forall ((a1 (Array Int natural))) (<= 0 (object__size9 a1))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size4))

;; object__component__size_axiom
  (assert
  (forall ((a1 (Array Int natural))) (<= 0 (object__component__size4 a1))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment9))

;; object__alignment_axiom
  (assert (forall ((a1 (Array Int natural))) (<= 0 (object__alignment9 a1))))

(define-fun bool_eq10 ((x us_t4)
  (y us_t4)) Bool (bool_eq (elts4 x) (to_rep1 (first8 (rt4 x)))
                  (to_rep1 (last8 (rt4 x))) (elts4 y)
                  (to_rep1 (first8 (rt4 y))) (to_rep1 (last8 (rt4 y)))))

(declare-fun user_eq16 (us_t4 us_t4) Bool)

(declare-const dummy16 us_t4)

(declare-datatypes ((t25b__ref 0)) (((mk_t25b__ref (t25b__content us_t4)))))
(define-fun t25b__ref___projection ((a1 t25b__ref)) us_t4 (t25b__content a1))

(declare-datatypes ((us_split_fields10 0))
(((mk___split_fields5 (rec__static_discr__i_holder__content3 us_t4)))))
(define-fun us_split_fields_Content__10__projection ((a1 us_split_fields10)) us_t4
  (rec__static_discr__i_holder__content3 a1))

(declare-datatypes ((us_split_fields__ref5 0))
(((mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___10__projection ((a1 us_split_fields__ref5)) us_split_fields10
  (us_split_fields__content5 a1))

(declare-datatypes ((us_rep5 0))
(((mk___rep5
  (us_split_discrs7 us_split_discrs)(us_split_fields11 us_split_fields10)))))
(define-fun us_rep___19__projection ((a1 us_rep5)) us_split_discrs (us_split_discrs7
                                                                   a1))

(define-fun us_rep___20__projection ((a1 us_rep5)) us_split_fields10
  (us_split_fields11 a1))

(define-fun to_base3 ((a1 us_rep5)) us_rep (mk___rep (us_split_discrs7 a1)
                                           (mk___split_fields
                                           (let ((temp___141 (rec__static_discr__i_holder__content3
                                                             (us_split_fields11
                                                             a1))))
                                           (of_array1 (to_array4 temp___141)
                                           (first9 temp___141)
                                           (last9 temp___141))))))

(define-fun of_base3 ((r us_rep)) us_rep5 (mk___rep5 (us_split_discrs1 r)
                                          (mk___split_fields5
                                          (let ((temp___140 (rec__static_discr__i_holder__content
                                                            (us_split_fields1
                                                            r))))
                                          (of_array4 (to_array1 temp___140)
                                          (first3 temp___140)
                                          (last3 temp___140))))))

(define-fun bool_eq11 ((a1 us_rep5)
  (b us_rep5)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__static_discr__i_holder__unused
                            (us_split_discrs7 a1))) (to_rep
                                                    (rec__static_discr__i_holder__unused
                                                    (us_split_discrs7 b))))
                         (= (to_rep
                            (rec__static_discr__i_holder__c
                            (us_split_discrs7 a1))) (to_rep
                                                    (rec__static_discr__i_holder__c
                                                    (us_split_discrs7 b)))))
                         (= (bool_eq10
                            (rec__static_discr__i_holder__content3
                            (us_split_fields11 a1))
                            (rec__static_discr__i_holder__content3
                            (us_split_fields11 b))) true))
                    true false))

(define-fun in_range7 ((rec__static_discr__i_holder__unused1 Int)
  (rec__static_discr__i_holder__c1 Int)
  (a1 us_rep)) Bool (and
                    (= rec__static_discr__i_holder__unused1 (to_rep
                                                            (rec__static_discr__i_holder__unused
                                                            (us_split_discrs1
                                                            a1))))
                    (= rec__static_discr__i_holder__c1 (to_rep
                                                       (rec__static_discr__i_holder__c
                                                       (us_split_discrs1 a1))))))

(declare-const value__size10 Int)

(declare-fun object__size10 (us_rep5) Int)

(declare-const value__alignment10 Int)

(declare-fun object__alignment10 (us_rep5) Int)

;; value__size_axiom
  (assert (<= 0 value__size10))

;; object__size_axiom
  (assert (forall ((a1 us_rep5)) (<= 0 (object__size10 a1))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment10))

;; object__alignment_axiom
  (assert (forall ((a1 us_rep5)) (<= 0 (object__alignment10 a1))))

(declare-const static_discr__i_holder__unused__first__bit3 Int)

(declare-const static_discr__i_holder__unused__last__bit3 Int)

(declare-const static_discr__i_holder__unused__position3 Int)

;; static_discr__i_holder__unused__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__unused__first__bit3))

;; static_discr__i_holder__unused__last__bit_axiom
  (assert
  (< static_discr__i_holder__unused__first__bit3 static_discr__i_holder__unused__last__bit3))

;; static_discr__i_holder__unused__position_axiom
  (assert (<= 0 static_discr__i_holder__unused__position3))

(declare-const static_discr__i_holder__c__first__bit3 Int)

(declare-const static_discr__i_holder__c__last__bit3 Int)

(declare-const static_discr__i_holder__c__position3 Int)

;; static_discr__i_holder__c__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__c__first__bit3))

;; static_discr__i_holder__c__last__bit_axiom
  (assert
  (< static_discr__i_holder__c__first__bit3 static_discr__i_holder__c__last__bit3))

;; static_discr__i_holder__c__position_axiom
  (assert (<= 0 static_discr__i_holder__c__position3))

(declare-const static_discr__i_holder__content__first__bit3 Int)

(declare-const static_discr__i_holder__content__last__bit3 Int)

(declare-const static_discr__i_holder__content__position3 Int)

;; static_discr__i_holder__content__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__content__first__bit3))

;; static_discr__i_holder__content__last__bit_axiom
  (assert
  (< static_discr__i_holder__content__first__bit3 static_discr__i_holder__content__last__bit3))

;; static_discr__i_holder__content__position_axiom
  (assert (<= 0 static_discr__i_holder__content__position3))

(declare-fun user_eq17 (us_rep5 us_rep5) Bool)

(declare-const dummy17 us_rep5)

(declare-datatypes ((t24b__ref 0))
(((mk_t24b__ref (t24b__content us_rep5)))))
(define-fun t24b__ref___projection ((a1 t24b__ref)) us_rep5 (t24b__content
                                                            a1))

(declare-datatypes ((us_split_fields12 0))
(((mk___split_fields6
  (rec__static_discr__holder__content2 us_rep5)(rec__static_discr__holder__length2 natural)))))
(define-fun us_split_fields_Content__11__projection ((a1 us_split_fields12)) us_rep5
  (rec__static_discr__holder__content2 a1))

(define-fun us_split_fields_Length__5__projection ((a1 us_split_fields12)) natural
  (rec__static_discr__holder__length2 a1))

(declare-datatypes ((us_split_fields__ref6 0))
(((mk___split_fields__ref6 (us_split_fields__content6 us_split_fields12)))))
(define-fun us_split_fields__ref___11__projection ((a1 us_split_fields__ref6)) us_split_fields12
  (us_split_fields__content6 a1))

(declare-datatypes ((us_rep6 0))
(((mk___rep6
  (us_split_discrs8 us_split_discrs3)(us_split_fields13 us_split_fields12)))))
(define-fun us_rep___21__projection ((a1 us_rep6)) us_split_discrs3 (us_split_discrs8
                                                                    a1))

(define-fun us_rep___22__projection ((a1 us_rep6)) us_split_fields12
  (us_split_fields13 a1))

(define-fun to_base4 ((a1 us_rep6)) us_rep2 (mk___rep2 (us_split_discrs8 a1)
                                            (mk___split_fields2
                                            (of_base
                                            (to_base3
                                            (rec__static_discr__holder__content2
                                            (us_split_fields13 a1))))
                                            (rec__static_discr__holder__length2
                                            (us_split_fields13 a1)))))

(define-fun of_base4 ((r us_rep2)) us_rep6 (mk___rep6 (us_split_discrs4 r)
                                           (mk___split_fields6
                                           (of_base3
                                           (to_base
                                           (rec__static_discr__holder__content
                                           (us_split_fields5 r))))
                                           (rec__static_discr__holder__length
                                           (us_split_fields5 r)))))

(define-fun bool_eq12 ((a1 us_rep6)
  (b us_rep6)) Bool (ite (and
                         (and
                         (and
                         (= (to_rep
                            (rec__static_discr__holder__unused
                            (us_split_discrs8 a1))) (to_rep
                                                    (rec__static_discr__holder__unused
                                                    (us_split_discrs8 b))))
                         (= (to_rep
                            (rec__static_discr__holder__c
                            (us_split_discrs8 a1))) (to_rep
                                                    (rec__static_discr__holder__c
                                                    (us_split_discrs8 b)))))
                         (= (bool_eq11
                            (rec__static_discr__holder__content2
                            (us_split_fields13 a1))
                            (rec__static_discr__holder__content2
                            (us_split_fields13 b))) true))
                         (= (to_rep
                            (rec__static_discr__holder__length2
                            (us_split_fields13 a1))) (to_rep
                                                     (rec__static_discr__holder__length2
                                                     (us_split_fields13 b)))))
                    true false))

(define-fun in_range8 ((rec__static_discr__holder__unused1 Int)
  (rec__static_discr__holder__c1 Int)
  (a1 us_rep2)) Bool (and
                     (= rec__static_discr__holder__unused1 (to_rep
                                                           (rec__static_discr__holder__unused
                                                           (us_split_discrs4
                                                           a1))))
                     (= rec__static_discr__holder__c1 (to_rep
                                                      (rec__static_discr__holder__c
                                                      (us_split_discrs4 a1))))))

(declare-const value__size11 Int)

(declare-fun object__size11 (us_rep6) Int)

(declare-const value__alignment11 Int)

(declare-fun object__alignment11 (us_rep6) Int)

;; value__size_axiom
  (assert (<= 0 value__size11))

;; object__size_axiom
  (assert (forall ((a1 us_rep6)) (<= 0 (object__size11 a1))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment11))

;; object__alignment_axiom
  (assert (forall ((a1 us_rep6)) (<= 0 (object__alignment11 a1))))

(declare-const static_discr__holder__unused__first__bit2 Int)

(declare-const static_discr__holder__unused__last__bit2 Int)

(declare-const static_discr__holder__unused__position2 Int)

;; static_discr__holder__unused__first__bit_axiom
  (assert (<= 0 static_discr__holder__unused__first__bit2))

;; static_discr__holder__unused__last__bit_axiom
  (assert
  (< static_discr__holder__unused__first__bit2 static_discr__holder__unused__last__bit2))

;; static_discr__holder__unused__position_axiom
  (assert (<= 0 static_discr__holder__unused__position2))

(declare-const static_discr__holder__c__first__bit2 Int)

(declare-const static_discr__holder__c__last__bit2 Int)

(declare-const static_discr__holder__c__position2 Int)

;; static_discr__holder__c__first__bit_axiom
  (assert (<= 0 static_discr__holder__c__first__bit2))

;; static_discr__holder__c__last__bit_axiom
  (assert
  (< static_discr__holder__c__first__bit2 static_discr__holder__c__last__bit2))

;; static_discr__holder__c__position_axiom
  (assert (<= 0 static_discr__holder__c__position2))

(declare-const static_discr__holder__content__first__bit2 Int)

(declare-const static_discr__holder__content__last__bit2 Int)

(declare-const static_discr__holder__content__position2 Int)

;; static_discr__holder__content__first__bit_axiom
  (assert (<= 0 static_discr__holder__content__first__bit2))

;; static_discr__holder__content__last__bit_axiom
  (assert
  (< static_discr__holder__content__first__bit2 static_discr__holder__content__last__bit2))

;; static_discr__holder__content__position_axiom
  (assert (<= 0 static_discr__holder__content__position2))

(declare-const static_discr__holder__length__first__bit2 Int)

(declare-const static_discr__holder__length__last__bit2 Int)

(declare-const static_discr__holder__length__position2 Int)

;; static_discr__holder__length__first__bit_axiom
  (assert (<= 0 static_discr__holder__length__first__bit2))

;; static_discr__holder__length__last__bit_axiom
  (assert
  (< static_discr__holder__length__first__bit2 static_discr__holder__length__last__bit2))

;; static_discr__holder__length__position_axiom
  (assert (<= 0 static_discr__holder__length__position2))

(declare-fun user_eq18 (us_rep6 us_rep6) Bool)

(declare-const dummy18 us_rep6)

(declare-datatypes ((t23b__ref 0))
(((mk_t23b__ref (t23b__content us_rep6)))))
(define-fun t23b__ref___projection ((a1 t23b__ref)) us_rep6 (t23b__content
                                                            a1))

(define-fun dynamic_property9 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq19 (integer integer) Bool)

(declare-const dummy19 integer)

(declare-datatypes ((tT27bP1__ref 0))
(((mk_tT27bP1__ref (tT27bP1__content integer)))))
(define-fun tT27bP1__ref___projection ((a1 tT27bP1__ref)) integer (tT27bP1__content
                                                                  a1))

(declare-sort t5 0)

(declare-fun first10 (t5) integer)

(declare-fun last10 (t5) integer)

(declare-fun mk5 (Int Int) t5)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first10 (mk5 f l))) f)
     (= (to_rep1 (last10 (mk5 f l))) l)))) :pattern ((mk5 f l)) )))

(define-fun dynamic_property10 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property9 range_first range_last low)
                   (dynamic_property9 range_first range_last high))))))

(declare-datatypes ((us_t5 0))
(((mk___t5 (elts5 (Array Int natural))(rt5 t5)))))
(define-fun to_array5 ((a1 us_t5)) (Array Int natural) (elts5 a1))

(define-fun of_array5 ((a1 (Array Int natural)) (f Int)
  (l Int)) us_t5 (mk___t5 a1 (mk5 f l)))

(define-fun first11 ((a1 us_t5)) Int (to_rep1 (first10 (rt5 a1))))

(define-fun last11 ((a1 us_t5)) Int (to_rep1 (last10 (rt5 a1))))

(define-fun length5 ((a1 us_t5)) Int (ite (<= (first11 a1) (last11 a1))
                                     (+ (- (last11 a1) (first11 a1)) 1) 0))

(declare-const value__size12 Int)

(declare-fun object__size12 ((Array Int natural)) Int)

(declare-const value__component__size5 Int)

(declare-fun object__component__size5 ((Array Int natural)) Int)

(declare-const value__alignment12 Int)

(declare-fun object__alignment12 ((Array Int natural)) Int)

;; value__size_axiom
  (assert (<= 0 value__size12))

;; object__size_axiom
  (assert (forall ((a1 (Array Int natural))) (<= 0 (object__size12 a1))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size5))

;; object__component__size_axiom
  (assert
  (forall ((a1 (Array Int natural))) (<= 0 (object__component__size5 a1))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment12))

;; object__alignment_axiom
  (assert
  (forall ((a1 (Array Int natural))) (<= 0 (object__alignment12 a1))))

(define-fun bool_eq13 ((x us_t5)
  (y us_t5)) Bool (bool_eq (elts5 x) (to_rep1 (first10 (rt5 x)))
                  (to_rep1 (last10 (rt5 x))) (elts5 y)
                  (to_rep1 (first10 (rt5 y))) (to_rep1 (last10 (rt5 y)))))

(declare-fun user_eq20 (us_t5 us_t5) Bool)

(declare-const dummy20 us_t5)

(declare-datatypes ((t27b__ref 0)) (((mk_t27b__ref (t27b__content us_t5)))))
(define-fun t27b__ref___projection ((a1 t27b__ref)) us_t5 (t27b__content a1))

(declare-datatypes ((us_split_fields14 0))
(((mk___split_fields7 (rec__static_discr__i_holder__content4 us_t5)))))
(define-fun us_split_fields_Content__12__projection ((a1 us_split_fields14)) us_t5
  (rec__static_discr__i_holder__content4 a1))

(declare-datatypes ((us_split_fields__ref7 0))
(((mk___split_fields__ref7 (us_split_fields__content7 us_split_fields14)))))
(define-fun us_split_fields__ref___12__projection ((a1 us_split_fields__ref7)) us_split_fields14
  (us_split_fields__content7 a1))

(declare-datatypes ((us_rep7 0))
(((mk___rep7
  (us_split_discrs9 us_split_discrs)(us_split_fields15 us_split_fields14)))))
(define-fun us_rep___23__projection ((a1 us_rep7)) us_split_discrs (us_split_discrs9
                                                                   a1))

(define-fun us_rep___24__projection ((a1 us_rep7)) us_split_fields14
  (us_split_fields15 a1))

(define-fun to_base5 ((a1 us_rep7)) us_rep (mk___rep (us_split_discrs9 a1)
                                           (mk___split_fields
                                           (let ((temp___143 (rec__static_discr__i_holder__content4
                                                             (us_split_fields15
                                                             a1))))
                                           (of_array1 (to_array5 temp___143)
                                           (first11 temp___143)
                                           (last11 temp___143))))))

(define-fun of_base5 ((r us_rep)) us_rep7 (mk___rep7 (us_split_discrs1 r)
                                          (mk___split_fields7
                                          (let ((temp___142 (rec__static_discr__i_holder__content
                                                            (us_split_fields1
                                                            r))))
                                          (of_array5 (to_array1 temp___142)
                                          (first3 temp___142)
                                          (last3 temp___142))))))

(define-fun bool_eq14 ((a1 us_rep7)
  (b us_rep7)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__static_discr__i_holder__unused
                            (us_split_discrs9 a1))) (to_rep
                                                    (rec__static_discr__i_holder__unused
                                                    (us_split_discrs9 b))))
                         (= (to_rep
                            (rec__static_discr__i_holder__c
                            (us_split_discrs9 a1))) (to_rep
                                                    (rec__static_discr__i_holder__c
                                                    (us_split_discrs9 b)))))
                         (= (bool_eq13
                            (rec__static_discr__i_holder__content4
                            (us_split_fields15 a1))
                            (rec__static_discr__i_holder__content4
                            (us_split_fields15 b))) true))
                    true false))

(define-fun in_range9 ((rec__static_discr__i_holder__unused1 Int)
  (rec__static_discr__i_holder__c1 Int)
  (a1 us_rep)) Bool (and
                    (= rec__static_discr__i_holder__unused1 (to_rep
                                                            (rec__static_discr__i_holder__unused
                                                            (us_split_discrs1
                                                            a1))))
                    (= rec__static_discr__i_holder__c1 (to_rep
                                                       (rec__static_discr__i_holder__c
                                                       (us_split_discrs1 a1))))))

(declare-const value__size13 Int)

(declare-fun object__size13 (us_rep7) Int)

(declare-const value__alignment13 Int)

(declare-fun object__alignment13 (us_rep7) Int)

;; value__size_axiom
  (assert (<= 0 value__size13))

;; object__size_axiom
  (assert (forall ((a1 us_rep7)) (<= 0 (object__size13 a1))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment13))

;; object__alignment_axiom
  (assert (forall ((a1 us_rep7)) (<= 0 (object__alignment13 a1))))

(declare-const static_discr__i_holder__unused__first__bit4 Int)

(declare-const static_discr__i_holder__unused__last__bit4 Int)

(declare-const static_discr__i_holder__unused__position4 Int)

;; static_discr__i_holder__unused__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__unused__first__bit4))

;; static_discr__i_holder__unused__last__bit_axiom
  (assert
  (< static_discr__i_holder__unused__first__bit4 static_discr__i_holder__unused__last__bit4))

;; static_discr__i_holder__unused__position_axiom
  (assert (<= 0 static_discr__i_holder__unused__position4))

(declare-const static_discr__i_holder__c__first__bit4 Int)

(declare-const static_discr__i_holder__c__last__bit4 Int)

(declare-const static_discr__i_holder__c__position4 Int)

;; static_discr__i_holder__c__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__c__first__bit4))

;; static_discr__i_holder__c__last__bit_axiom
  (assert
  (< static_discr__i_holder__c__first__bit4 static_discr__i_holder__c__last__bit4))

;; static_discr__i_holder__c__position_axiom
  (assert (<= 0 static_discr__i_holder__c__position4))

(declare-const static_discr__i_holder__content__first__bit4 Int)

(declare-const static_discr__i_holder__content__last__bit4 Int)

(declare-const static_discr__i_holder__content__position4 Int)

;; static_discr__i_holder__content__first__bit_axiom
  (assert (<= 0 static_discr__i_holder__content__first__bit4))

;; static_discr__i_holder__content__last__bit_axiom
  (assert
  (< static_discr__i_holder__content__first__bit4 static_discr__i_holder__content__last__bit4))

;; static_discr__i_holder__content__position_axiom
  (assert (<= 0 static_discr__i_holder__content__position4))

(declare-fun user_eq21 (us_rep7 us_rep7) Bool)

(declare-const dummy21 us_rep7)

(declare-datatypes ((t26b__ref 0))
(((mk_t26b__ref (t26b__content us_rep7)))))
(define-fun t26b__ref___projection ((a1 t26b__ref)) us_rep7 (t26b__content
                                                            a1))

(declare-const current__split_discrs us_split_discrs3)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range3
                                     temp___expr_39)))

(define-fun dynamic_invariant4 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant5 ((temp___expr_160 us_rep)
  (temp___is_init_157 Bool) (temp___skip_constant_158 Bool)
  (temp___do_toplevel_159 Bool)) Bool (let ((temp___162 (rec__static_discr__i_holder__c
                                                        (us_split_discrs1
                                                        temp___expr_160))))
                                      (and (dynamic_property2 1
                                      (to_rep temp___162)
                                      (first3
                                      (rec__static_discr__i_holder__content
                                      (us_split_fields1 temp___expr_160)))
                                      (last3
                                      (rec__static_discr__i_holder__content
                                      (us_split_fields1 temp___expr_160))))
                                      (and
                                      (= (first3
                                         (rec__static_discr__i_holder__content
                                         (us_split_fields1 temp___expr_160))) 1)
                                      (= (last3
                                         (rec__static_discr__i_holder__content
                                         (us_split_fields1 temp___expr_160)))
                                      (to_rep temp___162))))))

(define-fun dynamic_invariant6 ((temp___expr_167 us_rep2)
  (temp___is_init_164 Bool) (temp___skip_constant_165 Bool)
  (temp___do_toplevel_166 Bool)) Bool (let ((temp___169 (rec__static_discr__holder__c
                                                        (us_split_discrs4
                                                        temp___expr_167))))
                                      (and (in_range4
                                      (to_rep
                                      (rec__static_discr__holder__unused
                                      (us_split_discrs4 temp___expr_167)))
                                      (to_rep temp___169)
                                      (to_base
                                      (rec__static_discr__holder__content
                                      (us_split_fields5 temp___expr_167))))
                                      (and (dynamic_property4 1
                                      (to_rep temp___169)
                                      (first5
                                      (rec__static_discr__i_holder__content1
                                      (us_split_fields3
                                      (rec__static_discr__holder__content
                                      (us_split_fields5 temp___expr_167)))))
                                      (last5
                                      (rec__static_discr__i_holder__content1
                                      (us_split_fields3
                                      (rec__static_discr__holder__content
                                      (us_split_fields5 temp___expr_167))))))
                                      (and
                                      (= (first5
                                         (rec__static_discr__i_holder__content1
                                         (us_split_fields3
                                         (rec__static_discr__holder__content
                                         (us_split_fields5 temp___expr_167))))) 1)
                                      (= (last5
                                         (rec__static_discr__i_holder__content1
                                         (us_split_fields3
                                         (rec__static_discr__holder__content
                                         (us_split_fields5 temp___expr_167)))))
                                      (to_rep temp___169)))))))

;; H
  (assert (dynamic_invariant1 a true false true))

;; H
  (assert (in_range2 e))

;; H
  (assert
  (and (= (to_rep1 (first (rt a))) 1)
  (and (<= 0 (to_rep1 (last (rt a)))) (<= (to_rep1 (last (rt a))) 100))))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (in_range2 (to_rep1 (last (rt a))))))
(check-sat)
(exit)
