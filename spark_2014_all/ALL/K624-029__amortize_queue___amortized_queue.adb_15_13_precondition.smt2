;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort tcount_typeB 0)

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (tcount_typeB tcount_typeB) Bool)

(declare-const dummy1 tcount_typeB)

(declare-datatypes ((tcount_typeB__ref 0))
(((mk_tcount_typeB__ref (tcount_typeB__content tcount_typeB)))))
(define-fun tcount_typeB__ref___projection ((a tcount_typeB__ref)) tcount_typeB
  (tcount_typeB__content a))

(declare-sort index_type 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 1000)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (index_type index_type) Bool)

(declare-const dummy2 index_type)

(declare-datatypes ((index_type__ref 0))
(((mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref___projection ((a index_type__ref)) index_type
  (index_type__content a))

(declare-sort extended_index 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1001)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (extended_index extended_index) Bool)

(declare-const dummy3 extended_index)

(declare-datatypes ((extended_index__ref 0))
(((mk_extended_index__ref (extended_index__content extended_index)))))
(define-fun extended_index__ref___projection ((a extended_index__ref)) extended_index
  (extended_index__content a))

(define-fun dynamic_invariant ((temp___expr_207 Int)
  (temp___is_init_204 Bool) (temp___skip_constant_205 Bool)
  (temp___do_toplevel_206 Bool)) Bool (=>
                                      (or (= temp___is_init_204 true)
                                      (<= 0 1001)) (in_range4
                                      temp___expr_207)))

(declare-sort capacity_range 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 1000)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq4 (capacity_range capacity_range) Bool)

(declare-const dummy4 capacity_range)

(declare-datatypes ((capacity_range__ref 0))
(((mk_capacity_range__ref (capacity_range__content capacity_range)))))
(define-fun capacity_range__ref___projection ((a capacity_range__ref)) capacity_range
  (capacity_range__content a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-datatypes ((us_split_discrs 0))
(((mk___split_discrs
  (rec__amortized_queue__my_vectors__vector__capacity capacity_range)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) capacity_range
  (rec__amortized_queue__my_vectors__vector__capacity a))

(declare-datatypes ((us_split_discrs__ref 0))
(((mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ((us_split_fields 0))
(((mk___split_fields (rec__amortized_queue__my_vectors__vector us_main_type)))))
(define-fun us_split_fields_Vector__projection ((a us_split_fields)) us_main_type
  (rec__amortized_queue__my_vectors__vector a))

(declare-datatypes ((us_split_fields__ref 0))
(((mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((mk___rep
  (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const amortized_queue__my_vectors__vector__capacity__first__bit Int)

(declare-const amortized_queue__my_vectors__vector__capacity__last__bit Int)

(declare-const amortized_queue__my_vectors__vector__capacity__position Int)

;; amortized_queue__my_vectors__vector__capacity__first__bit_axiom
  (assert (<= 0 amortized_queue__my_vectors__vector__capacity__first__bit))

;; amortized_queue__my_vectors__vector__capacity__last__bit_axiom
  (assert
  (< amortized_queue__my_vectors__vector__capacity__first__bit amortized_queue__my_vectors__vector__capacity__last__bit))

;; amortized_queue__my_vectors__vector__capacity__position_axiom
  (assert (<= 0 amortized_queue__my_vectors__vector__capacity__position))

(declare-fun user_eq5 (us_rep us_rep) Bool)

(declare-const dummy5 us_rep)

(declare-datatypes ((vector__ref 0))
(((mk_vector__ref (vector__content us_rep)))))
(define-fun vector__ref___projection ((a vector__ref)) us_rep (vector__content
                                                              a))

(declare-fun length (us_rep) Int)

(declare-fun length__function_guard (Int us_rep) Bool)

(define-fun dynamic_invariant1 ((temp___expr_213 Int)
  (temp___is_init_210 Bool) (temp___skip_constant_211 Bool)
  (temp___do_toplevel_212 Bool)) Bool (=>
                                      (or (= temp___is_init_210 true)
                                      (<= 0 1000)) (in_range5
                                      temp___expr_213)))

(declare-fun to_rep (capacity_range) Int)

(declare-fun of_rep (Int) capacity_range)

;; inversion_axiom
  (assert
  (forall ((x capacity_range))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x capacity_range)) (! (in_range5
  (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(define-fun capacity ((container us_rep)) Int (ite (= (of_int 1) true)
                                              (to_rep
                                              (rec__amortized_queue__my_vectors__vector__capacity
                                              (us_split_discrs1 container)))
                                              1000))

(declare-fun capacity__function_guard (Int us_rep) Bool)

;; length__post_axiom
  (assert
  (forall ((container us_rep))
  (! (let ((result (length container)))
     (and (<= result (capacity container)) (dynamic_invariant1 result true
     false true))) :pattern ((length container)) )))

(declare-sort us_main_type1 0)

(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)

(declare-sort us_rep1 0)

(declare-fun bool_eq (us_rep1 us_rep1) Bool)

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep1) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))

(declare-fun user_eq6 (us_rep1 us_rep1) Bool)

(declare-const dummy6 us_rep1)

(declare-datatypes ((sequence__ref 0))
(((mk_sequence__ref (sequence__content us_rep1)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep1 (sequence__content
                                                                   a))

(declare-fun length1 (us_rep1) Int)

(declare-fun length__function_guard1 (Int us_rep1) Bool)

(define-fun last ((container us_rep1)) Int (+ 0 (length1 container)))

(declare-fun last__function_guard (Int us_rep1) Bool)

(declare-fun model__ (us_rep) us_rep1)

(declare-fun model____function_guard (us_rep1 us_rep) Bool)

(define-fun last_index ((container us_rep)) Int (last (model__ container)))

(declare-fun last_index__function_guard (Int us_rep) Bool)

(declare-fun get (us_rep1 Int) Int)

(declare-fun get__function_guard (Int us_rep1 Int) Bool)

(define-fun element ((container us_rep)
  (index Int)) Int (get (model__ container) index))

(declare-fun element__function_guard (Int us_rep Int) Bool)

(declare-sort element_type 0)

(define-fun in_range6 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (element_type element_type) Bool)

(declare-const dummy7 element_type)

(declare-datatypes ((element_type__ref 0))
(((mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___projection ((a element_type__ref)) element_type
  (element_type__content a))

(define-fun dynamic_invariant2 ((temp___expr_201 Int)
  (temp___is_init_198 Bool) (temp___skip_constant_199 Bool)
  (temp___do_toplevel_200 Bool)) Bool (=>
                                      (or (= temp___is_init_198 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range6 temp___expr_201)))

(declare-fun first_index__function_guard (Int us_rep) Bool)

(define-fun olt ((left us_rep1)
  (right us_rep1)) Bool (and (< (length1 left) (length1 right)) (ite
                                                                (forall
                                                                ((n Int))
                                                                (=>
                                                                (and (<= 1 n)
                                                                (<= n
                                                                (last left)))
                                                                (= (get left
                                                                   n)
                                                                (get right n))))
                                                                true false)))

(declare-fun olt__function_guard (Bool us_rep1 us_rep1) Bool)

(declare-const left us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const right us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const r2b Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(define-fun in_range7 ((rec__amortized_queue__my_vectors__vector__capacity1 Int)
  (a us_rep)) Bool (= rec__amortized_queue__my_vectors__vector__capacity1
  (to_rep
  (rec__amortized_queue__my_vectors__vector__capacity (us_split_discrs1 a)))))

(declare-const value__size2 Int)

(declare-fun object__size2 (us_rep) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))

(declare-const amortized_queue__my_vectors__vector__capacity__first__bit1 Int)

(declare-const amortized_queue__my_vectors__vector__capacity__last__bit1 Int)

(declare-const amortized_queue__my_vectors__vector__capacity__position1 Int)

;; amortized_queue__my_vectors__vector__capacity__first__bit_axiom
  (assert (<= 0 amortized_queue__my_vectors__vector__capacity__first__bit1))

;; amortized_queue__my_vectors__vector__capacity__last__bit_axiom
  (assert
  (< amortized_queue__my_vectors__vector__capacity__first__bit1 amortized_queue__my_vectors__vector__capacity__last__bit1))

;; amortized_queue__my_vectors__vector__capacity__position_axiom
  (assert (<= 0 amortized_queue__my_vectors__vector__capacity__position1))

(declare-fun user_eq8 (us_rep us_rep) Bool)

(declare-const dummy8 us_rep)

(declare-datatypes ((tresultS__ref 0))
(((mk_tresultS__ref (tresultS__content us_rep)))))
(define-fun tresultS__ref___projection ((a tresultS__ref)) us_rep (tresultS__content
                                                                  a))

(declare-fun is_empty (us_rep) Bool)

(declare-fun is_empty__function_guard (Bool us_rep) Bool)

(define-fun dynamic_invariant3 ((temp___expr_410 us_rep)
  (temp___is_init_407 Bool) (temp___skip_constant_408 Bool)
  (temp___do_toplevel_409 Bool)) Bool (=>
                                      (not (= temp___skip_constant_408 true))
                                      (in_range7 r2b temp___expr_410)))

(define-fun default_initial_assumption ((temp___expr_412 us_rep)
  (temp___skip_top_level_413 Bool)) Bool (and
                                         (= (to_rep
                                            (rec__amortized_queue__my_vectors__vector__capacity
                                            (us_split_discrs1
                                            temp___expr_412))) r2b)
                                         (=>
                                         (not
                                         (= temp___skip_top_level_413 true))
                                         (= (is_empty temp___expr_412) true))))

(declare-const result____split_discrs us_split_discrs)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const r4b Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq9 (integer integer) Bool)

(declare-const dummy9 integer)

(declare-datatypes ((t5b__ref 0)) (((mk_t5b__ref (t5b__content integer)))))
(define-fun t5b__ref___projection ((a t5b__ref)) integer (t5b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const r10b Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq10 (integer integer) Bool)

(declare-const dummy10 integer)

(declare-datatypes ((t11b__ref 0))
(((mk_t11b__ref (t11b__content integer)))))
(define-fun t11b__ref___projection ((a t11b__ref)) integer (t11b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(define-fun dynamic_invariant4 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-sort count_type 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq11 (count_type count_type) Bool)

(declare-const dummy11 count_type)

(declare-datatypes ((count_type__ref 0))
(((mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type
  (count_type__content a))

(define-fun dynamic_invariant5 ((temp___expr_141 Int)
  (temp___is_init_138 Bool) (temp___skip_constant_139 Bool)
  (temp___do_toplevel_140 Bool)) Bool (=>
                                      (or (= temp___is_init_138 true)
                                      (<= 0 2147483647)) (in_range8
                                      temp___expr_141)))

(define-fun oeq ((left1 us_rep1)
  (right1 us_rep1)) Bool (and (= (length1 left1) (length1 right1)) (ite
                                                                   (forall
                                                                   ((n Int))
                                                                   (=>
                                                                   (and
                                                                   (<= 1 n)
                                                                   (<= n
                                                                   (last
                                                                   left1)))
                                                                   (=
                                                                   (get left1
                                                                   n)
                                                                   (get
                                                                   right1 n))))
                                                                   true
                                                                   false)))

(declare-fun oeq__function_guard (Bool us_rep1 us_rep1) Bool)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep1) (b us_rep1))
  (! (= (user_eq6 a b) (oeq a b)) :pattern ((user_eq6 a b)) )))

(define-fun default_initial_assumption1 ((temp___expr_247 us_rep1)
  (temp___skip_top_level_248 Bool)) Bool (=>
                                         (not
                                         (= temp___skip_top_level_248 true))
                                         (= (length1 temp___expr_247) 0)))

;; model____post_axiom
  (assert
  (forall ((container us_rep))
  (! (= (length1 (model__ container)) (length container)) :pattern ((model__
                                                                    container)) )))

;; is_empty__post_axiom
  (assert
  (forall ((container us_rep))
  (! (= (= (is_empty container) true) (= (length container) 0)) :pattern (
  (is_empty container)) )))

(define-fun dynamic_invariant6 ((temp___expr_195 Int)
  (temp___is_init_192 Bool) (temp___skip_constant_193 Bool)
  (temp___do_toplevel_194 Bool)) Bool (=>
                                      (or (= temp___is_init_192 true)
                                      (<= 1 1000)) (in_range3
                                      temp___expr_195)))

(declare-sort extended_index1 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 1000)))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq12 (extended_index1 extended_index1) Bool)

(declare-const dummy12 extended_index1)

(declare-datatypes ((extended_index__ref1 0))
(((mk_extended_index__ref1 (extended_index__content1 extended_index1)))))
(define-fun extended_index__ref___2__projection ((a extended_index__ref1)) extended_index1
  (extended_index__content1 a))

(define-fun dynamic_invariant7 ((temp___expr_240 Int)
  (temp___is_init_237 Bool) (temp___skip_constant_238 Bool)
  (temp___do_toplevel_239 Bool)) Bool (=>
                                      (or (= temp___is_init_237 true)
                                      (<= 0 1000)) (in_range9
                                      temp___expr_240)))

;; length__post_axiom
  (assert
  (forall ((container us_rep1))
  (! (let ((result (length1 container)))
     (and (<= (+ 0 result) 1000) (dynamic_invariant5 result true false true))) :pattern (
  (length1 container)) )))

(declare-sort element_type1 0)

(define-fun in_range10 ((x Int)) Bool (and (<= (- 2147483648) x)
                                      (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq13 (element_type1 element_type1) Bool)

(declare-const dummy13 element_type1)

(declare-datatypes ((element_type__ref1 0))
(((mk_element_type__ref1 (element_type__content1 element_type1)))))
(define-fun element_type__ref___2__projection ((a element_type__ref1)) element_type1
  (element_type__content1 a))

(define-fun dynamic_invariant8 ((temp___expr_234 Int)
  (temp___is_init_231 Bool) (temp___skip_constant_232 Bool)
  (temp___do_toplevel_233 Bool)) Bool (=>
                                      (or (= temp___is_init_231 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range10 temp___expr_234)))

;; get__post_axiom
  (assert
  (forall ((container us_rep1))
  (forall ((position Int))
  (! (=>
     (and (dynamic_invariant7 position true true true)
     (and (<= 1 position) (<= position (last container))))
     (dynamic_invariant8 (get container position) true false true)) :pattern (
  (get container position)) ))))

(declare-const result____split_fields us_main_type)

(declare-const idx Int)

(declare-const idx1 Int)

(declare-const o Int)

(declare-const o1 Int)

(declare-const amortized_queue__Oconcat__R1b__R2b__assume Int)

(declare-const us Int)

(declare-const amortized_queue__Oconcat__L_1__R4b__assume Int)

(declare-const temp___495 Int)

(declare-const temp___494 capacity_range)

(declare-const temp___4941 us_main_type)

(declare-const o2 Int)

(declare-const o3 Int)

(declare-const amortized_queue__Oconcat__L_2__R10b__assume Int)

(declare-const o4 Int)

(declare-const o5 Int)

(declare-const result____split_fields1 us_main_type)

(declare-const result Int)

(declare-const idx2 Int)

(declare-const amortized_queue__my_vectors__append__2__container__fields us_main_type)

(declare-const result1 us_main_type)

(declare-const result____split_fields2 us_main_type)

(declare-const result____split_fields3 us_main_type)

(declare-const idx3 Int)

(declare-const result____split_fields4 us_split_fields__ref)

(declare-const idx4 int__ref)

(declare-const result____split_fields5 us_split_fields)

(declare-const idx5 Int)

(declare-const result____split_fields6 us_split_fields__ref)

(declare-const idx6 int__ref)

(declare-const result____split_fields7 us_split_fields)

(declare-const idx7 Int)

(declare-const result2 int__ref)

(declare-const idx8 Int)

(define-fun result____split_fields8 () us_split_fields (mk___split_fields
                                                       result____split_fields3))

(define-fun amortized_queue__my_vectors__append__2__container__fields1 () us_split_fields
  (mk___split_fields
  amortized_queue__my_vectors__append__2__container__fields))

(define-fun result____split_fields9 () us_split_fields__ref (mk___split_fields__ref
                                                            (mk___split_fields
                                                            result____split_fields)))

;; H
  (assert (<= (+ (length left) (length right)) 1000))

;; H
  (assert
  (and (= o (length right)) (and (in_range5 o) (<= o (capacity right)))))

;; H
  (assert
  (and (= o1 (length left)) (and (in_range5 o1) (<= o1 (capacity left)))))

;; H
  (assert (= amortized_queue__Oconcat__R1b__R2b__assume (+ o1 o)))

;; H
  (assert (= amortized_queue__Oconcat__R1b__R2b__assume r2b))

;; H
  (assert (in_range2 r2b))

;; H
  (assert (and (= us r2b) (in_range5 r2b)))

;; H
  (assert (default_initial_assumption
  (mk___rep result____split_discrs
  (mk___split_fields result____split_fields)) false))

;; H
  (assert
  (= r2b (to_rep
         (rec__amortized_queue__my_vectors__vector__capacity
         result____split_discrs))))

;; H
  (assert
  (and (= amortized_queue__Oconcat__L_1__R4b__assume (last (model__ left)))
  (and (in_range4 amortized_queue__Oconcat__L_1__R4b__assume)
  (= amortized_queue__Oconcat__L_1__R4b__assume (last (model__ left))))))

;; H
  (assert (= amortized_queue__Oconcat__L_1__R4b__assume r4b))

;; H
  (assert (in_range4 r4b))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref idx)))

;; H
  (assert (= idx2 1))

;; H
  (assert (=> (and (<= 1 idx2) (<= idx2 r4b)) (= temp___495 idx2)))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b))
  (and (= result____split_discrs (mk___split_discrs temp___494))
  (= result____split_fields temp___4941))))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b)) (and (= o2 idx2) (in_range3 idx2))))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b))
  (and (= o3 (get (model__ left) o2))
  (and (in_range6 o3) (= o3 (get (model__ left) o2))))))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b))
  (and
  (and
  (= (length
     (mk___rep result____split_discrs
     amortized_queue__my_vectors__append__2__container__fields1)) (+
  (length
  (mk___rep result____split_discrs
  (mk___split_fields result____split_fields))) 1))
  (= (olt
     (model__
     (mk___rep result____split_discrs
     (mk___split_fields result____split_fields)))
     (model__
     (mk___rep result____split_discrs
     amortized_queue__my_vectors__append__2__container__fields1))) true))
  (= (get
     (model__
     (mk___rep result____split_discrs
     amortized_queue__my_vectors__append__2__container__fields1))
     (+ (last
        (model__
        (mk___rep result____split_discrs
        (mk___split_fields result____split_fields)))) 1)) o3))))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b))
  (= (mk___split_fields__ref (mk___split_fields result1)) result____split_fields9)))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b))
  (= (mk___split_fields result____split_fields2) amortized_queue__my_vectors__append__2__container__fields1)))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b))
  (= (length (mk___rep result____split_discrs result____split_fields8))
  idx3)))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b))
  (forall ((i Int))
  (=> (and (<= 1 i) (<= i idx3))
  (= (get (model__ (mk___rep result____split_discrs result____split_fields8))
     i) (get (model__ left) i))))))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b))
  (and (=> (<= 1 r4b) (dynamic_property 1 r4b idx3))
  (and (<= 1 idx3) (<= idx3 r4b)))))

;; H
  (assert (=> (and (<= 1 idx2) (<= idx2 r4b)) (= idx3 r4b)))

;; H
  (assert (=> (and (<= 1 idx2) (<= idx2 r4b)) (= idx4 (mk_int__ref idx3))))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b))
  (= result____split_fields4 (mk___split_fields__ref result____split_fields8))))

;; H
  (assert (=> (and (<= 1 idx2) (<= idx2 r4b)) (= idx5 idx3)))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b))
  (= result____split_fields5 result____split_fields8)))

;; H
  (assert (=> (and (<= 1 idx2) (<= idx2 r4b)) (= idx6 idx4)))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b))
  (= result____split_fields6 result____split_fields4)))

;; H
  (assert (=> (and (<= 1 idx2) (<= idx2 r4b)) (= idx7 idx5)))

;; H
  (assert
  (=> (and (<= 1 idx2) (<= idx2 r4b))
  (= result____split_fields7 result____split_fields5)))

;; H
  (assert
  (=> (not (and (<= 1 idx2) (<= idx2 r4b))) (= idx6 (mk_int__ref idx2))))

;; H
  (assert
  (=> (not (and (<= 1 idx2) (<= idx2 r4b)))
  (= result____split_fields6 result____split_fields9)))

;; H
  (assert (=> (not (and (<= 1 idx2) (<= idx2 r4b))) (= idx7 idx2)))

;; H
  (assert
  (=> (not (and (<= 1 idx2) (<= idx2 r4b)))
  (= result____split_fields7 (mk___split_fields result____split_fields1))))

;; H
  (assert
  (= (length
     (mk___rep result____split_discrs
     (us_split_fields__content result____split_fields6))) (last
                                                          (model__ left))))

;; H
  (assert
  (and (= amortized_queue__Oconcat__L_2__R10b__assume (last (model__ right)))
  (and (in_range4 amortized_queue__Oconcat__L_2__R10b__assume)
  (= amortized_queue__Oconcat__L_2__R10b__assume (last (model__ right))))))

;; H
  (assert (= amortized_queue__Oconcat__L_2__R10b__assume r10b))

;; H
  (assert (in_range4 r10b))

;; H
  (assert (= result2 (mk_int__ref idx1)))

;; H
  (assert (= idx8 1))

;; H
  (assert (<= 1 idx8))

;; H
  (assert (<= idx8 r10b))

;; H
  (assert (and (= o4 idx8) (in_range3 idx8)))

;; H
  (assert
  (and (= o5 (get (model__ right) o4))
  (and (in_range6 o5) (= o5 (get (model__ right) o4)))))

(assert
;; WP_parameter_def
 ;; File "a-cofove.ads", line 76, characters 0-0
  (not
  (< (length
     (mk___rep result____split_discrs
     (us_split_fields__content result____split_fields6))) (capacity
                                                          (mk___rep
                                                          result____split_discrs
                                                          (us_split_fields__content
                                                          result____split_fields6))))))
(check-sat)
(exit)
