;; produced by z3_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
(set-option :smt.mbqi false)
(set-option :smt.macro-finder true)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun nth ((_ BitVec 32) Int) Bool)

(declare-fun lsr ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun asr ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun lsl ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_right1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_left1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun pow2 (Int) Int)

(define-fun to_int1 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32))
                                            (bv2int x)
                                            (- (- 4294967296 (bv2int x)))))

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

(declare-fun nth_bv ((_ BitVec 32) (_ BitVec 32)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
  (_ BitVec 32)) Bool)

(define-fun eq_sub ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 32))))))
(declare-fun power ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun bv_min ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-sort tinteger_8B 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 128) x) (<= x 127)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (tinteger_8B tinteger_8B) Bool)

(declare-const dummy tinteger_8B)

(declare-datatypes ()
((tinteger_8B__ref (mk_tinteger_8B__ref (tinteger_8B__content tinteger_8B)))))
(define-fun tinteger_8B__ref___projection ((a tinteger_8B__ref)) tinteger_8B
  (tinteger_8B__content a))

(declare-sort integer_8 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 128) x) (<= x 127)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (integer_8 integer_8) Bool)

(declare-const dummy1 integer_8)

(declare-datatypes ()
((integer_8__ref (mk_integer_8__ref (integer_8__content integer_8)))))
(define-fun integer_8__ref___2__projection ((a integer_8__ref)) integer_8
  (integer_8__content a))

(define-fun dynamic_invariant ((temp___expr_147 Int)
  (temp___is_init_144 Bool) (temp___skip_constant_145 Bool)
  (temp___do_toplevel_146 Bool)) Bool (=>
                                      (or (= temp___is_init_144 true)
                                      (<= (- 128) 127)) (in_range1
                                      temp___expr_147)))

(declare-sort tinteger_32B 0)

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (tinteger_32B tinteger_32B) Bool)

(declare-const dummy2 tinteger_32B)

(declare-datatypes ()
((tinteger_32B__ref
 (mk_tinteger_32B__ref (tinteger_32B__content tinteger_32B)))))
(define-fun tinteger_32B__ref___projection ((a tinteger_32B__ref)) tinteger_32B
  (tinteger_32B__content a))

(declare-sort integer_32 0)

(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq3 (integer_32 integer_32) Bool)

(declare-const dummy3 integer_32)

(declare-datatypes ()
((integer_32__ref (mk_integer_32__ref (integer_32__content integer_32)))))
(define-fun integer_32__ref___2__projection ((a integer_32__ref)) integer_32
  (integer_32__content a))

(define-fun dynamic_invariant1 ((temp___expr_159 Int)
  (temp___is_init_156 Bool) (temp___skip_constant_157 Bool)
  (temp___do_toplevel_158 Bool)) Bool (=>
                                      (or (= temp___is_init_156 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range3 temp___expr_159)))

(declare-sort unsigned_32 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 32))

(declare-fun user_eq4 (unsigned_32 unsigned_32) Bool)

(declare-const dummy4 unsigned_32)

(declare-datatypes ()
((unsigned_32__ref (mk_unsigned_32__ref (unsigned_32__content unsigned_32)))))
(define-fun unsigned_32__ref___projection ((a unsigned_32__ref)) unsigned_32
  (unsigned_32__content a))

(define-fun dynamic_invariant2 ((temp___expr_189 (_ BitVec 32))
  (temp___is_init_186 Bool) (temp___skip_constant_187 Bool)
  (temp___do_toplevel_188 Bool)) Bool true)

(declare-fun boolean_to_integer_8 (Bool) Int)

(declare-fun boolean_to_integer_8__function_guard (Int Bool) Bool)

;; boolean_to_integer_8__post_axiom
  (assert
  (forall ((b Bool)) (! (dynamic_invariant (boolean_to_integer_8 b) true
  false true) :pattern ((boolean_to_integer_8 b)) )))

(declare-const wheel_speed (_ BitVec 32))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const vehicle_speed (_ BitVec 32))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const apply_brakes Int)

(declare-const sum_out1 Int)

(declare-const sum_1_out1 Int)

(declare-const at_rest_switch_out1 Int)

(declare-const sum_1_out1_sat Int)

(declare-const o Int)

(declare-const o1 Int)

(declare-const o2 Int)

(declare-const o3 Int)

(declare-const o4 Int)

(declare-const o5 Int)

(declare-const o6 Int)

(declare-const o7 Int)

(declare-const o8 Int)

(declare-const sum_out11 Int)

(declare-const sum_1_out11 Int)

(declare-const sum_1_out1_sat1 Int)

(declare-const result Int)

(declare-const sum_out12 Int)

(declare-const result1 Int)

(declare-const sum_1_out1_sat2 Int)

(declare-const result2 Int)

(declare-const sum_1_out12 Int)

(declare-const result3 Int)

(declare-const sum_1_out13 Int)

(declare-const result4 Int)

(declare-const sum_1_out14 Int)

(declare-const result5 Int)

(declare-const at_rest_switch_out11 Int)

(declare-const result6 Int)

(declare-const at_rest_switch_out12 Int)

(define-fun result7 () int__ref (mk_int__ref result1))

(define-fun result8 () int__ref (mk_int__ref result))

(define-fun sum_1_out1_sat3 () int__ref (mk_int__ref sum_1_out1_sat))

(define-fun sum_out13 () int__ref (mk_int__ref sum_out1))

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range3 apply_brakes)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range3 sum_out1)))

;; H
  (assert (=> (<= (- 128) 127) (in_range1 sum_1_out1)))

;; H
  (assert
  (=> (<= (- 2147483648) 2147483647) (in_range3 at_rest_switch_out1)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range3 sum_1_out1_sat)))

;; H
  (assert (bvugt vehicle_speed ((_ int2bv 32) 0)))

;; H
  (assert
  (and (= o (bv2int (bvmul ((_ int2bv 32) 8) vehicle_speed))) (in_range3
  (bv2int (bvmul ((_ int2bv 32) 8) vehicle_speed)))))

(assert
;; WP_parameter_def
 ;; File "abs_controller_supplier_with_property.ads", line 22, characters 0-0
  (not (in_range3 (bv2int (bvmul ((_ int2bv 32) 10) wheel_speed)))))
(check-sat)
(exit)
