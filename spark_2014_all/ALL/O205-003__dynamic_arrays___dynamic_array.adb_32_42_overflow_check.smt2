;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort natural 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range1
                                     temp___expr_33)))

(declare-const c Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-const last Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-const dummy2 integer)

(declare-datatypes ()
((my_nat__ref (mk_my_nat__ref (my_nat__content integer)))))
(define-fun my_nat__ref___projection ((a my_nat__ref)) integer (my_nat__content
                                                               a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range2 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Bool)

(declare-datatypes ()
((us_split_discrs (mk___split_discrs (rec__dynamic_array__rec__b Bool)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) Bool (rec__dynamic_array__rec__b
                                                                    a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__dynamic_array__rec__f1 integer)(rec__dynamic_array__rec__f2 integer)))))
(define-fun us_split_fields_F1__projection ((a us_split_fields)) integer
  (rec__dynamic_array__rec__f1 a))

(define-fun us_split_fields_F2__projection ((a us_split_fields)) integer
  (rec__dynamic_array__rec__f2 a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)(attr__constrained Bool)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(define-fun us_rep___3__projection ((a us_rep)) Bool (attr__constrained a))

(define-fun dynamic_array__rec__f1__pred ((a us_rep)) Bool (= (to_int1
                                                              (rec__dynamic_array__rec__b
                                                              (us_split_discrs1
                                                              a))) 1))

(define-fun dynamic_array__rec__f2__pred ((a us_rep)) Bool (= (to_int1
                                                              (rec__dynamic_array__rec__b
                                                              (us_split_discrs1
                                                              a))) 0))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (rec__dynamic_array__rec__b (us_split_discrs1 a))
                        (rec__dynamic_array__rec__b (us_split_discrs1 b)))
                        (=> (dynamic_array__rec__f1__pred a)
                        (= (to_rep
                           (rec__dynamic_array__rec__f1 (us_split_fields1 a)))
                        (to_rep
                        (rec__dynamic_array__rec__f1 (us_split_fields1 b))))))
                        (=> (dynamic_array__rec__f2__pred a)
                        (= (to_rep
                           (rec__dynamic_array__rec__f2 (us_split_fields1 a)))
                        (to_rep
                        (rec__dynamic_array__rec__f2 (us_split_fields1 b))))))
                   true false))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const dynamic_array__rec__b__first__bit Int)

(declare-const dynamic_array__rec__b__last__bit Int)

(declare-const dynamic_array__rec__b__position Int)

;; dynamic_array__rec__b__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__b__first__bit))

;; dynamic_array__rec__b__last__bit_axiom
  (assert
  (< dynamic_array__rec__b__first__bit dynamic_array__rec__b__last__bit))

;; dynamic_array__rec__b__position_axiom
  (assert (<= 0 dynamic_array__rec__b__position))

(declare-const dynamic_array__rec__f1__first__bit Int)

(declare-const dynamic_array__rec__f1__last__bit Int)

(declare-const dynamic_array__rec__f1__position Int)

;; dynamic_array__rec__f1__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f1__first__bit))

;; dynamic_array__rec__f1__last__bit_axiom
  (assert
  (< dynamic_array__rec__f1__first__bit dynamic_array__rec__f1__last__bit))

;; dynamic_array__rec__f1__position_axiom
  (assert (<= 0 dynamic_array__rec__f1__position))

(declare-const dynamic_array__rec__f2__first__bit Int)

(declare-const dynamic_array__rec__f2__last__bit Int)

(declare-const dynamic_array__rec__f2__position Int)

;; dynamic_array__rec__f2__first__bit_axiom
  (assert (<= 0 dynamic_array__rec__f2__first__bit))

;; dynamic_array__rec__f2__last__bit_axiom
  (assert
  (< dynamic_array__rec__f2__first__bit dynamic_array__rec__f2__last__bit))

;; dynamic_array__rec__f2__position_axiom
  (assert (<= 0 dynamic_array__rec__f2__position))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-const dummy3 us_rep)

(declare-datatypes () ((rec____ref (mk_rec____ref (rec____content us_rep)))))
(define-fun rec____ref___projection ((a rec____ref)) us_rep (rec____content
                                                            a))

(define-fun dynamic_invariant1 ((temp___expr_150 us_rep)
  (temp___is_init_147 Bool) (temp___skip_constant_148 Bool)
  (temp___do_toplevel_149 Bool)) Bool (and
                                      (=> (dynamic_array__rec__f1__pred
                                      temp___expr_150)
                                      (=>
                                      (or (= temp___is_init_147 true)
                                      (<= 0 last)) (dynamic_property 0
                                      last
                                      (to_rep
                                      (rec__dynamic_array__rec__f1
                                      (us_split_fields1 temp___expr_150))))))
                                      (=> (dynamic_array__rec__f2__pred
                                      temp___expr_150)
                                      (=>
                                      (or (= temp___is_init_147 true)
                                      (<= 0 last)) (dynamic_property 0
                                      last
                                      (to_rep
                                      (rec__dynamic_array__rec__f2
                                      (us_split_fields1 temp___expr_150))))))))

(define-fun default_initial_assumption ((temp___expr_152 us_rep)
  (temp___skip_top_level_153 Bool)) Bool (and
                                         (= (attr__constrained
                                            temp___expr_152) false)
                                         (= (rec__dynamic_array__rec__b
                                            (us_split_discrs1
                                            temp___expr_152)) (of_int 1))))

(declare-const r us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun dynamic_invariant2 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(define-fun dynamic_invariant3 ((temp___expr_144 Int)
  (temp___is_init_141 Bool) (temp___skip_constant_142 Bool)
  (temp___do_toplevel_143 Bool)) Bool (=>
                                      (or (= temp___is_init_141 true)
                                      (<= 0 last)) (dynamic_property 0
                                      last temp___expr_144)))

;; last__def_axiom
  (assert (= last c))

;; H
  (assert (in_range1 c))

;; H
  (assert (dynamic_invariant1 r true false true))

;; H
  (assert (= (rec__dynamic_array__rec__b (us_split_discrs1 r)) true))

;; H
  (assert (< (to_rep (rec__dynamic_array__rec__f1 (us_split_fields1 r)))
  c))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (in_range
  (+ (to_rep (rec__dynamic_array__rec__f1 (us_split_fields1 r))) 1))))
(check-sat)
(exit)
