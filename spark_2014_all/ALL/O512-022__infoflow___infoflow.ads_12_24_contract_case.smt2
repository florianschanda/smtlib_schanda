;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort character 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (character character) Bool)

(declare-fun dummy () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character
  (character__content a))

(define-fun dynamic_invariant ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range1 temp___expr_63)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS10 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS11 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS12 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS13 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS14 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS15 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS16 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS17 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS18 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS19 () Int)

(declare-fun in_0_rdy_v1 () Bool)

(declare-fun in_1_rdy_v1 () Bool)

(declare-fun out_0_rdy_v1 () Bool)

(declare-fun out_1_rdy_v1 () Bool)

(declare-fun in_0_dat_v1 () Int)

(declare-fun in_1_dat_v1 () Int)

(declare-fun out_0_dat_v1 () Int)

(declare-fun out_1_dat_v1 () Int)

(declare-fun in_0_rdy_v2 () Bool)

(declare-fun in_1_rdy_v2 () Bool)

(declare-fun out_0_rdy_v2 () Bool)

(declare-fun out_1_rdy_v2 () Bool)

(declare-fun in_0_dat_v2 () Int)

(declare-fun in_1_dat_v2 () Int)

(declare-fun out_0_dat_v2 () Int)

(declare-fun out_1_dat_v2 () Int)

(declare-fun data_0_v1 () Int)

(declare-fun data_1_v1 () Int)

(declare-fun data_0_v2 () Int)

(declare-fun data_1_v2 () Int)

(declare-fun in_0_rdy_v11 () Bool)

(declare-fun in_1_rdy_v11 () Bool)

(declare-fun out_0_rdy_v11 () Bool)

(declare-fun out_1_rdy_v11 () Bool)

(declare-fun out_0_dat_v11 () Int)

(declare-fun out_1_dat_v11 () Int)

(declare-fun in_0_rdy_v21 () Bool)

(declare-fun in_1_rdy_v21 () Bool)

(declare-fun out_0_rdy_v21 () Bool)

(declare-fun out_1_rdy_v21 () Bool)

(declare-fun out_0_dat_v21 () Int)

(declare-fun out_1_dat_v21 () Int)

(declare-fun data_0_v11 () Int)

(declare-fun data_1_v11 () Int)

(declare-fun data_0_v21 () Int)

(declare-fun data_1_v21 () Int)

(declare-fun result () Int)

(declare-fun data_0_v12 () Int)

(declare-fun result1 () bool__ref)

(declare-fun in_0_rdy_v12 () Bool)

(declare-fun result2 () int__ref)

(declare-fun out_1_dat_v12 () Int)

(declare-fun result3 () bool__ref)

(declare-fun out_1_rdy_v12 () Bool)

(declare-fun result4 () int__ref)

(declare-fun data_1_v12 () Int)

(declare-fun result5 () bool__ref)

(declare-fun in_1_rdy_v12 () Bool)

(declare-fun result6 () int__ref)

(declare-fun out_0_dat_v12 () Int)

(declare-fun result7 () bool__ref)

(declare-fun out_0_rdy_v12 () Bool)

(declare-fun result8 () int__ref)

(declare-fun data_0_v22 () Int)

(declare-fun result9 () bool__ref)

(declare-fun in_0_rdy_v22 () Bool)

(declare-fun result10 () int__ref)

(declare-fun out_1_dat_v22 () Int)

(declare-fun result11 () bool__ref)

(declare-fun out_1_rdy_v22 () Bool)

(declare-fun result12 () int__ref)

(declare-fun data_1_v22 () Int)

(declare-fun result13 () bool__ref)

(declare-fun in_1_rdy_v22 () Bool)

(declare-fun result14 () int__ref)

(declare-fun out_0_dat_v22 () Int)

(declare-fun result15 () bool__ref)

(declare-fun out_0_rdy_v22 () Bool)

(declare-fun in_0_rdy_v13 () bool__ref)

(declare-fun in_1_rdy_v13 () bool__ref)

(declare-fun out_0_rdy_v13 () bool__ref)

(declare-fun out_1_rdy_v13 () bool__ref)

(declare-fun out_0_dat_v13 () int__ref)

(declare-fun out_1_dat_v13 () int__ref)

(declare-fun in_0_rdy_v23 () bool__ref)

(declare-fun in_1_rdy_v23 () bool__ref)

(declare-fun out_0_rdy_v23 () bool__ref)

(declare-fun out_1_rdy_v23 () bool__ref)

(declare-fun out_0_dat_v23 () int__ref)

(declare-fun out_1_dat_v23 () int__ref)

(declare-fun data_0_v13 () int__ref)

(declare-fun data_1_v13 () int__ref)

(declare-fun data_0_v23 () int__ref)

(declare-fun data_1_v23 () int__ref)

(declare-fun in_0_rdy_v14 () Bool)

(declare-fun in_1_rdy_v14 () Bool)

(declare-fun out_0_rdy_v14 () Bool)

(declare-fun out_1_rdy_v14 () Bool)

(declare-fun out_0_dat_v14 () Int)

(declare-fun out_1_dat_v14 () Int)

(declare-fun in_0_rdy_v24 () Bool)

(declare-fun in_1_rdy_v24 () Bool)

(declare-fun out_0_rdy_v24 () Bool)

(declare-fun out_1_rdy_v24 () Bool)

(declare-fun out_0_dat_v24 () Int)

(declare-fun out_1_dat_v24 () Int)

(declare-fun data_0_v14 () Int)

(declare-fun data_1_v14 () Int)

(declare-fun data_0_v24 () Int)

(declare-fun data_1_v24 () Int)

;; H
  (assert (in_range1 in_0_dat_v1))

;; H
  (assert (in_range1 in_1_dat_v1))

;; H
  (assert (in_range1 out_0_dat_v1))

;; H
  (assert (in_range1 out_1_dat_v1))

;; H
  (assert (in_range1 in_0_dat_v2))

;; H
  (assert (in_range1 in_1_dat_v2))

;; H
  (assert (in_range1 out_0_dat_v2))

;; H
  (assert (in_range1 out_1_dat_v2))

;; H
  (assert (=> (<= 0 255) (in_range1 data_0_v1)))

;; H
  (assert (=> (<= 0 255) (in_range1 data_1_v1)))

;; H
  (assert
  (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)
  (= result data_0_v1)))

;; H
  (assert
  (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)
  (= data_0_v12 in_0_dat_v1)))

;; H
  (assert
  (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)
  (= result1 (mk_bool__ref in_0_rdy_v1))))

;; H
  (assert
  (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)
  (= in_0_rdy_v12 (of_int 0))))

;; H
  (assert
  (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)
  (= result2 (mk_int__ref out_1_dat_v1))))

;; H
  (assert
  (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)
  (= out_1_dat_v12 data_0_v12)))

;; H
  (assert
  (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)
  (= result3 (mk_bool__ref out_1_rdy_v1))))

;; H
  (assert
  (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)
  (= out_1_rdy_v12 (of_int 1))))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false))
  (= data_0_v12 data_0_v1)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false))
  (= out_1_dat_v12 out_1_dat_v1)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false))
  (= out_1_rdy_v12 out_1_rdy_v1)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false))
  (= in_0_rdy_v12 in_0_rdy_v1)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false))
  (= data_0_v12 data_0_v11)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false))
  (= out_1_dat_v12 out_1_dat_v11)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false))
  (= out_1_rdy_v12 out_1_rdy_v11)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false))
  (= in_0_rdy_v12 in_0_rdy_v11)))

;; H
  (assert
  (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)
  (= result4 (mk_int__ref data_1_v1))))

;; H
  (assert
  (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)
  (= data_1_v12 in_1_dat_v1)))

;; H
  (assert
  (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)
  (= result5 (mk_bool__ref in_1_rdy_v1))))

;; H
  (assert
  (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)
  (= in_1_rdy_v12 (of_int 0))))

;; H
  (assert
  (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)
  (= result6 (mk_int__ref out_0_dat_v1))))

;; H
  (assert
  (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)
  (= out_0_dat_v12 data_1_v12)))

;; H
  (assert
  (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)
  (= result7 (mk_bool__ref out_0_rdy_v1))))

;; H
  (assert
  (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)
  (= out_0_rdy_v12 (of_int 1))))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false))
  (= data_1_v12 data_1_v1)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false))
  (= out_0_dat_v12 out_0_dat_v1)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false))
  (= out_0_rdy_v12 out_0_rdy_v1)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false))
  (= in_1_rdy_v12 in_1_rdy_v1)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false))
  (= data_1_v12 data_1_v11)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false))
  (= out_0_dat_v12 out_0_dat_v11)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false))
  (= out_0_rdy_v12 out_0_rdy_v11)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false))
  (= in_1_rdy_v12 in_1_rdy_v11)))

;; H
  (assert (=> (<= 0 255) (in_range1 data_0_v2)))

;; H
  (assert (=> (<= 0 255) (in_range1 data_1_v2)))

;; H
  (assert
  (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)
  (= result8 (mk_int__ref data_0_v2))))

;; H
  (assert
  (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)
  (= data_0_v22 in_0_dat_v2)))

;; H
  (assert
  (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)
  (= result9 (mk_bool__ref in_0_rdy_v2))))

;; H
  (assert
  (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)
  (= in_0_rdy_v22 (of_int 0))))

;; H
  (assert
  (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)
  (= result10 (mk_int__ref out_1_dat_v2))))

;; H
  (assert
  (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)
  (= out_1_dat_v22 data_0_v22)))

;; H
  (assert
  (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)
  (= result11 (mk_bool__ref out_1_rdy_v2))))

;; H
  (assert
  (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)
  (= out_1_rdy_v22 (of_int 1))))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false))
  (= data_0_v22 data_0_v2)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false))
  (= out_1_dat_v22 out_1_dat_v2)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false))
  (= out_1_rdy_v22 out_1_rdy_v2)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false))
  (= in_0_rdy_v22 in_0_rdy_v2)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false))
  (= data_0_v22 data_0_v21)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false))
  (= out_1_dat_v22 out_1_dat_v21)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false))
  (= out_1_rdy_v22 out_1_rdy_v21)))

;; H
  (assert
  (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false))
  (= in_0_rdy_v22 in_0_rdy_v21)))

;; H
  (assert
  (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)
  (= result12 (mk_int__ref data_1_v2))))

;; H
  (assert
  (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)
  (= data_1_v22 in_1_dat_v2)))

;; H
  (assert
  (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)
  (= result13 (mk_bool__ref in_1_rdy_v2))))

;; H
  (assert
  (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)
  (= in_1_rdy_v22 (of_int 0))))

;; H
  (assert
  (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)
  (= result14 (mk_int__ref out_0_dat_v2))))

;; H
  (assert
  (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)
  (= out_0_dat_v22 data_1_v22)))

;; H
  (assert
  (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)
  (= result15 (mk_bool__ref out_0_rdy_v2))))

;; H
  (assert
  (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)
  (= out_0_rdy_v22 (of_int 1))))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false))
  (= data_1_v22 data_1_v2)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false))
  (= out_0_dat_v22 out_0_dat_v2)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false))
  (= out_0_rdy_v22 out_0_rdy_v2)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false))
  (= in_1_rdy_v22 in_1_rdy_v2)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false))
  (= data_1_v22 data_1_v21)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false))
  (= out_0_dat_v22 out_0_dat_v21)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false))
  (= out_0_rdy_v22 out_0_rdy_v21)))

;; H
  (assert
  (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false))
  (= in_1_rdy_v22 in_1_rdy_v21)))

;; H
  (assert (= data_1_v23 (mk_int__ref data_1_v22)))

;; H
  (assert (= data_0_v23 (mk_int__ref data_0_v22)))

;; H
  (assert (= data_1_v13 (mk_int__ref data_1_v12)))

;; H
  (assert (= data_0_v13 (mk_int__ref data_0_v12)))

;; H
  (assert (= out_1_dat_v23 (mk_int__ref out_1_dat_v22)))

;; H
  (assert (= out_0_dat_v23 (mk_int__ref out_0_dat_v22)))

;; H
  (assert (= out_1_rdy_v23 (mk_bool__ref out_1_rdy_v22)))

;; H
  (assert (= out_0_rdy_v23 (mk_bool__ref out_0_rdy_v22)))

;; H
  (assert (= in_1_rdy_v23 (mk_bool__ref in_1_rdy_v22)))

;; H
  (assert (= in_0_rdy_v23 (mk_bool__ref in_0_rdy_v22)))

;; H
  (assert (= out_1_dat_v13 (mk_int__ref out_1_dat_v12)))

;; H
  (assert (= out_0_dat_v13 (mk_int__ref out_0_dat_v12)))

;; H
  (assert (= out_1_rdy_v13 (mk_bool__ref out_1_rdy_v12)))

;; H
  (assert (= out_0_rdy_v13 (mk_bool__ref out_0_rdy_v12)))

;; H
  (assert (= in_1_rdy_v13 (mk_bool__ref in_1_rdy_v12)))

;; H
  (assert (= in_0_rdy_v13 (mk_bool__ref in_0_rdy_v12)))

;; H
  (assert (= data_1_v24 data_1_v22))

;; H
  (assert (= data_0_v24 data_0_v22))

;; H
  (assert (= data_1_v14 data_1_v12))

;; H
  (assert (= data_0_v14 data_0_v12))

;; H
  (assert (= out_1_dat_v24 out_1_dat_v22))

;; H
  (assert (= out_0_dat_v24 out_0_dat_v22))

;; H
  (assert (= out_1_rdy_v24 out_1_rdy_v22))

;; H
  (assert (= out_0_rdy_v24 out_0_rdy_v22))

;; H
  (assert (= in_1_rdy_v24 in_1_rdy_v22))

;; H
  (assert (= in_0_rdy_v24 in_0_rdy_v22))

;; H
  (assert (= out_1_dat_v14 out_1_dat_v12))

;; H
  (assert (= out_0_dat_v14 out_0_dat_v12))

;; H
  (assert (= out_1_rdy_v14 out_1_rdy_v12))

;; H
  (assert (= out_0_rdy_v14 out_0_rdy_v12))

;; H
  (assert (= in_1_rdy_v14 in_1_rdy_v12))

;; H
  (assert (= in_0_rdy_v14 in_0_rdy_v12))

;; H
  (assert
  (ite (= (= in_1_dat_v1 in_1_dat_v2) true) (ite (= in_1_rdy_v1 true)
                                            (ite (= out_0_rdy_v1 false)
                                            (ite (= in_1_rdy_v2 true)
                                            (ite (= out_0_rdy_v2 false) true false) true) true) true) true))

;; H
  (assert
  (ite (= (= in_1_dat_v1 in_1_dat_v2) true) (ite (= in_1_rdy_v1 true)
                                            (ite (= out_0_rdy_v1 false)
                                            (ite (= in_1_rdy_v2 true) true false) true) true) true))

;; H
  (assert
  (ite (= (= in_1_dat_v1 in_1_dat_v2) true) (ite (= in_1_rdy_v1 true)
                                            (ite (= out_0_rdy_v1 false) true false) true) true))

;; H
  (assert
  (ite (= (= in_1_dat_v1 in_1_dat_v2) true) (ite (= in_1_rdy_v1 true) true false) true))

;; H
  (assert (ite (= (= in_1_dat_v1 in_1_dat_v2) true) true false))

(assert
;; WP_parameter_def
 ;; File "infoflow.ads", line 22, characters 0-0
  (not (= (int__content out_0_dat_v13) (int__content out_0_dat_v23))))
(check-sat)
(exit)
