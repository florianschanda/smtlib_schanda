;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-fun last (Int) Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-fun dummy2 () integer)

(declare-datatypes () ((t__ref (mk_t__ref (t__content integer)))))
(define-fun t__ref___projection ((a t__ref)) integer (t__content a))

(define-fun dynamic_invariant2 ((temp___expr_135 Int)
  (temp___is_init_132 Bool) (temp___skip_constant_133 Bool)
  (temp___do_toplevel_134 Bool)
  (const_in_loop__B_2__x Int)) Bool (=>
                                    (or (= temp___is_init_132 true)
                                    (<= 1 (last const_in_loop__B_2__x)))
                                    (dynamic_property 1
                                    (last const_in_loop__B_2__x)
                                    temp___expr_135)))

;; last__def_axiom
  (assert
  (forall ((const_in_loop__B_2__x Int))
  (! (= (last const_in_loop__B_2__x) const_in_loop__B_2__x) :pattern (
  (last const_in_loop__B_2__x)) )))

(declare-fun z () Int)

(declare-fun v1 () Int)

(declare-fun v2 () Int)

(declare-fun x () Int)

(declare-fun result () Int)

(declare-fun v11 () Int)

(declare-fun result1 () Int)

(declare-fun v21 () Int)

(declare-fun result2 () Int)

(declare-fun z1 () Int)

(declare-fun result3 () Int)

(declare-fun x1 () Int)

(declare-fun result4 () Int)

(declare-fun v12 () Int)

(declare-fun result5 () Int)

(declare-fun v22 () Int)

(declare-fun z2 () Int)

(declare-fun v13 () Int)

(declare-fun v23 () Int)

(declare-fun x2 () Int)

(declare-fun result6 () Int)

(declare-fun z3 () Int)

(declare-fun result7 () Int)

(declare-fun x3 () Int)

(declare-fun result8 () Int)

(declare-fun v14 () Int)

(declare-fun result9 () Int)

(declare-fun v24 () Int)

;; H
  (assert (=> (<= 1 2147483647) (in_range2 z)))

;; H
  (assert (= result v1))

;; H
  (assert (= v11 1))

;; H
  (assert (in_range1 v11))

;; H
  (assert (= result1 v2))

;; H
  (assert (= v21 1))

;; H
  (assert (in_range1 v21))

;; H
  (assert (= result2 z))

;; H
  (assert (= z1 1))

;; H
  (assert (= (of_int 1) true))

;; H
  (assert (= result3 x))

;; H
  (assert (= x1 z1))

;; H
  (assert (in_range1 x1))

;; H
  (assert (=> (= z1 1) (= result4 v11)))

;; H
  (assert (=> (= z1 1) (= v12 (last x1))))

;; H
  (assert (=> (not (= z1 1)) (= v12 v11)))

;; H
  (assert (= result5 v21))

;; H
  (assert (= v22 (last x1)))

;; H
  (assert (= v12 v22))

;; H
  (assert (= v13 (last x2)))

;; H
  (assert
  (and
  (and
  (and (=> (<= (- 2147483648) 2147483647) (in_range1 v13))
  (=> (<= (- 2147483648) 2147483647) (in_range1 v23)))
  (=> (<= (- 2147483648) 2147483647) (in_range1 x2)))
  (=> (<= 1 2147483647) (in_range2 z2))))

;; H
  (assert (= z2 result6))

;; H
  (assert (= z3 2))

;; H
  (assert (= (of_int 1) true))

;; H
  (assert (= x2 result7))

;; H
  (assert (= x3 z3))

;; H
  (assert (in_range1 x3))

;; H
  (assert (=> (= z3 1) (= v13 result8)))

;; H
  (assert (=> (= z3 1) (= v14 (last x3))))

;; H
  (assert (=> (not (= z3 1)) (= v14 v13)))

;; H
  (assert (= v23 result9))

;; H
  (assert (= v24 (last x3)))

;; H
  (assert (= v14 v24))

(assert
;; WP_parameter_def
 ;; File "const_in_loop.adb", line 1, characters 0-0
  (not (= v14 (last x3))))
(check-sat)
(exit)
