;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort day 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 6)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (day day) Bool)

(declare-const dummy day)

(declare-datatypes () ((day__ref (mk_day__ref (day__content day)))))
(define-fun day__ref___projection ((a day__ref)) day (day__content a))

(define-fun dynamic_invariant ((temp___expr_135 Int)
  (temp___is_init_132 Bool) (temp___skip_constant_133 Bool)
  (temp___do_toplevel_134 Bool)) Bool (=>
                                      (or (= temp___is_init_132 true)
                                      (<= 0 6)) (in_range1 temp___expr_135)))

(declare-sort t_day 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 6)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (t_day t_day) Bool)

(declare-const dummy1 t_day)

(declare-datatypes () ((t_day__ref (mk_t_day__ref (t_day__content t_day)))))
(define-fun t_day__ref___projection ((a t_day__ref)) t_day (t_day__content a))

(define-fun dynamic_invariant1 ((temp___expr_141 Int)
  (temp___is_init_138 Bool) (temp___skip_constant_139 Bool)
  (temp___do_toplevel_140 Bool)) Bool (and
                                      (=>
                                      (or (= temp___is_init_138 true)
                                      (<= 0 6)) (in_range2 temp___expr_141))
                                      (=> (= temp___do_toplevel_140 true)
                                      (=> (= temp___is_init_138 true)
                                      (or
                                      (and (<= 1 temp___expr_141)
                                      (<= temp___expr_141 1))
                                      (and (<= 3 temp___expr_141)
                                      (<= temp___expr_141 3)))))))

(define-fun dynamic_predicate ((temp___145 Int)) Bool (or
                                                      (and (<= 1 temp___145)
                                                      (<= temp___145 1))
                                                      (and (<= 3 temp___145)
                                                      (<= temp___145 3))))

(declare-const i1s Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const d Int)

(declare-const tmp Int)

(declare-const o Bool)

(declare-const o1 Bool)

(declare-const temp___147 Int)

(declare-const o2 Bool)

(declare-const o3 Bool)

(declare-const o4 Bool)

(declare-const result Int)

(declare-const tmp1 Int)

(declare-const tmp2 Int)

(declare-const result1 Bool)

(declare-const tmp3 Int)

(declare-const tmp4 Int)

(declare-const result2 Bool)

(declare-const tmp5 Int)

(declare-const tmp6 Int)

(declare-const tmp7 Int)

(declare-const tmp8 Int)

;; H
  (assert (dynamic_invariant1 i1s true false true))

;; H
  (assert (dynamic_invariant1 d true false true))

;; H
  (assert (= result tmp))

;; H
  (assert (= tmp1 d))

;; H
  (assert (in_range1 tmp1))

;; H
  (assert (in_range1 tmp2))

;; H
  (assert
  (= (= o true)
  (or (and (<= 1 tmp2) (<= tmp2 1)) (and (<= 3 tmp2) (<= tmp2 3)))))

;; H
  (assert (= o1 (ite (in_range2 tmp2) o false)))

;; H
  (assert (= result1 (ite (not (= o1 true)) true false)))

;; H
  (assert (=> (= result1 true) (= temp___147 tmp2)))

;; H
  (assert
  (=> (= result1 true)
  (and (=> (<= 0 6) (in_range1 tmp3))
  (=> (in_range2 tmp3)
  (not (or (and (<= 1 tmp3) (<= tmp3 1)) (and (<= 3 tmp3) (<= tmp3 3))))))))

;; H
  (assert (=> (= result1 true) (in_range1 tmp4)))

;; H
  (assert
  (=> (= result1 true)
  (= (= o2 true)
  (or (and (<= 1 tmp4) (<= tmp4 1)) (and (<= 3 tmp4) (<= tmp4 3))))))

;; H
  (assert (=> (= result1 true) (= o3 (ite (in_range2 tmp4) o2 false))))

;; H
  (assert (=> (= result1 true) (= o4 (ite (not (= o3 true)) true false))))

;; H
  (assert
  (=> (= result1 true) (= result2 (ite (not (= o4 true)) true false))))

;; H
  (assert (=> (= result1 true) (= result2 true)))

;; H
  (assert (=> (= result1 true) (= tmp4 tmp5)))

;; H
  (assert (=> (= result1 true) (= tmp6 tmp4)))

;; H
  (assert (=> (= result1 true) (= (mk_int__ref tmp7) (mk_int__ref tmp5))))

;; H
  (assert (=> (= result1 true) (= tmp8 tmp6)))

;; H
  (assert (=> (not (= result1 true)) (= tmp2 tmp7)))

;; H
  (assert (=> (not (= result1 true)) (= tmp8 tmp2)))

(assert
;; WP_parameter_def
 ;; File "days.adb", line 4, characters 0-0
  (not (or (and (<= 1 tmp7) (<= tmp7 1)) (and (<= 3 tmp7) (<= tmp7 3)))))
(check-sat)
(exit)
