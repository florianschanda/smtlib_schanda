;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-sort s 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 127)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (s s) Bool)

(declare-const dummy1 s)

(declare-datatypes () ((s__ref (mk_s__ref (s__content s)))))
(define-fun s__ref___projection ((a s__ref)) s (s__content a))

(declare-sort t 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 127)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (t t) Bool)

(declare-const dummy2 t)

(declare-datatypes () ((t__ref (mk_t__ref (t__content t)))))
(define-fun t__ref___projection ((a t__ref)) t (t__content a))

(define-fun dynamic_invariant1 ((temp___expr_177 Int)
  (temp___is_init_174 Bool) (temp___skip_constant_175 Bool)
  (temp___do_toplevel_176 Bool)) Bool (=>
                                      (or (= temp___is_init_174 true)
                                      (<= 1 127)) (in_range2
                                      temp___expr_177)))

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-sort e 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq3 (e e) Bool)

(declare-const dummy3 e)

(declare-datatypes () ((e__ref (mk_e__ref (e__content e)))))
(define-fun e__ref___projection ((a e__ref)) e (e__content a))

(define-fun dynamic_invariant2 ((temp___expr_183 Int)
  (temp___is_init_180 Bool) (temp___skip_constant_181 Bool)
  (temp___do_toplevel_182 Bool)) Bool (=>
                                      (or (= temp___is_init_180 true)
                                      (<= 0 3)) (in_range3 temp___expr_183)))

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(define-fun dynamic_invariant3 ((temp___expr_171 Int)
  (temp___is_init_168 Bool) (temp___skip_constant_169 Bool)
  (temp___do_toplevel_170 Bool)) Bool (=>
                                      (or (= temp___is_init_168 true)
                                      (<= 1 127)) (in_range1
                                      temp___expr_171)))

(declare-const x Int)

(declare-const y Int)

(declare-const min Int)

(declare-const max Int)

(declare-const v Int)

(declare-const w Int)

(declare-const mint Int)

(declare-const maxt Int)

(declare-const aa Int)

(declare-const cc Int)

(declare-const mine Int)

(declare-const maxe Int)

(declare-const result Int)

(declare-const x1 Int)

(declare-const result1 Int)

(declare-const y1 Int)

(declare-const result2 Int)

(declare-const v1 Int)

(declare-const result3 Int)

(declare-const w1 Int)

(declare-const result4 Int)

(declare-const aa1 Int)

(declare-const result5 Int)

(declare-const cc1 Int)

(declare-const min1 Int)

(declare-const max1 Int)

;; H
  (assert (= result x))

;; H
  (assert (= x1 1))

;; H
  (assert (in_range x1))

;; H
  (assert (= result1 y))

;; H
  (assert (= y1 127))

;; H
  (assert (in_range y1))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range min)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range max)))

;; H
  (assert (= result2 v))

;; H
  (assert (= v1 1))

;; H
  (assert (in_range2 v1))

;; H
  (assert (= result3 w))

;; H
  (assert (= w1 127))

;; H
  (assert (in_range2 w1))

;; H
  (assert (=> (<= 1 127) (in_range2 mint)))

;; H
  (assert (=> (<= 1 127) (in_range2 maxt)))

;; H
  (assert (= result4 aa))

;; H
  (assert (= aa1 0))

;; H
  (assert (in_range3 aa1))

;; H
  (assert (= result5 cc))

;; H
  (assert (= cc1 2))

;; H
  (assert (in_range3 cc1))

;; H
  (assert (=> (<= 0 3) (in_range3 mine)))

;; H
  (assert (=> (<= 0 3) (in_range3 maxe)))

;; H
  (assert (and (in_range min1) (in_range max1)))

(assert
;; WP_parameter_def
 ;; File "minmax.adb", line 19, characters 0-0
  (not (in_range1 y1)))
(check-sat)
(exit)
