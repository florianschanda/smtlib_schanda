;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq (us_rep us_rep) Bool)

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun user_eq (us_rep us_rep) Bool)

(declare-const dummy us_rep)

(declare-datatypes ((file_type__ref 0))
(((mk_file_type__ref (file_type__content us_rep)))))
(define-fun file_type__ref___2__projection ((a file_type__ref)) us_rep
  (file_type__content a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-fun status (us_rep) Int)

(declare-fun status__function_guard (Int us_rep) Bool)

(declare-sort file_status 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (file_status file_status) Bool)

(declare-const dummy1 file_status)

(declare-datatypes ((file_status__ref 0))
(((mk_file_status__ref (file_status__content file_status)))))
(define-fun file_status__ref___2__projection ((a file_status__ref)) file_status
  (file_status__content a))

(define-fun dynamic_invariant ((temp___expr_643 Int)
  (temp___is_init_640 Bool) (temp___skip_constant_641 Bool)
  (temp___do_toplevel_642 Bool)) Bool (=>
                                      (or (= temp___is_init_640 true)
                                      (<= 0 10)) (in_range1 temp___expr_643)))

(declare-fun is_readable (us_rep) Bool)

(declare-fun is_readable__function_guard (Bool us_rep) Bool)

(declare-fun is_open (us_rep) Bool)

(declare-fun is_open__function_guard (Bool us_rep) Bool)

(declare-fun mode__2 (us_rep) Int)

(declare-fun mode__2__function_guard (Int us_rep) Bool)

;; is_readable__def_axiom
  (assert
  (forall ((file us_rep))
  (! (= (= (is_readable file) true)
     (and (= (is_open file) true) (= (mode__2 file) 0))) :pattern ((is_readable
                                                                   file)) )))

(declare-fun is_writable (us_rep) Bool)

(declare-fun is_writable__function_guard (Bool us_rep) Bool)

;; is_writable__def_axiom
  (assert
  (forall ((file us_rep))
  (! (= (= (is_writable file) true)
     (and (= (is_open file) true)
     (or (= (mode__2 file) 1) (= (mode__2 file) 2)))) :pattern ((is_writable
                                                                file)) )))

(declare-sort file_mode 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (file_mode file_mode) Bool)

(declare-const dummy2 file_mode)

(declare-datatypes ((file_mode__ref 0))
(((mk_file_mode__ref (file_mode__content file_mode)))))
(define-fun file_mode__ref___3__projection ((a file_mode__ref)) file_mode
  (file_mode__content a))

(define-fun dynamic_invariant1 ((temp___expr_655 Int)
  (temp___is_init_652 Bool) (temp___skip_constant_653 Bool)
  (temp___do_toplevel_654 Bool)) Bool (=>
                                      (or (= temp___is_init_652 true)
                                      (<= 0 2)) (in_range2 temp___expr_655)))

(declare-const standard_input us_rep)

(declare-const standard_output us_rep)

(declare-const standard_error us_rep)

(declare-const o Bool)

(declare-const o1 Bool)

(declare-const o2 Bool)

(declare-const o3 Bool)

(declare-const o4 Int)

(declare-const o5 Bool)

(declare-const o6 Bool)

(declare-const o7 Int)

(declare-const o8 Bool)

(declare-const o9 Bool)

(declare-const o10 Int)

(declare-const o11 Bool)

(declare-const o12 Bool)

(declare-const result Bool)

;; H
  (assert (and (= o10 (status standard_error)) (in_range1 o10)))

;; H
  (assert (= o11 (ite (= o10 1) true false)))

;; H
  (assert (and (= o7 (status standard_output)) (in_range1 o7)))

;; H
  (assert (= o8 (ite (= o7 1) true false)))

;; H
  (assert (and (= o4 (status standard_input)) (in_range1 o4)))

;; H
  (assert (= o5 (ite (= o4 1) true false)))

;; H
  (assert
  (and (= o2 (is_writable standard_error))
  (= (= o2 true)
  (and (= (is_open standard_error) true)
  (or (= (mode__2 standard_error) 1) (= (mode__2 standard_error) 2))))))

;; H
  (assert
  (and (= o (is_writable standard_output))
  (= (= o true)
  (and (= (is_open standard_output) true)
  (or (= (mode__2 standard_output) 1) (= (mode__2 standard_output) 2))))))

;; H
  (assert
  (and (= o1 (is_readable standard_input))
  (= (= o1 true)
  (and (= (is_open standard_input) true) (= (mode__2 standard_input) 0)))))

;; H
  (assert (= o3 (ite (= o1 true) o false)))

;; H
  (assert (= o6 (ite (= o3 true) o2 false)))

;; H
  (assert (= o9 (ite (= o6 true) o5 false)))

;; H
  (assert (= o12 (ite (= o9 true) o8 false)))

;; H
  (assert (= result (ite (= o12 true) o11 false)))

(assert
;; WP_parameter_def
 ;; File "spark-text_io.ads", line 81, characters 0-0
  (not (= (is_readable standard_input) true)))
(check-sat)
(exit)
