;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.6)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
(set-option :smt.mbqi false)
(set-option :smt.macro-finder true)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun nth ((_ BitVec 64) Int) Bool)

(declare-fun lsr ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun asr ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun lsl ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun rotate_right1 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun rotate_left1 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 64)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i)
                                         (<= i 18446744073709551615)))

(declare-fun nth_bv ((_ BitVec 64) (_ BitVec 64)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)
  (_ BitVec 64)) Bool)

(define-fun eq_sub ((a (_ BitVec 64)) (b (_ BitVec 64)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes ((t__ref 0)) (((mk_t__ref (t__content (_ BitVec 64))))))
(declare-fun power ((_ BitVec 64) Int) (_ BitVec 64))

(define-fun bv_min ((x (_ BitVec 64))
  (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 64))
  (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) y x))

(define-fun to_int2 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort natural 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-const dummy natural)

(declare-datatypes ((natural__ref 0))
(((mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range1
                                     temp___expr_33)))

(declare-sort unsigned_64 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 64))

(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 64)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 64))

(declare-fun user_eq1 (unsigned_64 unsigned_64) Bool)

(declare-const dummy1 unsigned_64)

(declare-datatypes ((unsigned_64__ref 0))
(((mk_unsigned_64__ref (unsigned_64__content unsigned_64)))))
(define-fun unsigned_64__ref___projection ((a unsigned_64__ref)) unsigned_64
  (unsigned_64__content a))

(define-fun dynamic_invariant1 ((temp___expr_184 (_ BitVec 64))
  (temp___is_init_181 Bool) (temp___skip_constant_182 Bool)
  (temp___do_toplevel_183 Bool)) Bool true)

(declare-const value (_ BitVec 64))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const left Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const flag Bool)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const left_bv (_ BitVec 64))

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const mask (_ BitVec 64))

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const r (_ BitVec 64))

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

;; left_bv__def_axiom
  (assert (= left_bv ((_ int2bv 64) left)))

;; mask__def_axiom
  (assert (= mask (bvshl ((_ int2bv 64) 1) ((_ int2bv 64) (- 63 left)))))

;; r__def_axiom
  (assert
  (= r (ite (= flag true) (bvor value mask) (bvand value (bvnot mask)))))

(declare-const bitwalker__pokebit64__result (_ BitVec 64))

(declare-const o Int)

(declare-const o1 Int)

(declare-const o2 (_ BitVec 64))

(declare-const bitwalker__pokebit64__B_1__mask__assume (_ BitVec 64))

(declare-const bitwalker__pokebit64__B_1__r__assume (_ BitVec 64))

(declare-const i (_ BitVec 64))

(declare-const i1 Int)

(declare-const o3 Int)

(declare-const o4 Bool)

(declare-const o5 Int)

(declare-const o6 Bool)

(declare-const result (_ BitVec 64))

(declare-const bitwalker__pokebit64__result1 (_ BitVec 64))

(declare-const bitwalker__pokebit64__result2 (_ BitVec 64))

(declare-const bitwalker__pokebit64__result3 (_ BitVec 64))

(declare-const bitwalker__pokebit64__result4 (_ BitVec 64))

(declare-const bitwalker__pokebit64__result5 (_ BitVec 64))

(define-fun bitwalker__pokebit64__result6 () t__ref (mk_t__ref
                                                    bitwalker__pokebit64__result4))

(define-fun bitwalker__pokebit64__result7 () t__ref (mk_t__ref
                                                    bitwalker__pokebit64__result2))

(define-fun result1 () t__ref (mk_t__ref result))

(define-fun bitwalker__pokebit64__result8 () t__ref (mk_t__ref
                                                    bitwalker__pokebit64__result))

;; H
  (assert true)

;; H
  (assert (in_range1 left))

;; H
  (assert (< left 64))

;; H
  (assert (= ((_ int2bv 64) left) left_bv))

;; H
  (assert true)

(assert
;; WP_parameter_def
 ;; File "interfac.ads", line 77, characters 0-0
  (not (bvult left_bv ((_ int2bv 64) 64))))
(check-sat)
(exit)
