;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-datatypes ((us_split_fields 0))
(((mk___split_fields (rec__volatiles_legal__vol_rec_t__x integer)))))
(define-fun us_split_fields_X__projection ((a us_split_fields)) integer
  (rec__volatiles_legal__vol_rec_t__x a))

(declare-datatypes ((us_split_fields__ref 0))
(((mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (= (to_rep
                           (rec__volatiles_legal__vol_rec_t__x
                           (us_split_fields1 a))) (to_rep
                                                  (rec__volatiles_legal__vol_rec_t__x
                                                  (us_split_fields1 b))))
                   true false))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const volatiles_legal__vol_rec_t__x__first__bit Int)

(declare-const volatiles_legal__vol_rec_t__x__last__bit Int)

(declare-const volatiles_legal__vol_rec_t__x__position Int)

;; volatiles_legal__vol_rec_t__x__first__bit_axiom
  (assert (<= 0 volatiles_legal__vol_rec_t__x__first__bit))

;; volatiles_legal__vol_rec_t__x__last__bit_axiom
  (assert
  (< volatiles_legal__vol_rec_t__x__first__bit volatiles_legal__vol_rec_t__x__last__bit))

;; volatiles_legal__vol_rec_t__x__position_axiom
  (assert (<= 0 volatiles_legal__vol_rec_t__x__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes ((vol_rec_t__ref 0))
(((mk_vol_rec_t__ref (vol_rec_t__content us_rep)))))
(define-fun vol_rec_t__ref___projection ((a vol_rec_t__ref)) us_rep (vol_rec_t__content
                                                                    a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const tmp1 Int)

(declare-const tmp2 Int)

(declare-const o integer)

(declare-const o1 integer)

(declare-const o2 integer)

(declare-const o3 Int)

(declare-const o4 integer)

(declare-const o5 integer)

(declare-const temp___219 integer)

(declare-const o6 integer)

(declare-const o7 integer)

(declare-const o8 integer)

(declare-const o9 Int)

(declare-const o10 integer)

(declare-const o11 integer)

(declare-const temp___221 integer)

(declare-const o12 integer)

(declare-const o13 integer)

(declare-const o14 integer)

(declare-const o15 Int)

(declare-const o16 integer)

(declare-const o17 us_split_fields)

(declare-const o18 integer)

(declare-const o19 Int)

(declare-const par__split_fields us_split_fields)

(declare-const result us_split_fields__ref)

(declare-const par__split_fields1 us_split_fields)

(declare-const par__split_fields2 us_split_fields)

(declare-const result1 us_split_fields__ref)

(declare-const par__split_fields3 us_split_fields)

(declare-const par__split_fields4 us_split_fields)

(declare-const result2 int__ref)

(declare-const tmp11 Int)

(declare-const par__split_fields5 us_split_fields)

(declare-const result3 int__ref)

(declare-const tmp21 Int)

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range tmp1)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range tmp2)))

;; H
  (assert (= par__split_fields (mk___split_fields o)))

;; H
  (assert (= o o1))

;; H
  (assert (= o2 o1))

;; H
  (assert (= o3 (to_rep o2)))

;; H
  (assert (= (to_rep o4) o3))

;; H
  (assert (= o4 o5))

;; H
  (assert (= temp___219 o5))

;; H
  (assert (= result (mk___split_fields__ref par__split_fields)))

;; H
  (assert (= par__split_fields1 (mk___split_fields temp___219)))

;; H
  (assert (= par__split_fields2 (mk___split_fields o6)))

;; H
  (assert (= o6 o7))

;; H
  (assert (= o8 o7))

;; H
  (assert (= o9 (to_rep o8)))

;; H
  (assert (= (to_rep o10) o9))

;; H
  (assert (= o10 o11))

;; H
  (assert (= temp___221 o11))

;; H
  (assert (= result1 (mk___split_fields__ref par__split_fields2)))

;; H
  (assert (= par__split_fields3 (mk___split_fields temp___221)))

;; H
  (assert (= par__split_fields4 (mk___split_fields o12)))

;; H
  (assert (= o12 o13))

;; H
  (assert (= o14 o13))

;; H
  (assert (= o15 (to_rep o14)))

;; H
  (assert (= result2 (mk_int__ref tmp1)))

;; H
  (assert (= tmp11 o15))

;; H
  (assert (= par__split_fields5 (mk___split_fields o16)))

;; H
  (assert (= o17 (mk___split_fields o16)))

;; H
  (assert (= o18 (rec__volatiles_legal__vol_rec_t__x o17)))

;; H
  (assert (= o19 (to_rep o18)))

;; H
  (assert (= result3 (mk_int__ref tmp2)))

;; H
  (assert (= tmp21 o19))

(assert
;; WP_parameter_def
 ;; File "volatiles_legal.adb", line 32, characters 0-0
  (not (= tmp11 tmp21)))
(check-sat)
(exit)
