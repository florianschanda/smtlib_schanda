;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort natural 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-const dummy1 natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(declare-fun to_rep (natural) Int)

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort minutes_t 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 59)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (minutes_t minutes_t) Bool)

(declare-const dummy2 minutes_t)

(declare-datatypes ()
((minutes_t__ref (mk_minutes_t__ref (minutes_t__content minutes_t)))))
(define-fun minutes_t__ref___projection ((a minutes_t__ref)) minutes_t
  (minutes_t__content a))

(declare-fun to_rep1 (minutes_t) Int)

(declare-fun of_rep1 (Int) minutes_t)

;; inversion_axiom
  (assert
  (forall ((x minutes_t))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x minutes_t)) (! (in_range3
  (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort seconds_t 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 59)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (seconds_t seconds_t) Bool)

(declare-const dummy3 seconds_t)

(declare-datatypes ()
((seconds_t__ref (mk_seconds_t__ref (seconds_t__content seconds_t)))))
(define-fun seconds_t__ref___projection ((a seconds_t__ref)) seconds_t
  (seconds_t__content a))

(declare-fun to_rep2 (seconds_t) Int)

(declare-fun of_rep2 (Int) seconds_t)

;; inversion_axiom
  (assert
  (forall ((x seconds_t))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x seconds_t)) (! (in_range4
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__time__t__hours natural)(rec__time__t__minutes minutes_t)(rec__time__t__seconds seconds_t)))))
(define-fun us_split_fields_Hours__projection ((a us_split_fields)) natural
  (rec__time__t__hours a))

(define-fun us_split_fields_Minutes__projection ((a us_split_fields)) minutes_t
  (rec__time__t__minutes a))

(define-fun us_split_fields_Seconds__projection ((a us_split_fields)) seconds_t
  (rec__time__t__seconds a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep
                           (rec__time__t__hours (us_split_fields1 a)))
                        (to_rep (rec__time__t__hours (us_split_fields1 b))))
                        (= (to_rep1
                           (rec__time__t__minutes (us_split_fields1 a)))
                        (to_rep1
                        (rec__time__t__minutes (us_split_fields1 b)))))
                        (= (to_rep2
                           (rec__time__t__seconds (us_split_fields1 a)))
                        (to_rep2
                        (rec__time__t__seconds (us_split_fields1 b)))))
                   true false))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const time__t__hours__first__bit Int)

(declare-const time__t__hours__last__bit Int)

(declare-const time__t__hours__position Int)

;; time__t__hours__first__bit_axiom
  (assert (<= 0 time__t__hours__first__bit))

;; time__t__hours__last__bit_axiom
  (assert (< time__t__hours__first__bit time__t__hours__last__bit))

;; time__t__hours__position_axiom
  (assert (<= 0 time__t__hours__position))

(declare-const time__t__minutes__first__bit Int)

(declare-const time__t__minutes__last__bit Int)

(declare-const time__t__minutes__position Int)

;; time__t__minutes__first__bit_axiom
  (assert (<= 0 time__t__minutes__first__bit))

;; time__t__minutes__last__bit_axiom
  (assert (< time__t__minutes__first__bit time__t__minutes__last__bit))

;; time__t__minutes__position_axiom
  (assert (<= 0 time__t__minutes__position))

(declare-const time__t__seconds__first__bit Int)

(declare-const time__t__seconds__last__bit Int)

(declare-const time__t__seconds__position Int)

;; time__t__seconds__first__bit_axiom
  (assert (<= 0 time__t__seconds__first__bit))

;; time__t__seconds__last__bit_axiom
  (assert (< time__t__seconds__first__bit time__t__seconds__last__bit))

;; time__t__seconds__position_axiom
  (assert (<= 0 time__t__seconds__position))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))

(declare-const max us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const x us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range2
                                     temp___expr_33)))

(define-fun dynamic_invariant1 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant2 ((temp___expr_135 Int)
  (temp___is_init_132 Bool) (temp___skip_constant_133 Bool)
  (temp___do_toplevel_134 Bool)) Bool (=>
                                      (or (= temp___is_init_132 true)
                                      (<= 0 59)) (in_range3 temp___expr_135)))

(define-fun dynamic_invariant3 ((temp___expr_141 Int)
  (temp___is_init_138 Bool) (temp___skip_constant_139 Bool)
  (temp___do_toplevel_140 Bool)) Bool (=>
                                      (or (= temp___is_init_138 true)
                                      (<= 0 59)) (in_range4 temp___expr_141)))

;; max__def_axiom
  (assert
  (= max (mk___rep
         (mk___split_fields (of_rep 2147483647) (of_rep1 59) (of_rep2 59)))))

(declare-const result____split_fields natural)

(declare-const result____split_fields1 minutes_t)

(declare-const result____split_fields2 seconds_t)

(declare-const time__t_increment__result natural)

(declare-const time__t_increment__result1 minutes_t)

(declare-const time__t_increment__result2 seconds_t)

(declare-const o seconds_t)

(declare-const o1 minutes_t)

(declare-const o2 natural)

(declare-const o3 natural)

(declare-const o4 minutes_t)

(declare-const o5 seconds_t)

(declare-const temp___166 natural)

(declare-const temp___1661 minutes_t)

(declare-const temp___1662 seconds_t)

(declare-const o6 Int)

(declare-const o7 seconds_t)

(declare-const o8 natural)

(declare-const o9 minutes_t)

(declare-const o10 seconds_t)

(declare-const temp___165 natural)

(declare-const temp___1651 minutes_t)

(declare-const temp___1652 seconds_t)

(declare-const o11 seconds_t)

(declare-const o12 natural)

(declare-const o13 minutes_t)

(declare-const o14 seconds_t)

(declare-const temp___157 natural)

(declare-const temp___1571 minutes_t)

(declare-const temp___1572 seconds_t)

(declare-const o15 Int)

(declare-const o16 minutes_t)

(declare-const o17 natural)

(declare-const o18 minutes_t)

(declare-const o19 seconds_t)

(declare-const temp___163 natural)

(declare-const temp___1631 minutes_t)

(declare-const temp___1632 seconds_t)

(declare-const o20 minutes_t)

(declare-const o21 natural)

(declare-const o22 minutes_t)

(declare-const o23 seconds_t)

(declare-const temp___159 natural)

(declare-const temp___1591 minutes_t)

(declare-const temp___1592 seconds_t)

(declare-const o24 Int)

(declare-const o25 natural)

(declare-const o26 natural)

(declare-const o27 minutes_t)

(declare-const o28 seconds_t)

(declare-const temp___161 us_rep)

(declare-const result us_split_fields__ref)

(declare-const result____split_fields3 us_split_fields)

(declare-const result1 us_split_fields__ref)

(declare-const result____split_fields4 us_split_fields)

(declare-const result2 t__ref)

(declare-const time__t_increment__result3 us_rep)

(declare-const result3 us_split_fields__ref)

(declare-const result____split_fields5 us_split_fields)

(declare-const result4 us_split_fields__ref)

(declare-const result____split_fields6 us_split_fields)

(declare-const result5 t__ref)

(declare-const time__t_increment__result4 us_rep)

(declare-const result6 us_split_fields__ref)

(declare-const result____split_fields7 us_split_fields)

(declare-const result7 us_split_fields__ref)

(declare-const result____split_fields8 us_split_fields)

(declare-const result8 t__ref)

(declare-const time__t_increment__result5 us_rep)

(declare-const result____split_fields9 us_split_fields__ref)

(declare-const time__t_increment__result6 t__ref)

(declare-const result____split_fields10 us_split_fields)

(declare-const time__t_increment__result7 us_rep)

(declare-const result____split_fields11 us_split_fields__ref)

(declare-const time__t_increment__result8 t__ref)

(declare-const result____split_fields12 us_split_fields)

(declare-const time__t_increment__result9 us_rep)

(declare-const result____split_fields13 us_split_fields__ref)

(declare-const time__t_increment__result10 t__ref)

(declare-const result____split_fields14 us_split_fields)

(declare-const time__t_increment__result11 us_rep)

(declare-const result____split_fields15 us_split_fields__ref)

(declare-const time__t_increment__result12 t__ref)

(declare-const result____split_fields16 us_split_fields)

(declare-const time__t_increment__result13 us_rep)

(define-fun time__t_increment__result14 () t__ref (mk_t__ref
                                                  (mk___rep
                                                  (mk___split_fields
                                                  time__t_increment__result
                                                  time__t_increment__result1
                                                  time__t_increment__result2))))

;; H
  (assert (= (to_rep2 o) 59))

;; H
  (assert (= (to_rep1 o1) 59))

;; H
  (assert (= (to_rep o2) 2147483647))

;; H
  (assert (= o2 o3))

;; H
  (assert (= o1 o4))

;; H
  (assert (= o o5))

;; H
  (assert (= temp___166 o3))

;; H
  (assert (= temp___1661 o4))

;; H
  (assert (= temp___1662 o5))

;; H
  (assert
  (= (mk___rep (mk___split_fields temp___166 temp___1661 temp___1662))
  max))

;; H
  (assert (not (= (bool_eq x max) true)))

;; H
  (assert
  (= result (mk___split_fields__ref
            (mk___split_fields result____split_fields result____split_fields1
            result____split_fields2))))

;; H
  (assert (= result____split_fields3 (us_split_fields1 x)))

;; H
  (assert (= time__t_increment__result10 time__t_increment__result8))

;; H
  (assert (= result____split_fields13 result____split_fields11))

;; H
  (assert (= time__t_increment__result11 time__t_increment__result9))

;; H
  (assert (= result____split_fields14 result____split_fields12))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= time__t_increment__result8 (mk_t__ref time__t_increment__result3))))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= result____split_fields11 (mk___split_fields__ref
                              result____split_fields4))))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= time__t_increment__result9 time__t_increment__result3)))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= result____split_fields12 result____split_fields4)))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (and (= o6 (+ (to_rep2 (rec__time__t__seconds result____split_fields3)) 1))
  (in_range4
  (+ (to_rep2 (rec__time__t__seconds result____split_fields3)) 1)))))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= (to_rep2 o7) o6)))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= (rec__time__t__hours result____split_fields3) o8)))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= (rec__time__t__minutes result____split_fields3) o9)))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= o7 o10)))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= temp___165 o8)))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= temp___1651 o9)))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= temp___1652 o10)))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= result1 (mk___split_fields__ref result____split_fields3))))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= result____split_fields4 (mk___split_fields temp___165 temp___1651
                             temp___1652))))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= result2 time__t_increment__result14)))

;; H
  (assert
  (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)
  (= time__t_increment__result3 (mk___rep result____split_fields4))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= time__t_increment__result8 time__t_increment__result6)))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= result____split_fields11 result____split_fields9)))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= time__t_increment__result9 time__t_increment__result7)))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= result____split_fields12 result____split_fields10)))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= (to_rep2 o11) 0)))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= (rec__time__t__hours result____split_fields3) o12)))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= (rec__time__t__minutes result____split_fields3) o13)))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= o11 o14)))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= temp___157 o12)))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= temp___1571 o13)))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= temp___1572 o14)))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= result3 (mk___split_fields__ref result____split_fields3))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (= result____split_fields5 (mk___split_fields temp___157 temp___1571
                             temp___1572))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= time__t_increment__result6 (mk_t__ref time__t_increment__result4)))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= result____split_fields9 (mk___split_fields__ref result____split_fields6)))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= time__t_increment__result7 time__t_increment__result4))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= result____split_fields10 result____split_fields6))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (and
  (= o15 (+ (to_rep1 (rec__time__t__minutes result____split_fields5)) 1))
  (in_range3
  (+ (to_rep1 (rec__time__t__minutes result____split_fields5)) 1))))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= (to_rep1 o16) o15))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= (rec__time__t__hours result____split_fields5) o17))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= o16 o18))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= (rec__time__t__seconds result____split_fields5) o19))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= temp___163 o17))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= temp___1631 o18))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= temp___1632 o19))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= result4 (mk___split_fields__ref result____split_fields5)))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= result____split_fields6 (mk___split_fields temp___163 temp___1631
                             temp___1632)))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= result5 time__t_increment__result14))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)
  (= time__t_increment__result4 (mk___rep result____split_fields6)))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= time__t_increment__result6 (mk_t__ref time__t_increment__result5)))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= result____split_fields9 (mk___split_fields__ref result____split_fields8)))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= time__t_increment__result7 time__t_increment__result5))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= result____split_fields10 result____split_fields8))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= (to_rep1 o20) 0))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= (rec__time__t__hours result____split_fields5) o21))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= o20 o22))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= (rec__time__t__seconds result____split_fields5) o23))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= temp___159 o21))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= temp___1591 o22))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= temp___1592 o23))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= result6 (mk___split_fields__ref result____split_fields5)))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= result____split_fields7 (mk___split_fields temp___159 temp___1591
                             temp___1592)))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (and (= o24 (+ (to_rep (rec__time__t__hours result____split_fields7)) 1))
  (in_range1 (+ (to_rep (rec__time__t__hours result____split_fields7)) 1))))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= (to_rep o25) o24))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= o25 o26))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= (rec__time__t__minutes result____split_fields7) o27))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= (rec__time__t__seconds result____split_fields7) o28))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= temp___161 (mk___rep (mk___split_fields o26 o27 o28))))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= result7 (mk___split_fields__ref result____split_fields7)))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= result____split_fields8 (us_split_fields1 temp___161)))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= result8 time__t_increment__result14))))

;; H
  (assert
  (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59))
  (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59))
  (= time__t_increment__result5 (mk___rep result____split_fields8)))))

;; H
  (assert (= time__t_increment__result12 time__t_increment__result10))

;; H
  (assert (= result____split_fields15 result____split_fields13))

;; H
  (assert (= time__t_increment__result13 time__t_increment__result11))

;; H
  (assert (= result____split_fields16 result____split_fields14))

;; H
  (assert
  (=> (= (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) true)
  (and
  (and
  (= (to_rep2
     (rec__time__t__seconds
     (us_split_fields1 (t__content time__t_increment__result12)))) (+
  (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 1))
  (= (to_rep1
     (rec__time__t__minutes
     (us_split_fields1 (t__content time__t_increment__result12)))) (to_rep1
                                                                   (rec__time__t__minutes
                                                                   (us_split_fields1
                                                                   x)))))
  (= (to_rep
     (rec__time__t__hours
     (us_split_fields1 (t__content time__t_increment__result12)))) (to_rep
                                                                   (rec__time__t__hours
                                                                   (us_split_fields1
                                                                   x)))))))

;; H
  (assert
  (=>
  (= (ite (= (= (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) true) (<
     (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) false) true)
  (and
  (and
  (= (to_rep2
     (rec__time__t__seconds
     (us_split_fields1 (t__content time__t_increment__result12)))) 0)
  (= (to_rep1
     (rec__time__t__minutes
     (us_split_fields1 (t__content time__t_increment__result12)))) (+
  (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 1)))
  (= (to_rep
     (rec__time__t__hours
     (us_split_fields1 (t__content time__t_increment__result12)))) (to_rep
                                                                   (rec__time__t__hours
                                                                   (us_split_fields1
                                                                   x)))))))

;; H
  (assert
  (= (ite (= (= (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) true) (=
     (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) false) true))

(assert
;; WP_parameter_def
 ;; File "time.ads", line 6, characters 0-0
  (not
  (= (to_rep2
     (rec__time__t__seconds
     (us_split_fields1 (t__content time__t_increment__result12)))) 0)))
(check-sat)
(exit)
