(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

predicate in_range(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq1 : int, int -> bool

axiom bool_eq_def :
  (forall x:int. forall y:int [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type my_int

predicate in_range1(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : my_int, my_int -> bool

logic dummy1 : my_int

type my_int__ref = { my_int__content : my_int
}

function my_int__ref___projection(a: my_int__ref) : my_int =
  (a).my_int__content

logic attr__ATTRIBUTE_ADDRESS : int

type t

predicate in_range2(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : t, t -> bool

logic dummy2 : t

type t__ref = { t__content : t
}

function t__ref___projection(a: t__ref) : t = (a).t__content

logic double1 : int -> int

logic double1__function_guard : int, int -> prop

axiom double1__post_axiom :
  (forall x:int [double1(x)]. (in_range2(x) -> in_range2(double1(x))))

type t1

predicate in_range3(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq3 : t1, t1 -> bool

logic dummy3 : t1

type t__ref1 = { t__content1 : t1
}

function t__ref___2__projection(a: t__ref1) : t1 = (a).t__content1

logic double2 : int -> int

logic double2__function_guard : int, int -> prop

axiom double2__post_axiom :
  (forall x:int [double2(x)]. (in_range3(x) -> in_range3(double2(x))))

type t2

predicate in_range4(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : t2, t2 -> bool

logic dummy4 : t2

type t__ref2 = { t__content2 : t2
}

function t__ref___3__projection(a: t__ref2) : t2 = (a).t__content2

logic ten1 : int -> int

logic ten1__function_guard : int, int -> prop

axiom ten1__post_axiom :
  (forall x:int [ten1(x)]. (in_range4(x) -> in_range4(ten1(x))))

type t3

predicate in_range5(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : t3, t3 -> bool

logic dummy5 : t3

type t__ref3 = { t__content3 : t3
}

function t__ref___4__projection(a: t__ref3) : t3 = (a).t__content3

logic ten2 : int -> int

logic ten2__function_guard : int, int -> prop

axiom ten2__post_axiom :
  (forall x:int [ten2(x)]. (in_range5(x) -> in_range5(ten2(x))))

logic false1 : int -> bool

logic false1__function_guard : bool, int -> prop

type t4

predicate in_range6(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : t4, t4 -> bool

logic dummy6 : t4

type t__ref4 = { t__content4 : t4
}

function t__ref___5__projection(a: t__ref4) : t4 = (a).t__content4

axiom false1__post_axiom : true

logic false2 : int -> bool

logic false2__function_guard : bool, int -> prop

type t5

predicate in_range7(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq7 : t5, t5 -> bool

logic dummy7 : t5

type t__ref5 = { t__content5 : t5
}

function t__ref___6__projection(a: t__ref5) : t5 = (a).t__content5

axiom false2__post_axiom : true

logic fixed_true1 : int -> bool

logic fixed_true1__function_guard : bool, int -> prop

type t6

predicate in_range8(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq8 : t6, t6 -> bool

logic dummy8 : t6

type t__ref6 = { t__content6 : t6
}

function t__ref___7__projection(a: t__ref6) : t6 = (a).t__content6

axiom fixed_true1__post_axiom : true

logic fixed_true2 : int -> bool

logic fixed_true2__function_guard : bool, int -> prop

type t7

predicate in_range9(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq9 : t7, t7 -> bool

logic dummy9 : t7

type t__ref7 = { t__content7 : t7
}

function t__ref___8__projection(a: t__ref7) : t7 = (a).t__content7

axiom fixed_true2__post_axiom : true

logic true1R : int -> bool

logic true1R__function_guard : bool, int -> prop

type t8

predicate in_range10(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq10 : t8, t8 -> bool

logic dummy10 : t8

type t__ref8 = { t__content8 : t8
}

function t__ref___9__projection(a: t__ref8) : t8 = (a).t__content8

axiom true1R__post_axiom : true

logic true2R : int -> bool

logic true2R__function_guard : bool, int -> prop

type t9

predicate in_range11(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq12 : int, int -> bool

axiom bool_eq_def11 :
  (forall x:int. forall y:int [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq11 : t9, t9 -> bool

logic dummy11 : t9

type t__ref9 = { t__content9 : t9
}

function t__ref___10__projection(a: t__ref9) : t9 = (a).t__content9

axiom true2R__post_axiom : true

logic fixed_false1R : int -> bool

logic fixed_false1R__function_guard : bool, int -> prop

type t10

predicate in_range12(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq13 : int, int -> bool

axiom bool_eq_def12 :
  (forall x:int. forall y:int [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq12 : t10, t10 -> bool

logic dummy12 : t10

type t__ref10 = { t__content10 : t10
}

function t__ref___11__projection(a: t__ref10) : t10 = (a).t__content10

axiom fixed_false1R__post_axiom : true

logic fixed_false2R : int -> bool

logic fixed_false2R__function_guard : bool, int -> prop

type t11

predicate in_range13(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq14 : int, int -> bool

axiom bool_eq_def13 :
  (forall x:int. forall y:int [bool_eq14(x, y)]. (((x = y) -> (bool_eq14(x,
  y) = true)) and ((not (x = y)) -> (bool_eq14(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE13 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check13 : us_image -> prop

logic attr__ATTRIBUTE_VALUE13 : us_image -> int

logic user_eq13 : t11, t11 -> bool

logic dummy13 : t11

type t__ref11 = { t__content11 : t11
}

function t__ref___12__projection(a: t__ref11) : t11 = (a).t__content11

axiom fixed_false2R__post_axiom : true

 (* File "opers.ads", line 7, characters 0-0 *)
goal WP_parameter_def :
  (forall a:int. forall o:int. forall o1:int. forall o2:int. forall o3:int.
  forall o4:int. forall o5:int. forall result:int. forall a1:int.
  forall result1:int. forall a2:int. forall result2:int. forall a3:int.
  forall result3:int. forall a4:int. (in_range(a) -> ((((o = double1(a)) and
  in_range2(o)) and ((result = a) and (a1 = o))) -> ((((o1 = double2(a1)) and
  in_range3(o1)) and ((result1 = a1) and (a2 = o1))) -> (((((o2 = a2) and
  in_range1(a2)) and ((o3 = ten1(o2)) and in_range4(o3))) and
  ((result2 = a2) and (a3 = o3))) -> (((((o4 = a3) and in_range1(a3)) and
  ((o5 = ten2(o4)) and in_range5(o5))) and ((result3 = a3) and (a4 = o5))) ->
  ((not (false1(a4) = true)) -> ((not (false2(a4) = true)) ->
  ((fixed_false1R(a4) = true) -> ((fixed_false2R(a4) = true) ->
  ((true1R(a4) = true) -> ((true2R(a4) = true) -> in_range1(a4)))))))))))))
