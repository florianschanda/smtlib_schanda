;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8))
                                           (bv2nat x) (- (- 256 (bv2nat x)))))

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvlshr x n) (lsr x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvashr x n) (asr x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvshl x n) (lsl x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8)))))
  (rotate_left1 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8)))))
  (rotate_right1 v (bv2nat n)))))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (nth x (bv2nat i)) (nth_bv x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 8)) (i Int))
  (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i)))
  (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(declare-fun nth1 ((_ BitVec 16) Int) Bool)

(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16))
                                            (bv2nat x)
                                            (- (- 65536 (bv2nat x)))))

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvlshr x n) (lsr1 x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvashr x n) (asr1 x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvshl x n) (lsl1 x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16)))))
  (rotate_left2 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16)))))
  (rotate_right2 v (bv2nat n)))))

(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (nth1 x (bv2nat i)) (nth_bv1 x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 16)) (i Int))
  (=> (and (<= 0 i) (< i 65536))
  (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))

(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i)))
  (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))

(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(declare-fun nth2 ((_ BitVec 32) Int) Bool)

(declare-fun lsr2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun asr2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun lsl2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_right3 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_left3 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun to_int3 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32))
                                            (bv2nat x)
                                            (- (- 4294967296 (bv2nat x)))))

(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvlshr x n) (lsr2 x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvashr x n) (asr2 x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvshl x n) (lsl2 x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32)))))
  (rotate_left3 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 32)) (n (_ BitVec 32)))
  (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32)))))
  (rotate_right3 v (bv2nat n)))))

(declare-fun nth_bv2 ((_ BitVec 32) (_ BitVec 32)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 32)) (i (_ BitVec 32)))
  (= (= (nth_bv2 x i) true)
  (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 32)) (i (_ BitVec 32)))
  (= (nth2 x (bv2nat i)) (nth_bv2 x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 32)) (i Int))
  (=> (and (<= 0 i) (< i 4294967296))
  (= (nth_bv2 x ((_ int2bv 32) i)) (nth2 x i)))))

(declare-fun eq_sub_bv2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
  (_ BitVec 32)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32))
  (n (_ BitVec 32)))
  (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i)))
  (= (eq_sub_bv2 a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub2 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32))
  (n (_ BitVec 32)))
  (= (eq_sub2 a b (bv2nat i) (bv2nat n)) (eq_sub_bv2 a b i n))))

(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 (_ BitVec 32))))))
(declare-fun power2 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun bv_min2 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max2 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(define-fun to_int4 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort bits_1 0)

(define-fun in_range1 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 1))))

(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 8))

(declare-fun user_eq (bits_1 bits_1) Bool)

(declare-const dummy bits_1)

(declare-datatypes ()
((bits_1__ref (mk_bits_1__ref (bits_1__content bits_1)))))
(define-fun bits_1__ref___projection ((a bits_1__ref)) bits_1 (bits_1__content
                                                              a))

(declare-fun to_rep (bits_1) (_ BitVec 8))

(declare-fun of_rep ((_ BitVec 8)) bits_1)

;; inversion_axiom
  (assert
  (forall ((x bits_1)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x bits_1)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 2))))
     (=> (in_range1 y) (= (to_rep (of_rep x)) y))) :pattern ((to_rep
                                                             (of_rep x))) )))

(define-fun to_int5 ((x bits_1)) Int (bv2nat (to_rep x)))

;; range_int_axiom
  (assert
  (forall ((x bits_1)) (! (in_range_int
  (to_int5 x)) :pattern ((to_int5 x)) )))

(declare-sort bits_2 0)

(define-fun in_range2 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 3))))

(define-fun in_range_int1 ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 8))

(declare-fun user_eq1 (bits_2 bits_2) Bool)

(declare-const dummy1 bits_2)

(declare-datatypes ()
((bits_2__ref (mk_bits_2__ref (bits_2__content bits_2)))))
(define-fun bits_2__ref___projection ((a bits_2__ref)) bits_2 (bits_2__content
                                                              a))

(declare-fun to_rep1 (bits_2) (_ BitVec 8))

(declare-fun of_rep1 ((_ BitVec 8)) bits_2)

;; inversion_axiom
  (assert
  (forall ((x bits_2))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_2)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 4))))
     (=> (in_range2 y) (= (to_rep1 (of_rep1 x)) y))) :pattern ((to_rep1
                                                               (of_rep1 x))) )))

(define-fun to_int6 ((x bits_2)) Int (bv2nat (to_rep1 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_2)) (! (in_range_int1
  (to_int6 x)) :pattern ((to_int6 x)) )))

(declare-sort bits_3 0)

(define-fun in_range3 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 7))))

(define-fun in_range_int2 ((x Int)) Bool (and (<= 0 x) (<= x 7)))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))

(declare-fun user_eq2 (bits_3 bits_3) Bool)

(declare-const dummy2 bits_3)

(declare-datatypes ()
((bits_3__ref (mk_bits_3__ref (bits_3__content bits_3)))))
(define-fun bits_3__ref___projection ((a bits_3__ref)) bits_3 (bits_3__content
                                                              a))

(declare-fun to_rep2 (bits_3) (_ BitVec 8))

(declare-fun of_rep2 ((_ BitVec 8)) bits_3)

;; inversion_axiom
  (assert
  (forall ((x bits_3))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_3)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 8))))
     (=> (in_range3 y) (= (to_rep2 (of_rep2 x)) y))) :pattern ((to_rep2
                                                               (of_rep2 x))) )))

(define-fun to_int7 ((x bits_3)) Int (bv2nat (to_rep2 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_3)) (! (in_range_int2
  (to_int7 x)) :pattern ((to_int7 x)) )))

(declare-sort bits_5 0)

(define-fun in_range4 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 31))))

(define-fun in_range_int3 ((x Int)) Bool (and (<= 0 x) (<= x 31)))

(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 8))

(declare-fun user_eq3 (bits_5 bits_5) Bool)

(declare-const dummy3 bits_5)

(declare-datatypes ()
((bits_5__ref (mk_bits_5__ref (bits_5__content bits_5)))))
(define-fun bits_5__ref___projection ((a bits_5__ref)) bits_5 (bits_5__content
                                                              a))

(declare-fun to_rep3 (bits_5) (_ BitVec 8))

(declare-fun of_rep3 ((_ BitVec 8)) bits_5)

;; inversion_axiom
  (assert
  (forall ((x bits_5))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_5)) (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 32))))
     (=> (in_range4 y) (= (to_rep3 (of_rep3 x)) y))) :pattern ((to_rep3
                                                               (of_rep3 x))) )))

(define-fun to_int8 ((x bits_5)) Int (bv2nat (to_rep3 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_5)) (! (in_range_int3
  (to_int8 x)) :pattern ((to_int8 x)) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__dw1000__register_types__sys_cfg_type__ffen bits_1)(rec__dw1000__register_types__sys_cfg_type__ffbc bits_1)(rec__dw1000__register_types__sys_cfg_type__ffab bits_1)(rec__dw1000__register_types__sys_cfg_type__ffad bits_1)(rec__dw1000__register_types__sys_cfg_type__ffaa bits_1)(rec__dw1000__register_types__sys_cfg_type__ffam bits_1)(rec__dw1000__register_types__sys_cfg_type__ffar bits_1)(rec__dw1000__register_types__sys_cfg_type__ffa4 bits_1)(rec__dw1000__register_types__sys_cfg_type__ffa5 bits_1)(rec__dw1000__register_types__sys_cfg_type__hirq_pol bits_1)(rec__dw1000__register_types__sys_cfg_type__spi_edge bits_1)(rec__dw1000__register_types__sys_cfg_type__dis_fce bits_1)(rec__dw1000__register_types__sys_cfg_type__dis_drxb bits_1)(rec__dw1000__register_types__sys_cfg_type__dis_phe bits_1)(rec__dw1000__register_types__sys_cfg_type__dis_rsde bits_1)(rec__dw1000__register_types__sys_cfg_type__fcs_int2f bits_1)(rec__dw1000__register_types__sys_cfg_type__phr_mode bits_2)(rec__dw1000__register_types__sys_cfg_type__dis_stxp bits_1)(rec__dw1000__register_types__sys_cfg_type__rxm110k bits_1)(rec__dw1000__register_types__sys_cfg_type__rxwtoe bits_1)(rec__dw1000__register_types__sys_cfg_type__rxautr bits_1)(rec__dw1000__register_types__sys_cfg_type__autoack bits_1)(rec__dw1000__register_types__sys_cfg_type__aackpend bits_1)(rec__dw1000__register_types__sys_cfg_type__reserved_1 bits_3)(rec__dw1000__register_types__sys_cfg_type__reserved_2 bits_5)))))
(define-fun us_split_fields_FFEN__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__ffen a))

(define-fun us_split_fields_FFBC__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__ffbc a))

(define-fun us_split_fields_FFAB__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__ffab a))

(define-fun us_split_fields_FFAD__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__ffad a))

(define-fun us_split_fields_FFAA__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__ffaa a))

(define-fun us_split_fields_FFAM__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__ffam a))

(define-fun us_split_fields_FFAR__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__ffar a))

(define-fun us_split_fields_FFA4__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__ffa4 a))

(define-fun us_split_fields_FFA5__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__ffa5 a))

(define-fun us_split_fields_HIRQ_POL__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__hirq_pol a))

(define-fun us_split_fields_SPI_EDGE__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__spi_edge a))

(define-fun us_split_fields_DIS_FCE__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__dis_fce a))

(define-fun us_split_fields_DIS_DRXB__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__dis_drxb a))

(define-fun us_split_fields_DIS_PHE__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__dis_phe a))

(define-fun us_split_fields_DIS_RSDE__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__dis_rsde a))

(define-fun us_split_fields_FCS_INT2F__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__fcs_int2f a))

(define-fun us_split_fields_PHR_MODE__projection ((a us_split_fields)) bits_2
  (rec__dw1000__register_types__sys_cfg_type__phr_mode a))

(define-fun us_split_fields_DIS_STXP__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__dis_stxp a))

(define-fun us_split_fields_RXM110K__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__rxm110k a))

(define-fun us_split_fields_RXWTOE__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__rxwtoe a))

(define-fun us_split_fields_RXAUTR__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__rxautr a))

(define-fun us_split_fields_AUTOACK__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__autoack a))

(define-fun us_split_fields_AACKPEND__projection ((a us_split_fields)) bits_1
  (rec__dw1000__register_types__sys_cfg_type__aackpend a))

(define-fun us_split_fields_Reserved_1__projection ((a us_split_fields)) bits_3
  (rec__dw1000__register_types__sys_cfg_type__reserved_1 a))

(define-fun us_split_fields_Reserved_2__projection ((a us_split_fields)) bits_5
  (rec__dw1000__register_types__sys_cfg_type__reserved_2 a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___4__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffen
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffen
                                                  (us_split_fields1 b))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffbc
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffbc
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffab
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffab
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffad
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffad
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffaa
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffaa
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffam
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffam
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffar
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffar
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffa4
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffa4
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__ffa5
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__ffa5
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__hirq_pol
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__hirq_pol
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__spi_edge
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__spi_edge
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__dis_fce
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__dis_fce
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__dis_drxb
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__dis_drxb
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__dis_phe
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__dis_phe
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__dis_rsde
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__dis_rsde
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__fcs_int2f
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__fcs_int2f
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__dw1000__register_types__sys_cfg_type__phr_mode
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__dw1000__register_types__sys_cfg_type__phr_mode
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__dis_stxp
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__dis_stxp
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__rxm110k
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__rxm110k
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__rxwtoe
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__rxwtoe
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__rxautr
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__rxautr
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__autoack
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__autoack
                                                  (us_split_fields1 b)))))
                        (= (to_rep
                           (rec__dw1000__register_types__sys_cfg_type__aackpend
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_types__sys_cfg_type__aackpend
                                                  (us_split_fields1 b)))))
                        (= (to_rep2
                           (rec__dw1000__register_types__sys_cfg_type__reserved_1
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__dw1000__register_types__sys_cfg_type__reserved_1
                                                  (us_split_fields1 b)))))
                        (= (to_rep3
                           (rec__dw1000__register_types__sys_cfg_type__reserved_2
                           (us_split_fields1 a))) (to_rep3
                                                  (rec__dw1000__register_types__sys_cfg_type__reserved_2
                                                  (us_split_fields1 b)))))
                   true false))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const dw1000__register_types__sys_cfg_type__ffen__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffen__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffen__position Int)

;; dw1000__register_types__sys_cfg_type__ffen__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffen__first__bit))

;; dw1000__register_types__sys_cfg_type__ffen__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffen__first__bit dw1000__register_types__sys_cfg_type__ffen__last__bit))

;; dw1000__register_types__sys_cfg_type__ffen__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffen__position))

(declare-const dw1000__register_types__sys_cfg_type__ffbc__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffbc__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffbc__position Int)

;; dw1000__register_types__sys_cfg_type__ffbc__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffbc__first__bit))

;; dw1000__register_types__sys_cfg_type__ffbc__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffbc__first__bit dw1000__register_types__sys_cfg_type__ffbc__last__bit))

;; dw1000__register_types__sys_cfg_type__ffbc__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffbc__position))

(declare-const dw1000__register_types__sys_cfg_type__ffab__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffab__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffab__position Int)

;; dw1000__register_types__sys_cfg_type__ffab__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffab__first__bit))

;; dw1000__register_types__sys_cfg_type__ffab__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffab__first__bit dw1000__register_types__sys_cfg_type__ffab__last__bit))

;; dw1000__register_types__sys_cfg_type__ffab__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffab__position))

(declare-const dw1000__register_types__sys_cfg_type__ffad__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffad__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffad__position Int)

;; dw1000__register_types__sys_cfg_type__ffad__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffad__first__bit))

;; dw1000__register_types__sys_cfg_type__ffad__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffad__first__bit dw1000__register_types__sys_cfg_type__ffad__last__bit))

;; dw1000__register_types__sys_cfg_type__ffad__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffad__position))

(declare-const dw1000__register_types__sys_cfg_type__ffaa__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffaa__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffaa__position Int)

;; dw1000__register_types__sys_cfg_type__ffaa__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffaa__first__bit))

;; dw1000__register_types__sys_cfg_type__ffaa__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffaa__first__bit dw1000__register_types__sys_cfg_type__ffaa__last__bit))

;; dw1000__register_types__sys_cfg_type__ffaa__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffaa__position))

(declare-const dw1000__register_types__sys_cfg_type__ffam__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffam__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffam__position Int)

;; dw1000__register_types__sys_cfg_type__ffam__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffam__first__bit))

;; dw1000__register_types__sys_cfg_type__ffam__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffam__first__bit dw1000__register_types__sys_cfg_type__ffam__last__bit))

;; dw1000__register_types__sys_cfg_type__ffam__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffam__position))

(declare-const dw1000__register_types__sys_cfg_type__ffar__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffar__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffar__position Int)

;; dw1000__register_types__sys_cfg_type__ffar__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffar__first__bit))

;; dw1000__register_types__sys_cfg_type__ffar__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffar__first__bit dw1000__register_types__sys_cfg_type__ffar__last__bit))

;; dw1000__register_types__sys_cfg_type__ffar__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffar__position))

(declare-const dw1000__register_types__sys_cfg_type__ffa4__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffa4__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffa4__position Int)

;; dw1000__register_types__sys_cfg_type__ffa4__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffa4__first__bit))

;; dw1000__register_types__sys_cfg_type__ffa4__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffa4__first__bit dw1000__register_types__sys_cfg_type__ffa4__last__bit))

;; dw1000__register_types__sys_cfg_type__ffa4__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffa4__position))

(declare-const dw1000__register_types__sys_cfg_type__ffa5__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffa5__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__ffa5__position Int)

;; dw1000__register_types__sys_cfg_type__ffa5__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffa5__first__bit))

;; dw1000__register_types__sys_cfg_type__ffa5__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__ffa5__first__bit dw1000__register_types__sys_cfg_type__ffa5__last__bit))

;; dw1000__register_types__sys_cfg_type__ffa5__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__ffa5__position))

(declare-const dw1000__register_types__sys_cfg_type__hirq_pol__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__hirq_pol__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__hirq_pol__position Int)

;; dw1000__register_types__sys_cfg_type__hirq_pol__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__hirq_pol__first__bit))

;; dw1000__register_types__sys_cfg_type__hirq_pol__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__hirq_pol__first__bit dw1000__register_types__sys_cfg_type__hirq_pol__last__bit))

;; dw1000__register_types__sys_cfg_type__hirq_pol__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__hirq_pol__position))

(declare-const dw1000__register_types__sys_cfg_type__spi_edge__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__spi_edge__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__spi_edge__position Int)

;; dw1000__register_types__sys_cfg_type__spi_edge__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__spi_edge__first__bit))

;; dw1000__register_types__sys_cfg_type__spi_edge__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__spi_edge__first__bit dw1000__register_types__sys_cfg_type__spi_edge__last__bit))

;; dw1000__register_types__sys_cfg_type__spi_edge__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__spi_edge__position))

(declare-const dw1000__register_types__sys_cfg_type__dis_fce__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__dis_fce__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__dis_fce__position Int)

;; dw1000__register_types__sys_cfg_type__dis_fce__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_fce__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_fce__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_fce__first__bit dw1000__register_types__sys_cfg_type__dis_fce__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_fce__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_fce__position))

(declare-const dw1000__register_types__sys_cfg_type__dis_drxb__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__dis_drxb__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__dis_drxb__position Int)

;; dw1000__register_types__sys_cfg_type__dis_drxb__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_drxb__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_drxb__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_drxb__first__bit dw1000__register_types__sys_cfg_type__dis_drxb__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_drxb__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_drxb__position))

(declare-const dw1000__register_types__sys_cfg_type__dis_phe__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__dis_phe__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__dis_phe__position Int)

;; dw1000__register_types__sys_cfg_type__dis_phe__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_phe__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_phe__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_phe__first__bit dw1000__register_types__sys_cfg_type__dis_phe__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_phe__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_phe__position))

(declare-const dw1000__register_types__sys_cfg_type__dis_rsde__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__dis_rsde__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__dis_rsde__position Int)

;; dw1000__register_types__sys_cfg_type__dis_rsde__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_rsde__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_rsde__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_rsde__first__bit dw1000__register_types__sys_cfg_type__dis_rsde__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_rsde__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_rsde__position))

(declare-const dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__fcs_int2f__position Int)

;; dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit))

;; dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit))

;; dw1000__register_types__sys_cfg_type__fcs_int2f__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__fcs_int2f__position))

(declare-const dw1000__register_types__sys_cfg_type__phr_mode__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__phr_mode__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__phr_mode__position Int)

;; dw1000__register_types__sys_cfg_type__phr_mode__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__phr_mode__first__bit))

;; dw1000__register_types__sys_cfg_type__phr_mode__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__phr_mode__first__bit dw1000__register_types__sys_cfg_type__phr_mode__last__bit))

;; dw1000__register_types__sys_cfg_type__phr_mode__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__phr_mode__position))

(declare-const dw1000__register_types__sys_cfg_type__dis_stxp__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__dis_stxp__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__dis_stxp__position Int)

;; dw1000__register_types__sys_cfg_type__dis_stxp__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_stxp__first__bit))

;; dw1000__register_types__sys_cfg_type__dis_stxp__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__dis_stxp__first__bit dw1000__register_types__sys_cfg_type__dis_stxp__last__bit))

;; dw1000__register_types__sys_cfg_type__dis_stxp__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__dis_stxp__position))

(declare-const dw1000__register_types__sys_cfg_type__rxm110k__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__rxm110k__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__rxm110k__position Int)

;; dw1000__register_types__sys_cfg_type__rxm110k__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxm110k__first__bit))

;; dw1000__register_types__sys_cfg_type__rxm110k__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__rxm110k__first__bit dw1000__register_types__sys_cfg_type__rxm110k__last__bit))

;; dw1000__register_types__sys_cfg_type__rxm110k__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxm110k__position))

(declare-const dw1000__register_types__sys_cfg_type__rxwtoe__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__rxwtoe__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__rxwtoe__position Int)

;; dw1000__register_types__sys_cfg_type__rxwtoe__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxwtoe__first__bit))

;; dw1000__register_types__sys_cfg_type__rxwtoe__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__rxwtoe__first__bit dw1000__register_types__sys_cfg_type__rxwtoe__last__bit))

;; dw1000__register_types__sys_cfg_type__rxwtoe__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxwtoe__position))

(declare-const dw1000__register_types__sys_cfg_type__rxautr__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__rxautr__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__rxautr__position Int)

;; dw1000__register_types__sys_cfg_type__rxautr__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxautr__first__bit))

;; dw1000__register_types__sys_cfg_type__rxautr__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__rxautr__first__bit dw1000__register_types__sys_cfg_type__rxautr__last__bit))

;; dw1000__register_types__sys_cfg_type__rxautr__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__rxautr__position))

(declare-const dw1000__register_types__sys_cfg_type__autoack__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__autoack__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__autoack__position Int)

;; dw1000__register_types__sys_cfg_type__autoack__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__autoack__first__bit))

;; dw1000__register_types__sys_cfg_type__autoack__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__autoack__first__bit dw1000__register_types__sys_cfg_type__autoack__last__bit))

;; dw1000__register_types__sys_cfg_type__autoack__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__autoack__position))

(declare-const dw1000__register_types__sys_cfg_type__aackpend__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__aackpend__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__aackpend__position Int)

;; dw1000__register_types__sys_cfg_type__aackpend__first__bit_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__aackpend__first__bit))

;; dw1000__register_types__sys_cfg_type__aackpend__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__aackpend__first__bit dw1000__register_types__sys_cfg_type__aackpend__last__bit))

;; dw1000__register_types__sys_cfg_type__aackpend__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__aackpend__position))

(declare-const dw1000__register_types__sys_cfg_type__reserved_1__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__reserved_1__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__reserved_1__position Int)

;; dw1000__register_types__sys_cfg_type__reserved_1__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_cfg_type__reserved_1__first__bit))

;; dw1000__register_types__sys_cfg_type__reserved_1__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__reserved_1__first__bit dw1000__register_types__sys_cfg_type__reserved_1__last__bit))

;; dw1000__register_types__sys_cfg_type__reserved_1__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__reserved_1__position))

(declare-const dw1000__register_types__sys_cfg_type__reserved_2__first__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__reserved_2__last__bit Int)

(declare-const dw1000__register_types__sys_cfg_type__reserved_2__position Int)

;; dw1000__register_types__sys_cfg_type__reserved_2__first__bit_axiom
  (assert
  (<= 0 dw1000__register_types__sys_cfg_type__reserved_2__first__bit))

;; dw1000__register_types__sys_cfg_type__reserved_2__last__bit_axiom
  (assert
  (< dw1000__register_types__sys_cfg_type__reserved_2__first__bit dw1000__register_types__sys_cfg_type__reserved_2__last__bit))

;; dw1000__register_types__sys_cfg_type__reserved_2__position_axiom
  (assert (<= 0 dw1000__register_types__sys_cfg_type__reserved_2__position))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes ()
((sys_cfg_type__ref (mk_sys_cfg_type__ref (sys_cfg_type__content us_rep)))))
(define-fun sys_cfg_type__ref___projection ((a sys_cfg_type__ref)) us_rep
  (sys_cfg_type__content a))

(declare-sort bits_16 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 16))

(declare-fun user_eq5 (bits_16 bits_16) Bool)

(declare-const dummy5 bits_16)

(declare-datatypes ()
((bits_16__ref (mk_bits_16__ref (bits_16__content bits_16)))))
(define-fun bits_16__ref___projection ((a bits_16__ref)) bits_16 (bits_16__content
                                                                 a))

(declare-sort bits_32 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 32))

(declare-fun user_eq6 (bits_32 bits_32) Bool)

(declare-const dummy6 bits_32)

(declare-datatypes ()
((bits_32__ref (mk_bits_32__ref (bits_32__content bits_32)))))
(define-fun bits_32__ref___projection ((a bits_32__ref)) bits_32 (bits_32__content
                                                                 a))

(declare-fun to_rep4 (bits_32) (_ BitVec 32))

(declare-fun of_rep4 ((_ BitVec 32)) bits_32)

;; inversion_axiom
  (assert
  (forall ((x bits_32))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 32)))
  (! (= (to_rep4 (of_rep4 x)) x) :pattern ((to_rep4 (of_rep4 x))) )))

(define-fun to_int9 ((x bits_32)) Int (bv2nat (to_rep4 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_32)) (! (uint_in_range2
  (to_int9 x)) :pattern ((to_int9 x)) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int bits_32))))))
(declare-fun slide ((Array Int bits_32) Int Int) (Array Int bits_32))

;; slide_eq
  (assert
  (forall ((a (Array Int bits_32)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int bits_32)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int bits_32) Int Int (Array Int bits_32) Int
  Int) (Array Int bits_32))

;; concat_def
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (bits_32 Int) (Array Int bits_32))

;; singleton_def
  (assert
  (forall ((v bits_32))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq1 ((a (Array Int bits_32)) (a__first Int) (a__last Int)
  (b (Array Int bits_32)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_184 Int))
                           (=>
                           (and (<= a__first temp___idx_184)
                           (<= temp___idx_184 a__last))
                           (= (to_rep4 (select a temp___idx_184)) (to_rep4
                                                                  (select b (+ (- b__first a__first) temp___idx_184)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq1 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_184 Int))
  (=> (and (<= a__first temp___idx_184) (<= temp___idx_184 a__last))
  (= (to_rep4 (select a temp___idx_184)) (to_rep4
                                         (select b (+ (- b__first a__first) temp___idx_184)))))))))))

(declare-fun compare ((Array Int bits_32) Int Int (Array Int bits_32) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq1 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq1 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (bvult (to_rep4 (select a (+ i 1))) (to_rep4 (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int bits_32)) (b (Array Int bits_32)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq1 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (bvugt (to_rep4 (select a (+ j 1))) (to_rep4 (select b (+ i 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__decadriver__driver_type__part_id bits_32)(rec__decadriver__driver_type__lot_id bits_32)(rec__decadriver__driver_type__antenna_delay_prf_64 bits_16)(rec__decadriver__driver_type__antenna_delay_prf_16 bits_16)(rec__decadriver__driver_type__xtal_trim bits_5)(rec__decadriver__driver_type__otp_tx_power_levels (Array Int bits_32))(rec__decadriver__driver_type__long_frames Bool)(rec__decadriver__driver_type__sys_cfg_reg us_rep)(rec__decadriver__driver_type__use_otp_xtal_trim Bool)(rec__decadriver__driver_type__use_otp_antenna_delay Bool)(rec__decadriver__driver_type__detect_frame_timeout Bool)(rec__decadriver__driver_type__detect_sfd_timeout Bool)(rec__decadriver__driver_type__detect_phr_error Bool)(rec__decadriver__driver_type__detect_rs_error Bool)(rec__decadriver__driver_type__detect_fcs_error Bool)))))
(define-fun us_split_fields_Part_ID__projection ((a us_split_fields2)) bits_32
  (rec__decadriver__driver_type__part_id a))

(define-fun us_split_fields_Lot_ID__projection ((a us_split_fields2)) bits_32
  (rec__decadriver__driver_type__lot_id a))

(define-fun us_split_fields_Antenna_Delay_PRF_64__projection ((a us_split_fields2)) bits_16
  (rec__decadriver__driver_type__antenna_delay_prf_64 a))

(define-fun us_split_fields_Antenna_Delay_PRF_16__projection ((a us_split_fields2)) bits_16
  (rec__decadriver__driver_type__antenna_delay_prf_16 a))

(define-fun us_split_fields_XTAL_Trim__projection ((a us_split_fields2)) bits_5
  (rec__decadriver__driver_type__xtal_trim a))

(define-fun us_split_fields_OTP_Tx_Power_Levels__projection ((a us_split_fields2)) (Array Int bits_32)
  (rec__decadriver__driver_type__otp_tx_power_levels a))

(define-fun us_split_fields_Long_Frames__projection ((a us_split_fields2)) Bool
  (rec__decadriver__driver_type__long_frames a))

(define-fun us_split_fields_SYS_CFG_Reg__projection ((a us_split_fields2)) us_rep
  (rec__decadriver__driver_type__sys_cfg_reg a))

(define-fun us_split_fields_Use_OTP_XTAL_Trim__projection ((a us_split_fields2)) Bool
  (rec__decadriver__driver_type__use_otp_xtal_trim a))

(define-fun us_split_fields_Use_OTP_Antenna_Delay__projection ((a us_split_fields2)) Bool
  (rec__decadriver__driver_type__use_otp_antenna_delay a))

(define-fun us_split_fields_Detect_Frame_Timeout__projection ((a us_split_fields2)) Bool
  (rec__decadriver__driver_type__detect_frame_timeout a))

(define-fun us_split_fields_Detect_SFD_Timeout__projection ((a us_split_fields2)) Bool
  (rec__decadriver__driver_type__detect_sfd_timeout a))

(define-fun us_split_fields_Detect_PHR_Error__projection ((a us_split_fields2)) Bool
  (rec__decadriver__driver_type__detect_phr_error a))

(define-fun us_split_fields_Detect_RS_Error__projection ((a us_split_fields2)) Bool
  (rec__decadriver__driver_type__detect_rs_error a))

(define-fun us_split_fields_Detect_FCS_Error__projection ((a us_split_fields2)) Bool
  (rec__decadriver__driver_type__detect_fcs_error a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___140__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___141__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                    a))

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep1) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))

(declare-const decadriver__driver_type__part_id__first__bit Int)

(declare-const decadriver__driver_type__part_id__last__bit Int)

(declare-const decadriver__driver_type__part_id__position Int)

;; decadriver__driver_type__part_id__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__part_id__first__bit))

;; decadriver__driver_type__part_id__last__bit_axiom
  (assert
  (< decadriver__driver_type__part_id__first__bit decadriver__driver_type__part_id__last__bit))

;; decadriver__driver_type__part_id__position_axiom
  (assert (<= 0 decadriver__driver_type__part_id__position))

(declare-const decadriver__driver_type__lot_id__first__bit Int)

(declare-const decadriver__driver_type__lot_id__last__bit Int)

(declare-const decadriver__driver_type__lot_id__position Int)

;; decadriver__driver_type__lot_id__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__lot_id__first__bit))

;; decadriver__driver_type__lot_id__last__bit_axiom
  (assert
  (< decadriver__driver_type__lot_id__first__bit decadriver__driver_type__lot_id__last__bit))

;; decadriver__driver_type__lot_id__position_axiom
  (assert (<= 0 decadriver__driver_type__lot_id__position))

(declare-const decadriver__driver_type__antenna_delay_prf_64__first__bit Int)

(declare-const decadriver__driver_type__antenna_delay_prf_64__last__bit Int)

(declare-const decadriver__driver_type__antenna_delay_prf_64__position Int)

;; decadriver__driver_type__antenna_delay_prf_64__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_64__first__bit))

;; decadriver__driver_type__antenna_delay_prf_64__last__bit_axiom
  (assert
  (< decadriver__driver_type__antenna_delay_prf_64__first__bit decadriver__driver_type__antenna_delay_prf_64__last__bit))

;; decadriver__driver_type__antenna_delay_prf_64__position_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_64__position))

(declare-const decadriver__driver_type__antenna_delay_prf_16__first__bit Int)

(declare-const decadriver__driver_type__antenna_delay_prf_16__last__bit Int)

(declare-const decadriver__driver_type__antenna_delay_prf_16__position Int)

;; decadriver__driver_type__antenna_delay_prf_16__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_16__first__bit))

;; decadriver__driver_type__antenna_delay_prf_16__last__bit_axiom
  (assert
  (< decadriver__driver_type__antenna_delay_prf_16__first__bit decadriver__driver_type__antenna_delay_prf_16__last__bit))

;; decadriver__driver_type__antenna_delay_prf_16__position_axiom
  (assert (<= 0 decadriver__driver_type__antenna_delay_prf_16__position))

(declare-const decadriver__driver_type__xtal_trim__first__bit Int)

(declare-const decadriver__driver_type__xtal_trim__last__bit Int)

(declare-const decadriver__driver_type__xtal_trim__position Int)

;; decadriver__driver_type__xtal_trim__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__xtal_trim__first__bit))

;; decadriver__driver_type__xtal_trim__last__bit_axiom
  (assert
  (< decadriver__driver_type__xtal_trim__first__bit decadriver__driver_type__xtal_trim__last__bit))

;; decadriver__driver_type__xtal_trim__position_axiom
  (assert (<= 0 decadriver__driver_type__xtal_trim__position))

(declare-const decadriver__driver_type__otp_tx_power_levels__first__bit Int)

(declare-const decadriver__driver_type__otp_tx_power_levels__last__bit Int)

(declare-const decadriver__driver_type__otp_tx_power_levels__position Int)

;; decadriver__driver_type__otp_tx_power_levels__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__otp_tx_power_levels__first__bit))

;; decadriver__driver_type__otp_tx_power_levels__last__bit_axiom
  (assert
  (< decadriver__driver_type__otp_tx_power_levels__first__bit decadriver__driver_type__otp_tx_power_levels__last__bit))

;; decadriver__driver_type__otp_tx_power_levels__position_axiom
  (assert (<= 0 decadriver__driver_type__otp_tx_power_levels__position))

(declare-const decadriver__driver_type__long_frames__first__bit Int)

(declare-const decadriver__driver_type__long_frames__last__bit Int)

(declare-const decadriver__driver_type__long_frames__position Int)

;; decadriver__driver_type__long_frames__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__long_frames__first__bit))

;; decadriver__driver_type__long_frames__last__bit_axiom
  (assert
  (< decadriver__driver_type__long_frames__first__bit decadriver__driver_type__long_frames__last__bit))

;; decadriver__driver_type__long_frames__position_axiom
  (assert (<= 0 decadriver__driver_type__long_frames__position))

(declare-const decadriver__driver_type__sys_cfg_reg__first__bit Int)

(declare-const decadriver__driver_type__sys_cfg_reg__last__bit Int)

(declare-const decadriver__driver_type__sys_cfg_reg__position Int)

;; decadriver__driver_type__sys_cfg_reg__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__sys_cfg_reg__first__bit))

;; decadriver__driver_type__sys_cfg_reg__last__bit_axiom
  (assert
  (< decadriver__driver_type__sys_cfg_reg__first__bit decadriver__driver_type__sys_cfg_reg__last__bit))

;; decadriver__driver_type__sys_cfg_reg__position_axiom
  (assert (<= 0 decadriver__driver_type__sys_cfg_reg__position))

(declare-const decadriver__driver_type__use_otp_xtal_trim__first__bit Int)

(declare-const decadriver__driver_type__use_otp_xtal_trim__last__bit Int)

(declare-const decadriver__driver_type__use_otp_xtal_trim__position Int)

;; decadriver__driver_type__use_otp_xtal_trim__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_xtal_trim__first__bit))

;; decadriver__driver_type__use_otp_xtal_trim__last__bit_axiom
  (assert
  (< decadriver__driver_type__use_otp_xtal_trim__first__bit decadriver__driver_type__use_otp_xtal_trim__last__bit))

;; decadriver__driver_type__use_otp_xtal_trim__position_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_xtal_trim__position))

(declare-const decadriver__driver_type__use_otp_antenna_delay__first__bit Int)

(declare-const decadriver__driver_type__use_otp_antenna_delay__last__bit Int)

(declare-const decadriver__driver_type__use_otp_antenna_delay__position Int)

;; decadriver__driver_type__use_otp_antenna_delay__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_antenna_delay__first__bit))

;; decadriver__driver_type__use_otp_antenna_delay__last__bit_axiom
  (assert
  (< decadriver__driver_type__use_otp_antenna_delay__first__bit decadriver__driver_type__use_otp_antenna_delay__last__bit))

;; decadriver__driver_type__use_otp_antenna_delay__position_axiom
  (assert (<= 0 decadriver__driver_type__use_otp_antenna_delay__position))

(declare-const decadriver__driver_type__detect_frame_timeout__first__bit Int)

(declare-const decadriver__driver_type__detect_frame_timeout__last__bit Int)

(declare-const decadriver__driver_type__detect_frame_timeout__position Int)

;; decadriver__driver_type__detect_frame_timeout__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_frame_timeout__first__bit))

;; decadriver__driver_type__detect_frame_timeout__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_frame_timeout__first__bit decadriver__driver_type__detect_frame_timeout__last__bit))

;; decadriver__driver_type__detect_frame_timeout__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_frame_timeout__position))

(declare-const decadriver__driver_type__detect_sfd_timeout__first__bit Int)

(declare-const decadriver__driver_type__detect_sfd_timeout__last__bit Int)

(declare-const decadriver__driver_type__detect_sfd_timeout__position Int)

;; decadriver__driver_type__detect_sfd_timeout__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_sfd_timeout__first__bit))

;; decadriver__driver_type__detect_sfd_timeout__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_sfd_timeout__first__bit decadriver__driver_type__detect_sfd_timeout__last__bit))

;; decadriver__driver_type__detect_sfd_timeout__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_sfd_timeout__position))

(declare-const decadriver__driver_type__detect_phr_error__first__bit Int)

(declare-const decadriver__driver_type__detect_phr_error__last__bit Int)

(declare-const decadriver__driver_type__detect_phr_error__position Int)

;; decadriver__driver_type__detect_phr_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_phr_error__first__bit))

;; decadriver__driver_type__detect_phr_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_phr_error__first__bit decadriver__driver_type__detect_phr_error__last__bit))

;; decadriver__driver_type__detect_phr_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_phr_error__position))

(declare-const decadriver__driver_type__detect_rs_error__first__bit Int)

(declare-const decadriver__driver_type__detect_rs_error__last__bit Int)

(declare-const decadriver__driver_type__detect_rs_error__position Int)

;; decadriver__driver_type__detect_rs_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_rs_error__first__bit))

;; decadriver__driver_type__detect_rs_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_rs_error__first__bit decadriver__driver_type__detect_rs_error__last__bit))

;; decadriver__driver_type__detect_rs_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_rs_error__position))

(declare-const decadriver__driver_type__detect_fcs_error__first__bit Int)

(declare-const decadriver__driver_type__detect_fcs_error__last__bit Int)

(declare-const decadriver__driver_type__detect_fcs_error__position Int)

;; decadriver__driver_type__detect_fcs_error__first__bit_axiom
  (assert (<= 0 decadriver__driver_type__detect_fcs_error__first__bit))

;; decadriver__driver_type__detect_fcs_error__last__bit_axiom
  (assert
  (< decadriver__driver_type__detect_fcs_error__first__bit decadriver__driver_type__detect_fcs_error__last__bit))

;; decadriver__driver_type__detect_fcs_error__position_axiom
  (assert (<= 0 decadriver__driver_type__detect_fcs_error__position))

(declare-fun user_eq7 (us_rep1 us_rep1) Bool)

(declare-datatypes ()
((driver_type__ref (mk_driver_type__ref (driver_type__content us_rep1)))))
(define-fun driver_type__ref___projection ((a driver_type__ref)) us_rep1
  (driver_type__content a))

(declare-fun temp___4500 ((_ BitVec 32)) (Array Int bits_32))

;; def_axiom
  (assert
  (forall ((temp___4502 (_ BitVec 32)))
  (forall ((temp___4503 Int))
  (= (select (temp___4500 temp___4502) temp___4503) (of_rep4 temp___4502)))))

(declare-fun to_rep5 (bits_16) (_ BitVec 16))

(declare-fun of_rep5 ((_ BitVec 16)) bits_16)

;; inversion_axiom
  (assert
  (forall ((x bits_16))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 16)))
  (! (= (to_rep5 (of_rep5 x)) x) :pattern ((to_rep5 (of_rep5 x))) )))

(define-fun to_int10 ((x bits_16)) Int (bv2nat (to_rep5 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_16)) (! (uint_in_range1
  (to_int10 x)) :pattern ((to_int10 x)) )))

(define-fun default_initial_assumption ((temp___expr_4498 us_rep1)
  (temp___skip_top_level_4499 Bool)) Bool (and
                                          (and
                                          (and
                                          (and
                                          (and
                                          (and
                                          (and
                                          (and
                                          (and
                                          (and
                                          (and
                                          (and
                                          (and
                                          (and
                                          (= (to_rep4
                                             (rec__decadriver__driver_type__part_id
                                             (us_split_fields3
                                             temp___expr_4498))) ((_ int2bv 32) 0))
                                          (= (to_rep4
                                             (rec__decadriver__driver_type__lot_id
                                             (us_split_fields3
                                             temp___expr_4498))) ((_ int2bv 32) 0)))
                                          (= (to_rep5
                                             (rec__decadriver__driver_type__antenna_delay_prf_64
                                             (us_split_fields3
                                             temp___expr_4498))) ((_ int2bv 16) 0)))
                                          (= (to_rep5
                                             (rec__decadriver__driver_type__antenna_delay_prf_16
                                             (us_split_fields3
                                             temp___expr_4498))) ((_ int2bv 16) 0)))
                                          (= (to_rep3
                                             (rec__decadriver__driver_type__xtal_trim
                                             (us_split_fields3
                                             temp___expr_4498))) ((_ int2bv 8) 16)))
                                          (= (rec__decadriver__driver_type__otp_tx_power_levels
                                             (us_split_fields3
                                             temp___expr_4498)) (temp___4500
                                                                ((_ int2bv 32) 0))))
                                          (= (rec__decadriver__driver_type__long_frames
                                             (us_split_fields3
                                             temp___expr_4498)) (of_int 0)))
                                          (= (rec__decadriver__driver_type__sys_cfg_reg
                                             (us_split_fields3
                                             temp___expr_4498)) (mk___rep
                                                                (mk___split_fields
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep1
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep
                                                                ((_ int2bv 8) 0))
                                                                (of_rep2
                                                                ((_ int2bv 8) 0))
                                                                (of_rep3
                                                                ((_ int2bv 8) 0))))))
                                          (= (rec__decadriver__driver_type__use_otp_xtal_trim
                                             (us_split_fields3
                                             temp___expr_4498)) (of_int 0)))
                                          (= (rec__decadriver__driver_type__use_otp_antenna_delay
                                             (us_split_fields3
                                             temp___expr_4498)) (of_int 0)))
                                          (= (rec__decadriver__driver_type__detect_frame_timeout
                                             (us_split_fields3
                                             temp___expr_4498)) (of_int 0)))
                                          (= (rec__decadriver__driver_type__detect_sfd_timeout
                                             (us_split_fields3
                                             temp___expr_4498)) (of_int 0)))
                                          (= (rec__decadriver__driver_type__detect_phr_error
                                             (us_split_fields3
                                             temp___expr_4498)) (of_int 0)))
                                          (= (rec__decadriver__driver_type__detect_rs_error
                                             (us_split_fields3
                                             temp___expr_4498)) (of_int 0)))
                                          (= (rec__decadriver__driver_type__detect_fcs_error
                                             (us_split_fields3
                                             temp___expr_4498)) (of_int 0))))

(define-fun dynamic_invariant ((temp___expr_281 (_ BitVec 8))
  (temp___is_init_278 Bool) (temp___skip_constant_279 Bool)
  (temp___do_toplevel_280 Bool)) Bool (=>
                                      (or (= temp___is_init_278 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 1)))
                                      (in_range1 temp___expr_281)))

(define-fun dynamic_invariant1 ((temp___expr_287 (_ BitVec 8))
  (temp___is_init_284 Bool) (temp___skip_constant_285 Bool)
  (temp___do_toplevel_286 Bool)) Bool (=>
                                      (or (= temp___is_init_284 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 3)))
                                      (in_range2 temp___expr_287)))

(define-fun dynamic_invariant2 ((temp___expr_293 (_ BitVec 8))
  (temp___is_init_290 Bool) (temp___skip_constant_291 Bool)
  (temp___do_toplevel_292 Bool)) Bool (=>
                                      (or (= temp___is_init_290 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 7)))
                                      (in_range3 temp___expr_293)))

(define-fun dynamic_invariant3 ((temp___expr_305 (_ BitVec 8))
  (temp___is_init_302 Bool) (temp___skip_constant_303 Bool)
  (temp___do_toplevel_304 Bool)) Bool (=>
                                      (or (= temp___is_init_302 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 31)))
                                      (in_range4 temp___expr_305)))

(define-fun dynamic_invariant4 ((temp___expr_371 (_ BitVec 16))
  (temp___is_init_368 Bool) (temp___skip_constant_369 Bool)
  (temp___do_toplevel_370 Bool)) Bool true)

(define-fun dynamic_invariant5 ((temp___expr_467 (_ BitVec 32))
  (temp___is_init_464 Bool) (temp___skip_constant_465 Bool)
  (temp___do_toplevel_466 Bool)) Bool true)

(declare-const self__ us_rep1)

(declare-const temp___4600 Bool)

(assert
;; WP_parameter_def
 ;; File "decadriver.ads", line 242, characters 0-0
  (not (= temp___4600 false)))
(check-sat)
(exit)
