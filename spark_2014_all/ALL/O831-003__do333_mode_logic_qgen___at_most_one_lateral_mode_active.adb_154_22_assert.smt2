;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun roll_active () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun hdg_active () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun nav_active () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun lappr_active () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun lga_active () Bool)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS10 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS11 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS12 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS13 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS14 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS15 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS16 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS17 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS18 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS19 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS20 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS21 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS22 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS23 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS24 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS25 () Int)

(declare-fun hdg_active_out1 () Bool)

(declare-fun lappr_active_out1 () Bool)

(declare-fun lga_active_out1 () Bool)

(declare-fun nav_active_out1 () Bool)

(declare-fun roll_active_out1 () Bool)

(declare-fun nor_lga_out1 () Bool)

(declare-fun not1_out1 () Bool)

(declare-fun not5_out1 () Bool)

(declare-fun nor_lappr_out1 () Bool)

(declare-fun not1_out1_1 () Bool)

(declare-fun not5_out1_1 () Bool)

(declare-fun nor_nav_out1 () Bool)

(declare-fun not1_out1_2 () Bool)

(declare-fun not5_out1_2 () Bool)

(declare-fun nor_hdg_out1 () Bool)

(declare-fun not1_out1_3 () Bool)

(declare-fun not5_out1_3 () Bool)

(declare-fun nor_roll_out1 () Bool)

(declare-fun not1_out1_4 () Bool)

(declare-fun not5_out1_4 () Bool)

(declare-fun and_out1 () Bool)

(declare-fun result () bool__ref)

(declare-fun hdg_active_out11 () Bool)

(declare-fun result1 () bool__ref)

(declare-fun lappr_active_out11 () Bool)

(declare-fun result2 () bool__ref)

(declare-fun lga_active_out11 () Bool)

(declare-fun result3 () bool__ref)

(declare-fun nav_active_out11 () Bool)

(declare-fun result4 () bool__ref)

(declare-fun roll_active_out11 () Bool)

(declare-fun result5 () bool__ref)

(declare-fun nor_lga_out11 () Bool)

(declare-fun result6 () bool__ref)

(declare-fun not1_out11 () Bool)

(declare-fun result7 () bool__ref)

(declare-fun not5_out11 () Bool)

(declare-fun result8 () bool__ref)

(declare-fun nor_lappr_out11 () Bool)

(declare-fun result9 () bool__ref)

(declare-fun not1_out1_11 () Bool)

(declare-fun result10 () bool__ref)

(declare-fun not5_out1_11 () Bool)

(declare-fun result11 () bool__ref)

(declare-fun nor_nav_out11 () Bool)

(declare-fun result12 () bool__ref)

(declare-fun not1_out1_21 () Bool)

(declare-fun result13 () bool__ref)

(declare-fun not5_out1_21 () Bool)

(declare-fun result14 () bool__ref)

(declare-fun nor_hdg_out11 () Bool)

(declare-fun result15 () bool__ref)

(declare-fun not1_out1_31 () Bool)

(declare-fun result16 () bool__ref)

(declare-fun not5_out1_31 () Bool)

(declare-fun result17 () bool__ref)

(declare-fun nor_roll_out11 () Bool)

(declare-fun result18 () bool__ref)

(declare-fun not1_out1_41 () Bool)

(declare-fun result19 () bool__ref)

(declare-fun not5_out1_41 () Bool)

(declare-fun result20 () bool__ref)

(declare-fun and_out11 () Bool)

;; H
  (assert (= result (mk_bool__ref hdg_active_out1)))

;; H
  (assert (= hdg_active_out11 hdg_active))

;; H
  (assert (= result1 (mk_bool__ref lappr_active_out1)))

;; H
  (assert (= lappr_active_out11 lappr_active))

;; H
  (assert (= result2 (mk_bool__ref lga_active_out1)))

;; H
  (assert (= lga_active_out11 lga_active))

;; H
  (assert (= result3 (mk_bool__ref nav_active_out1)))

;; H
  (assert (= nav_active_out11 nav_active))

;; H
  (assert (= result4 (mk_bool__ref roll_active_out1)))

;; H
  (assert (= roll_active_out11 roll_active))

;; H
  (assert (= result5 (mk_bool__ref nor_lga_out1)))

;; H
  (assert
  (= nor_lga_out11 (ite (not
                        (or
                        (or
                        (or (= roll_active_out11 true)
                        (= hdg_active_out11 true)) (= nav_active_out11 true))
                        (= lappr_active_out11 true)))
                   true false)))

;; H
  (assert (= result6 (mk_bool__ref not1_out1)))

;; H
  (assert (= not1_out11 (ite (not (= lga_active_out11 true)) true false)))

;; H
  (assert (= result7 (mk_bool__ref not5_out1)))

;; H
  (assert
  (= not5_out11 (ite (or (= not1_out11 true) (= nor_lga_out11 true)) true
                false)))

;; H
  (assert (= result8 (mk_bool__ref nor_lappr_out1)))

;; H
  (assert
  (= nor_lappr_out11 (ite (not
                          (or
                          (or
                          (or (= roll_active_out11 true)
                          (= hdg_active_out11 true))
                          (= nav_active_out11 true))
                          (= lga_active_out11 true)))
                     true false)))

;; H
  (assert (= result9 (mk_bool__ref not1_out1_1)))

;; H
  (assert
  (= not1_out1_11 (ite (not (= lappr_active_out11 true)) true false)))

;; H
  (assert (= result10 (mk_bool__ref not5_out1_1)))

;; H
  (assert
  (= not5_out1_11 (ite (or (= not1_out1_11 true) (= nor_lappr_out11 true))
                  true false)))

;; H
  (assert (= result11 (mk_bool__ref nor_nav_out1)))

;; H
  (assert
  (= nor_nav_out11 (ite (not
                        (or
                        (or
                        (or (= roll_active_out11 true)
                        (= hdg_active_out11 true))
                        (= lappr_active_out11 true))
                        (= lga_active_out11 true)))
                   true false)))

;; H
  (assert (= result12 (mk_bool__ref not1_out1_2)))

;; H
  (assert (= not1_out1_21 (ite (not (= nav_active_out11 true)) true false)))

;; H
  (assert (= result13 (mk_bool__ref not5_out1_2)))

;; H
  (assert
  (= not5_out1_21 (ite (or (= not1_out1_21 true) (= nor_nav_out11 true)) true
                  false)))

;; H
  (assert (= result14 (mk_bool__ref nor_hdg_out1)))

;; H
  (assert
  (= nor_hdg_out11 (ite (not
                        (or
                        (or
                        (or (= roll_active_out11 true)
                        (= nav_active_out11 true))
                        (= lappr_active_out11 true))
                        (= lga_active_out11 true)))
                   true false)))

;; H
  (assert (= result15 (mk_bool__ref not1_out1_3)))

;; H
  (assert (= not1_out1_31 (ite (not (= hdg_active_out11 true)) true false)))

;; H
  (assert (= result16 (mk_bool__ref not5_out1_3)))

;; H
  (assert
  (= not5_out1_31 (ite (or (= not1_out1_31 true) (= nor_hdg_out11 true)) true
                  false)))

;; H
  (assert (= result17 (mk_bool__ref nor_roll_out1)))

;; H
  (assert
  (= nor_roll_out11 (ite (not
                         (or
                         (or
                         (or (= hdg_active_out11 true)
                         (= nav_active_out11 true))
                         (= lappr_active_out11 true))
                         (= lga_active_out11 true)))
                    true false)))

;; H
  (assert (= result18 (mk_bool__ref not1_out1_4)))

;; H
  (assert (= not1_out1_41 (ite (not (= roll_active_out11 true)) true false)))

;; H
  (assert (= result19 (mk_bool__ref not5_out1_4)))

;; H
  (assert
  (= not5_out1_41 (ite (or (= not1_out1_41 true) (= nor_roll_out11 true))
                  true false)))

;; H
  (assert (= result20 (mk_bool__ref and_out1)))

;; H
  (assert
  (= and_out11 (ite (and
                    (and
                    (and (and (= not5_out1_41 true) (= not5_out1_31 true))
                    (= not5_out1_21 true)) (= not5_out1_11 true))
                    (= not5_out11 true))
               true false)))

(assert
;; WP_parameter_def
 ;; File "at_most_one_lateral_mode_active.ads", line 20, characters 0-0
  (not (= and_out11 true)))
(check-sat)
