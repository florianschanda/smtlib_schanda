;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort priority 0)

(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 97)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (priority priority) Bool)

(declare-const dummy priority)

(declare-datatypes ()
((priority__ref (mk_priority__ref (priority__content priority)))))
(define-fun priority__ref___projection ((a priority__ref)) priority (priority__content
                                                                    a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq (us_rep us_rep) Bool)

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-const dummy1 us_rep)

(declare-datatypes () ((time__ref (mk_time__ref (time__content us_rep)))))
(define-fun time__ref___projection ((a time__ref)) us_rep (time__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__traffic_lights__traffic_lightT__last_state_change us_rep)(rec__traffic_lights__traffic_lightT__vehicles_green Bool)(rec__traffic_lights__traffic_lightT__vehicles_yellow Bool)(rec__traffic_lights__traffic_lightT__vehicles_red Bool)(rec__traffic_lights__traffic_lightT__pedestrians_green Bool)(rec__traffic_lights__traffic_lightT__pedestrians_red Bool)(rec__traffic_lights__traffic_lightT__change_state Bool)))))
(define-fun us_split_fields_Last_State_Change__projection ((a us_split_fields)) us_rep
  (rec__traffic_lights__traffic_lightT__last_state_change a))

(define-fun us_split_fields_Vehicles_Green__projection ((a us_split_fields)) Bool
  (rec__traffic_lights__traffic_lightT__vehicles_green a))

(define-fun us_split_fields_Vehicles_Yellow__projection ((a us_split_fields)) Bool
  (rec__traffic_lights__traffic_lightT__vehicles_yellow a))

(define-fun us_split_fields_Vehicles_Red__projection ((a us_split_fields)) Bool
  (rec__traffic_lights__traffic_lightT__vehicles_red a))

(define-fun us_split_fields_Pedestrians_Green__projection ((a us_split_fields)) Bool
  (rec__traffic_lights__traffic_lightT__pedestrians_green a))

(define-fun us_split_fields_Pedestrians_Red__projection ((a us_split_fields)) Bool
  (rec__traffic_lights__traffic_lightT__pedestrians_red a))

(define-fun us_split_fields_Change_State__projection ((a us_split_fields)) Bool
  (rec__traffic_lights__traffic_lightT__change_state a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___27__projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep1 (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___27__projection ((a us_rep1)) us_split_fields (us_split_fields1
                                                                  a))

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep1) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))

(declare-const traffic_lights__traffic_lightT__last_state_change__first__bit Int)

(declare-const traffic_lights__traffic_lightT__last_state_change__last__bit Int)

(declare-const traffic_lights__traffic_lightT__last_state_change__position Int)

;; traffic_lights__traffic_lightT__last_state_change__first__bit_axiom
  (assert
  (<= 0 traffic_lights__traffic_lightT__last_state_change__first__bit))

;; traffic_lights__traffic_lightT__last_state_change__last__bit_axiom
  (assert
  (< traffic_lights__traffic_lightT__last_state_change__first__bit traffic_lights__traffic_lightT__last_state_change__last__bit))

;; traffic_lights__traffic_lightT__last_state_change__position_axiom
  (assert (<= 0 traffic_lights__traffic_lightT__last_state_change__position))

(declare-const traffic_lights__traffic_lightT__vehicles_green__first__bit Int)

(declare-const traffic_lights__traffic_lightT__vehicles_green__last__bit Int)

(declare-const traffic_lights__traffic_lightT__vehicles_green__position Int)

;; traffic_lights__traffic_lightT__vehicles_green__first__bit_axiom
  (assert (<= 0 traffic_lights__traffic_lightT__vehicles_green__first__bit))

;; traffic_lights__traffic_lightT__vehicles_green__last__bit_axiom
  (assert
  (< traffic_lights__traffic_lightT__vehicles_green__first__bit traffic_lights__traffic_lightT__vehicles_green__last__bit))

;; traffic_lights__traffic_lightT__vehicles_green__position_axiom
  (assert (<= 0 traffic_lights__traffic_lightT__vehicles_green__position))

(declare-const traffic_lights__traffic_lightT__vehicles_yellow__first__bit Int)

(declare-const traffic_lights__traffic_lightT__vehicles_yellow__last__bit Int)

(declare-const traffic_lights__traffic_lightT__vehicles_yellow__position Int)

;; traffic_lights__traffic_lightT__vehicles_yellow__first__bit_axiom
  (assert (<= 0 traffic_lights__traffic_lightT__vehicles_yellow__first__bit))

;; traffic_lights__traffic_lightT__vehicles_yellow__last__bit_axiom
  (assert
  (< traffic_lights__traffic_lightT__vehicles_yellow__first__bit traffic_lights__traffic_lightT__vehicles_yellow__last__bit))

;; traffic_lights__traffic_lightT__vehicles_yellow__position_axiom
  (assert (<= 0 traffic_lights__traffic_lightT__vehicles_yellow__position))

(declare-const traffic_lights__traffic_lightT__vehicles_red__first__bit Int)

(declare-const traffic_lights__traffic_lightT__vehicles_red__last__bit Int)

(declare-const traffic_lights__traffic_lightT__vehicles_red__position Int)

;; traffic_lights__traffic_lightT__vehicles_red__first__bit_axiom
  (assert (<= 0 traffic_lights__traffic_lightT__vehicles_red__first__bit))

;; traffic_lights__traffic_lightT__vehicles_red__last__bit_axiom
  (assert
  (< traffic_lights__traffic_lightT__vehicles_red__first__bit traffic_lights__traffic_lightT__vehicles_red__last__bit))

;; traffic_lights__traffic_lightT__vehicles_red__position_axiom
  (assert (<= 0 traffic_lights__traffic_lightT__vehicles_red__position))

(declare-const traffic_lights__traffic_lightT__pedestrians_green__first__bit Int)

(declare-const traffic_lights__traffic_lightT__pedestrians_green__last__bit Int)

(declare-const traffic_lights__traffic_lightT__pedestrians_green__position Int)

;; traffic_lights__traffic_lightT__pedestrians_green__first__bit_axiom
  (assert
  (<= 0 traffic_lights__traffic_lightT__pedestrians_green__first__bit))

;; traffic_lights__traffic_lightT__pedestrians_green__last__bit_axiom
  (assert
  (< traffic_lights__traffic_lightT__pedestrians_green__first__bit traffic_lights__traffic_lightT__pedestrians_green__last__bit))

;; traffic_lights__traffic_lightT__pedestrians_green__position_axiom
  (assert (<= 0 traffic_lights__traffic_lightT__pedestrians_green__position))

(declare-const traffic_lights__traffic_lightT__pedestrians_red__first__bit Int)

(declare-const traffic_lights__traffic_lightT__pedestrians_red__last__bit Int)

(declare-const traffic_lights__traffic_lightT__pedestrians_red__position Int)

;; traffic_lights__traffic_lightT__pedestrians_red__first__bit_axiom
  (assert (<= 0 traffic_lights__traffic_lightT__pedestrians_red__first__bit))

;; traffic_lights__traffic_lightT__pedestrians_red__last__bit_axiom
  (assert
  (< traffic_lights__traffic_lightT__pedestrians_red__first__bit traffic_lights__traffic_lightT__pedestrians_red__last__bit))

;; traffic_lights__traffic_lightT__pedestrians_red__position_axiom
  (assert (<= 0 traffic_lights__traffic_lightT__pedestrians_red__position))

(declare-const traffic_lights__traffic_lightT__change_state__first__bit Int)

(declare-const traffic_lights__traffic_lightT__change_state__last__bit Int)

(declare-const traffic_lights__traffic_lightT__change_state__position Int)

;; traffic_lights__traffic_lightT__change_state__first__bit_axiom
  (assert (<= 0 traffic_lights__traffic_lightT__change_state__first__bit))

;; traffic_lights__traffic_lightT__change_state__last__bit_axiom
  (assert
  (< traffic_lights__traffic_lightT__change_state__first__bit traffic_lights__traffic_lightT__change_state__last__bit))

;; traffic_lights__traffic_lightT__change_state__position_axiom
  (assert (<= 0 traffic_lights__traffic_lightT__change_state__position))

(declare-fun user_eq2 (us_rep1 us_rep1) Bool)

(declare-datatypes ()
((traffic_lightT__ref
 (mk_traffic_lightT__ref (traffic_lightT__content us_rep1)))))
(define-fun traffic_lightT__ref___projection ((a traffic_lightT__ref)) us_rep1
  (traffic_lightT__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range1 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Bool)

(declare-const time_first us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(define-fun default_initial_assumption ((temp___expr_1473 us_rep1)
  (temp___skip_top_level_1474 Bool)) Bool (and
                                          (and
                                          (and
                                          (and
                                          (and
                                          (and
                                          (= (rec__traffic_lights__traffic_lightT__last_state_change
                                             (us_split_fields1
                                             temp___expr_1473)) time_first)
                                          (= (rec__traffic_lights__traffic_lightT__vehicles_green
                                             (us_split_fields1
                                             temp___expr_1473)) (of_int 0)))
                                          (= (rec__traffic_lights__traffic_lightT__vehicles_yellow
                                             (us_split_fields1
                                             temp___expr_1473)) (of_int 0)))
                                          (= (rec__traffic_lights__traffic_lightT__vehicles_red
                                             (us_split_fields1
                                             temp___expr_1473)) (of_int 1)))
                                          (= (rec__traffic_lights__traffic_lightT__pedestrians_green
                                             (us_split_fields1
                                             temp___expr_1473)) (of_int 1)))
                                          (= (rec__traffic_lights__traffic_lightT__pedestrians_red
                                             (us_split_fields1
                                             temp___expr_1473)) (of_int 0)))
                                          (= (rec__traffic_lights__traffic_lightT__change_state
                                             (us_split_fields1
                                             temp___expr_1473)) (of_int 0))))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun dynamic_invariant ((temp___expr_208 Int)
  (temp___is_init_205 Bool) (temp___skip_constant_206 Bool)
  (temp___do_toplevel_207 Bool)) Bool (=>
                                      (or (= temp___is_init_205 true)
                                      (<= 0 97)) (in_range temp___expr_208)))

(assert
;; WP_parameter_def
 ;; File "traffic_lights.adb", line 60, characters 0-0
  (not true))
(check-sat)
(exit)
