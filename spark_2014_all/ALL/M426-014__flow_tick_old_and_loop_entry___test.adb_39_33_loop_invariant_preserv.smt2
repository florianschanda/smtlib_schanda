;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort t8b 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (t8b t8b) Bool)

(declare-const dummy1 t8b)

(declare-datatypes ((t8b__ref 0)) (((mk_t8b__ref (t8b__content t8b)))))
(define-fun t8b__ref___projection ((a t8b__ref)) t8b (t8b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const x Int)

(declare-const i Int)

(declare-const temp___150 Int)

(declare-const temp___149 Int)

(declare-const result Int)

(declare-const i1 Int)

(declare-const result1 Int)

(declare-const x1 Int)

(declare-const x2 Int)

(declare-const i2 Int)

(declare-const j Int)

(declare-const result2 Int)

(declare-const j1 Int)

(declare-const j2 Int)

(declare-const j3 Int)

(declare-const j4 Int)

(declare-const j5 Int)

(declare-const j6 Int)

(declare-const result3 Int)

(declare-const i3 Int)

(declare-const result4 Int)

(declare-const x3 Int)

(declare-const x4 Int)

(declare-const i4 Int)

(declare-const j7 Int)

(declare-const x5 Int)

(declare-const i5 Int)

(declare-const j8 Int)

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 x)))

;; H
  (assert (= result i))

;; H
  (assert (= i1 1))

;; H
  (assert (<= 1 i1))

;; H
  (assert (<= i1 10))

;; H
  (assert (= result1 x))

;; H
  (assert (= x1 0))

;; H
  (assert (= x2 x))

;; H
  (assert
  (and
  (and (=> (<= (- 2147483648) 2147483647) (in_range1 x2))
  (=> (<= 1 10) (in_range2 i2))) (and (<= 1 i2) (<= i2 10))))

;; H
  (assert (= j result2))

;; H
  (assert (= j1 (- 2147483648)))

;; H
  (assert
  (=> (and (<= (- 2147483648) j1) (<= j1 2147483647)) (= temp___150 x2)))

;; H
  (assert
  (=> (and (<= (- 2147483648) j1) (<= j1 2147483647)) (= temp___149 j1)))

;; H
  (assert
  (=> (and (<= (- 2147483648) j1) (<= j1 2147483647)) (= x2 temp___150)))

;; H
  (assert
  (=> (and (<= (- 2147483648) j1) (<= j1 2147483647))
  (and (=> (<= (- 2147483648) 2147483647) (in_range1 j2))
  (and (<= (- 2147483648) j2) (<= j2 2147483647)))))

;; H
  (assert
  (=> (and (<= (- 2147483648) j1) (<= j1 2147483647)) (= j2 2147483647)))

;; H
  (assert (=> (and (<= (- 2147483648) j1) (<= j1 2147483647)) (= j2 j3)))

;; H
  (assert (=> (and (<= (- 2147483648) j1) (<= j1 2147483647)) (= j4 j2)))

;; H
  (assert
  (=> (and (<= (- 2147483648) j1) (<= j1 2147483647))
  (= (mk_int__ref j5) (mk_int__ref j3))))

;; H
  (assert (=> (and (<= (- 2147483648) j1) (<= j1 2147483647)) (= j6 j4)))

;; H
  (assert
  (=> (not (and (<= (- 2147483648) j1) (<= j1 2147483647))) (= j1 j5)))

;; H
  (assert
  (=> (not (and (<= (- 2147483648) j1) (<= j1 2147483647))) (= j6 j1)))

;; H
  (assert (not (= i2 10)))

;; H
  (assert (= result3 i2))

;; H
  (assert (= i3 (+ i2 1)))

;; H
  (assert (= result4 x2))

;; H
  (assert (= x3 0))

;; H
  (assert (= j7 j5))

;; H
  (assert (= i4 i3))

;; H
  (assert (= x3 x4))

;; H
  (assert (= j8 j6))

;; H
  (assert (= i5 i3))

;; H
  (assert (= x5 x3))

(assert
;; WP_parameter_def
 ;; File "test.adb", line 22, characters 0-0
  (not (= x4 x)))
(check-sat)
(exit)
