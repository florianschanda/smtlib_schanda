;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun div1 (Int Int) Int)

(declare-fun mod1 (Int Int) Int)

;; Div_mod
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))

;; Mod_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (and (< (- (abs y)) (mod1 x y)) (< (mod1 x y) (abs y))))))

;; Div_sign_pos
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))

;; Div_sign_neg
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))

;; Mod_sign_pos
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))

;; Mod_sign_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))

;; Rounds_toward_zero
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (<= (abs (* (div1 x y) y)) (abs x)))))

;; Div_1
  (assert (forall ((x Int)) (= (div1 x 1) x)))

;; Mod_1
  (assert (forall ((x Int)) (= (mod1 x 1) 0)))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))

;; Mod_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1
                                                            (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)) )))

(define-fun mod2 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ((positive__ref 0))
(((mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-const dummy2 character)

(declare-datatypes ((character__ref 0))
(((mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ((map__ref 0))
(((mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes ((us_t 0))
(((mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ((string__ref 0))
(((mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(declare-sort durationt 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 864000)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (durationt durationt) Bool)

(declare-const dummy4 durationt)

(declare-datatypes ((durationt__ref 0))
(((mk_durationt__ref (durationt__content durationt)))))
(define-fun durationt__ref___projection ((a durationt__ref)) durationt
  (durationt__content a))

(define-fun dynamic_invariant ((temp___expr_241 Int)
  (temp___is_init_238 Bool) (temp___skip_constant_239 Bool)
  (temp___do_toplevel_240 Bool)) Bool (=>
                                      (or (= temp___is_init_238 true)
                                      (<= 0 864000)) (in_range4
                                      temp___expr_241)))

(declare-sort classt 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 5)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (classt classt) Bool)

(declare-const dummy5 classt)

(declare-datatypes ((classt__ref 0))
(((mk_classt__ref (classt__content classt)))))
(define-fun classt__ref___projection ((a classt__ref)) classt (classt__content
                                                              a))

(define-fun dynamic_invariant1 ((temp___expr_309 Int)
  (temp___is_init_306 Bool) (temp___skip_constant_307 Bool)
  (temp___do_toplevel_308 Bool)) Bool (=>
                                      (or (= temp___is_init_306 true)
                                      (<= 0 5)) (in_range5 temp___expr_309)))

(declare-sort filesizet 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 4194304)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (filesizet filesizet) Bool)

(declare-const dummy6 filesizet)

(declare-datatypes ((filesizet__ref 0))
(((mk_filesizet__ref (filesizet__content filesizet)))))
(define-fun filesizet__ref___projection ((a filesizet__ref)) filesizet
  (filesizet__content a))

(define-fun dynamic_invariant2 ((temp___expr_364 Int)
  (temp___is_init_361 Bool) (temp___skip_constant_362 Bool)
  (temp___do_toplevel_363 Bool)) Bool (=>
                                      (or (= temp___is_init_361 true)
                                      (<= 0 4194304)) (in_range6
                                      temp___expr_364)))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-sort us_rep 0)

(declare-fun bool_eq2 (us_rep us_rep) Bool)

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-fun user_eq7 (us_rep us_rep) Bool)

(declare-const dummy7 us_rep)

(declare-datatypes ((t__ref 0)) (((mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))

(declare-fun exists__ (us_rep) Bool)

(declare-fun exists____function_guard (Bool us_rep) Bool)

(declare-sort fart 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (fart fart) Bool)

(declare-const dummy8 fart)

(declare-datatypes ((fart__ref 0)) (((mk_fart__ref (fart__content fart)))))
(define-fun fart__ref___projection ((a fart__ref)) fart (fart__content a))

(define-fun dynamic_invariant3 ((temp___expr_782 Int)
  (temp___is_init_779 Bool) (temp___skip_constant_780 Bool)
  (temp___do_toplevel_781 Bool)) Bool (=>
                                      (or (= temp___is_init_779 true)
                                      (<= 0 2147483647)) (in_range7
                                      temp___expr_782)))

(declare-sort durationt1 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 2000)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq9 (durationt1 durationt1) Bool)

(declare-const dummy9 durationt1)

(declare-datatypes ((durationt__ref1 0))
(((mk_durationt__ref1 (durationt__content1 durationt1)))))
(define-fun durationt__ref___2__projection ((a durationt__ref1)) durationt1
  (durationt__content1 a))

(define-fun dynamic_invariant4 ((temp___expr_846 Int)
  (temp___is_init_843 Bool) (temp___skip_constant_844 Bool)
  (temp___do_toplevel_845 Bool)) Bool (=>
                                      (or (= temp___is_init_843 true)
                                      (<= 0 2000)) (in_range8
                                      temp___expr_846)))

(declare-sort accesspolicyt 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq10 (accesspolicyt accesspolicyt) Bool)

(declare-const dummy10 accesspolicyt)

(declare-datatypes ((accesspolicyt__ref 0))
(((mk_accesspolicyt__ref (accesspolicyt__content accesspolicyt)))))
(define-fun accesspolicyt__ref___projection ((a accesspolicyt__ref)) accesspolicyt
  (accesspolicyt__content a))

(define-fun dynamic_invariant5 ((temp___expr_852 Int)
  (temp___is_init_849 Bool) (temp___skip_constant_850 Bool)
  (temp___do_toplevel_851 Bool)) Bool (=>
                                      (or (= temp___is_init_849 true)
                                      (<= 0 1)) (in_range9 temp___expr_852)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const thelatchunlockduration Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const thealarmsilentduration Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const thefingerwaitduration Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const thetokenremovalduration Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const theenclaveclearance Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const theworkinghoursstart Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const theworkinghoursend Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const themaxauthduration Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const theaccesspolicy Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const theminentryclass Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-const theminpreservedlogsize Int)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const thealarmthresholdsize Int)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-const thesystemmaxfar Int)

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-sort alarmsilenttexti 0)

(define-fun in_range10 ((x Int)) Bool (and (<= 1 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq11 (alarmsilenttexti alarmsilenttexti) Bool)

(declare-const dummy11 alarmsilenttexti)

(declare-datatypes ((alarmsilenttexti__ref 0))
(((mk_alarmsilenttexti__ref (alarmsilenttexti__content alarmsilenttexti)))))
(define-fun alarmsilenttexti__ref___projection ((a alarmsilenttexti__ref)) alarmsilenttexti
  (alarmsilenttexti__content a))

(declare-sort latchunlocktexti 0)

(define-fun in_range11 ((x Int)) Bool (and (<= 1 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq12 (latchunlocktexti latchunlocktexti) Bool)

(declare-const dummy12 latchunlocktexti)

(declare-datatypes ((latchunlocktexti__ref 0))
(((mk_latchunlocktexti__ref (latchunlocktexti__content latchunlocktexti)))))
(define-fun latchunlocktexti__ref___projection ((a latchunlocktexti__ref)) latchunlocktexti
  (latchunlocktexti__content a))

(declare-sort tokenremovaltexti 0)

(define-fun in_range12 ((x Int)) Bool (and (<= 1 x) (<= x 21)))

(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)

(declare-fun user_eq13 (tokenremovaltexti tokenremovaltexti) Bool)

(declare-const dummy13 tokenremovaltexti)

(declare-datatypes ((tokenremovaltexti__ref 0))
(((mk_tokenremovaltexti__ref (tokenremovaltexti__content tokenremovaltexti)))))
(define-fun tokenremovaltexti__ref___projection ((a tokenremovaltexti__ref)) tokenremovaltexti
  (tokenremovaltexti__content a))

(declare-sort fingerwaittexti 0)

(define-fun in_range13 ((x Int)) Bool (and (<= 1 x) (<= x 19)))

(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)

(declare-fun user_eq14 (fingerwaittexti fingerwaittexti) Bool)

(declare-const dummy14 fingerwaittexti)

(declare-datatypes ((fingerwaittexti__ref 0))
(((mk_fingerwaittexti__ref (fingerwaittexti__content fingerwaittexti)))))
(define-fun fingerwaittexti__ref___projection ((a fingerwaittexti__ref)) fingerwaittexti
  (fingerwaittexti__content a))

(declare-sort clearancetexti 0)

(define-fun in_range14 ((x Int)) Bool (and (<= 1 x) (<= x 17)))

(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)

(declare-fun user_eq15 (clearancetexti clearancetexti) Bool)

(declare-const dummy15 clearancetexti)

(declare-datatypes ((clearancetexti__ref 0))
(((mk_clearancetexti__ref (clearancetexti__content clearancetexti)))))
(define-fun clearancetexti__ref___projection ((a clearancetexti__ref)) clearancetexti
  (clearancetexti__content a))

(declare-sort workingstarttexti 0)

(define-fun in_range15 ((x Int)) Bool (and (<= 1 x) (<= x 18)))

(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)

(declare-fun user_eq16 (workingstarttexti workingstarttexti) Bool)

(declare-const dummy16 workingstarttexti)

(declare-datatypes ((workingstarttexti__ref 0))
(((mk_workingstarttexti__ref (workingstarttexti__content workingstarttexti)))))
(define-fun workingstarttexti__ref___projection ((a workingstarttexti__ref)) workingstarttexti
  (workingstarttexti__content a))

(declare-sort workingendtexti 0)

(define-fun in_range16 ((x Int)) Bool (and (<= 1 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)

(declare-fun user_eq17 (workingendtexti workingendtexti) Bool)

(declare-const dummy17 workingendtexti)

(declare-datatypes ((workingendtexti__ref 0))
(((mk_workingendtexti__ref (workingendtexti__content workingendtexti)))))
(define-fun workingendtexti__ref___projection ((a workingendtexti__ref)) workingendtexti
  (workingendtexti__content a))

(declare-sort maxauthdurationtexti 0)

(define-fun in_range17 ((x Int)) Bool (and (<= 1 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)

(declare-fun user_eq18 (maxauthdurationtexti maxauthdurationtexti) Bool)

(declare-const dummy18 maxauthdurationtexti)

(declare-datatypes ((maxauthdurationtexti__ref 0))
(((mk_maxauthdurationtexti__ref
  (maxauthdurationtexti__content maxauthdurationtexti)))))
(define-fun maxauthdurationtexti__ref___projection ((a maxauthdurationtexti__ref)) maxauthdurationtexti
  (maxauthdurationtexti__content a))

(declare-sort minentryclasstexti 0)

(define-fun in_range18 ((x Int)) Bool (and (<= 1 x) (<= x 14)))

(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)

(declare-fun user_eq19 (minentryclasstexti minentryclasstexti) Bool)

(declare-const dummy19 minentryclasstexti)

(declare-datatypes ((minentryclasstexti__ref 0))
(((mk_minentryclasstexti__ref
  (minentryclasstexti__content minentryclasstexti)))))
(define-fun minentryclasstexti__ref___projection ((a minentryclasstexti__ref)) minentryclasstexti
  (minentryclasstexti__content a))

(declare-sort accesspolicytexti 0)

(define-fun in_range19 ((x Int)) Bool (and (<= 1 x) (<= x 13)))

(declare-fun attr__ATTRIBUTE_IMAGE19 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check19 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE19 (us_image) Int)

(declare-fun user_eq20 (accesspolicytexti accesspolicytexti) Bool)

(declare-const dummy20 accesspolicytexti)

(declare-datatypes ((accesspolicytexti__ref 0))
(((mk_accesspolicytexti__ref (accesspolicytexti__content accesspolicytexti)))))
(define-fun accesspolicytexti__ref___projection ((a accesspolicytexti__ref)) accesspolicytexti
  (accesspolicytexti__content a))

(declare-sort minpreservedlogsizetexti 0)

(define-fun in_range20 ((x Int)) Bool (and (<= 1 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE20 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check20 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE20 (us_image) Int)

(declare-fun user_eq21 (minpreservedlogsizetexti
  minpreservedlogsizetexti) Bool)

(declare-const dummy21 minpreservedlogsizetexti)

(declare-datatypes ((minpreservedlogsizetexti__ref 0))
(((mk_minpreservedlogsizetexti__ref
  (minpreservedlogsizetexti__content minpreservedlogsizetexti)))))
(define-fun minpreservedlogsizetexti__ref___projection ((a minpreservedlogsizetexti__ref)) minpreservedlogsizetexti
  (minpreservedlogsizetexti__content a))

(declare-sort alarmthresholdtexti 0)

(define-fun in_range21 ((x Int)) Bool (and (<= 1 x) (<= x 19)))

(declare-fun attr__ATTRIBUTE_IMAGE21 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check21 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE21 (us_image) Int)

(declare-fun user_eq22 (alarmthresholdtexti alarmthresholdtexti) Bool)

(declare-const dummy22 alarmthresholdtexti)

(declare-datatypes ((alarmthresholdtexti__ref 0))
(((mk_alarmthresholdtexti__ref
  (alarmthresholdtexti__content alarmthresholdtexti)))))
(define-fun alarmthresholdtexti__ref___projection ((a alarmthresholdtexti__ref)) alarmthresholdtexti
  (alarmthresholdtexti__content a))

(declare-sort systemmaxfartexti 0)

(define-fun in_range22 ((x Int)) Bool (and (<= 1 x) (<= x 13)))

(declare-fun attr__ATTRIBUTE_IMAGE22 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check22 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE22 (us_image) Int)

(declare-fun user_eq23 (systemmaxfartexti systemmaxfartexti) Bool)

(declare-const dummy23 systemmaxfartexti)

(declare-datatypes ((systemmaxfartexti__ref 0))
(((mk_systemmaxfartexti__ref (systemmaxfartexti__content systemmaxfartexti)))))
(define-fun systemmaxfartexti__ref___projection ((a systemmaxfartexti__ref)) systemmaxfartexti
  (systemmaxfartexti__content a))

(declare-const alarmsilenttitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(declare-fun temp___String_Literal_149 (tuple0) (Array Int character))

;; temp___String_Literal_149__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 1)) 65)
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 2)) 76))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 3)) 65))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 4)) 82))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 5)) 77))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 6)) 83))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 7)) 73))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 8)) 76))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 9)) 69))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 10)) 78))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 11)) 84))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 12)) 68))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 13)) 85))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 14)) 82))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 15)) 65))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 16)) 84))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 17)) 73))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 18)) 79))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 19)) 78))
     (= (to_rep (select (temp___String_Literal_149 us_void_param) 20)) 32)) :pattern (
  (temp___String_Literal_149 us_void_param)) )))

(declare-const latchunlocktitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

(declare-fun temp___String_Literal_150 (tuple0) (Array Int character))

;; temp___String_Literal_150__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 1)) 76)
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 2)) 65))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 3)) 84))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 4)) 67))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 5)) 72))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 6)) 85))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 7)) 78))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 8)) 76))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 9)) 79))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 10)) 67))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 11)) 75))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 12)) 68))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 13)) 85))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 14)) 82))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 15)) 65))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 16)) 84))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 17)) 73))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 18)) 79))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 19)) 78))
     (= (to_rep (select (temp___String_Literal_150 us_void_param) 20)) 32)) :pattern (
  (temp___String_Literal_150 us_void_param)) )))

(declare-const tokenremovaltitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS17 Int)

(declare-fun temp___String_Literal_151 (tuple0) (Array Int character))

;; temp___String_Literal_151__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 1)) 84)
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 2)) 79))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 3)) 75))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 4)) 69))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 5)) 78))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 6)) 82))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 7)) 69))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 8)) 77))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 9)) 79))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 10)) 86))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 11)) 65))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 12)) 76))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 13)) 68))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 14)) 85))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 15)) 82))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 16)) 65))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 17)) 84))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 18)) 73))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 19)) 79))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 20)) 78))
     (= (to_rep (select (temp___String_Literal_151 us_void_param) 21)) 32)) :pattern (
  (temp___String_Literal_151 us_void_param)) )))

(declare-const fingerwaittitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS18 Int)

(declare-fun temp___String_Literal_152 (tuple0) (Array Int character))

;; temp___String_Literal_152__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 1)) 70)
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 2)) 73))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 3)) 78))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 4)) 71))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 5)) 69))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 6)) 82))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 7)) 87))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 8)) 65))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 9)) 73))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 10)) 84))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 11)) 68))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 12)) 85))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 13)) 82))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 14)) 65))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 15)) 84))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 16)) 73))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 17)) 79))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 18)) 78))
     (= (to_rep (select (temp___String_Literal_152 us_void_param) 19)) 32)) :pattern (
  (temp___String_Literal_152 us_void_param)) )))

(declare-const clearancetitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS19 Int)

(declare-fun temp___String_Literal_153 (tuple0) (Array Int character))

;; temp___String_Literal_153__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 1)) 69)
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 2)) 78))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 3)) 67))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 4)) 76))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 5)) 65))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 6)) 86))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 7)) 69))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 8)) 67))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 9)) 76))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 10)) 69))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 11)) 65))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 12)) 82))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 13)) 65))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 14)) 78))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 15)) 67))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 16)) 69))
     (= (to_rep (select (temp___String_Literal_153 us_void_param) 17)) 32)) :pattern (
  (temp___String_Literal_153 us_void_param)) )))

(declare-const workingstarttitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS20 Int)

(declare-fun temp___String_Literal_154 (tuple0) (Array Int character))

;; temp___String_Literal_154__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 1)) 87)
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 2)) 79))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 3)) 82))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 4)) 75))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 5)) 73))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 6)) 78))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 7)) 71))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 8)) 72))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 9)) 79))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 10)) 85))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 11)) 82))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 12)) 83))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 13)) 83))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 14)) 84))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 15)) 65))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 16)) 82))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 17)) 84))
     (= (to_rep (select (temp___String_Literal_154 us_void_param) 18)) 32)) :pattern (
  (temp___String_Literal_154 us_void_param)) )))

(declare-const workingendtitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS21 Int)

(declare-fun temp___String_Literal_155 (tuple0) (Array Int character))

;; temp___String_Literal_155__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 1)) 87)
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 2)) 79))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 3)) 82))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 4)) 75))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 5)) 73))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 6)) 78))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 7)) 71))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 8)) 72))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 9)) 79))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 10)) 85))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 11)) 82))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 12)) 83))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 13)) 69))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 14)) 78))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 15)) 68))
     (= (to_rep (select (temp___String_Literal_155 us_void_param) 16)) 32)) :pattern (
  (temp___String_Literal_155 us_void_param)) )))

(declare-const maxauthdurationtitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS22 Int)

(declare-fun temp___String_Literal_156 (tuple0) (Array Int character))

;; temp___String_Literal_156__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 1)) 77)
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 2)) 65))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 3)) 88))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 4)) 65))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 5)) 85))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 6)) 84))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 7)) 72))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 8)) 68))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 9)) 85))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 10)) 82))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 11)) 65))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 12)) 84))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 13)) 73))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 14)) 79))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 15)) 78))
     (= (to_rep (select (temp___String_Literal_156 us_void_param) 16)) 32)) :pattern (
  (temp___String_Literal_156 us_void_param)) )))

(declare-const accesspolicytitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS23 Int)

(declare-fun temp___String_Literal_157 (tuple0) (Array Int character))

;; temp___String_Literal_157__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 1)) 65)
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 2)) 67))
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 3)) 67))
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 4)) 69))
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 5)) 83))
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 6)) 83))
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 7)) 80))
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 8)) 79))
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 9)) 76))
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 10)) 73))
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 11)) 67))
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 12)) 89))
     (= (to_rep (select (temp___String_Literal_157 us_void_param) 13)) 32)) :pattern (
  (temp___String_Literal_157 us_void_param)) )))

(declare-const minentryclasstitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS24 Int)

(declare-fun temp___String_Literal_158 (tuple0) (Array Int character))

;; temp___String_Literal_158__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 1)) 77)
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 2)) 73))
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 3)) 78))
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 4)) 69))
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 5)) 78))
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 6)) 84))
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 7)) 82))
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 8)) 89))
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 9)) 67))
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 10)) 76))
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 11)) 65))
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 12)) 83))
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 13)) 83))
     (= (to_rep (select (temp___String_Literal_158 us_void_param) 14)) 32)) :pattern (
  (temp___String_Literal_158 us_void_param)) )))

(declare-const minpreservedlogsizetitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS25 Int)

(declare-fun temp___String_Literal_159 (tuple0) (Array Int character))

;; temp___String_Literal_159__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 1)) 77)
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 2)) 73))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 3)) 78))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 4)) 80))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 5)) 82))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 6)) 69))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 7)) 83))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 8)) 69))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 9)) 82))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 10)) 86))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 11)) 69))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 12)) 68))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 13)) 76))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 14)) 79))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 15)) 71))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 16)) 83))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 17)) 73))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 18)) 90))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 19)) 69))
     (= (to_rep (select (temp___String_Literal_159 us_void_param) 20)) 32)) :pattern (
  (temp___String_Literal_159 us_void_param)) )))

(declare-const alarmthresholdtitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS26 Int)

(declare-fun temp___String_Literal_160 (tuple0) (Array Int character))

;; temp___String_Literal_160__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 1)) 65)
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 2)) 76))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 3)) 65))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 4)) 82))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 5)) 77))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 6)) 84))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 7)) 72))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 8)) 82))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 9)) 69))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 10)) 83))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 11)) 72))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 12)) 79))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 13)) 76))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 14)) 68))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 15)) 83))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 16)) 73))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 17)) 90))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 18)) 69))
     (= (to_rep (select (temp___String_Literal_160 us_void_param) 19)) 32)) :pattern (
  (temp___String_Literal_160 us_void_param)) )))

(declare-const systemmaxfartitle (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS27 Int)

(declare-fun temp___String_Literal_161 (tuple0) (Array Int character))

;; temp___String_Literal_161__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 1)) 83)
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 2)) 89))
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 3)) 83))
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 4)) 84))
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 5)) 69))
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 6)) 77))
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 7)) 77))
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 8)) 65))
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 9)) 88))
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 10)) 70))
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 11)) 65))
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 12)) 82))
     (= (to_rep (select (temp___String_Literal_161 us_void_param) 13)) 32)) :pattern (
  (temp___String_Literal_161 us_void_param)) )))

(declare-sort classtexti 0)

(define-fun in_range23 ((x Int)) Bool (and (<= 1 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE23 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check23 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE23 (us_image) Int)

(declare-fun user_eq24 (classtexti classtexti) Bool)

(declare-const dummy24 classtexti)

(declare-datatypes ((classtexti__ref 0))
(((mk_classtexti__ref (classtexti__content classtexti)))))
(define-fun classtexti__ref___projection ((a classtexti__ref)) classtexti
  (classtexti__content a))

(declare-fun to_rep2 (classtexti) Int)

(declare-fun of_rep2 (Int) classtexti)

;; inversion_axiom
  (assert
  (forall ((x classtexti))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x classtexti)) (! (in_range23
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range23 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                               (of_rep2 x))) )))

(declare-const dummy25 (Array Int character))

(declare-const value__size2 Int)

(declare-fun object__size2 ((Array Int character)) Int)

(declare-const value__component__size1 Int)

(declare-fun object__component__size1 ((Array Int character)) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))

(declare-fun user_eq25 ((Array Int character) (Array Int character)) Bool)

(declare-datatypes ((us_split_fields 0))
(((mk___split_fields
  (rec__configdata__classstringt__text (Array Int character))(rec__configdata__classstringt__length classtexti)))))
(define-fun us_split_fields_Text__projection ((a us_split_fields)) (Array Int character)
  (rec__configdata__classstringt__text a))

(define-fun us_split_fields_Length__2__projection ((a us_split_fields)) classtexti
  (rec__configdata__classstringt__length a))

(declare-datatypes ((us_split_fields__ref 0))
(((mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ((us_rep1 0))
(((mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep1)) us_split_fields (us_split_fields1
                                                                 a))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (bool_eq
                            (rec__configdata__classstringt__text
                            (us_split_fields1 a)) 1 12
                            (rec__configdata__classstringt__text
                            (us_split_fields1 b)) 1 12) true)
                         (= (to_rep2
                            (rec__configdata__classstringt__length
                            (us_split_fields1 a))) (to_rep2
                                                   (rec__configdata__classstringt__length
                                                   (us_split_fields1 b)))))
                    true false))

(declare-const value__size3 Int)

(declare-fun object__size3 (us_rep1) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))

(declare-const configdata__classstringt__text__first__bit Int)

(declare-const configdata__classstringt__text__last__bit Int)

(declare-const configdata__classstringt__text__position Int)

;; configdata__classstringt__text__first__bit_axiom
  (assert (<= 0 configdata__classstringt__text__first__bit))

;; configdata__classstringt__text__last__bit_axiom
  (assert
  (< configdata__classstringt__text__first__bit configdata__classstringt__text__last__bit))

;; configdata__classstringt__text__position_axiom
  (assert (<= 0 configdata__classstringt__text__position))

(declare-const configdata__classstringt__length__first__bit Int)

(declare-const configdata__classstringt__length__last__bit Int)

(declare-const configdata__classstringt__length__position Int)

;; configdata__classstringt__length__first__bit_axiom
  (assert (<= 0 configdata__classstringt__length__first__bit))

;; configdata__classstringt__length__last__bit_axiom
  (assert
  (< configdata__classstringt__length__first__bit configdata__classstringt__length__last__bit))

;; configdata__classstringt__length__position_axiom
  (assert (<= 0 configdata__classstringt__length__position))

(declare-fun user_eq26 (us_rep1 us_rep1) Bool)

(declare-const dummy26 us_rep1)

(declare-datatypes ((classstringt__ref 0))
(((mk_classstringt__ref (classstringt__content us_rep1)))))
(define-fun classstringt__ref___projection ((a classstringt__ref)) us_rep1
  (classstringt__content a))

(declare-datatypes ((map__ref1 0))
(((mk_map__ref1 (map__content1 (Array Int us_rep1))))))
(declare-fun slide1 ((Array Int us_rep1) Int Int) (Array Int us_rep1))

;; slide_eq
  (assert
  (forall ((a (Array Int us_rep1)))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int us_rep1)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide1 a old_first new_first) i)) ))))))

(declare-fun concat2 ((Array Int us_rep1) Int Int (Array Int us_rep1) Int
  Int) (Array Int us_rep1))

;; concat_def
  (assert
  (forall ((a (Array Int us_rep1)) (b (Array Int us_rep1)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat2 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton2 (us_rep1 Int) (Array Int us_rep1))

;; singleton_def
  (assert
  (forall ((v us_rep1))
  (forall ((i Int))
  (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i)) ))))

(define-fun bool_eq4 ((a (Array Int us_rep1)) (a__first Int) (a__last Int)
  (b (Array Int us_rep1)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_162 Int))
                           (=>
                           (and (<= a__first temp___idx_162)
                           (<= temp___idx_162 a__last))
                           (= (bool_eq3 (select a temp___idx_162)
                              (select b (+ (- b__first a__first) temp___idx_162))) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int us_rep1)) (b (Array Int us_rep1)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq4 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_162 Int))
  (=> (and (<= a__first temp___idx_162) (<= temp___idx_162 a__last))
  (= (bool_eq3 (select a temp___idx_162)
     (select b (+ (- b__first a__first) temp___idx_162))) true))))))))

(declare-const classstringlookup (Array Int us_rep1))

(declare-const attr__ATTRIBUTE_ADDRESS28 Int)

(declare-fun configdata__classstringlookup__aggregate_def (us_rep1 us_rep1
  us_rep1 us_rep1 us_rep1 us_rep1) (Array Int us_rep1))

;; def_axiom
  (assert
  (forall ((temp___164 us_rep1) (temp___165 us_rep1) (temp___166 us_rep1)
  (temp___167 us_rep1) (temp___168 us_rep1) (temp___169 us_rep1))
  (let ((temp___163 (configdata__classstringlookup__aggregate_def temp___164
                    temp___165 temp___166 temp___167 temp___168 temp___169)))
  (and
  (and
  (and
  (and
  (and (= (select temp___163 0) temp___164)
  (= (select temp___163 1) temp___165)) (= (select temp___163 2) temp___166))
  (= (select temp___163 3) temp___167)) (= (select temp___163 4) temp___168))
  (= (select temp___163 5) temp___169)))))

(declare-fun temp___String_Literal_171 (tuple0) (Array Int character))

;; temp___String_Literal_171__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_171 us_void_param) 1)) 117)
     (= (to_rep (select (temp___String_Literal_171 us_void_param) 2)) 110))
     (= (to_rep (select (temp___String_Literal_171 us_void_param) 3)) 109))
     (= (to_rep (select (temp___String_Literal_171 us_void_param) 4)) 97))
     (= (to_rep (select (temp___String_Literal_171 us_void_param) 5)) 114))
     (= (to_rep (select (temp___String_Literal_171 us_void_param) 6)) 107))
     (= (to_rep (select (temp___String_Literal_171 us_void_param) 7)) 101))
     (= (to_rep (select (temp___String_Literal_171 us_void_param) 8)) 100))
     (= (to_rep (select (temp___String_Literal_171 us_void_param) 9)) 32))
     (= (to_rep (select (temp___String_Literal_171 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_171 us_void_param) 11)) 32))
     (= (to_rep (select (temp___String_Literal_171 us_void_param) 12)) 32)) :pattern (
  (temp___String_Literal_171 us_void_param)) )))

(declare-fun temp___String_Literal_172 (tuple0) (Array Int character))

;; temp___String_Literal_172__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_172 us_void_param) 1)) 117)
     (= (to_rep (select (temp___String_Literal_172 us_void_param) 2)) 110))
     (= (to_rep (select (temp___String_Literal_172 us_void_param) 3)) 99))
     (= (to_rep (select (temp___String_Literal_172 us_void_param) 4)) 108))
     (= (to_rep (select (temp___String_Literal_172 us_void_param) 5)) 97))
     (= (to_rep (select (temp___String_Literal_172 us_void_param) 6)) 115))
     (= (to_rep (select (temp___String_Literal_172 us_void_param) 7)) 115))
     (= (to_rep (select (temp___String_Literal_172 us_void_param) 8)) 105))
     (= (to_rep (select (temp___String_Literal_172 us_void_param) 9)) 102))
     (= (to_rep (select (temp___String_Literal_172 us_void_param) 10)) 105))
     (= (to_rep (select (temp___String_Literal_172 us_void_param) 11)) 101))
     (= (to_rep (select (temp___String_Literal_172 us_void_param) 12)) 100)) :pattern (
  (temp___String_Literal_172 us_void_param)) )))

(declare-fun temp___String_Literal_173 (tuple0) (Array Int character))

;; temp___String_Literal_173__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_173 us_void_param) 1)) 114)
     (= (to_rep (select (temp___String_Literal_173 us_void_param) 2)) 101))
     (= (to_rep (select (temp___String_Literal_173 us_void_param) 3)) 115))
     (= (to_rep (select (temp___String_Literal_173 us_void_param) 4)) 116))
     (= (to_rep (select (temp___String_Literal_173 us_void_param) 5)) 114))
     (= (to_rep (select (temp___String_Literal_173 us_void_param) 6)) 105))
     (= (to_rep (select (temp___String_Literal_173 us_void_param) 7)) 99))
     (= (to_rep (select (temp___String_Literal_173 us_void_param) 8)) 116))
     (= (to_rep (select (temp___String_Literal_173 us_void_param) 9)) 101))
     (= (to_rep (select (temp___String_Literal_173 us_void_param) 10)) 100))
     (= (to_rep (select (temp___String_Literal_173 us_void_param) 11)) 32))
     (= (to_rep (select (temp___String_Literal_173 us_void_param) 12)) 32)) :pattern (
  (temp___String_Literal_173 us_void_param)) )))

(declare-fun temp___String_Literal_174 (tuple0) (Array Int character))

;; temp___String_Literal_174__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_174 us_void_param) 1)) 99)
     (= (to_rep (select (temp___String_Literal_174 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_174 us_void_param) 3)) 110))
     (= (to_rep (select (temp___String_Literal_174 us_void_param) 4)) 102))
     (= (to_rep (select (temp___String_Literal_174 us_void_param) 5)) 105))
     (= (to_rep (select (temp___String_Literal_174 us_void_param) 6)) 100))
     (= (to_rep (select (temp___String_Literal_174 us_void_param) 7)) 101))
     (= (to_rep (select (temp___String_Literal_174 us_void_param) 8)) 110))
     (= (to_rep (select (temp___String_Literal_174 us_void_param) 9)) 116))
     (= (to_rep (select (temp___String_Literal_174 us_void_param) 10)) 105))
     (= (to_rep (select (temp___String_Literal_174 us_void_param) 11)) 97))
     (= (to_rep (select (temp___String_Literal_174 us_void_param) 12)) 108)) :pattern (
  (temp___String_Literal_174 us_void_param)) )))

(declare-fun temp___String_Literal_175 (tuple0) (Array Int character))

;; temp___String_Literal_175__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_175 us_void_param) 1)) 115)
     (= (to_rep (select (temp___String_Literal_175 us_void_param) 2)) 101))
     (= (to_rep (select (temp___String_Literal_175 us_void_param) 3)) 99))
     (= (to_rep (select (temp___String_Literal_175 us_void_param) 4)) 114))
     (= (to_rep (select (temp___String_Literal_175 us_void_param) 5)) 101))
     (= (to_rep (select (temp___String_Literal_175 us_void_param) 6)) 116))
     (= (to_rep (select (temp___String_Literal_175 us_void_param) 7)) 32))
     (= (to_rep (select (temp___String_Literal_175 us_void_param) 8)) 32))
     (= (to_rep (select (temp___String_Literal_175 us_void_param) 9)) 32))
     (= (to_rep (select (temp___String_Literal_175 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_175 us_void_param) 11)) 32))
     (= (to_rep (select (temp___String_Literal_175 us_void_param) 12)) 32)) :pattern (
  (temp___String_Literal_175 us_void_param)) )))

(declare-fun temp___String_Literal_176 (tuple0) (Array Int character))

;; temp___String_Literal_176__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_176 us_void_param) 1)) 116)
     (= (to_rep (select (temp___String_Literal_176 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_176 us_void_param) 3)) 112))
     (= (to_rep (select (temp___String_Literal_176 us_void_param) 4)) 115))
     (= (to_rep (select (temp___String_Literal_176 us_void_param) 5)) 101))
     (= (to_rep (select (temp___String_Literal_176 us_void_param) 6)) 99))
     (= (to_rep (select (temp___String_Literal_176 us_void_param) 7)) 114))
     (= (to_rep (select (temp___String_Literal_176 us_void_param) 8)) 101))
     (= (to_rep (select (temp___String_Literal_176 us_void_param) 9)) 116))
     (= (to_rep (select (temp___String_Literal_176 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_176 us_void_param) 11)) 32))
     (= (to_rep (select (temp___String_Literal_176 us_void_param) 12)) 32)) :pattern (
  (temp___String_Literal_176 us_void_param)) )))

(declare-sort accesstexti 0)

(define-fun in_range24 ((x Int)) Bool (and (<= 1 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE24 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check24 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE24 (us_image) Int)

(declare-fun user_eq27 (accesstexti accesstexti) Bool)

(declare-const dummy27 accesstexti)

(declare-datatypes ((accesstexti__ref 0))
(((mk_accesstexti__ref (accesstexti__content accesstexti)))))
(define-fun accesstexti__ref___projection ((a accesstexti__ref)) accesstexti
  (accesstexti__content a))

(declare-fun to_rep3 (accesstexti) Int)

(declare-fun of_rep3 (Int) accesstexti)

;; inversion_axiom
  (assert
  (forall ((x accesstexti))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x accesstexti)) (! (in_range24
  (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range24 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                               (of_rep3 x))) )))

(declare-const dummy28 (Array Int character))

(declare-const value__size4 Int)

(declare-fun object__size4 ((Array Int character)) Int)

(declare-const value__component__size2 Int)

(declare-fun object__component__size2 ((Array Int character)) Int)

(declare-const value__alignment4 Int)

(declare-fun object__alignment4 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size4 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment4 a))))

(declare-fun user_eq28 ((Array Int character) (Array Int character)) Bool)

(declare-datatypes ((us_split_fields2 0))
(((mk___split_fields1
  (rec__configdata__accessstringt__text (Array Int character))(rec__configdata__accessstringt__length accesstexti)))))
(define-fun us_split_fields_Text__2__projection ((a us_split_fields2)) (Array Int character)
  (rec__configdata__accessstringt__text a))

(define-fun us_split_fields_Length__3__projection ((a us_split_fields2)) accesstexti
  (rec__configdata__accessstringt__length a))

(declare-datatypes ((us_split_fields__ref1 0))
(((mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep2 0))
(((mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___9__projection ((a us_rep2)) us_split_fields2 (us_split_fields3
                                                                  a))

(define-fun bool_eq5 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (= (bool_eq
                            (rec__configdata__accessstringt__text
                            (us_split_fields3 a)) 1 12
                            (rec__configdata__accessstringt__text
                            (us_split_fields3 b)) 1 12) true)
                         (= (to_rep3
                            (rec__configdata__accessstringt__length
                            (us_split_fields3 a))) (to_rep3
                                                   (rec__configdata__accessstringt__length
                                                   (us_split_fields3 b)))))
                    true false))

(declare-const value__size5 Int)

(declare-fun object__size5 (us_rep2) Int)

(declare-const value__alignment5 Int)

(declare-fun object__alignment5 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))

(declare-const configdata__accessstringt__text__first__bit Int)

(declare-const configdata__accessstringt__text__last__bit Int)

(declare-const configdata__accessstringt__text__position Int)

;; configdata__accessstringt__text__first__bit_axiom
  (assert (<= 0 configdata__accessstringt__text__first__bit))

;; configdata__accessstringt__text__last__bit_axiom
  (assert
  (< configdata__accessstringt__text__first__bit configdata__accessstringt__text__last__bit))

;; configdata__accessstringt__text__position_axiom
  (assert (<= 0 configdata__accessstringt__text__position))

(declare-const configdata__accessstringt__length__first__bit Int)

(declare-const configdata__accessstringt__length__last__bit Int)

(declare-const configdata__accessstringt__length__position Int)

;; configdata__accessstringt__length__first__bit_axiom
  (assert (<= 0 configdata__accessstringt__length__first__bit))

;; configdata__accessstringt__length__last__bit_axiom
  (assert
  (< configdata__accessstringt__length__first__bit configdata__accessstringt__length__last__bit))

;; configdata__accessstringt__length__position_axiom
  (assert (<= 0 configdata__accessstringt__length__position))

(declare-fun user_eq29 (us_rep2 us_rep2) Bool)

(declare-const dummy29 us_rep2)

(declare-datatypes ((accessstringt__ref 0))
(((mk_accessstringt__ref (accessstringt__content us_rep2)))))
(define-fun accessstringt__ref___projection ((a accessstringt__ref)) us_rep2
  (accessstringt__content a))

(declare-datatypes ((map__ref2 0))
(((mk_map__ref2 (map__content2 (Array Int us_rep2))))))
(declare-fun slide2 ((Array Int us_rep2) Int Int) (Array Int us_rep2))

;; slide_eq
  (assert
  (forall ((a (Array Int us_rep2)))
  (forall ((first2 Int))
  (! (= (slide2 a first2 first2) a) :pattern ((slide2 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int us_rep2)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide2 a old_first new_first) i)) ))))))

(declare-fun concat3 ((Array Int us_rep2) Int Int (Array Int us_rep2) Int
  Int) (Array Int us_rep2))

;; concat_def
  (assert
  (forall ((a (Array Int us_rep2)) (b (Array Int us_rep2)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat3 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton3 (us_rep2 Int) (Array Int us_rep2))

;; singleton_def
  (assert
  (forall ((v us_rep2))
  (forall ((i Int))
  (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i)) ))))

(define-fun bool_eq6 ((a (Array Int us_rep2)) (a__first Int) (a__last Int)
  (b (Array Int us_rep2)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_177 Int))
                           (=>
                           (and (<= a__first temp___idx_177)
                           (<= temp___idx_177 a__last))
                           (= (bool_eq5 (select a temp___idx_177)
                              (select b (+ (- b__first a__first) temp___idx_177))) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int us_rep2)) (b (Array Int us_rep2)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq6 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_177 Int))
  (=> (and (<= a__first temp___idx_177) (<= temp___idx_177 a__last))
  (= (bool_eq5 (select a temp___idx_177)
     (select b (+ (- b__first a__first) temp___idx_177))) true))))))))

(declare-const accessstringlookup (Array Int us_rep2))

(declare-const attr__ATTRIBUTE_ADDRESS29 Int)

(declare-fun configdata__accessstringlookup__aggregate_def (us_rep2
  us_rep2) (Array Int us_rep2))

;; def_axiom
  (assert
  (forall ((temp___179 us_rep2) (temp___180 us_rep2))
  (let ((temp___178 (configdata__accessstringlookup__aggregate_def temp___179
                    temp___180)))
  (and (= (select temp___178 1) temp___179)
  (= (select temp___178 0) temp___180)))))

(declare-fun temp___String_Literal_182 (tuple0) (Array Int character))

;; temp___String_Literal_182__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_182 us_void_param) 1)) 97)
     (= (to_rep (select (temp___String_Literal_182 us_void_param) 2)) 108))
     (= (to_rep (select (temp___String_Literal_182 us_void_param) 3)) 108))
     (= (to_rep (select (temp___String_Literal_182 us_void_param) 4)) 104))
     (= (to_rep (select (temp___String_Literal_182 us_void_param) 5)) 111))
     (= (to_rep (select (temp___String_Literal_182 us_void_param) 6)) 117))
     (= (to_rep (select (temp___String_Literal_182 us_void_param) 7)) 114))
     (= (to_rep (select (temp___String_Literal_182 us_void_param) 8)) 115))
     (= (to_rep (select (temp___String_Literal_182 us_void_param) 9)) 32))
     (= (to_rep (select (temp___String_Literal_182 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_182 us_void_param) 11)) 32))
     (= (to_rep (select (temp___String_Literal_182 us_void_param) 12)) 32)) :pattern (
  (temp___String_Literal_182 us_void_param)) )))

(declare-fun temp___String_Literal_183 (tuple0) (Array Int character))

;; temp___String_Literal_183__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_183 us_void_param) 1)) 119)
     (= (to_rep (select (temp___String_Literal_183 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_183 us_void_param) 3)) 114))
     (= (to_rep (select (temp___String_Literal_183 us_void_param) 4)) 107))
     (= (to_rep (select (temp___String_Literal_183 us_void_param) 5)) 105))
     (= (to_rep (select (temp___String_Literal_183 us_void_param) 6)) 110))
     (= (to_rep (select (temp___String_Literal_183 us_void_param) 7)) 103))
     (= (to_rep (select (temp___String_Literal_183 us_void_param) 8)) 104))
     (= (to_rep (select (temp___String_Literal_183 us_void_param) 9)) 111))
     (= (to_rep (select (temp___String_Literal_183 us_void_param) 10)) 117))
     (= (to_rep (select (temp___String_Literal_183 us_void_param) 11)) 114))
     (= (to_rep (select (temp___String_Literal_183 us_void_param) 12)) 115)) :pattern (
  (temp___String_Literal_183 us_void_param)) )))

(declare-const attr__ATTRIBUTE_ADDRESS30 Int)

(declare-sort string5i 0)

(define-fun in_range25 ((x Int)) Bool (and (<= 1 x) (<= x 5)))

(declare-fun attr__ATTRIBUTE_IMAGE25 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check25 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE25 (us_image) Int)

(declare-fun user_eq30 (string5i string5i) Bool)

(declare-const dummy30 string5i)

(declare-datatypes ((string5i__ref 0))
(((mk_string5i__ref (string5i__content string5i)))))
(define-fun string5i__ref___projection ((a string5i__ref)) string5i (string5i__content
                                                                    a))

(declare-const c38b Int)

(declare-const attr__ATTRIBUTE_ADDRESS31 Int)

(declare-const attr__ATTRIBUTE_ADDRESS32 Int)

(declare-const attr__ATTRIBUTE_ADDRESS33 Int)

(declare-const attr__ATTRIBUTE_ADDRESS34 Int)

(declare-const c43b Int)

(declare-const attr__ATTRIBUTE_ADDRESS35 Int)

(declare-const attr__ATTRIBUTE_ADDRESS36 Int)

(declare-const attr__ATTRIBUTE_ADDRESS37 Int)

(declare-const attr__ATTRIBUTE_ADDRESS38 Int)

(declare-const c48b Int)

(declare-const attr__ATTRIBUTE_ADDRESS39 Int)

(declare-const attr__ATTRIBUTE_ADDRESS40 Int)

(declare-const attr__ATTRIBUTE_ADDRESS41 Int)

(declare-const attr__ATTRIBUTE_ADDRESS42 Int)

(declare-fun temp___String_Literal_1147 (tuple0) (Array Int character))

;; temp___String_Literal_1147__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_1147 us_void_param) 1)) 48)
     (= (to_rep (select (temp___String_Literal_1147 us_void_param) 2)) 48))
     (= (to_rep (select (temp___String_Literal_1147 us_void_param) 3)) 58))
     (= (to_rep (select (temp___String_Literal_1147 us_void_param) 4)) 48))
     (= (to_rep (select (temp___String_Literal_1147 us_void_param) 5)) 48)) :pattern (
  (temp___String_Literal_1147 us_void_param)) )))

(declare-fun temp___String_Literal_1148 (tuple0) (Array Int character))

;; temp___String_Literal_1148__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_1148 us_void_param) 1)) 48)
     (= (to_rep (select (temp___String_Literal_1148 us_void_param) 2)) 48))
     (= (to_rep (select (temp___String_Literal_1148 us_void_param) 3)) 58))
     (= (to_rep (select (temp___String_Literal_1148 us_void_param) 4)) 48))
     (= (to_rep (select (temp___String_Literal_1148 us_void_param) 5)) 48)) :pattern (
  (temp___String_Literal_1148 us_void_param)) )))

(declare-fun temp___String_Literal_1149 (tuple0) (Array Int character))

;; temp___String_Literal_1149__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_1149 us_void_param) 1)) 48)
     (= (to_rep (select (temp___String_Literal_1149 us_void_param) 2)) 48))
     (= (to_rep (select (temp___String_Literal_1149 us_void_param) 3)) 58))
     (= (to_rep (select (temp___String_Literal_1149 us_void_param) 4)) 48))
     (= (to_rep (select (temp___String_Literal_1149 us_void_param) 5)) 48)) :pattern (
  (temp___String_Literal_1149 us_void_param)) )))

(define-fun dynamic_invariant6 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant7 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(define-fun dynamic_invariant8 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(define-fun dynamic_invariant9 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant10 ((temp___expr_858 Int)
  (temp___is_init_855 Bool) (temp___skip_constant_856 Bool)
  (temp___do_toplevel_857 Bool)) Bool (=>
                                      (or (= temp___is_init_855 true)
                                      (<= 1 20)) (in_range10
                                      temp___expr_858)))

(define-fun dynamic_invariant11 ((temp___expr_873 Int)
  (temp___is_init_870 Bool) (temp___skip_constant_871 Bool)
  (temp___do_toplevel_872 Bool)) Bool (=>
                                      (or (= temp___is_init_870 true)
                                      (<= 1 20)) (in_range11
                                      temp___expr_873)))

(define-fun dynamic_invariant12 ((temp___expr_888 Int)
  (temp___is_init_885 Bool) (temp___skip_constant_886 Bool)
  (temp___do_toplevel_887 Bool)) Bool (=>
                                      (or (= temp___is_init_885 true)
                                      (<= 1 21)) (in_range12
                                      temp___expr_888)))

(define-fun dynamic_invariant13 ((temp___expr_903 Int)
  (temp___is_init_900 Bool) (temp___skip_constant_901 Bool)
  (temp___do_toplevel_902 Bool)) Bool (=>
                                      (or (= temp___is_init_900 true)
                                      (<= 1 19)) (in_range13
                                      temp___expr_903)))

(define-fun dynamic_invariant14 ((temp___expr_918 Int)
  (temp___is_init_915 Bool) (temp___skip_constant_916 Bool)
  (temp___do_toplevel_917 Bool)) Bool (=>
                                      (or (= temp___is_init_915 true)
                                      (<= 1 17)) (in_range14
                                      temp___expr_918)))

(define-fun dynamic_invariant15 ((temp___expr_933 Int)
  (temp___is_init_930 Bool) (temp___skip_constant_931 Bool)
  (temp___do_toplevel_932 Bool)) Bool (=>
                                      (or (= temp___is_init_930 true)
                                      (<= 1 18)) (in_range15
                                      temp___expr_933)))

(define-fun dynamic_invariant16 ((temp___expr_948 Int)
  (temp___is_init_945 Bool) (temp___skip_constant_946 Bool)
  (temp___do_toplevel_947 Bool)) Bool (=>
                                      (or (= temp___is_init_945 true)
                                      (<= 1 16)) (in_range16
                                      temp___expr_948)))

(define-fun dynamic_invariant17 ((temp___expr_963 Int)
  (temp___is_init_960 Bool) (temp___skip_constant_961 Bool)
  (temp___do_toplevel_962 Bool)) Bool (=>
                                      (or (= temp___is_init_960 true)
                                      (<= 1 16)) (in_range17
                                      temp___expr_963)))

(define-fun dynamic_invariant18 ((temp___expr_978 Int)
  (temp___is_init_975 Bool) (temp___skip_constant_976 Bool)
  (temp___do_toplevel_977 Bool)) Bool (=>
                                      (or (= temp___is_init_975 true)
                                      (<= 1 14)) (in_range18
                                      temp___expr_978)))

(define-fun dynamic_invariant19 ((temp___expr_993 Int)
  (temp___is_init_990 Bool) (temp___skip_constant_991 Bool)
  (temp___do_toplevel_992 Bool)) Bool (=>
                                      (or (= temp___is_init_990 true)
                                      (<= 1 13)) (in_range19
                                      temp___expr_993)))

(define-fun dynamic_invariant20 ((temp___expr_1008 Int)
  (temp___is_init_1005 Bool) (temp___skip_constant_1006 Bool)
  (temp___do_toplevel_1007 Bool)) Bool (=>
                                       (or (= temp___is_init_1005 true)
                                       (<= 1 20)) (in_range20
                                       temp___expr_1008)))

(define-fun dynamic_invariant21 ((temp___expr_1023 Int)
  (temp___is_init_1020 Bool) (temp___skip_constant_1021 Bool)
  (temp___do_toplevel_1022 Bool)) Bool (=>
                                       (or (= temp___is_init_1020 true)
                                       (<= 1 19)) (in_range21
                                       temp___expr_1023)))

(define-fun dynamic_invariant22 ((temp___expr_1038 Int)
  (temp___is_init_1035 Bool) (temp___skip_constant_1036 Bool)
  (temp___do_toplevel_1037 Bool)) Bool (=>
                                       (or (= temp___is_init_1035 true)
                                       (<= 1 13)) (in_range22
                                       temp___expr_1038)))

;; alarmsilenttitle__def_axiom
  (assert (= alarmsilenttitle (temp___String_Literal_149 Tuple0)))

;; latchunlocktitle__def_axiom
  (assert (= latchunlocktitle (temp___String_Literal_150 Tuple0)))

;; tokenremovaltitle__def_axiom
  (assert (= tokenremovaltitle (temp___String_Literal_151 Tuple0)))

;; fingerwaittitle__def_axiom
  (assert (= fingerwaittitle (temp___String_Literal_152 Tuple0)))

;; clearancetitle__def_axiom
  (assert (= clearancetitle (temp___String_Literal_153 Tuple0)))

;; workingstarttitle__def_axiom
  (assert (= workingstarttitle (temp___String_Literal_154 Tuple0)))

;; workingendtitle__def_axiom
  (assert (= workingendtitle (temp___String_Literal_155 Tuple0)))

;; maxauthdurationtitle__def_axiom
  (assert (= maxauthdurationtitle (temp___String_Literal_156 Tuple0)))

;; accesspolicytitle__def_axiom
  (assert (= accesspolicytitle (temp___String_Literal_157 Tuple0)))

;; minentryclasstitle__def_axiom
  (assert (= minentryclasstitle (temp___String_Literal_158 Tuple0)))

;; minpreservedlogsizetitle__def_axiom
  (assert (= minpreservedlogsizetitle (temp___String_Literal_159 Tuple0)))

;; alarmthresholdtitle__def_axiom
  (assert (= alarmthresholdtitle (temp___String_Literal_160 Tuple0)))

;; systemmaxfartitle__def_axiom
  (assert (= systemmaxfartitle (temp___String_Literal_161 Tuple0)))

(define-fun dynamic_invariant23 ((temp___expr_1053 Int)
  (temp___is_init_1050 Bool) (temp___skip_constant_1051 Bool)
  (temp___do_toplevel_1052 Bool)) Bool (=>
                                       (or (= temp___is_init_1050 true)
                                       (<= 1 12)) (in_range23
                                       temp___expr_1053)))

;; classstringlookup__def_axiom
  (assert
  (= classstringlookup (configdata__classstringlookup__aggregate_def
                       (mk___rep
                       (mk___split_fields (temp___String_Literal_171 Tuple0)
                       (of_rep2 8)))
                       (mk___rep
                       (mk___split_fields (temp___String_Literal_172 Tuple0)
                       (of_rep2 12)))
                       (mk___rep
                       (mk___split_fields (temp___String_Literal_173 Tuple0)
                       (of_rep2 10)))
                       (mk___rep
                       (mk___split_fields (temp___String_Literal_174 Tuple0)
                       (of_rep2 12)))
                       (mk___rep
                       (mk___split_fields (temp___String_Literal_175 Tuple0)
                       (of_rep2 6)))
                       (mk___rep
                       (mk___split_fields (temp___String_Literal_176 Tuple0)
                       (of_rep2 9))))))

(define-fun dynamic_invariant24 ((temp___expr_1093 Int)
  (temp___is_init_1090 Bool) (temp___skip_constant_1091 Bool)
  (temp___do_toplevel_1092 Bool)) Bool (=>
                                       (or (= temp___is_init_1090 true)
                                       (<= 1 12)) (in_range24
                                       temp___expr_1093)))

;; accessstringlookup__def_axiom
  (assert
  (= accessstringlookup (configdata__accessstringlookup__aggregate_def
                        (mk___rep1
                        (mk___split_fields1
                        (temp___String_Literal_182 Tuple0) (of_rep3 8)))
                        (mk___rep1
                        (mk___split_fields1
                        (temp___String_Literal_183 Tuple0) (of_rep3 12))))))

(define-fun dynamic_invariant25 ((temp___expr_1133 Int)
  (temp___is_init_1130 Bool) (temp___skip_constant_1131 Bool)
  (temp___do_toplevel_1132 Bool)) Bool (=>
                                       (or (= temp___is_init_1130 true)
                                       (<= 1 5)) (in_range25
                                       temp___expr_1133)))

(declare-const configfile us_rep)

(declare-const localtext (Array Int character))

(declare-const localvalue Int)

(declare-const o classtexti)

(declare-const o1 (Array Int character))

(declare-const o2 classtexti)

(declare-const o3 classtexti)

(declare-const o4 (Array Int character))

(declare-const o5 classtexti)

(declare-const o6 classtexti)

(declare-const o7 (Array Int character))

(declare-const o8 classtexti)

(declare-const o9 classtexti)

(declare-const o10 (Array Int character))

(declare-const o11 classtexti)

(declare-const o12 classtexti)

(declare-const o13 (Array Int character))

(declare-const o14 classtexti)

(declare-const o15 classtexti)

(declare-const o16 (Array Int character))

(declare-const o17 classtexti)

(declare-const o18 (Array Int character))

(declare-const o19 classtexti)

(declare-const o20 (Array Int character))

(declare-const o21 classtexti)

(declare-const o22 us_rep1)

(declare-const o23 us_rep1)

(declare-const o24 us_rep1)

(declare-const o25 us_rep1)

(declare-const temp___1163 (Array Int us_rep1))

(declare-const o26 accesstexti)

(declare-const o27 us_split_fields2)

(declare-const o28 accesstexti)

(declare-const o29 us_split_fields2)

(declare-const o30 us_rep2)

(declare-const o31 us_rep2)

(declare-const temp___1164 (Array Int us_rep2))

(declare-const result Bool)

(declare-const success Bool)

(declare-const configfile1 us_rep)

(declare-const success1 Bool)

(declare-const configfile2 us_rep)

(declare-const result1 map__ref)

(declare-const localtext1 (Array Int character))

(declare-const result2 int__ref)

(declare-const localvalue1 Int)

;; H
  (assert (= (temp___String_Literal_149 Tuple0) alarmsilenttitle))

;; H
  (assert (= (temp___String_Literal_150 Tuple0) latchunlocktitle))

;; H
  (assert (= (temp___String_Literal_151 Tuple0) tokenremovaltitle))

;; H
  (assert (= (temp___String_Literal_152 Tuple0) fingerwaittitle))

;; H
  (assert (= (temp___String_Literal_153 Tuple0) clearancetitle))

;; H
  (assert (= (temp___String_Literal_154 Tuple0) workingstarttitle))

;; H
  (assert (= (temp___String_Literal_155 Tuple0) workingendtitle))

;; H
  (assert (= (temp___String_Literal_156 Tuple0) maxauthdurationtitle))

;; H
  (assert (= (temp___String_Literal_157 Tuple0) accesspolicytitle))

;; H
  (assert (= (temp___String_Literal_158 Tuple0) minentryclasstitle))

;; H
  (assert (= (temp___String_Literal_159 Tuple0) minpreservedlogsizetitle))

;; H
  (assert (= (temp___String_Literal_160 Tuple0) alarmthresholdtitle))

;; H
  (assert (= (temp___String_Literal_161 Tuple0) systemmaxfartitle))

;; H
  (assert (= (to_rep2 o15) 9))

;; H
  (assert (= (temp___String_Literal_176 Tuple0) o16))

;; H
  (assert (= o15 o17))

;; H
  (assert (= o18 o16))

;; H
  (assert (= o19 o17))

;; H
  (assert (= (to_rep2 o12) 6))

;; H
  (assert (= (temp___String_Literal_175 Tuple0) o13))

;; H
  (assert (= o12 o14))

;; H
  (assert (= o20 o13))

;; H
  (assert (= o21 o14))

;; H
  (assert (= (to_rep2 o9) 12))

;; H
  (assert (= (temp___String_Literal_174 Tuple0) o10))

;; H
  (assert (= o9 o11))

;; H
  (assert (= o22 (mk___rep (mk___split_fields o10 o11))))

;; H
  (assert (= (to_rep2 o6) 10))

;; H
  (assert (= (temp___String_Literal_173 Tuple0) o7))

;; H
  (assert (= o6 o8))

;; H
  (assert (= o23 (mk___rep (mk___split_fields o7 o8))))

;; H
  (assert (= (to_rep2 o3) 12))

;; H
  (assert (= (temp___String_Literal_172 Tuple0) o4))

;; H
  (assert (= o3 o5))

;; H
  (assert (= o24 (mk___rep (mk___split_fields o4 o5))))

;; H
  (assert (= (to_rep2 o) 8))

;; H
  (assert (= (temp___String_Literal_171 Tuple0) o1))

;; H
  (assert (= o o2))

;; H
  (assert (= o25 (mk___rep (mk___split_fields o1 o2))))

;; H
  (assert
  (= temp___1163 (configdata__classstringlookup__aggregate_def o25 o24
                 o23 o22 (mk___rep (mk___split_fields o20 o21))
                 (mk___rep (mk___split_fields o18 o19)))))

;; H
  (assert (= temp___1163 classstringlookup))

;; H
  (assert (= (to_rep3 o28) 12))

;; H
  (assert
  (= o29 (mk___split_fields1 (temp___String_Literal_183 Tuple0) o28)))

;; H
  (assert (= o30 (mk___rep1 o29)))

;; H
  (assert (= (to_rep3 o26) 8))

;; H
  (assert
  (= o27 (mk___split_fields1 (temp___String_Literal_182 Tuple0) o26)))

;; H
  (assert (= o31 (mk___rep1 o27)))

;; H
  (assert
  (= temp___1164 (configdata__accessstringlookup__aggregate_def o31 o30)))

;; H
  (assert (= temp___1164 accessstringlookup))

;; H
  (assert (in_range8 thelatchunlockduration))

;; H
  (assert (in_range8 thealarmsilentduration))

;; H
  (assert (in_range8 thefingerwaitduration))

;; H
  (assert (in_range8 thetokenremovalduration))

;; H
  (assert (in_range5 theenclaveclearance))

;; H
  (assert (in_range4 theworkinghoursstart))

;; H
  (assert (in_range4 theworkinghoursend))

;; H
  (assert (in_range4 themaxauthduration))

;; H
  (assert (in_range9 theaccesspolicy))

;; H
  (assert (in_range5 theminentryclass))

;; H
  (assert (in_range6 theminpreservedlogsize))

;; H
  (assert (in_range6 thealarmthresholdsize))

;; H
  (assert (in_range7 thesystemmaxfar))

;; H
  (assert (= result (exists__ configfile)))

;; H
  (assert (=> (not (= result true)) (= configfile1 configfile2)))

;; H
  (assert (=> (not (= result true)) (= success success1)))

;; H
  (assert (= success true))

;; H
  (assert (= theworkinghoursstart c38b))

;; H
  (assert (in_range4 c38b))

;; H
  (assert (= result1 (mk_map__ref localtext)))

;; H
  (assert (= localtext1 (temp___String_Literal_1147 Tuple0)))

;; H
  (assert (=> (<= 0 864000) (in_range4 localvalue)))

;; H
  (assert (= result2 (mk_int__ref localvalue)))

;; H
  (assert (= localvalue1 (div1 c38b 36000)))

(assert
;; WP_parameter_def
 ;; File "configdata.adb", line 1359, characters 0-0
  (not (in_range3 (+ 48 (div1 localvalue1 10)))))
(check-sat)
(exit)
