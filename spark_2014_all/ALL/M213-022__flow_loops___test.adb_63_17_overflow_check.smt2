;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun div1 (Int Int) Int)

(declare-fun mod1 (Int Int) Int)

;; Div_mod
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))

;; Mod_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (and (< (- (abs y)) (mod1 x y)) (< (mod1 x y) (abs y))))))

;; Div_sign_pos
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))

;; Div_sign_neg
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))

;; Mod_sign_pos
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))

;; Mod_sign_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))

;; Rounds_toward_zero
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (<= (abs (* (div1 x y) y)) (abs x)))))

;; Div_1
  (assert (forall ((x Int)) (= (div1 x 1) x)))

;; Mod_1
  (assert (forall ((x Int)) (= (mod1 x 1) 0)))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))

;; Mod_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1
                                                            (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)) )))

(define-fun mod2 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-const b Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const p Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const c Int)

(declare-const d Int)

(declare-const q Int)

(declare-const r Int)

(declare-const w Int)

(declare-const x Int)

(declare-const y Int)

(declare-const temp___159 Int)

(declare-const temp___158 Int)

(declare-const temp___157 Int)

(declare-const temp___156 Int)

(declare-const temp___155 Int)

(declare-const temp___154 Int)

(declare-const temp___153 Int)

(declare-const o Int)

(declare-const o1 Int)

(declare-const o2 Int)

(declare-const o3 Int)

(declare-const q1 Int)

(declare-const r1 Int)

(declare-const w1 Int)

(declare-const result Int)

(declare-const c1 Int)

(declare-const result1 Int)

(declare-const d1 Int)

(declare-const result2 Int)

(declare-const x1 Int)

(declare-const result3 Int)

(declare-const y1 Int)

(declare-const c2 Int)

(declare-const d2 Int)

(declare-const q2 Int)

(declare-const r2 Int)

(declare-const w2 Int)

(declare-const x2 Int)

(declare-const y2 Int)

(declare-const result4 Int)

(declare-const q3 Int)

(declare-const result5 Int)

(declare-const r3 Int)

(declare-const result6 Int)

(declare-const w3 Int)

(declare-const result7 Int)

(declare-const c3 Int)

(declare-const result8 Int)

(declare-const d3 Int)

(declare-const result9 Int)

(declare-const x3 Int)

(declare-const result10 Int)

(declare-const y3 Int)

(declare-const c4 int__ref)

(declare-const d4 int__ref)

(declare-const q4 int__ref)

(declare-const r4 int__ref)

(declare-const w4 int__ref)

(declare-const x4 int__ref)

(declare-const y4 int__ref)

(declare-const c5 Int)

(declare-const d5 Int)

(declare-const q5 Int)

(declare-const r5 Int)

(declare-const w5 Int)

(declare-const x5 Int)

(declare-const y5 Int)

(declare-const c6 int__ref)

(declare-const d6 int__ref)

(declare-const q6 int__ref)

(declare-const r6 int__ref)

(declare-const w6 int__ref)

(declare-const x6 int__ref)

(declare-const y6 int__ref)

(declare-const c7 Int)

(declare-const d7 Int)

(declare-const q7 Int)

(declare-const r7 Int)

(declare-const w7 Int)

(declare-const x7 Int)

(declare-const y7 Int)

;; H
  (assert (in_range1 b))

;; H
  (assert (in_range1 p))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 c)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 d)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 q)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 r)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 w)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 x)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 y)))

;; H
  (assert (= result c))

;; H
  (assert (= c1 p))

;; H
  (assert (= result1 d))

;; H
  (assert (= d1 b))

;; H
  (assert (= result2 x))

;; H
  (assert (= x1 0))

;; H
  (assert (= result3 y))

;; H
  (assert (= y1 1))

;; H
  (assert (=> (not (= d1 1)) (= temp___159 w)))

;; H
  (assert (=> (not (= d1 1)) (= temp___158 r)))

;; H
  (assert (=> (not (= d1 1)) (= temp___157 q)))

;; H
  (assert (=> (not (= d1 1)) (= temp___156 d1)))

;; H
  (assert (=> (not (= d1 1)) (= temp___155 c1)))

;; H
  (assert (=> (not (= d1 1)) (= temp___154 y1)))

;; H
  (assert (=> (not (= d1 1)) (= temp___153 x1)))

;; H
  (assert
  (=> (not (= d1 1))
  (and
  (and
  (and
  (and
  (and
  (and
  (and (=> (<= (- 2147483648) 2147483647) (in_range1 x2))
  (=> (<= (- 2147483648) 2147483647) (in_range1 y2)))
  (=> (<= (- 2147483648) 2147483647) (in_range1 c2)))
  (=> (<= (- 2147483648) 2147483647) (in_range1 d2)))
  (=> (<= (- 2147483648) 2147483647) (in_range1 q2)))
  (=> (<= (- 2147483648) 2147483647) (in_range1 r2)))
  (=> (<= (- 2147483648) 2147483647) (in_range1 w2))) (not (= d2 1)))))

;; H
  (assert
  (=> (not (= d1 1)) (and (= o (div1 c2 d2)) (in_range1 (div1 c2 d2)))))

;; H
  (assert (=> (not (= d1 1)) (= q2 result4)))

;; H
  (assert (=> (not (= d1 1)) (= q3 o)))

;; H
  (assert (=> (not (= d1 1)) (= r2 result5)))

;; H
  (assert (=> (not (= d1 1)) (= r3 (mod2 c2 d2))))

;; H
  (assert (=> (not (= d1 1)) (and (= o1 (* q3 y2)) (in_range1 (* q3 y2)))))

;; H
  (assert (=> (not (= d1 1)) (= o2 (- x2 o1))))

;; H
  (assert (=> (not (= d1 1)) (and (= o3 o2) (in_range1 o2))))

;; H
  (assert (=> (not (= d1 1)) (= result6 w2)))

;; H
  (assert (=> (not (= d1 1)) (= w3 o3)))

;; H
  (assert (=> (not (= d1 1)) (= result7 c2)))

;; H
  (assert (=> (not (= d1 1)) (= c3 d2)))

;; H
  (assert (=> (not (= d1 1)) (= result8 d2)))

;; H
  (assert (=> (not (= d1 1)) (= d3 r3)))

;; H
  (assert (=> (not (= d1 1)) (= result9 x2)))

;; H
  (assert (=> (not (= d1 1)) (= x3 y2)))

;; H
  (assert (=> (not (= d1 1)) (= result10 y2)))

;; H
  (assert (=> (not (= d1 1)) (= y3 w3)))

;; H
  (assert (=> (not (= d1 1)) (= d3 1)))

;; H
  (assert (=> (not (= d1 1)) (= y4 (mk_int__ref y3))))

;; H
  (assert (=> (not (= d1 1)) (= x4 (mk_int__ref x3))))

;; H
  (assert (=> (not (= d1 1)) (= w4 (mk_int__ref w3))))

;; H
  (assert (=> (not (= d1 1)) (= r4 (mk_int__ref r3))))

;; H
  (assert (=> (not (= d1 1)) (= q4 (mk_int__ref q3))))

;; H
  (assert (=> (not (= d1 1)) (= d4 (mk_int__ref d3))))

;; H
  (assert (=> (not (= d1 1)) (= c4 (mk_int__ref c3))))

;; H
  (assert (=> (not (= d1 1)) (= y5 y3)))

;; H
  (assert (=> (not (= d1 1)) (= x5 x3)))

;; H
  (assert (=> (not (= d1 1)) (= w5 w3)))

;; H
  (assert (=> (not (= d1 1)) (= r5 r3)))

;; H
  (assert (=> (not (= d1 1)) (= q5 q3)))

;; H
  (assert (=> (not (= d1 1)) (= d5 d3)))

;; H
  (assert (=> (not (= d1 1)) (= c5 c3)))

;; H
  (assert (=> (not (= d1 1)) (= y6 y4)))

;; H
  (assert (=> (not (= d1 1)) (= x6 x4)))

;; H
  (assert (=> (not (= d1 1)) (= w6 w4)))

;; H
  (assert (=> (not (= d1 1)) (= r6 r4)))

;; H
  (assert (=> (not (= d1 1)) (= q6 q4)))

;; H
  (assert (=> (not (= d1 1)) (= d6 d4)))

;; H
  (assert (=> (not (= d1 1)) (= c6 c4)))

;; H
  (assert (=> (not (= d1 1)) (= y7 y5)))

;; H
  (assert (=> (not (= d1 1)) (= x7 x5)))

;; H
  (assert (=> (not (= d1 1)) (= w7 w5)))

;; H
  (assert (=> (not (= d1 1)) (= r7 r5)))

;; H
  (assert (=> (not (= d1 1)) (= q7 q5)))

;; H
  (assert (=> (not (= d1 1)) (= d7 d5)))

;; H
  (assert (=> (not (= d1 1)) (= c7 c5)))

;; H
  (assert (=> (not (not (= d1 1))) (= y6 (mk_int__ref y1))))

;; H
  (assert (=> (not (not (= d1 1))) (= x6 (mk_int__ref x1))))

;; H
  (assert (=> (not (not (= d1 1))) (= w6 (mk_int__ref w))))

;; H
  (assert (=> (not (not (= d1 1))) (= r6 (mk_int__ref r))))

;; H
  (assert (=> (not (not (= d1 1))) (= q6 (mk_int__ref q))))

;; H
  (assert (=> (not (not (= d1 1))) (= d6 (mk_int__ref d1))))

;; H
  (assert (=> (not (not (= d1 1))) (= c6 (mk_int__ref c1))))

;; H
  (assert (=> (not (not (= d1 1))) (= y7 y1)))

;; H
  (assert (=> (not (not (= d1 1))) (= x7 x1)))

;; H
  (assert (=> (not (not (= d1 1))) (= w7 w1)))

;; H
  (assert (=> (not (not (= d1 1))) (= r7 r1)))

;; H
  (assert (=> (not (not (= d1 1))) (= q7 q1)))

;; H
  (assert (=> (not (not (= d1 1))) (= d7 d1)))

;; H
  (assert (=> (not (not (= d1 1))) (= c7 c1)))

;; H
  (assert (< (int__content y6) 0))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (in_range1 (+ (int__content y6) p))))
(check-sat)
(exit)
