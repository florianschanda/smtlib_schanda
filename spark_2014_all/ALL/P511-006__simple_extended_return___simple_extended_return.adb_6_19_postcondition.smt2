;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const x Int)

(declare-const y Int)

(declare-const simple_extended_return__simple_extended_r1__result Int)

(declare-const x1 Int)

(declare-const y1 Int)

(declare-const simple_extended_return__simple_extended_r1__result1 Int)

(declare-const result Int)

(declare-const x2 Int)

(declare-const result1 Int)

(declare-const simple_extended_return__simple_extended_r1__result2 Int)

(declare-const result2 Int)

(declare-const y2 Int)

(declare-const result3 Int)

(declare-const simple_extended_return__simple_extended_r1__result3 Int)

(declare-const y3 Int)

(declare-const simple_extended_return__simple_extended_r1__result4 Int)

(declare-const y4 Int)

(declare-const simple_extended_return__simple_extended_r1__result5 Int)

(declare-const x3 Int)

(declare-const y5 Int)

(declare-const simple_extended_return__simple_extended_r1__result6 Int)

(declare-const x4 Int)

(declare-const y6 Int)

(declare-const simple_extended_return__simple_extended_r1__result7 Int)

(declare-const x5 Int)

(declare-const y7 Int)

(declare-const simple_extended_return__simple_extended_r1__result8 Int)

(declare-const x6 Int)

(declare-const y8 Int)

(declare-const simple_extended_return__simple_extended_r1__result9 Int)

(define-fun simple_extended_return__simple_extended_r1__result10 () int__ref
  (mk_int__ref simple_extended_return__simple_extended_r1__result6))

(define-fun y9 () int__ref (mk_int__ref y5))

(declare-const result4 Int)

;; H
  (assert
  (or
  (and
  (and
  (and
  (= simple_extended_return__simple_extended_r1__result2 simple_extended_return__simple_extended_r1__result6)
  (and (= y9 (mk_int__ref y)) (= x2 x3)))
  (and
  (= simple_extended_return__simple_extended_r1__result7 simple_extended_return__simple_extended_r1__result2)
  (and (= y6 y1) (= x4 x2))))
  (and (= (of_int 1) true)
  (and (and (and (= result x) (= x2 1)) (in_range1 x2))
  (and (= result1 simple_extended_return__simple_extended_r1__result)
  (= simple_extended_return__simple_extended_r1__result2 x2)))))
  (and
  (and (not (= (of_int 1) true))
  (and
  (and
  (= simple_extended_return__simple_extended_r1__result2 simple_extended_return__simple_extended_r1__result)
  (= x2 x))
  (and
  (= simple_extended_return__simple_extended_r1__result2 simple_extended_return__simple_extended_r1__result1)
  (= x2 x1))))
  (and
  (and
  (and
  (= simple_extended_return__simple_extended_r1__result10 (mk_int__ref
                                                          simple_extended_return__simple_extended_r1__result4))
  (and (= y9 (mk_int__ref y3)) (= x2 x3)))
  (and
  (= simple_extended_return__simple_extended_r1__result7 simple_extended_return__simple_extended_r1__result5)
  (and (= y6 y4) (= x4 x2))))
  (and
  (and
  (and
  (= simple_extended_return__simple_extended_r1__result3 simple_extended_return__simple_extended_r1__result4)
  (= y2 y3))
  (and
  (= simple_extended_return__simple_extended_r1__result5 simple_extended_return__simple_extended_r1__result3)
  (= y4 y2)))
  (and (and (and (= result2 y) (= y2 3)) (in_range1 y2))
  (and (= result3 simple_extended_return__simple_extended_r1__result2)
  (= simple_extended_return__simple_extended_r1__result3 y2))))))))

;; H
  (assert
  (= (mk_int__ref simple_extended_return__simple_extended_r1__result8)
  simple_extended_return__simple_extended_r1__result10))

;; H
  (assert (= y7 y5))

;; H
  (assert (= x5 x3))

;; H
  (assert
  (= simple_extended_return__simple_extended_r1__result9 simple_extended_return__simple_extended_r1__result7))

;; H
  (assert (= y8 y6))

;; H
  (assert (= x6 x4))

;; H
  (assert (= result4 simple_extended_return__simple_extended_r1__result8))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (= simple_extended_return__simple_extended_r1__result8 1)))
(check-sat)
(exit)
