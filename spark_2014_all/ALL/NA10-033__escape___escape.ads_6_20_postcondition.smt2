;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(define-fun bool_eq1 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(define-fun bool_eq2 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-fun dummy2 () character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character 
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq3 ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq3 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq3 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq3 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq4 ((x us_t)
  (y us_t)) Bool (bool_eq3 (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(declare-sort natural 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (natural natural) Bool)

(declare-fun dummy4 () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range4
                                     temp___expr_33)))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant2 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(declare-fun s () us_t)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun len () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(define-fun bool_eq6 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (integer integer) Bool)

(declare-fun dummy5 () integer)

(declare-datatypes ()
((tTresultSP1__ref (mk_tTresultSP1__ref (tTresultSP1__content integer)))))
(define-fun tTresultSP1__ref___projection ((a tTresultSP1__ref)) integer 
  (tTresultSP1__content a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first2 (mk1 f l))) f)
     (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ()
((us_t1 (mk___t1 (elts1 (Array Int character))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))

(define-fun of_array1 ((a (Array Int character)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-fun value__size1 () Int)

(declare-fun object__size1 ((Array Int character)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int character)) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))

(define-fun bool_eq7 ((x us_t1)
  (y us_t1)) Bool (bool_eq3 (elts1 x) (to_rep1 (first2 (rt1 x)))
                  (to_rep1 (last2 (rt1 x))) (elts1 y)
                  (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))

(declare-fun user_eq6 (us_t1 us_t1) Bool)

(declare-fun dummy6 () us_t1)

(declare-datatypes ()
((tresultS__ref (mk_tresultS__ref (tresultS__content us_t1)))))
(define-fun tresultS__ref___projection ((a tresultS__ref)) us_t1 (tresultS__content
                                                                 a))

(define-fun dynamic_invariant3 ((temp___expr_148 us_t1)
  (temp___is_init_145 Bool) (temp___skip_constant_146 Bool)
  (temp___do_toplevel_147 Bool)) Bool (=>
                                      (not (= temp___skip_constant_146 true))
                                      (and (dynamic_property2 1 len
                                      (first3 temp___expr_148)
                                      (last3 temp___expr_148))
                                      (and (= (first3 temp___expr_148) 1)
                                      (= (last3 temp___expr_148) len)))))

(declare-fun result____first () integer)

(declare-fun result____last () integer)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(define-fun dynamic_invariant4 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(define-fun dynamic_invariant5 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun count_bs () Int)

(declare-fun i () Int)

(declare-fun result__ () (Array Int character))

(declare-fun ti () Int)

(declare-fun i1 () Int)

(declare-fun escape__backslash_escape__result () (Array Int character))

(declare-fun escape__backslash_escape__result1 () t)

(declare-fun temp___154 () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun escape__backslash_escape__B_2__len__assume () Int)

(declare-fun temp___160 () Int)

(declare-fun temp___158 () (Array Int character))

(declare-fun o4 () character)

(declare-fun o5 () Int)

(declare-fun o6 () (Array Int character))

(declare-fun o7 () Int)

(declare-fun o8 () character)

(declare-fun o9 () Int)

(declare-fun o10 () (Array Int character))

(declare-fun o11 () Int)

(declare-fun result__1 () (Array Int character))

(declare-fun result () Int)

(declare-fun count_bs1 () Int)

(declare-fun result1 () Int)

(declare-fun i2 () Int)

(declare-fun count_bs2 () Int)

(declare-fun i3 () Int)

(declare-fun result2 () Int)

(declare-fun count_bs3 () Int)

(declare-fun count_bs4 () Int)

(declare-fun i4 () Int)

(declare-fun count_bs5 () Int)

(declare-fun i5 () Int)

(declare-fun count_bs6 () Int)

(declare-fun i6 () Int)

(declare-fun count_bs7 () Int)

(declare-fun i7 () Int)

(declare-fun result3 () Int)

(declare-fun ti1 () Int)

(declare-fun result4 () Int)

(declare-fun i8 () Int)

(declare-fun result__2 () (Array Int character))

(declare-fun ti2 () Int)

(declare-fun i9 () Int)

(declare-fun result5 () (Array Int character))

(declare-fun result__3 () (Array Int character))

(declare-fun result6 () Int)

(declare-fun ti3 () Int)

(declare-fun result7 () (Array Int character))

(declare-fun result__4 () (Array Int character))

(declare-fun result8 () int__ref)

(declare-fun ti4 () Int)

(declare-fun result__5 () map__ref)

(declare-fun ti5 () int__ref)

(declare-fun result__6 () (Array Int character))

(declare-fun ti6 () Int)

(declare-fun result__7 () map__ref)

(declare-fun ti7 () int__ref)

(declare-fun i10 () int__ref)

(declare-fun result__8 () (Array Int character))

(declare-fun ti8 () Int)

(declare-fun i11 () Int)

(declare-fun result__9 () map__ref)

(declare-fun ti9 () int__ref)

(declare-fun i12 () int__ref)

(declare-fun result__10 () (Array Int character))

(declare-fun ti10 () Int)

(declare-fun i13 () Int)

(declare-fun result9 () string__ref)

(declare-fun escape__backslash_escape__result2 () us_t)

(declare-fun result__11 () map__ref)

(declare-fun ti11 () int__ref)

(declare-fun i14 () int__ref)

(declare-fun escape__backslash_escape__result3 () string__ref)

(declare-fun result__12 () (Array Int character))

(declare-fun ti12 () Int)

(declare-fun i15 () Int)

(declare-fun escape__backslash_escape__result4 () us_t)

(declare-fun count_bs8 () int__ref)

(declare-fun i16 () int__ref)

(declare-fun result__13 () map__ref)

(declare-fun ti13 () int__ref)

(declare-fun i17 () int__ref)

(declare-fun escape__backslash_escape__result5 () string__ref)

(declare-fun count_bs9 () Int)

(declare-fun i18 () Int)

(declare-fun result__14 () (Array Int character))

(declare-fun ti14 () Int)

(declare-fun i19 () Int)

(declare-fun escape__backslash_escape__result6 () us_t)

(define-fun i20 () int__ref (mk_int__ref i6))

(define-fun count_bs10 () int__ref (mk_int__ref count_bs6))

(declare-fun result10 () (Array Int character))

(declare-fun result11 () t)

;; H
  (assert (dynamic_invariant2 s true false true))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref count_bs)))

;; H
  (assert (= count_bs1 0))

;; H
  (assert (in_range4 count_bs1))

;; H
  (assert (= (mk_int__ref result1) (mk_int__ref i)))

;; H
  (assert (= i2 (to_rep1 (first (rt s)))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (= temp___154 count_bs1)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (and (=> (<= 0 2147483647) (in_range4 count_bs2))
  (and (<= (to_rep1 (first (rt s))) i3) (<= i3 (to_rep1 (last (rt s))))))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i3)) 92)
  (and (= o (+ count_bs2 1)) (in_range1 (+ count_bs2 1))))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i3)) 92) (= count_bs2 result2))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i3)) 92) (= count_bs3 o))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (=> (not (= (to_rep (select (elts s) i3)) 92)) (= count_bs3 count_bs2))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (= i3 (to_rep1 (last (rt s))))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (= i3 i4)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (= count_bs3 count_bs4)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (= i5 i3)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (= count_bs5 count_bs3)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (= i20 (mk_int__ref i4))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (= count_bs10 (mk_int__ref count_bs4))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (= i7 i5)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s)))))
  (= count_bs7 count_bs5)))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s))))))
  (= i2 i6)))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s))))))
  (= count_bs1 count_bs6)))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s))))))
  (= i7 i2)))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s))) i2) (<= i2 (to_rep1 (last (rt s))))))
  (= count_bs7 count_bs1)))

;; H
  (assert
  (= escape__backslash_escape__result3 (mk_string__ref
                                       escape__backslash_escape__result2)))

;; H
  (assert (= i14 i12))

;; H
  (assert (= ti11 ti9))

;; H
  (assert (= result__11 result__9))

;; H
  (assert
  (= escape__backslash_escape__result4 escape__backslash_escape__result2))

;; H
  (assert (= i15 i13))

;; H
  (assert (= ti12 ti10))

;; H
  (assert (= result__12 result__10))

;; H
  (assert (and (= o1 (length s)) (in_range1 (length s))))

;; H
  (assert (= o2 (+ o1 count_bs6)))

;; H
  (assert (and (= o3 o2) (in_range1 o2)))

;; H
  (assert
  (and (= escape__backslash_escape__B_2__len__assume o3) (in_range4 o3)))

;; H
  (assert (= escape__backslash_escape__B_2__len__assume len))

;; H
  (assert (in_range4 len))

;; H
  (assert
  (and (dynamic_property2 1 len (to_rep1 result____first)
  (to_rep1 result____last))
  (and (= (to_rep1 result____first) 1) (= (to_rep1 result____last) len))))

;; H
  (assert (= (mk_int__ref result3) (mk_int__ref ti)))

;; H
  (assert (= ti1 1))

;; H
  (assert (in_range2 ti1))

;; H
  (assert (= (mk_int__ref result4) (mk_int__ref i1)))

;; H
  (assert (= i8 (to_rep1 (first (rt s)))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= temp___160 ti1)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= temp___158 result__)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (and (=> (<= 1 2147483647) (in_range2 ti2))
  (and (<= (to_rep1 (first (rt s))) i9) (<= i9 (to_rep1 (last (rt s))))))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= (to_rep o4) (to_rep (select (elts s) i9)))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (and (<= (to_rep1 result____first) ti2) (<= ti2 (to_rep1 result____last)))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= o5 ti2)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= o6 (store result__2 o5 o4))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= result__2 result5)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= result__3 o6)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (and (= o7 (+ ti2 1)) (in_range1 (+ ti2 1)))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= ti2 result6)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= ti3 o7)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92) (= (to_rep o8) 92))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92)
  (and (<= (to_rep1 result____first) ti3) (<= ti3 (to_rep1 result____last))))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92) (= o9 ti3))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92) (= o10 (store result__3 o9 o8)))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92) (= result__3 result7))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92) (= result__4 o10))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92)
  (and (= o11 (+ ti3 1)) (in_range1 (+ ti3 1))))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92) (= result8 (mk_int__ref ti3)))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92) (= ti4 o11))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92) (= ti5 (mk_int__ref ti4)))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92)
  (= result__5 (mk_map__ref result__4)))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92) (= ti6 ti4))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (= (to_rep (select (elts s) i9)) 92) (= result__6 result__4))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (not (= (to_rep (select (elts s) i9)) 92)) (= ti5 (mk_int__ref ti3)))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (not (= (to_rep (select (elts s) i9)) 92))
  (= result__5 (mk_map__ref result__3)))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (not (= (to_rep (select (elts s) i9)) 92)) (= ti6 ti3))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (=> (not (= (to_rep (select (elts s) i9)) 92)) (= result__6 result__3))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= i9 (to_rep1 (last (rt s))))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= i10 (mk_int__ref i9))))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= ti7 ti5)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= result__7 result__5)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= i11 i9)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= ti8 ti6)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= result__8 result__6)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= i12 i10)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= ti9 ti7)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= result__9 result__7)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= i13 i11)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= ti10 ti8)))

;; H
  (assert
  (=> (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s)))))
  (= result__10 result__8)))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s))))))
  (= i12 (mk_int__ref i8))))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s))))))
  (= ti9 (mk_int__ref ti1))))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s))))))
  (= result__9 (mk_map__ref result__))))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s))))))
  (= i13 i8)))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s))))))
  (= ti10 ti1)))

;; H
  (assert
  (=>
  (not
  (and (<= (to_rep1 (first (rt s))) i8) (<= i8 (to_rep1 (last (rt s))))))
  (= result__10 result__1)))

;; H
  (assert
  (= result9 (mk_string__ref
             (mk___t escape__backslash_escape__result
             escape__backslash_escape__result1))))

;; H
  (assert
  (= escape__backslash_escape__result2 (mk___t (map__content result__9)
                                       (mk (to_rep1 result____first)
                                       (to_rep1 result____last)))))

;; H
  (assert
  (= escape__backslash_escape__result5 escape__backslash_escape__result3))

;; H
  (assert (= i17 i14))

;; H
  (assert (= ti13 ti11))

;; H
  (assert (= result__13 result__11))

;; H
  (assert (= i16 i20))

;; H
  (assert (= count_bs8 count_bs10))

;; H
  (assert
  (= escape__backslash_escape__result6 escape__backslash_escape__result4))

;; H
  (assert (= i19 i15))

;; H
  (assert (= ti14 ti12))

;; H
  (assert (= result__14 result__12))

;; H
  (assert (= i18 i7))

;; H
  (assert (= count_bs9 count_bs7))

;; H
  (assert
  (= (mk___t result10 result11) (string__content
                                escape__backslash_escape__result5)))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not
  (<= (length s) (length (string__content escape__backslash_escape__result5)))))
(check-sat)
