;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-sort positive 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-fun dummy1 () positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range1
                                     temp___expr_39)))

(declare-fun id_public (Int) Int)

(declare-fun id_public__function_guard (Int Int) Bool)

;; id_public__post_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant x true true true) (dynamic_invariant
     (id_public x) true false true)) :pattern ((id_public x)) )))

(declare-sort natural 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (natural natural) Bool)

(declare-fun dummy2 () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant2 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range2
                                     temp___expr_33)))

(declare-fun id_private (Int) Int)

(declare-fun id_private__function_guard (Int Int) Bool)

;; id_private__post_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant x true true true) (dynamic_invariant
     (id_private x) true false true)) :pattern ((id_private x)) )))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun c5b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun c8b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun x () Int)

(declare-fun y () Int)

(declare-fun res () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun result () Int)

(declare-fun x1 () Int)

(declare-fun result1 () Int)

(declare-fun res1 () Int)

(declare-fun result2 () Int)

(declare-fun res2 () Int)

(declare-fun result3 () Int)

(declare-fun res3 () Int)

(declare-fun ident__incr_public__y () Int)

(declare-fun result4 () Int)

(declare-fun y1 () Int)

(declare-fun ident__incr_private__y () Int)

(declare-fun result5 () Int)

(declare-fun y2 () Int)

;; H
  (assert (= result x))

;; H
  (assert (= x1 10))

;; H
  (assert (in_range x1))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range y)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range res)))

;; H
  (assert (and (= o (id_public x1)) (in_range o)))

;; H
  (assert (= result1 res))

;; H
  (assert (= res1 o))

;; H
  (assert (= res1 x1))

;; H
  (assert (and (= o1 (id_private x1)) (in_range o1)))

;; H
  (assert (= result2 res1))

;; H
  (assert (= res2 o1))

;; H
  (assert (= res2 x1))

;; H
  (assert (= x1 c5b))

;; H
  (assert (in_range c5b))

;; H
  (assert (= result3 res2))

;; H
  (assert (= res3 c5b))

;; H
  (assert (= res3 x1))

;; H
  (assert (and (= o2 x1) (in_range1 x1)))

;; H
  (assert (in_range2 ident__incr_public__y))

;; H
  (assert (= result4 y))

;; H
  (assert (= y1 ident__incr_public__y))

;; H
  (assert (= y1 9))

;; H
  (assert (and (= o3 x1) (in_range1 x1)))

;; H
  (assert (in_range2 ident__incr_private__y))

;; H
  (assert (= result5 y1))

;; H
  (assert (= y2 ident__incr_private__y))

;; H
  (assert (= y2 9))

(assert
;; WP_parameter_def
 ;; File "ident.adb", line 23, characters 0-0
  (not (in_range1 x1)))
(check-sat)
(exit)
