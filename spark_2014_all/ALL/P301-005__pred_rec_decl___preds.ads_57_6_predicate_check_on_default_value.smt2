;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort int_ok 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (int_ok int_ok) Bool)

(declare-const dummy int_ok)

(declare-datatypes ((int_ok__ref 0))
(((mk_int_ok__ref (int_ok__content int_ok)))))
(define-fun int_ok__ref___projection ((a int_ok__ref)) int_ok (int_ok__content
                                                              a))

(define-fun dynamic_invariant ((temp___expr_136 Int)
  (temp___is_init_133 Bool) (temp___skip_constant_134 Bool)
  (temp___do_toplevel_135 Bool)) Bool (and
                                      (=>
                                      (or (= temp___is_init_133 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range temp___expr_136))
                                      (=> (= temp___do_toplevel_135 true)
                                      (=> (= temp___is_init_133 true)
                                      (or
                                      (and
                                      (<= (- 2147483648) temp___expr_136)
                                      (<= temp___expr_136 (- 1)))
                                      (and (<= 1 temp___expr_136)
                                      (<= temp___expr_136 2147483647)))))))

(define-fun dynamic_predicate ((temp___140 Int)) Bool (or
                                                      (and
                                                      (<= (- 2147483648) temp___140)
                                                      (<= temp___140 (- 1)))
                                                      (and (<= 1 temp___140)
                                                      (<= temp___140 2147483647))))

(declare-fun to_rep (int_ok) Int)

(declare-fun of_rep (Int) int_ok)

;; inversion_axiom
  (assert
  (forall ((x int_ok)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x int_ok)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-const i7s Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort tarr_okD1 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (tarr_okD1 tarr_okD1) Bool)

(declare-const dummy1 tarr_okD1)

(declare-datatypes ((tarr_okD1__ref 0))
(((mk_tarr_okD1__ref (tarr_okD1__content tarr_okD1)))))
(define-fun tarr_okD1__ref___projection ((a tarr_okD1__ref)) tarr_okD1
  (tarr_okD1__content a))

(declare-sort integer 0)

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-const dummy2 integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ((map__ref 0))
(((mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int
  Int) (Array Int integer))

;; concat_def
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (integer Int) (Array Int integer))

;; singleton_def
  (assert
  (forall ((v integer))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                                                  (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                         (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(define-fun dynamic_invariant1 ((temp___expr_211 (Array Int integer))
  (temp___is_init_208 Bool) (temp___skip_constant_209 Bool)
  (temp___do_toplevel_210 Bool)) Bool (=> (= temp___do_toplevel_210 true)
                                      (=> (= temp___is_init_208 true)
                                      (forall ((k Int))
                                      (=> (and (<= 1 k) (<= k 10))
                                      (not
                                      (= (to_rep1 (select temp___expr_211 k)) 0)))))))

(define-fun default_initial_assumption ((temp___expr_214 (Array Int integer))
  (temp___skip_top_level_215 Bool)) Bool (forall ((temp___216 Int))
                                         (=>
                                         (and (<= 1 temp___216)
                                         (<= temp___216 10))
                                         (= (to_rep1
                                            (select temp___expr_214 temp___216)) 1))))

(define-fun dynamic_predicate1 ((temp___217 (Array Int integer))) Bool
  (forall ((k Int))
  (=> (and (<= 1 k) (<= k 10)) (not (= (to_rep1 (select temp___217 k)) 0)))))

(declare-const i19s (Array Int integer))

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const dummy3 (Array Int integer))

(declare-const value__size Int)

(declare-fun object__size ((Array Int integer)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int integer)) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))

(declare-fun user_eq3 ((Array Int integer) (Array Int integer)) Bool)

(declare-datatypes ((us_split_fields 0))
(((mk___split_fields
  (rec__preds__rec_ok__i integer)(rec__preds__rec_ok__x int_ok)(rec__preds__rec_ok__a (Array Int integer))))))
(define-fun us_split_fields_I__projection ((a us_split_fields)) integer
  (rec__preds__rec_ok__i a))

(define-fun us_split_fields_X__projection ((a us_split_fields)) int_ok
  (rec__preds__rec_ok__x a))

(define-fun us_split_fields_A__projection ((a us_split_fields)) (Array Int integer)
  (rec__preds__rec_ok__a a))

(declare-datatypes ((us_split_fields__ref 0))
(((mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ((us_rep 0))
(((mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun bool_eq1 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep1
                           (rec__preds__rec_ok__i (us_split_fields1 a)))
                        (to_rep1
                        (rec__preds__rec_ok__i (us_split_fields1 b))))
                        (= (to_rep
                           (rec__preds__rec_ok__x (us_split_fields1 a)))
                        (to_rep (rec__preds__rec_ok__x (us_split_fields1 b)))))
                        (= (bool_eq
                           (rec__preds__rec_ok__a (us_split_fields1 a)) 1 10
                           (rec__preds__rec_ok__a (us_split_fields1 b)) 1 10) true))
                   true false))

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-const preds__rec_ok__i__first__bit Int)

(declare-const preds__rec_ok__i__last__bit Int)

(declare-const preds__rec_ok__i__position Int)

;; preds__rec_ok__i__first__bit_axiom
  (assert (<= 0 preds__rec_ok__i__first__bit))

;; preds__rec_ok__i__last__bit_axiom
  (assert (< preds__rec_ok__i__first__bit preds__rec_ok__i__last__bit))

;; preds__rec_ok__i__position_axiom
  (assert (<= 0 preds__rec_ok__i__position))

(declare-const preds__rec_ok__x__first__bit Int)

(declare-const preds__rec_ok__x__last__bit Int)

(declare-const preds__rec_ok__x__position Int)

;; preds__rec_ok__x__first__bit_axiom
  (assert (<= 0 preds__rec_ok__x__first__bit))

;; preds__rec_ok__x__last__bit_axiom
  (assert (< preds__rec_ok__x__first__bit preds__rec_ok__x__last__bit))

;; preds__rec_ok__x__position_axiom
  (assert (<= 0 preds__rec_ok__x__position))

(declare-const preds__rec_ok__a__first__bit Int)

(declare-const preds__rec_ok__a__last__bit Int)

(declare-const preds__rec_ok__a__position Int)

;; preds__rec_ok__a__first__bit_axiom
  (assert (<= 0 preds__rec_ok__a__first__bit))

;; preds__rec_ok__a__last__bit_axiom
  (assert (< preds__rec_ok__a__first__bit preds__rec_ok__a__last__bit))

;; preds__rec_ok__a__position_axiom
  (assert (<= 0 preds__rec_ok__a__position))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes ((rec_ok__ref 0))
(((mk_rec_ok__ref (rec_ok__content us_rep)))))
(define-fun rec_ok__ref___projection ((a rec_ok__ref)) us_rep (rec_ok__content
                                                              a))

(define-fun dynamic_invariant2 ((temp___expr_239 us_rep)
  (temp___is_init_236 Bool) (temp___skip_constant_237 Bool)
  (temp___do_toplevel_238 Bool)) Bool (and
                                      (=> (= temp___do_toplevel_238 true)
                                      (=> (= temp___is_init_236 true)
                                      (and
                                      (and
                                      (not
                                      (= (to_rep1
                                         (rec__preds__rec_ok__i
                                         (us_split_fields1 temp___expr_239))) 0))
                                      (not
                                      (= (to_rep
                                         (rec__preds__rec_ok__x
                                         (us_split_fields1 temp___expr_239))) 0)))
                                      (forall ((k Int))
                                      (=> (and (<= 1 k) (<= k 10))
                                      (not
                                      (= (to_rep1
                                         (let ((temp___241 (rec__preds__rec_ok__a
                                                           (us_split_fields1
                                                           temp___expr_239))))
                                         (select temp___241 k))) 0)))))))
                                      (and
                                      (=> (= temp___is_init_236 true)
                                      (let ((temp___243 (to_rep
                                                        (rec__preds__rec_ok__x
                                                        (us_split_fields1
                                                        temp___expr_239)))))
                                      (or
                                      (and (<= (- 2147483648) temp___243)
                                      (<= temp___243 (- 1)))
                                      (and (<= 1 temp___243)
                                      (<= temp___243 2147483647)))))
                                      (=> (= temp___is_init_236 true)
                                      (forall ((k Int))
                                      (=> (and (<= 1 k) (<= k 10))
                                      (not
                                      (= (to_rep1
                                         (select (rec__preds__rec_ok__a
                                                 (us_split_fields1
                                                 temp___expr_239)) k)) 0))))))))

(define-fun default_initial_assumption1 ((temp___expr_246 us_rep)
  (temp___skip_top_level_247 Bool)) Bool (and
                                         (and
                                         (= (to_rep1
                                            (rec__preds__rec_ok__i
                                            (us_split_fields1
                                            temp___expr_246))) 1)
                                         (= (to_rep
                                            (rec__preds__rec_ok__x
                                            (us_split_fields1
                                            temp___expr_246))) 1))
                                         (forall ((temp___250 Int))
                                         (=>
                                         (and (<= 1 temp___250)
                                         (<= temp___250 10))
                                         (= (to_rep1
                                            (select (rec__preds__rec_ok__a
                                                    (us_split_fields1
                                                    temp___expr_246)) temp___250)) 1)))))

(define-fun dynamic_predicate2 ((temp___251 us_rep)) Bool (and
                                                          (and
                                                          (not
                                                          (= (to_rep1
                                                             (rec__preds__rec_ok__i
                                                             (us_split_fields1
                                                             temp___251))) 0))
                                                          (not
                                                          (= (to_rep
                                                             (rec__preds__rec_ok__x
                                                             (us_split_fields1
                                                             temp___251))) 0)))
                                                          (forall ((k Int))
                                                          (=>
                                                          (and (<= 1 k)
                                                          (<= k 10))
                                                          (not
                                                          (= (to_rep1
                                                             (let ((temp___253
                                                             (rec__preds__rec_ok__a
                                                             (us_split_fields1
                                                             temp___251))))
                                                             (select temp___253 k))) 0))))))

(declare-const i31s us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(define-fun dynamic_invariant3 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range2 temp___expr_15)))

(declare-const x__split_fields integer)

(declare-const x__split_fields1 int_ok)

(declare-const x__split_fields2 (Array Int integer))

(declare-const temp___363 integer)

(declare-const temp___3631 int_ok)

(declare-const temp___3632 (Array Int integer))

(define-fun temp___3633 () us_rep (mk___rep
                                  (mk___split_fields temp___363 temp___3631
                                  temp___3632)))

;; H
  (assert (dynamic_invariant i7s true false true))

;; H
  (assert (dynamic_invariant1 i19s true false true))

;; H
  (assert (dynamic_invariant2 i31s true false true))

;; H
  (assert (dynamic_invariant2
  (mk___rep
  (mk___split_fields x__split_fields x__split_fields1 x__split_fields2))
  false false true))

;; H
  (assert (default_initial_assumption1 temp___3633 false))

(assert
;; WP_parameter_def
 ;; File "preds.ads", line 59, characters 0-0
  (not (dynamic_predicate2 temp___3633)))
(check-sat)
(exit)
