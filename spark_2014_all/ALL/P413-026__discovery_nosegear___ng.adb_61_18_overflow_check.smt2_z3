;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.6)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
(set-option :smt.mbqi false)
(set-option :smt.macro-finder true)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun div1 (Int Int) Int)

(declare-fun mod1 (Int Int) Int)

;; Div_mod
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))

;; Mod_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (and (< (- (abs y)) (mod1 x y)) (< (mod1 x y) (abs y))))))

;; Div_sign_pos
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))

;; Div_sign_neg
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))

;; Mod_sign_pos
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))

;; Mod_sign_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))

;; Rounds_toward_zero
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (<= (abs (* (div1 x y) y)) (abs x)))))

;; Div_1
  (assert (forall ((x Int)) (= (div1 x 1) x)))

;; Mod_1
  (assert (forall ((x Int)) (= (mod1 x 1) 0)))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))

;; Mod_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1
                                                            (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)) )))

(define-fun mod2 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(declare-fun nth ((_ BitVec 16) Int) Bool)

(declare-fun lsr ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 16)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

(declare-fun nth_bv ((_ BitVec 16) (_ BitVec 16)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

(define-fun eq_sub ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes ((t__ref 0)) (((mk_t__ref (t__content (_ BitVec 16))))))
(declare-fun power ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(define-fun to_int2 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort mod_time 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 16))

(declare-fun user_eq1 (mod_time mod_time) Bool)

(declare-const dummy1 mod_time)

(declare-datatypes ((mod_time__ref 0))
(((mk_mod_time__ref (mod_time__content mod_time)))))
(define-fun mod_time__ref___projection ((a mod_time__ref)) mod_time (mod_time__content
                                                                    a))

(define-fun dynamic_invariant ((temp___expr_201 (_ BitVec 16))
  (temp___is_init_198 Bool) (temp___skip_constant_199 Bool)
  (temp___do_toplevel_200 Bool)) Bool true)

(declare-sort mod_count 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 16))

(declare-fun user_eq2 (mod_count mod_count) Bool)

(declare-const dummy2 mod_count)

(declare-datatypes ((mod_count__ref 0))
(((mk_mod_count__ref (mod_count__content mod_count)))))
(define-fun mod_count__ref___projection ((a mod_count__ref)) mod_count
  (mod_count__content a))

(define-fun dynamic_invariant1 ((temp___expr_213 (_ BitVec 16))
  (temp___is_init_210 Bool) (temp___skip_constant_211 Bool)
  (temp___do_toplevel_212 Bool)) Bool true)

(declare-sort time 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (time time) Bool)

(declare-const dummy3 time)

(declare-datatypes ((time__ref 0)) (((mk_time__ref (time__content time)))))
(define-fun time__ref___projection ((a time__ref)) time (time__content a))

(define-fun dynamic_invariant2 ((temp___expr_219 Int)
  (temp___is_init_216 Bool) (temp___skip_constant_217 Bool)
  (temp___do_toplevel_218 Bool)) Bool (=>
                                      (or (= temp___is_init_216 true)
                                      (<= 0 2147483647)) (in_range2
                                      temp___expr_219)))

(declare-sort distance 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq4 (distance distance) Bool)

(declare-const dummy4 distance)

(declare-datatypes ((distance__ref 0))
(((mk_distance__ref (distance__content distance)))))
(define-fun distance__ref___projection ((a distance__ref)) distance (distance__content
                                                                    a))

(define-fun dynamic_invariant3 ((temp___expr_225 Int)
  (temp___is_init_222 Bool) (temp___skip_constant_223 Bool)
  (temp___do_toplevel_224 Bool)) Bool (=>
                                      (or (= temp___is_init_222 true)
                                      (<= 0 2147483647)) (in_range3
                                      temp___expr_225)))

(declare-sort velocity 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq5 (velocity velocity) Bool)

(declare-const dummy5 velocity)

(declare-datatypes ((velocity__ref 0))
(((mk_velocity__ref (velocity__content velocity)))))
(define-fun velocity__ref___projection ((a velocity__ref)) velocity (velocity__content
                                                                    a))

(define-fun dynamic_invariant4 ((temp___expr_237 Int)
  (temp___is_init_234 Bool) (temp___skip_constant_235 Bool)
  (temp___do_toplevel_236 Bool)) Bool (=>
                                      (or (= temp___is_init_234 true)
                                      (<= 0 2147483647)) (in_range4
                                      temp___expr_237)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const currtime (_ BitVec 16))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const thistime (_ BitVec 16))

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const thiscount (_ BitVec 16))

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(define-fun dynamic_invariant5 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-const prevtime (_ BitVec 16))

(declare-const prevcount (_ BitVec 16))

(declare-const success Bool)

(declare-const result__ Int)

(declare-const t1 Int)

(declare-const t2 Int)

(declare-const d1 Int)

(declare-const d2 Int)

(declare-const o Int)

(declare-const o1 Int)

(declare-const o2 Int)

(declare-const o3 Int)

(declare-const o4 Int)

(declare-const o5 Int)

(declare-const o6 Int)

(declare-const o7 Int)

(declare-const o8 Int)

(declare-const o9 Int)

(declare-const o10 Int)

(declare-const o11 Int)

(declare-const o12 Int)

(declare-const o13 Int)

(declare-const o14 Int)

(declare-const o15 Int)

(declare-const o16 Int)

(declare-const o17 Int)

(declare-const o18 Int)

(declare-const o19 Int)

(declare-const o20 Int)

(declare-const o21 Int)

(declare-const success1 Bool)

(declare-const result__1 Int)

(declare-const t11 Int)

(declare-const t21 Int)

(declare-const d11 Int)

(declare-const d21 Int)

(declare-const result Bool)

(declare-const success2 Bool)

(declare-const result1 Int)

(declare-const result__2 Int)

(declare-const result2 Int)

(declare-const t12 Int)

(declare-const result3 Int)

(declare-const t22 Int)

(declare-const result4 Int)

(declare-const d12 Int)

(declare-const result5 Int)

(declare-const d22 Int)

(declare-const result6 Bool)

(declare-const success3 Bool)

(declare-const result7 Int)

(declare-const result__3 Int)

(declare-const success4 Bool)

(declare-const result__4 Int)

(declare-const t13 Int)

(declare-const t23 Int)

(declare-const d13 Int)

(declare-const d23 int__ref)

(declare-const success5 Bool)

(declare-const result__5 Int)

(declare-const t14 Int)

(declare-const t24 Int)

(declare-const d14 Int)

(declare-const d24 Int)

(declare-const success6 bool__ref)

(declare-const result__6 int__ref)

(declare-const t15 int__ref)

(declare-const t25 int__ref)

(declare-const d15 int__ref)

(declare-const d25 int__ref)

(declare-const success7 Bool)

(declare-const result__7 Int)

(declare-const t16 Int)

(declare-const t26 Int)

(declare-const d16 Int)

(declare-const d26 Int)

(define-fun d17 () int__ref (mk_int__ref d13))

(define-fun t27 () int__ref (mk_int__ref t23))

(define-fun t17 () int__ref (mk_int__ref t13))

(define-fun result__8 () int__ref (mk_int__ref result__4))

(define-fun success8 () bool__ref (mk_bool__ref success4))

(define-fun result8 () int__ref (mk_int__ref result5))

(define-fun result9 () int__ref (mk_int__ref result4))

(define-fun result10 () int__ref (mk_int__ref result3))

(define-fun result11 () int__ref (mk_int__ref result2))

(define-fun result12 () int__ref (mk_int__ref result1))

(define-fun result13 () bool__ref (mk_bool__ref result))

(define-fun d27 () int__ref (mk_int__ref d2))

(define-fun d18 () int__ref (mk_int__ref d1))

(define-fun t28 () int__ref (mk_int__ref t2))

(define-fun t18 () int__ref (mk_int__ref t1))

(define-fun result__9 () int__ref (mk_int__ref result__))

(define-fun success9 () bool__ref (mk_bool__ref success))

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert (=> (<= 0 2147483647) (in_range4 result__)))

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert (and (not (= thistime prevtime)) (not (= thiscount prevcount))))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 t1)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 t2)))

;; H
  (assert (=> (<= 0 2147483647) (in_range3 d1)))

;; H
  (assert (=> (<= 0 2147483647) (in_range3 d2)))

;; H
  (assert
  (not (bvult (bvsub thiscount prevcount) (bvsub thistime prevtime))))

;; H
  (assert (= result__2 result__))

;; H
  (assert (= success2 success))

;; H
  (assert (= result__2 result__1))

;; H
  (assert (= success2 success1))

;; H
  (assert (= result11 t18))

;; H
  (assert (= t12 (bv2int (bvsub thistime prevtime))))

;; H
  (assert (= result10 t28))

;; H
  (assert (= t22 (bv2int (bvsub currtime thistime))))

(assert
;; WP_parameter_def
 ;; File "ng.adb", line 68, characters 0-0
  (not (in_range1 (* 207 (bv2int (bvsub thiscount prevcount))))))
(check-sat)
(exit)
