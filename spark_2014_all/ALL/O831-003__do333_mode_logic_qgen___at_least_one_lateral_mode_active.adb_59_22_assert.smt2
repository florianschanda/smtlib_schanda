;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-const roll_active Bool)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const hdg_active Bool)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const nav_active Bool)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const lappr_active Bool)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const lga_active Bool)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const hdg_active_out1 Bool)

(declare-const lappr_active_out1 Bool)

(declare-const lga_active_out1 Bool)

(declare-const nav_active_out1 Bool)

(declare-const roll_active_out1 Bool)

(declare-const or_out1 Bool)

(declare-const result Bool)

(declare-const hdg_active_out11 Bool)

(declare-const result1 Bool)

(declare-const lappr_active_out11 Bool)

(declare-const result2 Bool)

(declare-const lga_active_out11 Bool)

(declare-const result3 Bool)

(declare-const nav_active_out11 Bool)

(declare-const result4 Bool)

(declare-const roll_active_out11 Bool)

(declare-const result5 Bool)

(declare-const or_out11 Bool)

;; H
  (assert (= result hdg_active_out1))

;; H
  (assert (= hdg_active_out11 hdg_active))

;; H
  (assert (= result1 lappr_active_out1))

;; H
  (assert (= lappr_active_out11 lappr_active))

;; H
  (assert (= result2 lga_active_out1))

;; H
  (assert (= lga_active_out11 lga_active))

;; H
  (assert (= result3 nav_active_out1))

;; H
  (assert (= nav_active_out11 nav_active))

;; H
  (assert (= result4 roll_active_out1))

;; H
  (assert (= roll_active_out11 roll_active))

;; H
  (assert (= result5 or_out1))

;; H
  (assert
  (= or_out11 (ite (or
                   (or
                   (or
                   (or (= roll_active_out11 true) (= hdg_active_out11 true))
                   (= nav_active_out11 true)) (= lappr_active_out11 true))
                   (= lga_active_out11 true))
              true false)))

(assert
;; WP_parameter_def
 ;; File "at_least_one_lateral_mode_active.ads", line 20, characters 0-0
  (not (= or_out11 true)))
(check-sat)
(exit)
