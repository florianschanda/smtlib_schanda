;; produced by cvc4_14.drv ;;
(set-logic AUFBVDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private 
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 8)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 256)) (= (bv2nat ((_ int2bv 8) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvlshr x n) (lsr x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvashr x n) (asr x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvshl x n) (lsl x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_left1 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 8)) (n (_ BitVec 8)))
  (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) 
  (rotate_right1 v (bv2nat n)))))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 8)) (i (_ BitVec 8)))
  (= (nth x (bv2nat i)) (nth_bv x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 8)) (i Int))
  (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i)))
  (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8))
  (n (_ BitVec 8)))
  (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(declare-fun nth1 ((_ BitVec 16) Int) Bool)

(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))

(declare-fun to_int2 ((_ BitVec 16)) Int)

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))

;; to_uint_of_int
  (assert
  (forall ((i Int))
  (=> (and (<= 0 i) (< i 65536)) (= (bv2nat ((_ int2bv 16) i)) i))))

;; lsr_bv_is_lsr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvlshr x n) (lsr1 x (bv2nat n)))))

;; asr_bv_is_asr
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvashr x n) (asr1 x (bv2nat n)))))

;; lsl_bv_is_lsl
  (assert
  (forall ((x (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvshl x n) (lsl1 x (bv2nat n)))))

;; rotate_left_bv_is_rotate_left
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) 
  (rotate_left2 v (bv2nat n)))))

;; rotate_right_bv_is_rotate_right
  (assert
  (forall ((v (_ BitVec 16)) (n (_ BitVec 16)))
  (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) 
  (rotate_right2 v (bv2nat n)))))

(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)

;; nth_bv_def
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))

;; Nth_bv_is_nth
  (assert
  (forall ((x (_ BitVec 16)) (i (_ BitVec 16)))
  (= (nth1 x (bv2nat i)) (nth_bv1 x i))))

;; Nth_bv_is_nth2
  (assert
  (forall ((x (_ BitVec 16)) (i Int))
  (=> (and (<= 0 i) (< i 65536))
  (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))

(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16)
  (_ BitVec 16)) Bool)

;; eq_sub_bv_def
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i)))
  (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))

(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

;; eq_sub_equiv
  (assert
  (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16))
  (n (_ BitVec 16)))
  (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))

(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))

(define-fun bv_min1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 16))
  (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))

(declare-sort bits_6 0)

(define-fun in_range ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                             (bvule x ((_ int2bv 8) 63))))

(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 63)))

(define-fun bool_eq ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) (_ BitVec 8))

(declare-fun user_eq (bits_6 bits_6) Bool)

(declare-fun dummy () bits_6)

(declare-datatypes ()
((bits_6__ref (mk_bits_6__ref (bits_6__content bits_6)))))
(define-fun bits_6__ref___projection ((a bits_6__ref)) bits_6 (bits_6__content
                                                              a))

(define-fun dynamic_invariant ((temp___expr_232 (_ BitVec 8))
  (temp___is_init_229 Bool) (temp___skip_constant_230 Bool)
  (temp___do_toplevel_231 Bool)) Bool (=>
                                      (or (= temp___is_init_229 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 63)))
                                      (in_range temp___expr_232)))

(declare-fun to_rep (bits_6) (_ BitVec 8))

(declare-fun of_rep ((_ BitVec 8)) bits_6)

;; inversion_axiom
  (assert
  (forall ((x bits_6)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x bits_6)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 64))))
     (=> (in_range y) (= (to_rep (of_rep x)) y))) :pattern ((to_rep
                                                            (of_rep x))) )))

(define-fun to_int3 ((x bits_6)) Int (bv2nat (to_rep x)))

;; range_int_axiom
  (assert
  (forall ((x bits_6)) (! (in_range_int
  (to_int3 x)) :pattern ((to_int3 x)) )))

(declare-sort bits_7 0)

(define-fun in_range1 ((x (_ BitVec 8))) Bool (and (bvule ((_ int2bv 8) 0) x)
                                              (bvule x ((_ int2bv 8) 127))))

(define-fun in_range_int1 ((x Int)) Bool (and (<= 0 x) (<= x 127)))

(define-fun bool_eq1 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 8))

(declare-fun user_eq1 (bits_7 bits_7) Bool)

(declare-fun dummy1 () bits_7)

(declare-datatypes ()
((bits_7__ref (mk_bits_7__ref (bits_7__content bits_7)))))
(define-fun bits_7__ref___projection ((a bits_7__ref)) bits_7 (bits_7__content
                                                              a))

(declare-fun to_rep1 (bits_7) (_ BitVec 8))

(declare-fun of_rep1 ((_ BitVec 8)) bits_7)

;; inversion_axiom
  (assert
  (forall ((x bits_7))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x bits_7)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (let ((y (bvurem x ((_ int2bv 8) 128))))
     (=> (in_range1 y) (= (to_rep1 (of_rep1 x)) y))) :pattern ((to_rep1
                                                               (of_rep1 x))) )))

(define-fun to_int4 ((x bits_7)) Int (bv2nat (to_rep1 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_7)) (! (in_range_int1
  (to_int4 x)) :pattern ((to_int4 x)) )))

(declare-sort bits_8 0)

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 8))

(define-fun bool_eq2 ((x (_ BitVec 8))
  (y (_ BitVec 8))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 8))

(declare-fun user_eq2 (bits_8 bits_8) Bool)

(declare-fun dummy2 () bits_8)

(declare-datatypes ()
((bits_8__ref (mk_bits_8__ref (bits_8__content bits_8)))))
(define-fun bits_8__ref___projection ((a bits_8__ref)) bits_8 (bits_8__content
                                                              a))

(declare-fun to_rep2 (bits_8) (_ BitVec 8))

(declare-fun of_rep2 ((_ BitVec 8)) bits_8)

;; inversion_axiom
  (assert
  (forall ((x bits_8))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))) )))

(define-fun to_int5 ((x bits_8)) Int (bv2nat (to_rep2 x)))

;; range_int_axiom
  (assert
  (forall ((x bits_8)) (! (uint_in_range
  (to_int5 x)) :pattern ((to_int5 x)) )))

(declare-sort bits_15 0)

(define-fun in_range2 ((x (_ BitVec 16))) Bool (and
                                               (bvule ((_ int2bv 16) 0) x)
                                               (bvule x ((_ int2bv 16) 32767))))

(define-fun in_range_int2 ((x Int)) Bool (and (<= 0 x) (<= x 32767)))

(define-fun bool_eq3 ((x (_ BitVec 16))
  (y (_ BitVec 16))) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 16)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 16))

(declare-fun user_eq3 (bits_15 bits_15) Bool)

(declare-fun dummy3 () bits_15)

(declare-datatypes ()
((bits_15__ref (mk_bits_15__ref (bits_15__content bits_15)))))
(define-fun bits_15__ref___projection ((a bits_15__ref)) bits_15 (bits_15__content
                                                                 a))

(define-fun dynamic_invariant1 ((temp___expr_286 (_ BitVec 16))
  (temp___is_init_283 Bool) (temp___skip_constant_284 Bool)
  (temp___do_toplevel_285 Bool)) Bool (=>
                                      (or (= temp___is_init_283 true)
                                      (bvule ((_ int2bv 16) 0) ((_ int2bv 16) 32767)))
                                      (in_range2 temp___expr_286)))

(declare-sort integer 0)

(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(define-fun bool_eq4 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (integer integer) Bool)

(declare-fun dummy4 () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort natural 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(define-fun bool_eq5 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (natural natural) Bool)

(declare-fun dummy5 () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(declare-fun to_rep3 (integer) Int)

(declare-fun of_rep3 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range3 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int bits_8))))))
(declare-fun slide ((Array Int bits_8) Int Int) (Array Int bits_8))

;; slide_eq
  (assert
  (forall ((a (Array Int bits_8)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int bits_8)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select 
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int bits_8) Int Int (Array Int bits_8) Int
  Int) (Array Int bits_8))

;; concat_def
  (assert
  (forall ((a (Array Int bits_8)) (b (Array Int bits_8)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select 
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (bits_8 Int) (Array Int bits_8))

;; singleton_def
  (assert
  (forall ((v bits_8))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq6 ((a (Array Int bits_8)) (a__first Int) (a__last Int)
  (b (Array Int bits_8)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep2 (select a temp___idx_132)) (to_rep2
                                                                  (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int bits_8)) (b (Array Int bits_8)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq6 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep2 (select a temp___idx_132)) (to_rep2
                                         (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int bits_8) Int Int (Array Int bits_8) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int bits_8)) (b (Array Int bits_8)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq6 a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int bits_8)) (b (Array Int bits_8)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq6 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (bvult (to_rep2 (select a (+ i 1))) (to_rep2 (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int bits_8)) (b (Array Int bits_8)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq6 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (bvugt (to_rep2 (select a (+ j 1))) (to_rep2 (select b (+ i 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range3 f)
     (=> (in_range3 l)
     (and (= (to_rep3 (first (mk f l))) f) (= (to_rep3 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range3 low)
                   (and (in_range3 high)
                   (=> (<= low high) (and (in_range4 low) (in_range4 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int bits_8))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int bits_8) (elts a))

(define-fun of_array ((a (Array Int bits_8)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep3 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep3 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int bits_8)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int bits_8)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int bits_8)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int bits_8))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int bits_8))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int bits_8))) (<= 0 (object__alignment a))))

(define-fun bool_eq7 ((x us_t)
  (y us_t)) Bool (bool_eq6 (elts x) (to_rep3 (first (rt x)))
                 (to_rep3 (last (rt x))) (elts y) (to_rep3 (first (rt y)))
                 (to_rep3 (last (rt y)))))

(declare-fun user_eq6 (us_t us_t) Bool)

(declare-fun dummy6 () us_t)

(declare-datatypes ()
((byte_array__ref (mk_byte_array__ref (byte_array__content us_t)))))
(define-fun byte_array__ref___projection ((a byte_array__ref)) us_t (byte_array__content
                                                                    a))

(define-fun dynamic_invariant2 ((temp___expr_586 us_t)
  (temp___is_init_583 Bool) (temp___skip_constant_584 Bool)
  (temp___do_toplevel_585 Bool)) Bool (=>
                                      (not (= temp___skip_constant_584 true))
                                      (dynamic_property 0 2147483647
                                      (first1 temp___expr_586)
                                      (last1 temp___expr_586))))

(declare-sort operation_type 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(define-fun bool_eq8 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (operation_type operation_type) Bool)

(declare-fun dummy7 () operation_type)

(declare-datatypes ()
((operation_type__ref
 (mk_operation_type__ref (operation_type__content operation_type)))))
(define-fun operation_type__ref___projection ((a operation_type__ref)) operation_type 
  (operation_type__content a))

(declare-fun to_rep4 (operation_type) Int)

(declare-fun of_rep4 (Int) operation_type)

;; inversion_axiom
  (assert
  (forall ((x operation_type))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x operation_type)) (! (in_range5
  (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-sort sub_index_type 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(define-fun bool_eq9 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (sub_index_type sub_index_type) Bool)

(declare-fun dummy8 () sub_index_type)

(declare-datatypes ()
((sub_index_type__ref
 (mk_sub_index_type__ref (sub_index_type__content sub_index_type)))))
(define-fun sub_index_type__ref___projection ((a sub_index_type__ref)) sub_index_type 
  (sub_index_type__content a))

(declare-fun to_rep5 (sub_index_type) Int)

(declare-fun of_rep5 (Int) sub_index_type)

;; inversion_axiom
  (assert
  (forall ((x sub_index_type))
  (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)) )))

;; range_axiom
  (assert
  (forall ((x sub_index_type)) (! (in_range6
  (to_rep5 x)) :pattern ((to_rep5 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range6 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5
                                                              (of_rep5 x))) )))

(declare-sort extended_address_type 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(define-fun bool_eq10 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq9 (extended_address_type extended_address_type) Bool)

(declare-fun dummy9 () extended_address_type)

(declare-datatypes ()
((extended_address_type__ref
 (mk_extended_address_type__ref
 (extended_address_type__content extended_address_type)))))
(define-fun extended_address_type__ref___projection ((a extended_address_type__ref)) extended_address_type 
  (extended_address_type__content a))

(declare-fun to_rep6 (extended_address_type) Int)

(declare-fun of_rep6 (Int) extended_address_type)

;; inversion_axiom
  (assert
  (forall ((x extended_address_type))
  (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)) )))

;; range_axiom
  (assert
  (forall ((x extended_address_type)) (! (in_range7
  (to_rep6 x)) :pattern ((to_rep6 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range7 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6
                                                              (of_rep6 x))) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__dw1000__register_driver__non_indexed_header__register_id bits_6)(rec__dw1000__register_driver__non_indexed_header__sub_index sub_index_type)(rec__dw1000__register_driver__non_indexed_header__operation operation_type)))))
(define-fun us_split_fields_Register_ID__projection ((a us_split_fields)) bits_6 
  (rec__dw1000__register_driver__non_indexed_header__register_id a))

(define-fun us_split_fields_Sub_Index__projection ((a us_split_fields)) sub_index_type 
  (rec__dw1000__register_driver__non_indexed_header__sub_index a))

(define-fun us_split_fields_Operation__projection ((a us_split_fields)) operation_type 
  (rec__dw1000__register_driver__non_indexed_header__operation a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields 
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun bool_eq11 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep
                           (rec__dw1000__register_driver__non_indexed_header__register_id
                           (us_split_fields1 a))) (to_rep
                                                  (rec__dw1000__register_driver__non_indexed_header__register_id
                                                  (us_split_fields1 b))))
                        (= (to_rep5
                           (rec__dw1000__register_driver__non_indexed_header__sub_index
                           (us_split_fields1 a))) (to_rep5
                                                  (rec__dw1000__register_driver__non_indexed_header__sub_index
                                                  (us_split_fields1 b)))))
                        (= (to_rep4
                           (rec__dw1000__register_driver__non_indexed_header__operation
                           (us_split_fields1 a))) (to_rep4
                                                  (rec__dw1000__register_driver__non_indexed_header__operation
                                                  (us_split_fields1 b)))))
                   true false))

(declare-fun user_eq10 (us_rep us_rep) Bool)

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-fun dw1000__register_driver__non_indexed_header__register_id__first__bit () Int)

(declare-fun dw1000__register_driver__non_indexed_header__register_id__last__bit () Int)

(declare-fun dw1000__register_driver__non_indexed_header__register_id__position () Int)

;; dw1000__register_driver__non_indexed_header__register_id__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__non_indexed_header__register_id__first__bit))

;; dw1000__register_driver__non_indexed_header__register_id__last__bit_axiom
  (assert
  (< dw1000__register_driver__non_indexed_header__register_id__first__bit 
  dw1000__register_driver__non_indexed_header__register_id__last__bit))

;; dw1000__register_driver__non_indexed_header__register_id__position_axiom
  (assert
  (<= 0 dw1000__register_driver__non_indexed_header__register_id__position))

(declare-fun dw1000__register_driver__non_indexed_header__sub_index__first__bit () Int)

(declare-fun dw1000__register_driver__non_indexed_header__sub_index__last__bit () Int)

(declare-fun dw1000__register_driver__non_indexed_header__sub_index__position () Int)

;; dw1000__register_driver__non_indexed_header__sub_index__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__non_indexed_header__sub_index__first__bit))

;; dw1000__register_driver__non_indexed_header__sub_index__last__bit_axiom
  (assert
  (< dw1000__register_driver__non_indexed_header__sub_index__first__bit 
  dw1000__register_driver__non_indexed_header__sub_index__last__bit))

;; dw1000__register_driver__non_indexed_header__sub_index__position_axiom
  (assert
  (<= 0 dw1000__register_driver__non_indexed_header__sub_index__position))

(declare-fun dw1000__register_driver__non_indexed_header__operation__first__bit () Int)

(declare-fun dw1000__register_driver__non_indexed_header__operation__last__bit () Int)

(declare-fun dw1000__register_driver__non_indexed_header__operation__position () Int)

;; dw1000__register_driver__non_indexed_header__operation__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__non_indexed_header__operation__first__bit))

;; dw1000__register_driver__non_indexed_header__operation__last__bit_axiom
  (assert
  (< dw1000__register_driver__non_indexed_header__operation__first__bit 
  dw1000__register_driver__non_indexed_header__operation__last__bit))

;; dw1000__register_driver__non_indexed_header__operation__position_axiom
  (assert
  (<= 0 dw1000__register_driver__non_indexed_header__operation__position))

(declare-fun dummy10 () us_rep)

(declare-datatypes ()
((non_indexed_header__ref
 (mk_non_indexed_header__ref (non_indexed_header__content us_rep)))))
(define-fun non_indexed_header__ref___projection ((a non_indexed_header__ref)) us_rep 
  (non_indexed_header__content a))

(define-fun dynamic_invariant3 ((temp___expr_614 us_rep)
  (temp___is_init_611 Bool) (temp___skip_constant_612 Bool)
  (temp___do_toplevel_613 Bool)) Bool (=> (= temp___do_toplevel_613 true)
                                      (=> (= temp___is_init_611 true)
                                      (= (to_rep5
                                         (rec__dw1000__register_driver__non_indexed_header__sub_index
                                         (us_split_fields1 temp___expr_614))) 0))))

(define-fun default_initial_assumption ((temp___expr_616 us_rep)
  (temp___skip_top_level_617 Bool)) Bool (and
                                         (and
                                         (= (to_rep
                                            (rec__dw1000__register_driver__non_indexed_header__register_id
                                            (us_split_fields1
                                            temp___expr_616))) ((_ int2bv 8) 0))
                                         (= (to_rep5
                                            (rec__dw1000__register_driver__non_indexed_header__sub_index
                                            (us_split_fields1
                                            temp___expr_616))) 0))
                                         (= (to_rep4
                                            (rec__dw1000__register_driver__non_indexed_header__operation
                                            (us_split_fields1
                                            temp___expr_616))) 0)))

(define-fun dynamic_predicate ((temp___618 us_rep)) Bool (= (to_rep5
                                                            (rec__dw1000__register_driver__non_indexed_header__sub_index
                                                            (us_split_fields1
                                                            temp___618))) 0))

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__dw1000__register_driver__short_indexed_header__register_id bits_6)(rec__dw1000__register_driver__short_indexed_header__sub_index sub_index_type)(rec__dw1000__register_driver__short_indexed_header__operation operation_type)(rec__dw1000__register_driver__short_indexed_header__register_sub_address bits_7)(rec__dw1000__register_driver__short_indexed_header__extended_address extended_address_type)))))
(define-fun us_split_fields_Register_ID2__projection ((a us_split_fields2)) bits_6 
  (rec__dw1000__register_driver__short_indexed_header__register_id a))

(define-fun us_split_fields_Sub_Index2__projection ((a us_split_fields2)) sub_index_type 
  (rec__dw1000__register_driver__short_indexed_header__sub_index a))

(define-fun us_split_fields_Operation2__projection ((a us_split_fields2)) operation_type 
  (rec__dw1000__register_driver__short_indexed_header__operation a))

(define-fun us_split_fields_Register_Sub_Address__projection ((a us_split_fields2)) bits_7 
  (rec__dw1000__register_driver__short_indexed_header__register_sub_address
  a))

(define-fun us_split_fields_Extended_Address__projection ((a us_split_fields2)) extended_address_type 
  (rec__dw1000__register_driver__short_indexed_header__extended_address a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref_2__projection ((a us_split_fields__ref1)) us_split_fields2 
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep_2__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                a))

(define-fun bool_eq12 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (and
                         (and
                         (= (to_rep
                            (rec__dw1000__register_driver__short_indexed_header__register_id
                            (us_split_fields3 a))) (to_rep
                                                   (rec__dw1000__register_driver__short_indexed_header__register_id
                                                   (us_split_fields3 b))))
                         (= (to_rep5
                            (rec__dw1000__register_driver__short_indexed_header__sub_index
                            (us_split_fields3 a))) (to_rep5
                                                   (rec__dw1000__register_driver__short_indexed_header__sub_index
                                                   (us_split_fields3 b)))))
                         (= (to_rep4
                            (rec__dw1000__register_driver__short_indexed_header__operation
                            (us_split_fields3 a))) (to_rep4
                                                   (rec__dw1000__register_driver__short_indexed_header__operation
                                                   (us_split_fields3 b)))))
                         (= (to_rep1
                            (rec__dw1000__register_driver__short_indexed_header__register_sub_address
                            (us_split_fields3 a))) (to_rep1
                                                   (rec__dw1000__register_driver__short_indexed_header__register_sub_address
                                                   (us_split_fields3 b)))))
                         (= (to_rep6
                            (rec__dw1000__register_driver__short_indexed_header__extended_address
                            (us_split_fields3 a))) (to_rep6
                                                   (rec__dw1000__register_driver__short_indexed_header__extended_address
                                                   (us_split_fields3 b)))))
                    true false))

(declare-fun user_eq11 (us_rep1 us_rep1) Bool)

(declare-fun value__size2 () Int)

(declare-fun object__size2 (us_rep1) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))

(declare-fun dw1000__register_driver__short_indexed_header__register_id__first__bit () Int)

(declare-fun dw1000__register_driver__short_indexed_header__register_id__last__bit () Int)

(declare-fun dw1000__register_driver__short_indexed_header__register_id__position () Int)

;; dw1000__register_driver__short_indexed_header__register_id__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__short_indexed_header__register_id__first__bit))

;; dw1000__register_driver__short_indexed_header__register_id__last__bit_axiom
  (assert
  (< dw1000__register_driver__short_indexed_header__register_id__first__bit 
  dw1000__register_driver__short_indexed_header__register_id__last__bit))

;; dw1000__register_driver__short_indexed_header__register_id__position_axiom
  (assert
  (<= 0 dw1000__register_driver__short_indexed_header__register_id__position))

(declare-fun dw1000__register_driver__short_indexed_header__sub_index__first__bit () Int)

(declare-fun dw1000__register_driver__short_indexed_header__sub_index__last__bit () Int)

(declare-fun dw1000__register_driver__short_indexed_header__sub_index__position () Int)

;; dw1000__register_driver__short_indexed_header__sub_index__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__short_indexed_header__sub_index__first__bit))

;; dw1000__register_driver__short_indexed_header__sub_index__last__bit_axiom
  (assert
  (< dw1000__register_driver__short_indexed_header__sub_index__first__bit 
  dw1000__register_driver__short_indexed_header__sub_index__last__bit))

;; dw1000__register_driver__short_indexed_header__sub_index__position_axiom
  (assert
  (<= 0 dw1000__register_driver__short_indexed_header__sub_index__position))

(declare-fun dw1000__register_driver__short_indexed_header__operation__first__bit () Int)

(declare-fun dw1000__register_driver__short_indexed_header__operation__last__bit () Int)

(declare-fun dw1000__register_driver__short_indexed_header__operation__position () Int)

;; dw1000__register_driver__short_indexed_header__operation__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__short_indexed_header__operation__first__bit))

;; dw1000__register_driver__short_indexed_header__operation__last__bit_axiom
  (assert
  (< dw1000__register_driver__short_indexed_header__operation__first__bit 
  dw1000__register_driver__short_indexed_header__operation__last__bit))

;; dw1000__register_driver__short_indexed_header__operation__position_axiom
  (assert
  (<= 0 dw1000__register_driver__short_indexed_header__operation__position))

(declare-fun dw1000__register_driver__short_indexed_header__register_sub_address__first__bit () Int)

(declare-fun dw1000__register_driver__short_indexed_header__register_sub_address__last__bit () Int)

(declare-fun dw1000__register_driver__short_indexed_header__register_sub_address__position () Int)

;; dw1000__register_driver__short_indexed_header__register_sub_address__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__short_indexed_header__register_sub_address__first__bit))

;; dw1000__register_driver__short_indexed_header__register_sub_address__last__bit_axiom
  (assert
  (< dw1000__register_driver__short_indexed_header__register_sub_address__first__bit 
  dw1000__register_driver__short_indexed_header__register_sub_address__last__bit))

;; dw1000__register_driver__short_indexed_header__register_sub_address__position_axiom
  (assert
  (<= 0 dw1000__register_driver__short_indexed_header__register_sub_address__position))

(declare-fun dw1000__register_driver__short_indexed_header__extended_address__first__bit () Int)

(declare-fun dw1000__register_driver__short_indexed_header__extended_address__last__bit () Int)

(declare-fun dw1000__register_driver__short_indexed_header__extended_address__position () Int)

;; dw1000__register_driver__short_indexed_header__extended_address__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__short_indexed_header__extended_address__first__bit))

;; dw1000__register_driver__short_indexed_header__extended_address__last__bit_axiom
  (assert
  (< dw1000__register_driver__short_indexed_header__extended_address__first__bit 
  dw1000__register_driver__short_indexed_header__extended_address__last__bit))

;; dw1000__register_driver__short_indexed_header__extended_address__position_axiom
  (assert
  (<= 0 dw1000__register_driver__short_indexed_header__extended_address__position))

(declare-fun dummy11 () us_rep1)

(declare-datatypes ()
((short_indexed_header__ref
 (mk_short_indexed_header__ref (short_indexed_header__content us_rep1)))))
(define-fun short_indexed_header__ref___projection ((a short_indexed_header__ref)) us_rep1 
  (short_indexed_header__content a))

(define-fun dynamic_invariant4 ((temp___expr_623 us_rep1)
  (temp___is_init_620 Bool) (temp___skip_constant_621 Bool)
  (temp___do_toplevel_622 Bool)) Bool (=> (= temp___do_toplevel_622 true)
                                      (=> (= temp___is_init_620 true)
                                      (and
                                      (= (to_rep5
                                         (rec__dw1000__register_driver__short_indexed_header__sub_index
                                         (us_split_fields3 temp___expr_623))) 1)
                                      (= (to_rep6
                                         (rec__dw1000__register_driver__short_indexed_header__extended_address
                                         (us_split_fields3 temp___expr_623))) 0)))))

(define-fun default_initial_assumption1 ((temp___expr_625 us_rep1)
  (temp___skip_top_level_626 Bool)) Bool (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep
                                            (rec__dw1000__register_driver__short_indexed_header__register_id
                                            (us_split_fields3
                                            temp___expr_625))) ((_ int2bv 8) 0))
                                         (= (to_rep5
                                            (rec__dw1000__register_driver__short_indexed_header__sub_index
                                            (us_split_fields3
                                            temp___expr_625))) 1))
                                         (= (to_rep4
                                            (rec__dw1000__register_driver__short_indexed_header__operation
                                            (us_split_fields3
                                            temp___expr_625))) 0))
                                         (= (to_rep1
                                            (rec__dw1000__register_driver__short_indexed_header__register_sub_address
                                            (us_split_fields3
                                            temp___expr_625))) ((_ int2bv 8) 0)))
                                         (= (to_rep6
                                            (rec__dw1000__register_driver__short_indexed_header__extended_address
                                            (us_split_fields3
                                            temp___expr_625))) 0)))

(define-fun dynamic_predicate1 ((temp___627 us_rep1)) Bool (and
                                                           (= (to_rep5
                                                              (rec__dw1000__register_driver__short_indexed_header__sub_index
                                                              (us_split_fields3
                                                              temp___627))) 1)
                                                           (= (to_rep6
                                                              (rec__dw1000__register_driver__short_indexed_header__extended_address
                                                              (us_split_fields3
                                                              temp___627))) 0)))

(declare-datatypes ()
((us_split_fields4
 (mk___split_fields2
 (rec__dw1000__register_driver__long_indexed_header__register_id bits_6)(rec__dw1000__register_driver__long_indexed_header__sub_index sub_index_type)(rec__dw1000__register_driver__long_indexed_header__operation operation_type)(rec__dw1000__register_driver__long_indexed_header__register_sub_address_lsb bits_7)(rec__dw1000__register_driver__long_indexed_header__extended_address extended_address_type)(rec__dw1000__register_driver__long_indexed_header__register_sub_address_msb bits_8)))))
(define-fun us_split_fields_Register_ID3__projection ((a us_split_fields4)) bits_6 
  (rec__dw1000__register_driver__long_indexed_header__register_id a))

(define-fun us_split_fields_Sub_Index3__projection ((a us_split_fields4)) sub_index_type 
  (rec__dw1000__register_driver__long_indexed_header__sub_index a))

(define-fun us_split_fields_Operation3__projection ((a us_split_fields4)) operation_type 
  (rec__dw1000__register_driver__long_indexed_header__operation a))

(define-fun us_split_fields_Register_Sub_Address_LSB__projection ((a us_split_fields4)) bits_7 
  (rec__dw1000__register_driver__long_indexed_header__register_sub_address_lsb
  a))

(define-fun us_split_fields_Extended_Address2__projection ((a us_split_fields4)) extended_address_type 
  (rec__dw1000__register_driver__long_indexed_header__extended_address a))

(define-fun us_split_fields_Register_Sub_Address_MSB__projection ((a us_split_fields4)) bits_8 
  (rec__dw1000__register_driver__long_indexed_header__register_sub_address_msb
  a))

(declare-datatypes ()
((us_split_fields__ref2
 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref_3__projection ((a us_split_fields__ref2)) us_split_fields4 
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep_3__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                a))

(define-fun bool_eq13 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (and
                         (and
                         (and
                         (= (to_rep
                            (rec__dw1000__register_driver__long_indexed_header__register_id
                            (us_split_fields5 a))) (to_rep
                                                   (rec__dw1000__register_driver__long_indexed_header__register_id
                                                   (us_split_fields5 b))))
                         (= (to_rep5
                            (rec__dw1000__register_driver__long_indexed_header__sub_index
                            (us_split_fields5 a))) (to_rep5
                                                   (rec__dw1000__register_driver__long_indexed_header__sub_index
                                                   (us_split_fields5 b)))))
                         (= (to_rep4
                            (rec__dw1000__register_driver__long_indexed_header__operation
                            (us_split_fields5 a))) (to_rep4
                                                   (rec__dw1000__register_driver__long_indexed_header__operation
                                                   (us_split_fields5 b)))))
                         (= (to_rep1
                            (rec__dw1000__register_driver__long_indexed_header__register_sub_address_lsb
                            (us_split_fields5 a))) (to_rep1
                                                   (rec__dw1000__register_driver__long_indexed_header__register_sub_address_lsb
                                                   (us_split_fields5 b)))))
                         (= (to_rep6
                            (rec__dw1000__register_driver__long_indexed_header__extended_address
                            (us_split_fields5 a))) (to_rep6
                                                   (rec__dw1000__register_driver__long_indexed_header__extended_address
                                                   (us_split_fields5 b)))))
                         (= (to_rep2
                            (rec__dw1000__register_driver__long_indexed_header__register_sub_address_msb
                            (us_split_fields5 a))) (to_rep2
                                                   (rec__dw1000__register_driver__long_indexed_header__register_sub_address_msb
                                                   (us_split_fields5 b)))))
                    true false))

(declare-fun user_eq12 (us_rep2 us_rep2) Bool)

(declare-fun value__size3 () Int)

(declare-fun object__size3 (us_rep2) Int)

(declare-fun value__alignment3 () Int)

(declare-fun object__alignment3 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment3 a))))

(declare-fun dw1000__register_driver__long_indexed_header__register_id__first__bit () Int)

(declare-fun dw1000__register_driver__long_indexed_header__register_id__last__bit () Int)

(declare-fun dw1000__register_driver__long_indexed_header__register_id__position () Int)

;; dw1000__register_driver__long_indexed_header__register_id__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__long_indexed_header__register_id__first__bit))

;; dw1000__register_driver__long_indexed_header__register_id__last__bit_axiom
  (assert
  (< dw1000__register_driver__long_indexed_header__register_id__first__bit 
  dw1000__register_driver__long_indexed_header__register_id__last__bit))

;; dw1000__register_driver__long_indexed_header__register_id__position_axiom
  (assert
  (<= 0 dw1000__register_driver__long_indexed_header__register_id__position))

(declare-fun dw1000__register_driver__long_indexed_header__sub_index__first__bit () Int)

(declare-fun dw1000__register_driver__long_indexed_header__sub_index__last__bit () Int)

(declare-fun dw1000__register_driver__long_indexed_header__sub_index__position () Int)

;; dw1000__register_driver__long_indexed_header__sub_index__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__long_indexed_header__sub_index__first__bit))

;; dw1000__register_driver__long_indexed_header__sub_index__last__bit_axiom
  (assert
  (< dw1000__register_driver__long_indexed_header__sub_index__first__bit 
  dw1000__register_driver__long_indexed_header__sub_index__last__bit))

;; dw1000__register_driver__long_indexed_header__sub_index__position_axiom
  (assert
  (<= 0 dw1000__register_driver__long_indexed_header__sub_index__position))

(declare-fun dw1000__register_driver__long_indexed_header__operation__first__bit () Int)

(declare-fun dw1000__register_driver__long_indexed_header__operation__last__bit () Int)

(declare-fun dw1000__register_driver__long_indexed_header__operation__position () Int)

;; dw1000__register_driver__long_indexed_header__operation__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__long_indexed_header__operation__first__bit))

;; dw1000__register_driver__long_indexed_header__operation__last__bit_axiom
  (assert
  (< dw1000__register_driver__long_indexed_header__operation__first__bit 
  dw1000__register_driver__long_indexed_header__operation__last__bit))

;; dw1000__register_driver__long_indexed_header__operation__position_axiom
  (assert
  (<= 0 dw1000__register_driver__long_indexed_header__operation__position))

(declare-fun dw1000__register_driver__long_indexed_header__register_sub_address_lsb__first__bit () Int)

(declare-fun dw1000__register_driver__long_indexed_header__register_sub_address_lsb__last__bit () Int)

(declare-fun dw1000__register_driver__long_indexed_header__register_sub_address_lsb__position () Int)

;; dw1000__register_driver__long_indexed_header__register_sub_address_lsb__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__long_indexed_header__register_sub_address_lsb__first__bit))

;; dw1000__register_driver__long_indexed_header__register_sub_address_lsb__last__bit_axiom
  (assert
  (< dw1000__register_driver__long_indexed_header__register_sub_address_lsb__first__bit 
  dw1000__register_driver__long_indexed_header__register_sub_address_lsb__last__bit))

;; dw1000__register_driver__long_indexed_header__register_sub_address_lsb__position_axiom
  (assert
  (<= 0 dw1000__register_driver__long_indexed_header__register_sub_address_lsb__position))

(declare-fun dw1000__register_driver__long_indexed_header__extended_address__first__bit () Int)

(declare-fun dw1000__register_driver__long_indexed_header__extended_address__last__bit () Int)

(declare-fun dw1000__register_driver__long_indexed_header__extended_address__position () Int)

;; dw1000__register_driver__long_indexed_header__extended_address__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__long_indexed_header__extended_address__first__bit))

;; dw1000__register_driver__long_indexed_header__extended_address__last__bit_axiom
  (assert
  (< dw1000__register_driver__long_indexed_header__extended_address__first__bit 
  dw1000__register_driver__long_indexed_header__extended_address__last__bit))

;; dw1000__register_driver__long_indexed_header__extended_address__position_axiom
  (assert
  (<= 0 dw1000__register_driver__long_indexed_header__extended_address__position))

(declare-fun dw1000__register_driver__long_indexed_header__register_sub_address_msb__first__bit () Int)

(declare-fun dw1000__register_driver__long_indexed_header__register_sub_address_msb__last__bit () Int)

(declare-fun dw1000__register_driver__long_indexed_header__register_sub_address_msb__position () Int)

;; dw1000__register_driver__long_indexed_header__register_sub_address_msb__first__bit_axiom
  (assert
  (<= 0 dw1000__register_driver__long_indexed_header__register_sub_address_msb__first__bit))

;; dw1000__register_driver__long_indexed_header__register_sub_address_msb__last__bit_axiom
  (assert
  (< dw1000__register_driver__long_indexed_header__register_sub_address_msb__first__bit 
  dw1000__register_driver__long_indexed_header__register_sub_address_msb__last__bit))

;; dw1000__register_driver__long_indexed_header__register_sub_address_msb__position_axiom
  (assert
  (<= 0 dw1000__register_driver__long_indexed_header__register_sub_address_msb__position))

(declare-fun dummy12 () us_rep2)

(declare-datatypes ()
((long_indexed_header__ref
 (mk_long_indexed_header__ref (long_indexed_header__content us_rep2)))))
(define-fun long_indexed_header__ref___projection ((a long_indexed_header__ref)) us_rep2 
  (long_indexed_header__content a))

(define-fun dynamic_invariant5 ((temp___expr_632 us_rep2)
  (temp___is_init_629 Bool) (temp___skip_constant_630 Bool)
  (temp___do_toplevel_631 Bool)) Bool (=> (= temp___do_toplevel_631 true)
                                      (=> (= temp___is_init_629 true)
                                      (and
                                      (= (to_rep5
                                         (rec__dw1000__register_driver__long_indexed_header__sub_index
                                         (us_split_fields5 temp___expr_632))) 1)
                                      (= (to_rep6
                                         (rec__dw1000__register_driver__long_indexed_header__extended_address
                                         (us_split_fields5 temp___expr_632))) 1)))))

(define-fun default_initial_assumption2 ((temp___expr_634 us_rep2)
  (temp___skip_top_level_635 Bool)) Bool (and
                                         (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep
                                            (rec__dw1000__register_driver__long_indexed_header__register_id
                                            (us_split_fields5
                                            temp___expr_634))) ((_ int2bv 8) 0))
                                         (= (to_rep5
                                            (rec__dw1000__register_driver__long_indexed_header__sub_index
                                            (us_split_fields5
                                            temp___expr_634))) 1))
                                         (= (to_rep4
                                            (rec__dw1000__register_driver__long_indexed_header__operation
                                            (us_split_fields5
                                            temp___expr_634))) 0))
                                         (= (to_rep1
                                            (rec__dw1000__register_driver__long_indexed_header__register_sub_address_lsb
                                            (us_split_fields5
                                            temp___expr_634))) ((_ int2bv 8) 0)))
                                         (= (to_rep6
                                            (rec__dw1000__register_driver__long_indexed_header__extended_address
                                            (us_split_fields5
                                            temp___expr_634))) 1))
                                         (= (to_rep2
                                            (rec__dw1000__register_driver__long_indexed_header__register_sub_address_msb
                                            (us_split_fields5
                                            temp___expr_634))) ((_ int2bv 8) 0))))

(define-fun dynamic_predicate2 ((temp___636 us_rep2)) Bool (and
                                                           (= (to_rep5
                                                              (rec__dw1000__register_driver__long_indexed_header__sub_index
                                                              (us_split_fields5
                                                              temp___636))) 1)
                                                           (= (to_rep6
                                                              (rec__dw1000__register_driver__long_indexed_header__extended_address
                                                              (us_split_fields5
                                                              temp___636))) 1)))

(declare-fun register_id () (_ BitVec 8))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun sub_address () (_ BitVec 16))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun data () us_t)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-sort tnon_indexed_header_bytesP1 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 1)))

(define-fun bool_eq14 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq13 (tnon_indexed_header_bytesP1
  tnon_indexed_header_bytesP1) Bool)

(declare-fun dummy13 () tnon_indexed_header_bytesP1)

(declare-datatypes ()
((tnon_indexed_header_bytesP1__ref
 (mk_tnon_indexed_header_bytesP1__ref
 (tnon_indexed_header_bytesP1__content tnon_indexed_header_bytesP1)))))
(define-fun tnon_indexed_header_bytesP1__ref___projection ((a tnon_indexed_header_bytesP1__ref)) tnon_indexed_header_bytesP1 
  (tnon_indexed_header_bytesP1__content a))

(declare-sort tshort_indexed_header_bytesP1 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(define-fun bool_eq15 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq14 (tshort_indexed_header_bytesP1
  tshort_indexed_header_bytesP1) Bool)

(declare-fun dummy14 () tshort_indexed_header_bytesP1)

(declare-datatypes ()
((tshort_indexed_header_bytesP1__ref
 (mk_tshort_indexed_header_bytesP1__ref
 (tshort_indexed_header_bytesP1__content tshort_indexed_header_bytesP1)))))
(define-fun tshort_indexed_header_bytesP1__ref___projection ((a tshort_indexed_header_bytesP1__ref)) tshort_indexed_header_bytesP1 
  (tshort_indexed_header_bytesP1__content a))

(declare-sort tlong_indexed_header_bytesP1 0)

(define-fun in_range10 ((x Int)) Bool (and (<= 1 x) (<= x 3)))

(define-fun bool_eq16 ((x Int) (y Int)) Bool (ite (= x y) true false))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq15 (tlong_indexed_header_bytesP1
  tlong_indexed_header_bytesP1) Bool)

(declare-fun dummy15 () tlong_indexed_header_bytesP1)

(declare-datatypes ()
((tlong_indexed_header_bytesP1__ref
 (mk_tlong_indexed_header_bytesP1__ref
 (tlong_indexed_header_bytesP1__content tlong_indexed_header_bytesP1)))))
(define-fun tlong_indexed_header_bytesP1__ref___projection ((a tlong_indexed_header_bytesP1__ref)) tlong_indexed_header_bytesP1 
  (tlong_indexed_header_bytesP1__content a))

(declare-datatypes ()
((source__ref (mk_source__ref (source__content us_rep)))))
(define-fun source__ref___projection ((a source__ref)) us_rep (source__content
                                                              a))

(declare-fun to_bytes (us_rep) (Array Int bits_8))

(declare-fun to_bytes__function_guard ((Array Int bits_8) us_rep) Bool)

(define-fun dynamic_invariant6 ((temp___expr_671 us_rep)
  (temp___is_init_668 Bool) (temp___skip_constant_669 Bool)
  (temp___do_toplevel_670 Bool)) Bool (=> (= temp___do_toplevel_670 true)
                                      (=> (= temp___is_init_668 true)
                                      (= (to_rep5
                                         (rec__dw1000__register_driver__non_indexed_header__sub_index
                                         (us_split_fields1 temp___expr_671))) 0))))

(define-fun default_initial_assumption3 ((temp___expr_673 us_rep)
  (temp___skip_top_level_674 Bool)) Bool (and
                                         (and
                                         (= (to_rep
                                            (rec__dw1000__register_driver__non_indexed_header__register_id
                                            (us_split_fields1
                                            temp___expr_673))) ((_ int2bv 8) 0))
                                         (= (to_rep5
                                            (rec__dw1000__register_driver__non_indexed_header__sub_index
                                            (us_split_fields1
                                            temp___expr_673))) 0))
                                         (= (to_rep4
                                            (rec__dw1000__register_driver__non_indexed_header__operation
                                            (us_split_fields1
                                            temp___expr_673))) 0)))

(define-fun dynamic_predicate3 ((temp___675 us_rep)) Bool (= (to_rep5
                                                             (rec__dw1000__register_driver__non_indexed_header__sub_index
                                                             (us_split_fields1
                                                             temp___675))) 0))

;; to_bytes__post_axiom
  (assert true)

(declare-datatypes ()
((source__ref1 (mk_source__ref1 (source__content1 us_rep1)))))
(define-fun source__ref_2__projection ((a source__ref1)) us_rep1 (source__content1
                                                                 a))

(declare-fun to_bytes1 (us_rep1) (Array Int bits_8))

(declare-fun to_bytes__function_guard1 ((Array Int bits_8) us_rep1) Bool)

(define-fun dynamic_invariant7 ((temp___expr_689 us_rep1)
  (temp___is_init_686 Bool) (temp___skip_constant_687 Bool)
  (temp___do_toplevel_688 Bool)) Bool (=> (= temp___do_toplevel_688 true)
                                      (=> (= temp___is_init_686 true)
                                      (and
                                      (= (to_rep5
                                         (rec__dw1000__register_driver__short_indexed_header__sub_index
                                         (us_split_fields3 temp___expr_689))) 1)
                                      (= (to_rep6
                                         (rec__dw1000__register_driver__short_indexed_header__extended_address
                                         (us_split_fields3 temp___expr_689))) 0)))))

(define-fun default_initial_assumption4 ((temp___expr_691 us_rep1)
  (temp___skip_top_level_692 Bool)) Bool (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep
                                            (rec__dw1000__register_driver__short_indexed_header__register_id
                                            (us_split_fields3
                                            temp___expr_691))) ((_ int2bv 8) 0))
                                         (= (to_rep5
                                            (rec__dw1000__register_driver__short_indexed_header__sub_index
                                            (us_split_fields3
                                            temp___expr_691))) 1))
                                         (= (to_rep4
                                            (rec__dw1000__register_driver__short_indexed_header__operation
                                            (us_split_fields3
                                            temp___expr_691))) 0))
                                         (= (to_rep1
                                            (rec__dw1000__register_driver__short_indexed_header__register_sub_address
                                            (us_split_fields3
                                            temp___expr_691))) ((_ int2bv 8) 0)))
                                         (= (to_rep6
                                            (rec__dw1000__register_driver__short_indexed_header__extended_address
                                            (us_split_fields3
                                            temp___expr_691))) 0)))

(define-fun dynamic_predicate4 ((temp___693 us_rep1)) Bool (and
                                                           (= (to_rep5
                                                              (rec__dw1000__register_driver__short_indexed_header__sub_index
                                                              (us_split_fields3
                                                              temp___693))) 1)
                                                           (= (to_rep6
                                                              (rec__dw1000__register_driver__short_indexed_header__extended_address
                                                              (us_split_fields3
                                                              temp___693))) 0)))

;; to_bytes__post_axiom
  (assert true)

(declare-datatypes ()
((source__ref2 (mk_source__ref2 (source__content2 us_rep2)))))
(define-fun source__ref_3__projection ((a source__ref2)) us_rep2 (source__content2
                                                                 a))

(declare-fun to_bytes2 (us_rep2) (Array Int bits_8))

(declare-fun to_bytes__function_guard2 ((Array Int bits_8) us_rep2) Bool)

(define-fun dynamic_invariant8 ((temp___expr_707 us_rep2)
  (temp___is_init_704 Bool) (temp___skip_constant_705 Bool)
  (temp___do_toplevel_706 Bool)) Bool (=> (= temp___do_toplevel_706 true)
                                      (=> (= temp___is_init_704 true)
                                      (and
                                      (= (to_rep5
                                         (rec__dw1000__register_driver__long_indexed_header__sub_index
                                         (us_split_fields5 temp___expr_707))) 1)
                                      (= (to_rep6
                                         (rec__dw1000__register_driver__long_indexed_header__extended_address
                                         (us_split_fields5 temp___expr_707))) 1)))))

(define-fun default_initial_assumption5 ((temp___expr_709 us_rep2)
  (temp___skip_top_level_710 Bool)) Bool (and
                                         (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep
                                            (rec__dw1000__register_driver__long_indexed_header__register_id
                                            (us_split_fields5
                                            temp___expr_709))) ((_ int2bv 8) 0))
                                         (= (to_rep5
                                            (rec__dw1000__register_driver__long_indexed_header__sub_index
                                            (us_split_fields5
                                            temp___expr_709))) 1))
                                         (= (to_rep4
                                            (rec__dw1000__register_driver__long_indexed_header__operation
                                            (us_split_fields5
                                            temp___expr_709))) 0))
                                         (= (to_rep1
                                            (rec__dw1000__register_driver__long_indexed_header__register_sub_address_lsb
                                            (us_split_fields5
                                            temp___expr_709))) ((_ int2bv 8) 0)))
                                         (= (to_rep6
                                            (rec__dw1000__register_driver__long_indexed_header__extended_address
                                            (us_split_fields5
                                            temp___expr_709))) 1))
                                         (= (to_rep2
                                            (rec__dw1000__register_driver__long_indexed_header__register_sub_address_msb
                                            (us_split_fields5
                                            temp___expr_709))) ((_ int2bv 8) 0))))

(define-fun dynamic_predicate5 ((temp___711 us_rep2)) Bool (and
                                                           (= (to_rep5
                                                              (rec__dw1000__register_driver__long_indexed_header__sub_index
                                                              (us_split_fields5
                                                              temp___711))) 1)
                                                           (= (to_rep6
                                                              (rec__dw1000__register_driver__long_indexed_header__extended_address
                                                              (us_split_fields5
                                                              temp___711))) 1)))

;; to_bytes__post_axiom
  (assert true)

(declare-fun header () us_rep)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun header1 () us_rep1)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun header2 () us_rep2)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(define-fun dynamic_invariant9 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range4
                                     temp___expr_33)))

(define-fun dynamic_invariant10 ((temp___expr_15 Int)
  (temp___is_init_12 Bool) (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range3 temp___expr_15)))

;; header__def_axiom
  (assert
  (= header (mk___rep
            (mk___split_fields (of_rep register_id) (of_rep5 0) (of_rep4 1)))))

;; header__def_axiom
  (assert
  (= header1 (mk___rep1
             (mk___split_fields1 (of_rep register_id) (of_rep5 1) (of_rep4 1)
             (of_rep1 ((_ extract 7 0) sub_address)) (of_rep6 0)))))

;; header__def_axiom
  (assert
  (= header2 (mk___rep2
             (mk___split_fields2 (of_rep register_id) (of_rep5 1) (of_rep4 1)
             (of_rep1
             ((_ extract 7 0) (bvand sub_address ((_ int2bv 16) 127))))
             (of_rep6 1)
             (of_rep2
             ((_ extract 7 0) (bvudiv sub_address ((_ int2bv 16) 128))))))))

(define-fun dynamic_invariant11 ((temp___expr_596 Int)
  (temp___is_init_593 Bool) (temp___skip_constant_594 Bool)
  (temp___do_toplevel_595 Bool)) Bool (=>
                                      (or (= temp___is_init_593 true)
                                      (<= 0 1)) (in_range5 temp___expr_596)))

(define-fun dynamic_invariant12 ((temp___expr_602 Int)
  (temp___is_init_599 Bool) (temp___skip_constant_600 Bool)
  (temp___do_toplevel_601 Bool)) Bool (=>
                                      (or (= temp___is_init_599 true)
                                      (<= 0 1)) (in_range6 temp___expr_602)))

(define-fun dynamic_invariant13 ((temp___expr_608 Int)
  (temp___is_init_605 Bool) (temp___skip_constant_606 Bool)
  (temp___do_toplevel_607 Bool)) Bool (=>
                                      (or (= temp___is_init_605 true)
                                      (<= 0 1)) (in_range7 temp___expr_608)))

(define-fun dynamic_invariant14 ((temp___expr_238 (_ BitVec 8))
  (temp___is_init_235 Bool) (temp___skip_constant_236 Bool)
  (temp___do_toplevel_237 Bool)) Bool (=>
                                      (or (= temp___is_init_235 true)
                                      (bvule ((_ int2bv 8) 0) ((_ int2bv 8) 127)))
                                      (in_range1 temp___expr_238)))

(define-fun dynamic_invariant15 ((temp___expr_244 (_ BitVec 8))
  (temp___is_init_241 Bool) (temp___skip_constant_242 Bool)
  (temp___do_toplevel_243 Bool)) Bool true)

(declare-fun o () extended_address_type)

(declare-fun o1 () bits_7)

(declare-fun o2 () operation_type)

(declare-fun o3 () sub_index_type)

(declare-fun o4 () bits_6)

(declare-fun o5 () bits_6)

(declare-fun o6 () sub_index_type)

(declare-fun o7 () operation_type)

(declare-fun o8 () bits_7)

(declare-fun o9 () extended_address_type)

(declare-fun temp___751 () bits_6)

(declare-fun temp___7511 () sub_index_type)

(declare-fun temp___7512 () operation_type)

(declare-fun temp___7513 () bits_7)

(declare-fun temp___7514 () extended_address_type)

(declare-fun dw1000__register_driver__write_register__B_5__header__assume () bits_6)

(declare-fun dw1000__register_driver__write_register__B_5__header__assume1 () sub_index_type)

(declare-fun dw1000__register_driver__write_register__B_5__header__assume2 () operation_type)

(declare-fun dw1000__register_driver__write_register__B_5__header__assume3 () bits_7)

(declare-fun dw1000__register_driver__write_register__B_5__header__assume4 () extended_address_type)

(declare-fun o10 () bits_6)

(declare-fun o11 () sub_index_type)

(declare-fun o12 () operation_type)

(declare-fun o13 () bits_7)

(declare-fun o14 () extended_address_type)

(declare-fun o15 () (Array Int bits_8))

(declare-fun o16 () (Array Int bits_8))

(declare-fun o17 () t)

(define-fun o18 () us_rep1 (mk___rep1
                           (mk___split_fields1 o10 o11 o12 o13 o14)))

(define-fun dw1000__register_driver__write_register__B_5__header__assume5 () us_rep1 
  (mk___rep1
  (mk___split_fields1
  dw1000__register_driver__write_register__B_5__header__assume
  dw1000__register_driver__write_register__B_5__header__assume1
  dw1000__register_driver__write_register__B_5__header__assume2
  dw1000__register_driver__write_register__B_5__header__assume3
  dw1000__register_driver__write_register__B_5__header__assume4)))

;; H
  (assert (in_range register_id))

;; H
  (assert (in_range2 sub_address))

;; H
  (assert (dynamic_invariant2 data true false true))

;; H
  (assert (< 0 (length data)))

;; H
  (assert (not (= sub_address ((_ int2bv 16) 0))))

;; H
  (assert (bvult sub_address ((_ int2bv 16) 128)))

;; H
  (assert (= (to_rep6 o) 0))

;; H
  (assert (= (to_rep1 o1) ((_ extract 7 0) sub_address)))

;; H
  (assert (= (to_rep4 o2) 1))

;; H
  (assert (= (to_rep5 o3) 1))

;; H
  (assert (= (to_rep o4) register_id))

;; H
  (assert (= o4 o5))

;; H
  (assert (= o3 o6))

;; H
  (assert (= o2 o7))

;; H
  (assert (= o1 o8))

;; H
  (assert (= o o9))

;; H
  (assert (= temp___751 o5))

;; H
  (assert (= temp___7511 o6))

;; H
  (assert (= temp___7512 o7))

;; H
  (assert (= temp___7513 o8))

;; H
  (assert (= temp___7514 o9))

;; H
  (assert (and (= (to_rep5 temp___7511) 1) (= (to_rep6 temp___7514) 0)))

;; H
  (assert
  (= dw1000__register_driver__write_register__B_5__header__assume5 (mk___rep1
                                                                   (mk___split_fields1
                                                                   temp___751
                                                                   temp___7511
                                                                   temp___7512
                                                                   temp___7513
                                                                   temp___7514))))

;; H
  (assert
  (= dw1000__register_driver__write_register__B_5__header__assume5 header1))

;; H
  (assert
  (let ((temp___624 header1))
  (and
  (= (to_rep5
     (rec__dw1000__register_driver__short_indexed_header__sub_index
     (us_split_fields3 temp___624))) 1)
  (= (to_rep6
     (rec__dw1000__register_driver__short_indexed_header__extended_address
     (us_split_fields3 temp___624))) 0))))

;; H
  (assert
  (let ((temp___694 header1))
  (and
  (= (to_rep5
     (rec__dw1000__register_driver__short_indexed_header__sub_index
     (us_split_fields3 temp___694))) 1)
  (= (to_rep6
     (rec__dw1000__register_driver__short_indexed_header__extended_address
     (us_split_fields3 temp___694))) 0))))

;; H
  (assert (= o18 header1))

;; H
  (assert (= o15 (to_bytes1 o18)))

;; H
  (assert (= o15 o16))

;; H
  (assert (= (mk 1 2) o17))

(assert
;; WP_parameter_def
 ;; File "dw1000-register_driver.adb", line 45, characters 0-0
  (not (<= 1 (length (mk___t o16 o17)))))
(check-sat)
