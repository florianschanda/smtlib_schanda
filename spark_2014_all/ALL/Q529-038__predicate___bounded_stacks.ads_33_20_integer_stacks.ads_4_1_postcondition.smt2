;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort natural 0)

(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-const dummy natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(declare-fun to_rep (natural) Int)

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-sort element 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (element element) Bool)

(declare-const dummy1 element)

(declare-datatypes ()
((element__ref (mk_element__ref (element__content element)))))
(define-fun element__ref___projection ((a element__ref)) element (element__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_142 Int)
  (temp___is_init_139 Bool) (temp___skip_constant_140 Bool)
  (temp___do_toplevel_141 Bool)) Bool (=>
                                      (or (= temp___is_init_139 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range1 temp___expr_142)))

(declare-fun to_rep1 (element) Int)

(declare-fun of_rep1 (Int) element)

;; inversion_axiom
  (assert
  (forall ((x element))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x element)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int element))))))
(declare-fun slide ((Array Int element) Int Int) (Array Int element))

;; slide_eq
  (assert
  (forall ((a (Array Int element)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int element)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int element) Int Int (Array Int element) Int
  Int) (Array Int element))

;; concat_def
  (assert
  (forall ((a (Array Int element)) (b (Array Int element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (element Int) (Array Int element))

;; singleton_def
  (assert
  (forall ((v element))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int element)) (a__first Int) (a__last Int)
  (b (Array Int element)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                                                  (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int element)) (b (Array Int element)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                         (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int element) Int Int (Array Int element) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int element)) (b (Array Int element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int element)) (b (Array Int element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int element)) (b (Array Int element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-sort integer 0)

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-const dummy2 integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-fun to_rep2 (integer) Int)

(declare-fun of_rep2 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range2 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq3 (integer integer) Bool)

(declare-const dummy3 integer)

(declare-datatypes () ((t9s__ref (mk_t9s__ref (t9s__content integer)))))
(define-fun t9s__ref___projection ((a t9s__ref)) integer (t9s__content a))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range2 f)
     (=> (in_range2 l)
     (and (= (to_rep2 (first (mk f l))) f) (= (to_rep2 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range2 low)
                   (and (in_range2 high)
                   (=> (<= low high)
                   (and (dynamic_property range_first range_last low)
                   (dynamic_property range_first range_last high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int element))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int element) (elts a))

(define-fun of_array ((a (Array Int element)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep2 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep2 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-fun object__size ((Array Int element)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int element)) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment ((Array Int element)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int element))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int element))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int element))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep2 (first (rt x)))
                 (to_rep2 (last (rt x))) (elts y) (to_rep2 (first (rt y)))
                 (to_rep2 (last (rt y)))))

(declare-fun user_eq4 (us_t us_t) Bool)

(declare-const dummy4 us_t)

(declare-datatypes () ((t10s__ref (mk_t10s__ref (t10s__content us_t)))))
(define-fun t10s__ref___projection ((a t10s__ref)) us_t (t10s__content a))

(declare-sort positive 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (positive positive) Bool)

(declare-const dummy5 positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-fun to_rep3 (positive) Int)

(declare-fun of_rep3 (Int) positive)

;; inversion_axiom
  (assert
  (forall ((x positive))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x positive)) (! (in_range3 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-datatypes ()
((us_split_discrs
 (mk___split_discrs (rec__integer_stacks__stack__capacity positive)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) positive
  (rec__integer_stacks__stack__capacity a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__integer_stacks__stack__values us_t)(rec__integer_stacks__stack__top natural)(rec__ext__ us_private)))))
(define-fun us_split_fields_Values__projection ((a us_split_fields)) us_t
  (rec__integer_stacks__stack__values a))

(define-fun us_split_fields_Top__projection ((a us_split_fields)) natural
  (rec__integer_stacks__stack__top a))

(define-fun us_split_fields___projection ((a us_split_fields)) us_private
  (rec__ext__ a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(define-fun us_rep___3__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep3
                           (rec__integer_stacks__stack__capacity
                           (us_split_discrs1 a))) (to_rep3
                                                  (rec__integer_stacks__stack__capacity
                                                  (us_split_discrs1 b))))
                        (= (bool_eq1
                           (rec__integer_stacks__stack__values
                           (us_split_fields1 a))
                           (rec__integer_stacks__stack__values
                           (us_split_fields1 b))) true))
                        (= (to_rep
                           (rec__integer_stacks__stack__top
                           (us_split_fields1 a))) (to_rep
                                                  (rec__integer_stacks__stack__top
                                                  (us_split_fields1 b)))))
                   true false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-const us_tag Int)

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-const integer_stacks__stack__capacity__first__bit Int)

(declare-const integer_stacks__stack__capacity__last__bit Int)

(declare-const integer_stacks__stack__capacity__position Int)

;; integer_stacks__stack__capacity__first__bit_axiom
  (assert (<= 0 integer_stacks__stack__capacity__first__bit))

;; integer_stacks__stack__capacity__last__bit_axiom
  (assert
  (< integer_stacks__stack__capacity__first__bit integer_stacks__stack__capacity__last__bit))

;; integer_stacks__stack__capacity__position_axiom
  (assert (<= 0 integer_stacks__stack__capacity__position))

(declare-const integer_stacks__stack__values__first__bit Int)

(declare-const integer_stacks__stack__values__last__bit Int)

(declare-const integer_stacks__stack__values__position Int)

;; integer_stacks__stack__values__first__bit_axiom
  (assert (<= 0 integer_stacks__stack__values__first__bit))

;; integer_stacks__stack__values__last__bit_axiom
  (assert
  (< integer_stacks__stack__values__first__bit integer_stacks__stack__values__last__bit))

;; integer_stacks__stack__values__position_axiom
  (assert (<= 0 integer_stacks__stack__values__position))

(declare-const integer_stacks__stack__top__first__bit Int)

(declare-const integer_stacks__stack__top__last__bit Int)

(declare-const integer_stacks__stack__top__position Int)

;; integer_stacks__stack__top__first__bit_axiom
  (assert (<= 0 integer_stacks__stack__top__first__bit))

;; integer_stacks__stack__top__last__bit_axiom
  (assert
  (< integer_stacks__stack__top__first__bit integer_stacks__stack__top__last__bit))

;; integer_stacks__stack__top__position_axiom
  (assert (<= 0 integer_stacks__stack__top__position))

(declare-fun user_eq6 (us_rep us_rep) Bool)

(declare-const dummy6 us_rep)

(declare-datatypes () ((stack__ref (mk_stack__ref (stack__content us_rep)))))
(define-fun stack__ref___projection ((a stack__ref)) us_rep (stack__content
                                                            a))

(define-fun dynamic_invariant1 ((temp___expr_153 us_rep)
  (temp___is_init_150 Bool) (temp___skip_constant_151 Bool)
  (temp___do_toplevel_152 Bool)) Bool (and
                                      (=> (= temp___do_toplevel_152 true)
                                      (=> (= temp___is_init_150 true)
                                      (<= (to_rep
                                          (rec__integer_stacks__stack__top
                                          (us_split_fields1 temp___expr_153)))
                                      (to_rep3
                                      (rec__integer_stacks__stack__capacity
                                      (us_split_discrs1 temp___expr_153))))))
                                      (let ((temp___155 (rec__integer_stacks__stack__capacity
                                                        (us_split_discrs1
                                                        temp___expr_153))))
                                      (and (dynamic_property1 1
                                      (to_rep3 temp___155)
                                      (first1
                                      (rec__integer_stacks__stack__values
                                      (us_split_fields1 temp___expr_153)))
                                      (last1
                                      (rec__integer_stacks__stack__values
                                      (us_split_fields1 temp___expr_153))))
                                      (and
                                      (= (first1
                                         (rec__integer_stacks__stack__values
                                         (us_split_fields1 temp___expr_153))) 1)
                                      (= (last1
                                         (rec__integer_stacks__stack__values
                                         (us_split_fields1 temp___expr_153)))
                                      (to_rep3 temp___155)))))))

(define-fun dynamic_predicate ((temp___157 us_rep)) Bool (<= (to_rep
                                                             (rec__integer_stacks__stack__top
                                                             (us_split_fields1
                                                             temp___157)))
  (to_rep3
  (rec__integer_stacks__stack__capacity (us_split_discrs1 temp___157)))))

(declare-fun extent (us_rep) Int)

(declare-fun extent__function_guard (Int us_rep) Bool)

(declare-fun extent1 (Int us_rep) Int)

(declare-fun extent__function_guard1 (Int Int us_rep) Bool)

(declare-fun empty (us_rep) Bool)

(declare-fun empty__function_guard (Bool us_rep) Bool)

(declare-fun empty1 (Int us_rep) Bool)

(declare-fun empty__function_guard1 (Bool Int us_rep) Bool)

(declare-fun full (us_rep) Bool)

(declare-fun full__function_guard (Bool us_rep) Bool)

(declare-fun full1 (Int us_rep) Bool)

(declare-fun full__function_guard1 (Bool Int us_rep) Bool)

(declare-const this__split_discrs us_split_discrs)

(declare-const this__attr__tag Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const i13s us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(define-fun dynamic_invariant2 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range
                                     temp___expr_33)))

(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range3
                                     temp___expr_39)))

(define-fun dynamic_invariant4 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range2 temp___expr_15)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range4 ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Bool)

(declare-fun oeq (us_rep us_rep) Bool)

(declare-fun oeq__function_guard (Bool us_rep us_rep) Bool)

(declare-fun oeq1 (Int us_rep us_rep) Bool)

(declare-fun oeq__function_guard1 (Bool Int us_rep us_rep) Bool)

(define-fun dynamic_property2 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (integer integer) Bool)

(declare-const dummy7 integer)

(declare-datatypes ()
((tT23bP1__ref (mk_tT23bP1__ref (tT23bP1__content integer)))))
(define-fun tT23bP1__ref___projection ((a tT23bP1__ref)) integer (tT23bP1__content
                                                                 a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range2 f)
     (=> (in_range2 l)
     (and (= (to_rep2 (first2 (mk1 f l))) f)
     (= (to_rep2 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range2 low)
                   (and (in_range2 high)
                   (=> (<= low high)
                   (and (dynamic_property2 range_first range_last low)
                   (dynamic_property2 range_first range_last high))))))

(declare-datatypes ()
((us_t1 (mk___t1 (elts1 (Array Int element))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int element) (elts1 a))

(define-fun of_array1 ((a (Array Int element)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep2 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep2 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-const value__size2 Int)

(declare-fun object__size2 ((Array Int element)) Int)

(declare-const value__component__size1 Int)

(declare-fun object__component__size1 ((Array Int element)) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 ((Array Int element)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int element))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int element))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int element))) (<= 0 (object__alignment2 a))))

(define-fun bool_eq3 ((x us_t1)
  (y us_t1)) Bool (bool_eq (elts1 x) (to_rep2 (first2 (rt1 x)))
                  (to_rep2 (last2 (rt1 x))) (elts1 y)
                  (to_rep2 (first2 (rt1 y))) (to_rep2 (last2 (rt1 y)))))

(declare-fun user_eq8 (us_t1 us_t1) Bool)

(declare-const dummy8 us_t1)

(declare-datatypes () ((t23b__ref (mk_t23b__ref (t23b__content us_t1)))))
(define-fun t23b__ref___projection ((a t23b__ref)) us_t1 (t23b__content a))

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__integer_stacks__stack__values1 us_t1)(rec__integer_stacks__stack__top1 natural)(rec__ext__1 us_private)))))
(define-fun us_split_fields_Values__2__projection ((a us_split_fields2)) us_t1
  (rec__integer_stacks__stack__values1 a))

(define-fun us_split_fields_Top__2__projection ((a us_split_fields2)) natural
  (rec__integer_stacks__stack__top1 a))

(define-fun us_split_fields___2__projection ((a us_split_fields2)) us_private
  (rec__ext__1 a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1
 (mk___rep1
 (us_split_discrs2 us_split_discrs)(us_split_fields3 us_split_fields2)(attr__tag1 Int)))))
(define-fun us_rep___4__projection ((a us_rep1)) us_split_discrs (us_split_discrs2
                                                                 a))

(define-fun us_rep___5__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                  a))

(define-fun us_rep___6__projection ((a us_rep1)) Int (attr__tag1 a))

(declare-fun hide_ext__ (us_private) us_private)

(declare-fun extract__ext__ (us_private) us_private)

(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a)
                                         (mk___split_fields
                                         (let ((temp___134 (rec__integer_stacks__stack__values1
                                                           (us_split_fields3
                                                           a))))
                                         (of_array (to_array1 temp___134)
                                         (first3 temp___134)
                                         (last3 temp___134)))
                                         (rec__integer_stacks__stack__top1
                                         (us_split_fields3 a))
                                         (hide_ext__
                                         (rec__ext__1 (us_split_fields3 a))))
                                         (attr__tag1 a)))

(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r)
                                         (mk___split_fields1
                                         (let ((temp___133 (rec__integer_stacks__stack__values
                                                           (us_split_fields1
                                                           r))))
                                         (of_array1 (to_array temp___133)
                                         (first1 temp___133)
                                         (last1 temp___133)))
                                         (rec__integer_stacks__stack__top
                                         (us_split_fields1 r))
                                         (extract__ext__
                                         (rec__ext__ (us_split_fields1 r))))
                                         (attr__tag r)))

(define-fun bool_eq4 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (= (to_rep3
                            (rec__integer_stacks__stack__capacity
                            (us_split_discrs2 a))) (to_rep3
                                                   (rec__integer_stacks__stack__capacity
                                                   (us_split_discrs2 b))))
                         (= (bool_eq3
                            (rec__integer_stacks__stack__values1
                            (us_split_fields3 a))
                            (rec__integer_stacks__stack__values1
                            (us_split_fields3 b))) true))
                         (= (to_rep
                            (rec__integer_stacks__stack__top1
                            (us_split_fields3 a))) (to_rep
                                                   (rec__integer_stacks__stack__top1
                                                   (us_split_fields3 b)))))
                    true false))

(declare-const us_tag1 Int)

(define-fun in_range5 ((rec__integer_stacks__stack__capacity1 Int)
  (a us_rep)) Bool (= rec__integer_stacks__stack__capacity1 (to_rep3
                                                            (rec__integer_stacks__stack__capacity
                                                            (us_split_discrs1
                                                            a)))))

(declare-const value__size3 Int)

(declare-fun object__size3 (us_rep1) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))

(declare-const integer_stacks__stack__capacity__first__bit1 Int)

(declare-const integer_stacks__stack__capacity__last__bit1 Int)

(declare-const integer_stacks__stack__capacity__position1 Int)

;; integer_stacks__stack__capacity__first__bit_axiom
  (assert (<= 0 integer_stacks__stack__capacity__first__bit1))

;; integer_stacks__stack__capacity__last__bit_axiom
  (assert
  (< integer_stacks__stack__capacity__first__bit1 integer_stacks__stack__capacity__last__bit1))

;; integer_stacks__stack__capacity__position_axiom
  (assert (<= 0 integer_stacks__stack__capacity__position1))

(declare-const integer_stacks__stack__values__first__bit1 Int)

(declare-const integer_stacks__stack__values__last__bit1 Int)

(declare-const integer_stacks__stack__values__position1 Int)

;; integer_stacks__stack__values__first__bit_axiom
  (assert (<= 0 integer_stacks__stack__values__first__bit1))

;; integer_stacks__stack__values__last__bit_axiom
  (assert
  (< integer_stacks__stack__values__first__bit1 integer_stacks__stack__values__last__bit1))

;; integer_stacks__stack__values__position_axiom
  (assert (<= 0 integer_stacks__stack__values__position1))

(declare-const integer_stacks__stack__top__first__bit1 Int)

(declare-const integer_stacks__stack__top__last__bit1 Int)

(declare-const integer_stacks__stack__top__position1 Int)

;; integer_stacks__stack__top__first__bit_axiom
  (assert (<= 0 integer_stacks__stack__top__first__bit1))

;; integer_stacks__stack__top__last__bit_axiom
  (assert
  (< integer_stacks__stack__top__first__bit1 integer_stacks__stack__top__last__bit1))

;; integer_stacks__stack__top__position_axiom
  (assert (<= 0 integer_stacks__stack__top__position1))

(declare-fun user_eq9 (us_rep1 us_rep1) Bool)

(declare-const dummy9 us_rep1)

(declare-datatypes () ((t21b__ref (mk_t21b__ref (t21b__content us_rep1)))))
(define-fun t21b__ref___projection ((a t21b__ref)) us_rep1 (t21b__content a))

(define-fun dynamic_property4 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq10 (integer integer) Bool)

(declare-const dummy10 integer)

(declare-datatypes ()
((tT28bP1__ref (mk_tT28bP1__ref (tT28bP1__content integer)))))
(define-fun tT28bP1__ref___projection ((a tT28bP1__ref)) integer (tT28bP1__content
                                                                 a))

(declare-sort t2 0)

(declare-fun first4 (t2) integer)

(declare-fun last4 (t2) integer)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range2 f)
     (=> (in_range2 l)
     (and (= (to_rep2 (first4 (mk2 f l))) f)
     (= (to_rep2 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)) )))

(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range2 low)
                   (and (in_range2 high)
                   (=> (<= low high)
                   (and (dynamic_property4 range_first range_last low)
                   (dynamic_property4 range_first range_last high))))))

(declare-datatypes ()
((us_t2 (mk___t2 (elts2 (Array Int element))(rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int element) (elts2 a))

(define-fun of_array2 ((a (Array Int element)) (f Int)
  (l Int)) us_t2 (mk___t2 a (mk2 f l)))

(define-fun first5 ((a us_t2)) Int (to_rep2 (first4 (rt2 a))))

(define-fun last5 ((a us_t2)) Int (to_rep2 (last4 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a))
                                    (+ (- (last5 a) (first5 a)) 1) 0))

(declare-const value__size4 Int)

(declare-fun object__size4 ((Array Int element)) Int)

(declare-const value__component__size2 Int)

(declare-fun object__component__size2 ((Array Int element)) Int)

(declare-const value__alignment4 Int)

(declare-fun object__alignment4 ((Array Int element)) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a (Array Int element))) (<= 0 (object__size4 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int element))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a (Array Int element))) (<= 0 (object__alignment4 a))))

(define-fun bool_eq5 ((x us_t2)
  (y us_t2)) Bool (bool_eq (elts2 x) (to_rep2 (first4 (rt2 x)))
                  (to_rep2 (last4 (rt2 x))) (elts2 y)
                  (to_rep2 (first4 (rt2 y))) (to_rep2 (last4 (rt2 y)))))

(declare-fun user_eq11 (us_t2 us_t2) Bool)

(declare-const dummy11 us_t2)

(declare-datatypes () ((t28b__ref (mk_t28b__ref (t28b__content us_t2)))))
(define-fun t28b__ref___projection ((a t28b__ref)) us_t2 (t28b__content a))

(declare-datatypes ()
((us_split_fields4
 (mk___split_fields2
 (rec__integer_stacks__stack__values2 us_t2)(rec__integer_stacks__stack__top2 natural)(rec__ext__2 us_private)))))
(define-fun us_split_fields_Values__3__projection ((a us_split_fields4)) us_t2
  (rec__integer_stacks__stack__values2 a))

(define-fun us_split_fields_Top__3__projection ((a us_split_fields4)) natural
  (rec__integer_stacks__stack__top2 a))

(define-fun us_split_fields___3__projection ((a us_split_fields4)) us_private
  (rec__ext__2 a))

(declare-datatypes ()
((us_split_fields__ref2
 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2
 (mk___rep2
 (us_split_discrs3 us_split_discrs)(us_split_fields5 us_split_fields4)(attr__tag2 Int)))))
(define-fun us_rep___7__projection ((a us_rep2)) us_split_discrs (us_split_discrs3
                                                                 a))

(define-fun us_rep___8__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                  a))

(define-fun us_rep___9__projection ((a us_rep2)) Int (attr__tag2 a))

(declare-fun hide_ext__1 (us_private) us_private)

(declare-fun extract__ext__1 (us_private) us_private)

(define-fun to_base1 ((a us_rep2)) us_rep (mk___rep (us_split_discrs3 a)
                                          (mk___split_fields
                                          (let ((temp___136 (rec__integer_stacks__stack__values2
                                                            (us_split_fields5
                                                            a))))
                                          (of_array (to_array2 temp___136)
                                          (first5 temp___136)
                                          (last5 temp___136)))
                                          (rec__integer_stacks__stack__top2
                                          (us_split_fields5 a))
                                          (hide_ext__1
                                          (rec__ext__2 (us_split_fields5 a))))
                                          (attr__tag2 a)))

(define-fun of_base1 ((r us_rep)) us_rep2 (mk___rep2 (us_split_discrs1 r)
                                          (mk___split_fields2
                                          (let ((temp___135 (rec__integer_stacks__stack__values
                                                            (us_split_fields1
                                                            r))))
                                          (of_array2 (to_array temp___135)
                                          (first1 temp___135)
                                          (last1 temp___135)))
                                          (rec__integer_stacks__stack__top
                                          (us_split_fields1 r))
                                          (extract__ext__1
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq6 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (= (to_rep3
                            (rec__integer_stacks__stack__capacity
                            (us_split_discrs3 a))) (to_rep3
                                                   (rec__integer_stacks__stack__capacity
                                                   (us_split_discrs3 b))))
                         (= (bool_eq5
                            (rec__integer_stacks__stack__values2
                            (us_split_fields5 a))
                            (rec__integer_stacks__stack__values2
                            (us_split_fields5 b))) true))
                         (= (to_rep
                            (rec__integer_stacks__stack__top2
                            (us_split_fields5 a))) (to_rep
                                                   (rec__integer_stacks__stack__top2
                                                   (us_split_fields5 b)))))
                    true false))

(declare-const us_tag2 Int)

(define-fun in_range6 ((rec__integer_stacks__stack__capacity1 Int)
  (a us_rep)) Bool (= rec__integer_stacks__stack__capacity1 (to_rep3
                                                            (rec__integer_stacks__stack__capacity
                                                            (us_split_discrs1
                                                            a)))))

(declare-const value__size5 Int)

(declare-fun object__size5 (us_rep2) Int)

(declare-const value__alignment5 Int)

(declare-fun object__alignment5 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))

(declare-const integer_stacks__stack__capacity__first__bit2 Int)

(declare-const integer_stacks__stack__capacity__last__bit2 Int)

(declare-const integer_stacks__stack__capacity__position2 Int)

;; integer_stacks__stack__capacity__first__bit_axiom
  (assert (<= 0 integer_stacks__stack__capacity__first__bit2))

;; integer_stacks__stack__capacity__last__bit_axiom
  (assert
  (< integer_stacks__stack__capacity__first__bit2 integer_stacks__stack__capacity__last__bit2))

;; integer_stacks__stack__capacity__position_axiom
  (assert (<= 0 integer_stacks__stack__capacity__position2))

(declare-const integer_stacks__stack__values__first__bit2 Int)

(declare-const integer_stacks__stack__values__last__bit2 Int)

(declare-const integer_stacks__stack__values__position2 Int)

;; integer_stacks__stack__values__first__bit_axiom
  (assert (<= 0 integer_stacks__stack__values__first__bit2))

;; integer_stacks__stack__values__last__bit_axiom
  (assert
  (< integer_stacks__stack__values__first__bit2 integer_stacks__stack__values__last__bit2))

;; integer_stacks__stack__values__position_axiom
  (assert (<= 0 integer_stacks__stack__values__position2))

(declare-const integer_stacks__stack__top__first__bit2 Int)

(declare-const integer_stacks__stack__top__last__bit2 Int)

(declare-const integer_stacks__stack__top__position2 Int)

;; integer_stacks__stack__top__first__bit_axiom
  (assert (<= 0 integer_stacks__stack__top__first__bit2))

;; integer_stacks__stack__top__last__bit_axiom
  (assert
  (< integer_stacks__stack__top__first__bit2 integer_stacks__stack__top__last__bit2))

;; integer_stacks__stack__top__position_axiom
  (assert (<= 0 integer_stacks__stack__top__position2))

(declare-fun user_eq12 (us_rep2 us_rep2) Bool)

(declare-const dummy12 us_rep2)

(declare-datatypes () ((s27b__ref (mk_s27b__ref (s27b__content us_rep2)))))
(define-fun s27b__ref___projection ((a s27b__ref)) us_rep2 (s27b__content a))

(define-fun dynamic_property6 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq13 (integer integer) Bool)

(declare-const dummy13 integer)

(declare-datatypes ()
((tT26bP1__ref (mk_tT26bP1__ref (tT26bP1__content integer)))))
(define-fun tT26bP1__ref___projection ((a tT26bP1__ref)) integer (tT26bP1__content
                                                                 a))

(declare-sort t3 0)

(declare-fun first6 (t3) integer)

(declare-fun last6 (t3) integer)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range2 f)
     (=> (in_range2 l)
     (and (= (to_rep2 (first6 (mk3 f l))) f)
     (= (to_rep2 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)) )))

(define-fun dynamic_property7 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range2 low)
                   (and (in_range2 high)
                   (=> (<= low high)
                   (and (dynamic_property6 range_first range_last low)
                   (dynamic_property6 range_first range_last high))))))

(declare-datatypes ()
((us_t3 (mk___t3 (elts3 (Array Int element))(rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int element) (elts3 a))

(define-fun of_array3 ((a (Array Int element)) (f Int)
  (l Int)) us_t3 (mk___t3 a (mk3 f l)))

(define-fun first7 ((a us_t3)) Int (to_rep2 (first6 (rt3 a))))

(define-fun last7 ((a us_t3)) Int (to_rep2 (last6 (rt3 a))))

(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a))
                                    (+ (- (last7 a) (first7 a)) 1) 0))

(declare-const value__size6 Int)

(declare-fun object__size6 ((Array Int element)) Int)

(declare-const value__component__size3 Int)

(declare-fun object__component__size3 ((Array Int element)) Int)

(declare-const value__alignment6 Int)

(declare-fun object__alignment6 ((Array Int element)) Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (forall ((a (Array Int element))) (<= 0 (object__size6 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int element))) (<= 0 (object__component__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

;; object__alignment_axiom
  (assert (forall ((a (Array Int element))) (<= 0 (object__alignment6 a))))

(define-fun bool_eq7 ((x us_t3)
  (y us_t3)) Bool (bool_eq (elts3 x) (to_rep2 (first6 (rt3 x)))
                  (to_rep2 (last6 (rt3 x))) (elts3 y)
                  (to_rep2 (first6 (rt3 y))) (to_rep2 (last6 (rt3 y)))))

(declare-fun user_eq14 (us_t3 us_t3) Bool)

(declare-const dummy14 us_t3)

(declare-datatypes () ((t26b__ref (mk_t26b__ref (t26b__content us_t3)))))
(define-fun t26b__ref___projection ((a t26b__ref)) us_t3 (t26b__content a))

(declare-datatypes ()
((us_split_fields6
 (mk___split_fields3
 (rec__integer_stacks__stack__values3 us_t3)(rec__integer_stacks__stack__top3 natural)(rec__ext__3 us_private)))))
(define-fun us_split_fields_Values__4__projection ((a us_split_fields6)) us_t3
  (rec__integer_stacks__stack__values3 a))

(define-fun us_split_fields_Top__4__projection ((a us_split_fields6)) natural
  (rec__integer_stacks__stack__top3 a))

(define-fun us_split_fields___4__projection ((a us_split_fields6)) us_private
  (rec__ext__3 a))

(declare-datatypes ()
((us_split_fields__ref3
 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref3)) us_split_fields6
  (us_split_fields__content3 a))

(declare-datatypes ()
((us_rep3
 (mk___rep3
 (us_split_discrs4 us_split_discrs)(us_split_fields7 us_split_fields6)(attr__tag3 Int)))))
(define-fun us_rep___10__projection ((a us_rep3)) us_split_discrs (us_split_discrs4
                                                                  a))

(define-fun us_rep___11__projection ((a us_rep3)) us_split_fields6 (us_split_fields7
                                                                   a))

(define-fun us_rep___12__projection ((a us_rep3)) Int (attr__tag3 a))

(declare-fun hide_ext__2 (us_private) us_private)

(declare-fun extract__ext__2 (us_private) us_private)

(define-fun to_base2 ((a us_rep3)) us_rep (mk___rep (us_split_discrs4 a)
                                          (mk___split_fields
                                          (let ((temp___138 (rec__integer_stacks__stack__values3
                                                            (us_split_fields7
                                                            a))))
                                          (of_array (to_array3 temp___138)
                                          (first7 temp___138)
                                          (last7 temp___138)))
                                          (rec__integer_stacks__stack__top3
                                          (us_split_fields7 a))
                                          (hide_ext__2
                                          (rec__ext__3 (us_split_fields7 a))))
                                          (attr__tag3 a)))

(define-fun of_base2 ((r us_rep)) us_rep3 (mk___rep3 (us_split_discrs1 r)
                                          (mk___split_fields3
                                          (let ((temp___137 (rec__integer_stacks__stack__values
                                                            (us_split_fields1
                                                            r))))
                                          (of_array3 (to_array temp___137)
                                          (first1 temp___137)
                                          (last1 temp___137)))
                                          (rec__integer_stacks__stack__top
                                          (us_split_fields1 r))
                                          (extract__ext__2
                                          (rec__ext__ (us_split_fields1 r))))
                                          (attr__tag r)))

(define-fun bool_eq8 ((a us_rep3)
  (b us_rep3)) Bool (ite (and
                         (and
                         (= (to_rep3
                            (rec__integer_stacks__stack__capacity
                            (us_split_discrs4 a))) (to_rep3
                                                   (rec__integer_stacks__stack__capacity
                                                   (us_split_discrs4 b))))
                         (= (bool_eq7
                            (rec__integer_stacks__stack__values3
                            (us_split_fields7 a))
                            (rec__integer_stacks__stack__values3
                            (us_split_fields7 b))) true))
                         (= (to_rep
                            (rec__integer_stacks__stack__top3
                            (us_split_fields7 a))) (to_rep
                                                   (rec__integer_stacks__stack__top3
                                                   (us_split_fields7 b)))))
                    true false))

(declare-const us_tag3 Int)

(define-fun in_range7 ((rec__integer_stacks__stack__capacity1 Int)
  (a us_rep)) Bool (= rec__integer_stacks__stack__capacity1 (to_rep3
                                                            (rec__integer_stacks__stack__capacity
                                                            (us_split_discrs1
                                                            a)))))

(declare-const value__size7 Int)

(declare-fun object__size7 (us_rep3) Int)

(declare-const value__alignment7 Int)

(declare-fun object__alignment7 (us_rep3) Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__size7 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment7))

;; object__alignment_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__alignment7 a))))

(declare-const integer_stacks__stack__capacity__first__bit3 Int)

(declare-const integer_stacks__stack__capacity__last__bit3 Int)

(declare-const integer_stacks__stack__capacity__position3 Int)

;; integer_stacks__stack__capacity__first__bit_axiom
  (assert (<= 0 integer_stacks__stack__capacity__first__bit3))

;; integer_stacks__stack__capacity__last__bit_axiom
  (assert
  (< integer_stacks__stack__capacity__first__bit3 integer_stacks__stack__capacity__last__bit3))

;; integer_stacks__stack__capacity__position_axiom
  (assert (<= 0 integer_stacks__stack__capacity__position3))

(declare-const integer_stacks__stack__values__first__bit3 Int)

(declare-const integer_stacks__stack__values__last__bit3 Int)

(declare-const integer_stacks__stack__values__position3 Int)

;; integer_stacks__stack__values__first__bit_axiom
  (assert (<= 0 integer_stacks__stack__values__first__bit3))

;; integer_stacks__stack__values__last__bit_axiom
  (assert
  (< integer_stacks__stack__values__first__bit3 integer_stacks__stack__values__last__bit3))

;; integer_stacks__stack__values__position_axiom
  (assert (<= 0 integer_stacks__stack__values__position3))

(declare-const integer_stacks__stack__top__first__bit3 Int)

(declare-const integer_stacks__stack__top__last__bit3 Int)

(declare-const integer_stacks__stack__top__position3 Int)

;; integer_stacks__stack__top__first__bit_axiom
  (assert (<= 0 integer_stacks__stack__top__first__bit3))

;; integer_stacks__stack__top__last__bit_axiom
  (assert
  (< integer_stacks__stack__top__first__bit3 integer_stacks__stack__top__last__bit3))

;; integer_stacks__stack__top__position_axiom
  (assert (<= 0 integer_stacks__stack__top__position3))

(declare-fun user_eq15 (us_rep3 us_rep3) Bool)

(declare-const dummy15 us_rep3)

(declare-datatypes () ((s25b__ref (mk_s25b__ref (s25b__content us_rep3)))))
(define-fun s25b__ref___projection ((a s25b__ref)) us_rep3 (s25b__content a))

;; oeq__post_axiom
  (assert true)

;; oeq__post__dispatch_axiom
  (assert true)

;; integer_stacks__stack__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (= (to_int1 (oeq left right)) (to_int1 (oeq1 us_tag left right))) :pattern (
  (oeq1 us_tag left right)) )))

;; integer_stacks__reset__T21b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (= (to_int1 (oeq left right)) (to_int1 (oeq1 us_tag1 left right))) :pattern (
  (oeq1 us_tag1 left right)) )))

;; integer_stacks__Oeq__S25b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (= (to_int1 (oeq left right)) (to_int1 (oeq1 us_tag3 left right))) :pattern (
  (oeq1 us_tag3 left right)) )))

;; integer_stacks__Oeq__S27b__compat_axiom
  (assert
  (forall ((left us_rep) (right us_rep))
  (! (= (to_int1 (oeq left right)) (to_int1 (oeq1 us_tag2 left right))) :pattern (
  (oeq1 us_tag2 left right)) )))

;; extent__post_axiom
  (assert
  (forall ((this us_rep))
  (! (=> (dynamic_invariant1 this true true true) (dynamic_invariant2
     (extent this) true false true)) :pattern ((extent this)) )))

;; extent__post__dispatch_axiom
  (assert
  (forall ((attr__tag4 Int))
  (forall ((this us_rep))
  (! (=> (dynamic_invariant1 this true true true) (dynamic_invariant2
     (extent1 attr__tag4 this) true false true)) :pattern ((extent1
                                                           attr__tag4 this)) ))))

;; integer_stacks__stack__compat_axiom
  (assert
  (forall ((this us_rep))
  (! (= (extent this) (extent1 us_tag this)) :pattern ((extent1 us_tag this)) )))

;; integer_stacks__reset__T21b__compat_axiom
  (assert
  (forall ((this us_rep))
  (! (= (extent this) (extent1 us_tag1 this)) :pattern ((extent1 us_tag1
                                                        this)) )))

;; integer_stacks__Oeq__S25b__compat_axiom
  (assert
  (forall ((this us_rep))
  (! (= (extent this) (extent1 us_tag3 this)) :pattern ((extent1 us_tag3
                                                        this)) )))

;; integer_stacks__Oeq__S27b__compat_axiom
  (assert
  (forall ((this us_rep))
  (! (= (extent this) (extent1 us_tag2 this)) :pattern ((extent1 us_tag2
                                                        this)) )))

;; extent__def_axiom
  (assert
  (forall ((this us_rep))
  (! (=> (dynamic_invariant1 this true true true)
     (= (extent this) (to_rep
                      (rec__integer_stacks__stack__top
                      (us_split_fields1 this))))) :pattern ((extent this)) )))

;; empty__post_axiom
  (assert true)

;; empty__post__dispatch_axiom
  (assert true)

;; integer_stacks__stack__compat_axiom
  (assert
  (forall ((this us_rep))
  (! (= (to_int1 (empty this)) (to_int1 (empty1 us_tag this))) :pattern (
  (empty1 us_tag this)) )))

;; integer_stacks__reset__T21b__compat_axiom
  (assert
  (forall ((this us_rep))
  (! (= (to_int1 (empty this)) (to_int1 (empty1 us_tag1 this))) :pattern (
  (empty1 us_tag1 this)) )))

;; integer_stacks__Oeq__S25b__compat_axiom
  (assert
  (forall ((this us_rep))
  (! (= (to_int1 (empty this)) (to_int1 (empty1 us_tag3 this))) :pattern (
  (empty1 us_tag3 this)) )))

;; integer_stacks__Oeq__S27b__compat_axiom
  (assert
  (forall ((this us_rep))
  (! (= (to_int1 (empty this)) (to_int1 (empty1 us_tag2 this))) :pattern (
  (empty1 us_tag2 this)) )))

;; empty__def_axiom
  (assert
  (forall ((this us_rep))
  (! (= (= (empty this) true)
     (= (to_rep (rec__integer_stacks__stack__top (us_split_fields1 this))) 0)) :pattern (
  (empty this)) )))

;; full__post_axiom
  (assert true)

;; full__post__dispatch_axiom
  (assert true)

;; integer_stacks__stack__compat_axiom
  (assert
  (forall ((this us_rep))
  (! (= (to_int1 (full this)) (to_int1 (full1 us_tag this))) :pattern (
  (full1 us_tag this)) )))

;; integer_stacks__reset__T21b__compat_axiom
  (assert
  (forall ((this us_rep))
  (! (= (to_int1 (full this)) (to_int1 (full1 us_tag1 this))) :pattern (
  (full1 us_tag1 this)) )))

;; integer_stacks__Oeq__S25b__compat_axiom
  (assert
  (forall ((this us_rep))
  (! (= (to_int1 (full this)) (to_int1 (full1 us_tag3 this))) :pattern (
  (full1 us_tag3 this)) )))

;; integer_stacks__Oeq__S27b__compat_axiom
  (assert
  (forall ((this us_rep))
  (! (= (to_int1 (full this)) (to_int1 (full1 us_tag2 this))) :pattern (
  (full1 us_tag2 this)) )))

;; full__def_axiom
  (assert
  (forall ((this us_rep))
  (! (= (= (full this) true)
     (= (to_rep (rec__integer_stacks__stack__top (us_split_fields1 this)))
     (to_rep3 (rec__integer_stacks__stack__capacity (us_split_discrs1 this))))) :pattern (
  (full this)) )))

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep1) (b us_rep1))
  (! (= (user_eq9 a b) (oeq (to_base a) (to_base b))) :pattern ((user_eq9 a
                                                                b)) )))

(define-fun dynamic_predicate1 ((temp___213 us_rep1)) Bool (<= (to_rep
                                                               (rec__integer_stacks__stack__top
                                                               (us_split_fields1
                                                               (to_base
                                                               temp___213))))
  (to_rep3
  (rec__integer_stacks__stack__capacity
  (us_split_discrs1 (to_base temp___213))))))

(declare-const left us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep3) (b us_rep3))
  (! (= (user_eq15 a b) (oeq (to_base2 a) (to_base2 b))) :pattern ((user_eq15
                                                                   a b)) )))

(define-fun dynamic_invariant5 ((temp___expr_234 us_rep3)
  (temp___is_init_231 Bool) (temp___skip_constant_232 Bool)
  (temp___do_toplevel_233 Bool)) Bool (and
                                      (and
                                      (=>
                                      (not (= temp___skip_constant_232 true))
                                      (in_range7
                                      (to_rep3
                                      (rec__integer_stacks__stack__capacity
                                      (us_split_discrs1 left)))
                                      (to_base2 temp___expr_234)))
                                      (=> (= temp___do_toplevel_233 true)
                                      (=> (= temp___is_init_231 true)
                                      (<= (to_rep
                                          (rec__integer_stacks__stack__top
                                          (us_split_fields1
                                          (to_base2 temp___expr_234))))
                                      (to_rep3
                                      (rec__integer_stacks__stack__capacity
                                      (us_split_discrs1
                                      (to_base2 temp___expr_234))))))))
                                      (and (dynamic_property7 1
                                      (to_rep3
                                      (rec__integer_stacks__stack__capacity
                                      (us_split_discrs1 left)))
                                      (first7
                                      (rec__integer_stacks__stack__values3
                                      (us_split_fields7 temp___expr_234)))
                                      (last7
                                      (rec__integer_stacks__stack__values3
                                      (us_split_fields7 temp___expr_234))))
                                      (and
                                      (= (first7
                                         (rec__integer_stacks__stack__values3
                                         (us_split_fields7 temp___expr_234))) 1)
                                      (= (last7
                                         (rec__integer_stacks__stack__values3
                                         (us_split_fields7 temp___expr_234)))
                                      (to_rep3
                                      (rec__integer_stacks__stack__capacity
                                      (us_split_discrs1 left))))))))

(define-fun default_initial_assumption ((temp___expr_238 us_rep3)
  (temp___skip_top_level_239 Bool)) Bool (and
                                         (and
                                         (= (attr__tag3 temp___expr_238)
                                         us_tag3)
                                         (and
                                         (= (to_rep3
                                            (rec__integer_stacks__stack__capacity
                                            (us_split_discrs4
                                            temp___expr_238))) (to_rep3
                                                               (rec__integer_stacks__stack__capacity
                                                               (us_split_discrs1
                                                               left))))
                                         (= (to_rep
                                            (rec__integer_stacks__stack__top3
                                            (us_split_fields7
                                            temp___expr_238))) 0)))
                                         (=>
                                         (not
                                         (= temp___skip_top_level_239 true))
                                         (= (empty
                                            (to_base2 temp___expr_238)) true))))

(define-fun dynamic_predicate2 ((temp___245 us_rep3)) Bool (<= (to_rep
                                                               (rec__integer_stacks__stack__top
                                                               (us_split_fields1
                                                               (to_base2
                                                               temp___245))))
  (to_rep3
  (rec__integer_stacks__stack__capacity
  (us_split_discrs1 (to_base2 temp___245))))))

(declare-const right us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

;; user_eq__def_axiom
  (assert
  (forall ((a us_rep2) (b us_rep2))
  (! (= (user_eq12 a b) (oeq (to_base1 a) (to_base1 b))) :pattern ((user_eq12
                                                                   a b)) )))

(define-fun dynamic_invariant6 ((temp___expr_218 us_rep2)
  (temp___is_init_215 Bool) (temp___skip_constant_216 Bool)
  (temp___do_toplevel_217 Bool)) Bool (and
                                      (and
                                      (=>
                                      (not (= temp___skip_constant_216 true))
                                      (in_range6
                                      (to_rep3
                                      (rec__integer_stacks__stack__capacity
                                      (us_split_discrs1 right)))
                                      (to_base1 temp___expr_218)))
                                      (=> (= temp___do_toplevel_217 true)
                                      (=> (= temp___is_init_215 true)
                                      (<= (to_rep
                                          (rec__integer_stacks__stack__top
                                          (us_split_fields1
                                          (to_base1 temp___expr_218))))
                                      (to_rep3
                                      (rec__integer_stacks__stack__capacity
                                      (us_split_discrs1
                                      (to_base1 temp___expr_218))))))))
                                      (and (dynamic_property5 1
                                      (to_rep3
                                      (rec__integer_stacks__stack__capacity
                                      (us_split_discrs1 right)))
                                      (first5
                                      (rec__integer_stacks__stack__values2
                                      (us_split_fields5 temp___expr_218)))
                                      (last5
                                      (rec__integer_stacks__stack__values2
                                      (us_split_fields5 temp___expr_218))))
                                      (and
                                      (= (first5
                                         (rec__integer_stacks__stack__values2
                                         (us_split_fields5 temp___expr_218))) 1)
                                      (= (last5
                                         (rec__integer_stacks__stack__values2
                                         (us_split_fields5 temp___expr_218)))
                                      (to_rep3
                                      (rec__integer_stacks__stack__capacity
                                      (us_split_discrs1 right))))))))

(define-fun default_initial_assumption1 ((temp___expr_222 us_rep2)
  (temp___skip_top_level_223 Bool)) Bool (and
                                         (and
                                         (= (attr__tag2 temp___expr_222)
                                         us_tag2)
                                         (and
                                         (= (to_rep3
                                            (rec__integer_stacks__stack__capacity
                                            (us_split_discrs3
                                            temp___expr_222))) (to_rep3
                                                               (rec__integer_stacks__stack__capacity
                                                               (us_split_discrs1
                                                               right))))
                                         (= (to_rep
                                            (rec__integer_stacks__stack__top2
                                            (us_split_fields5
                                            temp___expr_222))) 0)))
                                         (=>
                                         (not
                                         (= temp___skip_top_level_223 true))
                                         (= (empty
                                            (to_base1 temp___expr_222)) true))))

(define-fun dynamic_predicate3 ((temp___229 us_rep2)) Bool (<= (to_rep
                                                               (rec__integer_stacks__stack__top
                                                               (us_split_fields1
                                                               (to_base1
                                                               temp___229))))
  (to_rep3
  (rec__integer_stacks__stack__capacity
  (us_split_discrs1 (to_base1 temp___229))))))

(declare-const this__split_fields (Array Int element))

(declare-const this__split_fields1 t)

(declare-const this__split_fields2 natural)

(declare-const this__split_fields3 us_private)

(declare-const item Int)

(declare-const o Int)

(declare-const o1 element)

(declare-const o2 Int)

(declare-const o3 Int)

(declare-const o4 natural)

(declare-const o5 (Array Int element))

(declare-const o6 t)

(declare-const o7 natural)

(declare-const o8 us_private)

(declare-const temp___298 positive)

(declare-const temp___2981 (Array Int element))

(declare-const temp___2982 t)

(declare-const temp___2983 natural)

(declare-const temp___2984 us_private)

(declare-const temp___2985 Int)

(declare-const temp___299 positive)

(declare-const temp___2991 (Array Int element))

(declare-const temp___2992 t)

(declare-const temp___2993 natural)

(declare-const temp___2994 us_private)

(declare-const temp___2995 Int)

(declare-const result Int)

(declare-const item1 Int)

(declare-const result1 (Array Int element))

(declare-const result2 t)

(declare-const result3 natural)

(declare-const result4 us_private)

(declare-const this__split_fields4 (Array Int element))

(declare-const this__split_fields5 t)

(declare-const this__split_fields6 natural)

(declare-const this__split_fields7 us_private)

(declare-const this__split_fields8 (Array Int element))

(declare-const this__split_fields9 t)

(declare-const this__split_fields10 natural)

(declare-const this__split_fields11 us_private)

(declare-const item2 int__ref)

(declare-const this__split_fields12 us_split_fields)

(declare-const item3 Int)

;; H
  (assert (dynamic_invariant1 i13s true false true))

;; H
  (assert (dynamic_invariant1
  (mk___rep this__split_discrs
  (mk___split_fields (mk___t this__split_fields this__split_fields1)
  this__split_fields2 this__split_fields3) this__attr__tag) true false true))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 item)))

;; H
  (assert
  (not
  (= (empty
     (mk___rep this__split_discrs
     (mk___split_fields (mk___t this__split_fields this__split_fields1)
     this__split_fields2 this__split_fields3) this__attr__tag)) true)))

;; H
  (assert
  (and
  (<= (to_rep2 (first this__split_fields1)) (to_rep this__split_fields2))
  (<= (to_rep this__split_fields2) (to_rep2 (last this__split_fields1)))))

;; H
  (assert (= o (to_rep this__split_fields2)))

;; H
  (assert (= o1 (select this__split_fields o)))

;; H
  (assert (= o2 (to_rep1 o1)))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref item)))

;; H
  (assert (= item1 o2))

;; H
  (assert
  (and (= o3 (- (to_rep this__split_fields2) 1)) (in_range
  (- (to_rep this__split_fields2) 1))))

;; H
  (assert (= (to_rep o4) o3))

;; H
  (assert (= this__split_fields o5))

;; H
  (assert (= this__split_fields1 o6))

;; H
  (assert (= o4 o7))

;; H
  (assert (= this__split_fields3 o8))

;; H
  (assert (= this__split_discrs (mk___split_discrs temp___298)))

;; H
  (assert (= temp___2981 o5))

;; H
  (assert (= temp___2982 o6))

;; H
  (assert (= temp___2983 o7))

;; H
  (assert (= temp___2984 o8))

;; H
  (assert (= this__attr__tag temp___2985))

;; H
  (assert (<= (to_rep temp___2983) (to_rep3 temp___298)))

;; H
  (assert
  (= (mk___rep (mk___split_discrs temp___299)
     (mk___split_fields (mk___t temp___2991 temp___2992) temp___2993
     temp___2994) temp___2995) (mk___rep (mk___split_discrs temp___298)
                               (mk___split_fields
                               (mk___t temp___2981 temp___2982) temp___2983
                               temp___2984) temp___2985)))

;; H
  (assert (= result1 this__split_fields))

;; H
  (assert (= result2 this__split_fields1))

;; H
  (assert (= result3 this__split_fields2))

;; H
  (assert (= result4 this__split_fields3))

;; H
  (assert (= temp___2991 this__split_fields4))

;; H
  (assert (= temp___2992 this__split_fields5))

;; H
  (assert (= temp___2993 this__split_fields6))

;; H
  (assert (= temp___2994 this__split_fields7))

;; H
  (assert (= this__split_discrs (mk___split_discrs temp___299)))

;; H
  (assert (= item2 (mk_int__ref item1)))

;; H
  (assert (= this__split_fields8 this__split_fields4))

;; H
  (assert (= this__split_fields9 this__split_fields5))

;; H
  (assert (= this__split_fields10 this__split_fields6))

;; H
  (assert (= this__split_fields11 this__split_fields7))

;; H
  (assert (= item3 item1))

;; H
  (assert
  (= this__split_fields12 (mk___split_fields
                          (mk___t this__split_fields4 this__split_fields5)
                          this__split_fields6 this__split_fields7)))

(assert
;; WP_parameter_def
 ;; File "bounded_stacks.ads", line 23, characters 0-0
  (not
  (not
  (= (full
     (mk___rep this__split_discrs
     (mk___split_fields (mk___t this__split_fields8 this__split_fields9)
     this__split_fields10 this__split_fields11) this__attr__tag)) true))))
(check-sat)
(exit)
