;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-const dummy2 character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                             (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range f)
     (=> (in_range l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range low)
                   (and (in_range high)
                   (=> (<= low high) (and (in_range1 low) (in_range1 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(declare-sort unsigned32t 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq4 (unsigned32t unsigned32t) Bool)

(declare-const dummy4 unsigned32t)

(declare-datatypes ()
((unsigned32t__ref (mk_unsigned32t__ref (unsigned32t__content unsigned32t)))))
(define-fun unsigned32t__ref___projection ((a unsigned32t__ref)) unsigned32t
  (unsigned32t__content a))

(define-fun dynamic_invariant ((temp___expr_152 Int)
  (temp___is_init_149 Bool) (temp___skip_constant_150 Bool)
  (temp___do_toplevel_151 Bool)) Bool (=>
                                      (or (= temp___is_init_149 true)
                                      (<= 0 4294967295)) (in_range3
                                      temp___expr_152)))

(declare-sort fart 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (fart fart) Bool)

(declare-const dummy5 fart)

(declare-datatypes () ((fart__ref (mk_fart__ref (fart__content fart)))))
(define-fun fart__ref___projection ((a fart__ref)) fart (fart__content a))

(define-fun dynamic_invariant1 ((temp___expr_248 Int)
  (temp___is_init_245 Bool) (temp___skip_constant_246 Bool)
  (temp___do_toplevel_247 Bool)) Bool (=>
                                      (or (= temp___is_init_245 true)
                                      (<= 0 2147483647)) (in_range4
                                      temp___expr_248)))

(declare-sort matchresultt 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq6 (matchresultt matchresultt) Bool)

(declare-const dummy6 matchresultt)

(declare-datatypes ()
((matchresultt__ref
 (mk_matchresultt__ref (matchresultt__content matchresultt)))))
(define-fun matchresultt__ref___projection ((a matchresultt__ref)) matchresultt
  (matchresultt__content a))

(define-fun dynamic_invariant2 ((temp___expr_254 Int)
  (temp___is_init_251 Bool) (temp___skip_constant_252 Bool)
  (temp___do_toplevel_253 Bool)) Bool (=>
                                      (or (= temp___is_init_251 true)
                                      (<= 0 1)) (in_range5 temp___expr_254)))

(declare-fun to_rep2 (fart) Int)

(declare-fun of_rep2 (Int) fart)

;; inversion_axiom
  (assert
  (forall ((x fart)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x fart)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-sort bytet 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (bytet bytet) Bool)

(declare-const dummy7 bytet)

(declare-datatypes () ((bytet__ref (mk_bytet__ref (bytet__content bytet)))))
(define-fun bytet__ref___projection ((a bytet__ref)) bytet (bytet__content a))

(declare-fun to_rep3 (bytet) Int)

(declare-fun of_rep3 (Int) bytet)

;; inversion_axiom
  (assert
  (forall ((x bytet))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x bytet)) (! (in_range6 (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range6 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-datatypes ()
((map__ref1 (mk_map__ref1 (map__content1 (Array Int bytet))))))
(declare-fun slide1 ((Array Int bytet) Int Int) (Array Int bytet))

;; slide_eq
  (assert
  (forall ((a (Array Int bytet)))
  (forall ((first2 Int))
  (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int bytet)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide1 a old_first new_first) i)) ))))))

(declare-fun concat2 ((Array Int bytet) Int Int (Array Int bytet) Int
  Int) (Array Int bytet))

;; concat_def
  (assert
  (forall ((a (Array Int bytet)) (b (Array Int bytet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat2 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton2 (bytet Int) (Array Int bytet))

;; singleton_def
  (assert
  (forall ((v bytet))
  (forall ((i Int))
  (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i)) ))))

(define-fun bool_eq2 ((a (Array Int bytet)) (a__first Int) (a__last Int)
  (b (Array Int bytet)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_135 Int))
                           (=>
                           (and (<= a__first temp___idx_135)
                           (<= temp___idx_135 a__last))
                           (= (to_rep3 (select a temp___idx_135)) (to_rep3
                                                                  (select b (+ (- b__first a__first) temp___idx_135)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int bytet)) (b (Array Int bytet)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq2 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_135 Int))
  (=> (and (<= a__first temp___idx_135) (<= temp___idx_135 a__last))
  (= (to_rep3 (select a temp___idx_135)) (to_rep3
                                         (select b (+ (- b__first a__first) temp___idx_135)))))))))))

(declare-fun compare1 ((Array Int bytet) Int Int (Array Int bytet) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int bytet)) (b (Array Int bytet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare1 a a_first a_last b b_first b_last) 0)
     (= (bool_eq2 a a_first a_last b b_first b_last) true)) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int bytet)) (b (Array Int bytet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare1 a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq2 a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep3 (select a (+ i 1))) (to_rep3 (select b (+ j 1))))))))))) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int bytet)) (b (Array Int bytet)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare1 a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq2 a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep3 (select b (+ i 1))) (to_rep3 (select a (+ j 1))))))))))) :pattern (
  (compare1 a a_first a_last b b_first b_last)) ))))

(declare-const dummy8 (Array Int bytet))

(declare-const value__size1 Int)

(declare-fun object__size1 ((Array Int bytet)) Int)

(declare-const value__component__size1 Int)

(declare-fun object__component__size1 ((Array Int bytet)) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 ((Array Int bytet)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int bytet))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int bytet))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int bytet))) (<= 0 (object__alignment1 a))))

(declare-fun user_eq8 ((Array Int bytet) (Array Int bytet)) Bool)

(declare-sort templatelengtht 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq9 (templatelengtht templatelengtht) Bool)

(declare-const dummy9 templatelengtht)

(declare-datatypes ()
((templatelengtht__ref
 (mk_templatelengtht__ref (templatelengtht__content templatelengtht)))))
(define-fun templatelengtht__ref___projection ((a templatelengtht__ref)) templatelengtht
  (templatelengtht__content a))

(declare-fun to_rep4 (templatelengtht) Int)

(declare-fun of_rep4 (Int) templatelengtht)

;; inversion_axiom
  (assert
  (forall ((x templatelengtht))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x templatelengtht)) (! (in_range7
  (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range7 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-const dummy10 (Array Int character))

(declare-const value__size2 Int)

(declare-fun object__size2 ((Array Int character)) Int)

(declare-const value__component__size2 Int)

(declare-fun object__component__size2 ((Array Int character)) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))

(declare-fun user_eq10 ((Array Int character) (Array Int character)) Bool)

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__iandatypes__templatet__length templatelengtht)(rec__iandatypes__templatet__requiredmaxfar fart)(rec__iandatypes__templatet__id (Array Int character))(rec__iandatypes__templatet__pad (Array Int bytet))))))
(define-fun us_split_fields_Length__projection ((a us_split_fields)) templatelengtht
  (rec__iandatypes__templatet__length a))

(define-fun us_split_fields_RequiredMaxFAR__projection ((a us_split_fields)) fart
  (rec__iandatypes__templatet__requiredmaxfar a))

(define-fun us_split_fields_ID__2__projection ((a us_split_fields)) (Array Int character)
  (rec__iandatypes__templatet__id a))

(define-fun us_split_fields_Pad__projection ((a us_split_fields)) (Array Int bytet)
  (rec__iandatypes__templatet__pad a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___3__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(define-fun bool_eq3 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (and
                        (= (to_rep4
                           (rec__iandatypes__templatet__length
                           (us_split_fields1 a))) (to_rep4
                                                  (rec__iandatypes__templatet__length
                                                  (us_split_fields1 b))))
                        (= (to_rep2
                           (rec__iandatypes__templatet__requiredmaxfar
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__iandatypes__templatet__requiredmaxfar
                                                  (us_split_fields1 b)))))
                        (= (bool_eq
                           (rec__iandatypes__templatet__id
                           (us_split_fields1 a)) 1 40
                           (rec__iandatypes__templatet__id
                           (us_split_fields1 b)) 1 40) true))
                        (= (bool_eq2
                           (rec__iandatypes__templatet__pad
                           (us_split_fields1 a)) 1 452
                           (rec__iandatypes__templatet__pad
                           (us_split_fields1 b)) 1 452) true))
                   true false))

(declare-const value__size3 Int)

(declare-fun object__size3 (us_rep) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))

(declare-const iandatypes__templatet__length__first__bit Int)

(declare-const iandatypes__templatet__length__last__bit Int)

(declare-const iandatypes__templatet__length__position Int)

;; iandatypes__templatet__length__first__bit_axiom
  (assert (<= 0 iandatypes__templatet__length__first__bit))

;; iandatypes__templatet__length__last__bit_axiom
  (assert
  (< iandatypes__templatet__length__first__bit iandatypes__templatet__length__last__bit))

;; iandatypes__templatet__length__position_axiom
  (assert (<= 0 iandatypes__templatet__length__position))

(declare-const iandatypes__templatet__requiredmaxfar__first__bit Int)

(declare-const iandatypes__templatet__requiredmaxfar__last__bit Int)

(declare-const iandatypes__templatet__requiredmaxfar__position Int)

;; iandatypes__templatet__requiredmaxfar__first__bit_axiom
  (assert (<= 0 iandatypes__templatet__requiredmaxfar__first__bit))

;; iandatypes__templatet__requiredmaxfar__last__bit_axiom
  (assert
  (< iandatypes__templatet__requiredmaxfar__first__bit iandatypes__templatet__requiredmaxfar__last__bit))

;; iandatypes__templatet__requiredmaxfar__position_axiom
  (assert (<= 0 iandatypes__templatet__requiredmaxfar__position))

(declare-const iandatypes__templatet__id__first__bit Int)

(declare-const iandatypes__templatet__id__last__bit Int)

(declare-const iandatypes__templatet__id__position Int)

;; iandatypes__templatet__id__first__bit_axiom
  (assert (<= 0 iandatypes__templatet__id__first__bit))

;; iandatypes__templatet__id__last__bit_axiom
  (assert
  (< iandatypes__templatet__id__first__bit iandatypes__templatet__id__last__bit))

;; iandatypes__templatet__id__position_axiom
  (assert (<= 0 iandatypes__templatet__id__position))

(declare-const iandatypes__templatet__pad__first__bit Int)

(declare-const iandatypes__templatet__pad__last__bit Int)

(declare-const iandatypes__templatet__pad__position Int)

;; iandatypes__templatet__pad__first__bit_axiom
  (assert (<= 0 iandatypes__templatet__pad__first__bit))

;; iandatypes__templatet__pad__last__bit_axiom
  (assert
  (< iandatypes__templatet__pad__first__bit iandatypes__templatet__pad__last__bit))

;; iandatypes__templatet__pad__position_axiom
  (assert (<= 0 iandatypes__templatet__pad__position))

(declare-fun user_eq11 (us_rep us_rep) Bool)

(declare-const dummy11 us_rep)

(declare-datatypes ()
((templatet__ref (mk_templatet__ref (templatet__content us_rep)))))
(define-fun templatet__ref___projection ((a templatet__ref)) us_rep (templatet__content
                                                                    a))

(declare-sort descriptioni 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 150)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq12 (descriptioni descriptioni) Bool)

(declare-const dummy12 descriptioni)

(declare-datatypes ()
((descriptioni__ref
 (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni
  (descriptioni__content a))

(declare-const nouser (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-fun temp___String_Literal_146 (tuple0) (Array Int character))

;; temp___String_Literal_146__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 1)) 78)
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 2)) 111))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 3)) 85))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 4)) 115))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 5)) 101))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 6)) 114))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 7)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 8)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 9)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 11)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 12)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 13)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 14)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 15)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 16)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 17)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 18)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 19)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 20)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 21)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 22)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 23)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 24)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 25)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 26)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 27)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 28)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 29)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 30)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 31)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 32)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 33)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 34)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 35)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 36)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 37)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 38)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 39)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 40)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 41)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 42)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 43)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 44)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 45)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 46)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 47)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 48)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 49)) 32))
     (= (to_rep (select (temp___String_Literal_146 us_void_param) 50)) 32)) :pattern (
  (temp___String_Literal_146 us_void_param)) )))

(declare-fun valid_numberlogentries (us_private) Bool)

(declare-fun valid_numberlogentries__function_guard (Bool us_private) Bool)

(declare-const template us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const maxfar Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-sort returnt 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq13 (returnt returnt) Bool)

(declare-const dummy13 returnt)

(declare-datatypes ()
((returnt__ref (mk_returnt__ref (returnt__content returnt)))))
(define-fun returnt__ref___projection ((a returnt__ref)) returnt (returnt__content
                                                                 a))

(define-fun dynamic_invariant3 ((temp___expr_835 Int)
  (temp___is_init_832 Bool) (temp___skip_constant_833 Bool)
  (temp___do_toplevel_834 Bool)) Bool (=>
                                      (or (= temp___is_init_832 true)
                                      (<= 0 16)) (in_range9 temp___expr_835)))

(define-fun dynamic_invariant4 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(declare-fun makedescription (us_t Int) (Array Int character))

(declare-fun makedescription__function_guard ((Array Int character) us_t
  Int) Bool)

;; makedescription__post_axiom
  (assert true)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const c43b Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-sort source 0)

(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq14 (source source) Bool)

(declare-const dummy14 source)

(declare-datatypes ()
((source__ref (mk_source__ref (source__content source)))))
(define-fun source__ref___4__projection ((a source__ref)) source (source__content
                                                                 a))

(define-fun dynamic_invariant5 ((temp___expr_886 Int)
  (temp___is_init_883 Bool) (temp___skip_constant_884 Bool)
  (temp___do_toplevel_885 Bool)) Bool (=>
                                      (or (= temp___is_init_883 true)
                                      (<= 0 16)) (in_range10
                                      temp___expr_886)))

(declare-sort target 0)

(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq15 (target target) Bool)

(declare-const dummy15 target)

(declare-datatypes ()
((target__ref (mk_target__ref (target__content target)))))
(define-fun target__ref___4__projection ((a target__ref)) target (target__content
                                                                 a))

(define-fun dynamic_invariant6 ((temp___expr_892 Int)
  (temp___is_init_889 Bool) (temp___skip_constant_890 Bool)
  (temp___do_toplevel_891 Bool)) Bool (=>
                                      (or (= temp___is_init_889 true)
                                      (<= 0 4294967295)) (in_range11
                                      temp___expr_892)))

(declare-fun codetoval (Int) Int)

(declare-fun codetoval__function_guard (Int Int) Bool)

;; codetoval__post_axiom
  (assert
  (forall ((s Int))
  (! (=> (dynamic_invariant5 s true true true) (dynamic_invariant6
     (codetoval s) true false true)) :pattern ((codetoval s)) )))

(declare-fun temp___String_Literal_895 (tuple0) (Array Int character))

;; temp___String_Literal_895__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (and
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 1)) 66)
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 2)) 105))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 3)) 111))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 4)) 109))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 5)) 101))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 6)) 116))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 7)) 114))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 8)) 105))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 9)) 99))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 10)) 32))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 11)) 100))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 12)) 101))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 13)) 118))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 14)) 105))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 15)) 99))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 16)) 101))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 17)) 32))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 18)) 102))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 19)) 97))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 20)) 105))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 21)) 108))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 22)) 117))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 23)) 114))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 24)) 101))
     (= (to_rep (select (temp___String_Literal_895 us_void_param) 25)) 32)) :pattern (
  (temp___String_Literal_895 us_void_param)) )))

(define-fun dynamic_invariant7 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range1
                                     temp___expr_39)))

(define-fun dynamic_invariant8 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range2 temp___expr_63)))

(define-fun dynamic_invariant9 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

;; valid_numberlogentries__post_axiom
  (assert true)

(define-fun dynamic_invariant10 ((temp___expr_330 Int)
  (temp___is_init_327 Bool) (temp___skip_constant_328 Bool)
  (temp___do_toplevel_329 Bool)) Bool (=>
                                      (or (= temp___is_init_327 true)
                                      (<= 1 150)) (in_range8
                                      temp___expr_330)))

;; nouser__def_axiom
  (assert (= nouser (temp___String_Literal_146 Tuple0)))

(define-fun dynamic_invariant11 ((temp___expr_164 Int)
  (temp___is_init_161 Bool) (temp___skip_constant_162 Bool)
  (temp___do_toplevel_163 Bool)) Bool (=>
                                      (or (= temp___is_init_161 true)
                                      (<= 0 255)) (in_range6
                                      temp___expr_164)))

(define-fun dynamic_invariant12 ((temp___expr_275 Int)
  (temp___is_init_272 Bool) (temp___skip_constant_273 Bool)
  (temp___do_toplevel_274 Bool)) Bool (=>
                                      (or (= temp___is_init_272 true)
                                      (<= 0 4294967295)) (in_range7
                                      temp___expr_275)))

(declare-const state us_private)

(declare-const matchresult Int)

(declare-const achievedfar Int)

(declare-const numericreturn Int)

(declare-const c44b Int)

(declare-const o Int)

(declare-const o1 (Array Int character))

(declare-const o2 (Array Int character))

(declare-const o3 t)

(declare-const matchresult1 Int)

(declare-const achievedfar1 Int)

(declare-const numericreturn1 Int)

(declare-const result Int)

(declare-const c44b1 Int)

(declare-const result1 Int)

(declare-const matchresult2 Int)

;; H
  (assert (= (temp___String_Literal_146 Tuple0) nouser))

;; H
  (assert (in_range4 maxfar))

;; H
  (assert (=> (<= 0 1) (in_range5 matchresult)))

;; H
  (assert (=> (<= 0 2147483647) (in_range4 achievedfar)))

;; H
  (assert (=> (<= 0 4294967295) (in_range3 numericreturn)))

;; H
  (assert
  (and (and (in_range5 matchresult1) (in_range4 achievedfar1)) (in_range3
  numericreturn1)))

;; H
  (assert (in_range9 c43b))

;; H
  (assert (=> (<= 0 4294967295) (in_range3 c44b)))

;; H
  (assert (and (= o (codetoval 0)) (in_range11 o)))

;; H
  (assert (= result c44b))

;; H
  (assert (= c44b1 o))

;; H
  (assert (not (= numericreturn1 c44b1)))

;; H
  (assert (= result1 matchresult1))

;; H
  (assert (= matchresult2 1))

;; H
  (assert
  (= o1 (makedescription
        (mk___t (temp___String_Literal_895 Tuple0) (mk 1 25)) numericreturn1)))

;; H
  (assert (= o1 o2))

;; H
  (assert (= (mk 1 150) o3))

(assert
;; WP_parameter_def
 ;; File "bio.adb", line 195, characters 0-0
  (not (= (valid_numberlogentries state) true)))
(check-sat)
(exit)
