;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-fun dummy () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort natural 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (natural natural) Bool)

(declare-fun dummy1 () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range2
                                     temp___expr_33)))

(declare-fun fibonacci (Int) Int)

(declare-fun fibonacci__function_guard (Int Int) Bool)

;; fibonacci__post_axiom
  (assert
  (forall ((n Int))
  (! (=> (and (dynamic_invariant n true true true) (<= n 23))
     (dynamic_invariant (fibonacci n) true false true)) :pattern ((fibonacci
                                                                  n)) )))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS10 () Int)

(define-fun dynamic_invariant1 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(declare-fun n1 () Int)

(declare-fun n2 () Int)

(declare-fun l1 () Int)

(declare-fun l2 () Int)

(declare-fun a1 () Int)

(declare-fun a2 () Int)

(declare-fun b1 () Int)

(declare-fun b2 () Int)

(declare-fun i () Int)

(declare-fun copy_n1 () Int)

(declare-fun copy_n2 () Int)

(declare-fun temp___165 () Int)

(declare-fun temp___164 () Int)

(declare-fun temp___163 () Int)

(declare-fun temp___162 () Int)

(declare-fun temp___166 () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun o3 () Int)

(declare-fun o4 () Int)

(declare-fun temp___170 () Int)

(declare-fun temp___169 () Int)

(declare-fun temp___168 () Int)

(declare-fun temp___167 () Int)

(declare-fun temp___171 () Int)

(declare-fun o5 () Int)

(declare-fun o6 () Int)

(declare-fun o7 () Int)

(declare-fun o8 () Int)

(declare-fun o9 () Int)

(declare-fun n11 () Int)

(declare-fun n21 () Int)

(declare-fun result () Int)

(declare-fun copy_n11 () Int)

(declare-fun result1 () Int)

(declare-fun copy_n21 () Int)

(declare-fun result2 () Int)

(declare-fun a11 () Int)

(declare-fun result3 () Int)

(declare-fun a21 () Int)

(declare-fun result4 () Int)

(declare-fun b11 () Int)

(declare-fun result5 () Int)

(declare-fun b21 () Int)

(declare-fun result6 () Int)

(declare-fun i1 () Int)

(declare-fun n12 () Int)

(declare-fun a12 () Int)

(declare-fun b12 () Int)

(declare-fun i2 () Int)

(declare-fun temp___1661 () Int)

(declare-fun result7 () Int)

(declare-fun temp___1662 () Int)

(declare-fun result8 () int__ref)

(declare-fun a13 () Int)

(declare-fun result9 () int__ref)

(declare-fun b13 () Int)

(declare-fun result10 () int__ref)

(declare-fun n13 () Int)

(declare-fun result11 () int__ref)

(declare-fun i3 () Int)

(declare-fun n14 () int__ref)

(declare-fun a14 () int__ref)

(declare-fun b14 () int__ref)

(declare-fun i4 () int__ref)

(declare-fun n15 () Int)

(declare-fun a15 () Int)

(declare-fun b15 () Int)

(declare-fun i5 () Int)

(declare-fun n16 () int__ref)

(declare-fun a16 () int__ref)

(declare-fun b16 () int__ref)

(declare-fun i6 () int__ref)

(declare-fun n17 () Int)

(declare-fun a17 () Int)

(declare-fun b17 () Int)

(declare-fun i7 () Int)

(declare-fun result12 () int__ref)

(declare-fun i8 () Int)

(declare-fun n22 () Int)

(declare-fun a22 () Int)

(declare-fun b22 () Int)

(declare-fun i9 () Int)

(declare-fun temp___1711 () Int)

(declare-fun result13 () int__ref)

(declare-fun temp___1712 () Int)

(declare-fun result14 () int__ref)

(declare-fun a23 () Int)

(declare-fun result15 () int__ref)

(declare-fun b23 () Int)

(declare-fun result16 () int__ref)

(declare-fun n23 () Int)

(declare-fun result17 () int__ref)

(declare-fun i10 () Int)

(declare-fun n24 () int__ref)

(declare-fun a24 () int__ref)

(declare-fun b24 () int__ref)

(declare-fun i11 () int__ref)

(declare-fun n25 () Int)

(declare-fun a25 () Int)

(declare-fun b25 () Int)

(declare-fun i12 () Int)

(declare-fun n26 () int__ref)

(declare-fun a26 () int__ref)

(declare-fun b26 () int__ref)

(declare-fun i13 () int__ref)

(declare-fun n27 () Int)

(declare-fun a27 () Int)

(declare-fun b27 () Int)

(declare-fun i14 () Int)

(declare-fun result18 () int__ref)

(declare-fun l11 () Int)

(declare-fun result19 () int__ref)

(declare-fun l12 () Int)

(declare-fun l13 () int__ref)

(declare-fun l14 () Int)

(declare-fun result20 () int__ref)

(declare-fun l21 () Int)

(declare-fun result21 () int__ref)

(declare-fun l22 () Int)

(declare-fun l23 () int__ref)

(declare-fun l24 () Int)

(declare-fun n18 () int__ref)

(declare-fun n28 () int__ref)

(declare-fun l15 () int__ref)

(declare-fun l25 () int__ref)

(declare-fun a18 () int__ref)

(declare-fun a28 () int__ref)

(declare-fun b18 () int__ref)

(declare-fun b28 () int__ref)

(declare-fun i15 () int__ref)

(declare-fun copy_n12 () int__ref)

(declare-fun copy_n22 () int__ref)

(declare-fun n19 () Int)

(declare-fun n29 () Int)

(declare-fun l16 () Int)

(declare-fun l26 () Int)

(declare-fun a19 () Int)

(declare-fun a29 () Int)

(declare-fun b19 () Int)

(declare-fun b29 () Int)

(declare-fun i16 () Int)

(declare-fun copy_n13 () Int)

(declare-fun copy_n23 () Int)

(define-fun l27 () int__ref (mk_int__ref l2))

(define-fun l17 () int__ref (mk_int__ref l1))

;; H
  (assert (in_range2 n1))

;; H
  (assert (in_range2 n2))

;; H
  (assert (in_range2 l1))

;; H
  (assert (in_range2 l2))

;; H
  (assert (and (= n1 n2) (and (= l1 l2) (<= n1 23))))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 a1)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 a2)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 b1)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 b2)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 i)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 copy_n1)))

;; H
  (assert (=> (<= 0 2147483647) (in_range2 copy_n2)))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref copy_n1)))

;; H
  (assert (= copy_n11 n1))

;; H
  (assert (= (mk_int__ref result1) (mk_int__ref copy_n2)))

;; H
  (assert (= copy_n21 n2))

;; H
  (assert (= (mk_int__ref result2) (mk_int__ref a1)))

;; H
  (assert (= a11 1))

;; H
  (assert (= (mk_int__ref result3) (mk_int__ref a2)))

;; H
  (assert (= a21 1))

;; H
  (assert (= (mk_int__ref result4) (mk_int__ref b1)))

;; H
  (assert (= b11 1))

;; H
  (assert (= (mk_int__ref result5) (mk_int__ref b2)))

;; H
  (assert (= b21 1))

;; H
  (assert (= (mk_int__ref result6) (mk_int__ref i)))

;; H
  (assert (= i1 2))

;; H
  (assert (=> (< 2 n1) (= temp___165 i1)))

;; H
  (assert (=> (< 2 n1) (= temp___164 b11)))

;; H
  (assert (=> (< 2 n1) (= temp___163 n1)))

;; H
  (assert (=> (< 2 n1) (= temp___162 a11)))

;; H
  (assert (=> (< 2 n1) (= 0 temp___166)))

;; H
  (assert
  (=> (< 2 n1)
  (and
  (and (and (= a12 (fibonacci i2)) (= b12 (fibonacci (- i2 1)))) (<= i2 23))
  (= (- (+ n12 i2) 2) copy_n11))))

;; H
  (assert
  (=> (< 2 n1)
  (and
  (and
  (and (and (=> (<= 0 2147483647) (in_range2 a12)) (in_range2 n12))
  (=> (<= 0 2147483647) (in_range2 b12)))
  (=> (<= 0 2147483647) (in_range2 i2))) (< 2 n12))))

;; H
  (assert (=> (< 2 n1) (= temp___1661 result7)))

;; H
  (assert (=> (< 2 n1) (= temp___1662 n12)))

;; H
  (assert (=> (< 2 n1) (and (= o (+ a12 b12)) (in_range1 (+ a12 b12)))))

;; H
  (assert (=> (< 2 n1) (= result8 (mk_int__ref a12))))

;; H
  (assert (=> (< 2 n1) (= a13 o)))

;; H
  (assert (=> (< 2 n1) (and (= o1 (- a13 b12)) (in_range1 (- a13 b12)))))

;; H
  (assert (=> (< 2 n1) (and (= o2 o1) (in_range2 o1))))

;; H
  (assert (=> (< 2 n1) (= result9 (mk_int__ref b12))))

;; H
  (assert (=> (< 2 n1) (= b13 o2)))

;; H
  (assert (=> (< 2 n1) (and (= o3 (- n12 1)) (in_range2 (- n12 1)))))

;; H
  (assert (=> (< 2 n1) (= result10 (mk_int__ref n12))))

;; H
  (assert (=> (< 2 n1) (= n13 o3)))

;; H
  (assert (=> (< 2 n1) (and (= o4 (+ i2 1)) (in_range1 (+ i2 1)))))

;; H
  (assert (=> (< 2 n1) (= result11 (mk_int__ref i2))))

;; H
  (assert (=> (< 2 n1) (= i3 o4)))

;; H
  (assert (=> (< 2 n1) (not (< 2 n13))))

;; H
  (assert (=> (< 2 n1) (= i4 (mk_int__ref i3))))

;; H
  (assert (=> (< 2 n1) (= b14 (mk_int__ref b13))))

;; H
  (assert (=> (< 2 n1) (= a14 (mk_int__ref a13))))

;; H
  (assert (=> (< 2 n1) (= n14 (mk_int__ref n13))))

;; H
  (assert (=> (< 2 n1) (= i5 i3)))

;; H
  (assert (=> (< 2 n1) (= b15 b13)))

;; H
  (assert (=> (< 2 n1) (= a15 a13)))

;; H
  (assert (=> (< 2 n1) (= n15 n13)))

;; H
  (assert (=> (< 2 n1) (= i6 i4)))

;; H
  (assert (=> (< 2 n1) (= b16 b14)))

;; H
  (assert (=> (< 2 n1) (= a16 a14)))

;; H
  (assert (=> (< 2 n1) (= n16 n14)))

;; H
  (assert (=> (< 2 n1) (= i7 i5)))

;; H
  (assert (=> (< 2 n1) (= b17 b15)))

;; H
  (assert (=> (< 2 n1) (= a17 a15)))

;; H
  (assert (=> (< 2 n1) (= n17 n15)))

;; H
  (assert (=> (not (< 2 n1)) (= i6 (mk_int__ref i1))))

;; H
  (assert (=> (not (< 2 n1)) (= b16 (mk_int__ref b11))))

;; H
  (assert (=> (not (< 2 n1)) (= a16 (mk_int__ref a11))))

;; H
  (assert (=> (not (< 2 n1)) (= n16 (mk_int__ref n1))))

;; H
  (assert (=> (not (< 2 n1)) (= i7 i1)))

;; H
  (assert (=> (not (< 2 n1)) (= b17 b11)))

;; H
  (assert (=> (not (< 2 n1)) (= a17 a11)))

;; H
  (assert (=> (not (< 2 n1)) (= n17 n11)))

;; H
  (assert (= result12 i6))

;; H
  (assert (= i8 2))

;; H
  (assert (=> (< 2 n2) (= temp___170 i8)))

;; H
  (assert (=> (< 2 n2) (= temp___169 b21)))

;; H
  (assert (=> (< 2 n2) (= temp___168 n2)))

;; H
  (assert (=> (< 2 n2) (= temp___167 a21)))

;; H
  (assert (=> (< 2 n2) (= 0 temp___171)))

;; H
  (assert
  (=> (< 2 n2)
  (and
  (and (and (= a22 (fibonacci i9)) (= b22 (fibonacci (- i9 1)))) (<= i9 23))
  (= (- (+ n22 i9) 2) copy_n21))))

;; H
  (assert
  (=> (< 2 n2)
  (and
  (and
  (and (and (=> (<= 0 2147483647) (in_range2 a22)) (in_range2 n22))
  (=> (<= 0 2147483647) (in_range2 b22)))
  (=> (<= 0 2147483647) (in_range2 i9))) (< 2 n22))))

;; H
  (assert (=> (< 2 n2) (= result13 (mk_int__ref temp___1711))))

;; H
  (assert (=> (< 2 n2) (= temp___1712 n22)))

;; H
  (assert (=> (< 2 n2) (and (= o5 (+ a22 b22)) (in_range1 (+ a22 b22)))))

;; H
  (assert (=> (< 2 n2) (= result14 (mk_int__ref a22))))

;; H
  (assert (=> (< 2 n2) (= a23 o5)))

;; H
  (assert (=> (< 2 n2) (and (= o6 (- a23 b22)) (in_range1 (- a23 b22)))))

;; H
  (assert (=> (< 2 n2) (and (= o7 o6) (in_range2 o6))))

;; H
  (assert (=> (< 2 n2) (= result15 (mk_int__ref b22))))

;; H
  (assert (=> (< 2 n2) (= b23 o7)))

;; H
  (assert (=> (< 2 n2) (and (= o8 (- n22 1)) (in_range2 (- n22 1)))))

;; H
  (assert (=> (< 2 n2) (= result16 (mk_int__ref n22))))

;; H
  (assert (=> (< 2 n2) (= n23 o8)))

;; H
  (assert (=> (< 2 n2) (and (= o9 (+ i9 1)) (in_range1 (+ i9 1)))))

;; H
  (assert (=> (< 2 n2) (= result17 (mk_int__ref i9))))

;; H
  (assert (=> (< 2 n2) (= i10 o9)))

;; H
  (assert (=> (< 2 n2) (not (< 2 n23))))

;; H
  (assert (=> (< 2 n2) (= i11 (mk_int__ref i10))))

;; H
  (assert (=> (< 2 n2) (= b24 (mk_int__ref b23))))

;; H
  (assert (=> (< 2 n2) (= a24 (mk_int__ref a23))))

;; H
  (assert (=> (< 2 n2) (= n24 (mk_int__ref n23))))

;; H
  (assert (=> (< 2 n2) (= i12 i10)))

;; H
  (assert (=> (< 2 n2) (= b25 b23)))

;; H
  (assert (=> (< 2 n2) (= a25 a23)))

;; H
  (assert (=> (< 2 n2) (= n25 n23)))

;; H
  (assert (=> (< 2 n2) (= i13 i11)))

;; H
  (assert (=> (< 2 n2) (= b26 b24)))

;; H
  (assert (=> (< 2 n2) (= a26 a24)))

;; H
  (assert (=> (< 2 n2) (= n26 n24)))

;; H
  (assert (=> (< 2 n2) (= i14 i12)))

;; H
  (assert (=> (< 2 n2) (= b27 b25)))

;; H
  (assert (=> (< 2 n2) (= a27 a25)))

;; H
  (assert (=> (< 2 n2) (= n27 n25)))

;; H
  (assert (=> (not (< 2 n2)) (= i13 (mk_int__ref i8))))

;; H
  (assert (=> (not (< 2 n2)) (= b26 (mk_int__ref b21))))

;; H
  (assert (=> (not (< 2 n2)) (= a26 (mk_int__ref a21))))

;; H
  (assert (=> (not (< 2 n2)) (= n26 (mk_int__ref n2))))

;; H
  (assert (=> (not (< 2 n2)) (= i14 i8)))

;; H
  (assert (=> (not (< 2 n2)) (= b27 b21)))

;; H
  (assert (=> (not (< 2 n2)) (= a27 a21)))

;; H
  (assert (=> (not (< 2 n2)) (= n27 n21)))

;; H
  (assert (=> (< l1 (int__content a16)) (= result18 l17)))

;; H
  (assert (=> (< l1 (int__content a16)) (= l11 (int__content a16))))

;; H
  (assert (=> (< l1 (int__content a16)) (= l13 (mk_int__ref l11))))

;; H
  (assert (=> (< l1 (int__content a16)) (= l14 l11)))

;; H
  (assert (=> (not (< l1 (int__content a16))) (= result19 l17)))

;; H
  (assert (=> (not (< l1 (int__content a16))) (= l12 0)))

;; H
  (assert (=> (not (< l1 (int__content a16))) (= l13 (mk_int__ref l12))))

;; H
  (assert (=> (not (< l1 (int__content a16))) (= l14 l12)))

;; H
  (assert (=> (< l2 (int__content a26)) (= result20 l27)))

;; H
  (assert (=> (< l2 (int__content a26)) (= l21 (int__content a26))))

;; H
  (assert (=> (< l2 (int__content a26)) (= l23 (mk_int__ref l21))))

;; H
  (assert (=> (< l2 (int__content a26)) (= l24 l21)))

;; H
  (assert (=> (not (< l2 (int__content a26))) (= result21 l27)))

;; H
  (assert (=> (not (< l2 (int__content a26))) (= l22 0)))

;; H
  (assert (=> (not (< l2 (int__content a26))) (= l23 (mk_int__ref l22))))

;; H
  (assert (=> (not (< l2 (int__content a26))) (= l24 l22)))

;; H
  (assert (= copy_n22 (mk_int__ref copy_n21)))

;; H
  (assert (= copy_n12 (mk_int__ref copy_n11)))

;; H
  (assert (= i15 i13))

;; H
  (assert (= b28 b26))

;; H
  (assert (= b18 b16))

;; H
  (assert (= a28 a26))

;; H
  (assert (= a18 a16))

;; H
  (assert (= l25 l23))

;; H
  (assert (= l15 l13))

;; H
  (assert (= n28 n26))

;; H
  (assert (= n18 n16))

;; H
  (assert (= copy_n23 copy_n21))

;; H
  (assert (= copy_n13 copy_n11))

;; H
  (assert (= i16 i14))

;; H
  (assert (= b29 b27))

;; H
  (assert (= b19 b17))

;; H
  (assert (= a29 a27))

;; H
  (assert (= a19 a17))

;; H
  (assert (= l26 l24))

;; H
  (assert (= l16 l14))

;; H
  (assert (= n29 n27))

;; H
  (assert (= n19 n17))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (= (int__content l15) (int__content l25))))
(check-sat)
(exit)
