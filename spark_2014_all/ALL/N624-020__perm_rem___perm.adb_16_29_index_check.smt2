;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort natural 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-fun dummy () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(declare-fun to_rep (natural) Int)

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort index 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (index index) Bool)

(declare-fun dummy1 () index)

(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))

(define-fun dynamic_invariant ((temp___expr_142 Int)
  (temp___is_init_139 Bool) (temp___skip_constant_140 Bool)
  (temp___do_toplevel_141 Bool)) Bool (=>
                                      (or (= temp___is_init_139 true)
                                      (<= 1 100)) (in_range2
                                      temp___expr_142)))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))

;; slide_eq
  (assert
  (forall ((a (Array Int natural)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int natural)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int natural) Int Int (Array Int natural) Int
  Int) (Array Int natural))

;; concat_def
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (natural Int) (Array Int natural))

;; singleton_def
  (assert
  (forall ((v natural))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int)
  (b (Array Int natural)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep (select a temp___idx_132)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int natural) Int Int (Array Int natural) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int natural)) (b (Array Int natural)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-sort integer 0)

(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-fun dummy2 () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range3 f)
     (=> (in_range3 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range3 low)
                   (and (in_range3 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int natural))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))

(define-fun of_array ((a (Array Int natural)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int natural)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int natural)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int natural)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int natural))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int natural))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-datatypes ()
((nat_array__ref (mk_nat_array__ref (nat_array__content us_t)))))
(define-fun nat_array__ref___projection ((a nat_array__ref)) us_t (nat_array__content
                                                                  a))

(define-fun dynamic_invariant1 ((temp___expr_148 us_t)
  (temp___is_init_145 Bool) (temp___skip_constant_146 Bool)
  (temp___do_toplevel_147 Bool)) Bool (=>
                                      (not (= temp___skip_constant_146 true))
                                      (dynamic_property 1 100
                                      (first1 temp___expr_148)
                                      (last1 temp___expr_148))))

(declare-fun invariant__ (us_t) Bool)

(declare-fun invariant____function_guard (Bool us_t) Bool)

;; invariant____post_axiom
  (assert true)

;; invariant____def_axiom
  (assert
  (forall ((a us_t))
  (! (= (= (invariant__ a) true) (and (= (first1 a) 1) (<= 0 (last1 a)))) :pattern (
  (invariant__ a)) )))

(declare-fun remove (us_t Int) us_t)

(declare-fun remove__function_guard (us_t us_t Int) Bool)

;; remove__post_axiom
  (assert
  (forall ((a us_t))
  (forall ((i Int))
  (! (=>
     (and
     (and (dynamic_invariant1 a true true true) (dynamic_invariant i true
     true true))
     (and (= (invariant__ a) true) (and (<= (first1 a) i) (<= i (last1 a)))))
     (let ((result (remove a i)))
     (and
     (and (= (invariant__ result) true)
     (and (= (last1 result) (- (last1 a) 1))
     (and
     (forall ((k Int))
     (=> (and (<= 1 k) (<= k (- i 1)))
     (= (to_rep (select (to_array a) k)) (to_rep
                                         (select (to_array result) k)))))
     (and
     (forall ((k Int))
     (=> (and (<= (+ i 1) k) (<= k (last1 a)))
     (= (to_rep (select (to_array a) k)) (to_rep
                                         (select (to_array result) (- k 1))))))
     (forall ((k Int))
     (=> (and (<= i k) (<= k (- (last1 a) 1)))
     (= (to_rep (select (to_array a) (+ k 1))) (to_rep
                                               (select (to_array result) k)))))))))
     (dynamic_invariant1 result true false true)))) :pattern ((remove a i)) ))))

(declare-fun is_perm (us_t us_t) Bool)

(declare-fun is_perm__function_guard (Bool us_t us_t) Bool)

;; is_perm__def_axiom
  (assert
  (forall ((a us_t) (b us_t))
  (! (= (= (is_perm a b) true)
     (or (and (= (length a) 0) (= (length b) 0))
     (exists ((ia Int))
     (and (and (<= (first1 a) ia) (<= ia (last1 a)))
     (exists ((ib Int))
     (and (and (<= (first1 b) ib) (<= ib (last1 b)))
     (and
     (= (to_rep (select (to_array a) ia)) (to_rep (select (to_array b) ib)))
     (= (is_perm (remove a ia) (remove b ib)) true)))))))) :pattern (
  (is_perm a b)) )))

(declare-fun a () us_t)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun b () us_t)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun ia () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (integer integer) Bool)

(declare-fun dummy4 () integer)

(declare-datatypes () ((t18b__ref (mk_t18b__ref (t18b__content integer)))))
(define-fun t18b__ref___projection ((a1 t18b__ref)) integer (t18b__content
                                                            a1))

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(define-fun dynamic_invariant2 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range1
                                     temp___expr_33)))

(define-fun dynamic_invariant3 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range3 temp___expr_15)))

(declare-fun ib () Int)

(declare-fun perm__get_witness__result () Int)

(declare-fun temp___584 () Int)

(declare-fun temp___585 () Int)

(declare-fun temp___583 () Int)

(declare-fun o () (Array Int natural))

(declare-fun o1 () t)

(declare-fun o2 () Int)

(declare-fun o3 () (Array Int natural))

(declare-fun o4 () t)

(declare-fun o5 () Int)

(declare-fun o6 () natural)

(declare-fun o7 () Int)

(declare-fun o8 () Int)

(declare-fun o9 () (Array Int natural))

(declare-fun o10 () t)

(declare-fun o11 () Int)

(declare-fun o12 () (Array Int natural))

(declare-fun o13 () t)

(declare-fun o14 () Int)

(declare-fun o15 () natural)

(declare-fun o16 () Int)

(declare-fun o17 () Int)

(declare-fun perm__get_witness__result1 () Int)

(declare-fun result () Int)

(declare-fun ib1 () Int)

(declare-fun result1 () Bool)

(declare-fun result2 () Bool)

(declare-fun result3 () Int)

(declare-fun perm__get_witness__result2 () Int)

(declare-fun ib2 () Int)

(declare-fun perm__get_witness__result3 () Int)

(declare-fun result4 () Int)

(declare-fun ib3 () Int)

(declare-fun result5 () Bool)

(declare-fun result6 () Bool)

(declare-fun result7 () Int)

(declare-fun perm__get_witness__result4 () Int)

(declare-fun ib4 () Int)

(declare-fun perm__get_witness__result5 () Int)

(declare-fun ib5 () Int)

(declare-fun perm__get_witness__result6 () Int)

(declare-fun ib6 () int__ref)

(declare-fun perm__get_witness__result7 () int__ref)

(declare-fun ib7 () Int)

(declare-fun perm__get_witness__result8 () Int)

(declare-fun ib8 () int__ref)

(declare-fun perm__get_witness__result9 () int__ref)

(declare-fun ib9 () Int)

(declare-fun perm__get_witness__result10 () Int)

(define-fun o18 () us_t (mk___t o12 o13))

(define-fun o19 () us_t (mk___t o9 o10))

(define-fun o20 () us_t (mk___t o3 o4))

(define-fun o21 () us_t (mk___t o o1))

;; H
  (assert (dynamic_invariant1 a true false true))

;; H
  (assert (dynamic_invariant1 b true false true))

;; H
  (assert (in_range2 ia))

;; H
  (assert
  (and (= (invariant__ a) true)
  (and (= (invariant__ b) true)
  (and (and (<= (to_rep1 (first (rt a))) ia) (<= ia (to_rep1 (last (rt a)))))
  (exists ((ib10 Int))
  (and
  (and (<= (to_rep1 (first (rt b))) ib10) (<= ib10 (to_rep1 (last (rt b)))))
  (and (= (to_rep (select (elts a) ia)) (to_rep (select (elts b) ib10)))
  (= (is_perm (remove a ia) (remove b ib10)) true))))))))

;; H
  (assert
  (= perm__get_witness__result7 (mk_int__ref perm__get_witness__result5)))

;; H
  (assert (= ib6 (mk_int__ref ib4)))

;; H
  (assert (= perm__get_witness__result8 perm__get_witness__result6))

;; H
  (assert (= ib7 ib5))

;; H
  (assert (= temp___584 (to_rep1 (first (rt b)))))

;; H
  (assert (= temp___585 (to_rep1 (last (rt b)))))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref ib)))

;; H
  (assert (= ib1 temp___584))

;; H
  (assert (<= temp___584 ib1))

;; H
  (assert (<= ib1 temp___585))

;; H
  (assert (= temp___583 ib1))

;; H
  (assert
  (or
  (and
  (and
  (and (= perm__get_witness__result2 perm__get_witness__result5) (= ib1 ib4))
  (and (= perm__get_witness__result6 perm__get_witness__result2) (= ib5 ib1)))
  (and
  (and
  (and
  (and
  (and
  (and (and (<= (to_rep1 (first (rt a))) ia) (<= ia (to_rep1 (last (rt a)))))
  (= o5 ia)) (= o6 (select (elts a) o5))) (= o7 (to_rep o6)))
  (= result2 (ite (= o7 (to_rep (select (elts b) ib1))) true false)))
  (ite (= result2 true)
  (and
  (and (and (= o2 ib1) (in_range2 ib1))
  (and (= o20 (remove b o2))
  (and (dynamic_invariant1 o20 true false true)
  (and (= (invariant__ o20) true)
  (and (= (to_rep1 (last o4)) (- (to_rep1 (last (rt b))) 1))
  (and
  (forall ((k Int))
  (=> (and (<= 1 k) (<= k (- o2 1)))
  (= (to_rep (select (elts b) k)) (to_rep (select o3 k)))))
  (and
  (forall ((k Int))
  (=> (and (<= (+ o2 1) k) (<= k (to_rep1 (last (rt b)))))
  (= (to_rep (select (elts b) k)) (to_rep (select o3 (- k 1))))))
  (forall ((k Int))
  (=> (and (<= o2 k) (<= k (- (to_rep1 (last (rt b))) 1)))
  (= (to_rep (select (elts b) (+ k 1))) (to_rep (select o3 k))))))))))))
  (and
  (and (= o21 (remove a ia))
  (and (dynamic_invariant1 o21 true false true)
  (and (= (invariant__ o21) true)
  (and (= (to_rep1 (last o1)) (- (to_rep1 (last (rt a))) 1))
  (and
  (forall ((k Int))
  (=> (and (<= 1 k) (<= k (- ia 1)))
  (= (to_rep (select (elts a) k)) (to_rep (select o k)))))
  (and
  (forall ((k Int))
  (=> (and (<= (+ ia 1) k) (<= k (to_rep1 (last (rt a)))))
  (= (to_rep (select (elts a) k)) (to_rep (select o (- k 1))))))
  (forall ((k Int))
  (=> (and (<= ia k) (<= k (- (to_rep1 (last (rt a))) 1)))
  (= (to_rep (select (elts a) (+ k 1))) (to_rep (select o k)))))))))))
  (and (= result1 (is_perm o21 o20))
  (= (= result1 true)
  (or (and (= (length o21) 0) (= (length o20) 0))
  (exists ((ia1 Int))
  (and (and (<= (to_rep1 (first o1)) ia1) (<= ia1 (to_rep1 (last o1))))
  (exists ((ib10 Int))
  (and (and (<= (to_rep1 (first o4)) ib10) (<= ib10 (to_rep1 (last o4))))
  (and (= (to_rep (select o ia1)) (to_rep (select o3 ib10)))
  (= (is_perm (remove o21 ia1) (remove o20 ib10)) true)))))))))))
  (= result1 false)))
  (and (= result1 true)
  (and (and (= o8 ib1) (in_range2 ib1))
  (and (= (mk_int__ref result3) (mk_int__ref perm__get_witness__result))
  (= perm__get_witness__result2 o8))))))
  (and
  (and
  (and
  (and
  (and
  (and
  (and (and (<= (to_rep1 (first (rt a))) ia) (<= ia (to_rep1 (last (rt a)))))
  (= o5 ia)) (= o6 (select (elts a) o5))) (= o7 (to_rep o6)))
  (= result2 (ite (= o7 (to_rep (select (elts b) ib1))) true false)))
  (ite (= result2 true)
  (and
  (and (and (= o2 ib1) (in_range2 ib1))
  (and (= o20 (remove b o2))
  (and (dynamic_invariant1 o20 true false true)
  (and (= (invariant__ o20) true)
  (and (= (to_rep1 (last o4)) (- (to_rep1 (last (rt b))) 1))
  (and
  (forall ((k Int))
  (=> (and (<= 1 k) (<= k (- o2 1)))
  (= (to_rep (select (elts b) k)) (to_rep (select o3 k)))))
  (and
  (forall ((k Int))
  (=> (and (<= (+ o2 1) k) (<= k (to_rep1 (last (rt b)))))
  (= (to_rep (select (elts b) k)) (to_rep (select o3 (- k 1))))))
  (forall ((k Int))
  (=> (and (<= o2 k) (<= k (- (to_rep1 (last (rt b))) 1)))
  (= (to_rep (select (elts b) (+ k 1))) (to_rep (select o3 k))))))))))))
  (and
  (and (= o21 (remove a ia))
  (and (dynamic_invariant1 o21 true false true)
  (and (= (invariant__ o21) true)
  (and (= (to_rep1 (last o1)) (- (to_rep1 (last (rt a))) 1))
  (and
  (forall ((k Int))
  (=> (and (<= 1 k) (<= k (- ia 1)))
  (= (to_rep (select (elts a) k)) (to_rep (select o k)))))
  (and
  (forall ((k Int))
  (=> (and (<= (+ ia 1) k) (<= k (to_rep1 (last (rt a)))))
  (= (to_rep (select (elts a) k)) (to_rep (select o (- k 1))))))
  (forall ((k Int))
  (=> (and (<= ia k) (<= k (- (to_rep1 (last (rt a))) 1)))
  (= (to_rep (select (elts a) (+ k 1))) (to_rep (select o k)))))))))))
  (and (= result1 (is_perm o21 o20))
  (= (= result1 true)
  (or (and (= (length o21) 0) (= (length o20) 0))
  (exists ((ia1 Int))
  (and (and (<= (to_rep1 (first o1)) ia1) (<= ia1 (to_rep1 (last o1))))
  (exists ((ib10 Int))
  (and (and (<= (to_rep1 (first o4)) ib10) (<= ib10 (to_rep1 (last o4))))
  (and (= (to_rep (select o ia1)) (to_rep (select o3 ib10)))
  (= (is_perm (remove o21 ia1) (remove o20 ib10)) true)))))))))))
  (= result1 false)))
  (and (not (= result1 true))
  (and (= perm__get_witness__result2 perm__get_witness__result)
  (= perm__get_witness__result2 perm__get_witness__result1))))
  (and
  (and
  (and (= perm__get_witness__result4 perm__get_witness__result5) (= ib3 ib4))
  (and (= perm__get_witness__result6 perm__get_witness__result4) (= ib5 ib3)))
  (and
  (forall ((kb Int))
  (=> (and (<= 1 kb) (<= kb ib2))
  (not
  (and (= (to_rep (select (elts a) ia)) (to_rep (select (elts b) kb)))
  (= (is_perm (remove a ia) (remove b kb)) true)))))
  (and
  (and
  (=> (<= (to_rep1 (first (rt b))) (to_rep1 (last (rt b))))
  (dynamic_property1 (to_rep1 (first (rt b))) (to_rep1 (last (rt b)))
  ib2))
  (and (<= (to_rep1 (first (rt b))) ib2) (<= ib2 (to_rep1 (last (rt b))))))
  (and (not (= ib2 temp___585))
  (and (and (= ib2 result4) (= ib3 (+ ib2 1)))
  (and
  (and
  (and
  (and
  (and
  (and (and (<= (to_rep1 (first (rt a))) ia) (<= ia (to_rep1 (last (rt a)))))
  (= o14 ia)) (= o15 (select (elts a) o14))) (= o16 (to_rep o15)))
  (= result6 (ite (= o16 (to_rep (select (elts b) ib3))) true false)))
  (ite (= result6 true)
  (and
  (and (and (= o11 ib3) (in_range2 ib3))
  (and (= o18 (remove b o11))
  (and (dynamic_invariant1 o18 true false true)
  (and (= (invariant__ o18) true)
  (and (= (to_rep1 (last o13)) (- (to_rep1 (last (rt b))) 1))
  (and
  (forall ((k Int))
  (=> (and (<= 1 k) (<= k (- o11 1)))
  (= (to_rep (select (elts b) k)) (to_rep (select o12 k)))))
  (and
  (forall ((k Int))
  (=> (and (<= (+ o11 1) k) (<= k (to_rep1 (last (rt b)))))
  (= (to_rep (select (elts b) k)) (to_rep (select o12 (- k 1))))))
  (forall ((k Int))
  (=> (and (<= o11 k) (<= k (- (to_rep1 (last (rt b))) 1)))
  (= (to_rep (select (elts b) (+ k 1))) (to_rep (select o12 k))))))))))))
  (and
  (and (= o19 (remove a ia))
  (and (dynamic_invariant1 o19 true false true)
  (and (= (invariant__ o19) true)
  (and (= (to_rep1 (last o10)) (- (to_rep1 (last (rt a))) 1))
  (and
  (forall ((k Int))
  (=> (and (<= 1 k) (<= k (- ia 1)))
  (= (to_rep (select (elts a) k)) (to_rep (select o9 k)))))
  (and
  (forall ((k Int))
  (=> (and (<= (+ ia 1) k) (<= k (to_rep1 (last (rt a)))))
  (= (to_rep (select (elts a) k)) (to_rep (select o9 (- k 1))))))
  (forall ((k Int))
  (=> (and (<= ia k) (<= k (- (to_rep1 (last (rt a))) 1)))
  (= (to_rep (select (elts a) (+ k 1))) (to_rep (select o9 k)))))))))))
  (and (= result5 (is_perm o19 o18))
  (= (= result5 true)
  (or (and (= (length o19) 0) (= (length o18) 0))
  (exists ((ia1 Int))
  (and (and (<= (to_rep1 (first o10)) ia1) (<= ia1 (to_rep1 (last o10))))
  (exists ((ib10 Int))
  (and (and (<= (to_rep1 (first o13)) ib10) (<= ib10 (to_rep1 (last o13))))
  (and (= (to_rep (select o9 ia1)) (to_rep (select o12 ib10)))
  (= (is_perm (remove o19 ia1) (remove o18 ib10)) true)))))))))))
  (= result5 false)))
  (and (= result5 true)
  (and (and (= o17 ib3) (in_range2 ib3))
  (and (= perm__get_witness__result3 result7)
  (= perm__get_witness__result4 o17)))))))))))))

;; H
  (assert (= perm__get_witness__result9 perm__get_witness__result7))

;; H
  (assert (= ib8 ib6))

;; H
  (assert (= perm__get_witness__result10 perm__get_witness__result8))

;; H
  (assert (= ib9 ib7))

;; H
  (assert
  (<= (to_rep1 (first (rt b))) (int__content perm__get_witness__result9)))

;; H
  (assert
  (<= (int__content perm__get_witness__result9) (to_rep1 (last (rt b)))))

(assert
;; WP_parameter_def
 ;; File "perm.ads", line 3, characters 0-0
  (not
  (<= (to_rep1 (first (rt b))) (int__content perm__get_witness__result9))))
(check-sat)
(exit)
