;; produced by z3_gnatprove.drv ;;
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.0)
(set-info :category industrial)
(set-info :status unknown)
(set-option :smt.mbqi false)
(set-option :smt.macro-finder true)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun nth ((_ BitVec 8) Int) Bool)

(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))

(declare-fun pow2 (Int) Int)

(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8))
                                           (bv2int x) (- (- 256 (bv2int x)))))

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))

(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8)
  (_ BitVec 8)) Bool)

(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))

(define-fun bv_min ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 8))
  (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))

(declare-fun nth1 ((_ BitVec 32) Int) Bool)

(declare-fun lsr1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun asr1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun lsl1 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_right2 ((_ BitVec 32) Int) (_ BitVec 32))

(declare-fun rotate_left2 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun to_int2 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32))
                                            (bv2int x)
                                            (- (- 4294967296 (bv2int x)))))

(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))

(declare-fun nth_bv1 ((_ BitVec 32) (_ BitVec 32)) Bool)

(declare-fun eq_sub_bv1 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)
  (_ BitVec 32)) Bool)

(define-fun eq_sub1 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))

(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 32))))))
(declare-fun power1 ((_ BitVec 32) Int) (_ BitVec 32))

(define-fun bv_min1 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))

(define-fun bv_max1 ((x (_ BitVec 32))
  (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))

(declare-sort storage_element 0)

(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))

(declare-fun attr__ATTRIBUTE_IMAGE ((_ BitVec 8)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) (_ BitVec 8))

(declare-fun user_eq (storage_element storage_element) Bool)

(declare-const dummy storage_element)

(declare-datatypes ()
((storage_element__ref
 (mk_storage_element__ref (storage_element__content storage_element)))))
(define-fun storage_element__ref___projection ((a storage_element__ref)) storage_element
  (storage_element__content a))

(declare-fun to_rep (storage_element) (_ BitVec 8))

(declare-fun of_rep ((_ BitVec 8)) storage_element)

;; inversion_axiom
  (assert
  (forall ((x storage_element))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 8)))
  (! (= (to_rep (of_rep x)) x) :pattern ((to_rep (of_rep x))) )))

(define-fun to_int3 ((x storage_element)) Int (bv2int (to_rep x)))

;; range_int_axiom
  (assert
  (forall ((x storage_element)) (! (uint_in_range
  (to_int3 x)) :pattern ((to_int3 x)) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int storage_element))))))
(declare-fun slide ((Array Int storage_element) Int
  Int) (Array Int storage_element))

;; slide_eq
  (assert
  (forall ((a (Array Int storage_element)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int storage_element)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int storage_element) Int Int
  (Array Int storage_element) Int Int) (Array Int storage_element))

;; concat_def
  (assert
  (forall ((a (Array Int storage_element)) (b (Array Int storage_element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (storage_element Int) (Array Int storage_element))

;; singleton_def
  (assert
  (forall ((v storage_element))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int storage_element)) (a__first Int)
  (a__last Int) (b (Array Int storage_element)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep (select a temp___idx_132)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int storage_element)) (b (Array Int storage_element)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int storage_element) Int Int
  (Array Int storage_element) Int Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int storage_element)) (b (Array Int storage_element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int storage_element)) (b (Array Int storage_element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (bvult (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int storage_element)) (b (Array Int storage_element)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (bvugt (to_rep (select a (+ j 1))) (to_rep (select b (+ i 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-sort tintB 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq1 (tintB tintB) Bool)

(declare-const dummy1 tintB)

(declare-datatypes () ((tintB__ref (mk_tintB__ref (tintB__content tintB)))))
(define-fun tintB__ref___projection ((a tintB__ref)) tintB (tintB__content a))

(declare-sort int__ 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq2 (int__ int__) Bool)

(declare-const dummy2 int__)

(declare-datatypes () ((int____ref (mk_int____ref (int____content int__)))))
(define-fun int____ref___projection ((a int____ref)) int__ (int____content a))

(define-fun dynamic_invariant ((temp___expr_267 Int)
  (temp___is_init_264 Bool) (temp___skip_constant_265 Bool)
  (temp___do_toplevel_266 Bool)) Bool (=>
                                      (or (= temp___is_init_264 true)
                                      (<= (- 2147483648) 2147483647))
                                      (in_range1 temp___expr_267)))

(declare-fun to_rep1 (int__) Int)

(declare-fun of_rep1 (Int) int__)

;; inversion_axiom
  (assert
  (forall ((x int__))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x int__)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort nat 0)

(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 32))

(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 32)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 32))

(declare-fun user_eq3 (nat nat) Bool)

(declare-const dummy3 nat)

(declare-datatypes () ((nat__ref (mk_nat__ref (nat__content nat)))))
(define-fun nat__ref___projection ((a nat__ref)) nat (nat__content a))

(define-fun dynamic_invariant1 ((temp___expr_273 (_ BitVec 32))
  (temp___is_init_270 Bool) (temp___skip_constant_271 Bool)
  (temp___do_toplevel_272 Bool)) Bool true)

(declare-fun to_rep2 (nat) (_ BitVec 32))

(declare-fun of_rep2 ((_ BitVec 32)) nat)

;; inversion_axiom
  (assert
  (forall ((x nat)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert true)

;; coerce_axiom
  (assert
  (forall ((x (_ BitVec 32)))
  (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))) )))

(define-fun to_int4 ((x nat)) Int (bv2int (to_rep2 x)))

;; range_int_axiom
  (assert
  (forall ((x nat)) (! (uint_in_range1 (to_int4 x)) :pattern ((to_int4 x)) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__linted__update__packet__x_position int__)(rec__linted__update__packet__y_position int__)(rec__linted__update__packet__z_position int__)(rec__linted__update__packet__mx_position int__)(rec__linted__update__packet__my_position int__)(rec__linted__update__packet__mz_position int__)(rec__linted__update__packet__z_rotation nat)(rec__linted__update__packet__x_rotation nat)))))
(define-fun us_split_fields_X_Position__projection ((a us_split_fields)) int__
  (rec__linted__update__packet__x_position a))

(define-fun us_split_fields_Y_Position__projection ((a us_split_fields)) int__
  (rec__linted__update__packet__y_position a))

(define-fun us_split_fields_Z_Position__projection ((a us_split_fields)) int__
  (rec__linted__update__packet__z_position a))

(define-fun us_split_fields_MX_Position__projection ((a us_split_fields)) int__
  (rec__linted__update__packet__mx_position a))

(define-fun us_split_fields_MY_Position__projection ((a us_split_fields)) int__
  (rec__linted__update__packet__my_position a))

(define-fun us_split_fields_MZ_Position__projection ((a us_split_fields)) int__
  (rec__linted__update__packet__mz_position a))

(define-fun us_split_fields_Z_Rotation__projection ((a us_split_fields)) nat
  (rec__linted__update__packet__z_rotation a))

(define-fun us_split_fields_X_Rotation__projection ((a us_split_fields)) nat
  (rec__linted__update__packet__x_rotation a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1
                                                             a))

(define-fun bool_eq1 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (and
                        (= (to_rep1
                           (rec__linted__update__packet__x_position
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__linted__update__packet__x_position
                                                  (us_split_fields1 b))))
                        (= (to_rep1
                           (rec__linted__update__packet__y_position
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__linted__update__packet__y_position
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__linted__update__packet__z_position
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__linted__update__packet__z_position
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__linted__update__packet__mx_position
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__linted__update__packet__mx_position
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__linted__update__packet__my_position
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__linted__update__packet__my_position
                                                  (us_split_fields1 b)))))
                        (= (to_rep1
                           (rec__linted__update__packet__mz_position
                           (us_split_fields1 a))) (to_rep1
                                                  (rec__linted__update__packet__mz_position
                                                  (us_split_fields1 b)))))
                        (= (to_rep2
                           (rec__linted__update__packet__z_rotation
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__linted__update__packet__z_rotation
                                                  (us_split_fields1 b)))))
                        (= (to_rep2
                           (rec__linted__update__packet__x_rotation
                           (us_split_fields1 a))) (to_rep2
                                                  (rec__linted__update__packet__x_rotation
                                                  (us_split_fields1 b)))))
                   true false))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const linted__update__packet__x_position__first__bit Int)

(declare-const linted__update__packet__x_position__last__bit Int)

(declare-const linted__update__packet__x_position__position Int)

;; linted__update__packet__x_position__first__bit_axiom
  (assert (<= 0 linted__update__packet__x_position__first__bit))

;; linted__update__packet__x_position__last__bit_axiom
  (assert
  (< linted__update__packet__x_position__first__bit linted__update__packet__x_position__last__bit))

;; linted__update__packet__x_position__position_axiom
  (assert (<= 0 linted__update__packet__x_position__position))

(declare-const linted__update__packet__y_position__first__bit Int)

(declare-const linted__update__packet__y_position__last__bit Int)

(declare-const linted__update__packet__y_position__position Int)

;; linted__update__packet__y_position__first__bit_axiom
  (assert (<= 0 linted__update__packet__y_position__first__bit))

;; linted__update__packet__y_position__last__bit_axiom
  (assert
  (< linted__update__packet__y_position__first__bit linted__update__packet__y_position__last__bit))

;; linted__update__packet__y_position__position_axiom
  (assert (<= 0 linted__update__packet__y_position__position))

(declare-const linted__update__packet__z_position__first__bit Int)

(declare-const linted__update__packet__z_position__last__bit Int)

(declare-const linted__update__packet__z_position__position Int)

;; linted__update__packet__z_position__first__bit_axiom
  (assert (<= 0 linted__update__packet__z_position__first__bit))

;; linted__update__packet__z_position__last__bit_axiom
  (assert
  (< linted__update__packet__z_position__first__bit linted__update__packet__z_position__last__bit))

;; linted__update__packet__z_position__position_axiom
  (assert (<= 0 linted__update__packet__z_position__position))

(declare-const linted__update__packet__mx_position__first__bit Int)

(declare-const linted__update__packet__mx_position__last__bit Int)

(declare-const linted__update__packet__mx_position__position Int)

;; linted__update__packet__mx_position__first__bit_axiom
  (assert (<= 0 linted__update__packet__mx_position__first__bit))

;; linted__update__packet__mx_position__last__bit_axiom
  (assert
  (< linted__update__packet__mx_position__first__bit linted__update__packet__mx_position__last__bit))

;; linted__update__packet__mx_position__position_axiom
  (assert (<= 0 linted__update__packet__mx_position__position))

(declare-const linted__update__packet__my_position__first__bit Int)

(declare-const linted__update__packet__my_position__last__bit Int)

(declare-const linted__update__packet__my_position__position Int)

;; linted__update__packet__my_position__first__bit_axiom
  (assert (<= 0 linted__update__packet__my_position__first__bit))

;; linted__update__packet__my_position__last__bit_axiom
  (assert
  (< linted__update__packet__my_position__first__bit linted__update__packet__my_position__last__bit))

;; linted__update__packet__my_position__position_axiom
  (assert (<= 0 linted__update__packet__my_position__position))

(declare-const linted__update__packet__mz_position__first__bit Int)

(declare-const linted__update__packet__mz_position__last__bit Int)

(declare-const linted__update__packet__mz_position__position Int)

;; linted__update__packet__mz_position__first__bit_axiom
  (assert (<= 0 linted__update__packet__mz_position__first__bit))

;; linted__update__packet__mz_position__last__bit_axiom
  (assert
  (< linted__update__packet__mz_position__first__bit linted__update__packet__mz_position__last__bit))

;; linted__update__packet__mz_position__position_axiom
  (assert (<= 0 linted__update__packet__mz_position__position))

(declare-const linted__update__packet__z_rotation__first__bit Int)

(declare-const linted__update__packet__z_rotation__last__bit Int)

(declare-const linted__update__packet__z_rotation__position Int)

;; linted__update__packet__z_rotation__first__bit_axiom
  (assert (<= 0 linted__update__packet__z_rotation__first__bit))

;; linted__update__packet__z_rotation__last__bit_axiom
  (assert
  (< linted__update__packet__z_rotation__first__bit linted__update__packet__z_rotation__last__bit))

;; linted__update__packet__z_rotation__position_axiom
  (assert (<= 0 linted__update__packet__z_rotation__position))

(declare-const linted__update__packet__x_rotation__first__bit Int)

(declare-const linted__update__packet__x_rotation__last__bit Int)

(declare-const linted__update__packet__x_rotation__position Int)

;; linted__update__packet__x_rotation__first__bit_axiom
  (assert (<= 0 linted__update__packet__x_rotation__first__bit))

;; linted__update__packet__x_rotation__last__bit_axiom
  (assert
  (< linted__update__packet__x_rotation__first__bit linted__update__packet__x_rotation__last__bit))

;; linted__update__packet__x_rotation__position_axiom
  (assert (<= 0 linted__update__packet__x_rotation__position))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-const dummy4 us_rep)

(declare-datatypes ()
((packet__ref (mk_packet__ref (packet__content us_rep)))))
(define-fun packet__ref___projection ((a packet__ref)) us_rep (packet__content
                                                              a))

(define-fun default_initial_assumption ((temp___expr_280 us_rep)
  (temp___skip_top_level_281 Bool)) Bool (and
                                         (and
                                         (and
                                         (and
                                         (and
                                         (and
                                         (and
                                         (= (to_rep1
                                            (rec__linted__update__packet__x_position
                                            (us_split_fields1
                                            temp___expr_280))) 0)
                                         (= (to_rep1
                                            (rec__linted__update__packet__y_position
                                            (us_split_fields1
                                            temp___expr_280))) 0))
                                         (= (to_rep1
                                            (rec__linted__update__packet__z_position
                                            (us_split_fields1
                                            temp___expr_280))) 0))
                                         (= (to_rep1
                                            (rec__linted__update__packet__mx_position
                                            (us_split_fields1
                                            temp___expr_280))) 0))
                                         (= (to_rep1
                                            (rec__linted__update__packet__my_position
                                            (us_split_fields1
                                            temp___expr_280))) 0))
                                         (= (to_rep1
                                            (rec__linted__update__packet__mz_position
                                            (us_split_fields1
                                            temp___expr_280))) 0))
                                         (= (to_rep2
                                            (rec__linted__update__packet__z_rotation
                                            (us_split_fields1
                                            temp___expr_280))) ((_ int2bv 32) 0)))
                                         (= (to_rep2
                                            (rec__linted__update__packet__x_rotation
                                            (us_split_fields1
                                            temp___expr_280))) ((_ int2bv 32) 0))))

(declare-sort tstorageP1 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 32)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (tstorageP1 tstorageP1) Bool)

(declare-const dummy5 tstorageP1)

(declare-datatypes ()
((tstorageP1__ref (mk_tstorageP1__ref (tstorageP1__content tstorageP1)))))
(define-fun tstorageP1__ref___projection ((a tstorageP1__ref)) tstorageP1
  (tstorageP1__content a))

(declare-const s (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-sort ttupleP1 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 4)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq6 (ttupleP1 ttupleP1) Bool)

(declare-const dummy6 ttupleP1)

(declare-datatypes ()
((ttupleP1__ref (mk_ttupleP1__ref (ttupleP1__content ttupleP1)))))
(define-fun ttupleP1__ref___projection ((a ttupleP1__ref)) ttupleP1 (ttupleP1__content
                                                                    a))

(declare-const c19b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-sort t43b 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq7 (t43b t43b) Bool)

(declare-const dummy7 t43b)

(declare-datatypes () ((t43b__ref (mk_t43b__ref (t43b__content t43b)))))
(define-fun t43b__ref___projection ((a t43b__ref)) t43b (t43b__content a))

(declare-const c46b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-sort t56b 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq8 (t56b t56b) Bool)

(declare-const dummy8 t56b)

(declare-datatypes () ((t56b__ref (mk_t56b__ref (t56b__content t56b)))))
(define-fun t56b__ref___projection ((a t56b__ref)) t56b (t56b__content a))

(declare-sort t60b 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq9 (t60b t60b) Bool)

(declare-const dummy9 t60b)

(declare-datatypes () ((t60b__ref (mk_t60b__ref (t60b__content t60b)))))
(define-fun t60b__ref___projection ((a t60b__ref)) t60b (t60b__content a))

(declare-sort t64b 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq10 (t64b t64b) Bool)

(declare-const dummy10 t64b)

(declare-datatypes () ((t64b__ref (mk_t64b__ref (t64b__content t64b)))))
(define-fun t64b__ref___projection ((a t64b__ref)) t64b (t64b__content a))

(declare-sort t68b 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 5 x) (<= x 8)))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq11 (t68b t68b) Bool)

(declare-const dummy11 t68b)

(declare-datatypes () ((t68b__ref (mk_t68b__ref (t68b__content t68b)))))
(define-fun t68b__ref___projection ((a t68b__ref)) t68b (t68b__content a))

(declare-sort t70b 0)

(define-fun in_range9 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq12 (t70b t70b) Bool)

(declare-const dummy12 t70b)

(declare-datatypes () ((t70b__ref (mk_t70b__ref (t70b__content t70b)))))
(define-fun t70b__ref___projection ((a t70b__ref)) t70b (t70b__content a))

(declare-const c73b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-sort t83b 0)

(define-fun in_range10 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)

(declare-fun user_eq13 (t83b t83b) Bool)

(declare-const dummy13 t83b)

(declare-datatypes () ((t83b__ref (mk_t83b__ref (t83b__content t83b)))))
(define-fun t83b__ref___projection ((a t83b__ref)) t83b (t83b__content a))

(declare-sort t87b 0)

(define-fun in_range11 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)

(declare-fun user_eq14 (t87b t87b) Bool)

(declare-const dummy14 t87b)

(declare-datatypes () ((t87b__ref (mk_t87b__ref (t87b__content t87b)))))
(define-fun t87b__ref___projection ((a t87b__ref)) t87b (t87b__content a))

(declare-sort t91b 0)

(define-fun in_range12 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)

(declare-fun user_eq15 (t91b t91b) Bool)

(declare-const dummy15 t91b)

(declare-datatypes () ((t91b__ref (mk_t91b__ref (t91b__content t91b)))))
(define-fun t91b__ref___projection ((a t91b__ref)) t91b (t91b__content a))

(declare-sort t95b 0)

(define-fun in_range13 ((x Int)) Bool (and (<= 9 x) (<= x 12)))

(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)

(declare-fun user_eq16 (t95b t95b) Bool)

(declare-const dummy16 t95b)

(declare-datatypes () ((t95b__ref (mk_t95b__ref (t95b__content t95b)))))
(define-fun t95b__ref___projection ((a t95b__ref)) t95b (t95b__content a))

(declare-sort t97b 0)

(define-fun in_range14 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)

(declare-fun user_eq17 (t97b t97b) Bool)

(declare-const dummy17 t97b)

(declare-datatypes () ((t97b__ref (mk_t97b__ref (t97b__content t97b)))))
(define-fun t97b__ref___projection ((a t97b__ref)) t97b (t97b__content a))

(declare-const c100b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-sort t110b 0)

(define-fun in_range15 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)

(declare-fun user_eq18 (t110b t110b) Bool)

(declare-const dummy18 t110b)

(declare-datatypes () ((t110b__ref (mk_t110b__ref (t110b__content t110b)))))
(define-fun t110b__ref___projection ((a t110b__ref)) t110b (t110b__content a))

(declare-sort t114b 0)

(define-fun in_range16 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)

(declare-fun user_eq19 (t114b t114b) Bool)

(declare-const dummy19 t114b)

(declare-datatypes () ((t114b__ref (mk_t114b__ref (t114b__content t114b)))))
(define-fun t114b__ref___projection ((a t114b__ref)) t114b (t114b__content a))

(declare-sort t118b 0)

(define-fun in_range17 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE19 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check19 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE19 (us_image) Int)

(declare-fun user_eq20 (t118b t118b) Bool)

(declare-const dummy20 t118b)

(declare-datatypes () ((t118b__ref (mk_t118b__ref (t118b__content t118b)))))
(define-fun t118b__ref___projection ((a t118b__ref)) t118b (t118b__content a))

(declare-sort t122b 0)

(define-fun in_range18 ((x Int)) Bool (and (<= 13 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE20 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check20 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE20 (us_image) Int)

(declare-fun user_eq21 (t122b t122b) Bool)

(declare-const dummy21 t122b)

(declare-datatypes () ((t122b__ref (mk_t122b__ref (t122b__content t122b)))))
(define-fun t122b__ref___projection ((a t122b__ref)) t122b (t122b__content a))

(declare-sort t124b 0)

(define-fun in_range19 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE21 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check21 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE21 (us_image) Int)

(declare-fun user_eq22 (t124b t124b) Bool)

(declare-const dummy22 t124b)

(declare-datatypes () ((t124b__ref (mk_t124b__ref (t124b__content t124b)))))
(define-fun t124b__ref___projection ((a t124b__ref)) t124b (t124b__content a))

(declare-const c127b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

(declare-sort t137b 0)

(define-fun in_range20 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE22 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check22 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE22 (us_image) Int)

(declare-fun user_eq23 (t137b t137b) Bool)

(declare-const dummy23 t137b)

(declare-datatypes () ((t137b__ref (mk_t137b__ref (t137b__content t137b)))))
(define-fun t137b__ref___projection ((a t137b__ref)) t137b (t137b__content a))

(declare-sort t141b 0)

(define-fun in_range21 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE23 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check23 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE23 (us_image) Int)

(declare-fun user_eq24 (t141b t141b) Bool)

(declare-const dummy24 t141b)

(declare-datatypes () ((t141b__ref (mk_t141b__ref (t141b__content t141b)))))
(define-fun t141b__ref___projection ((a t141b__ref)) t141b (t141b__content a))

(declare-sort t145b 0)

(define-fun in_range22 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE24 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check24 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE24 (us_image) Int)

(declare-fun user_eq25 (t145b t145b) Bool)

(declare-const dummy25 t145b)

(declare-datatypes () ((t145b__ref (mk_t145b__ref (t145b__content t145b)))))
(define-fun t145b__ref___projection ((a t145b__ref)) t145b (t145b__content a))

(declare-sort t149b 0)

(define-fun in_range23 ((x Int)) Bool (and (<= 17 x) (<= x 20)))

(declare-fun attr__ATTRIBUTE_IMAGE25 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check25 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE25 (us_image) Int)

(declare-fun user_eq26 (t149b t149b) Bool)

(declare-const dummy26 t149b)

(declare-datatypes () ((t149b__ref (mk_t149b__ref (t149b__content t149b)))))
(define-fun t149b__ref___projection ((a t149b__ref)) t149b (t149b__content a))

(declare-sort t151b 0)

(define-fun in_range24 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(declare-fun attr__ATTRIBUTE_IMAGE26 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check26 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE26 (us_image) Int)

(declare-fun user_eq27 (t151b t151b) Bool)

(declare-const dummy27 t151b)

(declare-datatypes () ((t151b__ref (mk_t151b__ref (t151b__content t151b)))))
(define-fun t151b__ref___projection ((a t151b__ref)) t151b (t151b__content a))

(declare-const c154b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS17 Int)

(declare-const attr__ATTRIBUTE_ADDRESS18 Int)

(declare-const attr__ATTRIBUTE_ADDRESS19 Int)

(declare-sort t164b 0)

(define-fun in_range25 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(declare-fun attr__ATTRIBUTE_IMAGE27 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check27 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE27 (us_image) Int)

(declare-fun user_eq28 (t164b t164b) Bool)

(declare-const dummy28 t164b)

(declare-datatypes () ((t164b__ref (mk_t164b__ref (t164b__content t164b)))))
(define-fun t164b__ref___projection ((a t164b__ref)) t164b (t164b__content a))

(declare-sort t168b 0)

(define-fun in_range26 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(declare-fun attr__ATTRIBUTE_IMAGE28 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check28 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE28 (us_image) Int)

(declare-fun user_eq29 (t168b t168b) Bool)

(declare-const dummy29 t168b)

(declare-datatypes () ((t168b__ref (mk_t168b__ref (t168b__content t168b)))))
(define-fun t168b__ref___projection ((a t168b__ref)) t168b (t168b__content a))

(declare-sort t172b 0)

(define-fun in_range27 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(declare-fun attr__ATTRIBUTE_IMAGE29 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check29 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE29 (us_image) Int)

(declare-fun user_eq30 (t172b t172b) Bool)

(declare-const dummy30 t172b)

(declare-datatypes () ((t172b__ref (mk_t172b__ref (t172b__content t172b)))))
(define-fun t172b__ref___projection ((a t172b__ref)) t172b (t172b__content a))

(declare-sort t176b 0)

(define-fun in_range28 ((x Int)) Bool (and (<= 21 x) (<= x 24)))

(declare-fun attr__ATTRIBUTE_IMAGE30 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check30 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE30 (us_image) Int)

(declare-fun user_eq31 (t176b t176b) Bool)

(declare-const dummy31 t176b)

(declare-datatypes () ((t176b__ref (mk_t176b__ref (t176b__content t176b)))))
(define-fun t176b__ref___projection ((a t176b__ref)) t176b (t176b__content a))

(declare-sort t178b 0)

(define-fun in_range29 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(declare-fun attr__ATTRIBUTE_IMAGE31 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check31 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE31 (us_image) Int)

(declare-fun user_eq32 (t178b t178b) Bool)

(declare-const dummy32 t178b)

(declare-datatypes () ((t178b__ref (mk_t178b__ref (t178b__content t178b)))))
(define-fun t178b__ref___projection ((a t178b__ref)) t178b (t178b__content a))

(declare-const c181b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS20 Int)

(declare-sort t184b 0)

(define-fun in_range30 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(declare-fun attr__ATTRIBUTE_IMAGE32 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check32 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE32 (us_image) Int)

(declare-fun user_eq33 (t184b t184b) Bool)

(declare-const dummy33 t184b)

(declare-datatypes () ((t184b__ref (mk_t184b__ref (t184b__content t184b)))))
(define-fun t184b__ref___projection ((a t184b__ref)) t184b (t184b__content a))

(declare-sort t186b 0)

(define-fun in_range31 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(declare-fun attr__ATTRIBUTE_IMAGE33 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check33 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE33 (us_image) Int)

(declare-fun user_eq34 (t186b t186b) Bool)

(declare-const dummy34 t186b)

(declare-datatypes () ((t186b__ref (mk_t186b__ref (t186b__content t186b)))))
(define-fun t186b__ref___projection ((a t186b__ref)) t186b (t186b__content a))

(declare-sort t188b 0)

(define-fun in_range32 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(declare-fun attr__ATTRIBUTE_IMAGE34 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check34 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE34 (us_image) Int)

(declare-fun user_eq35 (t188b t188b) Bool)

(declare-const dummy35 t188b)

(declare-datatypes () ((t188b__ref (mk_t188b__ref (t188b__content t188b)))))
(define-fun t188b__ref___projection ((a t188b__ref)) t188b (t188b__content a))

(declare-sort t190b 0)

(define-fun in_range33 ((x Int)) Bool (and (<= 25 x) (<= x 28)))

(declare-fun attr__ATTRIBUTE_IMAGE35 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check35 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE35 (us_image) Int)

(declare-fun user_eq36 (t190b t190b) Bool)

(declare-const dummy36 t190b)

(declare-datatypes () ((t190b__ref (mk_t190b__ref (t190b__content t190b)))))
(define-fun t190b__ref___projection ((a t190b__ref)) t190b (t190b__content a))

(declare-sort t192b 0)

(define-fun in_range34 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(declare-fun attr__ATTRIBUTE_IMAGE36 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check36 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE36 (us_image) Int)

(declare-fun user_eq37 (t192b t192b) Bool)

(declare-const dummy37 t192b)

(declare-datatypes () ((t192b__ref (mk_t192b__ref (t192b__content t192b)))))
(define-fun t192b__ref___projection ((a t192b__ref)) t192b (t192b__content a))

(declare-const c195b (Array Int storage_element))

(declare-const attr__ATTRIBUTE_ADDRESS21 Int)

(declare-sort t198b 0)

(define-fun in_range35 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(declare-fun attr__ATTRIBUTE_IMAGE37 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check37 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE37 (us_image) Int)

(declare-fun user_eq38 (t198b t198b) Bool)

(declare-const dummy38 t198b)

(declare-datatypes () ((t198b__ref (mk_t198b__ref (t198b__content t198b)))))
(define-fun t198b__ref___projection ((a t198b__ref)) t198b (t198b__content a))

(declare-sort t200b 0)

(define-fun in_range36 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(declare-fun attr__ATTRIBUTE_IMAGE38 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check38 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE38 (us_image) Int)

(declare-fun user_eq39 (t200b t200b) Bool)

(declare-const dummy39 t200b)

(declare-datatypes () ((t200b__ref (mk_t200b__ref (t200b__content t200b)))))
(define-fun t200b__ref___projection ((a t200b__ref)) t200b (t200b__content a))

(declare-sort t202b 0)

(define-fun in_range37 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(declare-fun attr__ATTRIBUTE_IMAGE39 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check39 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE39 (us_image) Int)

(declare-fun user_eq40 (t202b t202b) Bool)

(declare-const dummy40 t202b)

(declare-datatypes () ((t202b__ref (mk_t202b__ref (t202b__content t202b)))))
(define-fun t202b__ref___projection ((a t202b__ref)) t202b (t202b__content a))

(declare-sort t204b 0)

(define-fun in_range38 ((x Int)) Bool (and (<= 29 x) (<= x 32)))

(declare-fun attr__ATTRIBUTE_IMAGE40 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check40 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE40 (us_image) Int)

(declare-fun user_eq41 (t204b t204b) Bool)

(declare-const dummy41 t204b)

(declare-datatypes () ((t204b__ref (mk_t204b__ref (t204b__content t204b)))))
(define-fun t204b__ref___projection ((a t204b__ref)) t204b (t204b__content a))

(define-fun dynamic_invariant2 ((temp___expr_250 (_ BitVec 8))
  (temp___is_init_247 Bool) (temp___skip_constant_248 Bool)
  (temp___do_toplevel_249 Bool)) Bool true)

(declare-const u__split_fields int__)

(declare-const u__split_fields1 int__)

(declare-const u__split_fields2 int__)

(declare-const u__split_fields3 int__)

(declare-const u__split_fields4 int__)

(declare-const u__split_fields5 int__)

(declare-const u__split_fields6 nat)

(declare-const u__split_fields7 nat)

(declare-const x (_ BitVec 32))

(declare-const y Int)

(declare-const x1 (_ BitVec 32))

(declare-const y1 Int)

(declare-const x2 (_ BitVec 32))

(declare-const y2 Int)

(declare-const x3 (_ BitVec 32))

(declare-const y3 Int)

(declare-const x4 (_ BitVec 32))

(declare-const y4 Int)

(declare-const x5 (_ BitVec 32))

(declare-const y5 Int)

(declare-const linted__update__from_storage__C19b__assume (Array Int storage_element))

(declare-const temp___378 (Array Int storage_element))

(declare-const o storage_element)

(declare-const o1 (_ BitVec 8))

(declare-const temp___381 (Array Int storage_element))

(declare-const o2 storage_element)

(declare-const o3 (_ BitVec 8))

(declare-const o4 (_ BitVec 32))

(declare-const o5 (_ BitVec 32))

(declare-const o6 (_ BitVec 32))

(declare-const temp___384 (Array Int storage_element))

(declare-const o7 storage_element)

(declare-const o8 (_ BitVec 8))

(declare-const o9 (_ BitVec 32))

(declare-const o10 (_ BitVec 32))

(declare-const o11 (_ BitVec 32))

(declare-const temp___387 (Array Int storage_element))

(declare-const o12 storage_element)

(declare-const o13 (_ BitVec 8))

(declare-const o14 (_ BitVec 32))

(declare-const o15 (_ BitVec 32))

(declare-const o16 (_ BitVec 32))

(declare-const o17 (_ BitVec 32))

(declare-const o18 Int)

(declare-const o19 Int)

(declare-const o20 Int)

(declare-const o21 Int)

(declare-const o22 Int)

(declare-const o23 int__)

(declare-const o24 int__)

(declare-const o25 int__)

(declare-const o26 int__)

(declare-const o27 int__)

(declare-const o28 int__)

(declare-const o29 int__)

(declare-const o30 nat)

(declare-const o31 nat)

(declare-const temp___389 int__)

(declare-const temp___3891 int__)

(declare-const temp___3892 int__)

(declare-const temp___3893 int__)

(declare-const temp___3894 int__)

(declare-const temp___3895 int__)

(declare-const temp___3896 nat)

(declare-const temp___3897 nat)

(declare-const temp___392 (Array Int storage_element))

(declare-const linted__update__from_storage__C46b__assume (Array Int storage_element))

(declare-const temp___395 (Array Int storage_element))

(declare-const temp___396 (Array Int storage_element))

(declare-const o32 storage_element)

(declare-const o33 (_ BitVec 8))

(declare-const temp___399 (Array Int storage_element))

(declare-const temp___400 (Array Int storage_element))

(declare-const o34 storage_element)

(declare-const o35 (_ BitVec 8))

(declare-const o36 (_ BitVec 32))

(declare-const o37 (_ BitVec 32))

(declare-const o38 (_ BitVec 32))

(declare-const temp___403 (Array Int storage_element))

(declare-const temp___404 (Array Int storage_element))

(declare-const o39 storage_element)

(declare-const o40 (_ BitVec 8))

(declare-const o41 (_ BitVec 32))

(declare-const o42 (_ BitVec 32))

(declare-const o43 (_ BitVec 32))

(declare-const temp___407 (Array Int storage_element))

(declare-const temp___408 (Array Int storage_element))

(declare-const o44 storage_element)

(declare-const o45 (_ BitVec 8))

(declare-const o46 (_ BitVec 32))

(declare-const o47 (_ BitVec 32))

(declare-const o48 (_ BitVec 32))

(declare-const o49 (_ BitVec 32))

(declare-const o50 Int)

(declare-const o51 Int)

(declare-const o52 Int)

(declare-const o53 Int)

(declare-const o54 Int)

(declare-const o55 int__)

(declare-const o56 int__)

(declare-const o57 int__)

(declare-const o58 int__)

(declare-const o59 int__)

(declare-const o60 int__)

(declare-const o61 int__)

(declare-const o62 nat)

(declare-const o63 nat)

(declare-const temp___410 int__)

(declare-const temp___4101 int__)

(declare-const temp___4102 int__)

(declare-const temp___4103 int__)

(declare-const temp___4104 int__)

(declare-const temp___4105 int__)

(declare-const temp___4106 nat)

(declare-const temp___4107 nat)

(declare-const temp___413 (Array Int storage_element))

(declare-const linted__update__from_storage__C73b__assume (Array Int storage_element))

(declare-const temp___416 (Array Int storage_element))

(declare-const temp___417 (Array Int storage_element))

(declare-const o64 storage_element)

(declare-const o65 (_ BitVec 8))

(declare-const temp___420 (Array Int storage_element))

(declare-const temp___421 (Array Int storage_element))

(declare-const o66 storage_element)

(declare-const o67 (_ BitVec 8))

(declare-const o68 (_ BitVec 32))

(declare-const o69 (_ BitVec 32))

(declare-const o70 (_ BitVec 32))

(declare-const temp___424 (Array Int storage_element))

(declare-const temp___425 (Array Int storage_element))

(declare-const o71 storage_element)

(declare-const o72 (_ BitVec 8))

(declare-const o73 (_ BitVec 32))

(declare-const o74 (_ BitVec 32))

(declare-const o75 (_ BitVec 32))

(declare-const temp___428 (Array Int storage_element))

(declare-const temp___429 (Array Int storage_element))

(declare-const o76 storage_element)

(declare-const o77 (_ BitVec 8))

(declare-const o78 (_ BitVec 32))

(declare-const o79 (_ BitVec 32))

(declare-const o80 (_ BitVec 32))

(declare-const o81 (_ BitVec 32))

(declare-const o82 Int)

(declare-const o83 Int)

(declare-const o84 Int)

(declare-const o85 Int)

(declare-const o86 Int)

(declare-const o87 int__)

(declare-const o88 int__)

(declare-const o89 int__)

(declare-const o90 int__)

(declare-const o91 int__)

(declare-const o92 int__)

(declare-const o93 int__)

(declare-const o94 nat)

(declare-const o95 nat)

(declare-const temp___431 us_rep)

(declare-const temp___434 (Array Int storage_element))

(declare-const linted__update__from_storage__C100b__assume (Array Int storage_element))

(declare-const temp___437 (Array Int storage_element))

(declare-const temp___438 (Array Int storage_element))

(declare-const o96 storage_element)

(declare-const o97 (_ BitVec 8))

(declare-const temp___441 (Array Int storage_element))

(declare-const temp___442 (Array Int storage_element))

(declare-const o98 storage_element)

(declare-const o99 (_ BitVec 8))

(declare-const o100 (_ BitVec 32))

(declare-const o101 (_ BitVec 32))

(declare-const o102 (_ BitVec 32))

(declare-const temp___445 (Array Int storage_element))

(declare-const temp___446 (Array Int storage_element))

(declare-const o103 storage_element)

(declare-const o104 (_ BitVec 8))

(declare-const o105 (_ BitVec 32))

(declare-const o106 (_ BitVec 32))

(declare-const o107 (_ BitVec 32))

(declare-const temp___449 (Array Int storage_element))

(declare-const temp___450 (Array Int storage_element))

(declare-const o108 storage_element)

(declare-const o109 (_ BitVec 8))

(declare-const o110 (_ BitVec 32))

(declare-const o111 (_ BitVec 32))

(declare-const o112 (_ BitVec 32))

(declare-const o113 (_ BitVec 32))

(declare-const o114 Int)

(declare-const o115 Int)

(declare-const o116 Int)

(declare-const o117 Int)

(declare-const o118 Int)

(declare-const o119 int__)

(declare-const o120 us_split_fields)

(declare-const temp___452 us_rep)

(declare-const temp___455 (Array Int storage_element))

(declare-const linted__update__from_storage__C127b__assume (Array Int storage_element))

(declare-const temp___458 (Array Int storage_element))

(declare-const temp___459 (Array Int storage_element))

(declare-const o121 storage_element)

(declare-const o122 (_ BitVec 8))

(declare-const temp___462 (Array Int storage_element))

(declare-const temp___463 (Array Int storage_element))

(declare-const o123 storage_element)

(declare-const o124 (_ BitVec 8))

(declare-const o125 (_ BitVec 32))

(declare-const o126 (_ BitVec 32))

(declare-const o127 (_ BitVec 32))

(declare-const temp___466 (Array Int storage_element))

(declare-const temp___467 (Array Int storage_element))

(declare-const o128 storage_element)

(declare-const o129 (_ BitVec 8))

(declare-const o130 (_ BitVec 32))

(declare-const o131 (_ BitVec 32))

(declare-const o132 (_ BitVec 32))

(declare-const temp___470 (Array Int storage_element))

(declare-const temp___471 (Array Int storage_element))

(declare-const o133 storage_element)

(declare-const o134 (_ BitVec 8))

(declare-const o135 (_ BitVec 32))

(declare-const o136 (_ BitVec 32))

(declare-const o137 (_ BitVec 32))

(declare-const o138 (_ BitVec 32))

(declare-const o139 Int)

(declare-const o140 Int)

(declare-const o141 Int)

(declare-const o142 Int)

(declare-const o143 Int)

(declare-const o144 int__)

(declare-const o145 us_split_fields)

(declare-const temp___473 us_rep)

(declare-const temp___476 (Array Int storage_element))

(declare-const linted__update__from_storage__C154b__assume (Array Int storage_element))

(declare-const temp___479 (Array Int storage_element))

(declare-const temp___480 (Array Int storage_element))

(declare-const o146 storage_element)

(declare-const o147 (_ BitVec 8))

(declare-const temp___483 (Array Int storage_element))

(declare-const temp___484 (Array Int storage_element))

(declare-const o148 storage_element)

(declare-const o149 (_ BitVec 8))

(declare-const o150 (_ BitVec 32))

(declare-const o151 (_ BitVec 32))

(declare-const o152 (_ BitVec 32))

(declare-const temp___487 (Array Int storage_element))

(declare-const temp___488 (Array Int storage_element))

(declare-const o153 storage_element)

(declare-const o154 (_ BitVec 8))

(declare-const o155 (_ BitVec 32))

(declare-const o156 (_ BitVec 32))

(declare-const o157 (_ BitVec 32))

(declare-const temp___491 (Array Int storage_element))

(declare-const temp___492 (Array Int storage_element))

(declare-const o158 storage_element)

(declare-const o159 (_ BitVec 8))

(declare-const o160 (_ BitVec 32))

(declare-const o161 (_ BitVec 32))

(declare-const o162 (_ BitVec 32))

(declare-const o163 (_ BitVec 32))

(declare-const o164 Int)

(declare-const o165 Int)

(declare-const o166 Int)

(declare-const o167 Int)

(declare-const o168 Int)

(declare-const o169 int__)

(declare-const o170 us_split_fields)

(declare-const temp___494 us_rep)

(declare-const temp___497 (Array Int storage_element))

(declare-const linted__update__from_storage__C181b__assume (Array Int storage_element))

(declare-const temp___500 (Array Int storage_element))

(declare-const temp___501 (Array Int storage_element))

(declare-const o171 storage_element)

(declare-const o172 (_ BitVec 8))

(declare-const temp___504 (Array Int storage_element))

(declare-const temp___505 (Array Int storage_element))

(declare-const o173 storage_element)

(declare-const o174 (_ BitVec 8))

(declare-const o175 (_ BitVec 32))

(declare-const o176 (_ BitVec 32))

(declare-const o177 (_ BitVec 32))

(declare-const temp___508 (Array Int storage_element))

(declare-const temp___509 (Array Int storage_element))

(declare-const o178 storage_element)

(declare-const o179 (_ BitVec 8))

(declare-const o180 (_ BitVec 32))

(declare-const o181 (_ BitVec 32))

(declare-const o182 (_ BitVec 32))

(declare-const temp___512 (Array Int storage_element))

(declare-const temp___513 (Array Int storage_element))

(declare-const o183 storage_element)

(declare-const o184 (_ BitVec 8))

(declare-const o185 (_ BitVec 32))

(declare-const o186 (_ BitVec 32))

(declare-const o187 (_ BitVec 32))

(declare-const o188 (_ BitVec 32))

(declare-const o189 nat)

(declare-const o190 us_split_fields)

(declare-const temp___515 us_rep)

(declare-const temp___518 (Array Int storage_element))

(declare-const linted__update__from_storage__C195b__assume (Array Int storage_element))

(declare-const temp___525 (Array Int storage_element))

(declare-const temp___526 (Array Int storage_element))

(declare-const o191 storage_element)

(declare-const o192 (_ BitVec 8))

(declare-const o193 (_ BitVec 32))

(declare-const o194 (_ BitVec 32))

(declare-const temp___529 (Array Int storage_element))

(declare-const temp___530 (Array Int storage_element))

(declare-const o195 storage_element)

(declare-const o196 (_ BitVec 8))

(declare-const o197 (_ BitVec 32))

(declare-const o198 (_ BitVec 32))

(declare-const temp___533 (Array Int storage_element))

(declare-const temp___534 (Array Int storage_element))

(declare-const o199 storage_element)

(declare-const o200 (_ BitVec 8))

(declare-const o201 (_ BitVec 32))

(declare-const o202 (_ BitVec 32))

(declare-const result t__ref1)

(declare-const x6 (_ BitVec 32))

(declare-const result1 int__ref)

(declare-const y6 Int)

(declare-const result2 int__ref)

(declare-const y7 Int)

(declare-const result3 us_split_fields__ref)

(declare-const u__split_fields8 us_split_fields)

(declare-const result4 t__ref1)

(declare-const x7 (_ BitVec 32))

(declare-const result5 int__ref)

(declare-const y8 Int)

(declare-const result6 int__ref)

(declare-const y9 Int)

(declare-const result7 us_split_fields__ref)

(declare-const u__split_fields9 us_split_fields)

(declare-const result8 t__ref1)

(declare-const x8 (_ BitVec 32))

(declare-const result9 int__ref)

(declare-const y10 Int)

(declare-const result10 int__ref)

(declare-const y11 Int)

(declare-const result11 us_split_fields__ref)

(declare-const u__split_fields10 us_split_fields)

(declare-const result12 t__ref1)

(declare-const x9 (_ BitVec 32))

(declare-const result13 int__ref)

(declare-const y12 Int)

(declare-const result14 int__ref)

(declare-const y13 Int)

(declare-const result15 us_split_fields__ref)

(declare-const u__split_fields11 us_split_fields)

(declare-const result16 t__ref1)

(declare-const x10 (_ BitVec 32))

(declare-const result17 int__ref)

(declare-const y14 Int)

(declare-const result18 int__ref)

(declare-const y15 Int)

(declare-const result19 us_split_fields__ref)

(declare-const u__split_fields12 us_split_fields)

(declare-const result20 t__ref1)

(declare-const x11 (_ BitVec 32))

(declare-const result21 int__ref)

(declare-const y16 Int)

(declare-const result22 int__ref)

(declare-const y17 Int)

(declare-const result23 us_split_fields__ref)

(declare-const u__split_fields13 us_split_fields)

(declare-const result24 us_split_fields__ref)

(declare-const u__split_fields14 us_split_fields)

(define-fun y18 () int__ref (mk_int__ref y5))

(define-fun x12 () t__ref1 (mk_t__ref1 x5))

(define-fun y19 () int__ref (mk_int__ref y4))

(define-fun x13 () t__ref1 (mk_t__ref1 x4))

(define-fun y20 () int__ref (mk_int__ref y3))

(define-fun x14 () t__ref1 (mk_t__ref1 x3))

(define-fun y21 () int__ref (mk_int__ref y2))

(define-fun x15 () t__ref1 (mk_t__ref1 x2))

(define-fun y22 () int__ref (mk_int__ref y1))

(define-fun x16 () t__ref1 (mk_t__ref1 x1))

(define-fun y23 () int__ref (mk_int__ref y))

(define-fun x17 () t__ref1 (mk_t__ref1 x))

;; H
  (assert
  (=> (<= 1 4) (and (and (<= 1 1) (<= 1 32)) (and (<= 1 4) (<= 4 32)))))

;; H
  (assert (= linted__update__from_storage__C19b__assume s))

;; H
  (assert (= linted__update__from_storage__C19b__assume c19b))

;; H
  (assert true)

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range1 y)))

;; H
  (assert (<= 1 4))

(assert
;; WP_parameter_def
 ;; File "linted-update.adb", line 90, characters 0-0
  (not (<= 1 1)))
(check-sat)
(exit)
