;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort natural 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-fun dummy () natural)

(declare-datatypes ()
((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(declare-fun to_rep (natural) Int)

(declare-fun of_rep (Int) natural)

;; inversion_axiom
  (assert
  (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((us_split_discrs
 (mk___split_discrs (rec__membership_discr__root__c natural)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural
  (rec__membership_discr__root__c a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields (mk___split_fields (rec__ext__ us_private)))))
(define-fun us_split_fields___projection ((a us_split_fields)) us_private
  (rec__ext__ a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)(attr__tag Int)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep_2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                              a))

(define-fun us_rep_3__projection ((a us_rep)) Int (attr__tag a))

(define-fun bool_eq ((a us_rep)
  (b us_rep)) Bool (ite (= (to_rep
                           (rec__membership_discr__root__c
                           (us_split_discrs1 a))) (to_rep
                                                  (rec__membership_discr__root__c
                                                  (us_split_discrs1 b))))
                   true false))

(declare-fun us_dispatch_eq (us_rep us_rep) Bool)

(declare-fun us_tag () Int)

(declare-fun value__size () Int)

(declare-fun object__size (us_rep) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-fun membership_discr__root__c__first__bit () Int)

(declare-fun membership_discr__root__c__last__bit () Int)

(declare-fun membership_discr__root__c__position () Int)

;; membership_discr__root__c__first__bit_axiom
  (assert (<= 0 membership_discr__root__c__first__bit))

;; membership_discr__root__c__last__bit_axiom
  (assert
  (< membership_discr__root__c__first__bit membership_discr__root__c__last__bit))

;; membership_discr__root__c__position_axiom
  (assert (<= 0 membership_discr__root__c__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-fun dummy1 () us_rep)

(declare-datatypes () ((root__ref (mk_root__ref (root__content us_rep)))))
(define-fun root__ref___projection ((a root__ref)) us_rep (root__content a))

(declare-fun us_tag1 () Int)

(define-fun in_range2 ((rec__membership_discr__root__c1 Int)
  (a us_rep)) Bool (= rec__membership_discr__root__c1 (to_rep
                                                      (rec__membership_discr__root__c
                                                      (us_split_discrs1 a)))))

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-fun membership_discr__root__c__first__bit1 () Int)

(declare-fun membership_discr__root__c__last__bit1 () Int)

(declare-fun membership_discr__root__c__position1 () Int)

;; membership_discr__root__c__first__bit_axiom
  (assert (<= 0 membership_discr__root__c__first__bit1))

;; membership_discr__root__c__last__bit_axiom
  (assert
  (< membership_discr__root__c__first__bit1 membership_discr__root__c__last__bit1))

;; membership_discr__root__c__position_axiom
  (assert (<= 0 membership_discr__root__c__position1))

(declare-fun user_eq2 (us_rep us_rep) Bool)

(declare-fun dummy2 () us_rep)

(declare-datatypes ()
((root_01__ref (mk_root_01__ref (root_01__content us_rep)))))
(define-fun root_01__ref___projection ((a root_01__ref)) us_rep (root_01__content
                                                                a))

(declare-fun us_tag2 () Int)

(define-fun in_range3 ((rec__membership_discr__root__c1 Int)
  (a us_rep)) Bool (= rec__membership_discr__root__c1 (to_rep
                                                      (rec__membership_discr__root__c
                                                      (us_split_discrs1 a)))))

(declare-fun value__size2 () Int)

(declare-fun object__size2 (us_rep) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))

(declare-fun membership_discr__root__c__first__bit2 () Int)

(declare-fun membership_discr__root__c__last__bit2 () Int)

(declare-fun membership_discr__root__c__position2 () Int)

;; membership_discr__root__c__first__bit_axiom
  (assert (<= 0 membership_discr__root__c__first__bit2))

;; membership_discr__root__c__last__bit_axiom
  (assert
  (< membership_discr__root__c__first__bit2 membership_discr__root__c__last__bit2))

;; membership_discr__root__c__position_axiom
  (assert (<= 0 membership_discr__root__c__position2))

(declare-fun user_eq3 (us_rep us_rep) Bool)

(declare-fun dummy3 () us_rep)

(declare-datatypes ()
((root_02__ref (mk_root_02__ref (root_02__content us_rep)))))
(define-fun root_02__ref___projection ((a root_02__ref)) us_rep (root_02__content
                                                                a))

(define-fun dynamic_invariant ((temp___expr_189 us_rep)
  (temp___is_init_186 Bool) (temp___skip_constant_187 Bool)
  (temp___do_toplevel_188 Bool)) Bool (=>
                                      (not (= temp___skip_constant_187 true))
                                      (in_range3 0 temp___expr_189)))

(define-fun default_initial_assumption ((temp___expr_191 us_rep)
  (temp___skip_top_level_192 Bool)) Bool (and
                                         (= (attr__tag temp___expr_191)
                                         us_tag2)
                                         (= (to_rep
                                            (rec__membership_discr__root__c
                                            (us_split_discrs1
                                            temp___expr_191))) 0)))

(declare-fun r02__split_discrs () us_split_discrs)

(declare-fun r02__attr__tag () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(define-fun dynamic_invariant1 ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range1
                                     temp___expr_33)))

(define-fun dynamic_invariant2 ((temp___expr_181 us_rep)
  (temp___is_init_178 Bool) (temp___skip_constant_179 Bool)
  (temp___do_toplevel_180 Bool)) Bool (=>
                                      (not (= temp___skip_constant_179 true))
                                      (in_range2 0 temp___expr_181)))

(define-fun default_initial_assumption1 ((temp___expr_183 us_rep)
  (temp___skip_top_level_184 Bool)) Bool (and
                                         (= (attr__tag temp___expr_183)
                                         us_tag1)
                                         (= (to_rep
                                            (rec__membership_discr__root__c
                                            (us_split_discrs1
                                            temp___expr_183))) 0)))

;; H
  (assert
  (and (= r02__attr__tag us_tag2)
  (= (to_rep (rec__membership_discr__root__c r02__split_discrs)) 0)))

;; H
  (assert (= 0 (to_rep (rec__membership_discr__root__c r02__split_discrs))))

;; H
  (assert (= r02__attr__tag us_tag))

(assert
;; WP_parameter_def
 ;; File "membership_discr.adb", line 17, characters 0-0
  (not (= 0 (to_rep (rec__membership_discr__root__c r02__split_discrs)))))
(check-sat)
(exit)
