;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort character 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (character character) Bool)

(declare-const dummy character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character
  (character__content a))

(define-fun dynamic_invariant ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range1 temp___expr_63)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

(declare-const attr__ATTRIBUTE_ADDRESS17 Int)

(declare-const attr__ATTRIBUTE_ADDRESS18 Int)

(declare-const attr__ATTRIBUTE_ADDRESS19 Int)

(declare-const in_1_rdy_v1 Bool)

(declare-const out_0_rdy_v1 Bool)

(declare-const in_0_dat_v1 Int)

(declare-const in_1_dat_v1 Int)

(declare-const out_0_dat_v1 Int)

(declare-const out_1_dat_v1 Int)

(declare-const in_1_rdy_v2 Bool)

(declare-const out_0_rdy_v2 Bool)

(declare-const in_0_dat_v2 Int)

(declare-const in_1_dat_v2 Int)

(declare-const out_0_dat_v2 Int)

(declare-const out_1_dat_v2 Int)

;; H
  (assert (in_range1 in_0_dat_v1))

;; H
  (assert (in_range1 in_1_dat_v1))

;; H
  (assert (in_range1 out_0_dat_v1))

;; H
  (assert (in_range1 out_1_dat_v1))

;; H
  (assert (in_range1 in_0_dat_v2))

;; H
  (assert (in_range1 in_1_dat_v2))

;; H
  (assert (in_range1 out_0_dat_v2))

;; H
  (assert (in_range1 out_1_dat_v2))

(assert
;; WP_parameter_def
 ;; File "infoflow.ads", line 22, characters 0-0
  (not
  (<= 1 (+ (+ 0 (ite (ite (= (= in_1_dat_v1 in_1_dat_v2) true) (ite (=
                                                               in_1_rdy_v1 true)
                                                               (ite (=
                                                               out_0_rdy_v1 false)
                                                               (ite (=
                                                               in_1_rdy_v2 true)
                                                               (ite (=
                                                               out_0_rdy_v2 false) true false) false) false) false) false)
                1 0)) (ite (= (ite (= (ite (= (= out_0_dat_v1 out_0_dat_v2) true)
                                      (ite (= in_1_rdy_v1 false) true
                                      out_0_rdy_v1) false) true) (ite (=
                                                                 in_1_rdy_v2 false) true
                                                                 out_0_rdy_v2) false) true)
                      1 0)))))
(check-sat)
(exit)
