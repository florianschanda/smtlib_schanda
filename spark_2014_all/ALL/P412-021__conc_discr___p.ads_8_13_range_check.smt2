;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                           (of_rep x))) )))

(declare-datatypes ((us_split_discrs 0))
(((mk___split_discrs (rec__p__pt__x integer)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) integer
  (rec__p__pt__x a))

(declare-datatypes ((us_split_discrs__ref 0))
(((mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ((us_rep 0))
(((mk___rep (us_split_discrs1 us_split_discrs)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(declare-const value__size Int)

(declare-fun object__size (us_rep) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment a))))

(declare-const p__pt__x__first__bit Int)

(declare-const p__pt__x__last__bit Int)

(declare-const p__pt__x__position Int)

;; p__pt__x__first__bit_axiom
  (assert (<= 0 p__pt__x__first__bit))

;; p__pt__x__last__bit_axiom
  (assert (< p__pt__x__first__bit p__pt__x__last__bit))

;; p__pt__x__position_axiom
  (assert (<= 0 p__pt__x__position))

(declare-fun user_eq1 (us_rep us_rep) Bool)

(declare-datatypes ((pt__ref 0)) (((mk_pt__ref (pt__content us_rep)))))
(define-fun pt__ref___projection ((a pt__ref)) us_rep (pt__content a))

(declare-sort us_main_type 0)

(declare-fun us_main_eq (us_main_type us_main_type) Bool)

(declare-datatypes ((us_split_discrs2 0))
(((mk___split_discrs1 (rec__p__tt__x integer)))))
(define-fun us_split_discrs_2__projection ((a us_split_discrs2)) integer
  (rec__p__tt__x a))

(declare-datatypes ((us_split_discrs__ref1 0))
(((mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref_2__projection ((a us_split_discrs__ref1)) us_split_discrs2
  (us_split_discrs__content1 a))

(declare-datatypes ((us_split_fields 0))
(((mk___split_fields (rec__p__tt us_main_type)))))
(define-fun us_split_fields_TT__projection ((a us_split_fields)) us_main_type
  (rec__p__tt a))

(declare-datatypes ((us_split_fields__ref 0))
(((mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ((us_rep1 0))
(((mk___rep1
  (us_split_discrs3 us_split_discrs2)(us_split_fields1 us_split_fields)))))
(define-fun us_rep_2__projection ((a us_rep1)) us_split_discrs2 (us_split_discrs3
                                                                a))

(define-fun us_rep_3__projection ((a us_rep1)) us_split_fields (us_split_fields1
                                                               a))

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep1) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))

(declare-const p__tt__x__first__bit Int)

(declare-const p__tt__x__last__bit Int)

(declare-const p__tt__x__position Int)

;; p__tt__x__first__bit_axiom
  (assert (<= 0 p__tt__x__first__bit))

;; p__tt__x__last__bit_axiom
  (assert (< p__tt__x__first__bit p__tt__x__last__bit))

;; p__tt__x__position_axiom
  (assert (<= 0 p__tt__x__position))

(declare-fun user_eq2 (us_rep1 us_rep1) Bool)

(declare-datatypes ((tt__ref 0)) (((mk_tt__ref (tt__content us_rep1)))))
(define-fun tt__ref___projection ((a tt__ref)) us_rep1 (tt__content a))

(declare-datatypes ((us_rep2 0))
(((mk___rep2 (us_split_discrs4 us_split_discrs)))))
(define-fun us_rep_4__projection ((a us_rep2)) us_split_discrs (us_split_discrs4
                                                               a))

(define-fun to_base ((a us_rep2)) us_rep (mk___rep (us_split_discrs4 a)))

(define-fun of_base ((r us_rep)) us_rep2 (mk___rep2 (us_split_discrs1 r)))

(define-fun in_range1 ((rec__p__pt__x1 Int)
  (a us_rep)) Bool (= rec__p__pt__x1 (to_rep
                                     (rec__p__pt__x (us_split_discrs1 a)))))

(declare-const value__size2 Int)

(declare-fun object__size2 (us_rep2) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment2 a))))

(declare-const p__pt__x__first__bit1 Int)

(declare-const p__pt__x__last__bit1 Int)

(declare-const p__pt__x__position1 Int)

;; p__pt__x__first__bit_axiom
  (assert (<= 0 p__pt__x__first__bit1))

;; p__pt__x__last__bit_axiom
  (assert (< p__pt__x__first__bit1 p__pt__x__last__bit1))

;; p__pt__x__position_axiom
  (assert (<= 0 p__pt__x__position1))

(declare-fun user_eq3 (us_rep2 us_rep2) Bool)

(declare-datatypes ((tpoS__ref 0))
(((mk_tpoS__ref (tpoS__content us_rep2)))))
(define-fun tpoS__ref___projection ((a tpoS__ref)) us_rep2 (tpoS__content a))

(define-fun dynamic_invariant1 ((temp___expr_181 us_rep2)
  (temp___is_init_178 Bool) (temp___skip_constant_179 Bool)
  (temp___do_toplevel_180 Bool)) Bool (=>
                                      (not (= temp___skip_constant_179 true))
                                      (in_range1 0
                                      (to_base temp___expr_181))))

(define-fun default_initial_assumption ((temp___expr_183 us_rep2)
  (temp___skip_top_level_184 Bool)) Bool (= (to_rep
                                            (rec__p__pt__x
                                            (us_split_discrs4
                                            temp___expr_183))) 0))

(declare-const po__split_discrs us_split_discrs)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-datatypes ((us_split_fields2 0))
(((mk___split_fields1 (rec__p__tt1 us_main_type)))))
(define-fun us_split_fields_TT2__projection ((a us_split_fields2)) us_main_type
  (rec__p__tt1 a))

(declare-datatypes ((us_split_fields__ref1 0))
(((mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref_2__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ((us_rep3 0))
(((mk___rep3
  (us_split_discrs5 us_split_discrs2)(us_split_fields3 us_split_fields2)))))
(define-fun us_rep_5__projection ((a us_rep3)) us_split_discrs2 (us_split_discrs5
                                                                a))

(define-fun us_rep_6__projection ((a us_rep3)) us_split_fields2 (us_split_fields3
                                                                a))

(define-fun to_base1 ((a us_rep3)) us_rep1 (mk___rep1 (us_split_discrs5 a)
                                           (mk___split_fields
                                           (rec__p__tt1 (us_split_fields3 a)))))

(define-fun of_base1 ((r us_rep1)) us_rep3 (mk___rep3 (us_split_discrs3 r)
                                           (mk___split_fields1
                                           (rec__p__tt (us_split_fields1 r)))))

(define-fun in_range2 ((rec__p__tt__x1 Int)
  (a us_rep1)) Bool (= rec__p__tt__x1 (to_rep
                                      (rec__p__tt__x (us_split_discrs3 a)))))

(declare-const value__size3 Int)

(declare-fun object__size3 (us_rep3) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 (us_rep3) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep3)) (<= 0 (object__alignment3 a))))

(declare-const p__tt__x__first__bit1 Int)

(declare-const p__tt__x__last__bit1 Int)

(declare-const p__tt__x__position1 Int)

;; p__tt__x__first__bit_axiom
  (assert (<= 0 p__tt__x__first__bit1))

;; p__tt__x__last__bit_axiom
  (assert (< p__tt__x__first__bit1 p__tt__x__last__bit1))

;; p__tt__x__position_axiom
  (assert (<= 0 p__tt__x__position1))

(declare-fun user_eq4 (us_rep3 us_rep3) Bool)

(declare-datatypes ((ttoS__ref 0))
(((mk_ttoS__ref (ttoS__content us_rep3)))))
(define-fun ttoS__ref___projection ((a ttoS__ref)) us_rep3 (ttoS__content a))

(define-fun dynamic_invariant2 ((temp___expr_189 us_rep3)
  (temp___is_init_186 Bool) (temp___skip_constant_187 Bool)
  (temp___do_toplevel_188 Bool)) Bool (=>
                                      (not (= temp___skip_constant_187 true))
                                      (in_range2 0
                                      (to_base1 temp___expr_189))))

(define-fun default_initial_assumption1 ((temp___expr_191 us_rep3)
  (temp___skip_top_level_192 Bool)) Bool (= (to_rep
                                            (rec__p__tt__x
                                            (us_split_discrs5
                                            temp___expr_191))) 0))

(declare-const to____split_discrs us_split_discrs2)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const po_x Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const to_x Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(assert
;; WP_parameter_def
 ;; File "system.ads", line 81, characters 0-0
  (not (in_range 0)))
(check-sat)
(exit)
