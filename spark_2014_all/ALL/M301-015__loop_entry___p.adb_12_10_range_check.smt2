;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-fun to_rep (integer) Int)

(declare-fun of_rep (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort index 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (index index) Bool)

(declare-const dummy1 index)

(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int
  Int) (Array Int integer))

;; concat_def
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (integer Int) (Array Int integer))

;; singleton_def
  (assert
  (forall ((v integer))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep (select a temp___idx_132)) (to_rep
                                                                 (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep (select a temp___idx_132)) (to_rep
                                        (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-const dummy2 (Array Int integer))

(declare-const value__size Int)

(declare-fun object__size ((Array Int integer)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int integer)) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))

(declare-fun user_eq2 ((Array Int integer) (Array Int integer)) Bool)

(declare-sort map1 0)

(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 map1)))))
(declare-fun get (map1 Int Int) (Array Int integer))

(declare-fun set (map1 Int Int (Array Int integer)) map1)

;; Select_eq
  (assert
  (forall ((m map1))
  (forall ((i Int))
  (forall ((j Int))
  (forall ((a (Array Int integer)))
  (! (= (get (set m i j a) i j) a) :pattern ((set m i j a)) ))))))

;; Select_neq
  (assert
  (forall ((m map1))
  (forall ((i Int) (i2 Int))
  (forall ((j Int) (j2 Int))
  (forall ((a (Array Int integer)))
  (! (=> (not (and (= i i2) (= j j2)))
     (= (get (set m i j a) i2 j2) (get m i2 j2))) :pattern ((get
                                                            (set m i j a) i2
                                                            j2)) :pattern (
  (set m i j a) (get m i2 j2)) ))))))

(declare-fun slide1 (map1 Int Int Int Int) map1)

;; slide_def
  (assert
  (forall ((a map1))
  (forall ((new_first Int) (old_first Int))
  (forall ((new_first_2 Int) (old_first_2 Int))
  (forall ((i Int))
  (forall ((j Int))
  (! (= (get (slide1 a old_first new_first old_first_2 new_first_2) i j)
  (get a (- i (- new_first old_first)) (- j (- new_first_2 old_first_2)))) :pattern (
  (get (slide1 a old_first new_first old_first_2 new_first_2) i j)) )))))))

(define-fun bool_eq1 ((a map1) (a__first Int) (a__last Int) (a__first_2 Int)
  (a__last_2 Int) (b map1) (b__first Int) (b__last Int) (b__first_2 Int)
  (b__last_2 Int)) Bool (ite (and
                             (and
                             (ite (<= a__first a__last)
                             (and (<= b__first b__last)
                             (= (- a__last a__first) (- b__last b__first)))
                             (< b__last b__first))
                             (ite (<= a__first_2 a__last_2)
                             (and (<= b__first_2 b__last_2)
                             (= (- a__last_2 a__first_2) (- b__last_2 b__first_2)))
                             (< b__last_2 b__first_2)))
                             (forall ((temp___idx_133 Int)
                             (temp___idx_134 Int))
                             (=>
                             (and
                             (and (<= a__first temp___idx_133)
                             (<= temp___idx_133 a__last))
                             (and (<= a__first_2 temp___idx_134)
                             (<= temp___idx_134 a__last_2)))
                             (= (bool_eq
                                (get a temp___idx_133 temp___idx_134) 1 3
                                (get b
                                (+ (- b__first a__first) temp___idx_133)
                                (+ (- b__first_2 a__first_2) temp___idx_134))
                                1 3) true))))
                        true false))

;; bool_eq_rev
  (assert
  (forall ((a map1) (b map1))
  (forall ((a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int)
  (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int))
  (=>
  (= (bool_eq1 b b__first b__last b__first_2 b__last_2 a a__first a__last
     a__first_2 a__last_2) true)
  (and
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (ite (<= a__first_2 a__last_2)
  (and (<= b__first_2 b__last_2)
  (= (- a__last_2 a__first_2) (- b__last_2 b__first_2)))
  (< b__last_2 b__first_2)))
  (forall ((temp___idx_133 Int) (temp___idx_134 Int))
  (=>
  (and (and (<= a__first temp___idx_133) (<= temp___idx_133 a__last))
  (and (<= a__first_2 temp___idx_134) (<= temp___idx_134 a__last_2)))
  (= (bool_eq (get a temp___idx_133 temp___idx_134) 1 3
     (get b (+ (- b__first a__first) temp___idx_133)
     (+ (- b__first_2 a__first_2) temp___idx_134)) 1 3) true))))))))

(declare-const dummy3 map1)

(declare-const value__size1 Int)

(declare-fun object__size1 (map1) Int)

(declare-const value__component__size1 Int)

(declare-fun object__component__size1 (map1) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (map1) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a map1)) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert (forall ((a map1)) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a map1)) (<= 0 (object__alignment1 a))))

(declare-fun user_eq3 (map1 map1) Bool)

(declare-datatypes ()
((map__ref2 (mk_map__ref2 (map__content2 (Array Int map1))))))
(declare-fun slide2 ((Array Int map1) Int Int) (Array Int map1))

;; slide_eq
  (assert
  (forall ((a (Array Int map1)))
  (forall ((first Int))
  (! (= (slide2 a first first) a) :pattern ((slide2 a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int map1)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide2 a old_first new_first) i)) ))))))

(declare-fun concat2 ((Array Int map1) Int Int (Array Int map1) Int
  Int) (Array Int map1))

;; concat_def
  (assert
  (forall ((a (Array Int map1)) (b (Array Int map1)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat2 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton2 (map1 Int) (Array Int map1))

;; singleton_def
  (assert
  (forall ((v map1))
  (forall ((i Int))
  (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i)) ))))

(define-fun bool_eq2 ((a (Array Int map1)) (a__first Int) (a__last Int)
  (b (Array Int map1)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_135 Int))
                           (=>
                           (and (<= a__first temp___idx_135)
                           (<= temp___idx_135 a__last))
                           (= (bool_eq1 (select a temp___idx_135) 1 3 1 3
                              (select b (+ (- b__first a__first) temp___idx_135))
                              1 3 1 3) true))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int map1)) (b (Array Int map1)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq2 b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_135 Int))
  (=> (and (<= a__first temp___idx_135) (<= temp___idx_135 a__last))
  (= (bool_eq1 (select a temp___idx_135) 1 3 1 3
     (select b (+ (- b__first a__first) temp___idx_135)) 1 3 1 3) true))))))))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq4 (integer integer) Bool)

(declare-const dummy4 integer)

(declare-datatypes () ((t16b__ref (mk_t16b__ref (t16b__content integer)))))
(define-fun t16b__ref___projection ((a t16b__ref)) integer (t16b__content a))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property range_first range_last low)
                   (dynamic_property range_first range_last high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int map1))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int map1) (elts a))

(define-fun of_array ((a (Array Int map1)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size2 Int)

(declare-fun object__size2 ((Array Int map1)) Int)

(declare-const value__component__size2 Int)

(declare-fun object__component__size2 ((Array Int map1)) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 ((Array Int map1)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int map1))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__alignment2 a))))

(define-fun bool_eq3 ((x us_t)
  (y us_t)) Bool (bool_eq2 (elts x) (to_rep (first (rt x)))
                 (to_rep (last (rt x))) (elts y) (to_rep (first (rt y)))
                 (to_rep (last (rt y)))))

(declare-fun user_eq5 (us_t us_t) Bool)

(declare-const dummy5 us_t)

(declare-datatypes () ((t17b__ref (mk_t17b__ref (t17b__content us_t)))))
(define-fun t17b__ref___projection ((a t17b__ref)) us_t (t17b__content a))

(define-fun dynamic_property2 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq6 (integer integer) Bool)

(declare-const dummy6 integer)

(declare-datatypes () ((t18b__ref (mk_t18b__ref (t18b__content integer)))))
(define-fun t18b__ref___projection ((a t18b__ref)) integer (t18b__content a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern (
  (mk1 f l)) )))

(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property2 range_first range_last low)
                   (dynamic_property2 range_first range_last high))))))

(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int map1))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int map1) (elts1 a))

(define-fun of_array1 ((a (Array Int map1)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-const value__size3 Int)

(declare-fun object__size3 ((Array Int map1)) Int)

(declare-const value__component__size3 Int)

(declare-fun object__component__size3 ((Array Int map1)) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 ((Array Int map1)) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__size3 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int map1))) (<= 0 (object__component__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__alignment3 a))))

(define-fun bool_eq4 ((x us_t1)
  (y us_t1)) Bool (bool_eq2 (elts1 x) (to_rep (first2 (rt1 x)))
                  (to_rep (last2 (rt1 x))) (elts1 y)
                  (to_rep (first2 (rt1 y))) (to_rep (last2 (rt1 y)))))

(declare-fun user_eq7 (us_t1 us_t1) Bool)

(declare-const dummy7 us_t1)

(declare-datatypes () ((t19b__ref (mk_t19b__ref (t19b__content us_t1)))))
(define-fun t19b__ref___projection ((a t19b__ref)) us_t1 (t19b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(define-fun dynamic_property4 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq8 (integer integer) Bool)

(declare-const dummy8 integer)

(declare-datatypes () ((t24b__ref (mk_t24b__ref (t24b__content integer)))))
(define-fun t24b__ref___projection ((a t24b__ref)) integer (t24b__content a))

(declare-sort t2 0)

(declare-fun first4 (t2) integer)

(declare-fun last4 (t2) integer)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first4 (mk2 f l))) f) (= (to_rep (last4 (mk2 f l))) l)))) :pattern (
  (mk2 f l)) )))

(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property4 range_first range_last low)
                   (dynamic_property4 range_first range_last high))))))

(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int map1))(rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int map1) (elts2 a))

(define-fun of_array2 ((a (Array Int map1)) (f Int)
  (l Int)) us_t2 (mk___t2 a (mk2 f l)))

(define-fun first5 ((a us_t2)) Int (to_rep (first4 (rt2 a))))

(define-fun last5 ((a us_t2)) Int (to_rep (last4 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a))
                                    (+ (- (last5 a) (first5 a)) 1) 0))

(declare-const value__size4 Int)

(declare-fun object__size4 ((Array Int map1)) Int)

(declare-const value__component__size4 Int)

(declare-fun object__component__size4 ((Array Int map1)) Int)

(declare-const value__alignment4 Int)

(declare-fun object__alignment4 ((Array Int map1)) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__size4 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size4))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int map1))) (<= 0 (object__component__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__alignment4 a))))

(define-fun bool_eq5 ((x us_t2)
  (y us_t2)) Bool (bool_eq2 (elts2 x) (to_rep (first4 (rt2 x)))
                  (to_rep (last4 (rt2 x))) (elts2 y)
                  (to_rep (first4 (rt2 y))) (to_rep (last4 (rt2 y)))))

(declare-fun user_eq9 (us_t2 us_t2) Bool)

(declare-const dummy9 us_t2)

(declare-datatypes () ((t25b__ref (mk_t25b__ref (t25b__content us_t2)))))
(define-fun t25b__ref___projection ((a t25b__ref)) us_t2 (t25b__content a))

(define-fun dynamic_property6 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq10 (integer integer) Bool)

(declare-const dummy10 integer)

(declare-datatypes () ((t26b__ref (mk_t26b__ref (t26b__content integer)))))
(define-fun t26b__ref___projection ((a t26b__ref)) integer (t26b__content a))

(declare-sort t3 0)

(declare-fun first6 (t3) integer)

(declare-fun last6 (t3) integer)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first6 (mk3 f l))) f) (= (to_rep (last6 (mk3 f l))) l)))) :pattern (
  (mk3 f l)) )))

(define-fun dynamic_property7 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property6 range_first range_last low)
                   (dynamic_property6 range_first range_last high))))))

(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int map1))(rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int map1) (elts3 a))

(define-fun of_array3 ((a (Array Int map1)) (f Int)
  (l Int)) us_t3 (mk___t3 a (mk3 f l)))

(define-fun first7 ((a us_t3)) Int (to_rep (first6 (rt3 a))))

(define-fun last7 ((a us_t3)) Int (to_rep (last6 (rt3 a))))

(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a))
                                    (+ (- (last7 a) (first7 a)) 1) 0))

(declare-const value__size5 Int)

(declare-fun object__size5 ((Array Int map1)) Int)

(declare-const value__component__size5 Int)

(declare-fun object__component__size5 ((Array Int map1)) Int)

(declare-const value__alignment5 Int)

(declare-fun object__alignment5 ((Array Int map1)) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__size5 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size5))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int map1))) (<= 0 (object__component__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__alignment5 a))))

(define-fun bool_eq6 ((x us_t3)
  (y us_t3)) Bool (bool_eq2 (elts3 x) (to_rep (first6 (rt3 x)))
                  (to_rep (last6 (rt3 x))) (elts3 y)
                  (to_rep (first6 (rt3 y))) (to_rep (last6 (rt3 y)))))

(declare-fun user_eq11 (us_t3 us_t3) Bool)

(declare-const dummy11 us_t3)

(declare-datatypes () ((t27b__ref (mk_t27b__ref (t27b__content us_t3)))))
(define-fun t27b__ref___projection ((a t27b__ref)) us_t3 (t27b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(define-fun dynamic_property8 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq12 (integer integer) Bool)

(declare-const dummy12 integer)

(declare-datatypes () ((t32b__ref (mk_t32b__ref (t32b__content integer)))))
(define-fun t32b__ref___projection ((a t32b__ref)) integer (t32b__content a))

(declare-sort t4 0)

(declare-fun first8 (t4) integer)

(declare-fun last8 (t4) integer)

(declare-fun mk4 (Int Int) t4)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first8 (mk4 f l))) f) (= (to_rep (last8 (mk4 f l))) l)))) :pattern (
  (mk4 f l)) )))

(define-fun dynamic_property9 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property8 range_first range_last low)
                   (dynamic_property8 range_first range_last high))))))

(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int map1))(rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int map1) (elts4 a))

(define-fun of_array4 ((a (Array Int map1)) (f Int)
  (l Int)) us_t4 (mk___t4 a (mk4 f l)))

(define-fun first9 ((a us_t4)) Int (to_rep (first8 (rt4 a))))

(define-fun last9 ((a us_t4)) Int (to_rep (last8 (rt4 a))))

(define-fun length4 ((a us_t4)) Int (ite (<= (first9 a) (last9 a))
                                    (+ (- (last9 a) (first9 a)) 1) 0))

(declare-const value__size6 Int)

(declare-fun object__size6 ((Array Int map1)) Int)

(declare-const value__component__size6 Int)

(declare-fun object__component__size6 ((Array Int map1)) Int)

(declare-const value__alignment6 Int)

(declare-fun object__alignment6 ((Array Int map1)) Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__size6 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size6))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int map1))) (<= 0 (object__component__size6 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

;; object__alignment_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__alignment6 a))))

(define-fun bool_eq7 ((x us_t4)
  (y us_t4)) Bool (bool_eq2 (elts4 x) (to_rep (first8 (rt4 x)))
                  (to_rep (last8 (rt4 x))) (elts4 y)
                  (to_rep (first8 (rt4 y))) (to_rep (last8 (rt4 y)))))

(declare-fun user_eq13 (us_t4 us_t4) Bool)

(declare-const dummy13 us_t4)

(declare-datatypes () ((t33b__ref (mk_t33b__ref (t33b__content us_t4)))))
(define-fun t33b__ref___projection ((a t33b__ref)) us_t4 (t33b__content a))

(define-fun dynamic_property10 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq14 (integer integer) Bool)

(declare-const dummy14 integer)

(declare-datatypes () ((t34b__ref (mk_t34b__ref (t34b__content integer)))))
(define-fun t34b__ref___projection ((a t34b__ref)) integer (t34b__content a))

(declare-sort t5 0)

(declare-fun first10 (t5) integer)

(declare-fun last10 (t5) integer)

(declare-fun mk5 (Int Int) t5)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first10 (mk5 f l))) f)
     (= (to_rep (last10 (mk5 f l))) l)))) :pattern ((mk5 f l)) )))

(define-fun dynamic_property11 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property10 range_first range_last low)
                   (dynamic_property10 range_first range_last high))))))

(declare-datatypes () ((us_t5 (mk___t5 (elts5 (Array Int map1))(rt5 t5)))))
(define-fun to_array5 ((a us_t5)) (Array Int map1) (elts5 a))

(define-fun of_array5 ((a (Array Int map1)) (f Int)
  (l Int)) us_t5 (mk___t5 a (mk5 f l)))

(define-fun first11 ((a us_t5)) Int (to_rep (first10 (rt5 a))))

(define-fun last11 ((a us_t5)) Int (to_rep (last10 (rt5 a))))

(define-fun length5 ((a us_t5)) Int (ite (<= (first11 a) (last11 a))
                                    (+ (- (last11 a) (first11 a)) 1) 0))

(declare-const value__size7 Int)

(declare-fun object__size7 ((Array Int map1)) Int)

(declare-const value__component__size7 Int)

(declare-fun object__component__size7 ((Array Int map1)) Int)

(declare-const value__alignment7 Int)

(declare-fun object__alignment7 ((Array Int map1)) Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__size7 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size7))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int map1))) (<= 0 (object__component__size7 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment7))

;; object__alignment_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__alignment7 a))))

(define-fun bool_eq8 ((x us_t5)
  (y us_t5)) Bool (bool_eq2 (elts5 x) (to_rep (first10 (rt5 x)))
                  (to_rep (last10 (rt5 x))) (elts5 y)
                  (to_rep (first10 (rt5 y))) (to_rep (last10 (rt5 y)))))

(declare-fun user_eq15 (us_t5 us_t5) Bool)

(declare-const dummy15 us_t5)

(declare-datatypes () ((t35b__ref (mk_t35b__ref (t35b__content us_t5)))))
(define-fun t35b__ref___projection ((a t35b__ref)) us_t5 (t35b__content a))

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(define-fun dynamic_property12 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq16 (integer integer) Bool)

(declare-const dummy16 integer)

(declare-datatypes () ((t40b__ref (mk_t40b__ref (t40b__content integer)))))
(define-fun t40b__ref___projection ((a t40b__ref)) integer (t40b__content a))

(declare-sort t6 0)

(declare-fun first12 (t6) integer)

(declare-fun last12 (t6) integer)

(declare-fun mk6 (Int Int) t6)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first12 (mk6 f l))) f)
     (= (to_rep (last12 (mk6 f l))) l)))) :pattern ((mk6 f l)) )))

(define-fun dynamic_property13 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property12 range_first range_last low)
                   (dynamic_property12 range_first range_last high))))))

(declare-datatypes () ((us_t6 (mk___t6 (elts6 (Array Int map1))(rt6 t6)))))
(define-fun to_array6 ((a us_t6)) (Array Int map1) (elts6 a))

(define-fun of_array6 ((a (Array Int map1)) (f Int)
  (l Int)) us_t6 (mk___t6 a (mk6 f l)))

(define-fun first13 ((a us_t6)) Int (to_rep (first12 (rt6 a))))

(define-fun last13 ((a us_t6)) Int (to_rep (last12 (rt6 a))))

(define-fun length6 ((a us_t6)) Int (ite (<= (first13 a) (last13 a))
                                    (+ (- (last13 a) (first13 a)) 1) 0))

(declare-const value__size8 Int)

(declare-fun object__size8 ((Array Int map1)) Int)

(declare-const value__component__size8 Int)

(declare-fun object__component__size8 ((Array Int map1)) Int)

(declare-const value__alignment8 Int)

(declare-fun object__alignment8 ((Array Int map1)) Int)

;; value__size_axiom
  (assert (<= 0 value__size8))

;; object__size_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__size8 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size8))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int map1))) (<= 0 (object__component__size8 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment8))

;; object__alignment_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__alignment8 a))))

(define-fun bool_eq9 ((x us_t6)
  (y us_t6)) Bool (bool_eq2 (elts6 x) (to_rep (first12 (rt6 x)))
                  (to_rep (last12 (rt6 x))) (elts6 y)
                  (to_rep (first12 (rt6 y))) (to_rep (last12 (rt6 y)))))

(declare-fun user_eq17 (us_t6 us_t6) Bool)

(declare-const dummy17 us_t6)

(declare-datatypes () ((t41b__ref (mk_t41b__ref (t41b__content us_t6)))))
(define-fun t41b__ref___projection ((a t41b__ref)) us_t6 (t41b__content a))

(define-fun dynamic_property14 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq18 (integer integer) Bool)

(declare-const dummy18 integer)

(declare-datatypes () ((t42b__ref (mk_t42b__ref (t42b__content integer)))))
(define-fun t42b__ref___projection ((a t42b__ref)) integer (t42b__content a))

(declare-sort t7 0)

(declare-fun first14 (t7) integer)

(declare-fun last14 (t7) integer)

(declare-fun mk7 (Int Int) t7)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep (first14 (mk7 f l))) f)
     (= (to_rep (last14 (mk7 f l))) l)))) :pattern ((mk7 f l)) )))

(define-fun dynamic_property15 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property14 range_first range_last low)
                   (dynamic_property14 range_first range_last high))))))

(declare-datatypes () ((us_t7 (mk___t7 (elts7 (Array Int map1))(rt7 t7)))))
(define-fun to_array7 ((a us_t7)) (Array Int map1) (elts7 a))

(define-fun of_array7 ((a (Array Int map1)) (f Int)
  (l Int)) us_t7 (mk___t7 a (mk7 f l)))

(define-fun first15 ((a us_t7)) Int (to_rep (first14 (rt7 a))))

(define-fun last15 ((a us_t7)) Int (to_rep (last14 (rt7 a))))

(define-fun length7 ((a us_t7)) Int (ite (<= (first15 a) (last15 a))
                                    (+ (- (last15 a) (first15 a)) 1) 0))

(declare-const value__size9 Int)

(declare-fun object__size9 ((Array Int map1)) Int)

(declare-const value__component__size9 Int)

(declare-fun object__component__size9 ((Array Int map1)) Int)

(declare-const value__alignment9 Int)

(declare-fun object__alignment9 ((Array Int map1)) Int)

;; value__size_axiom
  (assert (<= 0 value__size9))

;; object__size_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__size9 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size9))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int map1))) (<= 0 (object__component__size9 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment9))

;; object__alignment_axiom
  (assert (forall ((a (Array Int map1))) (<= 0 (object__alignment9 a))))

(define-fun bool_eq10 ((x us_t7)
  (y us_t7)) Bool (bool_eq2 (elts7 x) (to_rep (first14 (rt7 x)))
                  (to_rep (last14 (rt7 x))) (elts7 y)
                  (to_rep (first14 (rt7 y))) (to_rep (last14 (rt7 y)))))

(declare-fun user_eq19 (us_t7 us_t7) Bool)

(declare-const dummy19 us_t7)

(declare-datatypes () ((t43b__ref (mk_t43b__ref (t43b__content us_t7)))))
(define-fun t43b__ref___projection ((a t43b__ref)) us_t7 (t43b__content a))

(declare-fun p__x__aggregate_def (map1) (Array Int map1))

;; def_axiom
  (assert
  (forall ((temp___219 map1))
  (forall ((temp___220 Int))
  (= (select (p__x__aggregate_def temp___219) temp___220) temp___219))))

(declare-fun temp___221 ((Array Int integer)) map1)

;; def_axiom
  (assert
  (forall ((temp___223 (Array Int integer)))
  (forall ((temp___224 Int) (temp___225 Int))
  (= (get (temp___221 temp___223) temp___224 temp___225) temp___223))))

(declare-fun temp___226 (Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___228 Int))
  (forall ((temp___229 Int))
  (= (select (temp___226 temp___228) temp___229) (of_rep temp___228)))))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant1 ((temp___expr_175 Int)
  (temp___is_init_172 Bool) (temp___skip_constant_173 Bool)
  (temp___do_toplevel_174 Bool)) Bool (=>
                                      (or (= temp___is_init_172 true)
                                      (<= 1 3)) (in_range2 temp___expr_175)))

(declare-const x (Array Int map1))

(declare-const i3 Int)

(declare-const o (Array Int map1))

(declare-const temp___308 (Array Int map1))

(declare-const temp___3081 t1)

(declare-const result (Array Int map1))

(declare-const x1 (Array Int map1))

(declare-const result1 Int)

(declare-const i31 Int)

(declare-const x2 (Array Int map1))

(declare-const i32 Int)

;; H
  (assert (= result x))

;; H
  (assert (= x1 (p__x__aggregate_def (temp___221 (temp___226 0)))))

;; H
  (assert (= result1 i3))

;; H
  (assert (= i31 1))

;; H
  (assert (<= 1 i31))

;; H
  (assert (<= i31 3))

;; H
  (assert
  (= (bool_eq2 x2 (to_rep (first (mk (+ i32 1) 3)))
     (to_rep (last (mk (+ i32 1) 3))) x1 (to_rep (first2 (mk1 (+ i32 1) 3)))
     (to_rep (last2 (mk1 (+ i32 1) 3)))) true))

;; H
  (assert
  (and
  (and
  (forall ((temp___297 Int))
  (=> (and (<= 1 temp___297) (<= temp___297 3))
  (=> (<= i32 temp___297) (= (select x2 temp___297) (select x1 temp___297)))))
  (=> (<= 1 3) (in_range2 i32))) (and (<= 1 i32) (<= i32 3))))

;; H
  (assert
  (=> (<= (+ i32 1) 3)
  (and (and (<= 1 (+ i32 1)) (<= (+ i32 1) 3)) (and (<= 1 3) (<= 3 3)))))

;; H
  (assert (= o x1))

;; H
  (assert (= temp___308 o))

;; H
  (assert (= temp___3081 (mk1 (+ i32 1) 3)))

;; H
  (assert (<= (+ i32 1) 3))

(assert
;; WP_parameter_def
 ;; File "p.adb", line 1, characters 0-0
  (not (<= 1 (+ i32 1))))
(check-sat)
(exit)
