;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ((positive__ref 0))
(((mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-const dummy2 character)

(declare-datatypes ((character__ref 0))
(((mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ((map__ref 0))
(((mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes ((us_t 0))
(((mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ((string__ref 0))
(((mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(define-fun dynamic_invariant ((temp___expr_82 us_t) (temp___is_init_79 Bool)
  (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(declare-sort unsigned32t 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (unsigned32t unsigned32t) Bool)

(declare-const dummy4 unsigned32t)

(declare-datatypes ((unsigned32t__ref 0))
(((mk_unsigned32t__ref (unsigned32t__content unsigned32t)))))
(define-fun unsigned32t__ref___projection ((a unsigned32t__ref)) unsigned32t
  (unsigned32t__content a))

(define-fun dynamic_invariant1 ((temp___expr_152 Int)
  (temp___is_init_149 Bool) (temp___skip_constant_150 Bool)
  (temp___do_toplevel_151 Bool)) Bool (=>
                                      (or (= temp___is_init_149 true)
                                      (<= 0 4294967295)) (in_range4
                                      temp___expr_152)))

(declare-sort descriptioni 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 150)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq5 (descriptioni descriptioni) Bool)

(declare-const dummy5 descriptioni)

(declare-datatypes ((descriptioni__ref 0))
(((mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni
  (descriptioni__content a))

(declare-const nodescription (Array Int character))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-fun audittypes__nodescription__aggregate_def (Int) (Array Int character))

;; def_axiom
  (assert
  (forall ((temp___144 Int))
  (forall ((temp___145 Int))
  (= (select (audittypes__nodescription__aggregate_def temp___144) temp___145)
  (of_rep temp___144)))))

(declare-sort returnt 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq6 (returnt returnt) Bool)

(declare-const dummy6 returnt)

(declare-datatypes ((returnt__ref 0))
(((mk_returnt__ref (returnt__content returnt)))))
(define-fun returnt__ref___projection ((a returnt__ref)) returnt (returnt__content
                                                                 a))

(define-fun dynamic_invariant2 ((temp___expr_835 Int)
  (temp___is_init_832 Bool) (temp___skip_constant_833 Bool)
  (temp___do_toplevel_834 Bool)) Bool (=>
                                      (or (= temp___is_init_832 true)
                                      (<= 0 16)) (in_range6 temp___expr_835)))

(declare-const text us_t)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const returnvalue Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const c26b Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const c29b Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-sort source 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 16)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq7 (source source) Bool)

(declare-const dummy7 source)

(declare-datatypes ((source__ref 0))
(((mk_source__ref (source__content source)))))
(define-fun source__ref_3__projection ((a source__ref)) source (source__content
                                                               a))

(define-fun dynamic_invariant3 ((temp___expr_874 Int)
  (temp___is_init_871 Bool) (temp___skip_constant_872 Bool)
  (temp___do_toplevel_873 Bool)) Bool (=>
                                      (or (= temp___is_init_871 true)
                                      (<= 0 16)) (in_range7 temp___expr_874)))

(declare-sort target 0)

(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq8 (target target) Bool)

(declare-const dummy8 target)

(declare-datatypes ((target__ref 0))
(((mk_target__ref (target__content target)))))
(define-fun target__ref_3__projection ((a target__ref)) target (target__content
                                                               a))

(define-fun dynamic_invariant4 ((temp___expr_880 Int)
  (temp___is_init_877 Bool) (temp___skip_constant_878 Bool)
  (temp___do_toplevel_879 Bool)) Bool (=>
                                      (or (= temp___is_init_877 true)
                                      (<= 0 4294967295)) (in_range8
                                      temp___expr_880)))

(declare-fun codetoval (Int) Int)

(declare-fun codetoval__function_guard (Int Int) Bool)

;; codetoval__post_axiom
  (assert
  (forall ((s Int))
  (! (=> (dynamic_invariant3 s true true true) (dynamic_invariant4
     (codetoval s) true false true)) :pattern ((codetoval s)) )))

(declare-const fullstring__first integer)

(declare-const fullstring__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq9 (integer integer) Bool)

(declare-const dummy9 integer)

(declare-datatypes ((t37b__ref 0))
(((mk_t37b__ref (t37b__content integer)))))
(define-fun t37b__ref___projection ((a t37b__ref)) integer (t37b__content a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first2 (mk1 f l))) f)
     (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ((us_t1 0))
(((mk___t1 (elts1 (Array Int character))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))

(define-fun of_array1 ((a (Array Int character)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-const value__size1 Int)

(declare-fun object__size1 ((Array Int character)) Int)

(declare-const value__component__size1 Int)

(declare-fun object__component__size1 ((Array Int character)) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))

(define-fun bool_eq2 ((x us_t1)
  (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x)))
                  (to_rep1 (last2 (rt1 x))) (elts1 y)
                  (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))

(declare-fun user_eq10 (us_t1 us_t1) Bool)

(declare-const dummy10 us_t1)

(declare-datatypes ((t38b__ref 0)) (((mk_t38b__ref (t38b__content us_t1)))))
(define-fun t38b__ref___projection ((a t38b__ref)) us_t1 (t38b__content a))

(declare-fun temp___String_Literal_912 (tuple0) (Array Int character))

;; temp___String_Literal_912__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_912 us_void_param) 1)) 58)
     (= (to_rep (select (temp___String_Literal_912 us_void_param) 2)) 32)) :pattern (
  (temp___String_Literal_912 us_void_param)) )))

(declare-fun temp___String_Literal_916 (tuple0) (Array Int character))

;; temp___String_Literal_916__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (and
     (= (to_rep (select (temp___String_Literal_916 us_void_param) 1)) 32)
     (= (to_rep (select (temp___String_Literal_916 us_void_param) 2)) 40))
     (= (to_rep (select (temp___String_Literal_916 us_void_param) 3)) 32)) :pattern (
  (temp___String_Literal_916 us_void_param)) )))

(declare-fun temp___String_Literal_921 (tuple0) (Array Int character))

;; temp___String_Literal_921__def_axiom
  (assert
  (forall ((us_void_param tuple0))
  (! (and
     (= (to_rep (select (temp___String_Literal_921 us_void_param) 1)) 32)
     (= (to_rep (select (temp___String_Literal_921 us_void_param) 2)) 41)) :pattern (
  (temp___String_Literal_921 us_void_param)) )))

(define-fun dynamic_invariant5 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant6 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(define-fun dynamic_invariant7 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant8 ((temp___expr_330 Int)
  (temp___is_init_327 Bool) (temp___skip_constant_328 Bool)
  (temp___do_toplevel_329 Bool)) Bool (=>
                                      (or (= temp___is_init_327 true)
                                      (<= 1 150)) (in_range5
                                      temp___expr_330)))

;; nodescription__def_axiom
  (assert (= nodescription (audittypes__nodescription__aggregate_def 32)))

(declare-const result__ (Array Int character))

(declare-const thecodename Int)

(declare-const result__1 Int)

(declare-const code Int)

(declare-const c30b Int)

(declare-const fullstring (Array Int character))

(declare-const temp___900 Int)

(declare-const temp___899 Int)

(declare-const o Int)

(declare-const o1 Int)

(declare-const o2 Int)

(declare-const o3 Int)

(declare-const o4 Int)

(declare-const o5 Int)

(declare-const o6 Int)

(declare-const temp___914 (Array Int character))

(declare-const temp___9141 t)

(declare-const o7 Int)

(declare-const o8 Int)

(declare-const o9 Int)

(declare-const o10 Int)

(declare-const o11 Int)

(declare-const o12 Int)

(declare-const temp___917 (Array Int character))

(declare-const temp___9171 t)

(declare-const o13 Int)

(declare-const o14 Int)

(declare-const o15 Int)

(declare-const o16 Int)

(declare-const o17 Int)

(declare-const o18 Int)

(declare-const temp___919 (Array Int character))

(declare-const temp___9191 t)

(declare-const o19 Int)

(declare-const o20 Int)

(declare-const o21 Int)

(declare-const o22 Int)

(declare-const o23 Int)

(declare-const o24 Int)

(declare-const temp___922 (Array Int character))

(declare-const temp___9221 t)

(declare-const o25 Int)

(declare-const o26 Int)

(declare-const o27 Int)

(declare-const o28 Int)

(declare-const o29 Int)

(declare-const o30 Int)

(declare-const bio__makedescription__B33b__fullstring__assume (Array Int character))

(declare-const bio__makedescription__B33b__fullstring__assume1 t)

(declare-const c30b1 Int)

(declare-const result (Array Int character))

(declare-const result__2 (Array Int character))

(declare-const result1 Int)

(declare-const result__3 Int)

(declare-const result2 Int)

(declare-const code1 Int)

(declare-const result__4 Int)

(declare-const code2 Int)

(declare-const c30b2 Int)

(declare-const result3 Int)

(declare-const c30b3 Int)

(declare-const result4 Int)

(declare-const result__5 Int)

(declare-const result__6 Int)

(declare-const result__7 Int)

(declare-const result__8 int__ref)

(declare-const code3 int__ref)

(declare-const c30b4 int__ref)

(declare-const result__9 Int)

(declare-const code4 Int)

(declare-const c30b5 Int)

(declare-const result__10 int__ref)

(declare-const code5 int__ref)

(declare-const c30b6 int__ref)

(declare-const result__11 Int)

(declare-const code6 Int)

(declare-const c30b7 Int)

(declare-const result5 int__ref)

(declare-const thecodename1 Int)

(declare-const result6 map__ref)

(declare-const fullstring1 (Array Int character))

;; H
  (assert (= (audittypes__nodescription__aggregate_def 32) nodescription))

;; H
  (assert (dynamic_invariant text true false true))

;; H
  (assert (in_range4 returnvalue))

;; H
  (assert (= result result__))

;; H
  (assert (= result__2 nodescription))

;; H
  (assert (=> (<= 0 16) (in_range6 thecodename)))

;; H
  (assert (= returnvalue c26b))

;; H
  (assert (in_range4 c26b))

;; H
  (assert (= (mk_int__ref result1) (mk_int__ref result__1)))

;; H
  (assert (= result__3 1))

;; H
  (assert (in_range6 result__3))

;; H
  (assert (= (mk_int__ref result2) (mk_int__ref code)))

;; H
  (assert (= code1 0))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= temp___900 code1)))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= temp___899 result__3)))

;; H
  (assert
  (=> (and (<= 0 code1) (<= code1 16))
  (and (and (<= 0 code2) (<= code2 16)) (= result__4 1))))

;; H
  (assert
  (=> (and (<= 0 code1) (<= code1 16))
  (and
  (and (=> (<= 0 16) (in_range6 result__4)) (=> (<= 0 16) (in_range6 code2)))
  (and (<= 0 code2) (<= code2 16)))))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= code2 c29b)))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (in_range6 c29b)))

;; H
  (assert
  (=> (and (<= 0 code1) (<= code1 16))
  (=> (<= 0 4294967295) (in_range4 c30b2))))

;; H
  (assert
  (=> (and (<= 0 code1) (<= code1 16))
  (and (= o (codetoval c29b)) (in_range8 o))))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= c30b2 result3)))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= c30b3 o)))

;; H
  (assert
  (=> (and (<= 0 code1) (<= code1 16))
  (or
  (and (and (= result__5 result__6) (= result__7 result__5))
  (and (= c26b c30b3) (and (= result4 result__4) (= result__5 code2))))
  (and (and (not (= c26b c30b3)) (= result__5 result__4))
  (and (and (= result__5 result__6) (= result__7 result__5)) (= code2 16))))))

;; H
  (assert
  (=> (and (<= 0 code1) (<= code1 16)) (= c30b4 (mk_int__ref c30b3))))

;; H
  (assert
  (=> (and (<= 0 code1) (<= code1 16)) (= code3 (mk_int__ref code2))))

;; H
  (assert
  (=> (and (<= 0 code1) (<= code1 16)) (= result__8 (mk_int__ref result__6))))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= c30b5 c30b3)))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= code4 code2)))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= result__9 result__7)))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= c30b6 c30b4)))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= code5 code3)))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= result__10 result__8)))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= c30b7 c30b5)))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= code6 code4)))

;; H
  (assert (=> (and (<= 0 code1) (<= code1 16)) (= result__11 result__9)))

;; H
  (assert
  (=> (not (and (<= 0 code1) (<= code1 16))) (= c30b6 (mk_int__ref c30b))))

;; H
  (assert
  (=> (not (and (<= 0 code1) (<= code1 16))) (= code5 (mk_int__ref code1))))

;; H
  (assert
  (=> (not (and (<= 0 code1) (<= code1 16)))
  (= result__10 (mk_int__ref result__3))))

;; H
  (assert (=> (not (and (<= 0 code1) (<= code1 16))) (= c30b7 c30b1)))

;; H
  (assert (=> (not (and (<= 0 code1) (<= code1 16))) (= code6 code1)))

;; H
  (assert
  (=> (not (and (<= 0 code1) (<= code1 16))) (= result__11 result__3)))

;; H
  (assert (= result5 (mk_int__ref thecodename)))

;; H
  (assert (= thecodename1 (int__content result__10)))

;; H
  (assert
  (=> (= (length text) 0) (= (temp___String_Literal_912 Tuple0) temp___914)))

;; H
  (assert (=> (= (length text) 0) (= (mk 1 2) temp___9141)))

;; H
  (assert (=> (not (= (length text) 0)) (=> (<= 1 2) (= o1 (+ (- 2 1) 1)))))

;; H
  (assert (=> (not (= (length text) 0)) (=> (not (<= 1 2)) (= o1 0))))

;; H
  (assert
  (=> (not (= (length text) 0))
  (=> (<= (to_rep1 (first (rt text))) (to_rep1 (last (rt text))))
  (= o2 (+ (- (to_rep1 (last (rt text))) (to_rep1 (first (rt text)))) 1)))))

;; H
  (assert
  (=> (not (= (length text) 0))
  (=> (not (<= (to_rep1 (first (rt text))) (to_rep1 (last (rt text)))))
  (= o2 0))))

;; H
  (assert (=> (not (= (length text) 0)) (= o3 (+ o2 o1))))

;; H
  (assert
  (=> (not (= (length text) 0)) (= o4 (+ (to_rep1 (first (rt text))) o3))))

;; H
  (assert (=> (not (= (length text) 0)) (= o5 (- o4 1))))

;; H
  (assert (=> (not (= (length text) 0)) (and (= o6 o5) (in_range2 o5))))

;; H
  (assert
  (=> (not (= (length text) 0))
  (= (concat1 (elts text) (to_rep1 (first (rt text)))
     (to_rep1 (last (rt text))) (temp___String_Literal_912 Tuple0) 1 2)
  temp___914)))

;; H
  (assert
  (=> (not (= (length text) 0))
  (= (mk (to_rep1 (first (rt text))) o6) temp___9141)))

;; H
  (assert
  (=> (= (length (mk___t temp___914 temp___9141)) 0)
  (= (elts (to_string (attr__ATTRIBUTE_IMAGE6 thecodename1))) temp___917)))

;; H
  (assert
  (=> (= (length (mk___t temp___914 temp___9141)) 0)
  (= (mk
     (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE6 thecodename1)))))
     (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE6 thecodename1))))))
  temp___9171)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___914 temp___9141)) 0))
  (=>
  (<= (to_rep1
      (first (rt (to_string (attr__ATTRIBUTE_IMAGE6 thecodename1)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE6 thecodename1))))))
  (= o7 (+ (- (to_rep1
              (last (rt (to_string (attr__ATTRIBUTE_IMAGE6 thecodename1)))))
  (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE6 thecodename1)))))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___914 temp___9141)) 0))
  (=>
  (not
  (<= (to_rep1
      (first (rt (to_string (attr__ATTRIBUTE_IMAGE6 thecodename1)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE6 thecodename1)))))))
  (= o7 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___914 temp___9141)) 0))
  (=> (<= (to_rep1 (first temp___9141)) (to_rep1 (last temp___9141)))
  (= o8 (+ (- (to_rep1 (last temp___9141)) (to_rep1 (first temp___9141))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___914 temp___9141)) 0))
  (=> (not (<= (to_rep1 (first temp___9141)) (to_rep1 (last temp___9141))))
  (= o8 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___914 temp___9141)) 0)) (= o9 (+ o8 o7))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___914 temp___9141)) 0))
  (= o10 (+ (to_rep1 (first temp___9141)) o9))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___914 temp___9141)) 0)) (= o11 (- o10 1))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___914 temp___9141)) 0))
  (and (= o12 o11) (in_range2 o11))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___914 temp___9141)) 0))
  (= (concat1 temp___914 (to_rep1 (first temp___9141))
     (to_rep1 (last temp___9141))
     (elts (to_string (attr__ATTRIBUTE_IMAGE6 thecodename1)))
     (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE6 thecodename1)))))
     (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE6 thecodename1))))))
  temp___917)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___914 temp___9141)) 0))
  (= (mk (to_rep1 (first temp___9141)) o12) temp___9171)))

;; H
  (assert
  (=> (= (length (mk___t temp___917 temp___9171)) 0)
  (= (temp___String_Literal_916 Tuple0) temp___919)))

;; H
  (assert
  (=> (= (length (mk___t temp___917 temp___9171)) 0)
  (= (mk 1 3) temp___9191)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___917 temp___9171)) 0))
  (=> (<= 1 3) (= o13 (+ (- 3 1) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___917 temp___9171)) 0))
  (=> (not (<= 1 3)) (= o13 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___917 temp___9171)) 0))
  (=> (<= (to_rep1 (first temp___9171)) (to_rep1 (last temp___9171)))
  (= o14 (+ (- (to_rep1 (last temp___9171)) (to_rep1 (first temp___9171))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___917 temp___9171)) 0))
  (=> (not (<= (to_rep1 (first temp___9171)) (to_rep1 (last temp___9171))))
  (= o14 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___917 temp___9171)) 0))
  (= o15 (+ o14 o13))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___917 temp___9171)) 0))
  (= o16 (+ (to_rep1 (first temp___9171)) o15))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___917 temp___9171)) 0)) (= o17 (- o16 1))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___917 temp___9171)) 0))
  (and (= o18 o17) (in_range2 o17))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___917 temp___9171)) 0))
  (= (concat1 temp___917 (to_rep1 (first temp___9171))
     (to_rep1 (last temp___9171)) (temp___String_Literal_916 Tuple0) 1 3)
  temp___919)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___917 temp___9171)) 0))
  (= (mk (to_rep1 (first temp___9171)) o18) temp___9191)))

;; H
  (assert
  (=> (= (length (mk___t temp___919 temp___9191)) 0)
  (= (elts (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue))) temp___922)))

;; H
  (assert
  (=> (= (length (mk___t temp___919 temp___9191)) 0)
  (= (mk
     (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue)))))
     (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue))))))
  temp___9221)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___919 temp___9191)) 0))
  (=>
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue))))))
  (= o19 (+ (- (to_rep1
               (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue)))))
  (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue)))))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___919 temp___9191)) 0))
  (=>
  (not
  (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue)))))
  (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue)))))))
  (= o19 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___919 temp___9191)) 0))
  (=> (<= (to_rep1 (first temp___9191)) (to_rep1 (last temp___9191)))
  (= o20 (+ (- (to_rep1 (last temp___9191)) (to_rep1 (first temp___9191))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___919 temp___9191)) 0))
  (=> (not (<= (to_rep1 (first temp___9191)) (to_rep1 (last temp___9191))))
  (= o20 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___919 temp___9191)) 0))
  (= o21 (+ o20 o19))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___919 temp___9191)) 0))
  (= o22 (+ (to_rep1 (first temp___9191)) o21))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___919 temp___9191)) 0)) (= o23 (- o22 1))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___919 temp___9191)) 0))
  (and (= o24 o23) (in_range2 o23))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___919 temp___9191)) 0))
  (= (concat1 temp___919 (to_rep1 (first temp___9191))
     (to_rep1 (last temp___9191))
     (elts (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue)))
     (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue)))))
     (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue))))))
  temp___922)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___919 temp___9191)) 0))
  (= (mk (to_rep1 (first temp___9191)) o24) temp___9221)))

;; H
  (assert
  (=> (= (length (mk___t temp___922 temp___9221)) 0)
  (= (temp___String_Literal_921 Tuple0) bio__makedescription__B33b__fullstring__assume)))

;; H
  (assert
  (=> (= (length (mk___t temp___922 temp___9221)) 0)
  (= (mk 1 2) bio__makedescription__B33b__fullstring__assume1)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___922 temp___9221)) 0))
  (=> (<= 1 2) (= o25 (+ (- 2 1) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___922 temp___9221)) 0))
  (=> (not (<= 1 2)) (= o25 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___922 temp___9221)) 0))
  (=> (<= (to_rep1 (first temp___9221)) (to_rep1 (last temp___9221)))
  (= o26 (+ (- (to_rep1 (last temp___9221)) (to_rep1 (first temp___9221))) 1)))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___922 temp___9221)) 0))
  (=> (not (<= (to_rep1 (first temp___9221)) (to_rep1 (last temp___9221))))
  (= o26 0))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___922 temp___9221)) 0))
  (= o27 (+ o26 o25))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___922 temp___9221)) 0))
  (= o28 (+ (to_rep1 (first temp___9221)) o27))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___922 temp___9221)) 0)) (= o29 (- o28 1))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___922 temp___9221)) 0))
  (and (= o30 o29) (in_range2 o29))))

;; H
  (assert
  (=> (not (= (length (mk___t temp___922 temp___9221)) 0))
  (= (concat1 temp___922 (to_rep1 (first temp___9221))
     (to_rep1 (last temp___9221)) (temp___String_Literal_921 Tuple0) 1 2)
  bio__makedescription__B33b__fullstring__assume)))

;; H
  (assert
  (=> (not (= (length (mk___t temp___922 temp___9221)) 0))
  (= (mk (to_rep1 (first temp___9221)) o30) bio__makedescription__B33b__fullstring__assume1)))

;; H
  (assert (= result6 (mk_map__ref fullstring)))

;; H
  (assert (= fullstring1 bio__makedescription__B33b__fullstring__assume))

;; H
  (assert
  (= (to_rep1 fullstring__first) (to_rep1
                                 (first
                                 bio__makedescription__B33b__fullstring__assume1))))

;; H
  (assert
  (= (to_rep1 fullstring__last) (to_rep1
                                (last
                                bio__makedescription__B33b__fullstring__assume1))))

;; H
  (assert (dynamic_property 1 2147483647 (to_rep1 fullstring__first)
  (to_rep1 fullstring__last)))

;; H
  (assert (not (<= (to_rep1 fullstring__last) 150)))

;; H
  (assert (<= 1 150))

(assert
;; WP_parameter_def
 ;; File "audittypes.ads", line 92, characters 0-0
  (not (<= (to_rep1 fullstring__first) 1)))
(check-sat)
(exit)
