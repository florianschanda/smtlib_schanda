;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort stb 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (stb stb) Bool)

(declare-fun dummy () stb)

(declare-datatypes () ((stb__ref (mk_stb__ref (stb__content stb)))))
(define-fun stb__ref___projection ((a stb__ref)) stb (stb__content a))

(define-fun dynamic_invariant ((temp___expr_174 Int)
  (temp___is_init_171 Bool) (temp___skip_constant_172 Bool)
  (temp___do_toplevel_173 Bool)) Bool (=>
                                      (or (= temp___is_init_171 true)
                                      (<= 1 10)) (in_range1 temp___expr_174)))

(declare-fun to_rep (stb) Int)

(declare-fun of_rep (Int) stb)

;; inversion_axiom
  (assert
  (forall ((x stb)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x stb)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-sort integer 0)

(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (integer integer) Bool)

(declare-fun dummy1 () integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))

;; slide_eq
  (assert
  (forall ((a (Array Int integer)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int integer)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int
  Int) (Array Int integer))

;; concat_def
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (integer Int) (Array Int integer))

;; singleton_def
  (assert
  (forall ((v integer))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int)
  (b (Array Int integer)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_132 Int))
                           (=>
                           (and (<= a__first temp___idx_132)
                           (<= temp___idx_132 a__last))
                           (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                                                  (select b (+ (- b__first a__first) temp___idx_132)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_132 Int))
  (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last))
  (= (to_rep1 (select a temp___idx_132)) (to_rep1
                                         (select b (+ (- b__first a__first) temp___idx_132)))))))))))

(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int integer)) (b (Array Int integer)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(define-fun dynamic_property ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (integer integer) Bool)

(declare-fun dummy2 () integer)

(declare-datatypes () ((t5b__ref (mk_t5b__ref (t5b__content integer)))))
(define-fun t5b__ref___projection ((a t5b__ref)) integer (t5b__content a))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range2 f)
     (=> (in_range2 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range2 low)
                   (and (in_range2 high)
                   (=> (<= low high)
                   (and (dynamic_property range_first range_last low)
                   (dynamic_property range_first range_last high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int integer))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))

(define-fun of_array ((a (Array Int integer)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-fun value__size () Int)

(declare-fun object__size ((Array Int integer)) Int)

(declare-fun value__component__size () Int)

(declare-fun object__component__size ((Array Int integer)) Int)

(declare-fun value__alignment () Int)

(declare-fun object__alignment ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-fun dummy3 () us_t)

(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content us_t)))))
(define-fun t6b__ref___projection ((a t6b__ref)) us_t (t6b__content a))

(declare-datatypes ()
((us_split_discrs (mk___split_discrs (rec__discr_dyn__r2__a stb)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) stb (rec__discr_dyn__r2__a
                                                                   a))

(declare-datatypes ()
((us_split_discrs__ref
 (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs
  (us_split_discrs__content a))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields (rec__discr_dyn__r2__b us_t)(rec__discr_dyn__r2__c Bool)))))
(define-fun us_split_fields_B__projection ((a us_split_fields)) us_t
  (rec__discr_dyn__r2__b a))

(define-fun us_split_fields_C__projection ((a us_split_fields)) Bool
  (rec__discr_dyn__r2__c a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep
 (mk___rep
 (us_split_discrs1 us_split_discrs)(us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1
                                                             a))

(define-fun us_rep_2__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                              a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (= (to_rep
                           (rec__discr_dyn__r2__a (us_split_discrs1 a)))
                        (to_rep (rec__discr_dyn__r2__a (us_split_discrs1 b))))
                        (= (bool_eq1
                           (rec__discr_dyn__r2__b (us_split_fields1 a))
                           (rec__discr_dyn__r2__b (us_split_fields1 b))) true))
                        (= (rec__discr_dyn__r2__c (us_split_fields1 a))
                        (rec__discr_dyn__r2__c (us_split_fields1 b))))
                   true false))

(declare-fun value__size1 () Int)

(declare-fun object__size1 (us_rep) Int)

(declare-fun value__alignment1 () Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-fun discr_dyn__r2__a__first__bit () Int)

(declare-fun discr_dyn__r2__a__last__bit () Int)

(declare-fun discr_dyn__r2__a__position () Int)

;; discr_dyn__r2__a__first__bit_axiom
  (assert (<= 0 discr_dyn__r2__a__first__bit))

;; discr_dyn__r2__a__last__bit_axiom
  (assert (< discr_dyn__r2__a__first__bit discr_dyn__r2__a__last__bit))

;; discr_dyn__r2__a__position_axiom
  (assert (<= 0 discr_dyn__r2__a__position))

(declare-fun discr_dyn__r2__b__first__bit () Int)

(declare-fun discr_dyn__r2__b__last__bit () Int)

(declare-fun discr_dyn__r2__b__position () Int)

;; discr_dyn__r2__b__first__bit_axiom
  (assert (<= 0 discr_dyn__r2__b__first__bit))

;; discr_dyn__r2__b__last__bit_axiom
  (assert (< discr_dyn__r2__b__first__bit discr_dyn__r2__b__last__bit))

;; discr_dyn__r2__b__position_axiom
  (assert (<= 0 discr_dyn__r2__b__position))

(declare-fun discr_dyn__r2__c__first__bit () Int)

(declare-fun discr_dyn__r2__c__last__bit () Int)

(declare-fun discr_dyn__r2__c__position () Int)

;; discr_dyn__r2__c__first__bit_axiom
  (assert (<= 0 discr_dyn__r2__c__first__bit))

;; discr_dyn__r2__c__last__bit_axiom
  (assert (< discr_dyn__r2__c__first__bit discr_dyn__r2__c__last__bit))

;; discr_dyn__r2__c__position_axiom
  (assert (<= 0 discr_dyn__r2__c__position))

(declare-fun user_eq4 (us_rep us_rep) Bool)

(declare-fun dummy4 () us_rep)

(declare-datatypes () ((r2__ref (mk_r2__ref (r2__content us_rep)))))
(define-fun r2__ref___projection ((a r2__ref)) us_rep (r2__content a))

(declare-sort tT10bP1 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq5 (tT10bP1 tT10bP1) Bool)

(declare-fun dummy5 () tT10bP1)

(declare-datatypes ()
((tT10bP1__ref (mk_tT10bP1__ref (tT10bP1__content tT10bP1)))))
(define-fun tT10bP1__ref___projection ((a tT10bP1__ref)) tT10bP1 (tT10bP1__content
                                                                 a))

(declare-fun dummy6 () (Array Int integer))

(declare-fun value__size2 () Int)

(declare-fun object__size2 ((Array Int integer)) Int)

(declare-fun value__component__size1 () Int)

(declare-fun object__component__size1 ((Array Int integer)) Int)

(declare-fun value__alignment2 () Int)

(declare-fun object__alignment2 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size2 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment2 a))))

(declare-fun user_eq6 ((Array Int integer) (Array Int integer)) Bool)

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__discr_dyn__r2__b1 (Array Int integer))(rec__discr_dyn__r2__c1 Bool)))))
(define-fun us_split_fields_B2__projection ((a us_split_fields2)) (Array Int integer)
  (rec__discr_dyn__r2__b1 a))

(define-fun us_split_fields_C2__projection ((a us_split_fields2)) Bool
  (rec__discr_dyn__r2__c1 a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref_2__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1
 (mk___rep1
 (us_split_discrs2 us_split_discrs)(us_split_fields3 us_split_fields2)))))
(define-fun us_rep_3__projection ((a us_rep1)) us_split_discrs (us_split_discrs2
                                                               a))

(define-fun us_rep_4__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                a))

(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a)
                                         (mk___split_fields
                                         (of_array
                                         (rec__discr_dyn__r2__b1
                                         (us_split_fields3 a)) 1 3)
                                         (rec__discr_dyn__r2__c1
                                         (us_split_fields3 a)))))

(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r)
                                         (mk___split_fields1
                                         (let ((temp___133 (rec__discr_dyn__r2__b
                                                           (us_split_fields1
                                                           r))))
                                         (to_array temp___133))
                                         (rec__discr_dyn__r2__c
                                         (us_split_fields1 r)))))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__discr_dyn__r2__a (us_split_discrs2 a)))
                         (to_rep
                         (rec__discr_dyn__r2__a (us_split_discrs2 b))))
                         (= (bool_eq
                            (rec__discr_dyn__r2__b1 (us_split_fields3 a)) 1 3
                            (rec__discr_dyn__r2__b1 (us_split_fields3 b)) 1
                            3) true))
                         (= (rec__discr_dyn__r2__c1 (us_split_fields3 a))
                         (rec__discr_dyn__r2__c1 (us_split_fields3 b))))
                    true false))

(define-fun in_range4 ((rec__discr_dyn__r2__a1 Int)
  (a us_rep)) Bool (= rec__discr_dyn__r2__a1 (to_rep
                                             (rec__discr_dyn__r2__a
                                             (us_split_discrs1 a)))))

(declare-fun value__size3 () Int)

(declare-fun object__size3 (us_rep1) Int)

(declare-fun value__alignment3 () Int)

(declare-fun object__alignment3 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))

(declare-fun discr_dyn__r2__a__first__bit1 () Int)

(declare-fun discr_dyn__r2__a__last__bit1 () Int)

(declare-fun discr_dyn__r2__a__position1 () Int)

;; discr_dyn__r2__a__first__bit_axiom
  (assert (<= 0 discr_dyn__r2__a__first__bit1))

;; discr_dyn__r2__a__last__bit_axiom
  (assert (< discr_dyn__r2__a__first__bit1 discr_dyn__r2__a__last__bit1))

;; discr_dyn__r2__a__position_axiom
  (assert (<= 0 discr_dyn__r2__a__position1))

(declare-fun discr_dyn__r2__b__first__bit1 () Int)

(declare-fun discr_dyn__r2__b__last__bit1 () Int)

(declare-fun discr_dyn__r2__b__position1 () Int)

;; discr_dyn__r2__b__first__bit_axiom
  (assert (<= 0 discr_dyn__r2__b__first__bit1))

;; discr_dyn__r2__b__last__bit_axiom
  (assert (< discr_dyn__r2__b__first__bit1 discr_dyn__r2__b__last__bit1))

;; discr_dyn__r2__b__position_axiom
  (assert (<= 0 discr_dyn__r2__b__position1))

(declare-fun discr_dyn__r2__c__first__bit1 () Int)

(declare-fun discr_dyn__r2__c__last__bit1 () Int)

(declare-fun discr_dyn__r2__c__position1 () Int)

;; discr_dyn__r2__c__first__bit_axiom
  (assert (<= 0 discr_dyn__r2__c__first__bit1))

;; discr_dyn__r2__c__last__bit_axiom
  (assert (< discr_dyn__r2__c__first__bit1 discr_dyn__r2__c__last__bit1))

;; discr_dyn__r2__c__position_axiom
  (assert (<= 0 discr_dyn__r2__c__position1))

(declare-fun user_eq7 (us_rep1 us_rep1) Bool)

(declare-fun dummy7 () us_rep1)

(declare-datatypes () ((tb1S__ref (mk_tb1S__ref (tb1S__content us_rep1)))))
(define-fun tb1S__ref___projection ((a tb1S__ref)) us_rep1 (tb1S__content a))

(define-fun dynamic_invariant1 ((temp___expr_191 us_rep1)
  (temp___is_init_188 Bool) (temp___skip_constant_189 Bool)
  (temp___do_toplevel_190 Bool)) Bool (=>
                                      (not (= temp___skip_constant_189 true))
                                      (in_range4 3
                                      (to_base temp___expr_191))))

(define-fun default_initial_assumption ((temp___expr_194 us_rep1)
  (temp___skip_top_level_195 Bool)) Bool (= (to_rep
                                            (rec__discr_dyn__r2__a
                                            (us_split_discrs2
                                            temp___expr_194))) 3))

(declare-sort tT15bP1 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 2)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq8 (tT15bP1 tT15bP1) Bool)

(declare-fun dummy8 () tT15bP1)

(declare-datatypes ()
((tT15bP1__ref (mk_tT15bP1__ref (tT15bP1__content tT15bP1)))))
(define-fun tT15bP1__ref___projection ((a tT15bP1__ref)) tT15bP1 (tT15bP1__content
                                                                 a))

(declare-fun dummy9 () (Array Int integer))

(declare-fun value__size4 () Int)

(declare-fun object__size4 ((Array Int integer)) Int)

(declare-fun value__component__size2 () Int)

(declare-fun object__component__size2 ((Array Int integer)) Int)

(declare-fun value__alignment4 () Int)

(declare-fun object__alignment4 ((Array Int integer)) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__size4 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int integer))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a (Array Int integer))) (<= 0 (object__alignment4 a))))

(declare-fun user_eq9 ((Array Int integer) (Array Int integer)) Bool)

(declare-datatypes ()
((us_split_fields4
 (mk___split_fields2
 (rec__discr_dyn__r2__b2 (Array Int integer))(rec__discr_dyn__r2__c2 Bool)))))
(define-fun us_split_fields_B3__projection ((a us_split_fields4)) (Array Int integer)
  (rec__discr_dyn__r2__b2 a))

(define-fun us_split_fields_C3__projection ((a us_split_fields4)) Bool
  (rec__discr_dyn__r2__c2 a))

(declare-datatypes ()
((us_split_fields__ref2
 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref_3__projection ((a us_split_fields__ref2)) us_split_fields4
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2
 (mk___rep2
 (us_split_discrs3 us_split_discrs)(us_split_fields5 us_split_fields4)))))
(define-fun us_rep_5__projection ((a us_rep2)) us_split_discrs (us_split_discrs3
                                                               a))

(define-fun us_rep_6__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                a))

(define-fun to_base1 ((a us_rep2)) us_rep (mk___rep (us_split_discrs3 a)
                                          (mk___split_fields
                                          (of_array
                                          (rec__discr_dyn__r2__b2
                                          (us_split_fields5 a)) 1 2)
                                          (rec__discr_dyn__r2__c2
                                          (us_split_fields5 a)))))

(define-fun of_base1 ((r us_rep)) us_rep2 (mk___rep2 (us_split_discrs1 r)
                                          (mk___split_fields2
                                          (let ((temp___134 (rec__discr_dyn__r2__b
                                                            (us_split_fields1
                                                            r))))
                                          (to_array temp___134))
                                          (rec__discr_dyn__r2__c
                                          (us_split_fields1 r)))))

(define-fun bool_eq4 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (and
                         (= (to_rep
                            (rec__discr_dyn__r2__a (us_split_discrs3 a)))
                         (to_rep
                         (rec__discr_dyn__r2__a (us_split_discrs3 b))))
                         (= (bool_eq
                            (rec__discr_dyn__r2__b2 (us_split_fields5 a)) 1 2
                            (rec__discr_dyn__r2__b2 (us_split_fields5 b)) 1
                            2) true))
                         (= (rec__discr_dyn__r2__c2 (us_split_fields5 a))
                         (rec__discr_dyn__r2__c2 (us_split_fields5 b))))
                    true false))

(define-fun in_range6 ((rec__discr_dyn__r2__a1 Int)
  (a us_rep)) Bool (= rec__discr_dyn__r2__a1 (to_rep
                                             (rec__discr_dyn__r2__a
                                             (us_split_discrs1 a)))))

(declare-fun value__size5 () Int)

(declare-fun object__size5 (us_rep2) Int)

(declare-fun value__alignment5 () Int)

(declare-fun object__alignment5 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))

(declare-fun discr_dyn__r2__a__first__bit2 () Int)

(declare-fun discr_dyn__r2__a__last__bit2 () Int)

(declare-fun discr_dyn__r2__a__position2 () Int)

;; discr_dyn__r2__a__first__bit_axiom
  (assert (<= 0 discr_dyn__r2__a__first__bit2))

;; discr_dyn__r2__a__last__bit_axiom
  (assert (< discr_dyn__r2__a__first__bit2 discr_dyn__r2__a__last__bit2))

;; discr_dyn__r2__a__position_axiom
  (assert (<= 0 discr_dyn__r2__a__position2))

(declare-fun discr_dyn__r2__b__first__bit2 () Int)

(declare-fun discr_dyn__r2__b__last__bit2 () Int)

(declare-fun discr_dyn__r2__b__position2 () Int)

;; discr_dyn__r2__b__first__bit_axiom
  (assert (<= 0 discr_dyn__r2__b__first__bit2))

;; discr_dyn__r2__b__last__bit_axiom
  (assert (< discr_dyn__r2__b__first__bit2 discr_dyn__r2__b__last__bit2))

;; discr_dyn__r2__b__position_axiom
  (assert (<= 0 discr_dyn__r2__b__position2))

(declare-fun discr_dyn__r2__c__first__bit2 () Int)

(declare-fun discr_dyn__r2__c__last__bit2 () Int)

(declare-fun discr_dyn__r2__c__position2 () Int)

;; discr_dyn__r2__c__first__bit_axiom
  (assert (<= 0 discr_dyn__r2__c__first__bit2))

;; discr_dyn__r2__c__last__bit_axiom
  (assert (< discr_dyn__r2__c__first__bit2 discr_dyn__r2__c__last__bit2))

;; discr_dyn__r2__c__position_axiom
  (assert (<= 0 discr_dyn__r2__c__position2))

(declare-fun user_eq10 (us_rep2 us_rep2) Bool)

(declare-fun dummy10 () us_rep2)

(declare-datatypes () ((t14b__ref (mk_t14b__ref (t14b__content us_rep2)))))
(define-fun t14b__ref___projection ((a t14b__ref)) us_rep2 (t14b__content a))

(declare-fun b1__split_discrs () us_split_discrs)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun temp___202 (Int Int) (Array Int integer))

;; def_axiom
  (assert
  (forall ((temp___204 Int) (temp___205 Int))
  (let ((temp___203 (temp___202 temp___204 temp___205)))
  (and (= (select temp___203 1) (of_rep1 temp___204))
  (= (select temp___203 2) (of_rep1 temp___205))))))

(define-fun dynamic_invariant2 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range2 temp___expr_15)))

(define-fun dynamic_invariant3 ((temp___expr_185 us_rep)
  (temp___is_init_182 Bool) (temp___skip_constant_183 Bool)
  (temp___do_toplevel_184 Bool)) Bool (let ((temp___186 (rec__discr_dyn__r2__a
                                                        (us_split_discrs1
                                                        temp___expr_185))))
                                      (and (dynamic_property1 1
                                      (to_rep temp___186)
                                      (first1
                                      (rec__discr_dyn__r2__b
                                      (us_split_fields1 temp___expr_185)))
                                      (last1
                                      (rec__discr_dyn__r2__b
                                      (us_split_fields1 temp___expr_185))))
                                      (and
                                      (= (first1
                                         (rec__discr_dyn__r2__b
                                         (us_split_fields1 temp___expr_185))) 1)
                                      (= (last1
                                         (rec__discr_dyn__r2__b
                                         (us_split_fields1 temp___expr_185)))
                                      (to_rep temp___186))))))

(declare-fun temp___a_201 () Int)

(declare-fun us () Int)

(declare-fun o () stb)

(declare-fun o1 () stb)

(declare-fun o2 () stb)

(declare-fun o3 () (Array Int integer))

(declare-fun o4 () Bool)

(declare-fun o5 () stb)

(declare-fun o6 () (Array Int integer))

(declare-fun o7 () t)

(declare-fun o8 () Bool)

;; H
  (assert (in_range1 temp___a_201))

;; H
  (assert (and (= us 3) (in_range1 3)))

;; H
  (assert (= (to_rep o) 2))

;; H
  (assert (= o o1))

;; H
  (assert (= o2 o1))

;; H
  (assert (= (temp___202 (- 1) (- 2)) o3))

;; H
  (assert (= (of_int 0) o4))

;; H
  (assert (= o2 o5))

;; H
  (assert (= o3 o6))

;; H
  (assert (= (mk 1 2) o7))

;; H
  (assert (= o4 o8))

(assert
;; WP_parameter_def
 ;; File "discr_dyn.adb", line 1, characters 0-0
  (not (= 3 (to_rep o5))))
(check-sat)
(exit)
