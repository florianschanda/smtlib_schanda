;; produced by cvc4_16.drv ;;
(set-logic AUFFPBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort e 0)

(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 3)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (e e) Bool)

(declare-const dummy e)

(declare-datatypes () ((e__ref (mk_e__ref (e__content e)))))
(define-fun e__ref___projection ((a e__ref)) e (e__content a))

(define-fun dynamic_invariant ((temp___expr_183 Int)
  (temp___is_init_180 Bool) (temp___skip_constant_181 Bool)
  (temp___do_toplevel_182 Bool)) Bool (=>
                                      (or (= temp___is_init_180 true)
                                      (<= 0 3)) (in_range temp___expr_183)))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const x Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const y Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const mine Int)

(declare-const maxe Int)

(declare-const result Int)

(declare-const mine1 Int)

(declare-const result1 Int)

(declare-const maxe1 Int)

;; H
  (assert (=> (<= 0 3) (in_range mine)))

;; H
  (assert (=> (<= 0 3) (in_range maxe)))

;; H
  (assert (in_range x))

;; H
  (assert (in_range y))

;; H
  (assert (< x y))

;; H
  (assert (= result mine))

;; H
  (assert (= mine1 (ite (< x y) x y)))

;; H
  (assert (= result1 maxe))

;; H
  (assert (= maxe1 (ite (< x y) y x)))

(assert
;; WP_parameter_def
 ;; File "minmax.adb", line 54, characters 0-0
  (not (= mine1 x)))
(check-sat)
(exit)
