;; produced by cvc4_16.drv ;;
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :smt-lib-version 2.5)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort integer 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x)
                                     (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ()
((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(declare-sort positive 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (positive positive) Bool)

(declare-const dummy1 positive)

(declare-datatypes ()
((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content
                                                                    a))

(declare-sort character 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (character character) Bool)

(declare-const dummy2 character)

(declare-datatypes ()
((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character
  (character__content a))

(declare-fun to_rep (character) Int)

(declare-fun of_rep (Int) character)

;; inversion_axiom
  (assert
  (forall ((x character))
  (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)) )))

;; range_axiom
  (assert
  (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep
                                                            (of_rep x))) )))

(declare-datatypes ()
((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))

;; slide_eq
  (assert
  (forall ((a (Array Int character)))
  (forall ((first Int))
  (! (= (slide a first first) a) :pattern ((slide a first first)) ))))

;; slide_def
  (assert
  (forall ((a (Array Int character)))
  (forall ((old_first Int))
  (forall ((new_first Int))
  (forall ((i Int))
  (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select
  (slide a old_first new_first) i)) ))))))

(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int
  Int) (Array Int character))

;; concat_def
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (forall ((i Int))
  (! (and
     (=> (and (<= a_first i) (<= i a_last))
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i)))
     (=> (< a_last i)
     (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select
  (concat1 a a_first a_last b b_first b_last) i)) )))))

(declare-fun singleton1 (character Int) (Array Int character))

;; singleton_def
  (assert
  (forall ((v character))
  (forall ((i Int))
  (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i)) ))))

(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int)
  (b (Array Int character)) (b__first Int)
  (b__last Int)) Bool (ite (and
                           (ite (<= a__first a__last)
                           (and (<= b__first b__last)
                           (= (- a__last a__first) (- b__last b__first)))
                           (< b__last b__first))
                           (forall ((temp___idx_78 Int))
                           (=>
                           (and (<= a__first temp___idx_78)
                           (<= temp___idx_78 a__last))
                           (= (to_rep (select a temp___idx_78)) (to_rep
                                                                (select b (+ (- b__first a__first) temp___idx_78)))))))
                      true false))

;; bool_eq_rev
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int))
  (=> (= (bool_eq b b__first b__last a a__first a__last) true)
  (and
  (ite (<= a__first a__last)
  (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first)))
  (< b__last b__first))
  (forall ((temp___idx_78 Int))
  (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last))
  (= (to_rep (select a temp___idx_78)) (to_rep
                                       (select b (+ (- b__first a__first) temp___idx_78)))))))))))

(declare-fun compare ((Array Int character) Int Int (Array Int character) Int
  Int) Int)

;; compare_def_eq
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (= (compare a a_first a_last b b_first b_last) 0)
     (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_lt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< (compare a a_first a_last b b_first b_last) 0)
     (exists ((i Int) (j Int))
     (and (<= i a_last)
     (and (< j b_last)
     (and (= (bool_eq a a_first i b b_first j) true)
     (or (= i a_last)
     (and (< i a_last)
     (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

;; compare_def_gt
  (assert
  (forall ((a (Array Int character)) (b (Array Int character)))
  (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int))
  (! (= (< 0 (compare a a_first a_last b b_first b_last))
     (exists ((i Int) (j Int))
     (and (<= i b_last)
     (and (< j a_last)
     (and (= (bool_eq a a_first j b b_first i) true)
     (or (= i b_last)
     (and (< i b_last)
     (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern (
  (compare a a_first a_last b b_first b_last)) ))))

(declare-fun to_rep1 (integer) Int)

(declare-fun of_rep1 (Int) integer)

;; inversion_axiom
  (assert
  (forall ((x integer))
  (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)) )))

;; range_axiom
  (assert
  (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1
                                                              (of_rep1 x))) )))

(declare-sort t 0)

(declare-fun first (t) integer)

(declare-fun last (t) integer)

(declare-fun mk (Int Int) t)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern (
  (mk f l)) )))

(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high) (and (in_range2 low) (in_range2 high))))))

(declare-datatypes () ((us_t (mk___t (elts (Array Int character))(rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))

(define-fun of_array ((a (Array Int character)) (f Int)
  (l Int)) us_t (mk___t a (mk f l)))

(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))

(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))

(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a))
                                  (+ (- (last1 a) (first1 a)) 1) 0))

(declare-const value__size Int)

(declare-fun object__size ((Array Int character)) Int)

(declare-const value__component__size Int)

(declare-fun object__component__size ((Array Int character)) Int)

(declare-const value__alignment Int)

(declare-fun object__alignment ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))

(define-fun bool_eq1 ((x us_t)
  (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x)))
                 (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y)))
                 (to_rep1 (last (rt y)))))

(declare-fun user_eq3 (us_t us_t) Bool)

(declare-const dummy3 us_t)

(declare-fun to_string (us_image) us_t)

(declare-fun from_string (us_t) us_image)

(declare-datatypes ()
((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content
                                                            a))

(declare-sort statscount 0)

(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq4 (statscount statscount) Bool)

(declare-const dummy4 statscount)

(declare-datatypes ()
((statscount__ref (mk_statscount__ref (statscount__content statscount)))))
(define-fun statscount__ref___projection ((a statscount__ref)) statscount
  (statscount__content a))

(define-fun dynamic_invariant ((temp___expr_901 Int)
  (temp___is_init_898 Bool) (temp___skip_constant_899 Bool)
  (temp___do_toplevel_900 Bool)) Bool (=>
                                      (or (= temp___is_init_898 true)
                                      (<= 0 2147483647)) (in_range4
                                      temp___expr_901)))

(declare-fun to_rep2 (statscount) Int)

(declare-fun of_rep2 (Int) statscount)

;; inversion_axiom
  (assert
  (forall ((x statscount))
  (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)) )))

;; range_axiom
  (assert
  (forall ((x statscount)) (! (in_range4
  (to_rep2 x)) :pattern ((to_rep2 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2
                                                              (of_rep2 x))) )))

(declare-datatypes ()
((us_split_fields
 (mk___split_fields
 (rec__stats__t__successentry statscount)(rec__stats__t__failentry statscount)(rec__stats__t__successbio statscount)(rec__stats__t__failbio statscount)))))
(define-fun us_split_fields_SuccessEntry__projection ((a us_split_fields)) statscount
  (rec__stats__t__successentry a))

(define-fun us_split_fields_FailEntry__projection ((a us_split_fields)) statscount
  (rec__stats__t__failentry a))

(define-fun us_split_fields_SuccessBio__projection ((a us_split_fields)) statscount
  (rec__stats__t__successbio a))

(define-fun us_split_fields_FailBio__projection ((a us_split_fields)) statscount
  (rec__stats__t__failbio a))

(declare-datatypes ()
((us_split_fields__ref
 (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields
  (us_split_fields__content a))

(declare-datatypes ()
((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep)) us_split_fields (us_split_fields1
                                                                a))

(define-fun bool_eq2 ((a us_rep)
  (b us_rep)) Bool (ite (and
                        (and
                        (and
                        (= (to_rep2
                           (rec__stats__t__successentry (us_split_fields1 a)))
                        (to_rep2
                        (rec__stats__t__successentry (us_split_fields1 b))))
                        (= (to_rep2
                           (rec__stats__t__failentry (us_split_fields1 a)))
                        (to_rep2
                        (rec__stats__t__failentry (us_split_fields1 b)))))
                        (= (to_rep2
                           (rec__stats__t__successbio (us_split_fields1 a)))
                        (to_rep2
                        (rec__stats__t__successbio (us_split_fields1 b)))))
                        (= (to_rep2
                           (rec__stats__t__failbio (us_split_fields1 a)))
                        (to_rep2
                        (rec__stats__t__failbio (us_split_fields1 b)))))
                   true false))

(declare-const value__size1 Int)

(declare-fun object__size1 (us_rep) Int)

(declare-const value__alignment1 Int)

(declare-fun object__alignment1 (us_rep) Int)

;; value__size_axiom
  (assert (<= 0 value__size1))

;; object__size_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment1))

;; object__alignment_axiom
  (assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))

(declare-const stats__t__successentry__first__bit Int)

(declare-const stats__t__successentry__last__bit Int)

(declare-const stats__t__successentry__position Int)

;; stats__t__successentry__first__bit_axiom
  (assert (<= 0 stats__t__successentry__first__bit))

;; stats__t__successentry__last__bit_axiom
  (assert
  (< stats__t__successentry__first__bit stats__t__successentry__last__bit))

;; stats__t__successentry__position_axiom
  (assert (<= 0 stats__t__successentry__position))

(declare-const stats__t__failentry__first__bit Int)

(declare-const stats__t__failentry__last__bit Int)

(declare-const stats__t__failentry__position Int)

;; stats__t__failentry__first__bit_axiom
  (assert (<= 0 stats__t__failentry__first__bit))

;; stats__t__failentry__last__bit_axiom
  (assert (< stats__t__failentry__first__bit stats__t__failentry__last__bit))

;; stats__t__failentry__position_axiom
  (assert (<= 0 stats__t__failentry__position))

(declare-const stats__t__successbio__first__bit Int)

(declare-const stats__t__successbio__last__bit Int)

(declare-const stats__t__successbio__position Int)

;; stats__t__successbio__first__bit_axiom
  (assert (<= 0 stats__t__successbio__first__bit))

;; stats__t__successbio__last__bit_axiom
  (assert
  (< stats__t__successbio__first__bit stats__t__successbio__last__bit))

;; stats__t__successbio__position_axiom
  (assert (<= 0 stats__t__successbio__position))

(declare-const stats__t__failbio__first__bit Int)

(declare-const stats__t__failbio__last__bit Int)

(declare-const stats__t__failbio__position Int)

;; stats__t__failbio__first__bit_axiom
  (assert (<= 0 stats__t__failbio__first__bit))

;; stats__t__failbio__last__bit_axiom
  (assert (< stats__t__failbio__first__bit stats__t__failbio__last__bit))

;; stats__t__failbio__position_axiom
  (assert (<= 0 stats__t__failbio__position))

(declare-fun user_eq5 (us_rep us_rep) Bool)

(declare-const dummy5 us_rep)

(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___4__projection ((a t__ref)) us_rep (t__content a))

(declare-datatypes ()
((us_split_fields2
 (mk___split_fields1
 (rec__screen__screenstatst__isdisplayed Bool)(rec__screen__screenstatst__data us_rep)))))
(define-fun us_split_fields_IsDisplayed__projection ((a us_split_fields2)) Bool
  (rec__screen__screenstatst__isdisplayed a))

(define-fun us_split_fields_Data__projection ((a us_split_fields2)) us_rep
  (rec__screen__screenstatst__data a))

(declare-datatypes ()
((us_split_fields__ref1
 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___11__projection ((a us_split_fields__ref1)) us_split_fields2
  (us_split_fields__content1 a))

(declare-datatypes ()
((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___12__projection ((a us_rep1)) us_split_fields2 (us_split_fields3
                                                                   a))

(define-fun bool_eq3 ((a us_rep1)
  (b us_rep1)) Bool (ite (and
                         (= (rec__screen__screenstatst__isdisplayed
                            (us_split_fields3 a)) (rec__screen__screenstatst__isdisplayed
                                                  (us_split_fields3 b)))
                         (= (bool_eq2
                            (rec__screen__screenstatst__data
                            (us_split_fields3 a))
                            (rec__screen__screenstatst__data
                            (us_split_fields3 b))) true))
                    true false))

(declare-const value__size2 Int)

(declare-fun object__size2 (us_rep1) Int)

(declare-const value__alignment2 Int)

(declare-fun object__alignment2 (us_rep1) Int)

;; value__size_axiom
  (assert (<= 0 value__size2))

;; object__size_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment2))

;; object__alignment_axiom
  (assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))

(declare-const screen__screenstatst__isdisplayed__first__bit Int)

(declare-const screen__screenstatst__isdisplayed__last__bit Int)

(declare-const screen__screenstatst__isdisplayed__position Int)

;; screen__screenstatst__isdisplayed__first__bit_axiom
  (assert (<= 0 screen__screenstatst__isdisplayed__first__bit))

;; screen__screenstatst__isdisplayed__last__bit_axiom
  (assert
  (< screen__screenstatst__isdisplayed__first__bit screen__screenstatst__isdisplayed__last__bit))

;; screen__screenstatst__isdisplayed__position_axiom
  (assert (<= 0 screen__screenstatst__isdisplayed__position))

(declare-const screen__screenstatst__data__first__bit Int)

(declare-const screen__screenstatst__data__last__bit Int)

(declare-const screen__screenstatst__data__position Int)

;; screen__screenstatst__data__first__bit_axiom
  (assert (<= 0 screen__screenstatst__data__first__bit))

;; screen__screenstatst__data__last__bit_axiom
  (assert
  (< screen__screenstatst__data__first__bit screen__screenstatst__data__last__bit))

;; screen__screenstatst__data__position_axiom
  (assert (<= 0 screen__screenstatst__data__position))

(declare-fun user_eq6 (us_rep1 us_rep1) Bool)

(declare-const dummy6 us_rep1)

(declare-datatypes ()
((screenstatst__ref (mk_screenstatst__ref (screenstatst__content us_rep1)))))
(define-fun screenstatst__ref___projection ((a screenstatst__ref)) us_rep1
  (screenstatst__content a))

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-sort screenxcoordt 0)

(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 79)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq7 (screenxcoordt screenxcoordt) Bool)

(declare-const dummy7 screenxcoordt)

(declare-datatypes ()
((screenxcoordt__ref
 (mk_screenxcoordt__ref (screenxcoordt__content screenxcoordt)))))
(define-fun screenxcoordt__ref___projection ((a screenxcoordt__ref)) screenxcoordt
  (screenxcoordt__content a))

(declare-fun to_rep3 (screenxcoordt) Int)

(declare-fun of_rep3 (Int) screenxcoordt)

;; inversion_axiom
  (assert
  (forall ((x screenxcoordt))
  (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)) )))

;; range_axiom
  (assert
  (forall ((x screenxcoordt)) (! (in_range5
  (to_rep3 x)) :pattern ((to_rep3 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3
                                                              (of_rep3 x))) )))

(declare-sort screenycoordt 0)

(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 29)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq8 (screenycoordt screenycoordt) Bool)

(declare-const dummy8 screenycoordt)

(declare-datatypes ()
((screenycoordt__ref
 (mk_screenycoordt__ref (screenycoordt__content screenycoordt)))))
(define-fun screenycoordt__ref___projection ((a screenycoordt__ref)) screenycoordt
  (screenycoordt__content a))

(declare-fun to_rep4 (screenycoordt) Int)

(declare-fun of_rep4 (Int) screenycoordt)

;; inversion_axiom
  (assert
  (forall ((x screenycoordt))
  (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)) )))

;; range_axiom
  (assert
  (forall ((x screenycoordt)) (! (in_range6
  (to_rep4 x)) :pattern ((to_rep4 x)) )))

;; coerce_axiom
  (assert
  (forall ((x Int))
  (! (=> (in_range6 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4
                                                              (of_rep4 x))) )))

(declare-datatypes ()
((us_split_fields4
 (mk___split_fields2
 (rec__screen__interfac__xycoordt__x screenxcoordt)(rec__screen__interfac__xycoordt__y screenycoordt)))))
(define-fun us_split_fields_X__projection ((a us_split_fields4)) screenxcoordt
  (rec__screen__interfac__xycoordt__x a))

(define-fun us_split_fields_Y__projection ((a us_split_fields4)) screenycoordt
  (rec__screen__interfac__xycoordt__y a))

(declare-datatypes ()
((us_split_fields__ref2
 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___10__projection ((a us_split_fields__ref2)) us_split_fields4
  (us_split_fields__content2 a))

(declare-datatypes ()
((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___11__projection ((a us_rep2)) us_split_fields4 (us_split_fields5
                                                                   a))

(define-fun bool_eq4 ((a us_rep2)
  (b us_rep2)) Bool (ite (and
                         (= (to_rep3
                            (rec__screen__interfac__xycoordt__x
                            (us_split_fields5 a))) (to_rep3
                                                   (rec__screen__interfac__xycoordt__x
                                                   (us_split_fields5 b))))
                         (= (to_rep4
                            (rec__screen__interfac__xycoordt__y
                            (us_split_fields5 a))) (to_rep4
                                                   (rec__screen__interfac__xycoordt__y
                                                   (us_split_fields5 b)))))
                    true false))

(declare-const value__size3 Int)

(declare-fun object__size3 (us_rep2) Int)

(declare-const value__alignment3 Int)

(declare-fun object__alignment3 (us_rep2) Int)

;; value__size_axiom
  (assert (<= 0 value__size3))

;; object__size_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment3))

;; object__alignment_axiom
  (assert (forall ((a us_rep2)) (<= 0 (object__alignment3 a))))

(declare-const screen__interfac__xycoordt__x__first__bit Int)

(declare-const screen__interfac__xycoordt__x__last__bit Int)

(declare-const screen__interfac__xycoordt__x__position Int)

;; screen__interfac__xycoordt__x__first__bit_axiom
  (assert (<= 0 screen__interfac__xycoordt__x__first__bit))

;; screen__interfac__xycoordt__x__last__bit_axiom
  (assert
  (< screen__interfac__xycoordt__x__first__bit screen__interfac__xycoordt__x__last__bit))

;; screen__interfac__xycoordt__x__position_axiom
  (assert (<= 0 screen__interfac__xycoordt__x__position))

(declare-const screen__interfac__xycoordt__y__first__bit Int)

(declare-const screen__interfac__xycoordt__y__last__bit Int)

(declare-const screen__interfac__xycoordt__y__position Int)

;; screen__interfac__xycoordt__y__first__bit_axiom
  (assert (<= 0 screen__interfac__xycoordt__y__first__bit))

;; screen__interfac__xycoordt__y__last__bit_axiom
  (assert
  (< screen__interfac__xycoordt__y__first__bit screen__interfac__xycoordt__y__last__bit))

;; screen__interfac__xycoordt__y__position_axiom
  (assert (<= 0 screen__interfac__xycoordt__y__position))

(declare-fun user_eq9 (us_rep2 us_rep2) Bool)

(declare-const dummy9 us_rep2)

(declare-datatypes ()
((xycoordt__ref (mk_xycoordt__ref (xycoordt__content us_rep2)))))
(define-fun xycoordt__ref___projection ((a xycoordt__ref)) us_rep2 (xycoordt__content
                                                                   a))

(declare-sort statscountstringi 0)

(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 10)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq10 (statscountstringi statscountstringi) Bool)

(declare-const dummy10 statscountstringi)

(declare-datatypes ()
((statscountstringi__ref
 (mk_statscountstringi__ref (statscountstringi__content statscountstringi)))))
(define-fun statscountstringi__ref___projection ((a statscountstringi__ref)) statscountstringi
  (statscountstringi__content a))

(declare-const thestats us_rep)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const attr__ATTRIBUTE_ADDRESS3 Int)

(declare-const attr__ATTRIBUTE_ADDRESS4 Int)

(declare-const attr__ATTRIBUTE_ADDRESS5 Int)

(declare-const attr__ATTRIBUTE_ADDRESS6 Int)

(declare-const attr__ATTRIBUTE_ADDRESS7 Int)

(declare-const c248b Int)

(declare-const attr__ATTRIBUTE_ADDRESS8 Int)

(declare-const attr__ATTRIBUTE_ADDRESS9 Int)

(declare-const data__first integer)

(declare-const data__last integer)

(declare-const attr__ATTRIBUTE_ADDRESS10 Int)

(declare-const attr__ATTRIBUTE_ADDRESS11 Int)

(define-fun dynamic_property1 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)

(declare-fun user_eq11 (integer integer) Bool)

(declare-const dummy11 integer)

(declare-datatypes ()
((t254b__ref (mk_t254b__ref (t254b__content integer)))))
(define-fun t254b__ref___projection ((a t254b__ref)) integer (t254b__content
                                                             a))

(declare-sort t1 0)

(declare-fun first2 (t1) integer)

(declare-fun last2 (t1) integer)

(declare-fun mk1 (Int Int) t1)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first2 (mk1 f l))) f)
     (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)) )))

(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property1 range_first range_last low)
                   (dynamic_property1 range_first range_last high))))))

(declare-datatypes ()
((us_t1 (mk___t1 (elts1 (Array Int character))(rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))

(define-fun of_array1 ((a (Array Int character)) (f Int)
  (l Int)) us_t1 (mk___t1 a (mk1 f l)))

(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))

(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))

(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a))
                                    (+ (- (last3 a) (first3 a)) 1) 0))

(declare-const value__size4 Int)

(declare-fun object__size4 ((Array Int character)) Int)

(declare-const value__component__size1 Int)

(declare-fun object__component__size1 ((Array Int character)) Int)

(declare-const value__alignment4 Int)

(declare-fun object__alignment4 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size4))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size4 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size1))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment4))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment4 a))))

(define-fun bool_eq5 ((x us_t1)
  (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x)))
                  (to_rep1 (last2 (rt1 x))) (elts1 y)
                  (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))

(declare-fun user_eq12 (us_t1 us_t1) Bool)

(declare-const dummy12 us_t1)

(declare-datatypes () ((t255b__ref (mk_t255b__ref (t255b__content us_t1)))))
(define-fun t255b__ref___projection ((a t255b__ref)) us_t1 (t255b__content a))

(define-fun dynamic_property3 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)

(declare-fun user_eq13 (integer integer) Bool)

(declare-const dummy13 integer)

(declare-datatypes ()
((t257b__ref (mk_t257b__ref (t257b__content integer)))))
(define-fun t257b__ref___projection ((a t257b__ref)) integer (t257b__content
                                                             a))

(declare-sort t2 0)

(declare-fun first4 (t2) integer)

(declare-fun last4 (t2) integer)

(declare-fun mk2 (Int Int) t2)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first4 (mk2 f l))) f)
     (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)) )))

(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property3 range_first range_last low)
                   (dynamic_property3 range_first range_last high))))))

(declare-datatypes ()
((us_t2 (mk___t2 (elts2 (Array Int character))(rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))

(define-fun of_array2 ((a (Array Int character)) (f Int)
  (l Int)) us_t2 (mk___t2 a (mk2 f l)))

(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))

(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))

(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a))
                                    (+ (- (last5 a) (first5 a)) 1) 0))

(declare-const value__size5 Int)

(declare-fun object__size5 ((Array Int character)) Int)

(declare-const value__component__size2 Int)

(declare-fun object__component__size2 ((Array Int character)) Int)

(declare-const value__alignment5 Int)

(declare-fun object__alignment5 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size5))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size5 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size2))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment5))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment5 a))))

(define-fun bool_eq6 ((x us_t2)
  (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x)))
                  (to_rep1 (last4 (rt2 x))) (elts2 y)
                  (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))

(declare-fun user_eq14 (us_t2 us_t2) Bool)

(declare-const dummy14 us_t2)

(declare-datatypes () ((t258b__ref (mk_t258b__ref (t258b__content us_t2)))))
(define-fun t258b__ref___projection ((a t258b__ref)) us_t2 (t258b__content a))

(declare-const c259b Int)

(declare-const attr__ATTRIBUTE_ADDRESS12 Int)

(declare-const attr__ATTRIBUTE_ADDRESS13 Int)

(declare-const data__first1 integer)

(declare-const data__last1 integer)

(declare-const attr__ATTRIBUTE_ADDRESS14 Int)

(declare-const attr__ATTRIBUTE_ADDRESS15 Int)

(define-fun dynamic_property5 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)

(declare-fun user_eq15 (integer integer) Bool)

(declare-const dummy15 integer)

(declare-datatypes ()
((t265b__ref (mk_t265b__ref (t265b__content integer)))))
(define-fun t265b__ref___projection ((a t265b__ref)) integer (t265b__content
                                                             a))

(declare-sort t3 0)

(declare-fun first6 (t3) integer)

(declare-fun last6 (t3) integer)

(declare-fun mk3 (Int Int) t3)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first6 (mk3 f l))) f)
     (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)) )))

(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property5 range_first range_last low)
                   (dynamic_property5 range_first range_last high))))))

(declare-datatypes ()
((us_t3 (mk___t3 (elts3 (Array Int character))(rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int character) (elts3 a))

(define-fun of_array3 ((a (Array Int character)) (f Int)
  (l Int)) us_t3 (mk___t3 a (mk3 f l)))

(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))

(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))

(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a))
                                    (+ (- (last7 a) (first7 a)) 1) 0))

(declare-const value__size6 Int)

(declare-fun object__size6 ((Array Int character)) Int)

(declare-const value__component__size3 Int)

(declare-fun object__component__size3 ((Array Int character)) Int)

(declare-const value__alignment6 Int)

(declare-fun object__alignment6 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size6))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size6 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size3))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment6))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment6 a))))

(define-fun bool_eq7 ((x us_t3)
  (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first6 (rt3 x)))
                  (to_rep1 (last6 (rt3 x))) (elts3 y)
                  (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))

(declare-fun user_eq16 (us_t3 us_t3) Bool)

(declare-const dummy16 us_t3)

(declare-datatypes () ((t266b__ref (mk_t266b__ref (t266b__content us_t3)))))
(define-fun t266b__ref___projection ((a t266b__ref)) us_t3 (t266b__content a))

(define-fun dynamic_property7 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)

(declare-fun user_eq17 (integer integer) Bool)

(declare-const dummy17 integer)

(declare-datatypes ()
((t268b__ref (mk_t268b__ref (t268b__content integer)))))
(define-fun t268b__ref___projection ((a t268b__ref)) integer (t268b__content
                                                             a))

(declare-sort t4 0)

(declare-fun first8 (t4) integer)

(declare-fun last8 (t4) integer)

(declare-fun mk4 (Int Int) t4)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first8 (mk4 f l))) f)
     (= (to_rep1 (last8 (mk4 f l))) l)))) :pattern ((mk4 f l)) )))

(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property7 range_first range_last low)
                   (dynamic_property7 range_first range_last high))))))

(declare-datatypes ()
((us_t4 (mk___t4 (elts4 (Array Int character))(rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int character) (elts4 a))

(define-fun of_array4 ((a (Array Int character)) (f Int)
  (l Int)) us_t4 (mk___t4 a (mk4 f l)))

(define-fun first9 ((a us_t4)) Int (to_rep1 (first8 (rt4 a))))

(define-fun last9 ((a us_t4)) Int (to_rep1 (last8 (rt4 a))))

(define-fun length4 ((a us_t4)) Int (ite (<= (first9 a) (last9 a))
                                    (+ (- (last9 a) (first9 a)) 1) 0))

(declare-const value__size7 Int)

(declare-fun object__size7 ((Array Int character)) Int)

(declare-const value__component__size4 Int)

(declare-fun object__component__size4 ((Array Int character)) Int)

(declare-const value__alignment7 Int)

(declare-fun object__alignment7 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size7))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size7 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size4))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size4 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment7))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment7 a))))

(define-fun bool_eq8 ((x us_t4)
  (y us_t4)) Bool (bool_eq (elts4 x) (to_rep1 (first8 (rt4 x)))
                  (to_rep1 (last8 (rt4 x))) (elts4 y)
                  (to_rep1 (first8 (rt4 y))) (to_rep1 (last8 (rt4 y)))))

(declare-fun user_eq18 (us_t4 us_t4) Bool)

(declare-const dummy18 us_t4)

(declare-datatypes () ((t269b__ref (mk_t269b__ref (t269b__content us_t4)))))
(define-fun t269b__ref___projection ((a t269b__ref)) us_t4 (t269b__content a))

(declare-const c270b Int)

(declare-const attr__ATTRIBUTE_ADDRESS16 Int)

(declare-const attr__ATTRIBUTE_ADDRESS17 Int)

(declare-const data__first2 integer)

(declare-const data__last2 integer)

(declare-const attr__ATTRIBUTE_ADDRESS18 Int)

(declare-const attr__ATTRIBUTE_ADDRESS19 Int)

(define-fun dynamic_property9 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)

(declare-fun user_eq19 (integer integer) Bool)

(declare-const dummy19 integer)

(declare-datatypes ()
((t276b__ref (mk_t276b__ref (t276b__content integer)))))
(define-fun t276b__ref___projection ((a t276b__ref)) integer (t276b__content
                                                             a))

(declare-sort t5 0)

(declare-fun first10 (t5) integer)

(declare-fun last10 (t5) integer)

(declare-fun mk5 (Int Int) t5)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first10 (mk5 f l))) f)
     (= (to_rep1 (last10 (mk5 f l))) l)))) :pattern ((mk5 f l)) )))

(define-fun dynamic_property10 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property9 range_first range_last low)
                   (dynamic_property9 range_first range_last high))))))

(declare-datatypes ()
((us_t5 (mk___t5 (elts5 (Array Int character))(rt5 t5)))))
(define-fun to_array5 ((a us_t5)) (Array Int character) (elts5 a))

(define-fun of_array5 ((a (Array Int character)) (f Int)
  (l Int)) us_t5 (mk___t5 a (mk5 f l)))

(define-fun first11 ((a us_t5)) Int (to_rep1 (first10 (rt5 a))))

(define-fun last11 ((a us_t5)) Int (to_rep1 (last10 (rt5 a))))

(define-fun length5 ((a us_t5)) Int (ite (<= (first11 a) (last11 a))
                                    (+ (- (last11 a) (first11 a)) 1) 0))

(declare-const value__size8 Int)

(declare-fun object__size8 ((Array Int character)) Int)

(declare-const value__component__size5 Int)

(declare-fun object__component__size5 ((Array Int character)) Int)

(declare-const value__alignment8 Int)

(declare-fun object__alignment8 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size8))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size8 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size5))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size5 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment8))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment8 a))))

(define-fun bool_eq9 ((x us_t5)
  (y us_t5)) Bool (bool_eq (elts5 x) (to_rep1 (first10 (rt5 x)))
                  (to_rep1 (last10 (rt5 x))) (elts5 y)
                  (to_rep1 (first10 (rt5 y))) (to_rep1 (last10 (rt5 y)))))

(declare-fun user_eq20 (us_t5 us_t5) Bool)

(declare-const dummy20 us_t5)

(declare-datatypes () ((t277b__ref (mk_t277b__ref (t277b__content us_t5)))))
(define-fun t277b__ref___projection ((a t277b__ref)) us_t5 (t277b__content a))

(define-fun dynamic_property11 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)

(declare-fun user_eq21 (integer integer) Bool)

(declare-const dummy21 integer)

(declare-datatypes ()
((t279b__ref (mk_t279b__ref (t279b__content integer)))))
(define-fun t279b__ref___projection ((a t279b__ref)) integer (t279b__content
                                                             a))

(declare-sort t6 0)

(declare-fun first12 (t6) integer)

(declare-fun last12 (t6) integer)

(declare-fun mk6 (Int Int) t6)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first12 (mk6 f l))) f)
     (= (to_rep1 (last12 (mk6 f l))) l)))) :pattern ((mk6 f l)) )))

(define-fun dynamic_property12 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property11 range_first range_last low)
                   (dynamic_property11 range_first range_last high))))))

(declare-datatypes ()
((us_t6 (mk___t6 (elts6 (Array Int character))(rt6 t6)))))
(define-fun to_array6 ((a us_t6)) (Array Int character) (elts6 a))

(define-fun of_array6 ((a (Array Int character)) (f Int)
  (l Int)) us_t6 (mk___t6 a (mk6 f l)))

(define-fun first13 ((a us_t6)) Int (to_rep1 (first12 (rt6 a))))

(define-fun last13 ((a us_t6)) Int (to_rep1 (last12 (rt6 a))))

(define-fun length6 ((a us_t6)) Int (ite (<= (first13 a) (last13 a))
                                    (+ (- (last13 a) (first13 a)) 1) 0))

(declare-const value__size9 Int)

(declare-fun object__size9 ((Array Int character)) Int)

(declare-const value__component__size6 Int)

(declare-fun object__component__size6 ((Array Int character)) Int)

(declare-const value__alignment9 Int)

(declare-fun object__alignment9 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size9))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size9 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size6))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size6 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment9))

;; object__alignment_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__alignment9 a))))

(define-fun bool_eq10 ((x us_t6)
  (y us_t6)) Bool (bool_eq (elts6 x) (to_rep1 (first12 (rt6 x)))
                  (to_rep1 (last12 (rt6 x))) (elts6 y)
                  (to_rep1 (first12 (rt6 y))) (to_rep1 (last12 (rt6 y)))))

(declare-fun user_eq22 (us_t6 us_t6) Bool)

(declare-const dummy22 us_t6)

(declare-datatypes () ((t280b__ref (mk_t280b__ref (t280b__content us_t6)))))
(define-fun t280b__ref___projection ((a t280b__ref)) us_t6 (t280b__content a))

(declare-const c281b Int)

(declare-const attr__ATTRIBUTE_ADDRESS20 Int)

(declare-const attr__ATTRIBUTE_ADDRESS21 Int)

(declare-const data__first3 integer)

(declare-const data__last3 integer)

(declare-const attr__ATTRIBUTE_ADDRESS22 Int)

(declare-const attr__ATTRIBUTE_ADDRESS23 Int)

(define-fun dynamic_property13 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)

(declare-fun user_eq23 (integer integer) Bool)

(declare-const dummy23 integer)

(declare-datatypes ()
((t287b__ref (mk_t287b__ref (t287b__content integer)))))
(define-fun t287b__ref___projection ((a t287b__ref)) integer (t287b__content
                                                             a))

(declare-sort t7 0)

(declare-fun first14 (t7) integer)

(declare-fun last14 (t7) integer)

(declare-fun mk7 (Int Int) t7)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first14 (mk7 f l))) f)
     (= (to_rep1 (last14 (mk7 f l))) l)))) :pattern ((mk7 f l)) )))

(define-fun dynamic_property14 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property13 range_first range_last low)
                   (dynamic_property13 range_first range_last high))))))

(declare-datatypes ()
((us_t7 (mk___t7 (elts7 (Array Int character))(rt7 t7)))))
(define-fun to_array7 ((a us_t7)) (Array Int character) (elts7 a))

(define-fun of_array7 ((a (Array Int character)) (f Int)
  (l Int)) us_t7 (mk___t7 a (mk7 f l)))

(define-fun first15 ((a us_t7)) Int (to_rep1 (first14 (rt7 a))))

(define-fun last15 ((a us_t7)) Int (to_rep1 (last14 (rt7 a))))

(define-fun length7 ((a us_t7)) Int (ite (<= (first15 a) (last15 a))
                                    (+ (- (last15 a) (first15 a)) 1) 0))

(declare-const value__size10 Int)

(declare-fun object__size10 ((Array Int character)) Int)

(declare-const value__component__size7 Int)

(declare-fun object__component__size7 ((Array Int character)) Int)

(declare-const value__alignment10 Int)

(declare-fun object__alignment10 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size10))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size10 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size7))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size7 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment10))

;; object__alignment_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__alignment10 a))))

(define-fun bool_eq11 ((x us_t7)
  (y us_t7)) Bool (bool_eq (elts7 x) (to_rep1 (first14 (rt7 x)))
                  (to_rep1 (last14 (rt7 x))) (elts7 y)
                  (to_rep1 (first14 (rt7 y))) (to_rep1 (last14 (rt7 y)))))

(declare-fun user_eq24 (us_t7 us_t7) Bool)

(declare-const dummy24 us_t7)

(declare-datatypes () ((t288b__ref (mk_t288b__ref (t288b__content us_t7)))))
(define-fun t288b__ref___projection ((a t288b__ref)) us_t7 (t288b__content a))

(define-fun dynamic_property15 ((first_int Int) (last_int Int)
  (x Int)) Bool (and (<= first_int x) (<= x last_int)))

(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)

(declare-fun user_eq25 (integer integer) Bool)

(declare-const dummy25 integer)

(declare-datatypes ()
((t290b__ref (mk_t290b__ref (t290b__content integer)))))
(define-fun t290b__ref___projection ((a t290b__ref)) integer (t290b__content
                                                             a))

(declare-sort t8 0)

(declare-fun first16 (t8) integer)

(declare-fun last16 (t8) integer)

(declare-fun mk8 (Int Int) t8)

;; mk_def
  (assert
  (forall ((f Int) (l Int))
  (! (=> (in_range1 f)
     (=> (in_range1 l)
     (and (= (to_rep1 (first16 (mk8 f l))) f)
     (= (to_rep1 (last16 (mk8 f l))) l)))) :pattern ((mk8 f l)) )))

(define-fun dynamic_property16 ((range_first Int) (range_last Int) (low Int)
  (high Int)) Bool (and (in_range1 low)
                   (and (in_range1 high)
                   (=> (<= low high)
                   (and (dynamic_property15 range_first range_last low)
                   (dynamic_property15 range_first range_last high))))))

(declare-datatypes ()
((us_t8 (mk___t8 (elts8 (Array Int character))(rt8 t8)))))
(define-fun to_array8 ((a us_t8)) (Array Int character) (elts8 a))

(define-fun of_array8 ((a (Array Int character)) (f Int)
  (l Int)) us_t8 (mk___t8 a (mk8 f l)))

(define-fun first17 ((a us_t8)) Int (to_rep1 (first16 (rt8 a))))

(define-fun last17 ((a us_t8)) Int (to_rep1 (last16 (rt8 a))))

(define-fun length8 ((a us_t8)) Int (ite (<= (first17 a) (last17 a))
                                    (+ (- (last17 a) (first17 a)) 1) 0))

(declare-const value__size11 Int)

(declare-fun object__size11 ((Array Int character)) Int)

(declare-const value__component__size8 Int)

(declare-fun object__component__size8 ((Array Int character)) Int)

(declare-const value__alignment11 Int)

(declare-fun object__alignment11 ((Array Int character)) Int)

;; value__size_axiom
  (assert (<= 0 value__size11))

;; object__size_axiom
  (assert (forall ((a (Array Int character))) (<= 0 (object__size11 a))))

;; value__component__size_axiom
  (assert (<= 0 value__component__size8))

;; object__component__size_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__component__size8 a))))

;; value__alignment_axiom
  (assert (<= 0 value__alignment11))

;; object__alignment_axiom
  (assert
  (forall ((a (Array Int character))) (<= 0 (object__alignment11 a))))

(define-fun bool_eq12 ((x us_t8)
  (y us_t8)) Bool (bool_eq (elts8 x) (to_rep1 (first16 (rt8 x)))
                  (to_rep1 (last16 (rt8 x))) (elts8 y)
                  (to_rep1 (first16 (rt8 y))) (to_rep1 (last16 (rt8 y)))))

(declare-fun user_eq26 (us_t8 us_t8) Bool)

(declare-const dummy26 us_t8)

(declare-datatypes () ((t291b__ref (mk_t291b__ref (t291b__content us_t8)))))
(define-fun t291b__ref___projection ((a t291b__ref)) us_t8 (t291b__content a))

(declare-fun screen__writestatsdata__B251b__result__aggregate_def (Int) (Array Int character))

;; def_axiom
  (assert
  (forall ((temp___1409 Int))
  (forall ((temp___1410 Int))
  (= (select (screen__writestatsdata__B251b__result__aggregate_def
             temp___1409) temp___1410) (of_rep temp___1409)))))

(declare-fun screen__writestatsdata__B262b__result__aggregate_def (Int) (Array Int character))

;; def_axiom
  (assert
  (forall ((temp___1422 Int))
  (forall ((temp___1423 Int))
  (= (select (screen__writestatsdata__B262b__result__aggregate_def
             temp___1422) temp___1423) (of_rep temp___1422)))))

(declare-fun screen__writestatsdata__B273b__result__aggregate_def (Int) (Array Int character))

;; def_axiom
  (assert
  (forall ((temp___1435 Int))
  (forall ((temp___1436 Int))
  (= (select (screen__writestatsdata__B273b__result__aggregate_def
             temp___1435) temp___1436) (of_rep temp___1435)))))

(declare-fun screen__writestatsdata__B284b__result__aggregate_def (Int) (Array Int character))

;; def_axiom
  (assert
  (forall ((temp___1448 Int))
  (forall ((temp___1449 Int))
  (= (select (screen__writestatsdata__B284b__result__aggregate_def
             temp___1448) temp___1449) (of_rep temp___1448)))))

(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool)
  (temp___skip_constant_37 Bool)
  (temp___do_toplevel_38 Bool)) Bool (=>
                                     (or (= temp___is_init_36 true)
                                     (<= 1 2147483647)) (in_range2
                                     temp___expr_39)))

(define-fun dynamic_invariant2 ((temp___expr_63 Int) (temp___is_init_60 Bool)
  (temp___skip_constant_61 Bool)
  (temp___do_toplevel_62 Bool)) Bool (=>
                                     (or (= temp___is_init_60 true)
                                     (<= 0 255)) (in_range3 temp___expr_63)))

(define-fun dynamic_invariant3 ((temp___expr_82 us_t)
  (temp___is_init_79 Bool) (temp___skip_constant_80 Bool)
  (temp___do_toplevel_81 Bool)) Bool (=>
                                     (not (= temp___skip_constant_80 true))
                                     (dynamic_property 1 2147483647
                                     (first1 temp___expr_82)
                                     (last1 temp___expr_82))))

(define-fun dynamic_invariant4 ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range1 temp___expr_15)))

(define-fun dynamic_invariant5 ((temp___expr_1208 Int)
  (temp___is_init_1205 Bool) (temp___skip_constant_1206 Bool)
  (temp___do_toplevel_1207 Bool)) Bool (=>
                                       (or (= temp___is_init_1205 true)
                                       (<= 1 10)) (in_range7
                                       temp___expr_1208)))

(define-fun dynamic_invariant6 ((temp___expr_1019 Int)
  (temp___is_init_1016 Bool) (temp___skip_constant_1017 Bool)
  (temp___do_toplevel_1018 Bool)) Bool (=>
                                       (or (= temp___is_init_1016 true)
                                       (<= 0 79)) (in_range5
                                       temp___expr_1019)))

(define-fun dynamic_invariant7 ((temp___expr_1025 Int)
  (temp___is_init_1022 Bool) (temp___skip_constant_1023 Bool)
  (temp___do_toplevel_1024 Bool)) Bool (=>
                                       (or (= temp___is_init_1022 true)
                                       (<= 0 29)) (in_range6
                                       temp___expr_1025)))

(declare-const currentstats__split_fields Bool)

(declare-const currentstats__split_fields1 statscount)

(declare-const currentstats__split_fields2 statscount)

(declare-const currentstats__split_fields3 statscount)

(declare-const currentstats__split_fields4 statscount)

(declare-const successentry Int)

(declare-const failentry Int)

(declare-const successbio Int)

(declare-const failbio Int)

(declare-const c249b (Array Int character))

(declare-const data (Array Int character))

(declare-const result__ (Array Int character))

(declare-const c260b (Array Int character))

(declare-const data1 (Array Int character))

(declare-const result__1 (Array Int character))

(declare-const c271b (Array Int character))

(declare-const data2 (Array Int character))

(declare-const result__2 (Array Int character))

(declare-const data3 (Array Int character))

(declare-const result__3 map__ref)

(declare-const o (Array Int character))

(declare-const temp___1401 us_t2)

(declare-const temp___1402 us_t1)

(declare-const temp___1404 Int)

(declare-const o1 (Array Int character))

(declare-const temp___1405 us_t1)

(declare-const temp___1406 us_t1)

(declare-const o2 (Array Int character))

(declare-const o3 screenycoordt)

(declare-const o4 screenxcoordt)

(declare-const o5 us_split_fields4)

(declare-const o6 us_rep2)

(declare-const o7 (Array Int character))

(declare-const temp___1414 us_t4)

(declare-const temp___1415 us_t3)

(declare-const temp___1417 Int)

(declare-const o8 (Array Int character))

(declare-const temp___1418 us_t3)

(declare-const temp___1419 us_t3)

(declare-const o9 (Array Int character))

(declare-const o10 screenycoordt)

(declare-const o11 screenxcoordt)

(declare-const o12 us_split_fields4)

(declare-const o13 us_rep2)

(declare-const o14 (Array Int character))

(declare-const temp___1427 us_t6)

(declare-const temp___1428 us_t5)

(declare-const temp___1430 Int)

(declare-const o15 (Array Int character))

(declare-const temp___1431 us_t5)

(declare-const temp___1432 us_t5)

(declare-const o16 (Array Int character))

(declare-const o17 screenycoordt)

(declare-const o18 screenxcoordt)

(declare-const o19 us_split_fields4)

(declare-const o20 us_rep2)

(declare-const o21 (Array Int character))

(declare-const temp___1440 us_t8)

(declare-const temp___1441 us_t7)

(declare-const temp___1443 Int)

(declare-const successentry1 Int)

(declare-const failentry1 Int)

(declare-const successbio1 Int)

(declare-const failbio1 Int)

(declare-const ok Bool)

(declare-const result map__ref)

(declare-const data4 (Array Int character))

(declare-const result1 map__ref)

(declare-const result__4 (Array Int character))

(declare-const result2 map__ref)

(declare-const result__5 (Array Int character))

(declare-const result3 map__ref)

(declare-const c249b1 (Array Int character))

(declare-const consoleok Bool)

(declare-const result4 bool__ref)

(declare-const ok1 Bool)

(declare-const result5 map__ref)

(declare-const data5 (Array Int character))

(declare-const result6 map__ref)

(declare-const result__6 (Array Int character))

(declare-const result7 map__ref)

(declare-const result__7 (Array Int character))

(declare-const result8 map__ref)

(declare-const c260b1 (Array Int character))

(declare-const consoleok1 Bool)

(declare-const result9 bool__ref)

(declare-const ok2 Bool)

(declare-const result10 map__ref)

(declare-const data6 (Array Int character))

(declare-const result11 map__ref)

(declare-const result__8 (Array Int character))

(declare-const result12 map__ref)

(declare-const result__9 (Array Int character))

(declare-const result13 map__ref)

(declare-const c271b1 (Array Int character))

(declare-const consoleok2 Bool)

(declare-const result14 bool__ref)

(declare-const ok3 Bool)

(declare-const result15 map__ref)

(declare-const data7 (Array Int character))

(declare-const result16 map__ref)

(declare-const result__10 (Array Int character))

;; H
  (assert (=> (<= 0 2147483647) (in_range4 successentry)))

;; H
  (assert (=> (<= 0 2147483647) (in_range4 failentry)))

;; H
  (assert (=> (<= 0 2147483647) (in_range4 successbio)))

;; H
  (assert (=> (<= 0 2147483647) (in_range4 failbio)))

;; H
  (assert
  (=> (= currentstats__split_fields true)
  (not
  (= (bool_eq2
     (mk___rep
     (mk___split_fields currentstats__split_fields1
     currentstats__split_fields2 currentstats__split_fields3
     currentstats__split_fields4)) thestats) true))))

;; H
  (assert
  (and
  (and (and (in_range4 successentry1) (in_range4 failentry1)) (in_range4
  successbio1)) (in_range4 failbio1)))

;; H
  (assert (= successentry1 c248b))

;; H
  (assert (in_range4 c248b))

;; H
  (assert (= result (mk_map__ref data)))

;; H
  (assert (= data4 (elts (to_string (attr__ATTRIBUTE_IMAGE4 c248b)))))

;; H
  (assert
  (= (to_rep1 data__first) (to_rep1
                           (first
                           (rt (to_string (attr__ATTRIBUTE_IMAGE4 c248b)))))))

;; H
  (assert
  (= (to_rep1 data__last) (to_rep1
                          (last
                          (rt (to_string (attr__ATTRIBUTE_IMAGE4 c248b)))))))

;; H
  (assert (dynamic_property 1 2147483647 (to_rep1 data__first)
  (to_rep1 data__last)))

;; H
  (assert (= result1 (mk_map__ref result__)))

;; H
  (assert
  (= result__4 (screen__writestatsdata__B251b__result__aggregate_def 32)))

;; H
  (assert
  (=> (<= 2 (to_rep1 data__last))
  (and (and (<= (to_rep1 data__first) 2) (<= 2 (to_rep1 data__last)))
  (and (<= (to_rep1 data__first) (to_rep1 data__last))
  (<= (to_rep1 data__last) (to_rep1 data__last))))))

;; H
  (assert (= o data4))

;; H
  (assert (= temp___1401 (mk___t2 o (mk2 2 (to_rep1 data__last)))))

;; H
  (assert
  (= (ite (<= (to_rep1 (first4 (rt2 temp___1401))) (to_rep1
                                                   (last4 (rt2 temp___1401))))
     (+ (- (to_rep1 (last4 (rt2 temp___1401))) (to_rep1
                                               (first4 (rt2 temp___1401)))) 1)
     0) (ite (<= 1 (- (to_rep1 data__last) 1))
        (+ (- (- (to_rep1 data__last) 1) 1) 1) 0)))

;; H
  (assert
  (= temp___1402 (mk___t1
                 (slide (elts2 temp___1401)
                 (to_rep1 (first4 (rt2 temp___1401))) 1)
                 (mk1 1 (- (to_rep1 data__last) 1)))))

;; H
  (assert
  (and (= temp___1404 (- (to_rep1 data__last) 1)) (in_range1
  (- (to_rep1 data__last) 1))))

;; H
  (assert
  (=> (<= 1 temp___1404)
  (and (and (<= 1 1) (<= 1 10)) (and (<= 1 temp___1404) (<= temp___1404 10)))))

;; H
  (assert (= o1 result__4))

;; H
  (assert (= temp___1405 (mk___t1 o1 (mk1 1 temp___1404))))

;; H
  (assert
  (= (ite (<= (to_rep1 (first2 (rt1 temp___1402))) (to_rep1
                                                   (last2 (rt1 temp___1402))))
     (+ (- (to_rep1 (last2 (rt1 temp___1402))) (to_rep1
                                               (first2 (rt1 temp___1402)))) 1)
     0) (ite (<= (to_rep1 (first2 (rt1 temp___1405))) (to_rep1
                                                      (last2
                                                      (rt1 temp___1405))))
        (+ (- (to_rep1 (last2 (rt1 temp___1405))) (to_rep1
                                                  (first2 (rt1 temp___1405)))) 1)
        0)))

;; H
  (assert (= temp___1406 temp___1402))

;; H
  (assert
  (forall ((temp___1407 Int))
  (ite (and (<= 1 temp___1407) (<= temp___1407 (- (to_rep1 data__last) 1)))
  (= (select o2 temp___1407) (select (elts1 temp___1406) temp___1407))
  (= (select o2 temp___1407) (select result__4 temp___1407)))))

;; H
  (assert (= result2 (mk_map__ref result__4)))

;; H
  (assert (= result__5 o2))

;; H
  (assert (= result3 (mk_map__ref c249b)))

;; H
  (assert (= c249b1 result__5))

;; H
  (assert (= (to_rep4 o3) 26))

;; H
  (assert (= (to_rep3 o4) 50))

;; H
  (assert (= o5 (mk___split_fields2 o4 o3)))

;; H
  (assert (= o6 (mk___rep2 o5)))

;; H
  (assert (= result4 (mk_bool__ref ok)))

;; H
  (assert (= ok1 (ite (= ok true) consoleok false)))

;; H
  (assert (= failentry1 c259b))

;; H
  (assert (in_range4 c259b))

;; H
  (assert (= result5 (mk_map__ref data1)))

;; H
  (assert (= data5 (elts (to_string (attr__ATTRIBUTE_IMAGE4 c259b)))))

;; H
  (assert
  (= (to_rep1 data__first1) (to_rep1
                            (first
                            (rt (to_string (attr__ATTRIBUTE_IMAGE4 c259b)))))))

;; H
  (assert
  (= (to_rep1 data__last1) (to_rep1
                           (last
                           (rt (to_string (attr__ATTRIBUTE_IMAGE4 c259b)))))))

;; H
  (assert (dynamic_property 1 2147483647 (to_rep1 data__first1)
  (to_rep1 data__last1)))

;; H
  (assert (= result6 (mk_map__ref result__1)))

;; H
  (assert
  (= result__6 (screen__writestatsdata__B262b__result__aggregate_def 32)))

;; H
  (assert
  (=> (<= 2 (to_rep1 data__last1))
  (and (and (<= (to_rep1 data__first1) 2) (<= 2 (to_rep1 data__last1)))
  (and (<= (to_rep1 data__first1) (to_rep1 data__last1))
  (<= (to_rep1 data__last1) (to_rep1 data__last1))))))

;; H
  (assert (= o7 data5))

;; H
  (assert (= temp___1414 (mk___t4 o7 (mk4 2 (to_rep1 data__last1)))))

;; H
  (assert
  (= (ite (<= (to_rep1 (first8 (rt4 temp___1414))) (to_rep1
                                                   (last8 (rt4 temp___1414))))
     (+ (- (to_rep1 (last8 (rt4 temp___1414))) (to_rep1
                                               (first8 (rt4 temp___1414)))) 1)
     0) (ite (<= 1 (- (to_rep1 data__last1) 1))
        (+ (- (- (to_rep1 data__last1) 1) 1) 1) 0)))

;; H
  (assert
  (= temp___1415 (mk___t3
                 (slide (elts4 temp___1414)
                 (to_rep1 (first8 (rt4 temp___1414))) 1)
                 (mk3 1 (- (to_rep1 data__last1) 1)))))

;; H
  (assert
  (and (= temp___1417 (- (to_rep1 data__last1) 1)) (in_range1
  (- (to_rep1 data__last1) 1))))

;; H
  (assert
  (=> (<= 1 temp___1417)
  (and (and (<= 1 1) (<= 1 10)) (and (<= 1 temp___1417) (<= temp___1417 10)))))

;; H
  (assert (= o8 result__6))

;; H
  (assert (= temp___1418 (mk___t3 o8 (mk3 1 temp___1417))))

;; H
  (assert
  (= (ite (<= (to_rep1 (first6 (rt3 temp___1415))) (to_rep1
                                                   (last6 (rt3 temp___1415))))
     (+ (- (to_rep1 (last6 (rt3 temp___1415))) (to_rep1
                                               (first6 (rt3 temp___1415)))) 1)
     0) (ite (<= (to_rep1 (first6 (rt3 temp___1418))) (to_rep1
                                                      (last6
                                                      (rt3 temp___1418))))
        (+ (- (to_rep1 (last6 (rt3 temp___1418))) (to_rep1
                                                  (first6 (rt3 temp___1418)))) 1)
        0)))

;; H
  (assert (= temp___1419 temp___1415))

;; H
  (assert
  (forall ((temp___1420 Int))
  (ite (and (<= 1 temp___1420) (<= temp___1420 (- (to_rep1 data__last1) 1)))
  (= (select o9 temp___1420) (select (elts3 temp___1419) temp___1420))
  (= (select o9 temp___1420) (select result__6 temp___1420)))))

;; H
  (assert (= result7 (mk_map__ref result__6)))

;; H
  (assert (= result__7 o9))

;; H
  (assert (= result8 (mk_map__ref c260b)))

;; H
  (assert (= c260b1 result__7))

;; H
  (assert (= (to_rep4 o10) 26))

;; H
  (assert (= (to_rep3 o11) 65))

;; H
  (assert (= o12 (mk___split_fields2 o11 o10)))

;; H
  (assert (= o13 (mk___rep2 o12)))

;; H
  (assert (= result9 (mk_bool__ref ok1)))

;; H
  (assert (= ok2 (ite (= ok1 true) consoleok1 false)))

;; H
  (assert (= successbio1 c270b))

;; H
  (assert (in_range4 c270b))

;; H
  (assert (= result10 (mk_map__ref data2)))

;; H
  (assert (= data6 (elts (to_string (attr__ATTRIBUTE_IMAGE4 c270b)))))

;; H
  (assert
  (= (to_rep1 data__first2) (to_rep1
                            (first
                            (rt (to_string (attr__ATTRIBUTE_IMAGE4 c270b)))))))

;; H
  (assert
  (= (to_rep1 data__last2) (to_rep1
                           (last
                           (rt (to_string (attr__ATTRIBUTE_IMAGE4 c270b)))))))

;; H
  (assert (dynamic_property 1 2147483647 (to_rep1 data__first2)
  (to_rep1 data__last2)))

;; H
  (assert (= result11 (mk_map__ref result__2)))

;; H
  (assert
  (= result__8 (screen__writestatsdata__B273b__result__aggregate_def 32)))

;; H
  (assert
  (=> (<= 2 (to_rep1 data__last2))
  (and (and (<= (to_rep1 data__first2) 2) (<= 2 (to_rep1 data__last2)))
  (and (<= (to_rep1 data__first2) (to_rep1 data__last2))
  (<= (to_rep1 data__last2) (to_rep1 data__last2))))))

;; H
  (assert (= o14 data6))

;; H
  (assert (= temp___1427 (mk___t6 o14 (mk6 2 (to_rep1 data__last2)))))

;; H
  (assert
  (= (ite (<= (to_rep1 (first12 (rt6 temp___1427))) (to_rep1
                                                    (last12
                                                    (rt6 temp___1427))))
     (+ (- (to_rep1 (last12 (rt6 temp___1427))) (to_rep1
                                                (first12 (rt6 temp___1427)))) 1)
     0) (ite (<= 1 (- (to_rep1 data__last2) 1))
        (+ (- (- (to_rep1 data__last2) 1) 1) 1) 0)))

;; H
  (assert
  (= temp___1428 (mk___t5
                 (slide (elts6 temp___1427)
                 (to_rep1 (first12 (rt6 temp___1427))) 1)
                 (mk5 1 (- (to_rep1 data__last2) 1)))))

;; H
  (assert
  (and (= temp___1430 (- (to_rep1 data__last2) 1)) (in_range1
  (- (to_rep1 data__last2) 1))))

;; H
  (assert
  (=> (<= 1 temp___1430)
  (and (and (<= 1 1) (<= 1 10)) (and (<= 1 temp___1430) (<= temp___1430 10)))))

;; H
  (assert (= o15 result__8))

;; H
  (assert (= temp___1431 (mk___t5 o15 (mk5 1 temp___1430))))

;; H
  (assert
  (= (ite (<= (to_rep1 (first10 (rt5 temp___1428))) (to_rep1
                                                    (last10
                                                    (rt5 temp___1428))))
     (+ (- (to_rep1 (last10 (rt5 temp___1428))) (to_rep1
                                                (first10 (rt5 temp___1428)))) 1)
     0) (ite (<= (to_rep1 (first10 (rt5 temp___1431))) (to_rep1
                                                       (last10
                                                       (rt5 temp___1431))))
        (+ (- (to_rep1 (last10 (rt5 temp___1431))) (to_rep1
                                                   (first10
                                                   (rt5 temp___1431)))) 1)
        0)))

;; H
  (assert (= temp___1432 temp___1428))

;; H
  (assert
  (forall ((temp___1433 Int))
  (ite (and (<= 1 temp___1433) (<= temp___1433 (- (to_rep1 data__last2) 1)))
  (= (select o16 temp___1433) (select (elts5 temp___1432) temp___1433))
  (= (select o16 temp___1433) (select result__8 temp___1433)))))

;; H
  (assert (= result12 (mk_map__ref result__8)))

;; H
  (assert (= result__9 o16))

;; H
  (assert (= result13 (mk_map__ref c271b)))

;; H
  (assert (= c271b1 result__9))

;; H
  (assert (= (to_rep4 o17) 25))

;; H
  (assert (= (to_rep3 o18) 50))

;; H
  (assert (= o19 (mk___split_fields2 o18 o17)))

;; H
  (assert (= o20 (mk___rep2 o19)))

;; H
  (assert (= result14 (mk_bool__ref ok2)))

;; H
  (assert (= ok3 (ite (= ok2 true) consoleok2 false)))

;; H
  (assert (= failbio1 c281b))

;; H
  (assert (in_range4 c281b))

;; H
  (assert (= result15 (mk_map__ref data3)))

;; H
  (assert (= data7 (elts (to_string (attr__ATTRIBUTE_IMAGE4 c281b)))))

;; H
  (assert
  (= (to_rep1 data__first3) (to_rep1
                            (first
                            (rt (to_string (attr__ATTRIBUTE_IMAGE4 c281b)))))))

;; H
  (assert
  (= (to_rep1 data__last3) (to_rep1
                           (last
                           (rt (to_string (attr__ATTRIBUTE_IMAGE4 c281b)))))))

;; H
  (assert (dynamic_property 1 2147483647 (to_rep1 data__first3)
  (to_rep1 data__last3)))

;; H
  (assert (= result16 result__3))

;; H
  (assert
  (= (let ((subject result__3)) result__10) (screen__writestatsdata__B284b__result__aggregate_def
                                            32)))

;; H
  (assert
  (=> (<= 2 (to_rep1 data__last3))
  (and (and (<= (to_rep1 data__first3) 2) (<= 2 (to_rep1 data__last3)))
  (and (<= (to_rep1 data__first3) (to_rep1 data__last3))
  (<= (to_rep1 data__last3) (to_rep1 data__last3))))))

;; H
  (assert (= o21 data7))

;; H
  (assert (= temp___1440 (mk___t8 o21 (mk8 2 (to_rep1 data__last3)))))

;; H
  (assert
  (= (ite (<= (to_rep1 (first16 (rt8 temp___1440))) (to_rep1
                                                    (last16
                                                    (rt8 temp___1440))))
     (+ (- (to_rep1 (last16 (rt8 temp___1440))) (to_rep1
                                                (first16 (rt8 temp___1440)))) 1)
     0) (ite (<= 1 (- (to_rep1 data__last3) 1))
        (+ (- (- (to_rep1 data__last3) 1) 1) 1) 0)))

;; H
  (assert
  (= temp___1441 (mk___t7
                 (slide (elts8 temp___1440)
                 (to_rep1 (first16 (rt8 temp___1440))) 1)
                 (mk7 1 (- (to_rep1 data__last3) 1)))))

;; H
  (assert
  (and (= temp___1443 (- (to_rep1 data__last3) 1)) (in_range1
  (- (to_rep1 data__last3) 1))))

;; H
  (assert (<= 1 temp___1443))

(assert
;; WP_parameter_def
 ;; File "screen.adb", line 712, characters 0-0
  (not (<= 1 1)))
(check-sat)
(exit)
