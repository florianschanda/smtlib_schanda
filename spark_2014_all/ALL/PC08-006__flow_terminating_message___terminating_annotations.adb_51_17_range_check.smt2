;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort natural 0)

(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (natural natural) Bool)

(declare-const dummy natural)

(declare-datatypes ((natural__ref 0))
(((mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool)
  (temp___skip_constant_31 Bool)
  (temp___do_toplevel_32 Bool)) Bool (=>
                                     (or (= temp___is_init_30 true)
                                     (<= 0 2147483647)) (in_range1
                                     temp___expr_33)))

(declare-fun f_rec (Int) Int)

(declare-fun f_rec__function_guard (Int Int) Bool)

(declare-fun f_while (Int) Int)

(declare-fun f_while__function_guard (Int Int) Bool)

;; f_while__post_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant x true true true) (dynamic_invariant (f_while x)
     true false true)) :pattern ((f_while x)) )))

(declare-fun f_not_spark (Int) Int)

(declare-fun f_not_spark__function_guard (Int Int) Bool)

;; f_not_spark__post_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant x true true true) (dynamic_invariant
     (f_not_spark x) true false true)) :pattern ((f_not_spark x)) )))

(declare-fun f_call (Int) Int)

(declare-fun f_call__function_guard (Int Int) Bool)

;; f_call__post_axiom
  (assert
  (forall ((x Int))
  (! (=> (dynamic_invariant x true true true) (dynamic_invariant (f_call x)
     true false true)) :pattern ((f_call x)) )))

(declare-const x Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const y Int)

(declare-const o Int)

(declare-const o1 Int)

(declare-const o2 Int)

(declare-const o3 Int)

(declare-const result Int)

(declare-const y1 Int)

(declare-const result1 Int)

(declare-const y2 Int)

(declare-const result2 Int)

(declare-const y3 Int)

(declare-const result3 Int)

(declare-const y4 Int)

(declare-const result4 Int)

(declare-const y5 Int)

(declare-const y6 Int)

(declare-const temp___134 Int)

(declare-const result5 Int)

(declare-const temp___1341 Int)

;; H
  (assert (in_range1 x))

;; H
  (assert (= result y))

;; H
  (assert (= y1 x))

;; H
  (assert (in_range1 y1))

;; H
  (assert (and (= o (f_rec y1)) (in_range1 o)))

;; H
  (assert (= result1 y1))

;; H
  (assert (= y2 o))

;; H
  (assert (and (= o1 (f_while y2)) (in_range1 o1)))

;; H
  (assert (= result2 y2))

;; H
  (assert (= y3 o1))

;; H
  (assert (and (= o2 (f_not_spark y3)) (in_range1 o2)))

;; H
  (assert (= result3 y3))

;; H
  (assert (= y4 o2))

;; H
  (assert (and (= o3 (f_call y4)) (in_range1 o3)))

;; H
  (assert (= result4 y4))

;; H
  (assert (= y5 o3))

;; H
  (assert (< 0 y5))

;; H
  (assert (and (=> (<= 0 2147483647) (in_range1 y6)) (< 0 y6)))

;; H
  (assert (= result5 temp___134))

;; H
  (assert (= temp___1341 y6))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (in_range1 (- y6 1))))
(check-sat)
(exit)
