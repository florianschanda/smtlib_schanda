;; produced by z3_gnatprove.drv ;;
(set-info :smt-lib-version 2.5)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
(set-option :smt.mbqi false)
(set-option :smt.macro-finder true)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun nth ((_ BitVec 64) Int) Bool)

(declare-fun lsr ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun asr ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun lsl ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun rotate_right1 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun rotate_left1 ((_ BitVec 64) Int) (_ BitVec 64))

(declare-fun pow2 (Int) Int)

(declare-fun to_int1 ((_ BitVec 64)) Int)

(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i)
                                         (<= i 18446744073709551615)))

(declare-fun nth_bv ((_ BitVec 64) (_ BitVec 64)) Bool)

(declare-fun eq_sub_bv ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)
  (_ BitVec 64)) Bool)

(define-fun eq_sub ((a (_ BitVec 64)) (b (_ BitVec 64)) (i Int)
  (n Int)) Bool (forall ((j Int))
                (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))

(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 64))))))
(declare-fun power ((_ BitVec 64) Int) (_ BitVec 64))

(define-fun bv_min ((x (_ BitVec 64))
  (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) x y))

(define-fun bv_max ((x (_ BitVec 64))
  (y (_ BitVec 64))) (_ BitVec 64) (ite (bvule x y) y x))

(define-fun to_int2 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort unsigned64 0)

(declare-fun attr__ATTRIBUTE_MODULUS () (_ BitVec 64))

(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 64)) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 64))

(declare-fun user_eq (unsigned64 unsigned64) Bool)

(declare-fun dummy () unsigned64)

(declare-datatypes ()
((unsigned64__ref (mk_unsigned64__ref (unsigned64__content unsigned64)))))
(define-fun unsigned64__ref___projection ((a unsigned64__ref)) unsigned64
  (unsigned64__content a))

(define-fun dynamic_invariant ((temp___expr_201 (_ BitVec 64))
  (temp___is_init_198 Bool) (temp___skip_constant_199 Bool)
  (temp___do_toplevel_200 Bool)) Bool true)

(declare-fun var () (_ BitVec 64))

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun bottom () (_ BitVec 64))

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun range_size () (_ BitVec 64))

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun matched () Bool)

(declare-fun i () (_ BitVec 64))

(declare-fun inrange1__inrange64__result () Bool)

(declare-fun temp___205 () (_ BitVec 64))

(declare-fun temp___204 () Bool)

(declare-fun temp___206 () (_ BitVec 64))

(declare-fun result () Bool)

(declare-fun matched1 () Bool)

(declare-fun result1 () (_ BitVec 64))

(declare-fun i1 () (_ BitVec 64))

(declare-fun matched2 () Bool)

(declare-fun i2 () (_ BitVec 64))

(declare-fun temp___2061 () (_ BitVec 64))

(declare-fun result2 () (_ BitVec 64))

(declare-fun temp___2062 () (_ BitVec 64))

(declare-fun result3 () Bool)

(declare-fun matched3 () Bool)

(declare-fun result4 () (_ BitVec 64))

(declare-fun i3 () (_ BitVec 64))

(declare-fun matched4 () Bool)

(declare-fun i4 () (_ BitVec 64))

(declare-fun matched5 () Bool)

(declare-fun i5 () (_ BitVec 64))

(declare-fun matched6 () Bool)

(declare-fun i6 () (_ BitVec 64))

(declare-fun matched7 () Bool)

(declare-fun i7 () (_ BitVec 64))

(declare-fun matched8 () Bool)

(declare-fun i8 () (_ BitVec 64))

(declare-fun matched9 () Bool)

(declare-fun i9 () (_ BitVec 64))

(declare-fun result5 () Bool)

(declare-fun inrange1__inrange64__result1 () Bool)

(declare-fun inrange1__inrange64__result2 () Bool)

(declare-fun inrange1__inrange64__result3 () Bool)

(declare-fun matched10 () Bool)

(declare-fun i10 () t__ref)

(declare-fun inrange1__inrange64__result4 () bool__ref)

(declare-fun matched11 () Bool)

(declare-fun i11 () (_ BitVec 64))

(declare-fun inrange1__inrange64__result5 () Bool)

(define-fun matched12 () bool__ref (mk_bool__ref matched10))

(define-fun inrange1__inrange64__result6 () bool__ref (mk_bool__ref
                                                      inrange1__inrange64__result2))

(define-fun result6 () bool__ref (mk_bool__ref result5))

(define-fun i12 () t__ref (mk_t__ref i8))

(define-fun matched13 () bool__ref (mk_bool__ref matched8))

(define-fun i13 () t__ref (mk_t__ref i6))

(define-fun matched14 () bool__ref (mk_bool__ref matched6))

(define-fun i14 () t__ref (mk_t__ref i4))

(define-fun matched15 () bool__ref (mk_bool__ref matched4))

(define-fun result7 () t__ref (mk_t__ref result1))

(define-fun result8 () bool__ref (mk_bool__ref result))

(define-fun inrange1__inrange64__result7 () bool__ref (mk_bool__ref
                                                      inrange1__inrange64__result))

(define-fun i15 () t__ref (mk_t__ref i))

(define-fun matched16 () bool__ref (mk_bool__ref matched))

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert true)

;; H
  (assert
  (and (bvuge range_size ((_ int2bv 64) 2))
  (bvule range_size ((_ int2bv 64) 65535))))

;; H
  (assert (= result8 matched16))

;; H
  (assert (= matched1 (of_int 0)))

;; H
  (assert (= result7 i15))

;; H
  (assert (= i1 ((_ int2bv 64) 0)))

;; H
  (assert true)

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true))) (= temp___205 i1)))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true)))
  (= temp___204 matched1)))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true)))
  (= ((_ int2bv 64) 0) temp___206)))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true)))
  (= (= matched2 true)
  (and (bvugt i2 ((_ int2bv 64) 0))
  (exists ((n (_ BitVec 64)))
  (and
  (and (bvule ((_ int2bv 64) 0) n) (bvule n (bvsub i2 ((_ int2bv 64) 1))))
  (= var (bvadd bottom n))))))))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true)))
  (not (= matched2 true))))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true)))
  (and (bvult i2 range_size) (not (= matched2 true)))))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true)))
  (= temp___2061 result2)))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true))) (= temp___2062 i2)))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true)))
  (or
  (and
  (and (and (= i2 i4) (= matched3 matched4))
  (and (= i5 i2) (= matched5 matched3)))
  (and (= var (bvadd bottom i2))
  (and (= matched2 result3) (= matched3 (of_int 1)))))
  (and (and (not (= var (bvadd bottom i2))) (= matched3 matched2))
  (and
  (and (and (= i3 i4) (= matched3 matched4))
  (and (= i5 i3) (= matched5 matched3)))
  (and (and (= i2 result4) (= i3 (bvadd i2 ((_ int2bv 64) 1))))
  (not (and (bvult i3 range_size) (not (= matched3 true))))))))))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true))) (= i13 i14)))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true)))
  (= matched14 matched15)))

;; H
  (assert (=> (and (bvult i1 range_size) (not (= matched1 true))) (= i7 i5)))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true)))
  (= matched7 matched5)))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true))) (= i12 i13)))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true)))
  (= matched13 matched14)))

;; H
  (assert (=> (and (bvult i1 range_size) (not (= matched1 true))) (= i9 i7)))

;; H
  (assert
  (=> (and (bvult i1 range_size) (not (= matched1 true)))
  (= matched9 matched7)))

;; H
  (assert
  (=> (not (and (bvult i1 range_size) (not (= matched1 true)))) (= i1 i8)))

;; H
  (assert
  (=> (not (and (bvult i1 range_size) (not (= matched1 true))))
  (= matched1 matched8)))

;; H
  (assert
  (=> (not (and (bvult i1 range_size) (not (= matched1 true)))) (= i9 i1)))

;; H
  (assert
  (=> (not (and (bvult i1 range_size) (not (= matched1 true))))
  (= matched9 matched1)))

;; H
  (assert (= inrange1__inrange64__result1 inrange1__inrange64__result2))

;; H
  (assert (= inrange1__inrange64__result3 inrange1__inrange64__result1))

;; H
  (assert (= result6 inrange1__inrange64__result7))

;; H
  (assert (= inrange1__inrange64__result1 matched8))

;; H
  (assert (= inrange1__inrange64__result4 inrange1__inrange64__result6))

;; H
  (assert (= i10 i12))

;; H
  (assert (= matched12 matched13))

;; H
  (assert (= inrange1__inrange64__result5 inrange1__inrange64__result3))

;; H
  (assert (= i11 i9))

;; H
  (assert (= matched11 matched9))

;; H
  (assert (bvule ((_ int2bv 64) 0) (bvsub range_size ((_ int2bv 64) 1))))

(assert
;; WP_parameter_def
 ;; File "inrange1.ads", line 15, characters 0-0
  (not (bvuge ((_ int2bv 64) 0) ((_ int2bv 64) 0))))
(check-sat)
(exit)
