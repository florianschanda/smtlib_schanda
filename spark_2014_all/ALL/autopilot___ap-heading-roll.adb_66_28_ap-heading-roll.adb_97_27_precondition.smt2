;; produced by cvc4_14.drv ;;
(set-info :smt-lib-version 2.5)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-fun us_null_ext__ () us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ()
((us_type_of_heap__ref
 (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes ()
((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-fun div1 (Int Int) Int)

(declare-fun mod1 (Int Int) Int)

;; Div_mod
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))

;; Div_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))

;; Mod_bound
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (and (< (- (abs y)) (mod1 x y)) (< (mod1 x y) (abs y))))))

;; Div_sign_pos
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))

;; Div_sign_neg
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))

;; Mod_sign_pos
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))

;; Mod_sign_neg
  (assert
  (forall ((x Int) (y Int))
  (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))

;; Rounds_toward_zero
  (assert
  (forall ((x Int) (y Int))
  (=> (not (= y 0)) (<= (abs (* (div1 x y) y)) (abs x)))))

;; Div_1
  (assert (forall ((x Int)) (= (div1 x 1) x)))

;; Mod_1
  (assert (forall ((x Int)) (= (mod1 x 1) 0)))

;; Div_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))

;; Mod_inf
  (assert
  (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))

;; Div_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1
                                                            (+ (* x y) z) x)) )))

;; Mod_mult
  (assert
  (forall ((x Int) (y Int) (z Int))
  (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z)))
     (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)) )))

(define-fun mod2 ((x Int)
  (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))

(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))

(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))

(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))

(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)

(declare-sort bankangle 0)

(define-fun in_range1 ((x Int)) Bool (and (<= (- 45) x) (<= x 45)))

(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)

(declare-fun user_eq (bankangle bankangle) Bool)

(declare-fun dummy () bankangle)

(declare-datatypes ()
((bankangle__ref (mk_bankangle__ref (bankangle__content bankangle)))))
(define-fun bankangle__ref___projection ((a bankangle__ref)) bankangle
  (bankangle__content a))

(define-fun dynamic_invariant ((temp___expr_141 Int)
  (temp___is_init_138 Bool) (temp___skip_constant_139 Bool)
  (temp___do_toplevel_140 Bool)) Bool (=>
                                      (or (= temp___is_init_138 true)
                                      (<= (- 45) 45)) (in_range1
                                      temp___expr_141)))

(declare-sort headdegree 0)

(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 359)))

(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)

(declare-fun user_eq1 (headdegree headdegree) Bool)

(declare-fun dummy1 () headdegree)

(declare-datatypes ()
((headdegree__ref (mk_headdegree__ref (headdegree__content headdegree)))))
(define-fun headdegree__ref___projection ((a headdegree__ref)) headdegree
  (headdegree__content a))

(define-fun dynamic_invariant1 ((temp___expr_147 Int)
  (temp___is_init_144 Bool) (temp___skip_constant_145 Bool)
  (temp___do_toplevel_146 Bool)) Bool (=>
                                      (or (= temp___is_init_144 true)
                                      (<= 0 359)) (in_range2
                                      temp___expr_147)))

(declare-sort machnumber 0)

(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)

(declare-fun user_eq2 (machnumber machnumber) Bool)

(declare-fun dummy2 () machnumber)

(declare-datatypes ()
((machnumber__ref (mk_machnumber__ref (machnumber__content machnumber)))))
(define-fun machnumber__ref___projection ((a machnumber__ref)) machnumber
  (machnumber__content a))

(define-fun dynamic_invariant2 ((temp___expr_159 Int)
  (temp___is_init_156 Bool) (temp___skip_constant_157 Bool)
  (temp___do_toplevel_158 Bool)) Bool (=>
                                      (or (= temp___is_init_156 true)
                                      (<= 0 100)) (in_range3
                                      temp___expr_159)))

(declare-sort controlangle 0)

(define-fun in_range4 ((x Int)) Bool (and (<= (- 45) x) (<= x 45)))

(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)

(declare-fun user_eq3 (controlangle controlangle) Bool)

(declare-fun dummy3 () controlangle)

(declare-datatypes ()
((controlangle__ref
 (mk_controlangle__ref (controlangle__content controlangle)))))
(define-fun controlangle__ref___projection ((a controlangle__ref)) controlangle
  (controlangle__content a))

(define-fun dynamic_invariant3 ((temp___expr_183 Int)
  (temp___is_init_180 Bool) (temp___skip_constant_181 Bool)
  (temp___do_toplevel_182 Bool)) Bool (=>
                                      (or (= temp___is_init_180 true)
                                      (<= (- 45) 45)) (in_range4
                                      temp___expr_183)))

(declare-sort scaledata 0)

(define-fun in_range5 ((x Int)) Bool (and (<= (- 100) x) (<= x 100)))

(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)

(declare-fun user_eq4 (scaledata scaledata) Bool)

(declare-fun dummy4 () scaledata)

(declare-datatypes ()
((scaledata__ref (mk_scaledata__ref (scaledata__content scaledata)))))
(define-fun scaledata__ref___projection ((a scaledata__ref)) scaledata
  (scaledata__content a))

(define-fun dynamic_invariant4 ((temp___expr_189 Int)
  (temp___is_init_186 Bool) (temp___skip_constant_187 Bool)
  (temp___do_toplevel_188 Bool)) Bool (=>
                                      (or (= temp___is_init_186 true)
                                      (<= (- 100) 100)) (in_range5
                                      temp___expr_189)))

(declare-fun scale_movement (Int Int Int Int) Int)

(declare-fun scale_movement__function_guard (Int Int Int Int Int) Bool)

;; scale_movement__post_axiom
  (assert
  (forall ((mach Int) (present Int) (target Int) (max Int))
  (! (=>
     (and
     (and
     (and
     (and (dynamic_invariant2 mach true true true) (dynamic_invariant4
     present true true true)) (dynamic_invariant4 target true true true))
     (dynamic_invariant3 max true true true)) (< 0 max))
     (let ((result (scale_movement mach present target max)))
     (and (and (<= (- max) result) (<= result max)) (dynamic_invariant3
     result true false true)))) :pattern ((scale_movement mach present target
                                          max)) )))

(declare-fun heading_offset (Int Int) Int)

(declare-fun heading_offset__function_guard (Int Int Int) Bool)

;; heading_offset__post_axiom
  (assert
  (forall ((present Int) (target Int))
  (! (=>
     (and (dynamic_invariant1 present true true true) (dynamic_invariant1
     target true true true)) (dynamic_invariant1
     (heading_offset present target) true false true)) :pattern ((heading_offset
                                                                 present
                                                                 target)) )))

(declare-fun mach () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS () Int)

(declare-fun present_heading () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS1 () Int)

(declare-fun target_heading () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS2 () Int)

(declare-fun bank () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS3 () Int)

(declare-sort degreespersec 0)

(define-fun in_range6 ((x Int)) Bool (and (<= (- 180) x) (<= x 180)))

(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)

(declare-fun user_eq5 (degreespersec degreespersec) Bool)

(declare-fun dummy5 () degreespersec)

(declare-datatypes ()
((degreespersec__ref
 (mk_degreespersec__ref (degreespersec__content degreespersec)))))
(define-fun degreespersec__ref___projection ((a degreespersec__ref)) degreespersec
  (degreespersec__content a))

(define-fun dynamic_invariant5 ((temp___expr_177 Int)
  (temp___is_init_174 Bool) (temp___skip_constant_175 Bool)
  (temp___do_toplevel_176 Bool)) Bool (=>
                                      (or (= temp___is_init_174 true)
                                      (<= (- 180) 180)) (in_range6
                                      temp___expr_177)))

(declare-sort degreespersec1 0)

(define-fun in_range7 ((x Int)) Bool (and (<= (- 180) x) (<= x 180)))

(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)

(declare-fun user_eq6 (degreespersec1 degreespersec1) Bool)

(declare-fun dummy6 () degreespersec1)

(declare-datatypes ()
((degreespersec__ref1
 (mk_degreespersec__ref1 (degreespersec__content1 degreespersec1)))))
(define-fun degreespersec__ref_2__projection ((a degreespersec__ref1)) degreespersec1
  (degreespersec__content1 a))

(define-fun dynamic_invariant6 ((temp___expr_201 Int)
  (temp___is_init_198 Bool) (temp___skip_constant_199 Bool)
  (temp___do_toplevel_200 Bool)) Bool (=>
                                      (or (= temp___is_init_198 true)
                                      (<= (- 180) 180)) (in_range7
                                      temp___expr_201)))

(declare-fun attr__ATTRIBUTE_ADDRESS4 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS5 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS6 () Int)

(declare-fun c11b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS7 () Int)

(declare-fun c12b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS8 () Int)

(declare-fun c13b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS9 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS10 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS11 () Int)

(declare-fun c16b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS12 () Int)

(declare-fun c17b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS13 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS14 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS15 () Int)

(declare-fun c20b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS16 () Int)

(declare-fun c21b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS17 () Int)

(declare-fun c22b () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS18 () Int)

(declare-fun attr__ATTRIBUTE_ADDRESS19 () Int)

(declare-fun present_rollrate () Int)

(declare-fun target_rollrate () Int)

(declare-fun aileron_movement () Int)

(declare-fun target_bank () Int)

(declare-fun result__ () Int)

(declare-fun result__1 () Int)

(declare-fun offset () Int)

(declare-fun target_angle () Int)

(declare-fun o () Int)

(declare-fun o1 () Int)

(declare-fun o2 () Int)

(declare-fun ap__heading__roll__rate__calc_rollrate__present_rollrate () Int)

(declare-fun result () Int)

(declare-fun present_rollrate1 () Int)

(declare-fun result1 () Int)

(declare-fun offset1 () Int)

(declare-fun result2 () Int)

(declare-fun result__2 () Int)

(declare-fun result3 () Int)

(declare-fun result__3 () Int)

(declare-fun result4 () Int)

(declare-fun result__4 () Int)

(declare-fun result5 () Int)

(declare-fun result__5 () Int)

(declare-fun result6 () Int)

(declare-fun target_bank1 () Int)

(declare-fun result7 () Int)

(declare-fun result__6 () Int)

(declare-fun result8 () Int)

(declare-fun result__7 () Int)

(declare-fun result9 () Int)

(declare-fun result__8 () Int)

(declare-fun result10 () Int)

(declare-fun target_rollrate1 () Int)

(define-fun result__9 () int__ref (mk_int__ref result__1))

;; H
  (assert (in_range3 mach))

;; H
  (assert (in_range2 present_heading))

;; H
  (assert (in_range2 target_heading))

;; H
  (assert (in_range1 bank))

;; H
  (assert (=> (<= (- 180) 180) (in_range7 present_rollrate)))

;; H
  (assert (=> (<= (- 180) 180) (in_range7 target_rollrate)))

;; H
  (assert (=> (<= (- 45) 45) (in_range4 aileron_movement)))

;; H
  (assert (in_range6
  ap__heading__roll__rate__calc_rollrate__present_rollrate))

;; H
  (assert (= result present_rollrate))

;; H
  (assert
  (= present_rollrate1 ap__heading__roll__rate__calc_rollrate__present_rollrate))

;; H
  (assert (= present_heading c11b))

;; H
  (assert (in_range2 c11b))

;; H
  (assert (= target_heading c12b))

;; H
  (assert (in_range2 c12b))

;; H
  (assert (= bank c13b))

;; H
  (assert (in_range1 c13b))

;; H
  (assert (=> (<= (- 45) 45) (in_range1 target_bank)))

;; H
  (assert (=> (<= (- 180) 180) (in_range7 result__)))

;; H
  (assert (= c11b c16b))

;; H
  (assert (in_range2 c16b))

;; H
  (assert (= c12b c17b))

;; H
  (assert (in_range2 c17b))

;; H
  (assert (=> (<= (- 45) 45) (in_range1 result__1)))

;; H
  (assert (=> (<= 0 359) (in_range2 offset)))

;; H
  (assert (and (= o (heading_offset c16b c17b)) (in_range2 o)))

;; H
  (assert (= (mk_int__ref result1) (mk_int__ref offset)))

;; H
  (assert (= offset1 o))

;; H
  (assert
  (=> (and (< 40 offset1) (<= offset1 180))
  (= (mk_int__ref result2) result__9)))

;; H
  (assert (=> (and (< 40 offset1) (<= offset1 180)) (= result__2 40)))

;; H
  (assert
  (=> (not (and (< 40 offset1) (<= offset1 180)))
  (=> (and (< 180 offset1) (< offset1 320))
  (= (mk_int__ref result3) result__9))))

;; H
  (assert
  (=> (not (and (< 40 offset1) (<= offset1 180)))
  (=> (and (< 180 offset1) (< offset1 320)) (= result__3 (- 40)))))

;; H
  (assert
  (=> (not (and (< 40 offset1) (<= offset1 180)))
  (=> (not (and (< 180 offset1) (< offset1 320)))
  (=> (<= offset1 40) (and (= o1 offset1) (in_range1 offset1))))))

;; H
  (assert
  (=> (not (and (< 40 offset1) (<= offset1 180)))
  (=> (not (and (< 180 offset1) (< offset1 320)))
  (=> (<= offset1 40) (= (mk_int__ref result4) result__9)))))

;; H
  (assert
  (=> (not (and (< 40 offset1) (<= offset1 180)))
  (=> (not (and (< 180 offset1) (< offset1 320)))
  (=> (<= offset1 40) (= result__4 o1)))))

;; H
  (assert
  (=> (not (and (< 40 offset1) (<= offset1 180)))
  (=> (not (and (< 180 offset1) (< offset1 320)))
  (=> (not (<= offset1 40))
  (and (= o2 (- 360 offset1)) (in_range1 (- 360 offset1)))))))

;; H
  (assert
  (=> (not (and (< 40 offset1) (<= offset1 180)))
  (=> (not (and (< 180 offset1) (< offset1 320)))
  (=> (not (<= offset1 40)) (= (mk_int__ref result5) result__9)))))

;; H
  (assert
  (=> (not (and (< 40 offset1) (<= offset1 180)))
  (=> (not (and (< 180 offset1) (< offset1 320)))
  (=> (not (<= offset1 40)) (= result__5 o2)))))

;; H
  (assert
  (=> (not (and (< 40 offset1) (<= offset1 180)))
  (=> (not (and (< 180 offset1) (< offset1 320)))
  (=> (not (<= offset1 40)) (= result__4 result__5)))))

;; H
  (assert
  (=> (not (and (< 40 offset1) (<= offset1 180)))
  (=> (not (and (< 180 offset1) (< offset1 320))) (= result__3 result__4))))

;; H
  (assert
  (=> (not (and (< 40 offset1) (<= offset1 180))) (= result__2 result__3)))

;; H
  (assert (= (mk_int__ref result6) (mk_int__ref target_bank)))

;; H
  (assert (= target_bank1 result__2))

;; H
  (assert (= result7 result__))

;; H
  (assert (= result__6 (div1 (- target_bank1 c13b) 5)))

;; H
  (assert (=> (< 10 result__6) (= result8 result__6)))

;; H
  (assert (=> (< 10 result__6) (= result__7 10)))

;; H
  (assert
  (=> (not (< 10 result__6)) (=> (< result__6 (- 10)) (= result9 result__6))))

;; H
  (assert
  (=> (not (< 10 result__6)) (=> (< result__6 (- 10)) (= result__8 (- 10)))))

;; H
  (assert
  (=> (not (< 10 result__6))
  (=> (not (< result__6 (- 10))) (= result__8 result__6))))

;; H
  (assert (=> (not (< 10 result__6)) (= result__7 result__8)))

;; H
  (assert (= result10 target_rollrate))

;; H
  (assert (= target_rollrate1 result__7))

;; H
  (assert (= present_rollrate1 c20b))

;; H
  (assert (in_range7 c20b))

;; H
  (assert (= target_rollrate1 c21b))

;; H
  (assert (in_range7 c21b))

;; H
  (assert (= mach c22b))

;; H
  (assert (in_range3 c22b))

;; H
  (assert (=> (<= (- 45) 45) (in_range4 target_angle)))

(assert
;; WP_parameter_def
 ;; File "ap-heading-roll-rate.ads", line 8, characters 0-0
  (not (< 0 40)))
(check-sat)
(exit)
