;; produced by cvc4_16.drv ;;
(set-info :smt-lib-version 2.6)
(set-logic AUFBVFPDTNIRA)
(set-info :source |VC generated by SPARK 2014|)
(set-info :category industrial)
(set-info :status unknown)
;;; generated by SMT-LIB2 driver
;;; SMT-LIB2 driver: bit-vectors, common part
;;; SMT-LIB2: integer arithmetic
(declare-datatypes ((tuple0 0)) (((Tuple0))))
(declare-sort us_private 0)

(declare-fun private__bool_eq (us_private us_private) Bool)

(declare-const us_null_ext__ us_private)

(declare-sort us_type_of_heap 0)

(declare-datatypes ((us_type_of_heap__ref 0))
(((mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)

(declare-datatypes ((int__ref 0)) (((mk_int__ref (int__content Int)))))
(declare-datatypes ((bool__ref 0)) (((mk_bool__ref (bool__content Bool)))))
(declare-datatypes ((real__ref 0)) (((mk_real__ref (real__content Real)))))
(declare-datatypes ((us_private__ref 0))
(((mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))

(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))

(define-fun real__ref___projection ((a real__ref)) Real (real__content a))

(define-fun us_private__ref___projection ((a us_private__ref)) us_private
  (us_private__content a))

(declare-sort integer 0)

(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x)
                                    (<= x 2147483647)))

(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)

(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)

(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)

(declare-fun user_eq (integer integer) Bool)

(declare-const dummy integer)

(declare-datatypes ((integer__ref 0))
(((mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content
                                                                 a))

(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool)
  (temp___skip_constant_13 Bool)
  (temp___do_toplevel_14 Bool)) Bool (=>
                                     (or (= temp___is_init_12 true)
                                     (<= (- 2147483648) 2147483647))
                                     (in_range temp___expr_15)))

(declare-const a Int)

(declare-const attr__ATTRIBUTE_ADDRESS Int)

(declare-const attr__ATTRIBUTE_ADDRESS1 Int)

(declare-const attr__ATTRIBUTE_ADDRESS2 Int)

(declare-const b Int)

(declare-const c Int)

(declare-const simple_test__test__result Int)

(declare-const o Int)

(declare-const result Int)

(declare-const c1 Int)

(declare-const result1 Int)

(declare-const b1 Int)

(declare-const result2 Int)

(declare-const b2 Int)

(declare-const result3 Int)

(declare-const c2 Int)

(declare-const result4 Int)

(declare-const simple_test__test__result1 Int)

(declare-const simple_test__test__result2 Int)

(declare-const simple_test__test__result3 Int)

(declare-const b3 Int)

(declare-const c3 Int)

(declare-const simple_test__test__result4 Int)

(declare-const b4 Int)

(declare-const c4 Int)

(declare-const simple_test__test__result5 Int)

(define-fun b5 () int__ref (mk_int__ref b))

;; H
  (assert (in_range a))

;; H
  (assert (or (= a 0) (= a 1)))

;; H
  (assert (=> (<= (- 2147483648) 2147483647) (in_range b)))

;; H
  (assert (= (mk_int__ref result) (mk_int__ref c)))

;; H
  (assert (= c1 3))

;; H
  (assert (in_range c1))

;; H
  (assert (=> (= a 0) (= (mk_int__ref result1) b5)))

;; H
  (assert (=> (= a 0) (= b1 500)))

;; H
  (assert (=> (not (= a 0)) (= (mk_int__ref result2) b5)))

;; H
  (assert (=> (not (= a 0)) (= b2 1000)))

;; H
  (assert (=> (not (= a 0)) (= b1 b2)))

;; H
  (assert (and (= o (+ c1 b1)) (in_range (+ c1 b1))))

;; H
  (assert (= c1 result3))

;; H
  (assert (= c2 o))

;; H
  (assert (< 0 c2))

;; H
  (assert (= simple_test__test__result1 simple_test__test__result2))

;; H
  (assert (= simple_test__test__result3 simple_test__test__result1))

;; H
  (assert (= (mk_int__ref result4) (mk_int__ref simple_test__test__result)))

;; H
  (assert (= simple_test__test__result1 c2))

;; H
  (assert
  (= (mk_int__ref simple_test__test__result4) (mk_int__ref
                                              simple_test__test__result2)))

;; H
  (assert (= c2 c3))

;; H
  (assert (= b1 b3))

;; H
  (assert (= simple_test__test__result5 simple_test__test__result3))

;; H
  (assert (= c4 c2))

;; H
  (assert (= b4 b1))

(assert
;; WP_parameter_def
 ;; File "system.ads", line 1, characters 0-0
  (not (in_range (* a 500))))
(check-sat)
(exit)
