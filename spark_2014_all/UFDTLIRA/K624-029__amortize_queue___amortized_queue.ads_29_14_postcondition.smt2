(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort capacity_range 0)
(declare-fun capacity_rangeqtint (capacity_range) Int)
(assert (forall ((i capacity_range)) (and (<= 0 (capacity_rangeqtint i)) (<= (capacity_rangeqtint i) 1000))))
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 1000)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (capacity_range capacity_range) Bool)
(declare-const dummy capacity_range)
(declare-datatypes () ((capacity_range__ref (mk_capacity_range__ref (capacity_range__content capacity_range)))))
(define-fun capacity_range__ref___projection ((a capacity_range__ref)) capacity_range (capacity_range__content a))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__amortized_queue__my_vectors__vector__capacity capacity_range)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) capacity_range (rec__amortized_queue__my_vectors__vector__capacity a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__amortized_queue__my_vectors__vector us_main_type)))))
(define-fun us_split_fields_Vector__projection ((a us_split_fields)) us_main_type (rec__amortized_queue__my_vectors__vector a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const amortized_queue__my_vectors__vector__capacity__first__bit Int)
(declare-const amortized_queue__my_vectors__vector__capacity__last__bit Int)
(declare-const amortized_queue__my_vectors__vector__capacity__position Int)
(assert (<= 0 amortized_queue__my_vectors__vector__capacity__first__bit))
(assert (< amortized_queue__my_vectors__vector__capacity__first__bit amortized_queue__my_vectors__vector__capacity__last__bit))
(assert (<= 0 amortized_queue__my_vectors__vector__capacity__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((vector__ref (mk_vector__ref (vector__content us_rep)))))
(define-fun vector__ref___projection ((a vector__ref)) us_rep (vector__content a))
(declare-fun length (us_rep) Int)
(declare-fun length__function_guard (Int us_rep) Bool)
(define-fun to_rep ((x capacity_range)) Int (capacity_rangeqtint x))
(declare-fun of_rep (Int) capacity_range)
(assert (forall ((x capacity_range)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x capacity_range)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(define-fun capacity ((container us_rep)) Int (ite (= (distinct 1 0) true) (to_rep (rec__amortized_queue__my_vectors__vector__capacity (us_split_discrs1 container))) 1000))
(declare-fun capacity__function_guard (Int us_rep) Bool)
(define-fun dynamic_invariant ((temp___expr_249 Int) (temp___is_init_245 Bool) (temp___skip_constant_246 Bool) (temp___do_toplevel_247 Bool) (temp___do_typ_inv_248 Bool)) Bool (=> (or (= temp___is_init_245 true) (<= 0 1000)) (in_range1 temp___expr_249)))
(assert (forall ((container us_rep)) (! (let ((result (length container))) (and (<= result (capacity container)) (dynamic_invariant result true false true true))) :pattern ((length container)))))
(declare-sort us_main_type1 0)
(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)
(declare-sort us_rep1 0)
(declare-fun bool_eq (us_rep1 us_rep1) Bool)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-fun user_eq2 (us_rep1 us_rep1) Bool)
(declare-const dummy2 us_rep1)
(declare-datatypes () ((sequence__ref (mk_sequence__ref (sequence__content us_rep1)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep1 (sequence__content a))
(declare-fun length1 (us_rep1) Int)
(declare-fun length__function_guard1 (Int us_rep1) Bool)
(define-fun last ((container us_rep1)) Int (+ 0 (length1 container)))
(declare-fun last__function_guard (Int us_rep1) Bool)
(declare-fun model__ (us_rep) us_rep1)
(declare-fun model____function_guard (us_rep1 us_rep) Bool)
(define-fun last_index ((container us_rep)) Int (last (model__ container)))
(declare-fun last_index__function_guard (Int us_rep) Bool)
(declare-sort extended_index 0)
(declare-fun extended_indexqtint (extended_index) Int)
(assert (forall ((i extended_index)) (and (<= 0 (extended_indexqtint i)) (<= (extended_indexqtint i) 1001))))
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 1001)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq3 (extended_index extended_index) Bool)
(declare-const dummy3 extended_index)
(declare-datatypes () ((extended_index__ref (mk_extended_index__ref (extended_index__content extended_index)))))
(define-fun extended_index__ref___projection ((a extended_index__ref)) extended_index (extended_index__content a))
(define-fun dynamic_invariant1 ((temp___expr_242 Int) (temp___is_init_238 Bool) (temp___skip_constant_239 Bool) (temp___do_toplevel_240 Bool) (temp___do_typ_inv_241 Bool)) Bool (=> (or (= temp___is_init_238 true) (<= 0 1001)) (in_range2 temp___expr_242)))
(declare-fun first_index__function_guard (Int us_rep) Bool)
(declare-sort index_type 0)
(declare-fun index_typeqtint (index_type) Int)
(assert (forall ((i index_type)) (and (<= 1 (index_typeqtint i)) (<= (index_typeqtint i) 1000))))
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 1000)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq4 (index_type index_type) Bool)
(declare-const dummy4 index_type)
(declare-datatypes () ((index_type__ref (mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref___projection ((a index_type__ref)) index_type (index_type__content a))
(define-fun dynamic_invariant2 ((temp___expr_228 Int) (temp___is_init_224 Bool) (temp___skip_constant_225 Bool) (temp___do_toplevel_226 Bool) (temp___do_typ_inv_227 Bool)) Bool (=> (or (= temp___is_init_224 true) (<= 1 1000)) (in_range3 temp___expr_228)))
(declare-fun get (us_rep1 Int) Int)
(declare-fun get__function_guard (Int us_rep1 Int) Bool)
(define-fun element ((container us_rep) (index Int)) Int (get (model__ container) index))
(declare-fun element__function_guard (Int us_rep Int) Bool)
(declare-sort element_type 0)
(declare-fun element_typeqtint (element_type) Int)
(assert (forall ((i element_type)) (and (<= (- 2147483648) (element_typeqtint i)) (<= (element_typeqtint i) 2147483647))))
(define-fun in_range4 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (element_type element_type) Bool)
(declare-const dummy5 element_type)
(declare-datatypes () ((element_type__ref (mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___projection ((a element_type__ref)) element_type (element_type__content a))
(define-fun dynamic_invariant3 ((temp___expr_235 Int) (temp___is_init_231 Bool) (temp___skip_constant_232 Bool) (temp___do_toplevel_233 Bool) (temp___do_typ_inv_234 Bool)) Bool (=> (or (= temp___is_init_231 true) (<= (- 2147483648) 2147483647)) (in_range4 temp___expr_235)))
(define-fun olt ((left us_rep1) (right us_rep1)) Bool (and (< (length1 left) (length1 right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun olt__function_guard (Bool us_rep1 us_rep1) Bool)
(declare-sort tcount_typeB 0)
(declare-fun tcount_typeBqtint (tcount_typeB) Int)
(assert (forall ((i tcount_typeB)) (and (<= (- 2147483648) (tcount_typeBqtint i)) (<= (tcount_typeBqtint i) 2147483647))))
(define-fun in_range5 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (tcount_typeB tcount_typeB) Bool)
(declare-const dummy6 tcount_typeB)
(declare-datatypes () ((tcount_typeB__ref (mk_tcount_typeB__ref (tcount_typeB__content tcount_typeB)))))
(define-fun tcount_typeB__ref___projection ((a tcount_typeB__ref)) tcount_typeB (tcount_typeB__content a))
(declare-sort val__ 0)
(declare-fun val__qtint (val__) Int)
(assert (forall ((i val__)) (and (<= (- 2147483648) (val__qtint i)) (<= (val__qtint i) 2147483647))))
(define-fun in_range6 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (val__ val__) Bool)
(declare-const dummy7 val__)
(declare-datatypes () ((val____ref (mk_val____ref (val____content val__)))))
(define-fun val____ref___projection ((a val____ref)) val__ (val____content a))
(define-fun dynamic_invariant4 ((temp___expr_221 Int) (temp___is_init_217 Bool) (temp___skip_constant_218 Bool) (temp___do_toplevel_219 Bool) (temp___do_typ_inv_220 Bool)) Bool (=> (or (= temp___is_init_217 true) (<= (- 2147483648) 2147483647)) (in_range6 temp___expr_221)))
(declare-const left us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const right Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const r31b Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun in_range7 ((rec__amortized_queue__my_vectors__vector__capacity1 Int) (a us_rep)) Bool (= rec__amortized_queue__my_vectors__vector__capacity1 (to_rep (rec__amortized_queue__my_vectors__vector__capacity (us_split_discrs1 a)))))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const amortized_queue__my_vectors__vector__capacity__first__bit1 Int)
(declare-const amortized_queue__my_vectors__vector__capacity__last__bit1 Int)
(declare-const amortized_queue__my_vectors__vector__capacity__position1 Int)
(assert (<= 0 amortized_queue__my_vectors__vector__capacity__first__bit1))
(assert (< amortized_queue__my_vectors__vector__capacity__first__bit1 amortized_queue__my_vectors__vector__capacity__last__bit1))
(assert (<= 0 amortized_queue__my_vectors__vector__capacity__position1))
(declare-fun user_eq8 (us_rep us_rep) Bool)
(declare-const dummy8 us_rep)
(declare-datatypes () ((tresultS__ref (mk_tresultS__ref (tresultS__content us_rep)))))
(define-fun tresultS__ref___3__projection ((a tresultS__ref)) us_rep (tresultS__content a))
(declare-fun is_empty (us_rep) Bool)
(declare-fun is_empty__function_guard (Bool us_rep) Bool)
(define-fun dynamic_invariant5 ((temp___expr_474 us_rep) (temp___is_init_470 Bool) (temp___skip_constant_471 Bool) (temp___do_toplevel_472 Bool) (temp___do_typ_inv_473 Bool)) Bool (=> (not (= temp___skip_constant_471 true)) (in_range7 r31b temp___expr_474)))
(define-fun default_initial_assumption ((temp___expr_476 us_rep) (temp___skip_top_level_477 Bool)) Bool (and (= (to_rep (rec__amortized_queue__my_vectors__vector__capacity (us_split_discrs1 temp___expr_476))) r31b) (=> (not (= temp___skip_top_level_477 true)) (= (is_empty temp___expr_476) true))))
(declare-const result____split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const r33b Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const r34b Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range8 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (integer integer) Bool)
(declare-const dummy9 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range8 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t35b__ref (mk_t35b__ref (t35b__content integer)))))
(define-fun t35b__ref___projection ((a t35b__ref)) integer (t35b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(define-fun dynamic_invariant6 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range8 temp___expr_18)))
(declare-sort count_type 0)
(declare-fun count_typeqtint (count_type) Int)
(assert (forall ((i count_type)) (and (<= 0 (count_typeqtint i)) (<= (count_typeqtint i) 2147483647))))
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq11 (count_type count_type) Bool)
(declare-const dummy11 count_type)
(declare-datatypes () ((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type (count_type__content a))
(define-fun dynamic_invariant7 ((temp___expr_165 Int) (temp___is_init_161 Bool) (temp___skip_constant_162 Bool) (temp___do_toplevel_163 Bool) (temp___do_typ_inv_164 Bool)) Bool (=> (or (= temp___is_init_161 true) (<= 0 2147483647)) (in_range9 temp___expr_165)))
(define-fun oeq ((left1 us_rep1) (right1 us_rep1)) Bool (and (= (length1 left1) (length1 right1)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left1))) (= (get left1 n) (get right1 n)))) true false)))
(declare-fun oeq__function_guard (Bool us_rep1 us_rep1) Bool)
(assert (forall ((a us_rep1) (b us_rep1)) (! (= (user_eq2 a b) (oeq a b)) :pattern ((user_eq2 a b)))))
(define-fun default_initial_assumption1 ((temp___expr_288 us_rep1) (temp___skip_top_level_289 Bool)) Bool (=> (not (= temp___skip_top_level_289 true)) (= (length1 temp___expr_288) 0)))
(assert (forall ((container us_rep)) (! (= (length1 (model__ container)) (length container)) :pattern ((model__ container)))))
(assert (forall ((container us_rep)) (! (= (= (is_empty container) true) (= (length container) 0)) :pattern ((is_empty container)))))
(declare-sort extended_index1 0)
(declare-fun extended_indexqtint1 (extended_index1) Int)
(assert (forall ((i extended_index1)) (and (<= 0 (extended_indexqtint1 i)) (<= (extended_indexqtint1 i) 1000))))
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 1000)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq12 (extended_index1 extended_index1) Bool)
(declare-const dummy12 extended_index1)
(declare-datatypes () ((extended_index__ref1 (mk_extended_index__ref1 (extended_index__content1 extended_index1)))))
(define-fun extended_index__ref___2__projection ((a extended_index__ref1)) extended_index1 (extended_index__content1 a))
(define-fun dynamic_invariant8 ((temp___expr_280 Int) (temp___is_init_276 Bool) (temp___skip_constant_277 Bool) (temp___do_toplevel_278 Bool) (temp___do_typ_inv_279 Bool)) Bool (=> (or (= temp___is_init_276 true) (<= 0 1000)) (in_range10 temp___expr_280)))
(assert (forall ((container us_rep1)) (! (let ((result (length1 container))) (and (<= (+ 0 result) 1000) (dynamic_invariant7 result true false true true))) :pattern ((length1 container)))))
(declare-sort element_type1 0)
(declare-fun element_typeqtint1 (element_type1) Int)
(assert (forall ((i element_type1)) (and (<= (- 2147483648) (element_typeqtint1 i)) (<= (element_typeqtint1 i) 2147483647))))
(define-fun in_range11 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq13 (element_type1 element_type1) Bool)
(declare-const dummy13 element_type1)
(declare-datatypes () ((element_type__ref1 (mk_element_type__ref1 (element_type__content1 element_type1)))))
(define-fun element_type__ref___2__projection ((a element_type__ref1)) element_type1 (element_type__content1 a))
(define-fun dynamic_invariant9 ((temp___expr_273 Int) (temp___is_init_269 Bool) (temp___skip_constant_270 Bool) (temp___do_toplevel_271 Bool) (temp___do_typ_inv_272 Bool)) Bool (=> (or (= temp___is_init_269 true) (<= (- 2147483648) 2147483647)) (in_range11 temp___expr_273)))
(assert (forall ((container us_rep1)) (forall ((position Int)) (! (=> (and (dynamic_invariant8 position true true true true) (and (<= 1 position) (<= position (last container)))) (dynamic_invariant9 (get container position) true false true true)) :pattern ((get container position))))))
(declare-const result____split_fields us_main_type)
(declare-const idx Int)
(declare-const amortized_queue__Oconcat__3__result capacity_range)
(declare-const amortized_queue__Oconcat__3__result1 us_main_type)
(declare-const o Int)
(declare-const amortized_queue__Oconcat__3__R30b__R31b__assume Int)
(declare-const us Int)
(declare-const amortized_queue__Oconcat__3__L_4__R33b__assume Int)
(declare-const amortized_queue__Oconcat__3__L_4__R34b__assume Int)
(declare-const temp___570 capacity_range)
(declare-const temp___5701 us_main_type)
(declare-const temp___569 Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const result____split_fields1 us_main_type)
(declare-const result Int)
(declare-const idx1 Int)
(declare-const amortized_queue__my_vectors__append__2__container__fields us_main_type)
(declare-const result1 us_main_type)
(declare-const result____split_fields2 us_main_type)
(declare-const result____split_fields3 us_main_type)
(declare-const idx2 Int)
(declare-const result____split_fields4 us_split_fields__ref)
(declare-const idx3 int__ref)
(declare-const result____split_fields5 us_split_fields)
(declare-const idx4 Int)
(declare-const result____split_fields6 us_split_fields__ref)
(declare-const idx5 int__ref)
(declare-const result____split_fields7 us_split_fields)
(declare-const idx6 Int)
(declare-const amortized_queue__my_vectors__append__2__container__fields1 us_split_fields)
(declare-const result2 us_split_fields__ref)
(declare-const result____split_fields8 us_split_fields)
(declare-const result3 vector__ref)
(declare-const amortized_queue__Oconcat__3__result2 us_rep)
(declare-const result____split_fields9 us_split_fields__ref)
(declare-const idx7 int__ref)
(declare-const amortized_queue__Oconcat__3__result3 vector__ref)
(declare-const result____split_fields10 us_split_fields)
(declare-const idx8 Int)
(declare-const amortized_queue__Oconcat__3__result4 us_rep)
(declare-const result____split_fields11 us_split_fields__ref)
(declare-const idx9 int__ref)
(declare-const amortized_queue__Oconcat__3__result5 vector__ref)
(declare-const result____split_fields12 us_split_fields)
(declare-const idx10 Int)
(declare-const amortized_queue__Oconcat__3__result6 us_rep)
(define-fun result____split_fields13 () us_split_fields (mk___split_fields result____split_fields3))
(define-fun amortized_queue__my_vectors__append__2__container__fields2 () us_split_fields (mk___split_fields amortized_queue__my_vectors__append__2__container__fields))
(define-fun result____split_fields14 () us_split_fields__ref (mk___split_fields__ref (mk___split_fields result____split_fields)))
(declare-const result4 capacity_range)
(declare-const result5 us_main_type)
(assert (in_range6 right))
(assert (<= (+ (length left) 1) 1000))
(assert (= amortized_queue__Oconcat__3__result3 (mk_vector__ref amortized_queue__Oconcat__3__result2)))
(assert (= idx7 idx5))
(assert (= result____split_fields9 (mk___split_fields__ref result____split_fields8)))
(assert (= amortized_queue__Oconcat__3__result4 amortized_queue__Oconcat__3__result2))
(assert (= idx8 idx6))
(assert (= result____split_fields10 result____split_fields8))
(assert (and (= o (length left)) (and (in_range1 o) (<= o (capacity left)))))
(assert (= amortized_queue__Oconcat__3__R30b__R31b__assume (+ o 1)))
(assert (= amortized_queue__Oconcat__3__R30b__R31b__assume r31b))
(assert (in_range5 r31b))
(assert (and (= us r31b) (in_range1 r31b)))
(assert (default_initial_assumption (mk___rep result____split_discrs (mk___split_fields result____split_fields)) false))
(assert (= r31b (to_rep (rec__amortized_queue__my_vectors__vector__capacity result____split_discrs))))
(assert (and (= amortized_queue__Oconcat__3__L_4__R33b__assume 1) (and (in_range3 amortized_queue__Oconcat__3__L_4__R33b__assume) (= amortized_queue__Oconcat__3__L_4__R33b__assume 1))))
(assert (= amortized_queue__Oconcat__3__L_4__R33b__assume r33b))
(assert (in_range3 r33b))
(assert (and (= amortized_queue__Oconcat__3__L_4__R34b__assume (last (model__ left))) (and (in_range2 amortized_queue__Oconcat__3__L_4__R34b__assume) (= amortized_queue__Oconcat__3__L_4__R34b__assume (last (model__ left))))))
(assert (= amortized_queue__Oconcat__3__L_4__R34b__assume r34b))
(assert (in_range2 r34b))
(assert (= (mk_int__ref result) (mk_int__ref idx)))
(assert (= idx1 r33b))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (and (= result____split_discrs (mk___split_discrs temp___570)) (= result____split_fields temp___5701))))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= temp___569 idx1)))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (and (= o1 idx1) (in_range3 idx1))))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (and (= o2 (get (model__ left) o1)) (and (in_range4 o2) (= o2 (get (model__ left) o1))))))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (and (and (= (length (mk___rep result____split_discrs amortized_queue__my_vectors__append__2__container__fields2)) (+ (length (mk___rep result____split_discrs (mk___split_fields result____split_fields))) 1)) (= (olt (model__ (mk___rep result____split_discrs (mk___split_fields result____split_fields))) (model__ (mk___rep result____split_discrs amortized_queue__my_vectors__append__2__container__fields2))) true)) (= (get (model__ (mk___rep result____split_discrs amortized_queue__my_vectors__append__2__container__fields2)) (+ (last (model__ (mk___rep result____split_discrs (mk___split_fields result____split_fields)))) 1)) o2))))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= (mk___split_fields__ref (mk___split_fields result1)) result____split_fields14)))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= (mk___split_fields result____split_fields2) amortized_queue__my_vectors__append__2__container__fields2)))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= (length (mk___rep result____split_discrs result____split_fields13)) idx2)))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (forall ((i Int)) (=> (and (<= 1 i) (<= i idx2)) (= (get (model__ (mk___rep result____split_discrs result____split_fields13)) i) (get (model__ left) i))))))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (and (=> (<= r33b r34b) (dynamic_property r33b r34b idx2)) (and (<= r33b idx2) (<= idx2 r34b)))))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= idx2 r34b)))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= idx3 (mk_int__ref idx2))))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= result____split_fields4 (mk___split_fields__ref result____split_fields13))))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= idx4 idx2)))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= result____split_fields5 result____split_fields13)))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= idx5 idx3)))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= result____split_fields6 result____split_fields4)))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= idx6 idx4)))
(assert (=> (and (<= r33b idx1) (<= idx1 r34b)) (= result____split_fields7 result____split_fields5)))
(assert (=> (not (and (<= r33b idx1) (<= idx1 r34b))) (= idx5 (mk_int__ref idx1))))
(assert (=> (not (and (<= r33b idx1) (<= idx1 r34b))) (= result____split_fields6 result____split_fields14)))
(assert (=> (not (and (<= r33b idx1) (<= idx1 r34b))) (= idx6 idx1)))
(assert (=> (not (and (<= r33b idx1) (<= idx1 r34b))) (= result____split_fields7 (mk___split_fields result____split_fields1))))
(assert (and (and (= (length (mk___rep result____split_discrs amortized_queue__my_vectors__append__2__container__fields1)) (+ (length (mk___rep result____split_discrs (us_split_fields__content result____split_fields6))) 1)) (= (olt (model__ (mk___rep result____split_discrs (us_split_fields__content result____split_fields6))) (model__ (mk___rep result____split_discrs amortized_queue__my_vectors__append__2__container__fields1))) true)) (= (get (model__ (mk___rep result____split_discrs amortized_queue__my_vectors__append__2__container__fields1)) (+ (last (model__ (mk___rep result____split_discrs (us_split_fields__content result____split_fields6)))) 1)) right)))
(assert (= result2 result____split_fields6))
(assert (= result____split_fields8 amortized_queue__my_vectors__append__2__container__fields1))
(assert (= result3 (mk_vector__ref (mk___rep (mk___split_discrs amortized_queue__Oconcat__3__result) (mk___split_fields amortized_queue__Oconcat__3__result1)))))
(assert (= amortized_queue__Oconcat__3__result2 (mk___rep result____split_discrs result____split_fields8)))
(assert (= amortized_queue__Oconcat__3__result5 amortized_queue__Oconcat__3__result3))
(assert (= idx9 idx7))
(assert (= result____split_fields11 result____split_fields9))
(assert (= amortized_queue__Oconcat__3__result6 amortized_queue__Oconcat__3__result4))
(assert (= idx10 idx8))
(assert (= result____split_fields12 result____split_fields10))
(assert (= (mk___rep (mk___split_discrs result4) (mk___split_fields result5)) (vector__content amortized_queue__Oconcat__3__result5)))
(declare-const i Int)
(assert (<= 1 i))
(assert (<= i (last (model__ left))))
(assert (not (= (get (model__ (vector__content amortized_queue__Oconcat__3__result5)) i) (get (model__ left) i))))
(check-sat)
(exit)
