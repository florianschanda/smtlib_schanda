(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_15)))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__p__typ__int integer)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) integer (rec__p__typ__int a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (= (to_rep (rec__p__typ__int (us_split_discrs1 a))) (to_rep (rec__p__typ__int (us_split_discrs1 b)))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const p__typ__int__first__bit Int)
(declare-const p__typ__int__last__bit Int)
(declare-const p__typ__int__position Int)
(assert (<= 0 p__typ__int__first__bit))
(assert (< p__typ__int__first__bit p__typ__int__last__bit))
(assert (<= 0 p__typ__int__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((typ__ref (mk_typ__ref (typ__content us_rep)))))
(define-fun typ__ref___projection ((a typ__ref)) us_rep (typ__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun in_range1 ((rec__p__typ__int1 Int) (a us_rep)) Bool (= rec__p__typ__int1 (to_rep (rec__p__typ__int (us_split_discrs1 a)))))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const p__typ__int__first__bit1 Int)
(declare-const p__typ__int__last__bit1 Int)
(declare-const p__typ__int__position1 Int)
(assert (<= 0 p__typ__int__first__bit1))
(assert (< p__typ__int__first__bit1 p__typ__int__last__bit1))
(assert (<= 0 p__typ__int__position1))
(declare-fun user_eq2 (us_rep us_rep) Bool)
(declare-const dummy2 us_rep)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))
(declare-const tmp Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_invariant1 ((temp___expr_140 us_rep) (temp___is_init_137 Bool) (temp___skip_constant_138 Bool) (temp___do_toplevel_139 Bool)) Bool (=> (not (= temp___skip_constant_138 true)) (in_range1 tmp temp___expr_140)))
(define-fun default_initial_assumption ((temp___expr_142 us_rep) (temp___skip_top_level_143 Bool)) Bool (= (to_rep (rec__p__typ__int (us_split_discrs1 temp___expr_142))) tmp))
(declare-const null_t us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const r2s Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun in_range2 ((rec__p__typ__int1 Int) (a us_rep)) Bool (= rec__p__typ__int1 (to_rep (rec__p__typ__int (us_split_discrs1 a)))))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const p__typ__int__first__bit2 Int)
(declare-const p__typ__int__last__bit2 Int)
(declare-const p__typ__int__position2 Int)
(assert (<= 0 p__typ__int__first__bit2))
(assert (< p__typ__int__first__bit2 p__typ__int__last__bit2))
(assert (<= 0 p__typ__int__position2))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((t1s__ref (mk_t1s__ref (t1s__content us_rep)))))
(define-fun t1s__ref___projection ((a t1s__ref)) us_rep (t1s__content a))
(declare-const max Int)
(declare-const us Int)
(declare-const o integer)
(declare-const o1 integer)
(declare-const o2 integer)
(declare-const o3 integer)
(declare-const o4 integer)
(declare-const result Int)
(declare-const max1 Int)
(assert (= result max))
(assert (= max1 30))
(assert (in_range max1))
(assert (= max1 tmp))
(assert (in_range tmp))
(assert (not (in_range tmp)))
(check-sat)
(exit)
