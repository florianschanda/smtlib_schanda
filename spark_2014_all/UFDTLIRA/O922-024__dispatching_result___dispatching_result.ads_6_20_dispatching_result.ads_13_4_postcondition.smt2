(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort natural 0)
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range temp___expr_33)))
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__dispatching_result__root__f1 natural) (rec__ext__ us_private)))))
(define-fun us_split_fields_F1__projection ((a us_split_fields)) natural (rec__dispatching_result__root__f1 a))
(define-fun us_split_fields___projection ((a us_split_fields)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields) (attr__tag Int)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___2__projection ((a us_rep)) Int (attr__tag a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (= (to_rep (rec__dispatching_result__root__f1 (us_split_fields1 a))) (to_rep (rec__dispatching_result__root__f1 (us_split_fields1 b)))) true false))
(declare-fun us_dispatch_eq (us_rep us_rep) Bool)
(declare-const us_tag Int)
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const dispatching_result__root__f1__first__bit Int)
(declare-const dispatching_result__root__f1__last__bit Int)
(declare-const dispatching_result__root__f1__position Int)
(assert (<= 0 dispatching_result__root__f1__first__bit))
(assert (< dispatching_result__root__f1__first__bit dispatching_result__root__f1__last__bit))
(assert (<= 0 dispatching_result__root__f1__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((root__ref (mk_root__ref (root__content us_rep)))))
(define-fun root__ref___projection ((a root__ref)) us_rep (root__content a))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__dispatching_result__child__f2 natural) (rec__dispatching_result__root__f11 natural) (rec__ext__1 us_private)))))
(define-fun us_split_fields_F2__projection ((a us_split_fields2)) natural (rec__dispatching_result__child__f2 a))
(define-fun us_split_fields_F1__2__projection ((a us_split_fields2)) natural (rec__dispatching_result__root__f11 a))
(define-fun us_split_fields___2__projection ((a us_split_fields2)) us_private (rec__ext__1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2) (attr__tag1 Int)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun us_rep___4__projection ((a us_rep1)) Int (attr__tag1 a))
(declare-fun hide_ext__ (natural us_private) us_private)
(declare-fun extract__f2 (us_private) natural)
(assert (forall ((f2 natural)) (forall ((rec__ext__2 us_private)) (= (extract__f2 (hide_ext__ f2 rec__ext__2)) f2))))
(declare-fun extract__ext__ (us_private) us_private)
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (mk___split_fields (rec__dispatching_result__root__f11 (us_split_fields3 a)) (hide_ext__ (rec__dispatching_result__child__f2 (us_split_fields3 a)) (rec__ext__1 (us_split_fields3 a)))) (attr__tag1 a)))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (mk___split_fields1 (extract__f2 (rec__ext__ (us_split_fields1 r))) (rec__dispatching_result__root__f1 (us_split_fields1 r)) (extract__ext__ (rec__ext__ (us_split_fields1 r)))) (attr__tag r)))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep (rec__dispatching_result__child__f2 (us_split_fields3 a))) (to_rep (rec__dispatching_result__child__f2 (us_split_fields3 b)))) (= (to_rep (rec__dispatching_result__root__f11 (us_split_fields3 a))) (to_rep (rec__dispatching_result__root__f11 (us_split_fields3 b))))) true false))
(declare-const us_tag1 Int)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const dispatching_result__child__f2__first__bit Int)
(declare-const dispatching_result__child__f2__last__bit Int)
(declare-const dispatching_result__child__f2__position Int)
(assert (<= 0 dispatching_result__child__f2__first__bit))
(assert (< dispatching_result__child__f2__first__bit dispatching_result__child__f2__last__bit))
(assert (<= 0 dispatching_result__child__f2__position))
(declare-const dispatching_result__root__f1__first__bit1 Int)
(declare-const dispatching_result__root__f1__last__bit1 Int)
(declare-const dispatching_result__root__f1__position1 Int)
(assert (<= 0 dispatching_result__root__f1__first__bit1))
(assert (< dispatching_result__root__f1__first__bit1 dispatching_result__root__f1__last__bit1))
(assert (<= 0 dispatching_result__root__f1__position1))
(declare-fun user_eq2 (us_rep1 us_rep1) Bool)
(declare-const dummy2 us_rep1)
(declare-datatypes () ((child__ref (mk_child__ref (child__content us_rep1)))))
(define-fun child__ref___projection ((a child__ref)) us_rep1 (child__content a))
(declare-const v Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun default_initial_assumption ((temp___expr_136 us_rep) (temp___skip_top_level_137 Bool)) Bool (= (attr__tag temp___expr_136) us_tag))
(define-fun default_initial_assumption1 ((temp___expr_147 us_rep1) (temp___skip_top_level_148 Bool)) Bool (= (attr__tag1 temp___expr_147) us_tag1))
(declare-const dispatching_result__init__2__result natural)
(declare-const dispatching_result__init__2__result1 natural)
(declare-const dispatching_result__init__2__result2 us_private)
(declare-const dispatching_result__init__2__result3 Int)
(declare-const o natural)
(declare-const o1 natural)
(declare-const o2 natural)
(declare-const o3 natural)
(declare-const o4 us_private)
(declare-const o5 natural)
(declare-const o6 natural)
(declare-const o7 us_private)
(declare-const o8 Int)
(declare-const result natural)
(declare-const result1 natural)
(declare-const result2 us_private)
(declare-const result3 Int)
(declare-const dispatching_result__init__2__result4 natural)
(declare-const dispatching_result__init__2__result5 natural)
(declare-const dispatching_result__init__2__result6 us_private)
(declare-const dispatching_result__init__2__result7 Int)
(declare-const dispatching_result__init__2__result8 natural)
(declare-const dispatching_result__init__2__result9 natural)
(declare-const dispatching_result__init__2__result10 us_private)
(declare-const dispatching_result__init__2__result11 Int)
(declare-const dispatching_result__init__2__result12 natural)
(declare-const dispatching_result__init__2__result13 natural)
(declare-const dispatching_result__init__2__result14 us_private)
(declare-const dispatching_result__init__2__result15 Int)
(declare-const dispatching_result__init__2__result16 natural)
(declare-const dispatching_result__init__2__result17 natural)
(declare-const dispatching_result__init__2__result18 us_private)
(declare-const dispatching_result__init__2__result19 Int)
(declare-const dispatching_result__init__2__result20 natural)
(declare-const dispatching_result__init__2__result21 natural)
(declare-const dispatching_result__init__2__result22 us_private)
(declare-const dispatching_result__init__2__result23 Int)
(declare-const result4 natural)
(declare-const result5 natural)
(declare-const result6 us_private)
(declare-const result7 Int)
(assert (in_range v))
(assert (= dispatching_result__init__2__result8 dispatching_result__init__2__result4))
(assert (= dispatching_result__init__2__result9 dispatching_result__init__2__result5))
(assert (= dispatching_result__init__2__result10 dispatching_result__init__2__result6))
(assert (= dispatching_result__init__2__result11 dispatching_result__init__2__result7))
(assert (= (mk___rep1 (mk___split_fields1 dispatching_result__init__2__result12 dispatching_result__init__2__result13 dispatching_result__init__2__result14) dispatching_result__init__2__result15) (mk___rep1 (mk___split_fields1 dispatching_result__init__2__result4 dispatching_result__init__2__result5 dispatching_result__init__2__result6) dispatching_result__init__2__result7)))
(assert (= (to_rep o) v))
(assert (= (to_rep o1) v))
(assert (= o1 o2))
(assert (= o o3))
(assert (= us_null_ext__ o4))
(assert (= o5 o2))
(assert (= o6 o3))
(assert (= o7 o4))
(assert (= us_tag1 o8))
(assert (= result dispatching_result__init__2__result))
(assert (= result1 dispatching_result__init__2__result1))
(assert (= result2 dispatching_result__init__2__result2))
(assert (= result3 dispatching_result__init__2__result3))
(assert (= (mk___rep1 (mk___split_fields1 dispatching_result__init__2__result4 dispatching_result__init__2__result5 dispatching_result__init__2__result6) dispatching_result__init__2__result7) (mk___rep1 (mk___split_fields1 o5 o6 o7) o8)))
(assert (= (mk_child__ref (mk___rep1 (mk___split_fields1 dispatching_result__init__2__result16 dispatching_result__init__2__result17 dispatching_result__init__2__result18) dispatching_result__init__2__result19)) (mk_child__ref (mk___rep1 (mk___split_fields1 dispatching_result__init__2__result8 dispatching_result__init__2__result9 dispatching_result__init__2__result10) dispatching_result__init__2__result11))))
(assert (= dispatching_result__init__2__result20 dispatching_result__init__2__result12))
(assert (= dispatching_result__init__2__result21 dispatching_result__init__2__result13))
(assert (= dispatching_result__init__2__result22 dispatching_result__init__2__result14))
(assert (= dispatching_result__init__2__result23 dispatching_result__init__2__result15))
(assert (= result4 dispatching_result__init__2__result16))
(assert (= result5 dispatching_result__init__2__result17))
(assert (= result6 dispatching_result__init__2__result18))
(assert (= result7 dispatching_result__init__2__result19))
(assert (not (= (to_rep dispatching_result__init__2__result17) v)))
(check-sat)
(exit)
