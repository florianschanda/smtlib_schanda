(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range2 temp___expr_39)))
(define-fun to_rep ((x natural)) Int (naturalqtint x))
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort map1 0)
(declare-datatypes () ((map__ref (mk_map__ref (map__content map1)))))
(declare-fun get (map1 Int Int) natural)
(declare-fun set (map1 Int Int natural) map1)
(assert (forall ((m map1)) (forall ((i Int)) (forall ((j Int)) (forall ((a natural)) (! (= (get (set m i j a) i j) a) :pattern ((set m i j a))))))))
(assert (forall ((m map1)) (forall ((i Int) (i2 Int)) (forall ((j Int) (j2 Int)) (forall ((a natural)) (! (=> (not (and (= i i2) (= j j2))) (= (get (set m i j a) i2 j2) (get m i2 j2))) :pattern ((get (set m i j a) i2 j2)) :pattern ((set m i j a) (get m i2 j2))))))))
(declare-fun slide (map1 Int Int Int Int) map1)
(assert (forall ((a map1)) (forall ((new_first Int) (old_first Int)) (forall ((new_first_2 Int) (old_first_2 Int)) (forall ((i Int)) (forall ((j Int)) (! (= (get (slide a old_first new_first old_first_2 new_first_2) i j) (get a (- i (- new_first old_first)) (- j (- new_first_2 old_first_2)))) :pattern ((get (slide a old_first new_first old_first_2 new_first_2) i j)))))))))
(define-fun bool_eq ((a map1) (a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int) (b map1) (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int)) Bool (ite (and (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (ite (<= a__first_2 a__last_2) (and (<= b__first_2 b__last_2) (= (- a__last_2 a__first_2) (- b__last_2 b__first_2))) (< b__last_2 b__first_2))) (forall ((temp___idx_154 Int) (temp___idx_155 Int)) (=> (and (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (and (<= a__first_2 temp___idx_155) (<= temp___idx_155 a__last_2))) (= (to_rep (get a temp___idx_154 temp___idx_155)) (to_rep (get b (+ (- b__first a__first) temp___idx_154) (+ (- b__first_2 a__first_2) temp___idx_155))))))) true false))
(assert (forall ((a map1) (b map1)) (forall ((a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int) (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int)) (=> (= (bool_eq b b__first b__last b__first_2 b__last_2 a a__first a__last a__first_2 a__last_2) true) (and (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (ite (<= a__first_2 a__last_2) (and (<= b__first_2 b__last_2) (= (- a__last_2 a__first_2) (- b__last_2 b__first_2))) (< b__last_2 b__first_2))) (forall ((temp___idx_154 Int) (temp___idx_155 Int)) (=> (and (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (and (<= a__first_2 temp___idx_155) (<= temp___idx_155 a__last_2))) (= (to_rep (get a temp___idx_154 temp___idx_155)) (to_rep (get b (+ (- b__first a__first) temp___idx_154) (+ (- b__first_2 a__first_2) temp___idx_155)))))))))))
(declare-sort tTmSP1 0)
(declare-fun tTmSP1qtint (tTmSP1) Int)
(assert (forall ((i tTmSP1)) (and (<= 1 (tTmSP1qtint i)) (<= (tTmSP1qtint i) 10))))
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (tTmSP1 tTmSP1) Bool)
(declare-const dummy2 tTmSP1)
(declare-datatypes () ((tTmSP1__ref (mk_tTmSP1__ref (tTmSP1__content tTmSP1)))))
(define-fun tTmSP1__ref___projection ((a tTmSP1__ref)) tTmSP1 (tTmSP1__content a))
(declare-sort tTmSP2 0)
(declare-fun tTmSP2qtint (tTmSP2) Int)
(assert (forall ((i tTmSP2)) (and (<= 1 (tTmSP2qtint i)) (<= (tTmSP2qtint i) 10))))
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (tTmSP2 tTmSP2) Bool)
(declare-const dummy3 tTmSP2)
(declare-datatypes () ((tTmSP2__ref (mk_tTmSP2__ref (tTmSP2__content tTmSP2)))))
(define-fun tTmSP2__ref___projection ((a tTmSP2__ref)) tTmSP2 (tTmSP2__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const c62b map1)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort t64b 0)
(declare-fun t64bqtint (t64b) Int)
(assert (forall ((i t64b)) (and (<= 1 (t64bqtint i)) (<= (t64bqtint i) 10))))
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (t64b t64b) Bool)
(declare-const dummy4 t64b)
(declare-datatypes () ((t64b__ref (mk_t64b__ref (t64b__content t64b)))))
(define-fun t64b__ref___projection ((a t64b__ref)) t64b (t64b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const c77b map1)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-sort t79b 0)
(declare-fun t79bqtint (t79b) Int)
(assert (forall ((i t79b)) (and (<= 0 (t79bqtint i)) (<= (t79bqtint i) 9))))
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 9)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (t79b t79b) Bool)
(declare-const dummy5 t79b)
(declare-datatypes () ((t79b__ref (mk_t79b__ref (t79b__content t79b)))))
(define-fun t79b__ref___projection ((a t79b__ref)) t79b (t79b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const c96b map1)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-sort t98b 0)
(declare-fun t98bqtint (t98b) Int)
(assert (forall ((i t98b)) (and (<= 1 (t98bqtint i)) (<= (t98bqtint i) 10))))
(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq6 (t98b t98b) Bool)
(declare-const dummy6 t98b)
(declare-datatypes () ((t98b__ref (mk_t98b__ref (t98b__content t98b)))))
(define-fun t98b__ref___projection ((a t98b__ref)) t98b (t98b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-fun temp_____aggregate_def_253 (Int Int Int) map1)
(declare-fun temp_____aggregate_def_269 (Int Int Int) map1)
(declare-fun temp_____aggregate_def_287 (Int) map1)
(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-const rliteral natural)
(assert (= (naturalqtint rliteral) 2))
(declare-const rliteral1 natural)
(assert (= (naturalqtint rliteral1) 1))
(declare-const rliteral2 natural)
(assert (= (naturalqtint rliteral2) 0))
(assert (forall ((temp___255 Int) (temp___256 Int) (temp___257 Int)) (let ((temp___254 (temp_____aggregate_def_253 temp___255 temp___256 temp___257))) (=> (and (and (dynamic_invariant temp___255 true true true true) (dynamic_invariant temp___256 true true true true)) (dynamic_invariant temp___257 true true true true)) (forall ((temp___258 Int) (temp___259 Int)) (ite (= temp___258 7) (= (get temp___254 temp___258 temp___259) rliteral) (ite (= temp___258 5) (= (get temp___254 temp___258 temp___259) rliteral1) (= (get temp___254 temp___258 temp___259) rliteral2))))))))
(assert (forall ((temp___271 Int) (temp___272 Int) (temp___273 Int)) (let ((temp___270 (temp_____aggregate_def_269 temp___271 temp___272 temp___273))) (=> (and (and (dynamic_invariant temp___271 true true true true) (dynamic_invariant temp___272 true true true true)) (dynamic_invariant temp___273 true true true true)) (forall ((temp___274 Int) (temp___275 Int)) (ite (= temp___274 7) (= (get temp___270 temp___274 temp___275) rliteral) (ite (= temp___274 5) (= (get temp___270 temp___274 temp___275) rliteral1) (= (get temp___270 temp___274 temp___275) rliteral2))))))))
(assert (forall ((temp___289 Int)) (=> (dynamic_invariant temp___289 true true true true) (forall ((temp___290 Int) (temp___291 Int)) (= (get (temp_____aggregate_def_287 temp___289) temp___290 temp___291) rliteral2)))))
(declare-const m map1)
(declare-const tmp Int)
(declare-const c Int)
(declare-const tmp1 Int)
(declare-const c1 Int)
(declare-const temp___266 Int)
(declare-const temp___263 map1)
(declare-const temp___268 map1)
(declare-const temp___267 map1)
(declare-const temp___262 Int)
(declare-const o natural)
(declare-const o1 map1)
(declare-const o2 natural)
(declare-const o3 map1)
(declare-const o4 natural)
(declare-const o5 map1)
(declare-const o6 natural)
(declare-const o7 map1)
(declare-const tmp2 Int)
(declare-const result map1)
(declare-const m1 map1)
(declare-const result1 Int)
(declare-const c2 Int)
(declare-const m2 map1)
(declare-const tmp3 Int)
(declare-const c3 Int)
(declare-const result2 Int)
(declare-const tmp4 Int)
(declare-const result3 map1)
(declare-const m3 map1)
(declare-const result4 map1)
(declare-const m4 map1)
(declare-const m5 map1)
(declare-const tmp5 Int)
(declare-const c4 Int)
(declare-const m6 map1)
(declare-const tmp6 Int)
(declare-const c5 Int)
(declare-const m7 map1)
(declare-const tmp7 Int)
(declare-const c6 Int)
(declare-const m8 map1)
(declare-const tmp8 Int)
(declare-const c7 Int)
(declare-const result5 map__ref)
(declare-const m9 map1)
(declare-const result6 int__ref)
(declare-const c8 Int)
(declare-const m10 map1)
(declare-const tmp9 Int)
(declare-const c9 Int)
(declare-const result7 int__ref)
(declare-const tmp10 Int)
(declare-const result8 map__ref)
(declare-const m11 map1)
(declare-const result9 map__ref)
(declare-const m12 map1)
(declare-const result10 int__ref)
(declare-const c10 Int)
(declare-const m13 map__ref)
(declare-const tmp11 int__ref)
(declare-const c11 int__ref)
(declare-const m14 map1)
(declare-const tmp12 Int)
(declare-const c12 Int)
(define-fun tmp13 () int__ref (mk_int__ref tmp7))
(define-fun m15 () map__ref (mk_map__ref m7))
(assert (= result m))
(assert (= m1 (temp_____aggregate_def_253 1 2 0)))
(assert (= m1 c62b))
(assert (=> (<= 0 2147483647) (in_range2 tmp)))
(assert (= (mk_int__ref result1) (mk_int__ref c)))
(assert (= c2 1))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= temp___266 c2)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= temp___263 m1)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= temp___268 m1)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= temp___267 m1)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= temp___262 tmp)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (forall ((i Int)) (=> (and (<= 1 i) (<= i (- c3 1))) (and (= (to_rep (get m2 5 i)) (to_rep (get temp___267 7 i))) (= (to_rep (get m2 7 i)) (to_rep (get temp___268 5 i))))))))
(assert (=> (and (<= 1 c2) (<= c2 10)) (and (and (and (=> (<= 0 2147483647) (in_range2 tmp3)) (forall ((temp___264 Int) (temp___265 Int)) (=> (and (and (<= 1 temp___264) (<= temp___264 10)) (and (<= 1 temp___265) (<= temp___265 10))) (=> (and (or (< 10 temp___265) (or (< temp___265 1) (or (<= c3 temp___265) (not (= 7 temp___264))))) (or (< 10 temp___265) (or (< temp___265 1) (or (<= c3 temp___265) (not (= 5 temp___264)))))) (= (get m2 temp___264 temp___265) (get temp___263 temp___264 temp___265)))))) (=> (<= 1 10) (in_range5 c3))) (and (<= 1 c3) (<= c3 10)))))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= tmp3 result2)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= tmp4 (to_rep (get m2 5 c3)))))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= (to_rep o) (to_rep (get m2 7 c3)))))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= o1 (set m2 5 c3 o))))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= m2 result3)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= m3 o1)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= (to_rep o2) tmp4)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= o3 (set m3 7 c3 o2))))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= m3 result4)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= m4 o3)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= c3 10)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= c3 c4)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= tmp4 tmp5)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= m4 m5)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= c5 c3)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= tmp6 tmp4)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= m6 m4)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= (mk_int__ref c6) (mk_int__ref c4))))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= tmp13 (mk_int__ref tmp5))))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= m15 (mk_map__ref m5))))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= c7 c5)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= tmp8 tmp6)))
(assert (=> (and (<= 1 c2) (<= c2 10)) (= m8 m6)))
(assert (=> (not (and (<= 1 c2) (<= c2 10))) (= c2 c6)))
(assert (=> (not (and (<= 1 c2) (<= c2 10))) (= tmp13 (mk_int__ref tmp))))
(assert (=> (not (and (<= 1 c2) (<= c2 10))) (= m1 m7)))
(assert (=> (not (and (<= 1 c2) (<= c2 10))) (= c7 c2)))
(assert (=> (not (and (<= 1 c2) (<= c2 10))) (= tmp8 tmp2)))
(assert (=> (not (and (<= 1 c2) (<= c2 10))) (= m8 m1)))
(assert (forall ((i Int)) (=> (and (<= 1 i) (<= i 10)) (forall ((j Int)) (=> (and (<= 1 j) (<= j 10)) (ite (= i 5) (= (to_rep (get m7 i j)) 2) (ite (= i 7) (= (to_rep (get m7 i j)) 1) (= (to_rep (get m7 i j)) 0))))))))
(assert (= result5 m15))
(assert (= m9 (temp_____aggregate_def_269 1 2 0)))
(assert (= m9 c77b))
(assert (=> (<= 0 2147483647) (in_range2 tmp1)))
(assert (= result6 (mk_int__ref c1)))
(assert (= c8 0))
(assert (<= 0 c8))
(assert (<= c8 9))
(assert (forall ((i Int)) (=> (and (<= 1 i) (<= i c9)) (and (= (to_rep (get m10 5 i)) (to_rep (get m9 7 i))) (= (to_rep (get m10 7 i)) (to_rep (get m9 5 i)))))))
(assert (forall ((i Int)) (=> (and (<= (+ c9 1) i) (<= i 10)) (and (= (to_rep (get m10 5 i)) (to_rep (get m9 5 i))) (= (to_rep (get m10 7 i)) (to_rep (get m9 7 i)))))))
(assert (and (and (and (=> (<= 0 9) (in_range6 c9)) (forall ((temp___280 Int) (temp___281 Int)) (=> (and (and (<= 1 temp___280) (<= temp___280 10)) (and (<= 1 temp___281) (<= temp___281 10))) (=> (and (not (= 7 temp___280)) (not (= 5 temp___280))) (= (get m10 temp___280 temp___281) (get m9 temp___280 temp___281)))))) (=> (<= 0 2147483647) (in_range2 tmp9))) (and (<= 0 c9) (<= c9 9))))
(assert (= result7 (mk_int__ref tmp9)))
(assert (= tmp10 (to_rep (get m10 5 (+ c9 1)))))
(assert (= (to_rep o4) (to_rep (get m10 7 (+ c9 1)))))
(assert (= o5 (set m10 5 (+ c9 1) o4)))
(assert (= result8 (mk_map__ref m10)))
(assert (= m11 o5))
(assert (= (to_rep o6) tmp10))
(assert (= o7 (set m11 7 (+ c9 1) o6)))
(assert (= result9 (mk_map__ref m11)))
(assert (= m12 o7))
(assert (not (= c9 9)))
(assert (= result10 (mk_int__ref c9)))
(assert (= c10 (+ c9 1)))
(assert (= c11 (mk_int__ref c10)))
(assert (= tmp11 (mk_int__ref tmp10)))
(assert (= m13 (mk_map__ref m12)))
(assert (= c12 c10))
(assert (= tmp12 tmp10))
(assert (= m14 m12))
(declare-const i Int)
(assert (<= (+ (int__content c11) 1) i))
(assert (<= i 10))
(assert (not (= (to_rep (get (map__content m13) 7 i)) (to_rep (get m9 7 i)))))
(check-sat)
(exit)
