(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort t 0)
(declare-fun tqtint (t) Int)
(assert (forall ((i t)) (and (<= (- 10000) (tqtint i)) (<= (tqtint i) 10000))))
(define-fun in_range ((x Int)) Bool (and (<= (- 10000) x) (<= x 10000)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (t t) Bool)
(declare-const dummy t)
(declare-datatypes () ((t__ref (mk_t__ref (t__content t)))))
(define-fun t__ref___projection ((a t__ref)) t (t__content a))
(define-fun dynamic_invariant ((temp___expr_158 Int) (temp___is_init_154 Bool) (temp___skip_constant_155 Bool) (temp___do_toplevel_156 Bool) (temp___do_typ_inv_157 Bool)) Bool (=> (or (= temp___is_init_154 true) (<= (- 10000) 10000)) (in_range temp___expr_158)))
(declare-const x Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const const__incr__result Int)
(declare-const o Int)
(declare-const result Int)
(declare-const const__incr__result1 Int)
(declare-const const__incr__result2 Int)
(declare-const const__incr__result3 Int)
(declare-const const__incr__result4 Int)
(declare-const const__incr__result5 Int)
(declare-const result1 Int)
(assert (in_range x))
(assert (< x 10000))
(assert (= const__incr__result1 const__incr__result2))
(assert (= const__incr__result3 const__incr__result1))
(assert (and (= o (+ x 1)) (in_range (+ x 1))))
(assert (= result const__incr__result))
(assert (= const__incr__result1 o))
(assert (= (mk_int__ref const__incr__result4) (mk_int__ref const__incr__result2)))
(assert (= const__incr__result5 const__incr__result3))
(assert (= result1 const__incr__result4))
(assert (not (<= x 10000)))
(check-sat)
(exit)
