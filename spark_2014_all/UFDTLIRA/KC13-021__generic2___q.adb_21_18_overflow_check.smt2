(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range1 temp___expr_39)))
(declare-sort t1 0)
(declare-fun t1qtint (t1) Int)
(assert (forall ((i t1)) (and (<= (- 2147483648) (t1qtint i)) (<= (t1qtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (t1 t1) Bool)
(declare-const dummy2 t1)
(declare-datatypes () ((t1__ref (mk_t1__ref (t1__content t1)))))
(define-fun t1__ref___projection ((a t1__ref)) t1 (t1__content a))
(define-fun to_rep1 ((x t1)) Int (t1qtint x))
(declare-fun of_rep1 (Int) t1)
(assert (forall ((x t1)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x t1)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t3 0)
(declare-fun t3qtint (t3) Int)
(assert (forall ((i t3)) (and (<= 0 (t3qtint i)) (<= (t3qtint i) 2147483647))))
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (t3 t3) Bool)
(declare-const dummy3 t3)
(declare-datatypes () ((t3__ref (mk_t3__ref (t3__content t3)))))
(define-fun t3__ref___projection ((a t3__ref)) t3 (t3__content a))
(define-fun to_rep2 ((x t3)) Int (t3qtint x))
(declare-fun of_rep2 (Int) t3)
(assert (forall ((x t3)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x t3)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__q__p1__r__a t1) (rec__q__p1__r__b Bool) (rec__q__p1__r__c t3) (rec__q__p1__r__d integer)))))
(define-fun us_split_fields_A__projection ((a us_split_fields)) t1 (rec__q__p1__r__a a))
(define-fun us_split_fields_B__projection ((a us_split_fields)) Bool (rec__q__p1__r__b a))
(define-fun us_split_fields_C__projection ((a us_split_fields)) t3 (rec__q__p1__r__c a))
(define-fun us_split_fields_D__projection ((a us_split_fields)) integer (rec__q__p1__r__d a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (to_rep1 (rec__q__p1__r__a (us_split_fields1 a))) (to_rep1 (rec__q__p1__r__a (us_split_fields1 b)))) (= (rec__q__p1__r__b (us_split_fields1 a)) (rec__q__p1__r__b (us_split_fields1 b)))) (= (to_rep2 (rec__q__p1__r__c (us_split_fields1 a))) (to_rep2 (rec__q__p1__r__c (us_split_fields1 b))))) (= (to_rep (rec__q__p1__r__d (us_split_fields1 a))) (to_rep (rec__q__p1__r__d (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const q__p1__r__a__first__bit Int)
(declare-const q__p1__r__a__last__bit Int)
(declare-const q__p1__r__a__position Int)
(assert (<= 0 q__p1__r__a__first__bit))
(assert (< q__p1__r__a__first__bit q__p1__r__a__last__bit))
(assert (<= 0 q__p1__r__a__position))
(declare-const q__p1__r__b__first__bit Int)
(declare-const q__p1__r__b__last__bit Int)
(declare-const q__p1__r__b__position Int)
(assert (<= 0 q__p1__r__b__first__bit))
(assert (< q__p1__r__b__first__bit q__p1__r__b__last__bit))
(assert (<= 0 q__p1__r__b__position))
(declare-const q__p1__r__c__first__bit Int)
(declare-const q__p1__r__c__last__bit Int)
(declare-const q__p1__r__c__position Int)
(assert (<= 0 q__p1__r__c__first__bit))
(assert (< q__p1__r__c__first__bit q__p1__r__c__last__bit))
(assert (<= 0 q__p1__r__c__position))
(declare-const q__p1__r__d__first__bit Int)
(declare-const q__p1__r__d__last__bit Int)
(declare-const q__p1__r__d__position Int)
(assert (<= 0 q__p1__r__d__first__bit))
(assert (< q__p1__r__d__first__bit q__p1__r__d__last__bit))
(assert (<= 0 q__p1__r__d__position))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((r__ref (mk_r__ref (r__content us_rep)))))
(define-fun r__ref___projection ((a r__ref)) us_rep (r__content a))
(declare-fun pack (Int Bool Int) us_rep)
(declare-fun pack__function_guard (us_rep Int Bool Int) Bool)
(define-fun dynamic_invariant2 ((temp___expr_158 Int) (temp___is_init_154 Bool) (temp___skip_constant_155 Bool) (temp___do_toplevel_156 Bool) (temp___do_typ_inv_157 Bool)) Bool (=> (or (= temp___is_init_154 true) (<= (- 2147483648) 2147483647)) (in_range2 temp___expr_158)))
(define-fun dynamic_invariant3 ((temp___expr_165 Int) (temp___is_init_161 Bool) (temp___skip_constant_162 Bool) (temp___do_toplevel_163 Bool) (temp___do_typ_inv_164 Bool)) Bool (=> (or (= temp___is_init_161 true) (<= 0 2147483647)) (in_range3 temp___expr_165)))
(assert true)
(declare-sort t2 0)
(declare-fun t2qtint (t2) Int)
(assert (forall ((i t2)) (and (<= (- 2147483648) (t2qtint i)) (<= (t2qtint i) 2147483647))))
(define-fun in_range4 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (t2 t2) Bool)
(declare-const dummy5 t2)
(declare-datatypes () ((t2__ref (mk_t2__ref (t2__content t2)))))
(define-fun t2__ref___projection ((a t2__ref)) t2 (t2__content a))
(define-fun to_rep3 ((x t2)) Int (t2qtint x))
(declare-fun of_rep3 (Int) t2)
(assert (forall ((x t2)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x t2)) (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort t31 0)
(declare-fun t3qtint1 (t31) Int)
(assert (forall ((i t31)) (and (<= 0 (t3qtint1 i)) (<= (t3qtint1 i) 2147483647))))
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (t31 t31) Bool)
(declare-const dummy6 t31)
(declare-datatypes () ((t3__ref1 (mk_t3__ref1 (t3__content1 t31)))))
(define-fun t3__ref___2__projection ((a t3__ref1)) t31 (t3__content1 a))
(define-fun to_rep4 ((x t31)) Int (t3qtint1 x))
(declare-fun of_rep4 (Int) t31)
(assert (forall ((x t31)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x t31)) (! (in_range5 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__q__p2__r__a Bool) (rec__q__p2__r__b t2) (rec__q__p2__r__c t31) (rec__q__p2__r__d integer)))))
(define-fun us_split_fields_A__2__projection ((a us_split_fields2)) Bool (rec__q__p2__r__a a))
(define-fun us_split_fields_B__2__projection ((a us_split_fields2)) t2 (rec__q__p2__r__b a))
(define-fun us_split_fields_C__2__projection ((a us_split_fields2)) t31 (rec__q__p2__r__c a))
(define-fun us_split_fields_D__2__projection ((a us_split_fields2)) integer (rec__q__p2__r__d a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___2__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (rec__q__p2__r__a (us_split_fields3 a)) (rec__q__p2__r__a (us_split_fields3 b))) (= (to_rep3 (rec__q__p2__r__b (us_split_fields3 a))) (to_rep3 (rec__q__p2__r__b (us_split_fields3 b))))) (= (to_rep4 (rec__q__p2__r__c (us_split_fields3 a))) (to_rep4 (rec__q__p2__r__c (us_split_fields3 b))))) (= (to_rep (rec__q__p2__r__d (us_split_fields3 a))) (to_rep (rec__q__p2__r__d (us_split_fields3 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const q__p2__r__a__first__bit Int)
(declare-const q__p2__r__a__last__bit Int)
(declare-const q__p2__r__a__position Int)
(assert (<= 0 q__p2__r__a__first__bit))
(assert (< q__p2__r__a__first__bit q__p2__r__a__last__bit))
(assert (<= 0 q__p2__r__a__position))
(declare-const q__p2__r__b__first__bit Int)
(declare-const q__p2__r__b__last__bit Int)
(declare-const q__p2__r__b__position Int)
(assert (<= 0 q__p2__r__b__first__bit))
(assert (< q__p2__r__b__first__bit q__p2__r__b__last__bit))
(assert (<= 0 q__p2__r__b__position))
(declare-const q__p2__r__c__first__bit Int)
(declare-const q__p2__r__c__last__bit Int)
(declare-const q__p2__r__c__position Int)
(assert (<= 0 q__p2__r__c__first__bit))
(assert (< q__p2__r__c__first__bit q__p2__r__c__last__bit))
(assert (<= 0 q__p2__r__c__position))
(declare-const q__p2__r__d__first__bit Int)
(declare-const q__p2__r__d__last__bit Int)
(declare-const q__p2__r__d__position Int)
(assert (<= 0 q__p2__r__d__first__bit))
(assert (< q__p2__r__d__first__bit q__p2__r__d__last__bit))
(assert (<= 0 q__p2__r__d__position))
(declare-fun user_eq7 (us_rep1 us_rep1) Bool)
(declare-const dummy7 us_rep1)
(declare-datatypes () ((r__ref1 (mk_r__ref1 (r__content1 us_rep1)))))
(define-fun r__ref___2__projection ((a r__ref1)) us_rep1 (r__content1 a))
(declare-fun pack1 (Bool Int Int) us_rep1)
(declare-fun pack__function_guard1 (us_rep1 Bool Int Int) Bool)
(define-fun dynamic_invariant4 ((temp___expr_183 Int) (temp___is_init_179 Bool) (temp___skip_constant_180 Bool) (temp___do_toplevel_181 Bool) (temp___do_typ_inv_182 Bool)) Bool (=> (or (= temp___is_init_179 true) (<= (- 2147483648) 2147483647)) (in_range4 temp___expr_183)))
(define-fun dynamic_invariant5 ((temp___expr_190 Int) (temp___is_init_186 Bool) (temp___skip_constant_187 Bool) (temp___do_toplevel_188 Bool) (temp___do_typ_inv_189 Bool)) Bool (=> (or (= temp___is_init_186 true) (<= 0 2147483647)) (in_range5 temp___expr_190)))
(assert true)
(declare-const x1 Bool)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const x2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const x3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const x4 Int)
(declare-const r1__split_fields t1)
(declare-const r1__split_fields1 Bool)
(declare-const r1__split_fields2 t3)
(declare-const r1__split_fields3 integer)
(declare-const r2__split_fields Bool)
(declare-const r2__split_fields1 t2)
(declare-const r2__split_fields2 t31)
(declare-const r2__split_fields3 integer)
(declare-const temp___211 t1)
(declare-const temp___2111 Bool)
(declare-const temp___2112 t3)
(declare-const temp___2113 integer)
(declare-const temp___212 Bool)
(declare-const temp___2121 t2)
(declare-const temp___2122 t31)
(declare-const temp___2123 integer)
(declare-const result t1)
(declare-const result1 Bool)
(declare-const result2 t3)
(declare-const result3 integer)
(declare-const r1__split_fields4 t1)
(declare-const r1__split_fields5 Bool)
(declare-const r1__split_fields6 t3)
(declare-const r1__split_fields7 integer)
(declare-const result4 Bool)
(declare-const result5 t2)
(declare-const result6 t31)
(declare-const result7 integer)
(declare-const r2__split_fields4 Bool)
(declare-const r2__split_fields5 t2)
(declare-const r2__split_fields6 t31)
(declare-const r2__split_fields7 integer)
(assert (in_range x2))
(assert (in_range1 x3))
(assert (=> (<= (- 2147483648) 2147483647) (in_range x4)))
(assert (= (mk___rep (mk___split_fields temp___211 temp___2111 temp___2112 temp___2113)) (pack x2 x1 x3)))
(assert (= result r1__split_fields))
(assert (= result1 r1__split_fields1))
(assert (= result2 r1__split_fields2))
(assert (= result3 r1__split_fields3))
(assert (= temp___211 r1__split_fields4))
(assert (= temp___2111 r1__split_fields5))
(assert (= temp___2112 r1__split_fields6))
(assert (= temp___2113 r1__split_fields7))
(assert (= (mk___rep1 (mk___split_fields1 temp___212 temp___2121 temp___2122 temp___2123)) (pack1 x1 x2 x3)))
(assert (= result4 r2__split_fields))
(assert (= result5 r2__split_fields1))
(assert (= result6 r2__split_fields2))
(assert (= result7 r2__split_fields3))
(assert (= temp___212 r2__split_fields4))
(assert (= temp___2121 r2__split_fields5))
(assert (= temp___2122 r2__split_fields6))
(assert (= temp___2123 r2__split_fields7))
(assert (not (in_range (+ (to_rep r1__split_fields7) (to_rep r2__split_fields7)))))
(check-sat)
(exit)
