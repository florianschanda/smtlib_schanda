(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort natural 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range1 temp___expr_39)))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep 0)
(declare-fun bool_eq (us_rep us_rep) Bool)
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((file__ref (mk_file__ref (file__content us_rep)))))
(define-fun file__ref___projection ((a file__ref)) us_rep (file__content a))
(declare-sort read_status 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (read_status read_status) Bool)
(declare-const dummy4 read_status)
(declare-datatypes () ((read_status__ref (mk_read_status__ref (read_status__content read_status)))))
(define-fun read_status__ref___projection ((a read_status__ref)) read_status (read_status__content a))
(declare-fun to_rep1 (read_status) Int)
(declare-fun of_rep1 (Int) read_status)
(assert (forall ((x read_status)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x read_status)) (! (in_range4 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__file_io__read_result__status read_status)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) read_status (rec__file_io__read_result__status a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__file_io__read_result__c character)))))
(define-fun us_split_fields_C__projection ((a us_split_fields)) character (rec__file_io__read_result__c a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep1 (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields) (attr__constrained Bool)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___5__projection ((a us_rep1)) Bool (attr__constrained a))
(define-fun file_io__read_result__c__pred ((a us_rep1)) Bool (= (to_rep1 (rec__file_io__read_result__status (us_split_discrs1 a))) 0))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep1 (rec__file_io__read_result__status (us_split_discrs1 a))) (to_rep1 (rec__file_io__read_result__status (us_split_discrs1 b)))) (=> (file_io__read_result__c__pred a) (= (to_rep (rec__file_io__read_result__c (us_split_fields1 a))) (to_rep (rec__file_io__read_result__c (us_split_fields1 b)))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const file_io__read_result__status__first__bit Int)
(declare-const file_io__read_result__status__last__bit Int)
(declare-const file_io__read_result__status__position Int)
(assert (<= 0 file_io__read_result__status__first__bit))
(assert (< file_io__read_result__status__first__bit file_io__read_result__status__last__bit))
(assert (<= 0 file_io__read_result__status__position))
(declare-const file_io__read_result__c__first__bit Int)
(declare-const file_io__read_result__c__last__bit Int)
(declare-const file_io__read_result__c__position Int)
(assert (<= 0 file_io__read_result__c__first__bit))
(assert (< file_io__read_result__c__first__bit file_io__read_result__c__last__bit))
(assert (<= 0 file_io__read_result__c__position))
(declare-fun user_eq5 (us_rep1 us_rep1) Bool)
(declare-const dummy5 us_rep1)
(declare-datatypes () ((read_result__ref (mk_read_result__ref (read_result__content us_rep1)))))
(define-fun read_result__ref___projection ((a read_result__ref)) us_rep1 (read_result__content a))
(define-fun default_initial_assumption ((temp___expr_531 us_rep1) (temp___skip_top_level_532 Bool)) Bool (and (= (attr__constrained temp___expr_531) false) (= (to_rep1 (rec__file_io__read_result__status (us_split_discrs1 temp___expr_531))) 2)))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const current_read__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const next_read__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-fun local_invariant (us_rep us_split_fields us_split_discrs Int us_split_fields us_split_discrs Int) Bool)
(declare-fun local_invariant__function_guard (Bool us_rep us_split_fields us_split_discrs Int us_split_fields us_split_discrs Int) Bool)
(declare-fun size (us_rep) Int)
(declare-fun size__function_guard (Int us_rep) Bool)
(declare-fun index (us_rep) Int)
(declare-fun index__function_guard (Int us_rep) Bool)
(assert (forall ((lexer__the_file us_rep)) (forall ((lexer__current_read__fields us_split_fields) (lexer__next_read__fields us_split_fields)) (forall ((lexer__current_read__discrs us_split_discrs) (lexer__next_read__discrs us_split_discrs)) (forall ((lexer__current_idx Int) (lexer__next_idx Int)) (! (= (= (local_invariant lexer__the_file lexer__current_read__fields lexer__current_read__discrs lexer__current_idx lexer__next_read__fields lexer__next_read__discrs lexer__next_idx) true) (and (and (and (and (and (and (not (= (attr__constrained (mk___rep lexer__current_read__discrs lexer__current_read__fields current_read__attr__constrained)) true)) (not (= (attr__constrained (mk___rep lexer__next_read__discrs lexer__next_read__fields next_read__attr__constrained)) true))) (<= lexer__current_idx (size lexer__the_file))) (<= lexer__next_idx (size lexer__the_file))) (= lexer__next_idx (index lexer__the_file))) (<= lexer__current_idx lexer__next_idx)) (ite (= (to_rep1 (rec__file_io__read_result__status (us_split_discrs1 (mk___rep lexer__next_read__discrs lexer__next_read__fields next_read__attr__constrained)))) 0) (and (= (to_rep1 (rec__file_io__read_result__status (us_split_discrs1 (mk___rep lexer__current_read__discrs lexer__current_read__fields current_read__attr__constrained)))) 0) (= lexer__current_idx (- lexer__next_idx 1))) (= lexer__current_idx lexer__next_idx)))) :pattern ((local_invariant lexer__the_file lexer__current_read__fields lexer__current_read__discrs lexer__current_idx lexer__next_read__fields lexer__next_read__discrs lexer__next_idx))))))))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(define-fun dynamic_invariant2 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant3 ((temp___expr_522 Int) (temp___is_init_518 Bool) (temp___skip_constant_519 Bool) (temp___do_toplevel_520 Bool) (temp___do_typ_inv_521 Bool)) Bool (=> (or (= temp___is_init_518 true) (<= 0 2)) (in_range4 temp___expr_522)))
(declare-const the_file us_rep)
(declare-const current_read__split_fields character)
(declare-const current_read__split_discrs read_status)
(declare-const current_line Int)
(declare-const current_col Int)
(declare-const current_idx Int)
(declare-const next_read__split_fields character)
(declare-const next_read__split_discrs read_status)
(declare-const next_idx Int)
(declare-const temp___1012 Int)
(declare-const temp___1011 us_rep)
(declare-const temp___1013 Int)
(declare-const temp___1010 read_status)
(declare-const temp___10101 character)
(declare-const temp___10102 Bool)
(declare-const temp___1009 Int)
(declare-const temp___1008 Int)
(declare-const temp___1007 Int)
(declare-const temp___1006 read_status)
(declare-const temp___10061 character)
(declare-const temp___10062 Bool)
(declare-const temp___1014 Int)
(declare-const temp___10141 Int)
(declare-const the_file1 us_rep)
(declare-const current_read__split_fields1 us_split_fields)
(declare-const current_read__split_discrs1 us_split_discrs)
(declare-const current_line1 Int)
(declare-const current_col1 Int)
(declare-const current_idx1 Int)
(declare-const next_read__split_fields1 us_split_fields)
(declare-const next_read__split_discrs1 us_split_discrs)
(declare-const next_idx1 Int)
(declare-const the_file2 us_rep)
(declare-const current_read__split_fields2 us_split_fields)
(declare-const current_read__split_discrs2 us_split_discrs)
(declare-const current_line2 Int)
(declare-const current_col2 Int)
(declare-const current_idx2 Int)
(declare-const next_read__split_fields2 us_split_fields)
(declare-const next_read__split_discrs2 us_split_discrs)
(declare-const next_idx2 Int)
(declare-const the_file3 us_rep)
(declare-const current_read__split_fields3 us_split_fields)
(declare-const current_read__split_discrs3 us_split_discrs)
(declare-const current_line3 Int)
(declare-const current_col3 Int)
(declare-const current_idx3 Int)
(declare-const next_read__split_fields3 us_split_fields)
(declare-const next_read__split_discrs3 us_split_discrs)
(declare-const next_idx3 Int)
(declare-const temp___10142 Int)
(declare-const result int__ref)
(declare-const temp___10143 Int)
(declare-const the_file4 us_rep)
(declare-const current_read__split_fields4 us_split_fields)
(declare-const current_read__split_discrs4 us_split_discrs)
(declare-const current_line4 Int)
(declare-const current_col4 Int)
(declare-const current_idx4 Int)
(declare-const next_read__split_fields4 us_split_fields)
(declare-const next_read__split_discrs4 us_split_discrs)
(declare-const next_idx4 Int)
(declare-const the_file5 us_rep)
(declare-const current_read__split_fields5 us_split_fields)
(declare-const current_read__split_discrs5 us_split_discrs)
(declare-const current_line5 Int)
(declare-const current_col5 Int)
(declare-const current_idx5 Int)
(declare-const next_read__split_fields5 us_split_fields)
(declare-const next_read__split_discrs5 us_split_discrs)
(declare-const next_idx5 Int)
(declare-const the_file6 file__ref)
(declare-const current_read__split_fields6 us_split_fields__ref)
(declare-const current_read__split_discrs6 us_split_discrs__ref)
(declare-const current_line6 int__ref)
(declare-const current_col6 int__ref)
(declare-const current_idx6 int__ref)
(declare-const next_read__split_fields6 us_split_fields__ref)
(declare-const next_read__split_discrs6 us_split_discrs__ref)
(declare-const next_idx6 int__ref)
(declare-const the_file7 us_rep)
(declare-const current_read__split_fields7 us_split_fields)
(declare-const current_read__split_discrs7 us_split_discrs)
(declare-const current_line7 Int)
(declare-const current_col7 Int)
(declare-const current_idx7 Int)
(declare-const next_read__split_fields7 us_split_fields)
(declare-const next_read__split_discrs7 us_split_discrs)
(declare-const next_idx7 Int)
(declare-const the_file8 file__ref)
(declare-const current_read__split_fields8 us_split_fields__ref)
(declare-const current_read__split_discrs8 us_split_discrs__ref)
(declare-const current_line8 int__ref)
(declare-const current_col8 int__ref)
(declare-const current_idx8 int__ref)
(declare-const next_read__split_fields8 us_split_fields__ref)
(declare-const next_read__split_discrs8 us_split_discrs__ref)
(declare-const next_idx8 int__ref)
(declare-const the_file9 us_rep)
(declare-const current_read__split_fields9 us_split_fields)
(declare-const current_read__split_discrs9 us_split_discrs)
(declare-const current_line9 Int)
(declare-const current_col9 Int)
(declare-const current_idx9 Int)
(declare-const next_read__split_fields9 us_split_fields)
(declare-const next_read__split_discrs9 us_split_discrs)
(declare-const next_idx9 Int)
(declare-const the_file10 file__ref)
(declare-const current_read__split_fields10 us_split_fields__ref)
(declare-const current_read__split_discrs10 us_split_discrs__ref)
(declare-const current_line10 int__ref)
(declare-const current_col10 int__ref)
(declare-const current_idx10 int__ref)
(declare-const next_read__split_fields10 us_split_fields__ref)
(declare-const next_read__split_discrs10 us_split_discrs__ref)
(declare-const next_idx10 int__ref)
(declare-const the_file11 us_rep)
(declare-const current_read__split_fields11 us_split_fields)
(declare-const current_read__split_discrs11 us_split_discrs)
(declare-const current_line11 Int)
(declare-const current_col11 Int)
(declare-const current_idx11 Int)
(declare-const next_read__split_fields11 us_split_fields)
(declare-const next_read__split_discrs11 us_split_discrs)
(declare-const next_idx11 Int)
(declare-const the_file12 file__ref)
(declare-const current_read__split_fields12 us_split_fields__ref)
(declare-const current_read__split_discrs12 us_split_discrs__ref)
(declare-const current_line12 int__ref)
(declare-const current_col12 int__ref)
(declare-const current_idx12 int__ref)
(declare-const next_read__split_fields12 us_split_fields__ref)
(declare-const next_read__split_discrs12 us_split_discrs__ref)
(declare-const next_idx12 int__ref)
(declare-const temp___10144 int__ref)
(declare-const the_file13 us_rep)
(declare-const current_read__split_fields13 us_split_fields)
(declare-const current_read__split_discrs13 us_split_discrs)
(declare-const current_line13 Int)
(declare-const current_col13 Int)
(declare-const current_idx13 Int)
(declare-const next_read__split_fields13 us_split_fields)
(declare-const next_read__split_discrs13 us_split_discrs)
(declare-const next_idx13 Int)
(declare-const temp___10145 Int)
(declare-const the_file14 file__ref)
(declare-const current_read__split_fields14 us_split_fields__ref)
(declare-const current_read__split_discrs14 us_split_discrs__ref)
(declare-const current_line14 int__ref)
(declare-const current_col14 int__ref)
(declare-const current_idx14 int__ref)
(declare-const next_read__split_fields14 us_split_fields__ref)
(declare-const next_read__split_discrs14 us_split_discrs__ref)
(declare-const next_idx14 int__ref)
(declare-const temp___10146 int__ref)
(declare-const the_file15 us_rep)
(declare-const current_read__split_fields15 us_split_fields)
(declare-const current_read__split_discrs15 us_split_discrs)
(declare-const current_line15 Int)
(declare-const current_col15 Int)
(declare-const current_idx15 Int)
(declare-const next_read__split_fields15 us_split_fields)
(declare-const next_read__split_discrs15 us_split_discrs)
(declare-const next_idx15 Int)
(declare-const temp___10147 Int)
(declare-const the_file16 file__ref)
(declare-const current_read__split_fields16 us_split_fields__ref)
(declare-const current_read__split_discrs16 us_split_discrs__ref)
(declare-const current_line16 int__ref)
(declare-const current_col16 int__ref)
(declare-const current_idx16 int__ref)
(declare-const next_read__split_fields16 us_split_fields__ref)
(declare-const next_read__split_discrs16 us_split_discrs__ref)
(declare-const next_idx16 int__ref)
(declare-const temp___10148 int__ref)
(declare-const the_file17 us_rep)
(declare-const current_read__split_fields17 us_split_fields)
(declare-const current_read__split_discrs17 us_split_discrs)
(declare-const current_line17 Int)
(declare-const current_col17 Int)
(declare-const current_idx17 Int)
(declare-const next_read__split_fields17 us_split_fields)
(declare-const next_read__split_discrs17 us_split_discrs)
(declare-const next_idx17 Int)
(declare-const temp___10149 Int)
(declare-const the_file18 file__ref)
(declare-const current_read__split_fields18 us_split_fields__ref)
(declare-const current_read__split_discrs18 us_split_discrs__ref)
(declare-const current_line18 int__ref)
(declare-const current_col18 int__ref)
(declare-const current_idx18 int__ref)
(declare-const next_read__split_fields18 us_split_fields__ref)
(declare-const next_read__split_discrs18 us_split_discrs__ref)
(declare-const next_idx18 int__ref)
(declare-const the_file19 us_rep)
(declare-const current_read__split_fields19 us_split_fields)
(declare-const current_read__split_discrs19 us_split_discrs)
(declare-const current_line19 Int)
(declare-const current_col19 Int)
(declare-const current_idx19 Int)
(declare-const next_read__split_fields19 us_split_fields)
(declare-const next_read__split_discrs19 us_split_discrs)
(declare-const next_idx19 Int)
(declare-const the_file20 file__ref)
(declare-const current_read__split_fields20 us_split_fields__ref)
(declare-const current_read__split_discrs20 us_split_discrs__ref)
(declare-const current_line20 int__ref)
(declare-const current_col20 int__ref)
(declare-const current_idx20 int__ref)
(declare-const next_read__split_fields20 us_split_fields__ref)
(declare-const next_read__split_discrs20 us_split_discrs__ref)
(declare-const next_idx20 int__ref)
(declare-const the_file21 us_rep)
(declare-const current_read__split_fields21 us_split_fields)
(declare-const current_read__split_discrs21 us_split_discrs)
(declare-const current_line21 Int)
(declare-const current_col21 Int)
(declare-const current_idx21 Int)
(declare-const next_read__split_fields21 us_split_fields)
(declare-const next_read__split_discrs21 us_split_discrs)
(declare-const next_idx21 Int)
(declare-const the_file22 file__ref)
(declare-const current_read__split_fields22 us_split_fields__ref)
(declare-const current_read__split_discrs22 us_split_discrs__ref)
(declare-const current_line22 int__ref)
(declare-const current_col22 int__ref)
(declare-const current_idx22 int__ref)
(declare-const next_read__split_fields22 us_split_fields__ref)
(declare-const next_read__split_discrs22 us_split_discrs__ref)
(declare-const next_idx22 int__ref)
(declare-const the_file23 us_rep)
(declare-const current_read__split_fields23 us_split_fields)
(declare-const current_read__split_discrs23 us_split_discrs)
(declare-const current_line23 Int)
(declare-const current_col23 Int)
(declare-const current_idx23 Int)
(declare-const next_read__split_fields23 us_split_fields)
(declare-const next_read__split_discrs23 us_split_discrs)
(declare-const next_idx23 Int)
(define-fun temp___101410 () int__ref (mk_int__ref temp___1014))
(assert (= current_read__attr__constrained false))
(assert (in_range2 current_line))
(assert (in_range1 current_col))
(assert (in_range1 current_idx))
(assert (= next_read__attr__constrained false))
(assert (in_range1 next_idx))
(assert (= (local_invariant the_file (mk___split_fields current_read__split_fields) (mk___split_discrs current_read__split_discrs) current_idx (mk___split_fields next_read__split_fields) (mk___split_discrs next_read__split_discrs) next_idx) true))
(assert (= temp___1012 next_idx))
(assert (= temp___1011 the_file))
(assert (= temp___1013 current_idx))
(assert (and (= temp___1010 next_read__split_discrs) (and (= temp___10101 next_read__split_fields) (= temp___10102 next_read__attr__constrained))))
(assert (= temp___1009 current_idx))
(assert (= temp___1008 current_col))
(assert (= temp___1007 current_line))
(assert (and (= temp___1006 current_read__split_discrs) (and (= temp___10061 current_read__split_fields) (= temp___10062 current_read__attr__constrained))))
(assert (= 0 temp___1014))
(assert (and (and (= (local_invariant the_file1 current_read__split_fields1 current_read__split_discrs1 current_idx1 next_read__split_fields1 next_read__split_discrs1 next_idx1) true) (<= current_idx current_idx1)) (and (and (and (in_range2 current_line1) (in_range1 current_col1)) (in_range1 current_idx1)) (in_range1 next_idx1))))
(assert (or (and (and (and (= temp___10148 temp___101410) (and (= next_idx16 (mk_int__ref next_idx1)) (and (= next_read__split_discrs16 (mk___split_discrs__ref next_read__split_discrs1)) (and (= next_read__split_fields16 (mk___split_fields__ref next_read__split_fields1)) (and (= current_idx16 (mk_int__ref current_idx1)) (and (= current_col16 (mk_int__ref current_col1)) (and (= current_line16 (mk_int__ref current_line1)) (and (= current_read__split_discrs16 (mk___split_discrs__ref current_read__split_discrs1)) (and (= current_read__split_fields16 (mk___split_fields__ref current_read__split_fields1)) (= the_file16 (mk_file__ref the_file1))))))))))) (and (= temp___10149 temp___10141) (and (= next_idx17 next_idx1) (and (= next_read__split_discrs17 next_read__split_discrs1) (and (= next_read__split_fields17 next_read__split_fields1) (and (= current_idx17 current_idx1) (and (= current_col17 current_col1) (and (= current_line17 current_line1) (and (= current_read__split_discrs17 current_read__split_discrs1) (and (= current_read__split_fields17 current_read__split_fields1) (= the_file17 the_file1))))))))))) (not (= (to_rep1 (rec__file_io__read_result__status current_read__split_discrs1)) 0))) (and (= (to_rep1 (rec__file_io__read_result__status current_read__split_discrs1)) 0) (and (and (and (= temp___10148 temp___10146) (and (= next_idx16 next_idx14) (and (= next_read__split_discrs16 next_read__split_discrs14) (and (= next_read__split_fields16 next_read__split_fields14) (and (= current_idx16 current_idx14) (and (= current_col16 current_col14) (and (= current_line16 current_line14) (and (= current_read__split_discrs16 current_read__split_discrs14) (and (= current_read__split_fields16 current_read__split_fields14) (= the_file16 the_file14)))))))))) (and (= temp___10149 temp___10147) (and (= next_idx17 next_idx15) (and (= next_read__split_discrs17 next_read__split_discrs15) (and (= next_read__split_fields17 next_read__split_fields15) (and (= current_idx17 current_idx15) (and (= current_col17 current_col15) (and (= current_line17 current_line15) (and (= current_read__split_discrs17 current_read__split_discrs15) (and (= current_read__split_fields17 current_read__split_fields15) (= the_file17 the_file15))))))))))) (or (and (and (and (= temp___10146 temp___101410) (and (= next_idx14 (mk_int__ref next_idx1)) (and (= next_read__split_discrs14 (mk___split_discrs__ref next_read__split_discrs1)) (and (= next_read__split_fields14 (mk___split_fields__ref next_read__split_fields1)) (and (= current_idx14 (mk_int__ref current_idx1)) (and (= current_col14 (mk_int__ref current_col1)) (and (= current_line14 (mk_int__ref current_line1)) (and (= current_read__split_discrs14 (mk___split_discrs__ref current_read__split_discrs1)) (and (= current_read__split_fields14 (mk___split_fields__ref current_read__split_fields1)) (= the_file14 (mk_file__ref the_file1))))))))))) (and (= temp___10147 temp___10141) (and (= next_idx15 next_idx1) (and (= next_read__split_discrs15 next_read__split_discrs1) (and (= next_read__split_fields15 next_read__split_fields1) (and (= current_idx15 current_idx1) (and (= current_col15 current_col1) (and (= current_line15 current_line1) (and (= current_read__split_discrs15 current_read__split_discrs1) (and (= current_read__split_fields15 current_read__split_fields1) (= the_file15 the_file1))))))))))) (not (= (to_rep (rec__file_io__read_result__c current_read__split_fields1)) 59))) (and (= (to_rep (rec__file_io__read_result__c current_read__split_fields1)) 59) (and (and (and (= temp___10146 temp___10144) (and (= next_idx14 next_idx12) (and (= next_read__split_discrs14 next_read__split_discrs12) (and (= next_read__split_fields14 next_read__split_fields12) (and (= current_idx14 current_idx12) (and (= current_col14 current_col12) (and (= current_line14 current_line12) (and (= current_read__split_discrs14 current_read__split_discrs12) (and (= current_read__split_fields14 current_read__split_fields12) (= the_file14 the_file12)))))))))) (and (= temp___10147 temp___10145) (and (= next_idx15 next_idx13) (and (= next_read__split_discrs15 next_read__split_discrs13) (and (= next_read__split_fields15 next_read__split_fields13) (and (= current_idx15 current_idx13) (and (= current_col15 current_col13) (and (= current_line15 current_line13) (and (= current_read__split_discrs15 current_read__split_discrs13) (and (= current_read__split_fields15 current_read__split_fields13) (= the_file15 the_file13))))))))))) (and (and (and (= (local_invariant the_file2 current_read__split_fields2 current_read__split_discrs2 current_idx2 next_read__split_fields2 next_read__split_discrs2 next_idx2) true) (ite (= (to_rep1 (rec__file_io__read_result__status current_read__split_discrs2)) 0) (< current_idx1 current_idx2) (<= current_idx1 current_idx2))) (and (and (and (in_range2 current_line2) (in_range1 current_col2)) (in_range1 current_idx2)) (in_range1 next_idx2))) (or (and (and (and (= temp___10144 temp___101410) (and (= next_idx12 (mk_int__ref next_idx2)) (and (= next_read__split_discrs12 (mk___split_discrs__ref next_read__split_discrs2)) (and (= next_read__split_fields12 (mk___split_fields__ref next_read__split_fields2)) (and (= current_idx12 (mk_int__ref current_idx2)) (and (= current_col12 (mk_int__ref current_col2)) (and (= current_line12 (mk_int__ref current_line2)) (and (= current_read__split_discrs12 (mk___split_discrs__ref current_read__split_discrs2)) (and (= current_read__split_fields12 (mk___split_fields__ref current_read__split_fields2)) (= the_file12 (mk_file__ref the_file2))))))))))) (and (= temp___10145 temp___10141) (and (= next_idx13 next_idx2) (and (= next_read__split_discrs13 next_read__split_discrs2) (and (= next_read__split_fields13 next_read__split_fields2) (and (= current_idx13 current_idx2) (and (= current_col13 current_col2) (and (= current_line13 current_line2) (and (= current_read__split_discrs13 current_read__split_discrs2) (and (= current_read__split_fields13 current_read__split_fields2) (= the_file13 the_file2))))))))))) (not (= (to_rep1 (rec__file_io__read_result__status current_read__split_discrs2)) 0))) (and (= (to_rep1 (rec__file_io__read_result__status current_read__split_discrs2)) 0) (and (and (and (= temp___10144 (mk_int__ref temp___10143)) (and (= next_idx12 next_idx10) (and (= next_read__split_discrs12 next_read__split_discrs10) (and (= next_read__split_fields12 next_read__split_fields10) (and (= current_idx12 current_idx10) (and (= current_col12 current_col10) (and (= current_line12 current_line10) (and (= current_read__split_discrs12 current_read__split_discrs10) (and (= current_read__split_fields12 current_read__split_fields10) (= the_file12 the_file10)))))))))) (and (= temp___10145 temp___10143) (and (= next_idx13 next_idx11) (and (= next_read__split_discrs13 next_read__split_discrs11) (and (= next_read__split_fields13 next_read__split_fields11) (and (= current_idx13 current_idx11) (and (= current_col13 current_col11) (and (= current_line13 current_line11) (and (= current_read__split_discrs13 current_read__split_discrs11) (and (= current_read__split_fields13 current_read__split_fields11) (= the_file13 the_file11))))))))))) (and (and (= (local_invariant the_file3 current_read__split_fields3 current_read__split_discrs3 current_idx3 next_read__split_fields3 next_read__split_discrs3 next_idx3) true) (< temp___1013 current_idx3)) (and (and (and (and (in_range2 current_line3) (in_range1 current_col3)) (in_range1 current_idx3)) (in_range1 next_idx3)) (and (and (= result (mk_int__ref temp___10142)) (= temp___10143 current_idx3)) (and (and (and (= next_idx10 next_idx8) (and (= next_read__split_discrs10 next_read__split_discrs8) (and (= next_read__split_fields10 next_read__split_fields8) (and (= current_idx10 current_idx8) (and (= current_col10 current_col8) (and (= current_line10 current_line8) (and (= current_read__split_discrs10 current_read__split_discrs8) (and (= current_read__split_fields10 current_read__split_fields8) (= the_file10 the_file8))))))))) (and (= next_idx11 next_idx9) (and (= next_read__split_discrs11 next_read__split_discrs9) (and (= next_read__split_fields11 next_read__split_fields9) (and (= current_idx11 current_idx9) (and (= current_col11 current_col9) (and (= current_line11 current_line9) (and (= current_read__split_discrs11 current_read__split_discrs9) (and (= current_read__split_fields11 current_read__split_fields9) (= the_file11 the_file9)))))))))) (and (and (and (= (local_invariant the_file4 current_read__split_fields4 current_read__split_discrs4 current_idx4 next_read__split_fields4 next_read__split_discrs4 next_idx4) true) (<= current_idx3 current_idx4)) (and (and (and (in_range2 current_line4) (in_range1 current_col4)) (in_range1 current_idx4)) (in_range1 next_idx4))) (or (and (and (and (= next_idx8 (mk_int__ref next_idx4)) (and (= next_read__split_discrs8 (mk___split_discrs__ref next_read__split_discrs4)) (and (= next_read__split_fields8 (mk___split_fields__ref next_read__split_fields4)) (and (= current_idx8 (mk_int__ref current_idx4)) (and (= current_col8 (mk_int__ref current_col4)) (and (= current_line8 (mk_int__ref current_line4)) (and (= current_read__split_discrs8 (mk___split_discrs__ref current_read__split_discrs4)) (and (= current_read__split_fields8 (mk___split_fields__ref current_read__split_fields4)) (= the_file8 (mk_file__ref the_file4)))))))))) (and (= next_idx9 next_idx4) (and (= next_read__split_discrs9 next_read__split_discrs4) (and (= next_read__split_fields9 next_read__split_fields4) (and (= current_idx9 current_idx4) (and (= current_col9 current_col4) (and (= current_line9 current_line4) (and (= current_read__split_discrs9 current_read__split_discrs4) (and (= current_read__split_fields9 current_read__split_fields4) (= the_file9 the_file4)))))))))) (not (= (to_rep1 (rec__file_io__read_result__status current_read__split_discrs4)) 0))) (and (= (to_rep1 (rec__file_io__read_result__status current_read__split_discrs4)) 0) (and (and (and (= next_idx8 next_idx6) (and (= next_read__split_discrs8 next_read__split_discrs6) (and (= next_read__split_fields8 next_read__split_fields6) (and (= current_idx8 current_idx6) (and (= current_col8 current_col6) (and (= current_line8 current_line6) (and (= current_read__split_discrs8 current_read__split_discrs6) (and (= current_read__split_fields8 current_read__split_fields6) (= the_file8 the_file6))))))))) (and (= next_idx9 next_idx7) (and (= next_read__split_discrs9 next_read__split_discrs7) (and (= next_read__split_fields9 next_read__split_fields7) (and (= current_idx9 current_idx7) (and (= current_col9 current_col7) (and (= current_line9 current_line7) (and (= current_read__split_discrs9 current_read__split_discrs7) (and (= current_read__split_fields9 current_read__split_fields7) (= the_file9 the_file7)))))))))) (or (and (and (and (= next_idx6 (mk_int__ref next_idx4)) (and (= next_read__split_discrs6 (mk___split_discrs__ref next_read__split_discrs4)) (and (= next_read__split_fields6 (mk___split_fields__ref next_read__split_fields4)) (and (= current_idx6 (mk_int__ref current_idx4)) (and (= current_col6 (mk_int__ref current_col4)) (and (= current_line6 (mk_int__ref current_line4)) (and (= current_read__split_discrs6 (mk___split_discrs__ref current_read__split_discrs4)) (and (= current_read__split_fields6 (mk___split_fields__ref current_read__split_fields4)) (= the_file6 (mk_file__ref the_file4)))))))))) (and (= next_idx7 next_idx4) (and (= next_read__split_discrs7 next_read__split_discrs4) (and (= next_read__split_fields7 next_read__split_fields4) (and (= current_idx7 current_idx4) (and (= current_col7 current_col4) (and (= current_line7 current_line4) (and (= current_read__split_discrs7 current_read__split_discrs4) (and (= current_read__split_fields7 current_read__split_fields4) (= the_file7 the_file4)))))))))) (not (= (to_rep (rec__file_io__read_result__c current_read__split_fields4)) 59))) (and (= (to_rep (rec__file_io__read_result__c current_read__split_fields4)) 59) (and (and (and (= next_idx6 (mk_int__ref next_idx5)) (and (= next_read__split_discrs6 (mk___split_discrs__ref next_read__split_discrs5)) (and (= next_read__split_fields6 (mk___split_fields__ref next_read__split_fields5)) (and (= current_idx6 (mk_int__ref current_idx5)) (and (= current_col6 (mk_int__ref current_col5)) (and (= current_line6 (mk_int__ref current_line5)) (and (= current_read__split_discrs6 (mk___split_discrs__ref current_read__split_discrs5)) (and (= current_read__split_fields6 (mk___split_fields__ref current_read__split_fields5)) (= the_file6 (mk_file__ref the_file5)))))))))) (and (= next_idx7 next_idx5) (and (= next_read__split_discrs7 next_read__split_discrs5) (and (= next_read__split_fields7 next_read__split_fields5) (and (= current_idx7 current_idx5) (and (= current_col7 current_col5) (and (= current_line7 current_line5) (and (= current_read__split_discrs7 current_read__split_discrs5) (and (= current_read__split_fields7 current_read__split_fields5) (= the_file7 the_file5)))))))))) (and (and (and (= (local_invariant the_file5 current_read__split_fields5 current_read__split_discrs5 current_idx5 next_read__split_fields5 next_read__split_discrs5 next_idx5) true) (ite (= (to_rep1 (rec__file_io__read_result__status current_read__split_discrs5)) 0) (< current_idx4 current_idx5) (<= current_idx4 current_idx5))) (and (and (and (in_range2 current_line5) (in_range1 current_col5)) (in_range1 current_idx5)) (in_range1 next_idx5))) (not (= (to_rep1 (rec__file_io__read_result__status current_read__split_discrs5)) 0)))))))))))))))))))))))))
(assert (= next_idx18 next_idx16))
(assert (= next_read__split_discrs18 next_read__split_discrs16))
(assert (= next_read__split_fields18 next_read__split_fields16))
(assert (= current_idx18 current_idx16))
(assert (= current_col18 current_col16))
(assert (= current_line18 current_line16))
(assert (= current_read__split_discrs18 current_read__split_discrs16))
(assert (= current_read__split_fields18 current_read__split_fields16))
(assert (= the_file18 the_file16))
(assert (= next_idx19 next_idx17))
(assert (= next_read__split_discrs19 next_read__split_discrs17))
(assert (= next_read__split_fields19 next_read__split_fields17))
(assert (= current_idx19 current_idx17))
(assert (= current_col19 current_col17))
(assert (= current_line19 current_line17))
(assert (= current_read__split_discrs19 current_read__split_discrs17))
(assert (= current_read__split_fields19 current_read__split_fields17))
(assert (= the_file19 the_file17))
(assert (= next_idx20 next_idx18))
(assert (= next_read__split_discrs20 next_read__split_discrs18))
(assert (= next_read__split_fields20 next_read__split_fields18))
(assert (= current_idx20 current_idx18))
(assert (= current_col20 current_col18))
(assert (= current_line20 current_line18))
(assert (= current_read__split_discrs20 current_read__split_discrs18))
(assert (= current_read__split_fields20 current_read__split_fields18))
(assert (= the_file20 the_file18))
(assert (= next_idx21 next_idx19))
(assert (= next_read__split_discrs21 next_read__split_discrs19))
(assert (= next_read__split_fields21 next_read__split_fields19))
(assert (= current_idx21 current_idx19))
(assert (= current_col21 current_col19))
(assert (= current_line21 current_line19))
(assert (= current_read__split_discrs21 current_read__split_discrs19))
(assert (= current_read__split_fields21 current_read__split_fields19))
(assert (= the_file21 the_file19))
(assert (= next_idx22 next_idx20))
(assert (= next_read__split_discrs22 next_read__split_discrs20))
(assert (= next_read__split_fields22 next_read__split_fields20))
(assert (= current_idx22 current_idx20))
(assert (= current_col22 current_col20))
(assert (= current_line22 current_line20))
(assert (= current_read__split_discrs22 current_read__split_discrs20))
(assert (= current_read__split_fields22 current_read__split_fields20))
(assert (= the_file22 the_file20))
(assert (= next_idx23 next_idx21))
(assert (= next_read__split_discrs23 next_read__split_discrs21))
(assert (= next_read__split_fields23 next_read__split_fields21))
(assert (= current_idx23 current_idx21))
(assert (= current_col23 current_col21))
(assert (= current_line23 current_line21))
(assert (= current_read__split_discrs23 current_read__split_discrs21))
(assert (= current_read__split_fields23 current_read__split_fields21))
(assert (= the_file23 the_file21))
(assert (not (= (local_invariant (file__content the_file22) (us_split_fields__content current_read__split_fields22) (us_split_discrs__content current_read__split_discrs22) (int__content current_idx22) (us_split_fields__content next_read__split_fields22) (us_split_discrs__content next_read__split_discrs22) (int__content next_idx22)) true)))
(check-sat)
(exit)
