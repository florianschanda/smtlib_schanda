(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__p__pt__d Bool)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) Bool (rec__p__pt__d a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const p__pt__d__first__bit Int)
(declare-const p__pt__d__last__bit Int)
(declare-const p__pt__d__position Int)
(assert (<= 0 p__pt__d__first__bit))
(assert (< p__pt__d__first__bit p__pt__d__last__bit))
(assert (<= 0 p__pt__d__position))
(declare-fun user_eq (us_rep us_rep) Bool)
(declare-datatypes () ((pt__ref (mk_pt__ref (pt__content us_rep)))))
(define-fun pt__ref___projection ((a pt__ref)) us_rep (pt__content a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs2 us_split_discrs)))))
(define-fun us_rep___2__projection ((a us_rep1)) us_split_discrs (us_split_discrs2 a))
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a)))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r)))
(define-fun in_range1 ((rec__p__pt__d1 Bool) (a us_rep)) Bool (= rec__p__pt__d1 (rec__p__pt__d (us_split_discrs1 a))))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const p__pt__d__first__bit1 Int)
(declare-const p__pt__d__last__bit1 Int)
(declare-const p__pt__d__position1 Int)
(assert (<= 0 p__pt__d__first__bit1))
(assert (< p__pt__d__first__bit1 p__pt__d__last__bit1))
(assert (<= 0 p__pt__d__position1))
(declare-fun user_eq1 (us_rep1 us_rep1) Bool)
(declare-datatypes () ((tp1S__ref (mk_tp1S__ref (tp1S__content us_rep1)))))
(define-fun tp1S__ref___projection ((a tp1S__ref)) us_rep1 (tp1S__content a))
(define-fun dynamic_invariant ((temp___expr_206 us_rep1) (temp___is_init_202 Bool) (temp___skip_constant_203 Bool) (temp___do_toplevel_204 Bool) (temp___do_typ_inv_205 Bool)) Bool (=> (not (= temp___skip_constant_203 true)) (in_range1 (distinct 1 0) (to_base temp___expr_206))))
(define-fun default_initial_assumption ((temp___expr_208 us_rep1) (temp___skip_top_level_209 Bool)) Bool (= (rec__p__pt__d (us_split_discrs2 temp___expr_208)) (distinct 1 0)))
(declare-const p1__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_discrs3 us_split_discrs)))))
(define-fun us_rep___3__projection ((a us_rep2)) us_split_discrs (us_split_discrs3 a))
(define-fun to_base1 ((a us_rep2)) us_rep (mk___rep (us_split_discrs3 a)))
(define-fun of_base1 ((r us_rep)) us_rep2 (mk___rep2 (us_split_discrs1 r)))
(define-fun in_range2 ((rec__p__pt__d1 Bool) (a us_rep)) Bool (= rec__p__pt__d1 (rec__p__pt__d (us_split_discrs1 a))))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep2) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep2) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep2)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment2 a))))
(declare-const p__pt__d__first__bit2 Int)
(declare-const p__pt__d__last__bit2 Int)
(declare-const p__pt__d__position2 Int)
(assert (<= 0 p__pt__d__first__bit2))
(assert (< p__pt__d__first__bit2 p__pt__d__last__bit2))
(assert (<= 0 p__pt__d__position2))
(declare-fun user_eq2 (us_rep2 us_rep2) Bool)
(declare-datatypes () ((tp2S__ref (mk_tp2S__ref (tp2S__content us_rep2)))))
(define-fun tp2S__ref___projection ((a tp2S__ref)) us_rep2 (tp2S__content a))
(define-fun dynamic_invariant1 ((temp___expr_215 us_rep2) (temp___is_init_211 Bool) (temp___skip_constant_212 Bool) (temp___do_toplevel_213 Bool) (temp___do_typ_inv_214 Bool)) Bool (=> (not (= temp___skip_constant_212 true)) (in_range2 (distinct 0 0) (to_base1 temp___expr_215))))
(define-fun default_initial_assumption1 ((temp___expr_217 us_rep2) (temp___skip_top_level_218 Bool)) Bool (= (rec__p__pt__d (us_split_discrs3 temp___expr_217)) (distinct 0 0)))
(declare-const p2__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(assert (= (rec__p__pt__d p1__split_discrs) (distinct 1 0)))
(assert (= (distinct 1 0) (rec__p__pt__d p1__split_discrs)))
(assert (not (in_range 0)))
(check-sat)
(exit)
