(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_15)))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort natural 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-sort t 0)
(define-fun in_range2 ((x Int)) Bool (and (<= (- 20) x) (<= x 20)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (t t) Bool)
(declare-const dummy2 t)
(declare-datatypes () ((t__ref (mk_t__ref (t__content t)))))
(define-fun t__ref___projection ((a t__ref)) t (t__content a))
(declare-sort s 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 20)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (s s) Bool)
(declare-const dummy3 s)
(declare-datatypes () ((s__ref (mk_s__ref (s__content s)))))
(define-fun s__ref___projection ((a s__ref)) s (s__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun dynamic_invariant1 ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range1 temp___expr_33)))
(define-fun dynamic_invariant2 ((temp___expr_135 Int) (temp___is_init_132 Bool) (temp___skip_constant_133 Bool) (temp___do_toplevel_134 Bool)) Bool (=> (or (= temp___is_init_132 true) (<= (- 20) 20)) (in_range2 temp___expr_135)))
(declare-sort nt 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 20)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (nt nt) Bool)
(declare-const dummy4 nt)
(declare-datatypes () ((nt__ref (mk_nt__ref (nt__content nt)))))
(define-fun nt__ref___projection ((a nt__ref)) nt (nt__content a))
(define-fun dynamic_invariant3 ((temp___expr_141 Int) (temp___is_init_138 Bool) (temp___skip_constant_139 Bool) (temp___do_toplevel_140 Bool)) Bool (=> (or (= temp___is_init_138 true) (<= 0 20)) (in_range4 temp___expr_141)))
(define-fun dynamic_invariant4 ((temp___expr_147 Int) (temp___is_init_144 Bool) (temp___skip_constant_145 Bool) (temp___do_toplevel_146 Bool)) Bool (=> (or (= temp___is_init_144 true) (<= 0 20)) (in_range3 temp___expr_147)))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const g Int)
(declare-const a1 Int)
(declare-const a2 Int)
(declare-const o Int)
(declare-const call_actuals__fn__y Int)
(declare-const o1 Int)
(declare-const call_actuals__fn__x Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 integer)
(declare-const o5 Int)
(declare-const o6 integer)
(declare-const o7 Int)
(declare-const o8 integer)
(declare-const o9 Int)
(declare-const o10 integer)
(declare-const o11 Int)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const call_actuals__fs__y Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const call_actuals__fs__x Int)
(declare-const o16 Int)
(declare-const o17 integer)
(declare-const o18 Int)
(declare-const o19 Int)
(declare-const a11 Int)
(declare-const a21 Int)
(declare-const call_actuals__fn__y1 Int)
(declare-const call_actuals__fn__x1 Int)
(declare-const result Int)
(declare-const a12 Int)
(declare-const result1 Int)
(declare-const a22 Int)
(declare-const call_actuals__ft__y Int)
(declare-const call_actuals__ft__x Int)
(declare-const result2 Int)
(declare-const a13 Int)
(declare-const result3 Int)
(declare-const a23 Int)
(declare-const call_actuals__fnt__y Int)
(declare-const call_actuals__fnt__x Int)
(declare-const result4 Int)
(declare-const a14 Int)
(declare-const result5 Int)
(declare-const a24 Int)
(declare-const call_actuals__fs__y1 Int)
(declare-const call_actuals__fs__x1 Int)
(declare-const result6 Int)
(declare-const a15 Int)
(assert (in_range g))
(assert (in_range a1))
(assert (in_range a2))
(assert (and (= a21 (+ a11 1)) (and (in_range a11) (in_range a21))))
(assert (and (= o a21) (in_range1 a21)))
(assert (= o call_actuals__fn__y))
(assert (not (in_range1 a11)))
(check-sat)
(exit)
