(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(declare-const x Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const y Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const z Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort t_rate 0)
(define-fun in_range1 ((x1 Int)) Bool (and (<= (- 3000) x1) (<= x1 3000)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (t_rate t_rate) Bool)
(declare-const dummy1 t_rate)
(declare-datatypes () ((t_rate__ref (mk_t_rate__ref (t_rate__content t_rate)))))
(define-fun t_rate__ref___projection ((a t_rate__ref)) t_rate (t_rate__content a))
(define-fun dynamic_invariant1 ((temp___expr_158 Int) (temp___is_init_154 Bool) (temp___skip_constant_155 Bool) (temp___do_toplevel_156 Bool) (temp___do_typ_inv_157 Bool)) Bool (=> (or (= temp___is_init_154 true) (<= (- 3000) 3000)) (in_range1 temp___expr_158)))
(declare-fun to_rep (t_rate) Int)
(declare-fun of_rep (Int) t_rate)
(assert (forall ((x1 t_rate)) (! (= (of_rep (to_rep x1)) x1) :pattern ((to_rep x1)))))
(assert (forall ((x1 t_rate)) (! (in_range1 (to_rep x1)) :pattern ((to_rep x1)))))
(assert (forall ((x1 Int)) (! (=> (in_range1 x1) (= (to_rep (of_rep x1)) x1)) :pattern ((to_rep (of_rep x1))))))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const roll_rate_desired Int)
(declare-const pitch_rate_desired Int)
(declare-const yaw_rate_desired Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired Int)
(declare-const result Int)
(declare-const roll_rate_desired1 Int)
(declare-const result1 Int)
(declare-const pitch_rate_desired1 Int)
(declare-const result2 Int)
(declare-const yaw_rate_desired1 Int)
(declare-const get_out_subtype_int__controller_get_desired_rate__yaw_rate_desired Int)
(declare-const get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired1 Int)
(declare-const get_out_subtype_int__controller_get_desired_rate__roll_rate_desired Int)
(assert (in_range x))
(assert (in_range y))
(assert (in_range z))
(assert (= result roll_rate_desired))
(assert (= roll_rate_desired1 0))
(assert (in_range1 roll_rate_desired1))
(assert (= result1 pitch_rate_desired))
(assert (= pitch_rate_desired1 0))
(assert (in_range1 pitch_rate_desired1))
(assert (= result2 yaw_rate_desired))
(assert (= yaw_rate_desired1 0))
(assert (in_range1 yaw_rate_desired1))
(assert (and (= o pitch_rate_desired1) (in_range pitch_rate_desired1)))
(assert (and (= o1 o) (in_range o)))
(assert (= o1 get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired))
(assert (and (and (in_range get_out_subtype_int__controller_get_desired_rate__roll_rate_desired) (in_range get_out_subtype_int__controller_get_desired_rate__pitch_rate_desired1)) (in_range get_out_subtype_int__controller_get_desired_rate__yaw_rate_desired)))
(assert (not (in_range1 get_out_subtype_int__controller_get_desired_rate__roll_rate_desired)))
(check-sat)
(exit)
