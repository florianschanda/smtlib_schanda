(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

logic to_rep : integer -> int

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type us_split_fields = { rec__indefinite_bounded_tagged__t__c : integer;
rec__ext__ : us_private
}

function us_split_fields_C__projection(a: us_split_fields) : integer =
  (a).rec__indefinite_bounded_tagged__t__c

function us_split_fields___projection(a: us_split_fields) : us_private =
  (a).rec__ext__

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields; attr__tag : int
}

function us_rep___projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function us_rep___2__projection(a: us_rep) : int = (a).attr__tag

logic bool_eq3 : us_rep, us_rep -> bool

axiom bool_eq_def2 :
  (forall a:us_rep. forall b:us_rep [bool_eq3(a, b)].
  (((to_rep(((a).us_split_fields1).rec__indefinite_bounded_tagged__t__c) = to_rep(((b).us_split_fields1).rec__indefinite_bounded_tagged__t__c)) ->
  (bool_eq3(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields1).rec__indefinite_bounded_tagged__t__c) = to_rep(((b).us_split_fields1).rec__indefinite_bounded_tagged__t__c))) ->
  (bool_eq3(a, b) = false))))

logic us_dispatch_eq : us_rep, us_rep -> bool

logic us_tag : int

logic value__size : int

logic object__size : us_rep -> int

logic value__alignment : int

logic object__alignment : us_rep -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:integer. forall a1:us_private. forall a2:int.
  (0 <= object__size({ us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = a; rec__ext__ = a1 }; attr__tag = a2
  })))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:integer. forall a1:us_private. forall a2:int.
  (0 <= object__alignment({ us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = a; rec__ext__ = a1 }; attr__tag = a2
  })))

logic indefinite_bounded_tagged__t__c__first__bit : int

logic indefinite_bounded_tagged__t__c__last__bit : int

logic indefinite_bounded_tagged__t__c__position : int

axiom indefinite_bounded_tagged__t__c__first__bit_axiom :
  (0 <= indefinite_bounded_tagged__t__c__first__bit)

axiom indefinite_bounded_tagged__t__c__last__bit_axiom :
  (indefinite_bounded_tagged__t__c__first__bit <  indefinite_bounded_tagged__t__c__last__bit)

axiom indefinite_bounded_tagged__t__c__position_axiom :
  (0 <= indefinite_bounded_tagged__t__c__position)

logic user_eq1 : us_rep, us_rep -> bool

logic dummy1 : integer

logic dummy2 : us_private

logic dummy3 : int

type t__ref = { t__content : us_rep
}

function t__ref___projection(a: t__ref) : us_rep = (a).t__content

type capacity_range

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : capacity_range, capacity_range -> bool

logic dummy4 : capacity_range

type capacity_range__ref = { capacity_range__content : capacity_range
}

function capacity_range__ref___projection(a: capacity_range__ref) : capacity_range =
  (a).capacity_range__content

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_split_discrs = {
rec__indefinite_bounded_tagged__vect__vector__capacity : capacity_range
}

function us_split_discrs___projection(a: us_split_discrs) : capacity_range =
  (a).rec__indefinite_bounded_tagged__vect__vector__capacity

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields2 = { rec__indefinite_bounded_tagged__vect__vector :
us_main_type
}

function us_split_fields_Vector__projection(a: us_split_fields2) : us_main_type =
  (a).rec__indefinite_bounded_tagged__vect__vector

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_discrs1 : us_split_discrs; us_split_fields3 :
us_split_fields2
}

function us_rep___3__projection(a: us_rep1) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___4__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

logic value__size1 : int

logic object__size1 : us_rep1 -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep1 -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:capacity_range. forall a1:us_main_type. (0 <= object__size1({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = a };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = a1 }
  })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:capacity_range. forall a1:us_main_type.
  (0 <= object__alignment1({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = a };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = a1 }
  })))

logic indefinite_bounded_tagged__vect__vector__capacity__first__bit : int

logic indefinite_bounded_tagged__vect__vector__capacity__last__bit : int

logic indefinite_bounded_tagged__vect__vector__capacity__position : int

axiom indefinite_bounded_tagged__vect__vector__capacity__first__bit_axiom :
  (0 <= indefinite_bounded_tagged__vect__vector__capacity__first__bit)

axiom indefinite_bounded_tagged__vect__vector__capacity__last__bit_axiom :
  (indefinite_bounded_tagged__vect__vector__capacity__first__bit <  indefinite_bounded_tagged__vect__vector__capacity__last__bit)

axiom indefinite_bounded_tagged__vect__vector__capacity__position_axiom :
  (0 <= indefinite_bounded_tagged__vect__vector__capacity__position)

logic user_eq3 : us_rep1, us_rep1 -> bool

logic dummy5 : capacity_range

logic dummy6 : us_main_type

type vector__ref = { vector__content : us_rep1
}

function vector__ref___projection(a: vector__ref) : us_rep1 =
  (a).vector__content

logic to_rep1 : capacity_range -> int

logic of_rep1 : int -> capacity_range

axiom inversion_axiom1 :
  (forall x:capacity_range [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:capacity_range [to_rep1(x)]. in_range2(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range2(x) ->
  (to_rep1(of_rep1(x)) = x)))

logic capacity__function_guard : int, us_rep1 -> prop

logic length : us_rep1 -> int

logic length__function_guard : int, us_rep1 -> prop

axiom length__post_axiom :
  (forall container:capacity_range. forall container1:us_main_type [length({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } })]. ((((of_int(1) = true) -> (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }) <= to_rep1(container))) and ((not (of_int(1) = true)) ->
  (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }) <= 2147483647))) and in_range2(length({ us_split_discrs1 =
  { rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }))))

logic empty_vector : unit -> us_rep1

logic empty_vector__function_guard : us_rep1, unit -> prop

axiom empty_vector__post_axiom : (length(empty_vector(void)) = 0)

logic oeq : us_rep1, us_rep1 -> bool

logic oeq__function_guard : bool, us_rep1, us_rep1 -> prop

type us_main_type1

logic us_main_eq1 : us_main_type1, us_main_type1 -> bool

type us_rep2

logic bool_eq5 : us_rep2, us_rep2 -> bool

logic value__size2 : int

logic object__size2 : us_rep2 -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep2 -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (forall a:us_rep2. (0 <= object__size2(a)))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:us_rep2. (0 <= object__alignment2(a)))

logic user_eq4 : us_rep2, us_rep2 -> bool

logic dummy7 : us_rep2

type sequence__ref = { sequence__content : us_rep2
}

function sequence__ref___projection(a: sequence__ref) : us_rep2 =
  (a).sequence__content

logic length1 : us_rep2 -> int

logic length__function_guard1 : int, us_rep2 -> prop

logic last__function_guard : int, us_rep2 -> prop

logic get : us_rep2, int -> us_rep

logic get__function_guard : us_rep, us_rep2, int -> prop

logic oeq__function_guard1 : bool, us_rep2, us_rep2 -> prop

logic model__ : us_rep1 -> us_rep2

logic model____function_guard : us_rep2, us_rep1 -> prop

axiom oeq__post_axiom :
  (forall left:capacity_range. forall left1:us_main_type.
  forall right:capacity_range. forall right1:us_main_type [oeq({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  }, { us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = right };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = right1
  } })]. (((oeq({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  }, { us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = right };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = right1
  } }) = true) -> (((bool_eq1(length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  })), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = right };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = right1
  } }))) = true) ->
  (forall n:int. (((1 <= n) and (n <= (0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  }))))) -> ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  }), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = right };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = right1
  } }), n)).attr__tag) -> (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  }), n), get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = right };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = right1
  } }), n)) = true)) and ((not ((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  }), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = right };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = right1
  } }), n)).attr__tag)) -> (false = true)))))) and
  (not (bool_eq1(length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  })), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = right };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = right1
  } }))) = false)))) and (((bool_eq1(length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  })), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = right };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = right1
  } }))) = true) and
  (forall n:int. (((1 <= n) and (n <= (0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  }))))) -> ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  }), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = right };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = right1
  } }), n)).attr__tag) and (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  }), n), get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = right };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = right1
  } }), n)) = true)) or ((not ((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  }), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = right };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = right1
  } }), n)).attr__tag)) and (false = true)))))) -> (oeq({ us_split_discrs1 =
  { rec__indefinite_bounded_tagged__vect__vector__capacity = left };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = left1 }
  }, { us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = right };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = right1
  } }) = true))))

logic last_index__function_guard : int, us_rep1 -> prop

type extended_index

predicate in_range3(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq5 : extended_index, extended_index -> bool

logic dummy8 : extended_index

type extended_index__ref = { extended_index__content : extended_index
}

function extended_index__ref___projection(a: extended_index__ref) : extended_index =
  (a).extended_index__content

logic is_empty : us_rep1 -> bool

logic is_empty__function_guard : bool, us_rep1 -> prop

axiom is_empty__post_axiom :
  (forall container:capacity_range. forall container1:us_main_type
  [is_empty({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } })]. ((is_empty({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }) = true) <-> (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }) = 0)))

logic copy : us_rep1, int -> us_rep1

logic copy__function_guard : us_rep1, us_rep1, int -> prop

axiom copy__post_axiom :
  (forall source:capacity_range. forall source1:us_main_type.
  (forall capacity:int [copy({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }, capacity)]. ((in_range2(capacity) and ((of_int(1) = true) ->
  ((capacity = 0) or (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }) <= capacity)))) -> ((((bool_eq1(length1(model__(copy({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }, capacity))), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }))) = true) ->
  (forall n:int. (((1 <= n) and (n <= (0 + length1(model__(copy({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }, capacity)))))) -> ((((get(model__(copy({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }, capacity)), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }), n)).attr__tag) -> (us_dispatch_eq(get(model__(copy({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }, capacity)), n), get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }), n)) = true)) and ((not ((get(model__(copy({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }, capacity)), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }), n)).attr__tag)) -> (false = true)))))) and
  (not (bool_eq1(length1(model__(copy({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }, capacity))), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }))) = false))) and (((capacity = 0) -> (to_rep1(((copy({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } },
  capacity)).us_split_discrs1).rec__indefinite_bounded_tagged__vect__vector__capacity) = length({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } }))) and ((not (capacity = 0)) -> (to_rep1(((copy({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = source };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = source1
  } },
  capacity)).us_split_discrs1).rec__indefinite_bounded_tagged__vect__vector__capacity) = capacity)))))))

logic first_index__function_guard : int, us_rep1 -> prop

type index_type

predicate in_range4(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq6 : index_type, index_type -> bool

logic dummy9 : index_type

type index_type__ref = { index_type__content : index_type
}

function index_type__ref___projection(a: index_type__ref) : index_type =
  (a).index_type__content

logic element__function_guard : us_rep, us_rep1, int -> prop

logic equal_except__function_guard : bool, us_rep2, us_rep2, int -> prop

logic ole__function_guard : bool, us_rep2, us_rep2 -> prop

logic range_shifted__function_guard : bool, us_rep2, us_rep2, int, int,
  int -> prop

logic olt__function_guard : bool, us_rep2, us_rep2 -> prop

logic m_elements_reversed__function_guard : bool, us_rep2, us_rep2 -> prop

logic equal_except__2__function_guard : bool, us_rep2, us_rep2, int,
  int -> prop

logic m_elements_swapped__function_guard : bool, us_rep2, us_rep2, int,
  int -> prop

logic first_element__function_guard : us_rep, us_rep1 -> prop

logic last_element__function_guard : us_rep, us_rep1 -> prop

logic find_index : us_rep1, us_rep, int -> int

logic find_index__function_guard : int, us_rep1, us_rep, int -> prop

logic contains__function_guard : bool, us_rep2, int, int, us_rep -> prop

axiom find_index__post_axiom :
  (forall container:capacity_range. forall container1:us_main_type.
  (forall item:integer. forall item1:us_private. forall item2:int.
  (forall index:int [find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index)]. (in_range4(index) ->
  ((((((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }))) <  index) or
  (not (exists i:int. (((index <= i) and (i <= (0 + length1(model__({
       us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }))))) and ((((get(model__({ us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }), i)).attr__tag = item2) ->
       (us_dispatch_eq(get(model__({ us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }), i), { us_split_fields1 = {
       rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
       attr__tag = item2 }) = true)) and ((not ((get(model__({
       us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }), i)).attr__tag = item2)) -> (false = true))))))) ->
  (find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index) = 0)) and ((not (((0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }))) <  index) or
  (not (exists i:int. (((index <= i) and (i <= (0 + length1(model__({
       us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }))))) and ((((get(model__({ us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }), i)).attr__tag = item2) and
       (us_dispatch_eq(get(model__({ us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }), i), { us_split_fields1 = {
       rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
       attr__tag = item2 }) = true)) or ((not ((get(model__({
       us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }), i)).attr__tag = item2)) and (false = true)))))))) ->
  ((((index <= find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index)) and (find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index) <= (0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }))))) and ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index))).attr__tag = item2) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index)), { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }) = true)) and ((not ((get(model__({ us_split_discrs1 =
  { rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index))).attr__tag = item2)) -> (false = true)))) and
  (not (exists i:int. (((index <= i) and (i <= (find_index({
       us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }, { us_split_fields1 = {
       rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
       attr__tag = item2 }, index) - 1))) and ((((get(model__({
       us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }), i)).attr__tag = item2) and
       (us_dispatch_eq(get(model__({ us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }), i), { us_split_fields1 = {
       rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
       attr__tag = item2 }) = true)) or ((not ((get(model__({
       us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }), i)).attr__tag = item2)) and (false = true))))))))) and
  in_range3(find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index)))))))

logic reverse_find_index : us_rep1, us_rep, int -> int

logic reverse_find_index__function_guard : int, us_rep1, us_rep, int -> prop

axiom reverse_find_index__post_axiom :
  (forall container:capacity_range. forall container1:us_main_type.
  (forall item:integer. forall item1:us_private. forall item2:int.
  (forall index:int [reverse_find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index)]. (in_range4(index) ->
  ((((not (exists i:int. (((1 <= i) and (((index <= (0 + length1(model__({
          us_split_discrs1 = {
          rec__indefinite_bounded_tagged__vect__vector__capacity = container
          }; us_split_fields3 = {
          rec__indefinite_bounded_tagged__vect__vector = container1 }
          })))) -> (i <= index)) and ((not (index <= (0 + length1(model__({
          us_split_discrs1 = {
          rec__indefinite_bounded_tagged__vect__vector__capacity = container
          }; us_split_fields3 = {
          rec__indefinite_bounded_tagged__vect__vector = container1 }
          }))))) -> (i <= (0 + length1(model__({ us_split_discrs1 = {
          rec__indefinite_bounded_tagged__vect__vector__capacity = container
          }; us_split_fields3 = {
          rec__indefinite_bounded_tagged__vect__vector = container1 }
          }))))))) and ((((get(model__({ us_split_discrs1 = {
          rec__indefinite_bounded_tagged__vect__vector__capacity = container
          }; us_split_fields3 = {
          rec__indefinite_bounded_tagged__vect__vector = container1 } }),
          i)).attr__tag = item2) -> (us_dispatch_eq(get(model__({
          us_split_discrs1 = {
          rec__indefinite_bounded_tagged__vect__vector__capacity = container
          }; us_split_fields3 = {
          rec__indefinite_bounded_tagged__vect__vector = container1 } }), i),
          { us_split_fields1 = { rec__indefinite_bounded_tagged__t__c = item;
          rec__ext__ = item1 }; attr__tag = item2 }) = true)) and
          ((not ((get(model__({ us_split_discrs1 = {
          rec__indefinite_bounded_tagged__vect__vector__capacity = container
          }; us_split_fields3 = {
          rec__indefinite_bounded_tagged__vect__vector = container1 } }),
          i)).attr__tag = item2)) -> (false = true)))))) ->
  (reverse_find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index) = 0)) and
  ((exists i:int. (((1 <= i) and (((index <= (0 + length1(model__({
   us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } })))) and (i <= index)) or
   ((not (index <= (0 + length1(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }))))) and (i <= (0 + length1(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }))))))) and ((((get(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), i)).attr__tag = item2) and (us_dispatch_eq(get(model__({
   us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), i), { us_split_fields1 = {
   rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
   attr__tag = item2 }) = true)) or ((not ((get(model__({ us_split_discrs1 =
   { rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), i)).attr__tag = item2)) and (false = true))))) ->
  (((((1 <= reverse_find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index)) and (reverse_find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index) <= index)) and (reverse_find_index({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index) <= (0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }))))) and ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), reverse_find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index))).attr__tag = item2) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), reverse_find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index)), { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }) = true)) and ((not ((get(model__({ us_split_discrs1 =
  { rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), reverse_find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index))).attr__tag = item2)) -> (false = true)))) and
  (not (exists i:int. ((((reverse_find_index({ us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }, { us_split_fields1 = {
       rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
       attr__tag = item2 }, index) + 1) <= i) and
       (((index <= (0 + length1(model__({ us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } })))) and (i <= index)) or
       ((not (index <= (0 + length1(model__({ us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }))))) and (i <= (0 + length1(model__({
       us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }))))))) and ((((get(model__({ us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }), i)).attr__tag = item2) and
       (us_dispatch_eq(get(model__({ us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }), i), { us_split_fields1 = {
       rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
       attr__tag = item2 }) = true)) or ((not ((get(model__({
       us_split_discrs1 = {
       rec__indefinite_bounded_tagged__vect__vector__capacity = container };
       us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
       container1 } }), i)).attr__tag = item2)) and (false = true))))))))) and
  in_range3(reverse_find_index({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }, index)))))))

logic contains : us_rep1, us_rep -> bool

logic contains__function_guard1 : bool, us_rep1, us_rep -> prop

axiom contains__post_axiom :
  (forall container:capacity_range. forall container1:us_main_type.
  (forall item:integer. forall item1:us_private. forall item2:int [contains({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 })]. (((contains({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }) = true) ->
  (exists i:int. (((1 <= i) and (i <= (0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }))))) and ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), i)).attr__tag = item2) -> (us_dispatch_eq(get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), i), { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }) = true)) and ((not ((get(model__({ us_split_discrs1 =
  { rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), i)).attr__tag = item2)) -> (false = true)))))) and
  ((exists i:int. (((1 <= i) and (i <= (0 + length1(model__({
   us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }))))) and ((((get(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), i)).attr__tag = item2) and (us_dispatch_eq(get(model__({
   us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), i), { us_split_fields1 = {
   rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
   attr__tag = item2 }) = true)) or ((not ((get(model__({ us_split_discrs1 =
   { rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), i)).attr__tag = item2)) and (false = true))))) ->
  (contains({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = item; rec__ext__ = item1 };
  attr__tag = item2 }) = true)))))

logic has_element__function_guard : bool, us_rep1, int -> prop

logic f : int -> us_rep

logic f__function_guard : us_rep, int -> prop

axiom f__post_axiom : true

axiom f__def_axiom :
  (forall x:int [f(x)]. (in_range1(x) -> (f(x) = { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = of_rep(x); rec__ext__ =
  us_null_ext__ }; attr__tag = us_tag })))

logic is_sorted : us_rep1 -> bool

logic is_sorted__function_guard : bool, us_rep1 -> prop

logic lt : us_rep, us_rep -> bool

logic lt__function_guard : bool, us_rep, us_rep -> prop

logic m_elements_sorted__function_guard : bool, us_rep2 -> prop

axiom is_sorted__post_axiom :
  (forall container:capacity_range. forall container1:us_main_type
  [is_sorted({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } })]. (((is_sorted({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }) = true) ->
  (forall i:int. (((1 <= i) and (i <= (0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }))))) ->
  (forall j:int. (((i <= j) and (j <= (0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }))))) -> (((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), i)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), j)).attr__tag) -> (us_dispatch_eq(get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), i), get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), j)) = true)) and ((not ((get(model__({ us_split_discrs1 =
  { rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), i)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), j)).attr__tag)) -> (false = true))) or (lt(get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), i), get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }), j)) = true))))))) and
  ((forall i:int. (((1 <= i) and (i <= (0 + length1(model__({
   us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }))))) ->
   (forall j:int. (((i <= j) and (j <= (0 + length1(model__({
   us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }))))) -> (((((get(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), i)).attr__tag = (get(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), j)).attr__tag) and (us_dispatch_eq(get(model__({
   us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), i), get(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), j)) = true)) or ((not ((get(model__({ us_split_discrs1 =
   { rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), i)).attr__tag = (get(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), j)).attr__tag)) and (false = true))) or (lt(get(model__({
   us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), i), get(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = container };
   us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   container1 } }), j)) = true)))))) ->
  (is_sorted({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } }) = true))))

logic m_elements_included__function_guard : bool, us_rep2, int, int, us_rep2,
  int, int -> prop

predicate in_range5(rec__indefinite_bounded_tagged__vect__vector__capacity1: int,
  a: us_rep1) =
  (rec__indefinite_bounded_tagged__vect__vector__capacity1 = to_rep1(((a).us_split_discrs1).rec__indefinite_bounded_tagged__vect__vector__capacity))

logic value__size3 : int

logic object__size3 : us_rep1 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep1 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:capacity_range. forall a1:us_main_type. (0 <= object__size3({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = a };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = a1 }
  })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:capacity_range. forall a1:us_main_type.
  (0 <= object__alignment3({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = a };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector = a1 }
  })))

logic indefinite_bounded_tagged__vect__vector__capacity__first__bit1 : int

logic indefinite_bounded_tagged__vect__vector__capacity__last__bit1 : int

logic indefinite_bounded_tagged__vect__vector__capacity__position1 : int

axiom indefinite_bounded_tagged__vect__vector__capacity__first__bit_axiom1 :
  (0 <= indefinite_bounded_tagged__vect__vector__capacity__first__bit1)

axiom indefinite_bounded_tagged__vect__vector__capacity__last__bit_axiom1 :
  (indefinite_bounded_tagged__vect__vector__capacity__first__bit1 <  indefinite_bounded_tagged__vect__vector__capacity__last__bit1)

axiom indefinite_bounded_tagged__vect__vector__capacity__position_axiom1 :
  (0 <= indefinite_bounded_tagged__vect__vector__capacity__position1)

logic user_eq7 : us_rep1, us_rep1 -> bool

logic dummy10 : capacity_range

logic dummy11 : us_main_type

type tvS__ref = { tvS__content : us_rep1
}

function tvS__ref___projection(a: tvS__ref) : us_rep1 = (a).tvS__content

logic v__split_discrs : capacity_range

logic attr__ATTRIBUTE_ADDRESS : int

logic w__split_discrs : capacity_range

logic attr__ATTRIBUTE_ADDRESS1 : int

axiom lt__post_axiom : true

axiom lt__def_axiom :
  (forall left:integer. forall left1:us_private. forall left2:int.
  forall right:integer. forall right1:us_private. forall right2:int [lt({
  us_split_fields1 = { rec__indefinite_bounded_tagged__t__c = left;
  rec__ext__ = left1 }; attr__tag = left2 }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = right; rec__ext__ = right1 };
  attr__tag = right2 })]. ((lt({ us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = left; rec__ext__ = left1 };
  attr__tag = left2 }, { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = right; rec__ext__ = right1 };
  attr__tag = right2 }) = true) <-> (to_rep(left) <  to_rep(right))))

type count_type

predicate in_range6(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq8 : count_type, count_type -> bool

logic dummy12 : count_type

type count_type__ref = { count_type__content : count_type
}

function count_type__ref___projection(a: count_type__ref) : count_type =
  (a).count_type__content

axiom user_eq__def_axiom :
  (forall a:us_rep2. forall b:us_rep2 [user_eq4(a, b)].
  (((forall n:int. (((1 <= n) and (n <= (0 + length1(a)))) -> ((((get(a,
    n)).attr__tag = (get(b, n)).attr__tag) and (us_dispatch_eq(get(a, n),
    get(b, n)) = true)) or ((not ((get(a, n)).attr__tag = (get(b,
    n)).attr__tag)) and (false = true))))) ->
  (user_eq4(a, b) = match_bool(bool_eq1(length1(a), length1(b)), true,
  false))) and
  ((not (forall n:int. (((1 <= n) and (n <= (0 + length1(a)))) -> ((((get(a,
        n)).attr__tag = (get(b, n)).attr__tag) -> (us_dispatch_eq(get(a, n),
        get(b, n)) = true)) and ((not ((get(a, n)).attr__tag = (get(b,
        n)).attr__tag)) -> (false = true)))))) ->
  (user_eq4(a, b) = match_bool(bool_eq1(length1(a), length1(b)), false,
  false)))))

axiom model____post_axiom :
  (forall container:capacity_range. forall container1:us_main_type [model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } })]. (length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } })) = length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = container };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  container1 } })))

type extended_index1

predicate in_range7(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq9 : extended_index1, extended_index1 -> bool

logic dummy13 : extended_index1

type extended_index__ref1 = { extended_index__content1 : extended_index1
}

function extended_index__ref___2__projection(a: extended_index__ref1) : extended_index1 =
  (a).extended_index__content1

axiom length__post_axiom1 :
  (forall container:us_rep2 [length1(container)].
  (((0 + length1(container)) <= 2147483647) and
  in_range6(length1(container))))

axiom get__post_axiom : true

logic v__split_fields : us_main_type

logic w__split_fields : us_main_type

logic us : int

logic o : integer

logic o1 : us_private

logic o2 : int

logic o3 : integer

logic o4 : us_private

logic o5 : int

logic o6 : integer

logic o7 : us_private

logic o8 : int

logic temp___536 : integer

logic temp___5361 : us_private

logic temp___5362 : int

logic temp___535 : integer

logic temp___5351 : us_private

logic temp___5352 : int

logic temp___540 : integer

logic temp___5401 : us_private

logic temp___5402 : int

logic temp___539 : integer

logic temp___5391 : us_private

logic temp___5392 : int

logic temp___544 : integer

logic temp___5441 : us_private

logic temp___5442 : int

logic temp___543 : integer

logic temp___5431 : us_private

logic temp___5432 : int

logic indefinite_bounded_tagged__test__B_1__w__assume : capacity_range

logic indefinite_bounded_tagged__test__B_1__w__assume1 : us_main_type

logic temp___549 : integer

logic temp___5491 : us_private

logic temp___5492 : int

logic temp___548 : integer

logic temp___5481 : us_private

logic temp___5482 : int

logic temp___553 : integer

logic temp___5531 : us_private

logic temp___5532 : int

logic temp___552 : integer

logic temp___5521 : us_private

logic temp___5522 : int

logic temp___557 : integer

logic temp___5571 : us_private

logic temp___5572 : int

logic temp___556 : integer

logic temp___5561 : us_private

logic temp___5562 : int

logic temp___561 : integer

logic temp___5611 : us_private

logic temp___5612 : int

logic temp___560 : integer

logic temp___5601 : us_private

logic temp___5602 : int

logic temp___565 : integer

logic temp___5651 : us_private

logic temp___5652 : int

logic temp___564 : integer

logic temp___5641 : us_private

logic temp___5642 : int

logic temp___569 : integer

logic temp___5691 : us_private

logic temp___5692 : int

logic temp___568 : integer

logic temp___5681 : us_private

logic temp___5682 : int

logic temp___573 : integer

logic temp___5731 : us_private

logic temp___5732 : int

logic temp___572 : integer

logic temp___5721 : us_private

logic temp___5722 : int

logic temp___577 : integer

logic temp___5771 : us_private

logic temp___5772 : int

logic temp___576 : integer

logic temp___5761 : us_private

logic temp___5762 : int

logic temp___581 : integer

logic temp___5811 : us_private

logic temp___5812 : int

logic temp___580 : integer

logic temp___5801 : us_private

logic temp___5802 : int

logic o9 : capacity_range

logic o10 : us_main_type

logic o11 : integer

logic o12 : us_private

logic o13 : int

logic temp___586 : integer

logic temp___5861 : us_private

logic temp___5862 : int

logic temp___585 : integer

logic temp___5851 : us_private

logic temp___5852 : int

logic temp___590 : integer

logic temp___5901 : us_private

logic temp___5902 : int

logic temp___589 : integer

logic temp___5891 : us_private

logic temp___5892 : int

logic temp___594 : integer

logic temp___5941 : us_private

logic temp___5942 : int

logic temp___593 : integer

logic temp___5931 : us_private

logic temp___5932 : int

logic temp___599 : integer

logic temp___5991 : us_private

logic temp___5992 : int

logic temp___598 : integer

logic temp___5981 : us_private

logic temp___5982 : int

logic temp___603 : integer

logic temp___6031 : us_private

logic temp___6032 : int

logic temp___602 : integer

logic temp___6021 : us_private

logic temp___6022 : int

logic temp___607 : integer

logic temp___6071 : us_private

logic temp___6072 : int

logic temp___606 : integer

logic temp___6061 : us_private

logic temp___6062 : int

logic temp___612 : integer

logic temp___6121 : us_private

logic temp___6122 : int

logic temp___611 : integer

logic temp___6111 : us_private

logic temp___6112 : int

logic temp___616 : integer

logic temp___6161 : us_private

logic temp___6162 : int

logic temp___615 : integer

logic temp___6151 : us_private

logic temp___6152 : int

logic temp___621 : integer

logic temp___6211 : us_private

logic temp___6212 : int

logic temp___620 : integer

logic temp___6201 : us_private

logic temp___6202 : int

logic temp___625 : integer

logic temp___6251 : us_private

logic temp___6252 : int

logic temp___624 : integer

logic temp___6241 : us_private

logic temp___6242 : int

logic temp___629 : integer

logic temp___6291 : us_private

logic temp___6292 : int

logic temp___628 : integer

logic temp___6281 : us_private

logic temp___6282 : int

logic temp___633 : integer

logic temp___6331 : us_private

logic temp___6332 : int

logic temp___632 : integer

logic temp___6321 : us_private

logic temp___6322 : int

logic temp___638 : integer

logic temp___6381 : us_private

logic temp___6382 : int

logic temp___637 : integer

logic temp___6371 : us_private

logic temp___6372 : int

logic temp___642 : integer

logic temp___6421 : us_private

logic temp___6422 : int

logic temp___641 : integer

logic temp___6411 : us_private

logic temp___6412 : int

logic o14 : integer

logic o15 : us_private

logic o16 : int

logic indefinite_bounded_tagged__vect__clear__container__fields : us_main_type

logic result : us_main_type

logic v__split_fields1 : us_main_type

logic indefinite_bounded_tagged__vect__append__2__container__fields : us_main_type

logic result1 : us_main_type

logic v__split_fields2 : us_main_type

logic indefinite_bounded_tagged__vect__append__2__container__fields1 : us_main_type

logic result2 : us_main_type

logic v__split_fields3 : us_main_type

logic indefinite_bounded_tagged__vect__append__2__container__fields2 : us_main_type

logic result3 : us_main_type

logic v__split_fields4 : us_main_type

logic indefinite_bounded_tagged__vect__reserve_capacity__container__fields : us_main_type

logic result4 : us_main_type

logic v__split_fields5 : us_main_type

logic result5 : us_main_type

logic w__split_fields1 : us_main_type

logic w__split_fields2 : us_main_type

logic w__split_fields3 : us_main_type

logic indefinite_bounded_tagged__vect__replace_element__container__fields : us_main_type

logic result6 : us_main_type

logic v__split_fields6 : us_main_type

logic indefinite_bounded_tagged__vect__swap__container__fields : us_main_type

logic result7 : us_main_type

logic v__split_fields7 : us_main_type

logic indefinite_bounded_tagged__vect__delete_last__container__fields : us_main_type

logic result8 : us_main_type

logic v__split_fields8 : us_main_type

logic indefinite_bounded_tagged__vect__reverse_elements__container__fields : us_main_type

logic result9 : us_main_type

logic v__split_fields9 : us_main_type

logic indefinite_bounded_tagged__sort__sort__container__fields : us_main_type

logic result10 : us_main_type

logic v__split_fields10 : us_main_type

logic indefinite_bounded_tagged__vect__replace_element__container__fields1 : us_main_type

logic result11 : us_main_type

logic v__split_fields11 : us_main_type

axiom H : ((us = 5) and in_range2(5))

axiom H1 : ((to_rep1(v__split_discrs) = 5) and (is_empty({ us_split_discrs1 =
  { rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs
  }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields } }) = true))

axiom H2 : (5 = to_rep1(v__split_discrs))

axiom H3 : (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__clear__container__fields } }) = 0)

axiom H4 : (result = v__split_fields)

axiom H5 :
  (v__split_fields1 = indefinite_bounded_tagged__vect__clear__container__fields)

axiom H6 : (is_empty({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields1 } }) = true)

axiom H7 : (oeq({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields1 } }, empty_vector(void)) = true)

axiom H8 : (((of_int(1) = true) -> (to_rep1(v__split_discrs) = 5)) and
  ((not (of_int(1) = true)) -> (2147483647 = 5)))

axiom H9 : (({ us_split_fields1 = { rec__indefinite_bounded_tagged__t__c = o;
  rec__ext__ = o1 }; attr__tag = o2 } = f(1)) and (((of_rep(1) = o) and
  (us_null_ext__ = o1)) and (us_tag = o2)))

axiom H10 : (((length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields }
  }) = (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields1 } }) + 1)) and (((bool_lt(length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields1 } })), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields }
  }))) = true) ->
  (forall n:int. (((1 <= n) and (n <= (0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields1 } }))))) -> ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields1 } }), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields } }),
  n)).attr__tag) -> (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields1 } }), n), get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields } }),
  n)) = true)) and ((not ((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields1 } }), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields } }),
  n)).attr__tag)) -> (false = true)))))) and (not (bool_lt(length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields1 } })), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields }
  }))) = false)))) and ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields } }),
  ((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields1 } }))) + 1))).attr__tag = o2) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields } }),
  ((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields1 } }))) + 1)), { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = o; rec__ext__ = o1 }; attr__tag = o2
  }) = true)) and ((not ((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields } }),
  ((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields1 } }))) + 1))).attr__tag = o2)) -> (false = true))))

axiom H11 : (result1 = v__split_fields1)

axiom H12 :
  (v__split_fields2 = indefinite_bounded_tagged__vect__append__2__container__fields)

axiom H13 : (({ us_split_fields1 = { rec__indefinite_bounded_tagged__t__c =
  o3; rec__ext__ = o4 }; attr__tag = o5 } = f(2)) and (((of_rep(2) = o3) and
  (us_null_ext__ = o4)) and (us_tag = o5)))

axiom H14 : (((length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields1 }
  }) = (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields2 } }) + 1)) and (((bool_lt(length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields2 } })), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields1 }
  }))) = true) ->
  (forall n:int. (((1 <= n) and (n <= (0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields2 } }))))) -> ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields2 } }), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields1 } }),
  n)).attr__tag) -> (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields2 } }), n), get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields1 } }),
  n)) = true)) and ((not ((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields2 } }), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields1 } }),
  n)).attr__tag)) -> (false = true)))))) and (not (bool_lt(length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields2 } })), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields1 }
  }))) = false)))) and ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields1 } }),
  ((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields2 } }))) + 1))).attr__tag = o5) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields1 } }),
  ((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields2 } }))) + 1)), { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = o3; rec__ext__ = o4 }; attr__tag =
  o5 }) = true)) and ((not ((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields1 } }),
  ((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields2 } }))) + 1))).attr__tag = o5)) -> (false = true))))

axiom H15 : (result2 = v__split_fields2)

axiom H16 :
  (v__split_fields3 = indefinite_bounded_tagged__vect__append__2__container__fields1)

axiom H17 : (({ us_split_fields1 = { rec__indefinite_bounded_tagged__t__c =
  o6; rec__ext__ = o7 }; attr__tag = o8 } = f(3)) and (((of_rep(3) = o6) and
  (us_null_ext__ = o7)) and (us_tag = o8)))

axiom H18 : (((length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields2 }
  }) = (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields3 } }) + 1)) and (((bool_lt(length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields3 } })), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields2 }
  }))) = true) ->
  (forall n:int. (((1 <= n) and (n <= (0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields3 } }))))) -> ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields3 } }), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields2 } }),
  n)).attr__tag) -> (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields3 } }), n), get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields2 } }),
  n)) = true)) and ((not ((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields3 } }), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields2 } }),
  n)).attr__tag)) -> (false = true)))))) and (not (bool_lt(length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields3 } })), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields2 }
  }))) = false)))) and ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields2 } }),
  ((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields3 } }))) + 1))).attr__tag = o8) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields2 } }),
  ((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields3 } }))) + 1)), { us_split_fields1 = {
  rec__indefinite_bounded_tagged__t__c = o6; rec__ext__ = o7 }; attr__tag =
  o8 }) = true)) and ((not ((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__append__2__container__fields2 } }),
  ((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields3 } }))) + 1))).attr__tag = o8)) -> (false = true))))

axiom H19 : (result3 = v__split_fields3)

axiom H20 :
  (v__split_fields4 = indefinite_bounded_tagged__vect__append__2__container__fields2)

axiom H21 : (not (is_empty({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }) = true))

axiom H22 : (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }) = 3)

axiom H23 : (((of_int(1) = true) -> (to_rep1(v__split_discrs) = 5)) and
  ((not (of_int(1) = true)) -> (2147483647 = 5)))

axiom H24 : ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }), 1)).attr__tag = (f(1)).attr__tag) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }), 1), f(1)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }), 1)).attr__tag = (f(1)).attr__tag)) ->
  (false = true)))

axiom H25 : ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }), 2)).attr__tag = (f(2)).attr__tag) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }), 2), f(2)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }), 2)).attr__tag = (f(2)).attr__tag)) ->
  (false = true)))

axiom H26 : ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }), 3)).attr__tag = (f(3)).attr__tag) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }), 3), f(3)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }), 3)).attr__tag = (f(3)).attr__tag)) ->
  (false = true)))

axiom H27 : (((bool_eq1(length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__reserve_capacity__container__fields } })),
  length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }))) = true) ->
  (forall n:int. (((1 <= n) and (n <= (0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__reserve_capacity__container__fields }
  }))))) -> ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__reserve_capacity__container__fields } }),
  n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }), n)).attr__tag) -> (us_dispatch_eq(get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__reserve_capacity__container__fields } }),
  n), get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }), n)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__reserve_capacity__container__fields } }),
  n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }), n)).attr__tag)) -> (false = true)))))) and
  (not (bool_eq1(length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__vect__reserve_capacity__container__fields } })),
  length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields4 } }))) = false)))

axiom H28 : (result4 = v__split_fields4)

axiom H29 :
  (v__split_fields5 = indefinite_bounded_tagged__vect__reserve_capacity__container__fields)

axiom H30 : (not (is_empty({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }) = true))

axiom H31 : (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }) = 3)

axiom H32 : (((of_int(1) = true) -> (to_rep1(v__split_discrs) = 5)) and
  ((not (of_int(1) = true)) -> (2147483647 = 5)))

axiom H33 : (({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity =
  indefinite_bounded_tagged__test__B_1__w__assume }; us_split_fields3 = {
  rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__test__B_1__w__assume1 } } = copy({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }, 6)) and ((((bool_eq1(length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity =
  indefinite_bounded_tagged__test__B_1__w__assume }; us_split_fields3 = {
  rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__test__B_1__w__assume1 } })), length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }))) = true) ->
  (forall n:int. (((1 <= n) and (n <= (0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity =
  indefinite_bounded_tagged__test__B_1__w__assume }; us_split_fields3 = {
  rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__test__B_1__w__assume1 } }))))) ->
  ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity =
  indefinite_bounded_tagged__test__B_1__w__assume }; us_split_fields3 = {
  rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__test__B_1__w__assume1 } }),
  n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }), n)).attr__tag) -> (us_dispatch_eq(get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity =
  indefinite_bounded_tagged__test__B_1__w__assume }; us_split_fields3 = {
  rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__test__B_1__w__assume1 } }), n), get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }), n)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity =
  indefinite_bounded_tagged__test__B_1__w__assume }; us_split_fields3 = {
  rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__test__B_1__w__assume1 } }),
  n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }), n)).attr__tag)) -> (false = true)))))) and
  (not (bool_eq1(length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity =
  indefinite_bounded_tagged__test__B_1__w__assume }; us_split_fields3 = {
  rec__indefinite_bounded_tagged__vect__vector =
  indefinite_bounded_tagged__test__B_1__w__assume1 } })), length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }))) = false))) and (((6 = 0) ->
  (to_rep1(indefinite_bounded_tagged__test__B_1__w__assume) = length({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }))) and ((not (6 = 0)) ->
  (to_rep1(indefinite_bounded_tagged__test__B_1__w__assume) = 6)))))

axiom H34 : (result5 = w__split_fields)

axiom H35 :
  (w__split_fields1 = indefinite_bounded_tagged__test__B_1__w__assume1)

axiom H36 :
  (w__split_discrs = indefinite_bounded_tagged__test__B_1__w__assume)

axiom H37 : (not (is_empty({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }) = true))

axiom H38 : (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }) = 3)

axiom H39 : (((of_int(1) = true) -> (to_rep1(w__split_discrs) = 6)) and
  ((not (of_int(1) = true)) -> (2147483647 = 6)))

axiom H40 : ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }), 1)).attr__tag = (f(1)).attr__tag) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }), 1), f(1)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }), 1)).attr__tag = (f(1)).attr__tag)) ->
  (false = true)))

axiom H41 : ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }), 2)).attr__tag = (f(2)).attr__tag) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }), 2), f(2)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }), 2)).attr__tag = (f(2)).attr__tag)) ->
  (false = true)))

axiom H42 : ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }), 3)).attr__tag = (f(3)).attr__tag) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }), 3), f(3)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }), 3)).attr__tag = (f(3)).attr__tag)) ->
  (false = true)))

axiom H43 : (((length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }) = (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }) + length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }))) and (((bool_le(length1(model__({ us_split_discrs1 =
  { rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs
  }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } })), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }))) = true) ->
  (forall n:int. (((1 <= n) and (n <= (0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }))))) -> ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), n)).attr__tag) -> (us_dispatch_eq(get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }), n), get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), n)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }), n)).attr__tag = (get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), n)).attr__tag)) -> (false = true)))))) and
  (not (bool_le(length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } })), length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }))) = false)))) and ((0 <  length({ us_split_discrs1 =
  { rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs
  }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } })) ->
  ((forall i:int. (((1 <= i) and (i <= (0 + length1(model__({
   us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs
   }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   v__split_fields5 } }))))) -> ((((get(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs
   }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   v__split_fields5 } }), i)).attr__tag = (get(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs
   }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   w__split_fields2 } }), (i + (((0 + length1(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs
   }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   w__split_fields1 } }))) - 1) + 1)))).attr__tag) ->
   (us_dispatch_eq(get(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs
   }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   v__split_fields5 } }), i), get(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs
   }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   w__split_fields2 } }), (i + (((0 + length1(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs
   }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   w__split_fields1 } }))) - 1) + 1)))) = true)) and ((not ((get(model__({
   us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs
   }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   v__split_fields5 } }), i)).attr__tag = (get(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs
   }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   w__split_fields2 } }), (i + (((0 + length1(model__({ us_split_discrs1 = {
   rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs
   }; us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
   w__split_fields1 } }))) - 1) + 1)))).attr__tag)) -> (false = true))))) and
  (forall i:int. ((((1 + (((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }))) - 1) + 1)) <= i) and (i <= ((0 + length1(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }))) + (((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }))) - 1) + 1)))) -> ((((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }), (i - (((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }))) - 1) + 1)))).attr__tag = (get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), i)).attr__tag) -> (us_dispatch_eq(get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }), (i - (((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }))) - 1) + 1))), get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), i)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = v__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  v__split_fields5 } }), (i - (((0 + length1(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields1 } }))) - 1) + 1)))).attr__tag = (get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), i)).attr__tag)) -> (false = true))))))))

axiom H44 : (not (is_empty({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }) = true))

axiom H45 : (length({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }) = 6)

axiom H46 : (((of_int(1) = true) -> (to_rep1(w__split_discrs) = 6)) and
  ((not (of_int(1) = true)) -> (2147483647 = 6)))

axiom H47 : ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 1)).attr__tag = (f(1)).attr__tag) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 1), f(1)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 1)).attr__tag = (f(1)).attr__tag)) ->
  (false = true)))

axiom H48 : ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 2)).attr__tag = (f(2)).attr__tag) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 2), f(2)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 2)).attr__tag = (f(2)).attr__tag)) ->
  (false = true)))

axiom H49 : ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 3)).attr__tag = (f(3)).attr__tag) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 3), f(3)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 3)).attr__tag = (f(3)).attr__tag)) ->
  (false = true)))

axiom H50 : ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 4)).attr__tag = (f(1)).attr__tag) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 4), f(1)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 4)).attr__tag = (f(1)).attr__tag)) ->
  (false = true)))

axiom H51 : ((((get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 5)).attr__tag = (f(2)).attr__tag) ->
  (us_dispatch_eq(get(model__({ us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 5), f(2)) = true)) and ((not ((get(model__({
  us_split_discrs1 = {
  rec__indefinite_bounded_tagged__vect__vector__capacity = w__split_discrs };
  us_split_fields3 = { rec__indefinite_bounded_tagged__vect__vector =
  w__split_fields2 } }), 5)).attr__tag = (f(2)).attr__tag)) ->
  (false = true)))

axiom H52 : (({ us_split_fields1 = { rec__indefinite_bounded_tagged__t__c =
  temp___581; rec__ext__ = temp___5811 }; attr__tag = temp___5812
  } = f(3)) and (((temp___581 = of_rep(3)) and
  (temp___5811 = us_null_ext__)) and (temp___5812 = us_tag)))

 (* File "a-cfinve.ads", line 813, characters 0-0 *)
goal WP_parameter_def : (1 <= 6)
