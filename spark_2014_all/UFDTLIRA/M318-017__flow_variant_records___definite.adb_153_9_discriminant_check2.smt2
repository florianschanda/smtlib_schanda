(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-sort status 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (status status) Bool)
(declare-const dummy1 status)
(declare-datatypes () ((status__ref (mk_status__ref (status__content status)))))
(define-fun status__ref___projection ((a status__ref)) status (status__content a))
(define-fun dynamic_invariant ((temp___expr_158 Int) (temp___is_init_154 Bool) (temp___skip_constant_155 Bool) (temp___do_toplevel_156 Bool) (temp___do_typ_inv_157 Bool)) Bool (=> (or (= temp___is_init_154 true) (<= 0 2)) (in_range1 temp___expr_158)))
(declare-fun to_rep (status) Int)
(declare-fun of_rep (Int) status)
(assert (forall ((x status)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x status)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(define-fun to_rep1 ((x natural)) Int (naturalqtint x))
(declare-fun of_rep1 (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x natural)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__definite__t__d status)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) status (rec__definite__t__d a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__definite__t__a natural) (rec__definite__t__b natural) (rec__definite__t__x Bool)))))
(define-fun us_split_fields_A__projection ((a us_split_fields)) natural (rec__definite__t__a a))
(define-fun us_split_fields_B__projection ((a us_split_fields)) natural (rec__definite__t__b a))
(define-fun us_split_fields_X__projection ((a us_split_fields)) Bool (rec__definite__t__x a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields) (attr__constrained Bool)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___3__projection ((a us_rep)) Bool (attr__constrained a))
(define-fun definite__t__b__pred ((a us_rep)) Bool (= (to_rep (rec__definite__t__d (us_split_discrs1 a))) 0))
(define-fun definite__t__x__pred ((a us_rep)) Bool (= (to_rep (rec__definite__t__d (us_split_discrs1 a))) 1))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep (rec__definite__t__d (us_split_discrs1 a))) (to_rep (rec__definite__t__d (us_split_discrs1 b)))) (and (and (= (to_rep1 (rec__definite__t__a (us_split_fields1 a))) (to_rep1 (rec__definite__t__a (us_split_fields1 b)))) (=> (definite__t__b__pred a) (= (to_rep1 (rec__definite__t__b (us_split_fields1 a))) (to_rep1 (rec__definite__t__b (us_split_fields1 b)))))) (=> (definite__t__x__pred a) (= (rec__definite__t__x (us_split_fields1 a)) (rec__definite__t__x (us_split_fields1 b)))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const definite__t__d__first__bit Int)
(declare-const definite__t__d__last__bit Int)
(declare-const definite__t__d__position Int)
(assert (<= 0 definite__t__d__first__bit))
(assert (< definite__t__d__first__bit definite__t__d__last__bit))
(assert (<= 0 definite__t__d__position))
(declare-const definite__t__a__first__bit Int)
(declare-const definite__t__a__last__bit Int)
(declare-const definite__t__a__position Int)
(assert (<= 0 definite__t__a__first__bit))
(assert (< definite__t__a__first__bit definite__t__a__last__bit))
(assert (<= 0 definite__t__a__position))
(declare-const definite__t__b__first__bit Int)
(declare-const definite__t__b__last__bit Int)
(declare-const definite__t__b__position Int)
(assert (<= 0 definite__t__b__first__bit))
(assert (< definite__t__b__first__bit definite__t__b__last__bit))
(assert (<= 0 definite__t__b__position))
(declare-const definite__t__x__first__bit Int)
(declare-const definite__t__x__last__bit Int)
(declare-const definite__t__x__position Int)
(assert (<= 0 definite__t__x__first__bit))
(assert (< definite__t__x__first__bit definite__t__x__last__bit))
(assert (<= 0 definite__t__x__position))
(declare-fun user_eq2 (us_rep us_rep) Bool)
(declare-const dummy2 us_rep)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))
(define-fun default_initial_assumption ((temp___expr_167 us_rep) (temp___skip_top_level_168 Bool)) Bool (and (= (attr__constrained temp___expr_167) false) (= (to_rep (rec__definite__t__d (us_split_discrs1 temp___expr_167))) 2)))
(declare-const x__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const r44b Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun in_range2 ((rec__definite__t__d1 Int) (a us_rep)) Bool (= rec__definite__t__d1 (to_rep (rec__definite__t__d (us_split_discrs1 a)))))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const definite__t__d__first__bit1 Int)
(declare-const definite__t__d__last__bit1 Int)
(declare-const definite__t__d__position1 Int)
(assert (<= 0 definite__t__d__first__bit1))
(assert (< definite__t__d__first__bit1 definite__t__d__last__bit1))
(assert (<= 0 definite__t__d__position1))
(declare-const definite__t__b__first__bit1 Int)
(declare-const definite__t__b__last__bit1 Int)
(declare-const definite__t__b__position1 Int)
(assert (<= 0 definite__t__b__first__bit1))
(assert (< definite__t__b__first__bit1 definite__t__b__last__bit1))
(assert (<= 0 definite__t__b__position1))
(declare-const definite__t__x__first__bit1 Int)
(declare-const definite__t__x__last__bit1 Int)
(declare-const definite__t__x__position1 Int)
(assert (<= 0 definite__t__x__first__bit1))
(assert (< definite__t__x__first__bit1 definite__t__x__last__bit1))
(assert (<= 0 definite__t__x__position1))
(declare-const definite__t__a__first__bit1 Int)
(declare-const definite__t__a__last__bit1 Int)
(declare-const definite__t__a__position1 Int)
(assert (<= 0 definite__t__a__first__bit1))
(assert (< definite__t__a__first__bit1 definite__t__a__last__bit1))
(assert (<= 0 definite__t__a__position1))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((t45b__ref (mk_t45b__ref (t45b__content us_rep)))))
(define-fun t45b__ref___projection ((a t45b__ref)) us_rep (t45b__content a))
(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range temp___expr_39)))
(declare-const rliteral natural)
(assert (= (naturalqtint rliteral) 0))
(declare-const x__split_discrs status)
(declare-const o status)
(declare-const o1 status)
(declare-const temp___243 status)
(declare-const temp___2431 natural)
(declare-const temp___2432 natural)
(declare-const temp___2433 Bool)
(declare-const temp___2434 Bool)
(assert (= (to_rep x__split_discrs) r44b))
(assert (in_range1 r44b))
(assert (= (to_rep o) 2))
(assert (= o o1))
(assert (= temp___243 o1))
(assert (= rliteral temp___2431))
(assert (= dummy temp___2432))
(assert (= true temp___2433))
(assert (= true temp___2434))
(assert (= x__attr__constrained true))
(assert (not (= temp___243 x__split_discrs)))
(check-sat)
(exit)
