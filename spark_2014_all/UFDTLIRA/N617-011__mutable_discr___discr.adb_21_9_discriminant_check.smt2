(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort natural 0)
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range temp___expr_33)))
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__discr__with_default__c natural)))))
(define-fun us_split_discrs___4__projection ((a us_split_discrs)) natural (rec__discr__with_default__c a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___4__projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (attr__constrained Bool)))))
(define-fun us_rep___8__projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___9__projection ((a us_rep)) Bool (attr__constrained a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (= (to_rep (rec__discr__with_default__c (us_split_discrs1 a))) (to_rep (rec__discr__with_default__c (us_split_discrs1 b)))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const discr__with_default__c__first__bit Int)
(declare-const discr__with_default__c__last__bit Int)
(declare-const discr__with_default__c__position Int)
(assert (<= 0 discr__with_default__c__first__bit))
(assert (< discr__with_default__c__first__bit discr__with_default__c__last__bit))
(assert (<= 0 discr__with_default__c__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((with_default__ref (mk_with_default__ref (with_default__content us_rep)))))
(define-fun with_default__ref___projection ((a with_default__ref)) us_rep (with_default__content a))
(define-fun default_initial_assumption ((temp___expr_166 us_rep) (temp___skip_top_level_167 Bool)) Bool (and (= (attr__constrained temp___expr_166) false) (= (to_rep (rec__discr__with_default__c (us_split_discrs1 temp___expr_166))) 0)))
(declare-const c Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun in_range1 ((rec__discr__with_default__c1 Int) (a us_rep)) Bool (= rec__discr__with_default__c1 (to_rep (rec__discr__with_default__c (us_split_discrs1 a)))))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const discr__with_default__c__first__bit1 Int)
(declare-const discr__with_default__c__last__bit1 Int)
(declare-const discr__with_default__c__position1 Int)
(assert (<= 0 discr__with_default__c__first__bit1))
(assert (< discr__with_default__c__first__bit1 discr__with_default__c__last__bit1))
(assert (<= 0 discr__with_default__c__position1))
(declare-fun user_eq2 (us_rep us_rep) Bool)
(declare-const dummy2 us_rep)
(declare-datatypes () ((t4b__ref (mk_t4b__ref (t4b__content us_rep)))))
(define-fun t4b__ref___projection ((a t4b__ref)) us_rep (t4b__content a))
(declare-const d__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun in_range2 ((rec__discr__with_default__c1 Int) (a us_rep)) Bool (= rec__discr__with_default__c1 (to_rep (rec__discr__with_default__c (us_split_discrs1 a)))))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const discr__with_default__c__first__bit2 Int)
(declare-const discr__with_default__c__last__bit2 Int)
(declare-const discr__with_default__c__position2 Int)
(assert (<= 0 discr__with_default__c__first__bit2))
(assert (< discr__with_default__c__first__bit2 discr__with_default__c__last__bit2))
(assert (<= 0 discr__with_default__c__position2))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((td1S__ref (mk_td1S__ref (td1S__content us_rep)))))
(define-fun td1S__ref___projection ((a td1S__ref)) us_rep (td1S__content a))
(define-fun dynamic_invariant1 ((temp___expr_181 us_rep) (temp___is_init_178 Bool) (temp___skip_constant_179 Bool) (temp___do_toplevel_180 Bool)) Bool (and (=> (not (= temp___skip_constant_179 true)) (in_range2 c temp___expr_181)) (= (attr__constrained temp___expr_181) true)))
(define-fun default_initial_assumption1 ((temp___expr_183 us_rep) (temp___skip_top_level_184 Bool)) Bool (and (= (attr__constrained temp___expr_183) true) (= (to_rep (rec__discr__with_default__c (us_split_discrs1 temp___expr_183))) c)))
(declare-const d1__split_discrs us_split_discrs)
(declare-const d1__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const d2__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun in_range3 ((rec__discr__with_default__c1 Int) (a us_rep)) Bool (= rec__discr__with_default__c1 (to_rep (rec__discr__with_default__c (us_split_discrs1 a)))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const discr__with_default__c__first__bit3 Int)
(declare-const discr__with_default__c__last__bit3 Int)
(declare-const discr__with_default__c__position3 Int)
(assert (<= 0 discr__with_default__c__first__bit3))
(assert (< discr__with_default__c__first__bit3 discr__with_default__c__last__bit3))
(assert (<= 0 discr__with_default__c__position3))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((t5b__ref (mk_t5b__ref (t5b__content us_rep)))))
(define-fun t5b__ref___projection ((a t5b__ref)) us_rep (t5b__content a))
(define-fun in_range4 ((rec__discr__with_default__c1 Int) (a us_rep)) Bool (= rec__discr__with_default__c1 (to_rep (rec__discr__with_default__c (us_split_discrs1 a)))))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep)) (<= 0 (object__alignment4 a))))
(declare-const discr__with_default__c__first__bit4 Int)
(declare-const discr__with_default__c__last__bit4 Int)
(declare-const discr__with_default__c__position4 Int)
(assert (<= 0 discr__with_default__c__first__bit4))
(assert (< discr__with_default__c__first__bit4 discr__with_default__c__last__bit4))
(assert (<= 0 discr__with_default__c__position4))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content us_rep)))))
(define-fun t6b__ref___projection ((a t6b__ref)) us_rep (t6b__content a))
(define-fun in_range5 ((rec__discr__with_default__c1 Int) (a us_rep)) Bool (= rec__discr__with_default__c1 (to_rep (rec__discr__with_default__c (us_split_discrs1 a)))))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep)) (<= 0 (object__alignment5 a))))
(declare-const discr__with_default__c__first__bit5 Int)
(declare-const discr__with_default__c__last__bit5 Int)
(declare-const discr__with_default__c__position5 Int)
(assert (<= 0 discr__with_default__c__first__bit5))
(assert (< discr__with_default__c__first__bit5 discr__with_default__c__last__bit5))
(assert (<= 0 discr__with_default__c__position5))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((t7b__ref (mk_t7b__ref (t7b__content us_rep)))))
(define-fun t7b__ref___projection ((a t7b__ref)) us_rep (t7b__content a))
(declare-const d__split_discrs natural)
(declare-const d2__split_discrs natural)
(declare-const o natural)
(declare-const o1 natural)
(declare-const discr__r2__d__assume natural)
(declare-const discr__r2__d__assume1 Bool)
(declare-const us Int)
(declare-const o2 natural)
(declare-const o3 natural)
(declare-const temp___272 natural)
(declare-const temp___2721 Bool)
(declare-const usq_ natural)
(declare-const usq_1 Bool)
(declare-const temp___274 natural)
(declare-const temp___2741 Bool)
(declare-const o4 natural)
(declare-const o5 natural)
(declare-const temp___275 natural)
(declare-const temp___2751 Bool)
(declare-const usq_2 natural)
(declare-const usq_3 Bool)
(declare-const temp___277 natural)
(declare-const temp___2771 Bool)
(declare-const o6 natural)
(declare-const o7 us_split_discrs)
(declare-const temp___278 us_rep)
(declare-const result us_split_discrs__ref)
(declare-const d__split_discrs1 us_split_discrs)
(declare-const result1 us_split_discrs__ref)
(declare-const d__split_discrs2 us_split_discrs)
(declare-const result2 us_split_discrs__ref)
(declare-const d__split_discrs3 us_split_discrs)
(assert (in_range c))
(assert (= (to_rep o) c))
(assert (= o o1))
(assert (= discr__r2__d__assume o1))
(assert (= true discr__r2__d__assume1))
(assert (= result (mk___split_discrs__ref (mk___split_discrs d__split_discrs))))
(assert (= d__split_discrs1 (mk___split_discrs discr__r2__d__assume)))
(assert (= d__attr__constrained false))
(assert (and (= us c) (in_range c)))
(assert (and (= d1__attr__constrained true) (= (to_rep (rec__discr__with_default__c d1__split_discrs)) c)))
(assert (and (= c (to_rep (rec__discr__with_default__c d1__split_discrs))) (= d1__attr__constrained true)))
(assert (and (= d2__attr__constrained false) (= (to_rep d2__split_discrs) 0)))
(assert (not (= d__attr__constrained true)))
(assert (= d1__attr__constrained true))
(assert (= (bool_eq (mk___rep d__split_discrs1 d__attr__constrained) (mk___rep d1__split_discrs d1__attr__constrained)) true))
(assert (= (to_rep o2) c))
(assert (= o2 o3))
(assert (= temp___272 o3))
(assert (= true temp___2721))
(assert (=> (= d__attr__constrained true) (= temp___272 (rec__discr__with_default__c d__split_discrs1))))
(assert (= (mk___rep (mk___split_discrs usq_) usq_1) (mk___rep (mk___split_discrs temp___272) temp___2721)))
(assert (= usq_ temp___274))
(assert (= d__attr__constrained temp___2741))
(assert (= result1 (mk___split_discrs__ref d__split_discrs1)))
(assert (= d__split_discrs2 (mk___split_discrs temp___274)))
(assert (= (to_rep o4) 0))
(assert (= o4 o5))
(assert (= temp___275 o5))
(assert (= true temp___2751))
(assert (= d__attr__constrained true))
(assert (not (= temp___275 (rec__discr__with_default__c d__split_discrs2))))
(check-sat)
(exit)
