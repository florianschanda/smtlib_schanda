(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__mode_logic_props_types__changed_state__unit_delay_memory Bool) (rec__mode_logic_props_types__changed_state__in1_out1 Bool)))))
(define-fun us_split_fields_Unit_Delay_memory__2__projection ((a us_split_fields)) Bool (rec__mode_logic_props_types__changed_state__unit_delay_memory a))
(define-fun us_split_fields_In1_out1__2__projection ((a us_split_fields)) Bool (rec__mode_logic_props_types__changed_state__in1_out1 a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___5__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___5__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (= (rec__mode_logic_props_types__changed_state__unit_delay_memory (us_split_fields1 a)) (rec__mode_logic_props_types__changed_state__unit_delay_memory (us_split_fields1 b))) (= (rec__mode_logic_props_types__changed_state__in1_out1 (us_split_fields1 a)) (rec__mode_logic_props_types__changed_state__in1_out1 (us_split_fields1 b)))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const mode_logic_props_types__changed_state__unit_delay_memory__first__bit Int)
(declare-const mode_logic_props_types__changed_state__unit_delay_memory__last__bit Int)
(declare-const mode_logic_props_types__changed_state__unit_delay_memory__position Int)
(assert (<= 0 mode_logic_props_types__changed_state__unit_delay_memory__first__bit))
(assert (< mode_logic_props_types__changed_state__unit_delay_memory__first__bit mode_logic_props_types__changed_state__unit_delay_memory__last__bit))
(assert (<= 0 mode_logic_props_types__changed_state__unit_delay_memory__position))
(declare-const mode_logic_props_types__changed_state__in1_out1__first__bit Int)
(declare-const mode_logic_props_types__changed_state__in1_out1__last__bit Int)
(declare-const mode_logic_props_types__changed_state__in1_out1__position Int)
(assert (<= 0 mode_logic_props_types__changed_state__in1_out1__first__bit))
(assert (< mode_logic_props_types__changed_state__in1_out1__first__bit mode_logic_props_types__changed_state__in1_out1__last__bit))
(assert (<= 0 mode_logic_props_types__changed_state__in1_out1__position))
(declare-fun user_eq (us_rep us_rep) Bool)
(declare-const dummy us_rep)
(declare-datatypes () ((changed_state__ref (mk_changed_state__ref (changed_state__content us_rep)))))
(define-fun changed_state__ref___projection ((a changed_state__ref)) us_rep (changed_state__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const pilot_flying_side Bool)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const selected_nav_source_changed Bool)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const selected_nav_frequency_changed Bool)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const nav_capture_cond_met Bool)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const no_higher_event_than_nav_capture_cond_met Bool)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const nav_active Bool)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const modes_on Bool)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(declare-const attr__ATTRIBUTE_ADDRESS20 Int)
(declare-const attr__ATTRIBUTE_ADDRESS21 Int)
(declare-const attr__ATTRIBUTE_ADDRESS22 Int)
(declare-const attr__ATTRIBUTE_ADDRESS23 Int)
(declare-const attr__ATTRIBUTE_ADDRESS24 Int)
(declare-const attr__ATTRIBUTE_ADDRESS25 Int)
(declare-const attr__ATTRIBUTE_ADDRESS26 Int)
(declare-const nav_active_out1 Bool)
(declare-const unit_delay_memory Bool)
(declare-const unit_delay1_memory Bool)
(declare-const unit_delay_out1 Bool)
(declare-const unit_delay1_out1 Bool)
(declare-const modes_on_out1 Bool)
(declare-const nav_capture_cond_met_out1 Bool)
(declare-const no_higher_event_than_nav_capture_cond_met_out1 Bool)
(declare-const pilot_flying_side_out1 Bool)
(declare-const selected_nav_frequency_changed_out1 Bool)
(declare-const selected_nav_source_changed_out1 Bool)
(declare-const not4_out1 Bool)
(declare-const not3_out1 Bool)
(declare-const not2_out1 Bool)
(declare-const not_out1 Bool)
(declare-const or_out1 Bool)
(declare-const not1_out1 Bool)
(declare-const not5_out1 Bool)
(declare-const result bool__ref)
(declare-const unit_delay_out11 Bool)
(declare-const result1 bool__ref)
(declare-const unit_delay1_out11 Bool)
(declare-const result2 bool__ref)
(declare-const modes_on_out11 Bool)
(declare-const result3 bool__ref)
(declare-const nav_active_out11 Bool)
(declare-const result4 bool__ref)
(declare-const nav_capture_cond_met_out11 Bool)
(declare-const result5 bool__ref)
(declare-const no_higher_event_than_nav_capture_cond_met_out11 Bool)
(declare-const result6 bool__ref)
(declare-const pilot_flying_side_out11 Bool)
(declare-const changed_out1 Bool)
(declare-const result7 bool__ref)
(declare-const selected_nav_frequency_changed_out11 Bool)
(declare-const result8 bool__ref)
(declare-const selected_nav_source_changed_out11 Bool)
(declare-const result9 bool__ref)
(declare-const not4_out11 Bool)
(declare-const result10 bool__ref)
(declare-const not3_out11 Bool)
(declare-const result11 bool__ref)
(declare-const not2_out11 Bool)
(declare-const result12 bool__ref)
(declare-const not_out11 Bool)
(declare-const result13 bool__ref)
(declare-const or_out11 Bool)
(declare-const result14 bool__ref)
(declare-const not1_out11 Bool)
(declare-const result15 bool__ref)
(declare-const not5_out11 Bool)
(assert (= result (mk_bool__ref unit_delay_out1)))
(assert (= unit_delay_out11 unit_delay_memory))
(assert (= result1 (mk_bool__ref unit_delay1_out1)))
(assert (= unit_delay1_out11 unit_delay1_memory))
(assert (= result2 (mk_bool__ref modes_on_out1)))
(assert (= modes_on_out11 modes_on))
(assert (= result3 (mk_bool__ref nav_active_out1)))
(assert (= nav_active_out11 nav_active))
(assert (= result4 (mk_bool__ref nav_capture_cond_met_out1)))
(assert (= nav_capture_cond_met_out11 nav_capture_cond_met))
(assert (= result5 (mk_bool__ref no_higher_event_than_nav_capture_cond_met_out1)))
(assert (= no_higher_event_than_nav_capture_cond_met_out11 no_higher_event_than_nav_capture_cond_met))
(assert (= result6 (mk_bool__ref pilot_flying_side_out1)))
(assert (= pilot_flying_side_out11 pilot_flying_side))
(assert (= result7 (mk_bool__ref selected_nav_frequency_changed_out1)))
(assert (= selected_nav_frequency_changed_out11 selected_nav_frequency_changed))
(assert (= result8 (mk_bool__ref selected_nav_source_changed_out1)))
(assert (= selected_nav_source_changed_out11 selected_nav_source_changed))
(assert (= result9 (mk_bool__ref not4_out1)))
(assert (= not4_out11 (ite (not (= changed_out1 true)) true false)))
(assert (= result10 (mk_bool__ref not3_out1)))
(assert (= not3_out11 (ite (not (= selected_nav_frequency_changed_out11 true)) true false)))
(assert (= result11 (mk_bool__ref not2_out1)))
(assert (= not2_out11 (ite (not (= selected_nav_source_changed_out11 true)) true false)))
(assert (= result12 (mk_bool__ref not_out1)))
(assert (= not_out11 (ite (not (= unit_delay1_out11 true)) true false)))
(assert (= result13 (mk_bool__ref or_out1)))
(assert (= or_out11 (ite (and (and (and (and (and (and (and (= unit_delay_out11 true) (= not_out11 true)) (= nav_capture_cond_met_out11 true)) (= not2_out11 true)) (= not3_out11 true)) (= not4_out11 true)) (= modes_on_out11 true)) (= no_higher_event_than_nav_capture_cond_met_out11 true)) true false)))
(assert (= result14 (mk_bool__ref not1_out1)))
(assert (= not1_out11 (ite (not (= or_out11 true)) true false)))
(assert (= result15 (mk_bool__ref not5_out1)))
(assert (= not5_out11 (ite (or (= not1_out11 true) (= nav_active_out11 true)) true false)))
(assert (not (= not5_out11 true)))
(check-sat)
(exit)
