(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-const a Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const b Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (integer integer) Bool)
(declare-const dummy1 integer)
(declare-datatypes () ((t21b__ref (mk_t21b__ref (t21b__content integer)))))
(define-fun t21b__ref___projection ((a1 t21b__ref)) integer (t21b__content a1))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (integer integer) Bool)
(declare-const dummy2 integer)
(declare-datatypes () ((t22b__ref (mk_t22b__ref (t22b__content integer)))))
(define-fun t22b__ref___projection ((a1 t22b__ref)) integer (t22b__content a1))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const r Int)
(declare-const i Int)
(declare-const i1 Int)
(declare-const arithmetic__plus__result Int)
(declare-const o Int)
(declare-const temp___167 Int)
(declare-const temp___166 Int)
(declare-const temp___168 Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const temp___162 Int)
(declare-const temp___161 Int)
(declare-const temp___163 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const i2 Int)
(declare-const i3 Int)
(declare-const result Int)
(declare-const r1 Int)
(declare-const result1 Int)
(declare-const i4 Int)
(declare-const result2 Int)
(declare-const r2 Int)
(declare-const r3 Int)
(declare-const i5 Int)
(declare-const result3 Int)
(declare-const i6 Int)
(declare-const result4 Int)
(declare-const r4 Int)
(declare-const r5 Int)
(declare-const i7 Int)
(declare-const r6 Int)
(declare-const i8 Int)
(declare-const r7 Int)
(declare-const i9 Int)
(declare-const r8 Int)
(declare-const i10 Int)
(declare-const r9 Int)
(declare-const i11 Int)
(declare-const r10 Int)
(declare-const i12 Int)
(declare-const result5 Int)
(declare-const i13 Int)
(declare-const result6 Int)
(declare-const r11 Int)
(declare-const r12 Int)
(declare-const i14 Int)
(declare-const result7 Int)
(declare-const i15 Int)
(declare-const result8 Int)
(declare-const r13 Int)
(declare-const r14 Int)
(declare-const i16 Int)
(declare-const r15 Int)
(declare-const i17 Int)
(declare-const r16 int__ref)
(declare-const i18 int__ref)
(declare-const r17 Int)
(declare-const i19 Int)
(declare-const r18 int__ref)
(declare-const i20 int__ref)
(declare-const r19 Int)
(declare-const i21 Int)
(declare-const r20 int__ref)
(declare-const i22 int__ref)
(declare-const i23 int__ref)
(declare-const r21 Int)
(declare-const i24 Int)
(declare-const i25 Int)
(declare-const result9 int__ref)
(declare-const arithmetic__plus__result1 Int)
(declare-const arithmetic__plus__result2 int__ref)
(declare-const arithmetic__plus__result3 Int)
(declare-const r22 int__ref)
(declare-const i26 int__ref)
(declare-const i27 int__ref)
(declare-const arithmetic__plus__result4 int__ref)
(declare-const r23 Int)
(declare-const i28 Int)
(declare-const i29 Int)
(declare-const arithmetic__plus__result5 Int)
(assert (in_range1 a))
(assert (in_range1 b))
(assert (in_range1 (+ a b)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 r)))
(assert (= (mk_int__ref result) (mk_int__ref r)))
(assert (= r1 a))
(assert (=> (<= 0 b) (= (mk_int__ref result1) (mk_int__ref i))))
(assert (=> (<= 0 b) (= i4 1)))
(assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (and (and (= temp___167 i4) (and (= temp___166 r1) (and (= temp___168 b) (and (and (and (and (= o1 r1) (not (= r1 2147483647))) (= o2 (+ o1 1))) (and (= r1 result2) (= r2 o2))) (and (and (= r3 (+ a i5)) (= b temp___168)) (and (and (and (=> (<= (- 2147483648) 2147483647) (in_range1 r3)) (=> (<= 1 b) (dynamic_property 1 b i5))) (and (<= 1 i5) (<= i5 b))) (= i5 b))))))) (and (and (= i5 i9) (= r3 r7)) (and (= i10 i5) (= r8 r3)))))))
(assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= (mk_int__ref i11) (mk_int__ref i9)))))
(assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= (mk_int__ref r9) (mk_int__ref r7)))))
(assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= i12 i10))))
(assert (=> (<= 0 b) (=> (and (<= 1 i4) (<= i4 b)) (= r10 r8))))
(assert (=> (<= 0 b) (=> (not (and (<= 1 i4) (<= i4 b))) (= i4 i11))))
(assert (=> (<= 0 b) (=> (not (and (<= 1 i4) (<= i4 b))) (= r1 r9))))
(assert (=> (<= 0 b) (=> (not (and (<= 1 i4) (<= i4 b))) (= i12 i4))))
(assert (=> (<= 0 b) (=> (not (and (<= 1 i4) (<= i4 b))) (= r10 r1))))
(assert (=> (<= 0 b) (= i23 (mk_int__ref i1))))
(assert (=> (<= 0 b) (= i22 (mk_int__ref i11))))
(assert (=> (<= 0 b) (= r20 (mk_int__ref r9))))
(assert (=> (<= 0 b) (= i25 i3)))
(assert (=> (<= 0 b) (= i24 i12)))
(assert (=> (<= 0 b) (= r21 r10)))
(assert (=> (not (<= 0 b)) (= (mk_int__ref result5) (mk_int__ref i1))))
(assert (=> (not (<= 0 b)) (= i13 (- 1))))
(assert (=> (not (<= 0 b)) (=> (and (<= b i13) (<= i13 (- 1))) (and (and (= temp___162 i13) (and (= temp___161 r1) (and (= temp___163 b) (and (and (and (and (= o6 r1) (not (= r1 (- 2147483648)))) (= o7 (- o6 1))) (and (= r1 result6) (= r11 o7))) (and (and (= r12 (+ a i14)) (= b temp___163)) (and (and (and (=> (<= (- 2147483648) 2147483647) (in_range1 r12)) (=> (<= b (- 1)) (dynamic_property1 b (- 1) i14))) (and (<= b i14) (<= i14 (- 1)))) (= i14 b))))))) (and (and (= i18 (mk_int__ref i14)) (= r16 (mk_int__ref r12))) (and (= i19 i14) (= r17 r12)))))))
(assert (=> (not (<= 0 b)) (=> (and (<= b i13) (<= i13 (- 1))) (= i20 i18))))
(assert (=> (not (<= 0 b)) (=> (and (<= b i13) (<= i13 (- 1))) (= r18 r16))))
(assert (=> (not (<= 0 b)) (=> (and (<= b i13) (<= i13 (- 1))) (= i21 i19))))
(assert (=> (not (<= 0 b)) (=> (and (<= b i13) (<= i13 (- 1))) (= r19 r17))))
(assert (=> (not (<= 0 b)) (=> (not (and (<= b i13) (<= i13 (- 1)))) (= i20 (mk_int__ref i13)))))
(assert (=> (not (<= 0 b)) (=> (not (and (<= b i13) (<= i13 (- 1)))) (= r18 (mk_int__ref r1)))))
(assert (=> (not (<= 0 b)) (=> (not (and (<= b i13) (<= i13 (- 1)))) (= i21 i13))))
(assert (=> (not (<= 0 b)) (=> (not (and (<= b i13) (<= i13 (- 1)))) (= r19 r1))))
(assert (=> (not (<= 0 b)) (= i23 i20)))
(assert (=> (not (<= 0 b)) (= i22 (mk_int__ref i))))
(assert (=> (not (<= 0 b)) (= r20 r18)))
(assert (=> (not (<= 0 b)) (= i25 i21)))
(assert (=> (not (<= 0 b)) (= i24 i2)))
(assert (=> (not (<= 0 b)) (= r21 r19)))
(assert (= arithmetic__plus__result2 (mk_int__ref arithmetic__plus__result1)))
(assert (= arithmetic__plus__result3 arithmetic__plus__result1))
(assert (= result9 (mk_int__ref arithmetic__plus__result)))
(assert (= arithmetic__plus__result1 (int__content r20)))
(assert (= arithmetic__plus__result4 arithmetic__plus__result2))
(assert (= i27 i23))
(assert (= i26 i22))
(assert (= r22 r20))
(assert (= arithmetic__plus__result5 arithmetic__plus__result3))
(assert (= i29 i25))
(assert (= i28 i24))
(assert (= r23 r21))
(assert (not (in_range1 (+ a b))))
(check-sat)
(exit)
