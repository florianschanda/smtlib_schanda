(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort a_subtype 0)
(declare-fun user_eq (a_subtype a_subtype) Bool)
(declare-const value__size Int)
(declare-fun object__size (a_subtype) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (a_subtype) Int)
(assert (<= 0 value__size))
(assert (forall ((a a_subtype)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a a_subtype)) (<= 0 (object__alignment a))))
(declare-const dummy a_subtype)
(declare-datatypes () ((a_subtype__ref (mk_a_subtype__ref (a_subtype__content a_subtype)))))
(define-fun a_subtype__ref___projection ((a a_subtype__ref)) a_subtype (a_subtype__content a))
(define-fun dynamic_invariant ((temp___expr_200 a_subtype) (temp___is_init_196 Bool) (temp___skip_constant_197 Bool) (temp___do_toplevel_198 Bool) (temp___do_typ_inv_199 Bool)) Bool (=> (= temp___do_toplevel_198 true) (not (= temp___is_init_196 true))))
(define-fun dynamic_predicate ((temp___204 a_subtype)) Bool false)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const temp___207 a_subtype)
(assert (not (dynamic_predicate temp___207)))
(check-sat)
(exit)
