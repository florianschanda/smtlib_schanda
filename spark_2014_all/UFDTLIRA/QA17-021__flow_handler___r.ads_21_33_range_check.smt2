(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort interrupt_id 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 63)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (interrupt_id interrupt_id) Bool)
(declare-const dummy interrupt_id)
(declare-datatypes () ((interrupt_id__ref (mk_interrupt_id__ref (interrupt_id__content interrupt_id)))))
(define-fun interrupt_id__ref___2__projection ((a interrupt_id__ref)) interrupt_id (interrupt_id__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__r__pt__irq interrupt_id)))))
(define-fun us_split_discrs___2__projection ((a us_split_discrs)) interrupt_id (rec__r__pt__irq a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs)))))
(define-fun us_rep___30__projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const r__pt__irq__first__bit Int)
(declare-const r__pt__irq__last__bit Int)
(declare-const r__pt__irq__position Int)
(assert (<= 0 r__pt__irq__first__bit))
(assert (< r__pt__irq__first__bit r__pt__irq__last__bit))
(assert (<= 0 r__pt__irq__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-datatypes () ((pt__ref (mk_pt__ref (pt__content us_rep)))))
(define-fun pt__ref___projection ((a pt__ref)) us_rep (pt__content a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs2 us_split_discrs)))))
(define-fun us_rep___31__projection ((a us_rep1)) us_split_discrs (us_split_discrs2 a))
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a)))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r)))
(declare-fun to_rep (interrupt_id) Int)
(declare-fun of_rep (Int) interrupt_id)
(assert (forall ((x interrupt_id)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x interrupt_id)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(define-fun in_range2 ((rec__r__pt__irq1 Int) (a us_rep)) Bool (= rec__r__pt__irq1 (to_rep (rec__r__pt__irq (us_split_discrs1 a)))))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const r__pt__irq__first__bit1 Int)
(declare-const r__pt__irq__last__bit1 Int)
(declare-const r__pt__irq__position1 Int)
(assert (<= 0 r__pt__irq__first__bit1))
(assert (< r__pt__irq__first__bit1 r__pt__irq__last__bit1))
(assert (<= 0 r__pt__irq__position1))
(declare-fun user_eq2 (us_rep1 us_rep1) Bool)
(declare-datatypes () ((constrained__ref (mk_constrained__ref (constrained__content us_rep1)))))
(define-fun constrained__ref___projection ((a constrained__ref)) us_rep1 (constrained__content a))
(define-fun dynamic_invariant ((temp___expr_1529 us_rep1) (temp___is_init_1526 Bool) (temp___skip_constant_1527 Bool) (temp___do_toplevel_1528 Bool)) Bool (=> (not (= temp___skip_constant_1527 true)) (in_range2 2 (to_base temp___expr_1529))))
(define-fun default_initial_assumption ((temp___expr_1531 us_rep1) (temp___skip_top_level_1532 Bool)) Bool (= (to_rep (rec__r__pt__irq (us_split_discrs2 temp___expr_1531))) 2))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_discrs3 us_split_discrs)))))
(define-fun us_rep___34__projection ((a us_rep2)) us_split_discrs (us_split_discrs3 a))
(define-fun to_base1 ((a us_rep2)) us_rep (mk___rep (us_split_discrs3 a)))
(define-fun of_base1 ((r us_rep)) us_rep2 (mk___rep2 (us_split_discrs1 r)))
(define-fun in_range3 ((rec__r__pt__irq1 Int) (a us_rep)) Bool (= rec__r__pt__irq1 (to_rep (rec__r__pt__irq (us_split_discrs1 a)))))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep2) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep2) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep2)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment2 a))))
(declare-const r__pt__irq__first__bit2 Int)
(declare-const r__pt__irq__last__bit2 Int)
(declare-const r__pt__irq__position2 Int)
(assert (<= 0 r__pt__irq__first__bit2))
(assert (< r__pt__irq__first__bit2 r__pt__irq__last__bit2))
(assert (<= 0 r__pt__irq__position2))
(declare-fun user_eq3 (us_rep2 us_rep2) Bool)
(declare-datatypes () ((derived_constrained__ref (mk_derived_constrained__ref (derived_constrained__content us_rep2)))))
(define-fun derived_constrained__ref___projection ((a derived_constrained__ref)) us_rep2 (derived_constrained__content a))
(define-fun dynamic_invariant1 ((temp___expr_1550 us_rep2) (temp___is_init_1547 Bool) (temp___skip_constant_1548 Bool) (temp___do_toplevel_1549 Bool)) Bool (=> (not (= temp___skip_constant_1548 true)) (in_range3 4 (to_base1 temp___expr_1550))))
(define-fun default_initial_assumption1 ((temp___expr_1552 us_rep2) (temp___skip_top_level_1553 Bool)) Bool (= (to_rep (rec__r__pt__irq (us_split_discrs3 temp___expr_1552))) 4))
(declare-datatypes () ((us_rep3 (mk___rep3 (us_split_discrs4 us_split_discrs)))))
(define-fun us_rep___36__projection ((a us_rep3)) us_split_discrs (us_split_discrs4 a))
(define-fun to_base2 ((a us_rep3)) us_rep (mk___rep (us_split_discrs4 a)))
(define-fun of_base2 ((r us_rep)) us_rep3 (mk___rep3 (us_split_discrs1 r)))
(define-fun in_range4 ((rec__r__pt__irq1 Int) (a us_rep)) Bool (= rec__r__pt__irq1 (to_rep (rec__r__pt__irq (us_split_discrs1 a)))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep3) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep3) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep3)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment3 a))))
(declare-const r__pt__irq__first__bit3 Int)
(declare-const r__pt__irq__last__bit3 Int)
(declare-const r__pt__irq__position3 Int)
(assert (<= 0 r__pt__irq__first__bit3))
(assert (< r__pt__irq__first__bit3 r__pt__irq__last__bit3))
(assert (<= 0 r__pt__irq__position3))
(declare-fun user_eq4 (us_rep3 us_rep3) Bool)
(declare-datatypes () ((tpo1S__ref (mk_tpo1S__ref (tpo1S__content us_rep3)))))
(define-fun tpo1S__ref___projection ((a tpo1S__ref)) us_rep3 (tpo1S__content a))
(define-fun dynamic_invariant2 ((temp___expr_1563 us_rep3) (temp___is_init_1560 Bool) (temp___skip_constant_1561 Bool) (temp___do_toplevel_1562 Bool)) Bool (=> (not (= temp___skip_constant_1561 true)) (in_range4 1 (to_base2 temp___expr_1563))))
(define-fun default_initial_assumption2 ((temp___expr_1565 us_rep3) (temp___skip_top_level_1566 Bool)) Bool (= (to_rep (rec__r__pt__irq (us_split_discrs4 temp___expr_1565))) 1))
(declare-const po1__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const po2__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-datatypes () ((us_rep4 (mk___rep4 (us_split_discrs5 us_split_discrs)))))
(define-fun us_rep___37__projection ((a us_rep4)) us_split_discrs (us_split_discrs5 a))
(define-fun to_base3 ((a us_rep4)) us_rep (mk___rep (us_split_discrs5 a)))
(define-fun of_base3 ((r us_rep)) us_rep4 (mk___rep4 (us_split_discrs1 r)))
(define-fun in_range5 ((rec__r__pt__irq1 Int) (a us_rep)) Bool (= rec__r__pt__irq1 (to_rep (rec__r__pt__irq (us_split_discrs1 a)))))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep4) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep4) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep4)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment4 a))))
(declare-const r__pt__irq__first__bit4 Int)
(declare-const r__pt__irq__last__bit4 Int)
(declare-const r__pt__irq__position4 Int)
(assert (<= 0 r__pt__irq__first__bit4))
(assert (< r__pt__irq__first__bit4 r__pt__irq__last__bit4))
(assert (<= 0 r__pt__irq__position4))
(declare-fun user_eq5 (us_rep4 us_rep4) Bool)
(declare-datatypes () ((tpo3S__ref (mk_tpo3S__ref (tpo3S__content us_rep4)))))
(define-fun tpo3S__ref___projection ((a tpo3S__ref)) us_rep4 (tpo3S__content a))
(define-fun dynamic_invariant3 ((temp___expr_1571 us_rep4) (temp___is_init_1568 Bool) (temp___skip_constant_1569 Bool) (temp___do_toplevel_1570 Bool)) Bool (=> (not (= temp___skip_constant_1569 true)) (in_range5 3 (to_base3 temp___expr_1571))))
(define-fun default_initial_assumption3 ((temp___expr_1573 us_rep4) (temp___skip_top_level_1574 Bool)) Bool (= (to_rep (rec__r__pt__irq (us_split_discrs5 temp___expr_1573))) 3))
(declare-const po3__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const po4__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-datatypes () ((us_rep5 (mk___rep5 (us_split_discrs6 us_split_discrs)))))
(define-fun us_rep___38__projection ((a us_rep5)) us_split_discrs (us_split_discrs6 a))
(define-fun to_base4 ((a us_rep5)) us_rep (mk___rep (us_split_discrs6 a)))
(define-fun of_base4 ((r us_rep)) us_rep5 (mk___rep5 (us_split_discrs1 r)))
(define-fun in_range6 ((rec__r__pt__irq1 Int) (a us_rep)) Bool (= rec__r__pt__irq1 (to_rep (rec__r__pt__irq (us_split_discrs1 a)))))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep5) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep5) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep5)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment5 a))))
(declare-const r__pt__irq__first__bit5 Int)
(declare-const r__pt__irq__last__bit5 Int)
(declare-const r__pt__irq__position5 Int)
(assert (<= 0 r__pt__irq__first__bit5))
(assert (< r__pt__irq__first__bit5 r__pt__irq__last__bit5))
(assert (<= 0 r__pt__irq__position5))
(declare-fun user_eq6 (us_rep5 us_rep5) Bool)
(declare-datatypes () ((tpo5S__ref (mk_tpo5S__ref (tpo5S__content us_rep5)))))
(define-fun tpo5S__ref___projection ((a tpo5S__ref)) us_rep5 (tpo5S__content a))
(define-fun dynamic_invariant4 ((temp___expr_1579 us_rep5) (temp___is_init_1576 Bool) (temp___skip_constant_1577 Bool) (temp___do_toplevel_1578 Bool)) Bool (=> (not (= temp___skip_constant_1577 true)) (in_range6 5 (to_base4 temp___expr_1579))))
(define-fun default_initial_assumption4 ((temp___expr_1581 us_rep5) (temp___skip_top_level_1582 Bool)) Bool (= (to_rep (rec__r__pt__irq (us_split_discrs6 temp___expr_1581))) 5))
(declare-const po5__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_invariant5 ((temp___expr_1518 Int) (temp___is_init_1515 Bool) (temp___skip_constant_1516 Bool) (temp___do_toplevel_1517 Bool)) Bool (=> (or (= temp___is_init_1515 true) (<= 0 63)) (in_range1 temp___expr_1518)))
(declare-const x Bool)
(declare-const us Int)
(declare-const us1 Int)
(declare-const us2 Int)
(declare-const us3 Int)
(declare-const us4 Int)
(declare-const result Bool)
(declare-const x1 Bool)
(assert (= result x))
(assert (= x1 (of_int 1)))
(assert (and (= us 2) (in_range1 2)))
(assert (and (= us1 4) (in_range1 4)))
(assert (and (= us2 1) (in_range1 1)))
(assert (= (to_rep (rec__r__pt__irq po1__split_discrs)) 1))
(assert (= 1 (to_rep (rec__r__pt__irq po1__split_discrs))))
(assert (= (to_rep (rec__r__pt__irq po2__split_discrs)) 2))
(assert (= 2 (to_rep (rec__r__pt__irq po2__split_discrs))))
(assert (and (= us3 3) (in_range1 3)))
(assert (= (to_rep (rec__r__pt__irq po3__split_discrs)) 3))
(assert (= 3 (to_rep (rec__r__pt__irq po3__split_discrs))))
(assert (= (to_rep (rec__r__pt__irq po4__split_discrs)) 4))
(assert (= 4 (to_rep (rec__r__pt__irq po4__split_discrs))))
(assert (not (in_range1 5)))
(check-sat)
(exit)
