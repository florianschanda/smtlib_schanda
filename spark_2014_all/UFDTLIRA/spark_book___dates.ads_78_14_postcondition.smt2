(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort year_type 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 2000 x) (<= x 2099)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (year_type year_type) Bool)
(declare-const dummy year_type)
(declare-datatypes () ((year_type__ref (mk_year_type__ref (year_type__content year_type)))))
(define-fun year_type__ref___projection ((a year_type__ref)) year_type (year_type__content a))
(declare-fun to_rep (year_type) Int)
(declare-fun of_rep (Int) year_type)
(assert (forall ((x year_type)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x year_type)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort month_type 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (month_type month_type) Bool)
(declare-const dummy1 month_type)
(declare-datatypes () ((month_type__ref (mk_month_type__ref (month_type__content month_type)))))
(define-fun month_type__ref___projection ((a month_type__ref)) month_type (month_type__content a))
(declare-fun to_rep1 (month_type) Int)
(declare-fun of_rep1 (Int) month_type)
(assert (forall ((x month_type)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x month_type)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort day_type 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (day_type day_type) Bool)
(declare-const dummy2 day_type)
(declare-datatypes () ((day_type__ref (mk_day_type__ref (day_type__content day_type)))))
(define-fun day_type__ref___projection ((a day_type__ref)) day_type (day_type__content a))
(declare-fun to_rep2 (day_type) Int)
(declare-fun of_rep2 (Int) day_type)
(assert (forall ((x day_type)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x day_type)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort hour_type 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 23)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (hour_type hour_type) Bool)
(declare-const dummy3 hour_type)
(declare-datatypes () ((hour_type__ref (mk_hour_type__ref (hour_type__content hour_type)))))
(define-fun hour_type__ref___projection ((a hour_type__ref)) hour_type (hour_type__content a))
(declare-fun to_rep3 (hour_type) Int)
(declare-fun of_rep3 (Int) hour_type)
(assert (forall ((x hour_type)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x hour_type)) (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort minute_type 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 59)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (minute_type minute_type) Bool)
(declare-const dummy4 minute_type)
(declare-datatypes () ((minute_type__ref (mk_minute_type__ref (minute_type__content minute_type)))))
(define-fun minute_type__ref___projection ((a minute_type__ref)) minute_type (minute_type__content a))
(declare-fun to_rep4 (minute_type) Int)
(declare-fun of_rep4 (Int) minute_type)
(assert (forall ((x minute_type)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x minute_type)) (! (in_range5 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-sort second_type 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 59)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (second_type second_type) Bool)
(declare-const dummy5 second_type)
(declare-datatypes () ((second_type__ref (mk_second_type__ref (second_type__content second_type)))))
(define-fun second_type__ref___projection ((a second_type__ref)) second_type (second_type__content a))
(declare-fun to_rep5 (second_type) Int)
(declare-fun of_rep5 (Int) second_type)
(assert (forall ((x second_type)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x second_type)) (! (in_range6 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__dates__date__day day_type) (rec__dates__date__month month_type) (rec__dates__date__year year_type)))))
(define-fun us_split_fields_Day__projection ((a us_split_fields)) day_type (rec__dates__date__day a))
(define-fun us_split_fields_Month__projection ((a us_split_fields)) month_type (rec__dates__date__month a))
(define-fun us_split_fields_Year__projection ((a us_split_fields)) year_type (rec__dates__date__year a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (and (= (to_rep2 (rec__dates__date__day (us_split_fields1 a))) (to_rep2 (rec__dates__date__day (us_split_fields1 b)))) (= (to_rep1 (rec__dates__date__month (us_split_fields1 a))) (to_rep1 (rec__dates__date__month (us_split_fields1 b))))) (= (to_rep (rec__dates__date__year (us_split_fields1 a))) (to_rep (rec__dates__date__year (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const dates__date__day__first__bit Int)
(declare-const dates__date__day__last__bit Int)
(declare-const dates__date__day__position Int)
(assert (<= 0 dates__date__day__first__bit))
(assert (< dates__date__day__first__bit dates__date__day__last__bit))
(assert (<= 0 dates__date__day__position))
(declare-const dates__date__month__first__bit Int)
(declare-const dates__date__month__last__bit Int)
(declare-const dates__date__month__position Int)
(assert (<= 0 dates__date__month__first__bit))
(assert (< dates__date__month__first__bit dates__date__month__last__bit))
(assert (<= 0 dates__date__month__position))
(declare-const dates__date__year__first__bit Int)
(declare-const dates__date__year__last__bit Int)
(declare-const dates__date__year__position Int)
(assert (<= 0 dates__date__year__first__bit))
(assert (< dates__date__year__first__bit dates__date__year__last__bit))
(assert (<= 0 dates__date__year__position))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((date__ref (mk_date__ref (date__content us_rep)))))
(define-fun date__ref___projection ((a date__ref)) us_rep (date__content a))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__dates__time__hour hour_type) (rec__dates__time__minute minute_type) (rec__dates__time__second second_type)))))
(define-fun us_split_fields_Hour__projection ((a us_split_fields2)) hour_type (rec__dates__time__hour a))
(define-fun us_split_fields_Minute__projection ((a us_split_fields2)) minute_type (rec__dates__time__minute a))
(define-fun us_split_fields_Second__projection ((a us_split_fields2)) second_type (rec__dates__time__second a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___2__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (= (to_rep3 (rec__dates__time__hour (us_split_fields3 a))) (to_rep3 (rec__dates__time__hour (us_split_fields3 b)))) (= (to_rep4 (rec__dates__time__minute (us_split_fields3 a))) (to_rep4 (rec__dates__time__minute (us_split_fields3 b))))) (= (to_rep5 (rec__dates__time__second (us_split_fields3 a))) (to_rep5 (rec__dates__time__second (us_split_fields3 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const dates__time__hour__first__bit Int)
(declare-const dates__time__hour__last__bit Int)
(declare-const dates__time__hour__position Int)
(assert (<= 0 dates__time__hour__first__bit))
(assert (< dates__time__hour__first__bit dates__time__hour__last__bit))
(assert (<= 0 dates__time__hour__position))
(declare-const dates__time__minute__first__bit Int)
(declare-const dates__time__minute__last__bit Int)
(declare-const dates__time__minute__position Int)
(assert (<= 0 dates__time__minute__first__bit))
(assert (< dates__time__minute__first__bit dates__time__minute__last__bit))
(assert (<= 0 dates__time__minute__position))
(declare-const dates__time__second__first__bit Int)
(declare-const dates__time__second__last__bit Int)
(declare-const dates__time__second__position Int)
(assert (<= 0 dates__time__second__first__bit))
(assert (< dates__time__second__first__bit dates__time__second__last__bit))
(assert (<= 0 dates__time__second__position))
(declare-fun user_eq7 (us_rep1 us_rep1) Bool)
(declare-const dummy7 us_rep1)
(declare-datatypes () ((time__ref (mk_time__ref (time__content us_rep1)))))
(define-fun time__ref___projection ((a time__ref)) us_rep1 (time__content a))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__dates__datetime__date_part us_rep) (rec__dates__datetime__time_part us_rep1)))))
(define-fun us_split_fields_Date_Part__projection ((a us_split_fields4)) us_rep (rec__dates__datetime__date_part a))
(define-fun us_split_fields_Time_Part__projection ((a us_split_fields4)) us_rep1 (rec__dates__datetime__time_part a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___3__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq2 ((a us_rep2) (b us_rep2)) Bool (ite (and (= (bool_eq (rec__dates__datetime__date_part (us_split_fields5 a)) (rec__dates__datetime__date_part (us_split_fields5 b))) true) (= (bool_eq1 (rec__dates__datetime__time_part (us_split_fields5 a)) (rec__dates__datetime__time_part (us_split_fields5 b))) true)) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep2) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep2) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep2)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment2 a))))
(declare-const dates__datetime__date_part__first__bit Int)
(declare-const dates__datetime__date_part__last__bit Int)
(declare-const dates__datetime__date_part__position Int)
(assert (<= 0 dates__datetime__date_part__first__bit))
(assert (< dates__datetime__date_part__first__bit dates__datetime__date_part__last__bit))
(assert (<= 0 dates__datetime__date_part__position))
(declare-const dates__datetime__time_part__first__bit Int)
(declare-const dates__datetime__time_part__last__bit Int)
(declare-const dates__datetime__time_part__position Int)
(assert (<= 0 dates__datetime__time_part__first__bit))
(assert (< dates__datetime__time_part__first__bit dates__datetime__time_part__last__bit))
(assert (<= 0 dates__datetime__time_part__position))
(declare-fun user_eq8 (us_rep2 us_rep2) Bool)
(declare-const dummy8 us_rep2)
(declare-datatypes () ((datetime__ref (mk_datetime__ref (datetime__content us_rep2)))))
(define-fun datetime__ref___projection ((a datetime__ref)) us_rep2 (datetime__content a))
(declare-fun maximum_datetime (tuple0) us_rep2)
(declare-fun maximum_datetime__function_guard (us_rep2 tuple0) Bool)
(assert true)
(assert (forall ((us_void_param tuple0)) (! (= (maximum_datetime us_void_param) (mk___rep2 (mk___split_fields2 (mk___rep (mk___split_fields (of_rep2 31) (of_rep1 12) (of_rep 2099))) (mk___rep1 (mk___split_fields1 (of_rep3 23) (of_rep4 59) (of_rep5 59)))))) :pattern ((maximum_datetime us_void_param)))))
(declare-fun minimum_datetime (tuple0) us_rep2)
(declare-fun minimum_datetime__function_guard (us_rep2 tuple0) Bool)
(assert true)
(assert (forall ((us_void_param tuple0)) (! (= (minimum_datetime us_void_param) (mk___rep2 (mk___split_fields2 (mk___rep (mk___split_fields (of_rep2 1) (of_rep1 1) (of_rep 2000))) (mk___rep1 (mk___split_fields1 (of_rep3 0) (of_rep4 0) (of_rep5 0)))))) :pattern ((minimum_datetime us_void_param)))))
(declare-const past us_rep2)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const future us_rep2)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_invariant ((temp___expr_150 Int) (temp___is_init_147 Bool) (temp___skip_constant_148 Bool) (temp___do_toplevel_149 Bool)) Bool (=> (or (= temp___is_init_147 true) (<= 2000 2099)) (in_range1 temp___expr_150)))
(define-fun dynamic_invariant1 ((temp___expr_156 Int) (temp___is_init_153 Bool) (temp___skip_constant_154 Bool) (temp___do_toplevel_155 Bool)) Bool (=> (or (= temp___is_init_153 true) (<= 1 12)) (in_range2 temp___expr_156)))
(define-fun dynamic_invariant2 ((temp___expr_162 Int) (temp___is_init_159 Bool) (temp___skip_constant_160 Bool) (temp___do_toplevel_161 Bool)) Bool (=> (or (= temp___is_init_159 true) (<= 1 31)) (in_range3 temp___expr_162)))
(define-fun dynamic_invariant3 ((temp___expr_168 Int) (temp___is_init_165 Bool) (temp___skip_constant_166 Bool) (temp___do_toplevel_167 Bool)) Bool (=> (or (= temp___is_init_165 true) (<= 0 23)) (in_range4 temp___expr_168)))
(define-fun dynamic_invariant4 ((temp___expr_174 Int) (temp___is_init_171 Bool) (temp___skip_constant_172 Bool) (temp___do_toplevel_173 Bool)) Bool (=> (or (= temp___is_init_171 true) (<= 0 59)) (in_range5 temp___expr_174)))
(define-fun dynamic_invariant5 ((temp___expr_180 Int) (temp___is_init_177 Bool) (temp___skip_constant_178 Bool) (temp___do_toplevel_179 Bool)) Bool (=> (or (= temp___is_init_177 true) (<= 0 59)) (in_range6 temp___expr_180)))
(declare-const result__ Bool)
(declare-const dates__is_before__result Bool)
(declare-const result Bool)
(declare-const result__1 Bool)
(declare-const result1 Bool)
(declare-const result__2 Bool)
(declare-const result2 Bool)
(declare-const result__3 Bool)
(declare-const result3 Bool)
(declare-const result__4 Bool)
(declare-const result4 Bool)
(declare-const result__5 Bool)
(declare-const result5 Bool)
(declare-const result__6 Bool)
(declare-const result6 Bool)
(declare-const result__7 Bool)
(declare-const result7 Bool)
(declare-const dates__is_before__result1 Bool)
(declare-const dates__is_before__result2 Bool)
(declare-const dates__is_before__result3 Bool)
(declare-const result__8 Bool)
(declare-const dates__is_before__result4 Bool)
(declare-const result__9 Bool)
(declare-const dates__is_before__result5 Bool)
(declare-const result8 Bool)
(assert (= result result__))
(assert (= result__1 (of_int 0)))
(assert (=> (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (= result1 result__1)))
(assert (=> (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (= result__2 (of_int 1))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (= result2 result__1)))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (= result__3 (of_int 1))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (= result3 result__1)))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (= result__4 (of_int 1))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (< (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (= result4 result__1)))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (< (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (= result__5 (of_int 1))))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (=> (= (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (=> (< (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (= result5 result__1)))))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (=> (= (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (=> (< (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (= result__6 (of_int 1))))))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (=> (= (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (=> (not (< (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (=> (= (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (=> (< (to_rep5 (rec__dates__time__second (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep5 (rec__dates__time__second (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (= result6 result__1)))))))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (=> (= (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (=> (not (< (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (=> (= (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (=> (< (to_rep5 (rec__dates__time__second (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep5 (rec__dates__time__second (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (= result__7 (of_int 1))))))))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (=> (= (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (=> (not (< (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (=> (= (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (=> (not (< (to_rep5 (rec__dates__time__second (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep5 (rec__dates__time__second (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (= result__7 result__1)))))))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (=> (= (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (=> (not (< (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (=> (not (= (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (= result__7 result__1))))))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (=> (= (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future)))))) (=> (not (< (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep4 (rec__dates__time__minute (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (= result__6 result__7)))))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (=> (not (= (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (= result__6 result__1))))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 past))))) (to_rep3 (rec__dates__time__hour (us_split_fields3 (rec__dates__datetime__time_part (us_split_fields5 future))))))) (= result__5 result__6)))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (not (= (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (= result__5 result__1))))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep2 (rec__dates__date__day (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (= result__4 result__5)))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (not (= (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (= result__4 result__1))))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future)))))) (=> (not (< (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep1 (rec__dates__date__month (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (= result__3 result__4)))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (=> (not (= (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (= result__3 result__1))))
(assert (=> (not (< (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 past))))) (to_rep (rec__dates__date__year (us_split_fields1 (rec__dates__datetime__date_part (us_split_fields5 future))))))) (= result__2 result__3)))
(assert (= dates__is_before__result1 dates__is_before__result2))
(assert (= dates__is_before__result3 dates__is_before__result1))
(assert (= result7 dates__is_before__result))
(assert (= dates__is_before__result1 result__2))
(assert (= (mk_bool__ref dates__is_before__result4) (mk_bool__ref dates__is_before__result2)))
(assert (= result__8 result__2))
(assert (= dates__is_before__result5 dates__is_before__result3))
(assert (= result__9 result__2))
(assert (= result8 dates__is_before__result4))
(assert (= dates__is_before__result4 true))
(assert (not (not (= (bool_eq2 past (maximum_datetime Tuple0)) true))))
(check-sat)
(exit)
