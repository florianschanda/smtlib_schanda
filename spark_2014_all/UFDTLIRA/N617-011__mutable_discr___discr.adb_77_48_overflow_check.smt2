(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range1 temp___expr_39)))
(declare-fun f (Int) Int)
(declare-fun f__function_guard (Int Int) Bool)
(assert (forall ((x Int)) (! (=> (and (dynamic_invariant x true true true true) (< 0 x)) (dynamic_invariant (f x) true false true true)) :pattern ((f x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant x true true true true) (= (f x) (- x 1))) :pattern ((f x)))))
(declare-const c Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun to_rep ((x natural)) Int (naturalqtint x))
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__discr__r6__with_bad_default1__d natural)))))
(define-fun us_split_discrs___5__projection ((a us_split_discrs)) natural (rec__discr__r6__with_bad_default1__d a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___5__projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (attr__constrained Bool)))))
(define-fun us_rep___11__projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___12__projection ((a us_rep)) Bool (attr__constrained a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (= (to_rep (rec__discr__r6__with_bad_default1__d (us_split_discrs1 a))) (to_rep (rec__discr__r6__with_bad_default1__d (us_split_discrs1 b)))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const discr__r6__with_bad_default1__d__first__bit Int)
(declare-const discr__r6__with_bad_default1__d__last__bit Int)
(declare-const discr__r6__with_bad_default1__d__position Int)
(assert (<= 0 discr__r6__with_bad_default1__d__first__bit))
(assert (< discr__r6__with_bad_default1__d__first__bit discr__r6__with_bad_default1__d__last__bit))
(assert (<= 0 discr__r6__with_bad_default1__d__position))
(declare-fun user_eq2 (us_rep us_rep) Bool)
(declare-const dummy2 us_rep)
(declare-datatypes () ((with_bad_default1__ref (mk_with_bad_default1__ref (with_bad_default1__content us_rep)))))
(define-fun with_bad_default1__ref___projection ((a with_bad_default1__ref)) us_rep (with_bad_default1__content a))
(define-fun default_initial_assumption ((temp___expr_248 us_rep) (temp___skip_top_level_249 Bool)) Bool (and (= (attr__constrained temp___expr_248) false) (= (to_rep (rec__discr__r6__with_bad_default1__d (us_split_discrs1 temp___expr_248))) (+ c 1))))
(declare-const d1__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-datatypes () ((us_split_discrs2 (mk___split_discrs1 (rec__discr__r6__with_bad_default2__d natural)))))
(define-fun us_split_discrs___6__projection ((a us_split_discrs2)) natural (rec__discr__r6__with_bad_default2__d a))
(declare-datatypes () ((us_split_discrs__ref1 (mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref___6__projection ((a us_split_discrs__ref1)) us_split_discrs2 (us_split_discrs__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs3 us_split_discrs2) (attr__constrained1 Bool)))))
(define-fun us_rep___13__projection ((a us_rep1)) us_split_discrs2 (us_split_discrs3 a))
(define-fun us_rep___14__projection ((a us_rep1)) Bool (attr__constrained1 a))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (= (to_rep (rec__discr__r6__with_bad_default2__d (us_split_discrs3 a))) (to_rep (rec__discr__r6__with_bad_default2__d (us_split_discrs3 b)))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const discr__r6__with_bad_default2__d__first__bit Int)
(declare-const discr__r6__with_bad_default2__d__last__bit Int)
(declare-const discr__r6__with_bad_default2__d__position Int)
(assert (<= 0 discr__r6__with_bad_default2__d__first__bit))
(assert (< discr__r6__with_bad_default2__d__first__bit discr__r6__with_bad_default2__d__last__bit))
(assert (<= 0 discr__r6__with_bad_default2__d__position))
(declare-fun user_eq3 (us_rep1 us_rep1) Bool)
(declare-const dummy3 us_rep1)
(declare-datatypes () ((with_bad_default2__ref (mk_with_bad_default2__ref (with_bad_default2__content us_rep1)))))
(define-fun with_bad_default2__ref___projection ((a with_bad_default2__ref)) us_rep1 (with_bad_default2__content a))
(define-fun default_initial_assumption1 ((temp___expr_257 us_rep1) (temp___skip_top_level_258 Bool)) Bool (and (= (attr__constrained1 temp___expr_257) false) (= (to_rep (rec__discr__r6__with_bad_default2__d (us_split_discrs3 temp___expr_257))) (f c))))
(declare-const d2__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(assert (in_range1 c))
(assert (not (in_range (+ c 1))))
(check-sat)
(exit)
