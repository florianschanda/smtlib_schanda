(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort natural 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__default_init__discr__b Bool)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) Bool (rec__default_init__discr__b a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__default_init__discr__f natural)))))
(define-fun us_split_fields_F__4__projection ((a us_split_fields)) natural (rec__default_init__discr__f a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___4__projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___5__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun default_init__discr__f__pred ((a us_rep)) Bool (= (to_int1 (rec__default_init__discr__b (us_split_discrs1 a))) 1))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (= (rec__default_init__discr__b (us_split_discrs1 a)) (rec__default_init__discr__b (us_split_discrs1 b))) (=> (default_init__discr__f__pred a) (= (to_rep (rec__default_init__discr__f (us_split_fields1 a))) (to_rep (rec__default_init__discr__f (us_split_fields1 b)))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const default_init__discr__b__first__bit Int)
(declare-const default_init__discr__b__last__bit Int)
(declare-const default_init__discr__b__position Int)
(assert (<= 0 default_init__discr__b__first__bit))
(assert (< default_init__discr__b__first__bit default_init__discr__b__last__bit))
(assert (<= 0 default_init__discr__b__position))
(declare-const default_init__discr__f__first__bit Int)
(declare-const default_init__discr__f__last__bit Int)
(declare-const default_init__discr__f__position Int)
(assert (<= 0 default_init__discr__f__first__bit))
(assert (< default_init__discr__f__first__bit default_init__discr__f__last__bit))
(assert (<= 0 default_init__discr__f__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((discr__ref (mk_discr__ref (discr__content us_rep)))))
(define-fun discr__ref___projection ((a discr__ref)) us_rep (discr__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range1 temp___expr_33)))
(declare-fun init (Int) Int)
(declare-fun init__function_guard (Int Int) Bool)
(assert (forall ((x Int)) (! (=> (dynamic_invariant x true true true) (dynamic_invariant (init x) true false true)) :pattern ((init x)))))
(declare-datatypes () ((us_split_discrs2 (mk___split_discrs1 (rec__default_init__mut_discr__b Bool)))))
(define-fun us_split_discrs___2__projection ((a us_split_discrs2)) Bool (rec__default_init__mut_discr__b a))
(declare-datatypes () ((us_split_discrs__ref1 (mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref1)) us_split_discrs2 (us_split_discrs__content1 a))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__default_init__mut_discr__f natural)))))
(define-fun us_split_fields_F__5__projection ((a us_split_fields2)) natural (rec__default_init__mut_discr__f a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___5__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs3 us_split_discrs2) (us_split_fields3 us_split_fields2) (attr__constrained Bool)))))
(define-fun us_rep___6__projection ((a us_rep1)) us_split_discrs2 (us_split_discrs3 a))
(define-fun us_rep___7__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun us_rep___8__projection ((a us_rep1)) Bool (attr__constrained a))
(define-fun default_init__mut_discr__f__pred ((a us_rep1)) Bool (= (to_int1 (rec__default_init__mut_discr__b (us_split_discrs3 a))) 1))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (rec__default_init__mut_discr__b (us_split_discrs3 a)) (rec__default_init__mut_discr__b (us_split_discrs3 b))) (=> (default_init__mut_discr__f__pred a) (= (to_rep (rec__default_init__mut_discr__f (us_split_fields3 a))) (to_rep (rec__default_init__mut_discr__f (us_split_fields3 b)))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const default_init__mut_discr__b__first__bit Int)
(declare-const default_init__mut_discr__b__last__bit Int)
(declare-const default_init__mut_discr__b__position Int)
(assert (<= 0 default_init__mut_discr__b__first__bit))
(assert (< default_init__mut_discr__b__first__bit default_init__mut_discr__b__last__bit))
(assert (<= 0 default_init__mut_discr__b__position))
(declare-const default_init__mut_discr__f__first__bit Int)
(declare-const default_init__mut_discr__f__last__bit Int)
(declare-const default_init__mut_discr__f__position Int)
(assert (<= 0 default_init__mut_discr__f__first__bit))
(assert (< default_init__mut_discr__f__first__bit default_init__mut_discr__f__last__bit))
(assert (<= 0 default_init__mut_discr__f__position))
(declare-fun user_eq2 (us_rep1 us_rep1) Bool)
(declare-const dummy2 us_rep1)
(declare-datatypes () ((mut_discr__ref (mk_mut_discr__ref (mut_discr__content us_rep1)))))
(define-fun mut_discr__ref___projection ((a mut_discr__ref)) us_rep1 (mut_discr__content a))
(declare-fun mut_discr_ok (us_rep1) Bool)
(declare-fun mut_discr_ok__function_guard (Bool us_rep1) Bool)
(define-fun default_initial_assumption ((temp___expr_220 us_rep1) (temp___skip_top_level_221 Bool)) Bool (and (and (= (attr__constrained temp___expr_220) false) (and (= (rec__default_init__mut_discr__b (us_split_discrs3 temp___expr_220)) (of_int 0)) (=> (default_init__mut_discr__f__pred temp___expr_220) (= (to_rep (rec__default_init__mut_discr__f (us_split_fields3 temp___expr_220))) (init 0))))) (=> (not (= temp___skip_top_level_221 true)) (= (mut_discr_ok temp___expr_220) true))))
(define-fun in_range2 ((rec__default_init__discr__b1 Bool) (a us_rep)) Bool (= rec__default_init__discr__b1 (rec__default_init__discr__b (us_split_discrs1 a))))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const default_init__discr__b__first__bit1 Int)
(declare-const default_init__discr__b__last__bit1 Int)
(declare-const default_init__discr__b__position1 Int)
(assert (<= 0 default_init__discr__b__first__bit1))
(assert (< default_init__discr__b__first__bit1 default_init__discr__b__last__bit1))
(assert (<= 0 default_init__discr__b__position1))
(declare-const default_init__discr__f__first__bit1 Int)
(declare-const default_init__discr__f__last__bit1 Int)
(declare-const default_init__discr__f__position1 Int)
(assert (<= 0 default_init__discr__f__first__bit1))
(assert (< default_init__discr__f__first__bit1 default_init__discr__f__last__bit1))
(assert (<= 0 default_init__discr__f__position1))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((td1S__ref (mk_td1S__ref (td1S__content us_rep)))))
(define-fun td1S__ref___projection ((a td1S__ref)) us_rep (td1S__content a))
(declare-fun discr_ok (us_rep) Bool)
(declare-fun discr_ok__function_guard (Bool us_rep) Bool)
(define-fun dynamic_invariant1 ((temp___expr_235 us_rep) (temp___is_init_232 Bool) (temp___skip_constant_233 Bool) (temp___do_toplevel_234 Bool)) Bool (=> (not (= temp___skip_constant_233 true)) (in_range2 (of_int 1) temp___expr_235)))
(define-fun default_initial_assumption1 ((temp___expr_237 us_rep) (temp___skip_top_level_238 Bool)) Bool (and (and (= (rec__default_init__discr__b (us_split_discrs1 temp___expr_237)) (of_int 1)) (=> (default_init__discr__f__pred temp___expr_237) (= (to_rep (rec__default_init__discr__f (us_split_fields1 temp___expr_237))) 0))) (=> (not (= temp___skip_top_level_238 true)) (= (discr_ok temp___expr_237) true))))
(declare-const d1__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun in_range3 ((rec__default_init__discr__b1 Bool) (a us_rep)) Bool (= rec__default_init__discr__b1 (rec__default_init__discr__b (us_split_discrs1 a))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const default_init__discr__b__first__bit2 Int)
(declare-const default_init__discr__b__last__bit2 Int)
(declare-const default_init__discr__b__position2 Int)
(assert (<= 0 default_init__discr__b__first__bit2))
(assert (< default_init__discr__b__first__bit2 default_init__discr__b__last__bit2))
(assert (<= 0 default_init__discr__b__position2))
(declare-const default_init__discr__f__first__bit2 Int)
(declare-const default_init__discr__f__last__bit2 Int)
(declare-const default_init__discr__f__position2 Int)
(assert (<= 0 default_init__discr__f__first__bit2))
(assert (< default_init__discr__f__first__bit2 default_init__discr__f__last__bit2))
(assert (<= 0 default_init__discr__f__position2))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((td2S__ref (mk_td2S__ref (td2S__content us_rep)))))
(define-fun td2S__ref___projection ((a td2S__ref)) us_rep (td2S__content a))
(define-fun dynamic_invariant2 ((temp___expr_244 us_rep) (temp___is_init_241 Bool) (temp___skip_constant_242 Bool) (temp___do_toplevel_243 Bool)) Bool (=> (not (= temp___skip_constant_242 true)) (in_range3 (of_int 0) temp___expr_244)))
(define-fun default_initial_assumption2 ((temp___expr_246 us_rep) (temp___skip_top_level_247 Bool)) Bool (and (and (= (rec__default_init__discr__b (us_split_discrs1 temp___expr_246)) (of_int 0)) (=> (default_init__discr__f__pred temp___expr_246) (= (to_rep (rec__default_init__discr__f (us_split_fields1 temp___expr_246))) 0))) (=> (not (= temp___skip_top_level_247 true)) (= (discr_ok temp___expr_246) true))))
(declare-const d2__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const d3__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun in_range4 ((rec__default_init__mut_discr__b1 Bool) (a us_rep1)) Bool (= rec__default_init__mut_discr__b1 (rec__default_init__mut_discr__b (us_split_discrs3 a))))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep1) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep1) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep1)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment4 a))))
(declare-const default_init__mut_discr__b__first__bit1 Int)
(declare-const default_init__mut_discr__b__last__bit1 Int)
(declare-const default_init__mut_discr__b__position1 Int)
(assert (<= 0 default_init__mut_discr__b__first__bit1))
(assert (< default_init__mut_discr__b__first__bit1 default_init__mut_discr__b__last__bit1))
(assert (<= 0 default_init__mut_discr__b__position1))
(declare-const default_init__mut_discr__f__first__bit1 Int)
(declare-const default_init__mut_discr__f__last__bit1 Int)
(declare-const default_init__mut_discr__f__position1 Int)
(assert (<= 0 default_init__mut_discr__f__first__bit1))
(assert (< default_init__mut_discr__f__first__bit1 default_init__mut_discr__f__last__bit1))
(assert (<= 0 default_init__mut_discr__f__position1))
(declare-fun user_eq5 (us_rep1 us_rep1) Bool)
(declare-const dummy5 us_rep1)
(declare-datatypes () ((td4S__ref (mk_td4S__ref (td4S__content us_rep1)))))
(define-fun td4S__ref___projection ((a td4S__ref)) us_rep1 (td4S__content a))
(define-fun dynamic_invariant3 ((temp___expr_253 us_rep1) (temp___is_init_250 Bool) (temp___skip_constant_251 Bool) (temp___do_toplevel_252 Bool)) Bool (and (=> (not (= temp___skip_constant_251 true)) (in_range4 (of_int 0) temp___expr_253)) (= (attr__constrained temp___expr_253) true)))
(define-fun default_initial_assumption3 ((temp___expr_255 us_rep1) (temp___skip_top_level_256 Bool)) Bool (and (and (= (attr__constrained temp___expr_255) true) (and (= (rec__default_init__mut_discr__b (us_split_discrs3 temp___expr_255)) (of_int 0)) (=> (default_init__mut_discr__f__pred temp___expr_255) (= (to_rep (rec__default_init__mut_discr__f (us_split_fields3 temp___expr_255))) (init 0))))) (=> (not (= temp___skip_top_level_256 true)) (= (mut_discr_ok temp___expr_255) true))))
(declare-const d4__split_discrs us_split_discrs2)
(declare-const d4__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun in_range5 ((rec__default_init__mut_discr__b1 Bool) (a us_rep1)) Bool (= rec__default_init__mut_discr__b1 (rec__default_init__mut_discr__b (us_split_discrs3 a))))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep1) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep1) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep1)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment5 a))))
(declare-const default_init__mut_discr__b__first__bit2 Int)
(declare-const default_init__mut_discr__b__last__bit2 Int)
(declare-const default_init__mut_discr__b__position2 Int)
(assert (<= 0 default_init__mut_discr__b__first__bit2))
(assert (< default_init__mut_discr__b__first__bit2 default_init__mut_discr__b__last__bit2))
(assert (<= 0 default_init__mut_discr__b__position2))
(declare-const default_init__mut_discr__f__first__bit2 Int)
(declare-const default_init__mut_discr__f__last__bit2 Int)
(declare-const default_init__mut_discr__f__position2 Int)
(assert (<= 0 default_init__mut_discr__f__first__bit2))
(assert (< default_init__mut_discr__f__first__bit2 default_init__mut_discr__f__last__bit2))
(assert (<= 0 default_init__mut_discr__f__position2))
(declare-fun user_eq6 (us_rep1 us_rep1) Bool)
(declare-const dummy6 us_rep1)
(declare-datatypes () ((td5S__ref (mk_td5S__ref (td5S__content us_rep1)))))
(define-fun td5S__ref___projection ((a td5S__ref)) us_rep1 (td5S__content a))
(define-fun dynamic_invariant4 ((temp___expr_262 us_rep1) (temp___is_init_259 Bool) (temp___skip_constant_260 Bool) (temp___do_toplevel_261 Bool)) Bool (and (=> (not (= temp___skip_constant_260 true)) (in_range5 (of_int 1) temp___expr_262)) (= (attr__constrained temp___expr_262) true)))
(define-fun default_initial_assumption4 ((temp___expr_264 us_rep1) (temp___skip_top_level_265 Bool)) Bool (and (and (= (attr__constrained temp___expr_264) true) (and (= (rec__default_init__mut_discr__b (us_split_discrs3 temp___expr_264)) (of_int 1)) (=> (default_init__mut_discr__f__pred temp___expr_264) (= (to_rep (rec__default_init__mut_discr__f (us_split_fields3 temp___expr_264))) (init 0))))) (=> (not (= temp___skip_top_level_265 true)) (= (mut_discr_ok temp___expr_264) true))))
(declare-const d5__split_discrs us_split_discrs2)
(declare-const d5__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(assert true)
(assert (forall ((x us_rep)) (! (= (= (discr_ok x) true) (=> (= (rec__default_init__discr__b (us_split_discrs1 x)) true) (= (to_rep (rec__default_init__discr__f (us_split_fields1 x))) 0))) :pattern ((discr_ok x)))))
(assert true)
(assert (forall ((x us_rep1)) (! (= (= (mut_discr_ok x) true) (not (= (rec__default_init__mut_discr__b (us_split_discrs3 x)) true))) :pattern ((mut_discr_ok x)))))
(declare-const d1__split_fields natural)
(declare-const d2__split_fields natural)
(declare-const d3__split_fields natural)
(declare-const d3__split_discrs Bool)
(declare-const d4__split_fields natural)
(declare-const d5__split_fields natural)
(declare-const temp___319 Bool)
(declare-const us Int)
(declare-const temp___325 Bool)
(declare-const us1 Int)
(assert (default_initial_assumption1 (mk___rep d1__split_discrs (mk___split_fields d1__split_fields)) false))
(assert (= (of_int 1) (rec__default_init__discr__b d1__split_discrs)))
(assert (not (in_range 0)))
(check-sat)
(exit)
