(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__formals_rec_split__rec__d Bool)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) Bool (rec__formals_rec_split__rec__d a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__formals_rec_split__rec__f integer)))))
(define-fun us_split_fields_F__projection ((a us_split_fields)) integer (rec__formals_rec_split__rec__f a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun formals_rec_split__rec__f__pred ((a us_rep)) Bool (= (ite (rec__formals_rec_split__rec__d (us_split_discrs1 a)) 1 0) 1))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (= (rec__formals_rec_split__rec__d (us_split_discrs1 a)) (rec__formals_rec_split__rec__d (us_split_discrs1 b))) (=> (formals_rec_split__rec__f__pred a) (= (to_rep (rec__formals_rec_split__rec__f (us_split_fields1 a))) (to_rep (rec__formals_rec_split__rec__f (us_split_fields1 b)))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const formals_rec_split__rec__d__first__bit Int)
(declare-const formals_rec_split__rec__d__last__bit Int)
(declare-const formals_rec_split__rec__d__position Int)
(assert (<= 0 formals_rec_split__rec__d__first__bit))
(assert (< formals_rec_split__rec__d__first__bit formals_rec_split__rec__d__last__bit))
(assert (<= 0 formals_rec_split__rec__d__position))
(declare-const formals_rec_split__rec__f__first__bit Int)
(declare-const formals_rec_split__rec__f__last__bit Int)
(declare-const formals_rec_split__rec__f__position Int)
(assert (<= 0 formals_rec_split__rec__f__first__bit))
(assert (< formals_rec_split__rec__f__first__bit formals_rec_split__rec__f__last__bit))
(assert (<= 0 formals_rec_split__rec__f__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((rec____ref (mk_rec____ref (rec____content us_rep)))))
(define-fun rec____ref___projection ((a rec____ref)) us_rep (rec____content a))
(define-fun in_range2 ((rec__formals_rec_split__rec__d1 Bool) (a us_rep)) Bool (= rec__formals_rec_split__rec__d1 (rec__formals_rec_split__rec__d (us_split_discrs1 a))))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const formals_rec_split__rec__d__first__bit1 Int)
(declare-const formals_rec_split__rec__d__last__bit1 Int)
(declare-const formals_rec_split__rec__d__position1 Int)
(assert (<= 0 formals_rec_split__rec__d__first__bit1))
(assert (< formals_rec_split__rec__d__first__bit1 formals_rec_split__rec__d__last__bit1))
(assert (<= 0 formals_rec_split__rec__d__position1))
(declare-const formals_rec_split__rec__f__first__bit1 Int)
(declare-const formals_rec_split__rec__f__last__bit1 Int)
(declare-const formals_rec_split__rec__f__position1 Int)
(assert (<= 0 formals_rec_split__rec__f__first__bit1))
(assert (< formals_rec_split__rec__f__first__bit1 formals_rec_split__rec__f__last__bit1))
(assert (<= 0 formals_rec_split__rec__f__position1))
(declare-fun user_eq2 (us_rep us_rep) Bool)
(declare-const dummy2 us_rep)
(declare-datatypes () ((constr_rec__ref (mk_constr_rec__ref (constr_rec__content us_rep)))))
(define-fun constr_rec__ref___projection ((a constr_rec__ref)) us_rep (constr_rec__content a))
(declare-const x Bool)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun dynamic_invariant ((temp___expr_164 us_rep) (temp___is_init_160 Bool) (temp___skip_constant_161 Bool) (temp___do_toplevel_162 Bool) (temp___do_typ_inv_163 Bool)) Bool (=> (not (= temp___skip_constant_161 true)) (in_range2 x temp___expr_164)))
(define-fun default_initial_assumption ((temp___expr_166 us_rep) (temp___skip_top_level_167 Bool)) Bool (and (= (rec__formals_rec_split__rec__d (us_split_discrs1 temp___expr_166)) x) (=> (formals_rec_split__rec__f__pred temp___expr_166) (= (to_rep (rec__formals_rec_split__rec__f (us_split_fields1 temp___expr_166))) 1))))
(declare-const y Bool)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const b1 Bool)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const b2 Bool)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun in_range3 ((rec__formals_rec_split__rec__d1 Bool) (a us_rep)) Bool (= rec__formals_rec_split__rec__d1 (rec__formals_rec_split__rec__d (us_split_discrs1 a))))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const formals_rec_split__rec__d__first__bit2 Int)
(declare-const formals_rec_split__rec__d__last__bit2 Int)
(declare-const formals_rec_split__rec__d__position2 Int)
(assert (<= 0 formals_rec_split__rec__d__first__bit2))
(assert (< formals_rec_split__rec__d__first__bit2 formals_rec_split__rec__d__last__bit2))
(assert (<= 0 formals_rec_split__rec__d__position2))
(declare-const formals_rec_split__rec__f__first__bit2 Int)
(declare-const formals_rec_split__rec__f__last__bit2 Int)
(declare-const formals_rec_split__rec__f__position2 Int)
(assert (<= 0 formals_rec_split__rec__f__first__bit2))
(assert (< formals_rec_split__rec__f__first__bit2 formals_rec_split__rec__f__last__bit2))
(assert (<= 0 formals_rec_split__rec__f__position2))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((constr_rec_2__ref (mk_constr_rec_2__ref (constr_rec_2__content us_rep)))))
(define-fun constr_rec_2__ref___projection ((a constr_rec_2__ref)) us_rep (constr_rec_2__content a))
(define-fun dynamic_invariant1 ((temp___expr_173 us_rep) (temp___is_init_169 Bool) (temp___skip_constant_170 Bool) (temp___do_toplevel_171 Bool) (temp___do_typ_inv_172 Bool)) Bool (=> (not (= temp___skip_constant_170 true)) (in_range3 y temp___expr_173)))
(define-fun default_initial_assumption1 ((temp___expr_175 us_rep) (temp___skip_top_level_176 Bool)) Bool (and (= (rec__formals_rec_split__rec__d (us_split_discrs1 temp___expr_175)) y) (=> (formals_rec_split__rec__f__pred temp___expr_175) (= (to_rep (rec__formals_rec_split__rec__f (us_split_fields1 temp___expr_175))) 1))))
(declare-const v__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const u__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_invariant2 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-const rliteral integer)
(assert (= (integerqtint rliteral) 1))
(declare-const v__split_fields integer)
(declare-const u__split_fields integer)
(declare-const u__split_fields1 integer)
(declare-const result integer)
(declare-const u__split_fields2 integer)
(assert (default_initial_assumption (mk___rep v__split_discrs (mk___split_fields v__split_fields)) false))
(assert (= x (rec__formals_rec_split__rec__d v__split_discrs)))
(assert (default_initial_assumption1 (mk___rep u__split_discrs (mk___split_fields u__split_fields)) false))
(assert (= y (rec__formals_rec_split__rec__d u__split_discrs)))
(assert (=> (= y true) (= result u__split_fields)))
(assert (=> (= y true) (= rliteral u__split_fields2)))
(assert (=> (not (= y true)) (= u__split_fields u__split_fields2)))
(assert (=> (not (= y true)) (= u__split_fields1 u__split_fields2)))
(assert (= b1 true))
(assert (= b2 true))
(assert (not (= x (rec__formals_rec_split__rec__d u__split_discrs))))
(check-sat)
(exit)
