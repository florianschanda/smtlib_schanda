(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort natural 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__membership_discr__root__c natural)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural (rec__membership_discr__root__c a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__ext__ us_private)))))
(define-fun us_split_fields___projection ((a us_split_fields)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields) (attr__tag Int)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___3__projection ((a us_rep)) Int (attr__tag a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (= (to_rep (rec__membership_discr__root__c (us_split_discrs1 a))) (to_rep (rec__membership_discr__root__c (us_split_discrs1 b)))) true false))
(declare-fun us_dispatch_eq (us_rep us_rep) Bool)
(declare-const us_tag Int)
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const membership_discr__root__c__first__bit Int)
(declare-const membership_discr__root__c__last__bit Int)
(declare-const membership_discr__root__c__position Int)
(assert (<= 0 membership_discr__root__c__first__bit))
(assert (< membership_discr__root__c__first__bit membership_discr__root__c__last__bit))
(assert (<= 0 membership_discr__root__c__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((root__ref (mk_root__ref (root__content us_rep)))))
(define-fun root__ref___projection ((a root__ref)) us_rep (root__content a))
(declare-const us_tag1 Int)
(define-fun in_range2 ((rec__membership_discr__root__c1 Int) (a us_rep)) Bool (= rec__membership_discr__root__c1 (to_rep (rec__membership_discr__root__c (us_split_discrs1 a)))))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const membership_discr__root__c__first__bit1 Int)
(declare-const membership_discr__root__c__last__bit1 Int)
(declare-const membership_discr__root__c__position1 Int)
(assert (<= 0 membership_discr__root__c__first__bit1))
(assert (< membership_discr__root__c__first__bit1 membership_discr__root__c__last__bit1))
(assert (<= 0 membership_discr__root__c__position1))
(declare-fun user_eq2 (us_rep us_rep) Bool)
(declare-const dummy2 us_rep)
(declare-datatypes () ((root_02__ref (mk_root_02__ref (root_02__content us_rep)))))
(define-fun root_02__ref___projection ((a root_02__ref)) us_rep (root_02__content a))
(declare-const us_tag2 Int)
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const membership_discr__root__c__first__bit2 Int)
(declare-const membership_discr__root__c__last__bit2 Int)
(declare-const membership_discr__root__c__position2 Int)
(assert (<= 0 membership_discr__root__c__first__bit2))
(assert (< membership_discr__root__c__first__bit2 membership_discr__root__c__last__bit2))
(assert (<= 0 membership_discr__root__c__position2))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((child__ref (mk_child__ref (child__content us_rep)))))
(define-fun child__ref___projection ((a child__ref)) us_rep (child__content a))
(declare-const us_tag3 Int)
(define-fun in_range3 ((rec__membership_discr__root__c1 Int) (a us_rep)) Bool (= rec__membership_discr__root__c1 (to_rep (rec__membership_discr__root__c (us_split_discrs1 a)))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const membership_discr__root__c__first__bit3 Int)
(declare-const membership_discr__root__c__last__bit3 Int)
(declare-const membership_discr__root__c__position3 Int)
(assert (<= 0 membership_discr__root__c__first__bit3))
(assert (< membership_discr__root__c__first__bit3 membership_discr__root__c__last__bit3))
(assert (<= 0 membership_discr__root__c__position3))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((child_01__ref (mk_child_01__ref (child_01__content us_rep)))))
(define-fun child_01__ref___projection ((a child_01__ref)) us_rep (child_01__content a))
(define-fun dynamic_invariant ((temp___expr_207 us_rep) (temp___is_init_204 Bool) (temp___skip_constant_205 Bool) (temp___do_toplevel_206 Bool)) Bool (=> (not (= temp___skip_constant_205 true)) (in_range3 0 temp___expr_207)))
(define-fun default_initial_assumption ((temp___expr_209 us_rep) (temp___skip_top_level_210 Bool)) Bool (and (= (attr__tag temp___expr_209) us_tag3) (= (to_rep (rec__membership_discr__root__c (us_split_discrs1 temp___expr_209))) 0)))
(declare-const us_tag4 Int)
(define-fun in_range4 ((rec__membership_discr__root__c1 Int) (a us_rep)) Bool (= rec__membership_discr__root__c1 (to_rep (rec__membership_discr__root__c (us_split_discrs1 a)))))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep)) (<= 0 (object__alignment4 a))))
(declare-const membership_discr__root__c__first__bit4 Int)
(declare-const membership_discr__root__c__last__bit4 Int)
(declare-const membership_discr__root__c__position4 Int)
(assert (<= 0 membership_discr__root__c__first__bit4))
(assert (< membership_discr__root__c__first__bit4 membership_discr__root__c__last__bit4))
(assert (<= 0 membership_discr__root__c__position4))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((child_02__ref (mk_child_02__ref (child_02__content us_rep)))))
(define-fun child_02__ref___projection ((a child_02__ref)) us_rep (child_02__content a))
(define-fun dynamic_invariant1 ((temp___expr_215 us_rep) (temp___is_init_212 Bool) (temp___skip_constant_213 Bool) (temp___do_toplevel_214 Bool)) Bool (=> (not (= temp___skip_constant_213 true)) (in_range4 0 temp___expr_215)))
(define-fun default_initial_assumption1 ((temp___expr_217 us_rep) (temp___skip_top_level_218 Bool)) Bool (and (= (attr__tag temp___expr_217) us_tag4) (= (to_rep (rec__membership_discr__root__c (us_split_discrs1 temp___expr_217))) 0)))
(declare-const us_tag5 Int)
(define-fun in_range5 ((rec__membership_discr__root__c1 Int) (a us_rep)) Bool (= rec__membership_discr__root__c1 (to_rep (rec__membership_discr__root__c (us_split_discrs1 a)))))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep)) (<= 0 (object__alignment5 a))))
(declare-const membership_discr__root__c__first__bit5 Int)
(declare-const membership_discr__root__c__last__bit5 Int)
(declare-const membership_discr__root__c__position5 Int)
(assert (<= 0 membership_discr__root__c__first__bit5))
(assert (< membership_discr__root__c__first__bit5 membership_discr__root__c__last__bit5))
(assert (<= 0 membership_discr__root__c__position5))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((child_03__ref (mk_child_03__ref (child_03__content us_rep)))))
(define-fun child_03__ref___projection ((a child_03__ref)) us_rep (child_03__content a))
(define-fun dynamic_invariant2 ((temp___expr_223 us_rep) (temp___is_init_220 Bool) (temp___skip_constant_221 Bool) (temp___do_toplevel_222 Bool)) Bool (=> (not (= temp___skip_constant_221 true)) (in_range5 0 temp___expr_223)))
(define-fun default_initial_assumption2 ((temp___expr_225 us_rep) (temp___skip_top_level_226 Bool)) Bool (and (= (attr__tag temp___expr_225) us_tag5) (= (to_rep (rec__membership_discr__root__c (us_split_discrs1 temp___expr_225))) 0)))
(declare-const us_tag6 Int)
(define-fun in_range6 ((rec__membership_discr__root__c1 Int) (a us_rep)) Bool (= rec__membership_discr__root__c1 (to_rep (rec__membership_discr__root__c (us_split_discrs1 a)))))
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep)) (<= 0 (object__alignment6 a))))
(declare-const membership_discr__root__c__first__bit6 Int)
(declare-const membership_discr__root__c__last__bit6 Int)
(declare-const membership_discr__root__c__position6 Int)
(assert (<= 0 membership_discr__root__c__first__bit6))
(assert (< membership_discr__root__c__first__bit6 membership_discr__root__c__last__bit6))
(assert (<= 0 membership_discr__root__c__position6))
(declare-fun user_eq7 (us_rep us_rep) Bool)
(declare-const dummy7 us_rep)
(declare-datatypes () ((child_04__ref (mk_child_04__ref (child_04__content us_rep)))))
(define-fun child_04__ref___projection ((a child_04__ref)) us_rep (child_04__content a))
(declare-const us_tag7 Int)
(define-fun in_range7 ((rec__membership_discr__root__c1 Int) (a us_rep)) Bool (= rec__membership_discr__root__c1 (to_rep (rec__membership_discr__root__c (us_split_discrs1 a)))))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep)) (<= 0 (object__alignment7 a))))
(declare-const membership_discr__root__c__first__bit7 Int)
(declare-const membership_discr__root__c__last__bit7 Int)
(declare-const membership_discr__root__c__position7 Int)
(assert (<= 0 membership_discr__root__c__first__bit7))
(assert (< membership_discr__root__c__first__bit7 membership_discr__root__c__last__bit7))
(assert (<= 0 membership_discr__root__c__position7))
(declare-fun user_eq8 (us_rep us_rep) Bool)
(declare-const dummy8 us_rep)
(declare-datatypes () ((tr00S__ref (mk_tr00S__ref (tr00S__content us_rep)))))
(define-fun tr00S__ref___projection ((a tr00S__ref)) us_rep (tr00S__content a))
(define-fun dynamic_invariant3 ((temp___expr_247 us_rep) (temp___is_init_244 Bool) (temp___skip_constant_245 Bool) (temp___do_toplevel_246 Bool)) Bool (=> (not (= temp___skip_constant_245 true)) (in_range7 0 temp___expr_247)))
(define-fun default_initial_assumption3 ((temp___expr_249 us_rep) (temp___skip_top_level_250 Bool)) Bool (and (= (attr__tag temp___expr_249) us_tag7) (= (to_rep (rec__membership_discr__root__c (us_split_discrs1 temp___expr_249))) 0)))
(declare-const r00__split_discrs us_split_discrs)
(declare-const r00__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const us_tag8 Int)
(define-fun in_range8 ((rec__membership_discr__root__c1 Int) (a us_rep)) Bool (= rec__membership_discr__root__c1 (to_rep (rec__membership_discr__root__c (us_split_discrs1 a)))))
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep)) (<= 0 (object__alignment8 a))))
(declare-const membership_discr__root__c__first__bit8 Int)
(declare-const membership_discr__root__c__last__bit8 Int)
(declare-const membership_discr__root__c__position8 Int)
(assert (<= 0 membership_discr__root__c__first__bit8))
(assert (< membership_discr__root__c__first__bit8 membership_discr__root__c__last__bit8))
(assert (<= 0 membership_discr__root__c__position8))
(declare-fun user_eq9 (us_rep us_rep) Bool)
(declare-const dummy9 us_rep)
(declare-datatypes () ((tc00S__ref (mk_tc00S__ref (tc00S__content us_rep)))))
(define-fun tc00S__ref___projection ((a tc00S__ref)) us_rep (tc00S__content a))
(define-fun dynamic_invariant4 ((temp___expr_255 us_rep) (temp___is_init_252 Bool) (temp___skip_constant_253 Bool) (temp___do_toplevel_254 Bool)) Bool (=> (not (= temp___skip_constant_253 true)) (in_range8 0 temp___expr_255)))
(define-fun default_initial_assumption4 ((temp___expr_257 us_rep) (temp___skip_top_level_258 Bool)) Bool (and (= (attr__tag temp___expr_257) us_tag8) (= (to_rep (rec__membership_discr__root__c (us_split_discrs1 temp___expr_257))) 0)))
(declare-const c00__split_discrs us_split_discrs)
(declare-const c00__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const c01__split_discrs us_split_discrs)
(declare-const c01__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const c02__split_discrs us_split_discrs)
(declare-const c02__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const c03__split_discrs us_split_discrs)
(declare-const c03__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_invariant5 ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range1 temp___expr_33)))
(define-fun dynamic_invariant6 ((temp___expr_189 us_rep) (temp___is_init_186 Bool) (temp___skip_constant_187 Bool) (temp___do_toplevel_188 Bool)) Bool (=> (not (= temp___skip_constant_187 true)) (in_range2 0 temp___expr_189)))
(define-fun default_initial_assumption5 ((temp___expr_191 us_rep) (temp___skip_top_level_192 Bool)) Bool (and (= (attr__tag temp___expr_191) us_tag1) (= (to_rep (rec__membership_discr__root__c (us_split_discrs1 temp___expr_191))) 0)))
(define-fun dynamic_invariant7 ((temp___expr_231 us_rep) (temp___is_init_228 Bool) (temp___skip_constant_229 Bool) (temp___do_toplevel_230 Bool)) Bool (=> (not (= temp___skip_constant_229 true)) (in_range6 0 temp___expr_231)))
(define-fun default_initial_assumption6 ((temp___expr_233 us_rep) (temp___skip_top_level_234 Bool)) Bool (and (= (attr__tag temp___expr_233) us_tag6) (= (to_rep (rec__membership_discr__root__c (us_split_discrs1 temp___expr_233))) 0)))
(declare-const us Int)
(declare-const us1 Int)
(declare-const us2 Int)
(declare-const us3 Int)
(declare-const us4 Int)
(declare-const us5 Int)
(declare-const us6 Int)
(declare-const us7 Int)
(assert (and (= us 0) (in_range1 0)))
(assert (and (= us1 0) (in_range1 0)))
(assert (and (= us2 0) (in_range1 0)))
(assert (and (= us3 0) (in_range1 0)))
(assert (and (= us4 0) (in_range1 0)))
(assert (and (= us5 0) (in_range1 0)))
(assert (and (= us6 0) (in_range1 0)))
(assert (and (= r00__attr__tag us_tag7) (= (to_rep (rec__membership_discr__root__c r00__split_discrs)) 0)))
(assert (= 0 (to_rep (rec__membership_discr__root__c r00__split_discrs))))
(assert (and (= us7 0) (in_range1 0)))
(assert (and (= c00__attr__tag us_tag8) (= (to_rep (rec__membership_discr__root__c c00__split_discrs)) 0)))
(assert (= 0 (to_rep (rec__membership_discr__root__c c00__split_discrs))))
(assert (and (= c01__attr__tag us_tag3) (= (to_rep (rec__membership_discr__root__c c01__split_discrs)) 0)))
(assert (= 0 (to_rep (rec__membership_discr__root__c c01__split_discrs))))
(assert (and (= c02__attr__tag us_tag4) (= (to_rep (rec__membership_discr__root__c c02__split_discrs)) 0)))
(assert (= 0 (to_rep (rec__membership_discr__root__c c02__split_discrs))))
(assert (and (= c03__attr__tag us_tag5) (= (to_rep (rec__membership_discr__root__c c03__split_discrs)) 0)))
(assert (= 0 (to_rep (rec__membership_discr__root__c c03__split_discrs))))
(assert (= r00__attr__tag us_tag))
(assert (and (= 0 (to_rep (rec__membership_discr__root__c r00__split_discrs))) (= r00__attr__tag us_tag1)))
(assert (not (= c00__attr__tag us_tag2)))
(check-sat)
(exit)
