(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-const a Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const b Int)
(declare-const c Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const result Int)
(declare-const c1 Int)
(declare-const result1 Int)
(declare-const b1 Int)
(declare-const result2 Int)
(declare-const b2 Int)
(declare-const result3 Int)
(declare-const c2 Int)
(declare-const b3 Int)
(declare-const result4 Int)
(declare-const b4 Int)
(define-fun b5 () int__ref (mk_int__ref b))
(assert (in_range1 a))
(assert (or (= a 0) (= a 1)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 b)))
(assert (= (mk_int__ref result) (mk_int__ref c)))
(assert (= c1 3))
(assert (in_range1 c1))
(assert (=> (= a 0) (= (mk_int__ref result1) b5)))
(assert (=> (= a 0) (= b1 500)))
(assert (=> (not (= a 0)) (= (mk_int__ref result2) b5)))
(assert (=> (not (= a 0)) (= b2 1000)))
(assert (=> (not (= a 0)) (= b1 b2)))
(assert (and (= o (+ c1 b1)) (in_range1 (+ c1 b1))))
(assert (= c1 result3))
(assert (= c2 o))
(assert (< b1 1073741823))
(assert (< b3 1073741822))
(assert (and (=> (<= (- 2147483648) 2147483647) (in_range1 b3)) (< b3 1073741823)))
(assert (and (= o1 (+ 1 b3)) (in_range1 (+ 1 b3))))
(assert (= b3 result4))
(assert (= b4 o1))
(assert (< b4 1073741823))
(assert (not (< b4 1073741822)))
(check-sat)
(exit)
