(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort priority 0)
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 97)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (priority priority) Bool)
(declare-const dummy priority)
(declare-datatypes () ((priority__ref (mk_priority__ref (priority__content priority)))))
(define-fun priority__ref___projection ((a priority__ref)) priority (priority__content a))
(declare-sort po_procT 0)
(declare-fun user_eq1 (po_procT po_procT) Bool)
(declare-const value__size Int)
(declare-fun object__size (po_procT) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (po_procT) Int)
(assert (<= 0 value__size))
(assert (forall ((a po_procT)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a po_procT)) (<= 0 (object__alignment a))))
(declare-datatypes () ((po_procT__ref (mk_po_procT__ref (po_procT__content po_procT)))))
(define-fun po_procT__ref___projection ((a po_procT__ref)) po_procT (po_procT__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort po_funcT 0)
(declare-fun user_eq2 (po_funcT po_funcT) Bool)
(declare-const value__size1 Int)
(declare-fun object__size1 (po_funcT) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (po_funcT) Int)
(assert (<= 0 value__size1))
(assert (forall ((a po_funcT)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a po_funcT)) (<= 0 (object__alignment1 a))))
(declare-datatypes () ((po_funcT__ref (mk_po_funcT__ref (po_funcT__content po_funcT)))))
(define-fun po_funcT__ref___projection ((a po_funcT__ref)) po_funcT (po_funcT__content a))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort po_safeT 0)
(declare-fun user_eq3 (po_safeT po_safeT) Bool)
(declare-const value__size2 Int)
(declare-fun object__size2 (po_safeT) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (po_safeT) Int)
(assert (<= 0 value__size2))
(assert (forall ((a po_safeT)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a po_safeT)) (<= 0 (object__alignment2 a))))
(declare-datatypes () ((po_safeT__ref (mk_po_safeT__ref (po_safeT__content po_safeT)))))
(define-fun po_safeT__ref___projection ((a po_safeT__ref)) po_safeT (po_safeT__content a))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_invariant ((temp___expr_159 Int) (temp___is_init_156 Bool) (temp___skip_constant_157 Bool) (temp___do_toplevel_158 Bool)) Bool (=> (or (= temp___is_init_156 true) (<= 0 97)) (in_range temp___expr_159)))
(assert (not (<= 48 97)))
(check-sat)
(exit)
