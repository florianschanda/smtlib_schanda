(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort count_type 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (count_type count_type) Bool)
(declare-const dummy1 count_type)
(declare-datatypes () ((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type (count_type__content a))
(define-fun dynamic_invariant ((temp___expr_141 Int) (temp___is_init_138 Bool) (temp___skip_constant_139 Bool) (temp___do_toplevel_140 Bool)) Bool (=> (or (= temp___is_init_138 true) (<= 0 2147483647)) (in_range2 temp___expr_141)))
(define-fun dynamic_invariant1 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-fun id (Int Int Int) Int)
(declare-fun id__function_guard (Int Int Int Int) Bool)
(assert (forall ((x Int) (f Int) (l Int)) (! (=> (and (and (dynamic_invariant1 x true true true) (dynamic_invariant1 f true true true)) (dynamic_invariant1 l true true true)) (let ((result (id x f l))) (and (=> (and (<= f x) (<= x l)) (and (<= f result) (<= result l))) (dynamic_invariant1 result true false true)))) :pattern ((id x f l)))))
(declare-sort smaller 0)
(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483647) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (smaller smaller) Bool)
(declare-const dummy2 smaller)
(declare-datatypes () ((smaller__ref (mk_smaller__ref (smaller__content smaller)))))
(define-fun smaller__ref___projection ((a smaller__ref)) smaller (smaller__content a))
(define-fun dynamic_invariant2 ((temp___expr_183 Int) (temp___is_init_180 Bool) (temp___skip_constant_181 Bool) (temp___do_toplevel_182 Bool)) Bool (=> (or (= temp___is_init_180 true) (<= (- 2147483647) 2147483647)) (in_range3 temp___expr_183)))
(declare-const fst Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-const first Int)
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((bigger__ref (mk_bigger__ref (bigger__content integer)))))
(define-fun bigger__ref___projection ((a bigger__ref)) integer (bigger__content a))
(define-fun dynamic_invariant3 ((temp___expr_189 Int) (temp___is_init_186 Bool) (temp___skip_constant_187 Bool) (temp___do_toplevel_188 Bool)) Bool (=> (or (= temp___is_init_186 true) (<= first 2147483647)) (dynamic_property first 2147483647 temp___expr_189)))
(assert (= first fst))
(declare-const lst Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const first1 Int)
(declare-const last Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((index_type__ref (mk_index_type__ref (index_type__content integer)))))
(define-fun index_type__ref___2__projection ((a index_type__ref)) integer (index_type__content a))
(declare-const first2 Int)
(declare-const last1 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((extended_index__ref (mk_extended_index__ref (extended_index__content integer)))))
(define-fun extended_index__ref___projection ((a extended_index__ref)) integer (extended_index__content a))
(define-fun dynamic_invariant4 ((temp___expr_219 Int) (temp___is_init_216 Bool) (temp___skip_constant_217 Bool) (temp___do_toplevel_218 Bool)) Bool (=> (or (= temp___is_init_216 true) (<= first2 last1)) (dynamic_property2 first2 last1 temp___expr_219)))
(assert (= first2 (- first1 1)))
(assert (= last1 (+ (ite (< 2147483646 last) 2147483646 last) 1)))
(declare-const no_index Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const last_count Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(assert (= fst (id 1 (- 2147483647) 2147483647)))
(assert (= lst (id 2147483647 fst 2147483647)))
(assert (= no_index first2))
(assert (= last_count (ite (< last first1) 0 (ite (or (< last (- 1)) (< (- last 2147483647) first1)) (+ (- last first1) 1) 2147483647))))
(define-fun dynamic_invariant5 ((temp___expr_207 Int) (temp___is_init_204 Bool) (temp___skip_constant_205 Bool) (temp___do_toplevel_206 Bool)) Bool (=> (or (= temp___is_init_204 true) (<= first1 last)) (dynamic_property1 first1 last temp___expr_207)))
(assert (= first1 fst))
(assert (= last lst))
(declare-const temp___363 Int)
(declare-const o Int)
(declare-const use_vectors__fst__assume Int)
(declare-const temp___361 Int)
(declare-const us Int)
(declare-const use_vectors__lst__assume Int)
(assert (dynamic_property2 first2 last1 no_index))
(assert (= first2 no_index))
(assert (in_range2 last_count))
(assert (=> (< last first1) (= temp___363 0)))
(assert (=> (not (< last first1)) (=> (=> (not (< last (- 1))) (< (- last 2147483647) first1)) (= temp___363 (+ (- last first1) 1)))))
(assert (=> (not (< last first1)) (=> (not (=> (not (< last (- 1))) (< (- last 2147483647) first1))) (= temp___363 2147483647))))
(assert (= temp___363 last_count))
(assert (and (= o (id 1 (- 2147483647) 2147483647)) (and (in_range1 o) (=> (and (<= (- 2147483647) 1) (<= 1 2147483647)) (and (<= (- 2147483647) o) (<= o 2147483647))))))
(assert (not (in_range3 o)))
(check-sat)
(exit)
