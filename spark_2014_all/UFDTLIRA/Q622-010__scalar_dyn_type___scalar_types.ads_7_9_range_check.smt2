(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(declare-fun id (Int) Int)
(declare-fun id__function_guard (Int Int) Bool)
(assert (forall ((x Int)) (! (=> (dynamic_invariant x true true true true) (dynamic_invariant (id x) true false true true)) :pattern ((id x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant x true true true true) (= (id x) x)) :pattern ((id x)))))
(declare-const dyn_ty_LAST Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort tdyn_tyB 0)
(declare-fun tdyn_tyBqtint (tdyn_tyB) Int)
(assert (forall ((i tdyn_tyB)) (and (<= (- 2147483648) (tdyn_tyBqtint i)) (<= (tdyn_tyBqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (tdyn_tyB tdyn_tyB) Bool)
(declare-const dummy1 tdyn_tyB)
(declare-datatypes () ((tdyn_tyB__ref (mk_tdyn_tyB__ref (tdyn_tyB__content tdyn_tyB)))))
(define-fun tdyn_tyB__ref___projection ((a tdyn_tyB__ref)) tdyn_tyB (tdyn_tyB__content a))
(define-fun to_rep ((x tdyn_tyB)) Int (tdyn_tyBqtint x))
(declare-fun of_rep (Int) tdyn_tyB)
(assert (forall ((x tdyn_tyB)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x tdyn_tyB)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-const last Int)
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (tdyn_tyB tdyn_tyB) Bool)
(declare-const dummy2 tdyn_tyB)
(declare-datatypes () ((dyn_ty__ref (mk_dyn_ty__ref (dyn_ty__content tdyn_tyB)))))
(define-fun dyn_ty__ref___projection ((a dyn_ty__ref)) tdyn_tyB (dyn_ty__content a))
(define-fun dynamic_invariant1 ((temp___expr_158 Int) (temp___is_init_154 Bool) (temp___skip_constant_155 Bool) (temp___do_toplevel_156 Bool) (temp___do_typ_inv_157 Bool)) Bool (=> (or (= temp___is_init_154 true) (<= 1 last)) (dynamic_property 1 last temp___expr_158)))
(assert (= last dyn_ty_LAST))
(declare-const scalar_types__dyn_ty_LAST__assume Int)
(assert (and (= scalar_types__dyn_ty_LAST__assume (id 10)) (and (in_range scalar_types__dyn_ty_LAST__assume) (= scalar_types__dyn_ty_LAST__assume 10))))
(assert (= scalar_types__dyn_ty_LAST__assume dyn_ty_LAST))
(assert (in_range dyn_ty_LAST))
(assert (<= 1 100))
(assert (not (<= 100 last)))
(check-sat)
(exit)
