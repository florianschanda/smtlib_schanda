(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort tcount_typeB 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (tcount_typeB tcount_typeB) Bool)
(declare-const dummy tcount_typeB)
(declare-datatypes () ((tcount_typeB__ref (mk_tcount_typeB__ref (tcount_typeB__content tcount_typeB)))))
(define-fun tcount_typeB__ref___projection ((a tcount_typeB__ref)) tcount_typeB (tcount_typeB__content a))
(declare-sort capacity_range 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (capacity_range capacity_range) Bool)
(declare-const dummy1 capacity_range)
(declare-datatypes () ((capacity_range__ref (mk_capacity_range__ref (capacity_range__content capacity_range)))))
(define-fun capacity_range__ref___2__projection ((a capacity_range__ref)) capacity_range (capacity_range__content a))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__names__entry_tables__vector__capacity capacity_range)))))
(define-fun us_split_discrs___2__projection ((a us_split_discrs)) capacity_range (rec__names__entry_tables__vector__capacity a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__names__entry_tables__vector us_main_type)))))
(define-fun us_split_fields_Vector__2__projection ((a us_split_fields)) us_main_type (rec__names__entry_tables__vector a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___4__projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___5__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const names__entry_tables__vector__capacity__first__bit Int)
(declare-const names__entry_tables__vector__capacity__last__bit Int)
(declare-const names__entry_tables__vector__capacity__position Int)
(assert (<= 0 names__entry_tables__vector__capacity__first__bit))
(assert (< names__entry_tables__vector__capacity__first__bit names__entry_tables__vector__capacity__last__bit))
(assert (<= 0 names__entry_tables__vector__capacity__position))
(declare-fun user_eq2 (us_rep us_rep) Bool)
(declare-const dummy2 us_rep)
(declare-datatypes () ((vector__ref (mk_vector__ref (vector__content us_rep)))))
(define-fun vector__ref___2__projection ((a vector__ref)) us_rep (vector__content a))
(declare-sort extended_index 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (extended_index extended_index) Bool)
(declare-const dummy3 extended_index)
(declare-datatypes () ((extended_index__ref (mk_extended_index__ref (extended_index__content extended_index)))))
(define-fun extended_index__ref___3__projection ((a extended_index__ref)) extended_index (extended_index__content a))
(define-fun dynamic_invariant ((temp___expr_437 Int) (temp___is_init_434 Bool) (temp___skip_constant_435 Bool) (temp___do_toplevel_436 Bool)) Bool (=> (or (= temp___is_init_434 true) (<= 0 2147483647)) (in_range3 temp___expr_437)))
(declare-fun to_rep (capacity_range) Int)
(declare-fun of_rep (Int) capacity_range)
(assert (forall ((x capacity_range)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x capacity_range)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(define-fun capacity ((container us_rep)) Int (ite (= (of_int 0) true) (to_rep (rec__names__entry_tables__vector__capacity (us_split_discrs1 container))) 2147483647))
(declare-fun capacity__function_guard (Int us_rep) Bool)
(define-fun dynamic_invariant1 ((temp___expr_443 Int) (temp___is_init_440 Bool) (temp___skip_constant_441 Bool) (temp___do_toplevel_442 Bool)) Bool (=> (or (= temp___is_init_440 true) (<= 0 2147483647)) (in_range2 temp___expr_443)))
(declare-fun length (us_rep) Int)
(declare-fun length__function_guard (Int us_rep) Bool)
(assert (forall ((container us_rep)) (! (let ((result (length container))) (and (<= result (capacity container)) (dynamic_invariant1 result true false true))) :pattern ((length container)))))
(declare-sort us_main_type1 0)
(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)
(declare-sort us_rep1 0)
(declare-fun bool_eq (us_rep1 us_rep1) Bool)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-fun user_eq4 (us_rep1 us_rep1) Bool)
(declare-const dummy4 us_rep1)
(declare-datatypes () ((sequence__ref (mk_sequence__ref (sequence__content us_rep1)))))
(define-fun sequence__ref___2__projection ((a sequence__ref)) us_rep1 (sequence__content a))
(declare-fun length1 (us_rep1) Int)
(declare-fun length__function_guard1 (Int us_rep1) Bool)
(define-fun last ((container us_rep1)) Int (+ 0 (length1 container)))
(declare-fun last__function_guard (Int us_rep1) Bool)
(declare-fun model__ (us_rep) us_rep1)
(declare-fun model____function_guard (us_rep1 us_rep) Bool)
(define-fun last_index ((container us_rep)) Int (last (model__ container)))
(declare-fun last_index__function_guard (Int us_rep) Bool)
(declare-const container__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const before Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const new_item us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort positive 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (positive positive) Bool)
(declare-const dummy5 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range4 temp___expr_39)))
(declare-sort char_table_index 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 2147483646)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (char_table_index char_table_index) Bool)
(declare-const dummy6 char_table_index)
(declare-datatypes () ((char_table_index__ref (mk_char_table_index__ref (char_table_index__content char_table_index)))))
(define-fun char_table_index__ref___projection ((a char_table_index__ref)) char_table_index (char_table_index__content a))
(define-fun dynamic_invariant3 ((temp___expr_256 Int) (temp___is_init_253 Bool) (temp___skip_constant_254 Bool) (temp___do_toplevel_255 Bool)) Bool (=> (or (= temp___is_init_253 true) (<= 0 2147483646)) (in_range5 temp___expr_256)))
(declare-fun to_rep1 (positive) Int)
(declare-fun of_rep1 (Int) positive)
(assert (forall ((x positive)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x positive)) (! (in_range4 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort name_id 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (name_id name_id) Bool)
(declare-const dummy7 name_id)
(declare-datatypes () ((name_id__ref (mk_name_id__ref (name_id__content name_id)))))
(define-fun name_id__ref___projection ((a name_id__ref)) name_id (name_id__content a))
(declare-fun to_rep2 (name_id) Int)
(declare-fun of_rep2 (Int) name_id)
(assert (forall ((x name_id)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x name_id)) (! (in_range6 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-fun to_rep3 (char_table_index) Int)
(declare-fun of_rep3 (Int) char_table_index)
(assert (forall ((x char_table_index)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x char_table_index)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__names__name_entry__table_index char_table_index) (rec__names__name_entry__length positive) (rec__names__name_entry__next_hash name_id)))))
(define-fun us_split_fields_Table_Index__projection ((a us_split_fields2)) char_table_index (rec__names__name_entry__table_index a))
(define-fun us_split_fields_Length__projection ((a us_split_fields2)) positive (rec__names__name_entry__length a))
(define-fun us_split_fields_Next_Hash__projection ((a us_split_fields2)) name_id (rec__names__name_entry__next_hash a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep2 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___3__projection ((a us_rep2)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq1 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (= (to_rep3 (rec__names__name_entry__table_index (us_split_fields3 a))) (to_rep3 (rec__names__name_entry__table_index (us_split_fields3 b)))) (= (to_rep1 (rec__names__name_entry__length (us_split_fields3 a))) (to_rep1 (rec__names__name_entry__length (us_split_fields3 b))))) (= (to_rep2 (rec__names__name_entry__next_hash (us_split_fields3 a))) (to_rep2 (rec__names__name_entry__next_hash (us_split_fields3 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep2) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep2) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep2)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment2 a))))
(declare-const names__name_entry__table_index__first__bit Int)
(declare-const names__name_entry__table_index__last__bit Int)
(declare-const names__name_entry__table_index__position Int)
(assert (<= 0 names__name_entry__table_index__first__bit))
(assert (< names__name_entry__table_index__first__bit names__name_entry__table_index__last__bit))
(assert (<= 0 names__name_entry__table_index__position))
(declare-const names__name_entry__length__first__bit Int)
(declare-const names__name_entry__length__last__bit Int)
(declare-const names__name_entry__length__position Int)
(assert (<= 0 names__name_entry__length__first__bit))
(assert (< names__name_entry__length__first__bit names__name_entry__length__last__bit))
(assert (<= 0 names__name_entry__length__position))
(declare-const names__name_entry__next_hash__first__bit Int)
(declare-const names__name_entry__next_hash__last__bit Int)
(declare-const names__name_entry__next_hash__position Int)
(assert (<= 0 names__name_entry__next_hash__first__bit))
(assert (< names__name_entry__next_hash__first__bit names__name_entry__next_hash__last__bit))
(assert (<= 0 names__name_entry__next_hash__position))
(declare-fun user_eq8 (us_rep2 us_rep2) Bool)
(declare-const dummy8 us_rep2)
(declare-datatypes () ((name_entry__ref (mk_name_entry__ref (name_entry__content us_rep2)))))
(define-fun name_entry__ref___projection ((a name_entry__ref)) us_rep2 (name_entry__content a))
(define-fun dynamic_invariant4 ((temp___expr_180 Int) (temp___is_init_177 Bool) (temp___skip_constant_178 Bool) (temp___do_toplevel_179 Bool)) Bool (=> (or (= temp___is_init_177 true) (<= 0 2147483647)) (in_range6 temp___expr_180)))
(declare-sort count_type 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (count_type count_type) Bool)
(declare-const dummy9 count_type)
(declare-datatypes () ((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type (count_type__content a))
(define-fun dynamic_invariant5 ((temp___expr_142 Int) (temp___is_init_139 Bool) (temp___skip_constant_140 Bool) (temp___do_toplevel_141 Bool)) Bool (=> (or (= temp___is_init_139 true) (<= 0 2147483647)) (in_range7 temp___expr_142)))
(declare-datatypes () ((element_type__ref (mk_element_type__ref (element_type__content us_rep2)))))
(define-fun element_type__ref___4__projection ((a element_type__ref)) us_rep2 (element_type__content a))
(declare-fun get (us_rep1 Int) us_rep2)
(declare-fun get__function_guard (us_rep2 us_rep1 Int) Bool)
(define-fun oeq ((left us_rep1) (right us_rep1)) Bool (and (= (length1 left) (length1 right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (bool_eq1 (get left n) (get right n)) true))) true false)))
(declare-fun oeq__function_guard (Bool us_rep1 us_rep1) Bool)
(assert (forall ((a us_rep1) (b us_rep1)) (! (= (user_eq4 a b) (oeq a b)) :pattern ((user_eq4 a b)))))
(define-fun default_initial_assumption ((temp___expr_480 us_rep1) (temp___skip_top_level_481 Bool)) Bool (=> (not (= temp___skip_top_level_481 true)) (= (length1 temp___expr_480) 0)))
(assert (forall ((container us_rep)) (! (= (length1 (model__ container)) (length container)) :pattern ((model__ container)))))
(declare-sort extended_index1 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq10 (extended_index1 extended_index1) Bool)
(declare-const dummy10 extended_index1)
(declare-datatypes () ((extended_index__ref1 (mk_extended_index__ref1 (extended_index__content1 extended_index1)))))
(define-fun extended_index__ref___4__projection ((a extended_index__ref1)) extended_index1 (extended_index__content1 a))
(define-fun dynamic_invariant6 ((temp___expr_473 Int) (temp___is_init_470 Bool) (temp___skip_constant_471 Bool) (temp___do_toplevel_472 Bool)) Bool (=> (or (= temp___is_init_470 true) (<= 0 2147483647)) (in_range8 temp___expr_473)))
(assert (forall ((container us_rep1)) (! (let ((result (length1 container))) (and (<= (+ 0 result) 2147483647) (dynamic_invariant5 result true false true))) :pattern ((length1 container)))))
(assert true)
(declare-const container__split_fields us_main_type)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Bool)
(declare-const o5 Int)
(declare-const o6 Bool)
(declare-const o7 Bool)
(declare-const o8 Bool)
(assert (in_range3 before))
(assert (=> (not (= before 0)) (and (= o5 (last (model__ (mk___rep container__split_discrs (mk___split_fields container__split_fields))))) (and (in_range3 o5) (= o5 (last (model__ (mk___rep container__split_discrs (mk___split_fields container__split_fields)))))))))
(assert (=> (not (= before 0)) (= o6 (ite (= (- before 1) o5) true false))))
(assert (=> (not (not (= before 0))) (= o6 false)))
(assert (and (= o3 (last (model__ (mk___rep container__split_discrs (mk___split_fields container__split_fields))))) (and (in_range3 o3) (= o3 (last (model__ (mk___rep container__split_discrs (mk___split_fields container__split_fields))))))))
(assert (= o4 (ite (<= before o3) true false)))
(assert (= o7 (ite (<= 1 before) o4 false)))
(assert (= o8 (ite (= o7 false) o6 true)))
(assert (and (= o (length new_item)) (and (in_range2 o) (<= o (capacity new_item)))))
(assert (and (= o1 (capacity (mk___rep container__split_discrs (mk___split_fields container__split_fields)))) (and (in_range2 o1) (= o1 (ite (= (of_int 0) true) (to_rep (rec__names__entry_tables__vector__capacity container__split_discrs)) 2147483647)))))
(assert (= o2 (- o1 o)))
(assert (not (in_range1 o2)))
(check-sat)
(exit)
