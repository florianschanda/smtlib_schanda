(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort index_type 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 1000)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (index_type index_type) Bool)
(declare-const dummy1 index_type)
(declare-datatypes () ((index_type__ref (mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref___projection ((a index_type__ref)) index_type (index_type__content a))
(declare-sort extended_index 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 1001)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (extended_index extended_index) Bool)
(declare-const dummy2 extended_index)
(declare-datatypes () ((extended_index__ref (mk_extended_index__ref (extended_index__content extended_index)))))
(define-fun extended_index__ref___projection ((a extended_index__ref)) extended_index (extended_index__content a))
(define-fun dynamic_invariant ((temp___expr_242 Int) (temp___is_init_238 Bool) (temp___skip_constant_239 Bool) (temp___do_toplevel_240 Bool) (temp___do_typ_inv_241 Bool)) Bool (=> (or (= temp___is_init_238 true) (<= 0 1001)) (in_range3 temp___expr_242)))
(declare-sort capacity_range 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1000)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (capacity_range capacity_range) Bool)
(declare-const dummy3 capacity_range)
(declare-datatypes () ((capacity_range__ref (mk_capacity_range__ref (capacity_range__content capacity_range)))))
(define-fun capacity_range__ref___projection ((a capacity_range__ref)) capacity_range (capacity_range__content a))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__amortized_queue__my_vectors__vector__capacity capacity_range)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) capacity_range (rec__amortized_queue__my_vectors__vector__capacity a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__amortized_queue__my_vectors__vector us_main_type)))))
(define-fun us_split_fields_Vector__projection ((a us_split_fields)) us_main_type (rec__amortized_queue__my_vectors__vector a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const amortized_queue__my_vectors__vector__capacity__first__bit Int)
(declare-const amortized_queue__my_vectors__vector__capacity__last__bit Int)
(declare-const amortized_queue__my_vectors__vector__capacity__position Int)
(assert (<= 0 amortized_queue__my_vectors__vector__capacity__first__bit))
(assert (< amortized_queue__my_vectors__vector__capacity__first__bit amortized_queue__my_vectors__vector__capacity__last__bit))
(assert (<= 0 amortized_queue__my_vectors__vector__capacity__position))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((vector__ref (mk_vector__ref (vector__content us_rep)))))
(define-fun vector__ref___projection ((a vector__ref)) us_rep (vector__content a))
(declare-fun length (us_rep) Int)
(declare-fun length__function_guard (Int us_rep) Bool)
(define-fun dynamic_invariant1 ((temp___expr_249 Int) (temp___is_init_245 Bool) (temp___skip_constant_246 Bool) (temp___do_toplevel_247 Bool) (temp___do_typ_inv_248 Bool)) Bool (=> (or (= temp___is_init_245 true) (<= 0 1000)) (in_range4 temp___expr_249)))
(declare-fun to_rep (capacity_range) Int)
(declare-fun of_rep (Int) capacity_range)
(assert (forall ((x capacity_range)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x capacity_range)) (! (in_range4 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(define-fun capacity ((container us_rep)) Int (ite (= (distinct 1 0) true) (to_rep (rec__amortized_queue__my_vectors__vector__capacity (us_split_discrs1 container))) 1000))
(declare-fun capacity__function_guard (Int us_rep) Bool)
(assert (forall ((container us_rep)) (! (let ((result (length container))) (and (<= result (capacity container)) (dynamic_invariant1 result true false true true))) :pattern ((length container)))))
(declare-fun oeq (us_rep us_rep) Bool)
(declare-fun oeq__function_guard (Bool us_rep us_rep) Bool)
(declare-sort us_main_type1 0)
(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)
(declare-sort us_rep1 0)
(declare-fun bool_eq (us_rep1 us_rep1) Bool)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-fun user_eq5 (us_rep1 us_rep1) Bool)
(declare-const dummy5 us_rep1)
(declare-datatypes () ((sequence__ref (mk_sequence__ref (sequence__content us_rep1)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep1 (sequence__content a))
(declare-fun length1 (us_rep1) Int)
(declare-fun length__function_guard1 (Int us_rep1) Bool)
(define-fun last ((container us_rep1)) Int (+ 0 (length1 container)))
(declare-fun last__function_guard (Int us_rep1) Bool)
(declare-fun get (us_rep1 Int) Int)
(declare-fun get__function_guard (Int us_rep1 Int) Bool)
(define-fun oeq1 ((left us_rep1) (right us_rep1)) Bool (and (= (length1 left) (length1 right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun oeq__function_guard1 (Bool us_rep1 us_rep1) Bool)
(declare-fun model__ (us_rep) us_rep1)
(declare-fun model____function_guard (us_rep1 us_rep) Bool)
(assert (forall ((left us_rep) (right us_rep)) (! (= (= (oeq left right) true) (= (oeq1 (model__ left) (model__ right)) true)) :pattern ((oeq left right)))))
(define-fun last_index ((container us_rep)) Int (last (model__ container)))
(declare-fun last_index__function_guard (Int us_rep) Bool)
(define-fun element ((container us_rep) (index Int)) Int (get (model__ container) index))
(declare-fun element__function_guard (Int us_rep Int) Bool)
(declare-sort element_type 0)
(define-fun in_range5 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (element_type element_type) Bool)
(declare-const dummy6 element_type)
(declare-datatypes () ((element_type__ref (mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___projection ((a element_type__ref)) element_type (element_type__content a))
(define-fun dynamic_invariant2 ((temp___expr_235 Int) (temp___is_init_231 Bool) (temp___skip_constant_232 Bool) (temp___do_toplevel_233 Bool) (temp___do_typ_inv_234 Bool)) Bool (=> (or (= temp___is_init_231 true) (<= (- 2147483648) 2147483647)) (in_range5 temp___expr_235)))
(declare-fun first_index__function_guard (Int us_rep) Bool)
(define-fun olt ((left us_rep1) (right us_rep1)) Bool (and (< (length1 left) (length1 right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun olt__function_guard (Bool us_rep1 us_rep1) Bool)
(define-fun in_range6 ((rec__amortized_queue__my_vectors__vector__capacity1 Int) (a us_rep)) Bool (= rec__amortized_queue__my_vectors__vector__capacity1 (to_rep (rec__amortized_queue__my_vectors__vector__capacity (us_split_discrs1 a)))))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const amortized_queue__my_vectors__vector__capacity__first__bit1 Int)
(declare-const amortized_queue__my_vectors__vector__capacity__last__bit1 Int)
(declare-const amortized_queue__my_vectors__vector__capacity__position1 Int)
(assert (<= 0 amortized_queue__my_vectors__vector__capacity__first__bit1))
(assert (< amortized_queue__my_vectors__vector__capacity__first__bit1 amortized_queue__my_vectors__vector__capacity__last__bit1))
(assert (<= 0 amortized_queue__my_vectors__vector__capacity__position1))
(declare-fun user_eq7 (us_rep us_rep) Bool)
(declare-const dummy7 us_rep)
(declare-datatypes () ((constrained_vector__ref (mk_constrained_vector__ref (constrained_vector__content us_rep)))))
(define-fun constrained_vector__ref___projection ((a constrained_vector__ref)) us_rep (constrained_vector__content a))
(declare-fun is_empty (us_rep) Bool)
(declare-fun is_empty__function_guard (Bool us_rep) Bool)
(define-fun dynamic_invariant3 ((temp___expr_393 us_rep) (temp___is_init_389 Bool) (temp___skip_constant_390 Bool) (temp___do_toplevel_391 Bool) (temp___do_typ_inv_392 Bool)) Bool (=> (not (= temp___skip_constant_390 true)) (in_range6 1000 temp___expr_393)))
(define-fun default_initial_assumption ((temp___expr_395 us_rep) (temp___skip_top_level_396 Bool)) Bool (and (= (to_rep (rec__amortized_queue__my_vectors__vector__capacity (us_split_discrs1 temp___expr_395))) 1000) (=> (not (= temp___skip_top_level_396 true)) (= (is_empty temp___expr_395) true))))
(declare-const front__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const rear__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const ofront us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const orear us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const r51b Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t52b__ref (mk_t52b__ref (t52b__content integer)))))
(define-fun t52b__ref___projection ((a t52b__ref)) integer (t52b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_invariant4 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-sort count_type 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (count_type count_type) Bool)
(declare-const dummy9 count_type)
(declare-datatypes () ((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type (count_type__content a))
(define-fun dynamic_invariant5 ((temp___expr_165 Int) (temp___is_init_161 Bool) (temp___skip_constant_162 Bool) (temp___do_toplevel_163 Bool) (temp___do_typ_inv_164 Bool)) Bool (=> (or (= temp___is_init_161 true) (<= 0 2147483647)) (in_range7 temp___expr_165)))
(assert (forall ((a us_rep1) (b us_rep1)) (! (= (user_eq5 a b) (oeq1 a b)) :pattern ((user_eq5 a b)))))
(define-fun default_initial_assumption1 ((temp___expr_288 us_rep1) (temp___skip_top_level_289 Bool)) Bool (=> (not (= temp___skip_top_level_289 true)) (= (length1 temp___expr_288) 0)))
(assert (forall ((container us_rep)) (! (= (length1 (model__ container)) (length container)) :pattern ((model__ container)))))
(assert (forall ((container us_rep)) (! (= (= (is_empty container) true) (= (length container) 0)) :pattern ((is_empty container)))))
(define-fun dynamic_invariant6 ((temp___expr_228 Int) (temp___is_init_224 Bool) (temp___skip_constant_225 Bool) (temp___do_toplevel_226 Bool) (temp___do_typ_inv_227 Bool)) Bool (=> (or (= temp___is_init_224 true) (<= 1 1000)) (in_range2 temp___expr_228)))
(declare-sort extended_index1 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 1000)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq10 (extended_index1 extended_index1) Bool)
(declare-const dummy10 extended_index1)
(declare-datatypes () ((extended_index__ref1 (mk_extended_index__ref1 (extended_index__content1 extended_index1)))))
(define-fun extended_index__ref___2__projection ((a extended_index__ref1)) extended_index1 (extended_index__content1 a))
(define-fun dynamic_invariant7 ((temp___expr_280 Int) (temp___is_init_276 Bool) (temp___skip_constant_277 Bool) (temp___do_toplevel_278 Bool) (temp___do_typ_inv_279 Bool)) Bool (=> (or (= temp___is_init_276 true) (<= 0 1000)) (in_range8 temp___expr_280)))
(assert (forall ((container us_rep1)) (! (let ((result (length1 container))) (and (<= (+ 0 result) 1000) (dynamic_invariant5 result true false true true))) :pattern ((length1 container)))))
(declare-sort element_type1 0)
(define-fun in_range9 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq11 (element_type1 element_type1) Bool)
(declare-const dummy11 element_type1)
(declare-datatypes () ((element_type__ref1 (mk_element_type__ref1 (element_type__content1 element_type1)))))
(define-fun element_type__ref___2__projection ((a element_type__ref1)) element_type1 (element_type__content1 a))
(define-fun dynamic_invariant8 ((temp___expr_273 Int) (temp___is_init_269 Bool) (temp___skip_constant_270 Bool) (temp___do_toplevel_271 Bool) (temp___do_typ_inv_272 Bool)) Bool (=> (or (= temp___is_init_269 true) (<= (- 2147483648) 2147483647)) (in_range9 temp___expr_273)))
(assert (forall ((container us_rep1)) (forall ((position Int)) (! (=> (and (dynamic_invariant7 position true true true true) (and (<= 1 position) (<= position (last container)))) (dynamic_invariant8 (get container position) true false true true)) :pattern ((get container position))))))
(declare-const front__split_fields us_main_type)
(declare-const rear__split_fields us_main_type)
(declare-const idx Int)
(declare-const amortized_queue__reverse_insert__L_5__R51b__assume Int)
(declare-const temp___606 Int)
(declare-const temp___605 capacity_range)
(declare-const temp___6051 us_main_type)
(declare-const o Int)
(declare-const o1 Int)
(declare-const i Int)
(declare-const o2 Int)
(declare-const o3 Bool)
(declare-const i1 Int)
(declare-const o4 Int)
(declare-const o5 Bool)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const front__split_fields1 us_main_type)
(declare-const result Int)
(declare-const idx1 Int)
(declare-const amortized_queue__my_vectors__append__2__container__fields us_main_type)
(declare-const result1 us_main_type)
(declare-const front__split_fields2 us_main_type)
(declare-const front__split_fields3 us_main_type)
(declare-const idx2 Int)
(declare-const front__split_fields4 us_split_fields__ref)
(declare-const idx3 int__ref)
(declare-const front__split_fields5 us_split_fields)
(declare-const idx4 Int)
(declare-const front__split_fields6 us_split_fields__ref)
(declare-const idx5 int__ref)
(declare-const front__split_fields7 us_split_fields)
(declare-const idx6 Int)
(declare-const amortized_queue__my_vectors__clear__container__fields us_split_fields)
(declare-const result2 us_split_fields__ref)
(declare-const rear__split_fields1 us_split_fields)
(declare-const front__split_fields8 us_split_fields__ref)
(declare-const rear__split_fields2 us_split_fields__ref)
(declare-const idx7 int__ref)
(declare-const front__split_fields9 us_split_fields)
(declare-const rear__split_fields3 us_split_fields)
(declare-const idx8 Int)
(declare-const result3 Bool)
(declare-const result4 Bool)
(declare-const result5 Bool)
(declare-const result6 Bool)
(declare-const result7 Bool)
(define-fun front__split_fields10 () us_split_fields (mk___split_fields front__split_fields3))
(define-fun amortized_queue__my_vectors__append__2__container__fields1 () us_split_fields (mk___split_fields amortized_queue__my_vectors__append__2__container__fields))
(define-fun front__split_fields11 () us_split_fields__ref (mk___split_fields__ref (mk___split_fields front__split_fields)))
(assert (= 1000 (to_rep (rec__amortized_queue__my_vectors__vector__capacity front__split_discrs))))
(assert (= 1000 (to_rep (rec__amortized_queue__my_vectors__vector__capacity rear__split_discrs))))
(assert (= 1000 (to_rep (rec__amortized_queue__my_vectors__vector__capacity (us_split_discrs1 ofront)))))
(assert (= 1000 (to_rep (rec__amortized_queue__my_vectors__vector__capacity (us_split_discrs1 orear)))))
(assert (and (< (length (mk___rep rear__split_discrs (mk___split_fields rear__split_fields))) (- 1000 (length (mk___rep front__split_discrs (mk___split_fields front__split_fields))))) (and (= (oeq (mk___rep front__split_discrs (mk___split_fields front__split_fields)) ofront) true) (= (oeq (mk___rep rear__split_discrs (mk___split_fields rear__split_fields)) orear) true))))
(assert (and (= amortized_queue__reverse_insert__L_5__R51b__assume (last (model__ (mk___rep rear__split_discrs (mk___split_fields rear__split_fields))))) (and (in_range3 amortized_queue__reverse_insert__L_5__R51b__assume) (= amortized_queue__reverse_insert__L_5__R51b__assume (last (model__ (mk___rep rear__split_discrs (mk___split_fields rear__split_fields))))))))
(assert (= amortized_queue__reverse_insert__L_5__R51b__assume r51b))
(assert (in_range3 r51b))
(assert (= (mk_int__ref result) (mk_int__ref idx)))
(assert (= idx1 r51b))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= temp___606 idx1)))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (and (= front__split_discrs (mk___split_discrs temp___605)) (= front__split_fields temp___6051))))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (and (= o idx1) (in_range2 idx1))))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (and (= o1 (get (model__ (mk___rep rear__split_discrs (mk___split_fields rear__split_fields))) o)) (and (in_range5 o1) (= o1 (get (model__ (mk___rep rear__split_discrs (mk___split_fields rear__split_fields))) o))))))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (and (and (= (length (mk___rep front__split_discrs amortized_queue__my_vectors__append__2__container__fields1)) (+ (length (mk___rep front__split_discrs (mk___split_fields front__split_fields))) 1)) (= (olt (model__ (mk___rep front__split_discrs (mk___split_fields front__split_fields))) (model__ (mk___rep front__split_discrs amortized_queue__my_vectors__append__2__container__fields1))) true)) (= (get (model__ (mk___rep front__split_discrs amortized_queue__my_vectors__append__2__container__fields1)) (+ (last (model__ (mk___rep front__split_discrs (mk___split_fields front__split_fields)))) 1)) o1))))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= (mk___split_fields__ref (mk___split_fields result1)) front__split_fields11)))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= (mk___split_fields front__split_fields2) amortized_queue__my_vectors__append__2__container__fields1)))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= (length (mk___rep front__split_discrs front__split_fields10)) (+ (- (+ (length ofront) (last (model__ (mk___rep rear__split_discrs (mk___split_fields rear__split_fields))))) idx2) 1))))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (forall ((i2 Int)) (=> (and (<= 1 i2) (<= i2 (last (model__ ofront)))) (= (get (model__ (mk___rep front__split_discrs front__split_fields10)) i2) (get (model__ ofront) i2))))))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (forall ((i2 Int)) (=> (and (<= idx2 i2) (<= i2 (last (model__ (mk___rep rear__split_discrs (mk___split_fields rear__split_fields)))))) (= (get (model__ (mk___rep front__split_discrs front__split_fields10)) (- (+ (last (model__ (mk___rep front__split_discrs front__split_fields10))) idx2) i2)) (get (model__ (mk___rep rear__split_discrs (mk___split_fields rear__split_fields))) i2))))))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (and (=> (<= 1 r51b) (dynamic_property 1 r51b idx2)) (and (<= 1 idx2) (<= idx2 r51b)))))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= idx2 1)))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= idx3 (mk_int__ref idx2))))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= front__split_fields4 (mk___split_fields__ref front__split_fields10))))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= idx4 idx2)))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= front__split_fields5 front__split_fields10)))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= idx5 idx3)))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= front__split_fields6 front__split_fields4)))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= idx6 idx4)))
(assert (=> (and (<= 1 idx1) (<= idx1 r51b)) (= front__split_fields7 front__split_fields5)))
(assert (=> (not (and (<= 1 idx1) (<= idx1 r51b))) (= idx5 (mk_int__ref idx1))))
(assert (=> (not (and (<= 1 idx1) (<= idx1 r51b))) (= front__split_fields6 front__split_fields11)))
(assert (=> (not (and (<= 1 idx1) (<= idx1 r51b))) (= idx6 idx1)))
(assert (=> (not (and (<= 1 idx1) (<= idx1 r51b))) (= front__split_fields7 (mk___split_fields front__split_fields1))))
(assert (= (length (mk___rep rear__split_discrs amortized_queue__my_vectors__clear__container__fields)) 0))
(assert (= result2 (mk___split_fields__ref (mk___split_fields rear__split_fields))))
(assert (= rear__split_fields1 amortized_queue__my_vectors__clear__container__fields))
(assert (= idx7 idx5))
(assert (= rear__split_fields2 (mk___split_fields__ref rear__split_fields1)))
(assert (= front__split_fields8 front__split_fields6))
(assert (= idx8 idx6))
(assert (= rear__split_fields3 rear__split_fields1))
(assert (= front__split_fields9 front__split_fields7))
(assert (and (= o7 (length orear)) (and (in_range4 o7) (<= o7 (capacity orear)))))
(assert (and (= o8 (length ofront)) (and (in_range4 o8) (<= o8 (capacity ofront)))))
(assert (= o9 (+ o8 o7)))
(assert (and (= o10 (length (mk___rep front__split_discrs (us_split_fields__content front__split_fields8)))) (and (in_range4 o10) (<= o10 (capacity (mk___rep front__split_discrs (us_split_fields__content front__split_fields8)))))))
(assert (= result3 (ite (= o10 o9) true false)))
(assert (= result3 true))
(assert (and (= o6 (length (mk___rep rear__split_discrs (us_split_fields__content rear__split_fields2)))) (and (in_range4 o6) (<= o6 (capacity (mk___rep rear__split_discrs (us_split_fields__content rear__split_fields2)))))))
(assert (= result4 (ite (= o6 0) true false)))
(assert (= result4 true))
(assert (and (= o4 (last (model__ ofront))) (and (in_range3 o4) (= o4 (last (model__ ofront))))))
(assert (= o5 (ite (<= i1 o4) true false)))
(assert (= result6 (ite (<= 1 i1) o5 false)))
(assert (= (= result5 true) (forall ((i2 Int)) (=> (and (<= 1 i2) (<= i2 (last (model__ ofront)))) (= (get (model__ (mk___rep front__split_discrs (us_split_fields__content front__split_fields8))) i2) (get (model__ ofront) i2))))))
(assert (= result5 true))
(assert (and (= o2 (last (model__ orear))) (and (in_range3 o2) (= o2 (last (model__ orear))))))
(assert (= o3 (ite (<= i o2) true false)))
(assert (= result7 (ite (<= 1 i) o3 false)))
(assert (= result7 true))
(assert (not (in_range2 i)))
(check-sat)
(exit)
