(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort capacity_range 0)
(declare-fun capacity_rangeqtint (capacity_range) Int)
(assert (forall ((i capacity_range)) (and (<= 0 (capacity_rangeqtint i)) (<= (capacity_rangeqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (capacity_range capacity_range) Bool)
(declare-const dummy capacity_range)
(declare-datatypes () ((capacity_range__ref (mk_capacity_range__ref (capacity_range__content capacity_range)))))
(define-fun capacity_range__ref___projection ((a capacity_range__ref)) capacity_range (capacity_range__content a))
(declare-sort capacity_range1 0)
(declare-fun capacity_rangeqtint1 (capacity_range1) Int)
(assert (forall ((i capacity_range1)) (and (<= 0 (capacity_rangeqtint1 i)) (<= (capacity_rangeqtint1 i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (capacity_range1 capacity_range1) Bool)
(declare-const dummy1 capacity_range1)
(declare-datatypes () ((capacity_range__ref1 (mk_capacity_range__ref1 (capacity_range__content1 capacity_range1)))))
(define-fun capacity_range__ref___2__projection ((a capacity_range__ref1)) capacity_range1 (capacity_range__content1 a))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity capacity_range1)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) capacity_range1 (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__hnco__test2__v_type_owner__vector_type_owner__vector us_main_type)))))
(define-fun us_split_fields_Vector__projection ((a us_split_fields)) us_main_type (rec__hnco__test2__v_type_owner__vector_type_owner__vector a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit Int)
(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit Int)
(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position Int)
(assert (<= 0 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit))
(assert (< hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit))
(assert (<= 0 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position))
(declare-fun user_eq2 (us_rep us_rep) Bool)
(declare-const dummy2 us_rep)
(declare-datatypes () ((vector__ref (mk_vector__ref (vector__content us_rep)))))
(define-fun vector__ref___projection ((a vector__ref)) us_rep (vector__content a))
(define-fun to_rep ((x capacity_range1)) Int (capacity_rangeqtint1 x))
(declare-fun of_rep (Int) capacity_range1)
(assert (forall ((x capacity_range1)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x capacity_range1)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(define-fun in_range2 ((rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 Int) (a us_rep)) Bool (= rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 (to_rep (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity (us_split_discrs1 a)))))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit1 Int)
(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit1 Int)
(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position1 Int)
(assert (<= 0 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit1))
(assert (< hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit1 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit1))
(assert (<= 0 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position1))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((t179s__ref (mk_t179s__ref (t179s__content us_rep)))))
(define-fun t179s__ref___projection ((a t179s__ref)) us_rep (t179s__content a))
(declare-datatypes () ((us_split_discrs2 (mk___split_discrs1 (rec__hnco__test2__v_type_owner__vector_type__capacity capacity_range)))))
(define-fun us_split_discrs___2__projection ((a us_split_discrs2)) capacity_range (rec__hnco__test2__v_type_owner__vector_type__capacity a))
(declare-datatypes () ((us_split_discrs__ref1 (mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref1)) us_split_discrs2 (us_split_discrs__content1 a))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__hnco__test2__v_type_owner__vector_type__hidden_vector us_rep) (rec__ext__ us_private)))))
(define-fun us_split_fields_Hidden_Vector__projection ((a us_split_fields2)) us_rep (rec__hnco__test2__v_type_owner__vector_type__hidden_vector a))
(define-fun us_split_fields___projection ((a us_split_fields2)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs3 us_split_discrs2) (us_split_fields3 us_split_fields2) (attr__tag Int)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_discrs2 (us_split_discrs3 a))
(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun us_rep___5__projection ((a us_rep1)) Int (attr__tag a))
(declare-fun us_dispatch_eq (us_rep1 us_rep1) Bool)
(declare-const us_tag Int)
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const hnco__test2__v_type_owner__vector_type__capacity__first__bit Int)
(declare-const hnco__test2__v_type_owner__vector_type__capacity__last__bit Int)
(declare-const hnco__test2__v_type_owner__vector_type__capacity__position Int)
(assert (<= 0 hnco__test2__v_type_owner__vector_type__capacity__first__bit))
(assert (< hnco__test2__v_type_owner__vector_type__capacity__first__bit hnco__test2__v_type_owner__vector_type__capacity__last__bit))
(assert (<= 0 hnco__test2__v_type_owner__vector_type__capacity__position))
(declare-const hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit Int)
(declare-const hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit Int)
(declare-const hnco__test2__v_type_owner__vector_type__hidden_vector__position Int)
(assert (<= 0 hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit))
(assert (< hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit))
(assert (<= 0 hnco__test2__v_type_owner__vector_type__hidden_vector__position))
(declare-fun user_eq4 (us_rep1 us_rep1) Bool)
(declare-const dummy4 us_rep1)
(declare-datatypes () ((vector_type__ref (mk_vector_type__ref (vector_type__content us_rep1)))))
(define-fun vector_type__ref___projection ((a vector_type__ref)) us_rep1 (vector_type__content a))
(declare-fun length (us_rep) Int)
(declare-fun length__function_guard (Int us_rep) Bool)
(declare-fun empty_vector (tuple0) us_rep)
(declare-fun empty_vector__function_guard (us_rep tuple0) Bool)
(assert (forall ((us_void_param tuple0)) (! (= (length (empty_vector us_void_param)) 0) :pattern ((empty_vector us_void_param)))))
(define-fun to_rep1 ((x capacity_range)) Int (capacity_rangeqtint x))
(declare-fun of_rep1 (Int) capacity_range)
(assert (forall ((x capacity_range)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x capacity_range)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_invariant ((temp___expr_256 Int) (temp___is_init_252 Bool) (temp___skip_constant_253 Bool) (temp___do_toplevel_254 Bool) (temp___do_typ_inv_255 Bool)) Bool (=> (or (= temp___is_init_252 true) (<= 0 2147483647)) (in_range1 temp___expr_256)))
(define-fun dynamic_invariant1 ((temp___expr_269 us_rep1) (temp___is_init_265 Bool) (temp___skip_constant_266 Bool) (temp___do_toplevel_267 Bool) (temp___do_typ_inv_268 Bool)) Bool (in_range2 (to_rep1 (rec__hnco__test2__v_type_owner__vector_type__capacity (us_split_discrs3 temp___expr_269))) (rec__hnco__test2__v_type_owner__vector_type__hidden_vector (us_split_fields3 temp___expr_269))))
(declare-const r186s Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun in_range3 ((rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 Int) (a us_rep)) Bool (= rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity1 (to_rep (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity (us_split_discrs1 a)))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit2 Int)
(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit2 Int)
(declare-const hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position2 Int)
(assert (<= 0 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit2))
(assert (< hnco__test2__v_type_owner__vector_type_owner__vector__capacity__first__bit2 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__last__bit2))
(assert (<= 0 hnco__test2__v_type_owner__vector_type_owner__vector__capacity__position2))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((t188s__ref (mk_t188s__ref (t188s__content us_rep)))))
(define-fun t188s__ref___projection ((a t188s__ref)) us_rep (t188s__content a))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__hnco__test2__v_type_owner__vector_type__hidden_vector1 us_rep) (rec__ext__1 us_private)))))
(define-fun us_split_fields_Hidden_Vector__2__projection ((a us_split_fields4)) us_rep (rec__hnco__test2__v_type_owner__vector_type__hidden_vector1 a))
(define-fun us_split_fields___2__projection ((a us_split_fields4)) us_private (rec__ext__1 a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_discrs4 us_split_discrs2) (us_split_fields5 us_split_fields4) (attr__tag1 Int)))))
(define-fun us_rep___6__projection ((a us_rep2)) us_split_discrs2 (us_split_discrs4 a))
(define-fun us_rep___7__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun us_rep___8__projection ((a us_rep2)) Int (attr__tag1 a))
(declare-fun hide_ext__ (us_private) us_private)
(declare-fun extract__ext__ (us_private) us_private)
(define-fun to_base ((a us_rep2)) us_rep1 (mk___rep1 (us_split_discrs4 a) (mk___split_fields1 (rec__hnco__test2__v_type_owner__vector_type__hidden_vector1 (us_split_fields5 a)) (hide_ext__ (rec__ext__1 (us_split_fields5 a)))) (attr__tag1 a)))
(define-fun of_base ((r us_rep1)) us_rep2 (mk___rep2 (us_split_discrs3 r) (mk___split_fields2 (rec__hnco__test2__v_type_owner__vector_type__hidden_vector (us_split_fields3 r)) (extract__ext__ (rec__ext__ (us_split_fields3 r)))) (attr__tag r)))
(declare-const us_tag1 Int)
(define-fun in_range4 ((rec__hnco__test2__v_type_owner__vector_type__capacity1 Int) (a us_rep1)) Bool (= rec__hnco__test2__v_type_owner__vector_type__capacity1 (to_rep1 (rec__hnco__test2__v_type_owner__vector_type__capacity (us_split_discrs3 a)))))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep2) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep2) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))
(declare-const hnco__test2__v_type_owner__vector_type__capacity__first__bit1 Int)
(declare-const hnco__test2__v_type_owner__vector_type__capacity__last__bit1 Int)
(declare-const hnco__test2__v_type_owner__vector_type__capacity__position1 Int)
(assert (<= 0 hnco__test2__v_type_owner__vector_type__capacity__first__bit1))
(assert (< hnco__test2__v_type_owner__vector_type__capacity__first__bit1 hnco__test2__v_type_owner__vector_type__capacity__last__bit1))
(assert (<= 0 hnco__test2__v_type_owner__vector_type__capacity__position1))
(declare-const hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit1 Int)
(declare-const hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit1 Int)
(declare-const hnco__test2__v_type_owner__vector_type__hidden_vector__position1 Int)
(assert (<= 0 hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit1))
(assert (< hnco__test2__v_type_owner__vector_type__hidden_vector__first__bit1 hnco__test2__v_type_owner__vector_type__hidden_vector__last__bit1))
(assert (<= 0 hnco__test2__v_type_owner__vector_type__hidden_vector__position1))
(declare-fun user_eq6 (us_rep2 us_rep2) Bool)
(declare-const dummy6 us_rep2)
(declare-datatypes () ((t187s__ref (mk_t187s__ref (t187s__content us_rep2)))))
(define-fun t187s__ref___projection ((a t187s__ref)) us_rep2 (t187s__content a))
(declare-const v__split_discrs us_split_discrs2)
(declare-const v__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_invariant2 ((temp___expr_249 Int) (temp___is_init_245 Bool) (temp___skip_constant_246 Bool) (temp___do_toplevel_247 Bool) (temp___do_typ_inv_248 Bool)) Bool (=> (or (= temp___is_init_245 true) (<= 0 2147483647)) (in_range temp___expr_249)))
(define-fun in_range5 ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Bool)
(define-fun capacity ((container us_rep)) Int (ite (= (distinct 1 0) true) (to_rep (rec__hnco__test2__v_type_owner__vector_type_owner__vector__capacity (us_split_discrs1 container))) 2147483647))
(declare-fun capacity__function_guard (Int us_rep) Bool)
(assert (forall ((container us_rep)) (! (let ((result (length container))) (and (<= result (capacity container)) (dynamic_invariant result true false true true))) :pattern ((length container)))))
(declare-const o capacity_range1)
(declare-const o1 us_main_type)
(declare-const o2 capacity_range1)
(declare-const o3 capacity_range1)
(declare-const hnco__test2__v_type_owner__empty_vector__R185s__R186s__assume Int)
(declare-const o4 capacity_range1)
(declare-const o5 us_main_type)
(define-fun o6 () us_rep (mk___rep (mk___split_discrs o4) (mk___split_fields o5)))
(define-fun o7 () us_rep (mk___rep (mk___split_discrs o) (mk___split_fields o1)))
(assert (and (= o7 (empty_vector Tuple0)) (= (length o7) 0)))
(assert (= o o2))
(assert (= o3 o2))
(assert (= hnco__test2__v_type_owner__empty_vector__R185s__R186s__assume (to_rep o3)))
(assert (= hnco__test2__v_type_owner__empty_vector__R185s__R186s__assume r186s))
(assert (in_range1 r186s))
(assert (and (= o6 (empty_vector Tuple0)) (= (length o6) 0)))
(assert (not (= r186s (to_rep o4))))
(check-sat)
(exit)
