(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep 0)
(declare-fun bool_eq (us_rep us_rep) Bool)
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-fun user_eq (us_rep us_rep) Bool)
(declare-const dummy us_rep)
(declare-datatypes () ((file_type__ref (mk_file_type__ref (file_type__content us_rep)))))
(define-fun file_type__ref___2__projection ((a file_type__ref)) us_rep (file_type__content a))
(declare-sort character 0)
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort file_status 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq2 (file_status file_status) Bool)
(declare-const dummy2 file_status)
(declare-datatypes () ((file_status__ref (mk_file_status__ref (file_status__content file_status)))))
(define-fun file_status__ref___2__projection ((a file_status__ref)) file_status (file_status__content a))
(declare-fun to_rep1 (file_status) Int)
(declare-fun of_rep1 (Int) file_status)
(assert (forall ((x file_status)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x file_status)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__spark__text_io__character_result__status file_status)))))
(define-fun us_split_discrs___2__projection ((a us_split_discrs)) file_status (rec__spark__text_io__character_result__status a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__spark__text_io__character_result__item character)))))
(define-fun us_split_fields_Item__projection ((a us_split_fields)) character (rec__spark__text_io__character_result__item a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep1 (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields) (attr__constrained Bool)))))
(define-fun us_rep___7__projection ((a us_rep1)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___8__projection ((a us_rep1)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___9__projection ((a us_rep1)) Bool (attr__constrained a))
(define-fun spark__text_io__character_result__item__pred ((a us_rep1)) Bool (= (to_rep1 (rec__spark__text_io__character_result__status (us_split_discrs1 a))) 1))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep1 (rec__spark__text_io__character_result__status (us_split_discrs1 a))) (to_rep1 (rec__spark__text_io__character_result__status (us_split_discrs1 b)))) (=> (spark__text_io__character_result__item__pred a) (= (to_rep (rec__spark__text_io__character_result__item (us_split_fields1 a))) (to_rep (rec__spark__text_io__character_result__item (us_split_fields1 b)))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const spark__text_io__character_result__status__first__bit Int)
(declare-const spark__text_io__character_result__status__last__bit Int)
(declare-const spark__text_io__character_result__status__position Int)
(assert (<= 0 spark__text_io__character_result__status__first__bit))
(assert (< spark__text_io__character_result__status__first__bit spark__text_io__character_result__status__last__bit))
(assert (<= 0 spark__text_io__character_result__status__position))
(declare-const spark__text_io__character_result__item__first__bit Int)
(declare-const spark__text_io__character_result__item__last__bit Int)
(declare-const spark__text_io__character_result__item__position Int)
(assert (<= 0 spark__text_io__character_result__item__first__bit))
(assert (< spark__text_io__character_result__item__first__bit spark__text_io__character_result__item__last__bit))
(assert (<= 0 spark__text_io__character_result__item__position))
(declare-fun user_eq3 (us_rep1 us_rep1) Bool)
(declare-const dummy3 us_rep1)
(declare-datatypes () ((character_result__ref (mk_character_result__ref (character_result__content us_rep1)))))
(define-fun character_result__ref___projection ((a character_result__ref)) us_rep1 (character_result__content a))
(define-fun default_initial_assumption ((temp___expr_708 us_rep1) (temp___skip_top_level_709 Bool)) Bool (and (= (attr__constrained temp___expr_708) false) (= (to_rep1 (rec__spark__text_io__character_result__status (us_split_discrs1 temp___expr_708))) 3)))
(declare-fun is_readable (us_rep) Bool)
(declare-fun is_readable__function_guard (Bool us_rep) Bool)
(declare-fun is_open (us_rep) Bool)
(declare-fun is_open__function_guard (Bool us_rep) Bool)
(declare-fun mode__2 (us_rep) Int)
(declare-fun mode__2__function_guard (Int us_rep) Bool)
(assert (forall ((file us_rep)) (! (= (= (is_readable file) true) (and (= (is_open file) true) (= (mode__2 file) 0))) :pattern ((is_readable file)))))
(declare-fun end_of_file (us_rep) Bool)
(declare-fun end_of_file__function_guard (Bool us_rep) Bool)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const item__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_invariant ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range temp___expr_63)))
(define-fun dynamic_invariant1 ((temp___expr_643 Int) (temp___is_init_640 Bool) (temp___skip_constant_641 Bool) (temp___do_toplevel_642 Bool)) Bool (=> (or (= temp___is_init_640 true) (<= 0 10)) (in_range1 temp___expr_643)))
(declare-sort file_mode 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq4 (file_mode file_mode) Bool)
(declare-const dummy4 file_mode)
(declare-datatypes () ((file_mode__ref (mk_file_mode__ref (file_mode__content file_mode)))))
(define-fun file_mode__ref___3__projection ((a file_mode__ref)) file_mode (file_mode__content a))
(define-fun dynamic_invariant2 ((temp___expr_655 Int) (temp___is_init_652 Bool) (temp___skip_constant_653 Bool) (temp___do_toplevel_654 Bool)) Bool (=> (or (= temp___is_init_652 true) (<= 0 2)) (in_range2 temp___expr_655)))
(declare-const file us_rep)
(declare-const result Bool)
(assert (and (= result (is_readable file)) (= (= result true) (and (= (is_open file) true) (= (mode__2 file) 0)))))
(assert (= result true))
(assert (not (= (is_readable file) true)))
(check-sat)
(exit)
