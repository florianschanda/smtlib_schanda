(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type natural

predicate in_range(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq1 : int, int -> bool

axiom bool_eq_def :
  (forall x:int. forall y:int [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : natural, natural -> bool

logic dummy : natural

type natural__ref = { natural__content : natural
}

function natural__ref___projection(a: natural__ref) : natural =
  (a).natural__content

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : integer, integer -> bool

logic dummy1 : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

logic hide : int -> int

logic hide__function_guard : int, int -> prop

axiom hide__post_axiom :
  (forall x:int [hide(x)]. (in_range1(x) -> in_range1(hide(x))))

logic to_rep : natural -> int

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range(x) ->
  (to_rep(of_rep(x)) = x)))

type us_split_fields = { rec__tagged_component_check__q__p1__root__f :
natural; rec__ext__ : us_private
}

function us_split_fields_F__projection(a: us_split_fields) : natural =
  (a).rec__tagged_component_check__q__p1__root__f

function us_split_fields___projection(a: us_split_fields) : us_private =
  (a).rec__ext__

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields; attr__tag : int
}

function us_rep___projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function us_rep___2__projection(a: us_rep) : int = (a).attr__tag

logic bool_eq3 : us_rep, us_rep -> bool

axiom bool_eq_def2 :
  (forall a:us_rep. forall b:us_rep [bool_eq3(a, b)].
  (((to_rep(((a).us_split_fields1).rec__tagged_component_check__q__p1__root__f) = to_rep(((b).us_split_fields1).rec__tagged_component_check__q__p1__root__f)) ->
  (bool_eq3(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields1).rec__tagged_component_check__q__p1__root__f) = to_rep(((b).us_split_fields1).rec__tagged_component_check__q__p1__root__f))) ->
  (bool_eq3(a, b) = false))))

logic us_dispatch_eq : us_rep, us_rep -> bool

logic us_tag : int

logic value__size : int

logic object__size : us_rep -> int

logic value__alignment : int

logic object__alignment : us_rep -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__size({ us_split_fields1 = {
  rec__tagged_component_check__q__p1__root__f = a; rec__ext__ = a1 };
  attr__tag = a2 })))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__alignment({ us_split_fields1 = {
  rec__tagged_component_check__q__p1__root__f = a; rec__ext__ = a1 };
  attr__tag = a2 })))

logic tagged_component_check__q__p1__root__f__first__bit : int

logic tagged_component_check__q__p1__root__f__last__bit : int

logic tagged_component_check__q__p1__root__f__position : int

axiom tagged_component_check__q__p1__root__f__first__bit_axiom :
  (0 <= tagged_component_check__q__p1__root__f__first__bit)

axiom tagged_component_check__q__p1__root__f__last__bit_axiom :
  (tagged_component_check__q__p1__root__f__first__bit <  tagged_component_check__q__p1__root__f__last__bit)

axiom tagged_component_check__q__p1__root__f__position_axiom :
  (0 <= tagged_component_check__q__p1__root__f__position)

logic user_eq2 : us_rep, us_rep -> bool

logic dummy2 : natural

logic dummy3 : us_private

logic dummy4 : int

type root__ref = { root__content : us_rep
}

function root__ref___projection(a: root__ref) : us_rep = (a).root__content

type us_split_fields2 = { rec__tagged_component_check__q__p1__c__g : natural;
rec__tagged_component_check__q__p1__root__f1 : natural; rec__ext__1 :
us_private
}

function us_split_fields_G__projection(a: us_split_fields2) : natural =
  (a).rec__tagged_component_check__q__p1__c__g

function us_split_fields_F__2__projection(a: us_split_fields2) : natural =
  (a).rec__tagged_component_check__q__p1__root__f1

function us_split_fields___2__projection(a: us_split_fields2) : us_private =
  (a).rec__ext__1

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2; attr__tag1 : int
}

function us_rep___3__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

function us_rep___4__projection(a: us_rep1) : int = (a).attr__tag1

logic hide_ext__ : natural, us_private -> us_private

logic extract__g : us_private -> natural

axiom extract__g__conv :
  (forall g:natural.
  (forall rec__ext__2:us_private. (extract__g(hide_ext__(g,
  rec__ext__2)) = g)))

logic extract__ext__ : us_private -> us_private

function to_base(a: us_rep1) : us_rep = { us_split_fields1 = {
  rec__tagged_component_check__q__p1__root__f =
  ((a).us_split_fields3).rec__tagged_component_check__q__p1__root__f1;
  rec__ext__ =
  hide_ext__(((a).us_split_fields3).rec__tagged_component_check__q__p1__c__g,
  ((a).us_split_fields3).rec__ext__1) }; attr__tag = (a).attr__tag1 }

function of_base(r: us_rep) : us_rep1 = { us_split_fields3 = {
  rec__tagged_component_check__q__p1__c__g =
  extract__g(((r).us_split_fields1).rec__ext__);
  rec__tagged_component_check__q__p1__root__f1 =
  ((r).us_split_fields1).rec__tagged_component_check__q__p1__root__f;
  rec__ext__1 = extract__ext__(((r).us_split_fields1).rec__ext__) };
  attr__tag1 = (r).attr__tag }

logic bool_eq4 : us_rep1, us_rep1 -> bool

axiom bool_eq_def3 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq4(a, b)].
  ((((to_rep(((a).us_split_fields3).rec__tagged_component_check__q__p1__c__g) = to_rep(((b).us_split_fields3).rec__tagged_component_check__q__p1__c__g)) and
  (to_rep(((a).us_split_fields3).rec__tagged_component_check__q__p1__root__f1) = to_rep(((b).us_split_fields3).rec__tagged_component_check__q__p1__root__f1))) ->
  (bool_eq4(a, b) = true)) and
  ((not ((to_rep(((a).us_split_fields3).rec__tagged_component_check__q__p1__c__g) = to_rep(((b).us_split_fields3).rec__tagged_component_check__q__p1__c__g)) and
  (to_rep(((a).us_split_fields3).rec__tagged_component_check__q__p1__root__f1) = to_rep(((b).us_split_fields3).rec__tagged_component_check__q__p1__root__f1)))) ->
  (bool_eq4(a, b) = false))))

logic us_tag1 : int

logic value__size1 : int

logic object__size1 : us_rep1 -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep1 -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__size1({ us_split_fields3 = {
  rec__tagged_component_check__q__p1__c__g = a;
  rec__tagged_component_check__q__p1__root__f1 = a1; rec__ext__1 = a2 };
  attr__tag1 = a3 })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__alignment1({ us_split_fields3 = {
  rec__tagged_component_check__q__p1__c__g = a;
  rec__tagged_component_check__q__p1__root__f1 = a1; rec__ext__1 = a2 };
  attr__tag1 = a3 })))

logic tagged_component_check__q__p1__c__g__first__bit : int

logic tagged_component_check__q__p1__c__g__last__bit : int

logic tagged_component_check__q__p1__c__g__position : int

axiom tagged_component_check__q__p1__c__g__first__bit_axiom :
  (0 <= tagged_component_check__q__p1__c__g__first__bit)

axiom tagged_component_check__q__p1__c__g__last__bit_axiom :
  (tagged_component_check__q__p1__c__g__first__bit <  tagged_component_check__q__p1__c__g__last__bit)

axiom tagged_component_check__q__p1__c__g__position_axiom :
  (0 <= tagged_component_check__q__p1__c__g__position)

logic tagged_component_check__q__p1__root__f__first__bit1 : int

logic tagged_component_check__q__p1__root__f__last__bit1 : int

logic tagged_component_check__q__p1__root__f__position1 : int

axiom tagged_component_check__q__p1__root__f__first__bit_axiom1 :
  (0 <= tagged_component_check__q__p1__root__f__first__bit1)

axiom tagged_component_check__q__p1__root__f__last__bit_axiom1 :
  (tagged_component_check__q__p1__root__f__first__bit1 <  tagged_component_check__q__p1__root__f__last__bit1)

axiom tagged_component_check__q__p1__root__f__position_axiom1 :
  (0 <= tagged_component_check__q__p1__root__f__position1)

logic user_eq3 : us_rep1, us_rep1 -> bool

logic dummy5 : natural

logic dummy6 : natural

logic dummy7 : us_private

logic dummy8 : int

type c__ref = { c__content : us_rep1
}

function c__ref___projection(a: c__ref) : us_rep1 = (a).c__content

type us_split_fields4 = { rec__tagged_component_check__q__d1__h : natural;
rec__tagged_component_check__q__p1__root__f2 : natural;
rec__tagged_component_check__q__p1__c__g1 : natural; rec__ext__2 : us_private
}

function us_split_fields_H__projection(a: us_split_fields4) : natural =
  (a).rec__tagged_component_check__q__d1__h

function us_split_fields_F__10__projection(a: us_split_fields4) : natural =
  (a).rec__tagged_component_check__q__p1__root__f2

function us_split_fields_G__4__projection(a: us_split_fields4) : natural =
  (a).rec__tagged_component_check__q__p1__c__g1

function us_split_fields___11__projection(a: us_split_fields4) : us_private =
  (a).rec__ext__2

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___11__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_fields5 : us_split_fields4; attr__tag2 : int
}

function us_rep___21__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

function us_rep___22__projection(a: us_rep2) : int = (a).attr__tag2

logic hide_ext__1 : natural, natural, us_private -> us_private

logic extract__h : us_private -> natural

axiom extract__h__conv :
  (forall h:natural. forall g:natural.
  (forall rec__ext__3:us_private. (extract__h(hide_ext__1(h, g,
  rec__ext__3)) = h)))

axiom extract__g__conv1 :
  (forall h:natural. forall g:natural.
  (forall rec__ext__3:us_private. (extract__g(hide_ext__1(h, g,
  rec__ext__3)) = g)))

logic extract__ext__1 : us_private -> us_private

function to_base1(a: us_rep2) : us_rep = { us_split_fields1 = {
  rec__tagged_component_check__q__p1__root__f =
  ((a).us_split_fields5).rec__tagged_component_check__q__p1__root__f2;
  rec__ext__ =
  hide_ext__1(((a).us_split_fields5).rec__tagged_component_check__q__d1__h,
  ((a).us_split_fields5).rec__tagged_component_check__q__p1__c__g1,
  ((a).us_split_fields5).rec__ext__2) }; attr__tag = (a).attr__tag2 }

function of_base1(r: us_rep) : us_rep2 = { us_split_fields5 = {
  rec__tagged_component_check__q__d1__h =
  extract__h(((r).us_split_fields1).rec__ext__);
  rec__tagged_component_check__q__p1__root__f2 =
  ((r).us_split_fields1).rec__tagged_component_check__q__p1__root__f;
  rec__tagged_component_check__q__p1__c__g1 =
  extract__g(((r).us_split_fields1).rec__ext__); rec__ext__2 =
  extract__ext__1(((r).us_split_fields1).rec__ext__) }; attr__tag2 =
  (r).attr__tag }

logic bool_eq5 : us_rep2, us_rep2 -> bool

axiom bool_eq_def4 :
  (forall a:us_rep2. forall b:us_rep2 [bool_eq5(a, b)].
  (((((to_rep(((a).us_split_fields5).rec__tagged_component_check__q__d1__h) = to_rep(((b).us_split_fields5).rec__tagged_component_check__q__d1__h)) and
  (to_rep(((a).us_split_fields5).rec__tagged_component_check__q__p1__root__f2) = to_rep(((b).us_split_fields5).rec__tagged_component_check__q__p1__root__f2))) and
  (to_rep(((a).us_split_fields5).rec__tagged_component_check__q__p1__c__g1) = to_rep(((b).us_split_fields5).rec__tagged_component_check__q__p1__c__g1))) ->
  (bool_eq5(a, b) = true)) and
  ((not (((to_rep(((a).us_split_fields5).rec__tagged_component_check__q__d1__h) = to_rep(((b).us_split_fields5).rec__tagged_component_check__q__d1__h)) and
  (to_rep(((a).us_split_fields5).rec__tagged_component_check__q__p1__root__f2) = to_rep(((b).us_split_fields5).rec__tagged_component_check__q__p1__root__f2))) and
  (to_rep(((a).us_split_fields5).rec__tagged_component_check__q__p1__c__g1) = to_rep(((b).us_split_fields5).rec__tagged_component_check__q__p1__c__g1)))) ->
  (bool_eq5(a, b) = false))))

logic us_tag2 : int

logic value__size2 : int

logic object__size2 : us_rep2 -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep2 -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__size2({
  us_split_fields5 = { rec__tagged_component_check__q__d1__h = a;
  rec__tagged_component_check__q__p1__root__f2 = a1;
  rec__tagged_component_check__q__p1__c__g1 = a2; rec__ext__2 = a3 };
  attr__tag2 = a4 })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__alignment2({
  us_split_fields5 = { rec__tagged_component_check__q__d1__h = a;
  rec__tagged_component_check__q__p1__root__f2 = a1;
  rec__tagged_component_check__q__p1__c__g1 = a2; rec__ext__2 = a3 };
  attr__tag2 = a4 })))

logic tagged_component_check__q__d1__h__first__bit : int

logic tagged_component_check__q__d1__h__last__bit : int

logic tagged_component_check__q__d1__h__position : int

axiom tagged_component_check__q__d1__h__first__bit_axiom :
  (0 <= tagged_component_check__q__d1__h__first__bit)

axiom tagged_component_check__q__d1__h__last__bit_axiom :
  (tagged_component_check__q__d1__h__first__bit <  tagged_component_check__q__d1__h__last__bit)

axiom tagged_component_check__q__d1__h__position_axiom :
  (0 <= tagged_component_check__q__d1__h__position)

logic tagged_component_check__q__p1__root__f__first__bit2 : int

logic tagged_component_check__q__p1__root__f__last__bit2 : int

logic tagged_component_check__q__p1__root__f__position2 : int

axiom tagged_component_check__q__p1__root__f__first__bit_axiom2 :
  (0 <= tagged_component_check__q__p1__root__f__first__bit2)

axiom tagged_component_check__q__p1__root__f__last__bit_axiom2 :
  (tagged_component_check__q__p1__root__f__first__bit2 <  tagged_component_check__q__p1__root__f__last__bit2)

axiom tagged_component_check__q__p1__root__f__position_axiom2 :
  (0 <= tagged_component_check__q__p1__root__f__position2)

logic tagged_component_check__q__p1__c__g__first__bit1 : int

logic tagged_component_check__q__p1__c__g__last__bit1 : int

logic tagged_component_check__q__p1__c__g__position1 : int

axiom tagged_component_check__q__p1__c__g__first__bit_axiom1 :
  (0 <= tagged_component_check__q__p1__c__g__first__bit1)

axiom tagged_component_check__q__p1__c__g__last__bit_axiom1 :
  (tagged_component_check__q__p1__c__g__first__bit1 <  tagged_component_check__q__p1__c__g__last__bit1)

axiom tagged_component_check__q__p1__c__g__position_axiom1 :
  (0 <= tagged_component_check__q__p1__c__g__position1)

logic user_eq4 : us_rep2, us_rep2 -> bool

logic dummy9 : natural

logic dummy10 : natural

logic dummy11 : natural

logic dummy12 : us_private

logic dummy13 : int

type d1__ref = { d1__content : us_rep2
}

function d1__ref___projection(a: d1__ref) : us_rep2 = (a).d1__content

type us_split_fields6 = { rec__tagged_component_check__q__p2__root__f :
natural; rec__ext__3 : us_private
}

function us_split_fields_F__3__projection(a: us_split_fields6) : natural =
  (a).rec__tagged_component_check__q__p2__root__f

function us_split_fields___3__projection(a: us_split_fields6) : us_private =
  (a).rec__ext__3

type us_split_fields__ref3 = { us_split_fields__content3 : us_split_fields6
}

function us_split_fields__ref___3__projection(a: us_split_fields__ref3) : us_split_fields6 =
  (a).us_split_fields__content3

type us_rep3 = { us_split_fields7 : us_split_fields6; attr__tag3 : int
}

function us_rep___5__projection(a: us_rep3) : us_split_fields6 =
  (a).us_split_fields7

function us_rep___6__projection(a: us_rep3) : int = (a).attr__tag3

logic bool_eq6 : us_rep3, us_rep3 -> bool

axiom bool_eq_def5 :
  (forall a:us_rep3. forall b:us_rep3 [bool_eq6(a, b)].
  (((to_rep(((a).us_split_fields7).rec__tagged_component_check__q__p2__root__f) = to_rep(((b).us_split_fields7).rec__tagged_component_check__q__p2__root__f)) ->
  (bool_eq6(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields7).rec__tagged_component_check__q__p2__root__f) = to_rep(((b).us_split_fields7).rec__tagged_component_check__q__p2__root__f))) ->
  (bool_eq6(a, b) = false))))

logic us_dispatch_eq1 : us_rep3, us_rep3 -> bool

logic us_tag3 : int

logic value__size3 : int

logic object__size3 : us_rep3 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep3 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__size3({ us_split_fields7 = {
  rec__tagged_component_check__q__p2__root__f = a; rec__ext__3 = a1 };
  attr__tag3 = a2 })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__alignment3({ us_split_fields7 = {
  rec__tagged_component_check__q__p2__root__f = a; rec__ext__3 = a1 };
  attr__tag3 = a2 })))

logic tagged_component_check__q__p2__root__f__first__bit : int

logic tagged_component_check__q__p2__root__f__last__bit : int

logic tagged_component_check__q__p2__root__f__position : int

axiom tagged_component_check__q__p2__root__f__first__bit_axiom :
  (0 <= tagged_component_check__q__p2__root__f__first__bit)

axiom tagged_component_check__q__p2__root__f__last__bit_axiom :
  (tagged_component_check__q__p2__root__f__first__bit <  tagged_component_check__q__p2__root__f__last__bit)

axiom tagged_component_check__q__p2__root__f__position_axiom :
  (0 <= tagged_component_check__q__p2__root__f__position)

logic user_eq5 : us_rep3, us_rep3 -> bool

logic dummy14 : natural

logic dummy15 : us_private

logic dummy16 : int

type root__ref1 = { root__content1 : us_rep3
}

function root__ref___2__projection(a: root__ref1) : us_rep3 =
  (a).root__content1

type us_split_fields8 = { rec__tagged_component_check__q__p2__c__g : natural;
rec__tagged_component_check__q__p2__root__f1 : natural; rec__ext__4 :
us_private
}

function us_split_fields_G__2__projection(a: us_split_fields8) : natural =
  (a).rec__tagged_component_check__q__p2__c__g

function us_split_fields_F__4__projection(a: us_split_fields8) : natural =
  (a).rec__tagged_component_check__q__p2__root__f1

function us_split_fields___4__projection(a: us_split_fields8) : us_private =
  (a).rec__ext__4

type us_split_fields__ref4 = { us_split_fields__content4 : us_split_fields8
}

function us_split_fields__ref___4__projection(a: us_split_fields__ref4) : us_split_fields8 =
  (a).us_split_fields__content4

type us_rep4 = { us_split_fields9 : us_split_fields8; attr__tag4 : int
}

function us_rep___7__projection(a: us_rep4) : us_split_fields8 =
  (a).us_split_fields9

function us_rep___8__projection(a: us_rep4) : int = (a).attr__tag4

logic hide_ext__2 : natural, us_private -> us_private

logic extract__g1 : us_private -> natural

axiom extract__g__conv2 :
  (forall g:natural.
  (forall rec__ext__5:us_private. (extract__g1(hide_ext__2(g,
  rec__ext__5)) = g)))

logic extract__ext__2 : us_private -> us_private

function to_base2(a: us_rep4) : us_rep3 = { us_split_fields7 = {
  rec__tagged_component_check__q__p2__root__f =
  ((a).us_split_fields9).rec__tagged_component_check__q__p2__root__f1;
  rec__ext__3 =
  hide_ext__2(((a).us_split_fields9).rec__tagged_component_check__q__p2__c__g,
  ((a).us_split_fields9).rec__ext__4) }; attr__tag3 = (a).attr__tag4 }

function of_base2(r: us_rep3) : us_rep4 = { us_split_fields9 = {
  rec__tagged_component_check__q__p2__c__g =
  extract__g1(((r).us_split_fields7).rec__ext__3);
  rec__tagged_component_check__q__p2__root__f1 =
  ((r).us_split_fields7).rec__tagged_component_check__q__p2__root__f;
  rec__ext__4 = extract__ext__2(((r).us_split_fields7).rec__ext__3) };
  attr__tag4 = (r).attr__tag3 }

logic bool_eq7 : us_rep4, us_rep4 -> bool

axiom bool_eq_def6 :
  (forall a:us_rep4. forall b:us_rep4 [bool_eq7(a, b)].
  ((((to_rep(((a).us_split_fields9).rec__tagged_component_check__q__p2__c__g) = to_rep(((b).us_split_fields9).rec__tagged_component_check__q__p2__c__g)) and
  (to_rep(((a).us_split_fields9).rec__tagged_component_check__q__p2__root__f1) = to_rep(((b).us_split_fields9).rec__tagged_component_check__q__p2__root__f1))) ->
  (bool_eq7(a, b) = true)) and
  ((not ((to_rep(((a).us_split_fields9).rec__tagged_component_check__q__p2__c__g) = to_rep(((b).us_split_fields9).rec__tagged_component_check__q__p2__c__g)) and
  (to_rep(((a).us_split_fields9).rec__tagged_component_check__q__p2__root__f1) = to_rep(((b).us_split_fields9).rec__tagged_component_check__q__p2__root__f1)))) ->
  (bool_eq7(a, b) = false))))

logic us_tag4 : int

logic value__size4 : int

logic object__size4 : us_rep4 -> int

logic value__alignment4 : int

logic object__alignment4 : us_rep4 -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__size4({ us_split_fields9 = {
  rec__tagged_component_check__q__p2__c__g = a;
  rec__tagged_component_check__q__p2__root__f1 = a1; rec__ext__4 = a2 };
  attr__tag4 = a3 })))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__alignment4({ us_split_fields9 = {
  rec__tagged_component_check__q__p2__c__g = a;
  rec__tagged_component_check__q__p2__root__f1 = a1; rec__ext__4 = a2 };
  attr__tag4 = a3 })))

logic tagged_component_check__q__p2__c__g__first__bit : int

logic tagged_component_check__q__p2__c__g__last__bit : int

logic tagged_component_check__q__p2__c__g__position : int

axiom tagged_component_check__q__p2__c__g__first__bit_axiom :
  (0 <= tagged_component_check__q__p2__c__g__first__bit)

axiom tagged_component_check__q__p2__c__g__last__bit_axiom :
  (tagged_component_check__q__p2__c__g__first__bit <  tagged_component_check__q__p2__c__g__last__bit)

axiom tagged_component_check__q__p2__c__g__position_axiom :
  (0 <= tagged_component_check__q__p2__c__g__position)

logic tagged_component_check__q__p2__root__f__first__bit1 : int

logic tagged_component_check__q__p2__root__f__last__bit1 : int

logic tagged_component_check__q__p2__root__f__position1 : int

axiom tagged_component_check__q__p2__root__f__first__bit_axiom1 :
  (0 <= tagged_component_check__q__p2__root__f__first__bit1)

axiom tagged_component_check__q__p2__root__f__last__bit_axiom1 :
  (tagged_component_check__q__p2__root__f__first__bit1 <  tagged_component_check__q__p2__root__f__last__bit1)

axiom tagged_component_check__q__p2__root__f__position_axiom1 :
  (0 <= tagged_component_check__q__p2__root__f__position1)

logic user_eq6 : us_rep4, us_rep4 -> bool

logic dummy17 : natural

logic dummy18 : natural

logic dummy19 : us_private

logic dummy20 : int

type c__ref1 = { c__content1 : us_rep4
}

function c__ref___2__projection(a: c__ref1) : us_rep4 = (a).c__content1

type us_split_fields10 = { rec__tagged_component_check__q__p2__c__g1 :
natural; rec__tagged_component_check__q__d2__h : natural;
rec__tagged_component_check__q__p2__root__f2 : natural; rec__ext__5 :
us_private
}

function us_split_fields_G__5__projection(a: us_split_fields10) : natural =
  (a).rec__tagged_component_check__q__p2__c__g1

function us_split_fields_H__2__projection(a: us_split_fields10) : natural =
  (a).rec__tagged_component_check__q__d2__h

function us_split_fields_F__11__projection(a: us_split_fields10) : natural =
  (a).rec__tagged_component_check__q__p2__root__f2

function us_split_fields___12__projection(a: us_split_fields10) : us_private =
  (a).rec__ext__5

type us_split_fields__ref5 = { us_split_fields__content5 : us_split_fields10
}

function us_split_fields__ref___12__projection(a: us_split_fields__ref5) : us_split_fields10 =
  (a).us_split_fields__content5

type us_rep5 = { us_split_fields11 : us_split_fields10; attr__tag5 : int
}

function us_rep___23__projection(a: us_rep5) : us_split_fields10 =
  (a).us_split_fields11

function us_rep___24__projection(a: us_rep5) : int = (a).attr__tag5

logic hide_ext__3 : natural, natural, us_private -> us_private

axiom extract__g__conv3 :
  (forall g:natural. forall h:natural.
  (forall rec__ext__6:us_private. (extract__g1(hide_ext__3(g, h,
  rec__ext__6)) = g)))

logic extract__h1 : us_private -> natural

axiom extract__h__conv1 :
  (forall g:natural. forall h:natural.
  (forall rec__ext__6:us_private. (extract__h1(hide_ext__3(g, h,
  rec__ext__6)) = h)))

logic extract__ext__3 : us_private -> us_private

function to_base3(a: us_rep5) : us_rep3 = { us_split_fields7 = {
  rec__tagged_component_check__q__p2__root__f =
  ((a).us_split_fields11).rec__tagged_component_check__q__p2__root__f2;
  rec__ext__3 =
  hide_ext__3(((a).us_split_fields11).rec__tagged_component_check__q__p2__c__g1,
  ((a).us_split_fields11).rec__tagged_component_check__q__d2__h,
  ((a).us_split_fields11).rec__ext__5) }; attr__tag3 = (a).attr__tag5 }

function of_base3(r: us_rep3) : us_rep5 = { us_split_fields11 = {
  rec__tagged_component_check__q__p2__c__g1 =
  extract__g1(((r).us_split_fields7).rec__ext__3);
  rec__tagged_component_check__q__d2__h =
  extract__h1(((r).us_split_fields7).rec__ext__3);
  rec__tagged_component_check__q__p2__root__f2 =
  ((r).us_split_fields7).rec__tagged_component_check__q__p2__root__f;
  rec__ext__5 = extract__ext__3(((r).us_split_fields7).rec__ext__3) };
  attr__tag5 = (r).attr__tag3 }

logic bool_eq8 : us_rep5, us_rep5 -> bool

axiom bool_eq_def7 :
  (forall a:us_rep5. forall b:us_rep5 [bool_eq8(a, b)].
  (((((to_rep(((a).us_split_fields11).rec__tagged_component_check__q__p2__c__g1) = to_rep(((b).us_split_fields11).rec__tagged_component_check__q__p2__c__g1)) and
  (to_rep(((a).us_split_fields11).rec__tagged_component_check__q__d2__h) = to_rep(((b).us_split_fields11).rec__tagged_component_check__q__d2__h))) and
  (to_rep(((a).us_split_fields11).rec__tagged_component_check__q__p2__root__f2) = to_rep(((b).us_split_fields11).rec__tagged_component_check__q__p2__root__f2))) ->
  (bool_eq8(a, b) = true)) and
  ((not (((to_rep(((a).us_split_fields11).rec__tagged_component_check__q__p2__c__g1) = to_rep(((b).us_split_fields11).rec__tagged_component_check__q__p2__c__g1)) and
  (to_rep(((a).us_split_fields11).rec__tagged_component_check__q__d2__h) = to_rep(((b).us_split_fields11).rec__tagged_component_check__q__d2__h))) and
  (to_rep(((a).us_split_fields11).rec__tagged_component_check__q__p2__root__f2) = to_rep(((b).us_split_fields11).rec__tagged_component_check__q__p2__root__f2)))) ->
  (bool_eq8(a, b) = false))))

logic us_tag5 : int

logic value__size5 : int

logic object__size5 : us_rep5 -> int

logic value__alignment5 : int

logic object__alignment5 : us_rep5 -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__size5({
  us_split_fields11 = { rec__tagged_component_check__q__p2__c__g1 = a;
  rec__tagged_component_check__q__d2__h = a1;
  rec__tagged_component_check__q__p2__root__f2 = a2; rec__ext__5 = a3 };
  attr__tag5 = a4 })))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__alignment5({
  us_split_fields11 = { rec__tagged_component_check__q__p2__c__g1 = a;
  rec__tagged_component_check__q__d2__h = a1;
  rec__tagged_component_check__q__p2__root__f2 = a2; rec__ext__5 = a3 };
  attr__tag5 = a4 })))

logic tagged_component_check__q__p2__c__g__first__bit1 : int

logic tagged_component_check__q__p2__c__g__last__bit1 : int

logic tagged_component_check__q__p2__c__g__position1 : int

axiom tagged_component_check__q__p2__c__g__first__bit_axiom1 :
  (0 <= tagged_component_check__q__p2__c__g__first__bit1)

axiom tagged_component_check__q__p2__c__g__last__bit_axiom1 :
  (tagged_component_check__q__p2__c__g__first__bit1 <  tagged_component_check__q__p2__c__g__last__bit1)

axiom tagged_component_check__q__p2__c__g__position_axiom1 :
  (0 <= tagged_component_check__q__p2__c__g__position1)

logic tagged_component_check__q__d2__h__first__bit : int

logic tagged_component_check__q__d2__h__last__bit : int

logic tagged_component_check__q__d2__h__position : int

axiom tagged_component_check__q__d2__h__first__bit_axiom :
  (0 <= tagged_component_check__q__d2__h__first__bit)

axiom tagged_component_check__q__d2__h__last__bit_axiom :
  (tagged_component_check__q__d2__h__first__bit <  tagged_component_check__q__d2__h__last__bit)

axiom tagged_component_check__q__d2__h__position_axiom :
  (0 <= tagged_component_check__q__d2__h__position)

logic tagged_component_check__q__p2__root__f__first__bit2 : int

logic tagged_component_check__q__p2__root__f__last__bit2 : int

logic tagged_component_check__q__p2__root__f__position2 : int

axiom tagged_component_check__q__p2__root__f__first__bit_axiom2 :
  (0 <= tagged_component_check__q__p2__root__f__first__bit2)

axiom tagged_component_check__q__p2__root__f__last__bit_axiom2 :
  (tagged_component_check__q__p2__root__f__first__bit2 <  tagged_component_check__q__p2__root__f__last__bit2)

axiom tagged_component_check__q__p2__root__f__position_axiom2 :
  (0 <= tagged_component_check__q__p2__root__f__position2)

logic user_eq7 : us_rep5, us_rep5 -> bool

logic dummy21 : natural

logic dummy22 : natural

logic dummy23 : natural

logic dummy24 : us_private

logic dummy25 : int

type d2__ref = { d2__content : us_rep5
}

function d2__ref___projection(a: d2__ref) : us_rep5 = (a).d2__content

type us_split_fields12 = { rec__tagged_component_check__q__p3__root__f :
natural; rec__ext__6 : us_private
}

function us_split_fields_F__5__projection(a: us_split_fields12) : natural =
  (a).rec__tagged_component_check__q__p3__root__f

function us_split_fields___5__projection(a: us_split_fields12) : us_private =
  (a).rec__ext__6

type us_split_fields__ref6 = { us_split_fields__content6 : us_split_fields12
}

function us_split_fields__ref___5__projection(a: us_split_fields__ref6) : us_split_fields12 =
  (a).us_split_fields__content6

type us_rep6 = { us_split_fields13 : us_split_fields12; attr__tag6 : int
}

function us_rep___9__projection(a: us_rep6) : us_split_fields12 =
  (a).us_split_fields13

function us_rep___10__projection(a: us_rep6) : int = (a).attr__tag6

logic bool_eq9 : us_rep6, us_rep6 -> bool

axiom bool_eq_def8 :
  (forall a:us_rep6. forall b:us_rep6 [bool_eq9(a, b)].
  (((to_rep(((a).us_split_fields13).rec__tagged_component_check__q__p3__root__f) = to_rep(((b).us_split_fields13).rec__tagged_component_check__q__p3__root__f)) ->
  (bool_eq9(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields13).rec__tagged_component_check__q__p3__root__f) = to_rep(((b).us_split_fields13).rec__tagged_component_check__q__p3__root__f))) ->
  (bool_eq9(a, b) = false))))

logic us_dispatch_eq2 : us_rep6, us_rep6 -> bool

logic us_tag6 : int

logic value__size6 : int

logic object__size6 : us_rep6 -> int

logic value__alignment6 : int

logic object__alignment6 : us_rep6 -> int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__size6({ us_split_fields13 = {
  rec__tagged_component_check__q__p3__root__f = a; rec__ext__6 = a1 };
  attr__tag6 = a2 })))

axiom value__alignment_axiom6 : (0 <= value__alignment6)

axiom object__alignment_axiom6 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__alignment6({ us_split_fields13 = {
  rec__tagged_component_check__q__p3__root__f = a; rec__ext__6 = a1 };
  attr__tag6 = a2 })))

logic tagged_component_check__q__p3__root__f__first__bit : int

logic tagged_component_check__q__p3__root__f__last__bit : int

logic tagged_component_check__q__p3__root__f__position : int

axiom tagged_component_check__q__p3__root__f__first__bit_axiom :
  (0 <= tagged_component_check__q__p3__root__f__first__bit)

axiom tagged_component_check__q__p3__root__f__last__bit_axiom :
  (tagged_component_check__q__p3__root__f__first__bit <  tagged_component_check__q__p3__root__f__last__bit)

axiom tagged_component_check__q__p3__root__f__position_axiom :
  (0 <= tagged_component_check__q__p3__root__f__position)

logic user_eq8 : us_rep6, us_rep6 -> bool

logic dummy26 : natural

logic dummy27 : us_private

logic dummy28 : int

type root__ref2 = { root__content2 : us_rep6
}

function root__ref___3__projection(a: root__ref2) : us_rep6 =
  (a).root__content2

type us_split_fields14 = { rec__tagged_component_check__q__p3__c__g :
natural; rec__tagged_component_check__q__p3__root__f1 : natural; rec__ext__7
: us_private
}

function us_split_fields_G__3__projection(a: us_split_fields14) : natural =
  (a).rec__tagged_component_check__q__p3__c__g

function us_split_fields_F__6__projection(a: us_split_fields14) : natural =
  (a).rec__tagged_component_check__q__p3__root__f1

function us_split_fields___6__projection(a: us_split_fields14) : us_private =
  (a).rec__ext__7

type us_split_fields__ref7 = { us_split_fields__content7 : us_split_fields14
}

function us_split_fields__ref___6__projection(a: us_split_fields__ref7) : us_split_fields14 =
  (a).us_split_fields__content7

type us_rep7 = { us_split_fields15 : us_split_fields14; attr__tag7 : int
}

function us_rep___11__projection(a: us_rep7) : us_split_fields14 =
  (a).us_split_fields15

function us_rep___12__projection(a: us_rep7) : int = (a).attr__tag7

logic hide_ext__4 : natural, us_private -> us_private

logic extract__g2 : us_private -> natural

axiom extract__g__conv4 :
  (forall g:natural.
  (forall rec__ext__8:us_private. (extract__g2(hide_ext__4(g,
  rec__ext__8)) = g)))

logic extract__ext__4 : us_private -> us_private

function to_base4(a: us_rep7) : us_rep6 = { us_split_fields13 = {
  rec__tagged_component_check__q__p3__root__f =
  ((a).us_split_fields15).rec__tagged_component_check__q__p3__root__f1;
  rec__ext__6 =
  hide_ext__4(((a).us_split_fields15).rec__tagged_component_check__q__p3__c__g,
  ((a).us_split_fields15).rec__ext__7) }; attr__tag6 = (a).attr__tag7 }

function of_base4(r: us_rep6) : us_rep7 = { us_split_fields15 = {
  rec__tagged_component_check__q__p3__c__g =
  extract__g2(((r).us_split_fields13).rec__ext__6);
  rec__tagged_component_check__q__p3__root__f1 =
  ((r).us_split_fields13).rec__tagged_component_check__q__p3__root__f;
  rec__ext__7 = extract__ext__4(((r).us_split_fields13).rec__ext__6) };
  attr__tag7 = (r).attr__tag6 }

logic bool_eq10 : us_rep7, us_rep7 -> bool

axiom bool_eq_def9 :
  (forall a:us_rep7. forall b:us_rep7 [bool_eq10(a, b)].
  ((((to_rep(((a).us_split_fields15).rec__tagged_component_check__q__p3__c__g) = to_rep(((b).us_split_fields15).rec__tagged_component_check__q__p3__c__g)) and
  (to_rep(((a).us_split_fields15).rec__tagged_component_check__q__p3__root__f1) = to_rep(((b).us_split_fields15).rec__tagged_component_check__q__p3__root__f1))) ->
  (bool_eq10(a, b) = true)) and
  ((not ((to_rep(((a).us_split_fields15).rec__tagged_component_check__q__p3__c__g) = to_rep(((b).us_split_fields15).rec__tagged_component_check__q__p3__c__g)) and
  (to_rep(((a).us_split_fields15).rec__tagged_component_check__q__p3__root__f1) = to_rep(((b).us_split_fields15).rec__tagged_component_check__q__p3__root__f1)))) ->
  (bool_eq10(a, b) = false))))

logic us_tag7 : int

logic value__size7 : int

logic object__size7 : us_rep7 -> int

logic value__alignment7 : int

logic object__alignment7 : us_rep7 -> int

axiom value__size_axiom7 : (0 <= value__size7)

axiom object__size_axiom7 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__size7({ us_split_fields15 = {
  rec__tagged_component_check__q__p3__c__g = a;
  rec__tagged_component_check__q__p3__root__f1 = a1; rec__ext__7 = a2 };
  attr__tag7 = a3 })))

axiom value__alignment_axiom7 : (0 <= value__alignment7)

axiom object__alignment_axiom7 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__alignment7({ us_split_fields15 = {
  rec__tagged_component_check__q__p3__c__g = a;
  rec__tagged_component_check__q__p3__root__f1 = a1; rec__ext__7 = a2 };
  attr__tag7 = a3 })))

logic tagged_component_check__q__p3__c__g__first__bit : int

logic tagged_component_check__q__p3__c__g__last__bit : int

logic tagged_component_check__q__p3__c__g__position : int

axiom tagged_component_check__q__p3__c__g__first__bit_axiom :
  (0 <= tagged_component_check__q__p3__c__g__first__bit)

axiom tagged_component_check__q__p3__c__g__last__bit_axiom :
  (tagged_component_check__q__p3__c__g__first__bit <  tagged_component_check__q__p3__c__g__last__bit)

axiom tagged_component_check__q__p3__c__g__position_axiom :
  (0 <= tagged_component_check__q__p3__c__g__position)

logic tagged_component_check__q__p3__root__f__first__bit1 : int

logic tagged_component_check__q__p3__root__f__last__bit1 : int

logic tagged_component_check__q__p3__root__f__position1 : int

axiom tagged_component_check__q__p3__root__f__first__bit_axiom1 :
  (0 <= tagged_component_check__q__p3__root__f__first__bit1)

axiom tagged_component_check__q__p3__root__f__last__bit_axiom1 :
  (tagged_component_check__q__p3__root__f__first__bit1 <  tagged_component_check__q__p3__root__f__last__bit1)

axiom tagged_component_check__q__p3__root__f__position_axiom1 :
  (0 <= tagged_component_check__q__p3__root__f__position1)

logic user_eq9 : us_rep7, us_rep7 -> bool

logic dummy29 : natural

logic dummy30 : natural

logic dummy31 : us_private

logic dummy32 : int

type c__ref2 = { c__content2 : us_rep7
}

function c__ref___3__projection(a: c__ref2) : us_rep7 = (a).c__content2

type us_split_fields16 = { rec__tagged_component_check__q__p3__c__g1 :
natural; rec__tagged_component_check__q__d3__h : natural;
rec__tagged_component_check__q__p3__root__f2 : natural; rec__ext__8 :
us_private
}

function us_split_fields_G__6__projection(a: us_split_fields16) : natural =
  (a).rec__tagged_component_check__q__p3__c__g1

function us_split_fields_H__3__projection(a: us_split_fields16) : natural =
  (a).rec__tagged_component_check__q__d3__h

function us_split_fields_F__12__projection(a: us_split_fields16) : natural =
  (a).rec__tagged_component_check__q__p3__root__f2

function us_split_fields___13__projection(a: us_split_fields16) : us_private =
  (a).rec__ext__8

type us_split_fields__ref8 = { us_split_fields__content8 : us_split_fields16
}

function us_split_fields__ref___13__projection(a: us_split_fields__ref8) : us_split_fields16 =
  (a).us_split_fields__content8

type us_rep8 = { us_split_fields17 : us_split_fields16; attr__tag8 : int
}

function us_rep___25__projection(a: us_rep8) : us_split_fields16 =
  (a).us_split_fields17

function us_rep___26__projection(a: us_rep8) : int = (a).attr__tag8

logic hide_ext__5 : natural, natural, us_private -> us_private

axiom extract__g__conv5 :
  (forall g:natural. forall h:natural.
  (forall rec__ext__9:us_private. (extract__g2(hide_ext__5(g, h,
  rec__ext__9)) = g)))

logic extract__h2 : us_private -> natural

axiom extract__h__conv2 :
  (forall g:natural. forall h:natural.
  (forall rec__ext__9:us_private. (extract__h2(hide_ext__5(g, h,
  rec__ext__9)) = h)))

logic extract__ext__5 : us_private -> us_private

function to_base5(a: us_rep8) : us_rep6 = { us_split_fields13 = {
  rec__tagged_component_check__q__p3__root__f =
  ((a).us_split_fields17).rec__tagged_component_check__q__p3__root__f2;
  rec__ext__6 =
  hide_ext__5(((a).us_split_fields17).rec__tagged_component_check__q__p3__c__g1,
  ((a).us_split_fields17).rec__tagged_component_check__q__d3__h,
  ((a).us_split_fields17).rec__ext__8) }; attr__tag6 = (a).attr__tag8 }

function of_base5(r: us_rep6) : us_rep8 = { us_split_fields17 = {
  rec__tagged_component_check__q__p3__c__g1 =
  extract__g2(((r).us_split_fields13).rec__ext__6);
  rec__tagged_component_check__q__d3__h =
  extract__h2(((r).us_split_fields13).rec__ext__6);
  rec__tagged_component_check__q__p3__root__f2 =
  ((r).us_split_fields13).rec__tagged_component_check__q__p3__root__f;
  rec__ext__8 = extract__ext__5(((r).us_split_fields13).rec__ext__6) };
  attr__tag8 = (r).attr__tag6 }

logic bool_eq11 : us_rep8, us_rep8 -> bool

axiom bool_eq_def10 :
  (forall a:us_rep8. forall b:us_rep8 [bool_eq11(a, b)].
  (((((to_rep(((a).us_split_fields17).rec__tagged_component_check__q__p3__c__g1) = to_rep(((b).us_split_fields17).rec__tagged_component_check__q__p3__c__g1)) and
  (to_rep(((a).us_split_fields17).rec__tagged_component_check__q__d3__h) = to_rep(((b).us_split_fields17).rec__tagged_component_check__q__d3__h))) and
  (to_rep(((a).us_split_fields17).rec__tagged_component_check__q__p3__root__f2) = to_rep(((b).us_split_fields17).rec__tagged_component_check__q__p3__root__f2))) ->
  (bool_eq11(a, b) = true)) and
  ((not (((to_rep(((a).us_split_fields17).rec__tagged_component_check__q__p3__c__g1) = to_rep(((b).us_split_fields17).rec__tagged_component_check__q__p3__c__g1)) and
  (to_rep(((a).us_split_fields17).rec__tagged_component_check__q__d3__h) = to_rep(((b).us_split_fields17).rec__tagged_component_check__q__d3__h))) and
  (to_rep(((a).us_split_fields17).rec__tagged_component_check__q__p3__root__f2) = to_rep(((b).us_split_fields17).rec__tagged_component_check__q__p3__root__f2)))) ->
  (bool_eq11(a, b) = false))))

logic us_tag8 : int

logic value__size8 : int

logic object__size8 : us_rep8 -> int

logic value__alignment8 : int

logic object__alignment8 : us_rep8 -> int

axiom value__size_axiom8 : (0 <= value__size8)

axiom object__size_axiom8 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__size8({
  us_split_fields17 = { rec__tagged_component_check__q__p3__c__g1 = a;
  rec__tagged_component_check__q__d3__h = a1;
  rec__tagged_component_check__q__p3__root__f2 = a2; rec__ext__8 = a3 };
  attr__tag8 = a4 })))

axiom value__alignment_axiom8 : (0 <= value__alignment8)

axiom object__alignment_axiom8 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__alignment8({
  us_split_fields17 = { rec__tagged_component_check__q__p3__c__g1 = a;
  rec__tagged_component_check__q__d3__h = a1;
  rec__tagged_component_check__q__p3__root__f2 = a2; rec__ext__8 = a3 };
  attr__tag8 = a4 })))

logic tagged_component_check__q__p3__c__g__first__bit1 : int

logic tagged_component_check__q__p3__c__g__last__bit1 : int

logic tagged_component_check__q__p3__c__g__position1 : int

axiom tagged_component_check__q__p3__c__g__first__bit_axiom1 :
  (0 <= tagged_component_check__q__p3__c__g__first__bit1)

axiom tagged_component_check__q__p3__c__g__last__bit_axiom1 :
  (tagged_component_check__q__p3__c__g__first__bit1 <  tagged_component_check__q__p3__c__g__last__bit1)

axiom tagged_component_check__q__p3__c__g__position_axiom1 :
  (0 <= tagged_component_check__q__p3__c__g__position1)

logic tagged_component_check__q__d3__h__first__bit : int

logic tagged_component_check__q__d3__h__last__bit : int

logic tagged_component_check__q__d3__h__position : int

axiom tagged_component_check__q__d3__h__first__bit_axiom :
  (0 <= tagged_component_check__q__d3__h__first__bit)

axiom tagged_component_check__q__d3__h__last__bit_axiom :
  (tagged_component_check__q__d3__h__first__bit <  tagged_component_check__q__d3__h__last__bit)

axiom tagged_component_check__q__d3__h__position_axiom :
  (0 <= tagged_component_check__q__d3__h__position)

logic tagged_component_check__q__p3__root__f__first__bit2 : int

logic tagged_component_check__q__p3__root__f__last__bit2 : int

logic tagged_component_check__q__p3__root__f__position2 : int

axiom tagged_component_check__q__p3__root__f__first__bit_axiom2 :
  (0 <= tagged_component_check__q__p3__root__f__first__bit2)

axiom tagged_component_check__q__p3__root__f__last__bit_axiom2 :
  (tagged_component_check__q__p3__root__f__first__bit2 <  tagged_component_check__q__p3__root__f__last__bit2)

axiom tagged_component_check__q__p3__root__f__position_axiom2 :
  (0 <= tagged_component_check__q__p3__root__f__position2)

logic user_eq10 : us_rep8, us_rep8 -> bool

logic dummy33 : natural

logic dummy34 : natural

logic dummy35 : natural

logic dummy36 : us_private

logic dummy37 : int

type d3__ref = { d3__content : us_rep8
}

function d3__ref___projection(a: d3__ref) : us_rep8 = (a).d3__content

type us_split_fields18 = { rec__tagged_component_check__q__p4__root__f :
natural; rec__ext__9 : us_private
}

function us_split_fields_F__7__projection(a: us_split_fields18) : natural =
  (a).rec__tagged_component_check__q__p4__root__f

function us_split_fields___7__projection(a: us_split_fields18) : us_private =
  (a).rec__ext__9

type us_split_fields__ref9 = { us_split_fields__content9 : us_split_fields18
}

function us_split_fields__ref___7__projection(a: us_split_fields__ref9) : us_split_fields18 =
  (a).us_split_fields__content9

type us_rep9 = { us_split_fields19 : us_split_fields18; attr__tag9 : int
}

function us_rep___13__projection(a: us_rep9) : us_split_fields18 =
  (a).us_split_fields19

function us_rep___14__projection(a: us_rep9) : int = (a).attr__tag9

logic bool_eq12 : us_rep9, us_rep9 -> bool

axiom bool_eq_def11 :
  (forall a:us_rep9. forall b:us_rep9 [bool_eq12(a, b)].
  (((to_rep(((a).us_split_fields19).rec__tagged_component_check__q__p4__root__f) = to_rep(((b).us_split_fields19).rec__tagged_component_check__q__p4__root__f)) ->
  (bool_eq12(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields19).rec__tagged_component_check__q__p4__root__f) = to_rep(((b).us_split_fields19).rec__tagged_component_check__q__p4__root__f))) ->
  (bool_eq12(a, b) = false))))

logic us_dispatch_eq3 : us_rep9, us_rep9 -> bool

logic us_tag9 : int

logic value__size9 : int

logic object__size9 : us_rep9 -> int

logic value__alignment9 : int

logic object__alignment9 : us_rep9 -> int

axiom value__size_axiom9 : (0 <= value__size9)

axiom object__size_axiom9 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__size9({ us_split_fields19 = {
  rec__tagged_component_check__q__p4__root__f = a; rec__ext__9 = a1 };
  attr__tag9 = a2 })))

axiom value__alignment_axiom9 : (0 <= value__alignment9)

axiom object__alignment_axiom9 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__alignment9({ us_split_fields19 = {
  rec__tagged_component_check__q__p4__root__f = a; rec__ext__9 = a1 };
  attr__tag9 = a2 })))

logic tagged_component_check__q__p4__root__f__first__bit : int

logic tagged_component_check__q__p4__root__f__last__bit : int

logic tagged_component_check__q__p4__root__f__position : int

axiom tagged_component_check__q__p4__root__f__first__bit_axiom :
  (0 <= tagged_component_check__q__p4__root__f__first__bit)

axiom tagged_component_check__q__p4__root__f__last__bit_axiom :
  (tagged_component_check__q__p4__root__f__first__bit <  tagged_component_check__q__p4__root__f__last__bit)

axiom tagged_component_check__q__p4__root__f__position_axiom :
  (0 <= tagged_component_check__q__p4__root__f__position)

logic user_eq11 : us_rep9, us_rep9 -> bool

logic dummy38 : natural

logic dummy39 : us_private

logic dummy40 : int

type root__ref3 = { root__content3 : us_rep9
}

function root__ref___4__projection(a: root__ref3) : us_rep9 =
  (a).root__content3

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_split_fields20 = { rec__tagged_component_check__q__p4__c :
us_main_type; rec__tagged_component_check__q__p4__root__f1 : natural;
rec__ext__10 : us_private
}

function us_split_fields_C__projection(a: us_split_fields20) : us_main_type =
  (a).rec__tagged_component_check__q__p4__c

function us_split_fields_F__8__projection(a: us_split_fields20) : natural =
  (a).rec__tagged_component_check__q__p4__root__f1

function us_split_fields___8__projection(a: us_split_fields20) : us_private =
  (a).rec__ext__10

type us_split_fields__ref10 = { us_split_fields__content10 :
us_split_fields20
}

function us_split_fields__ref___8__projection(a: us_split_fields__ref10) : us_split_fields20 =
  (a).us_split_fields__content10

type us_rep10 = { us_split_fields21 : us_split_fields20; attr__tag10 : int
}

function us_rep___15__projection(a: us_rep10) : us_split_fields20 =
  (a).us_split_fields21

function us_rep___16__projection(a: us_rep10) : int = (a).attr__tag10

logic hide_ext__6 : us_main_type, us_private -> us_private

logic extract__c : us_private -> us_main_type

axiom extract__c__conv :
  (forall c:us_main_type.
  (forall rec__ext__11:us_private. (extract__c(hide_ext__6(c,
  rec__ext__11)) = c)))

logic extract__ext__6 : us_private -> us_private

function to_base6(a: us_rep10) : us_rep9 = { us_split_fields19 = {
  rec__tagged_component_check__q__p4__root__f =
  ((a).us_split_fields21).rec__tagged_component_check__q__p4__root__f1;
  rec__ext__9 =
  hide_ext__6(((a).us_split_fields21).rec__tagged_component_check__q__p4__c,
  ((a).us_split_fields21).rec__ext__10) }; attr__tag9 = (a).attr__tag10 }

function of_base6(r: us_rep9) : us_rep10 = { us_split_fields21 = {
  rec__tagged_component_check__q__p4__c =
  extract__c(((r).us_split_fields19).rec__ext__9);
  rec__tagged_component_check__q__p4__root__f1 =
  ((r).us_split_fields19).rec__tagged_component_check__q__p4__root__f;
  rec__ext__10 = extract__ext__6(((r).us_split_fields19).rec__ext__9) };
  attr__tag10 = (r).attr__tag9 }

logic bool_eq13 : us_rep10, us_rep10 -> bool

axiom bool_eq_def12 :
  (forall a:us_rep10. forall b:us_rep10 [bool_eq13(a, b)].
  ((((us_main_eq(((a).us_split_fields21).rec__tagged_component_check__q__p4__c,
  ((b).us_split_fields21).rec__tagged_component_check__q__p4__c) = true) and
  (to_rep(((a).us_split_fields21).rec__tagged_component_check__q__p4__root__f1) = to_rep(((b).us_split_fields21).rec__tagged_component_check__q__p4__root__f1))) ->
  (bool_eq13(a, b) = true)) and
  ((not ((us_main_eq(((a).us_split_fields21).rec__tagged_component_check__q__p4__c,
  ((b).us_split_fields21).rec__tagged_component_check__q__p4__c) = true) and
  (to_rep(((a).us_split_fields21).rec__tagged_component_check__q__p4__root__f1) = to_rep(((b).us_split_fields21).rec__tagged_component_check__q__p4__root__f1)))) ->
  (bool_eq13(a, b) = false))))

logic us_tag10 : int

logic value__size10 : int

logic object__size10 : us_rep10 -> int

logic value__alignment10 : int

logic object__alignment10 : us_rep10 -> int

axiom value__size_axiom10 : (0 <= value__size10)

axiom object__size_axiom10 :
  (forall a:us_main_type. forall a1:natural. forall a2:us_private.
  forall a3:int. (0 <= object__size10({ us_split_fields21 = {
  rec__tagged_component_check__q__p4__c = a;
  rec__tagged_component_check__q__p4__root__f1 = a1; rec__ext__10 = a2 };
  attr__tag10 = a3 })))

axiom value__alignment_axiom10 : (0 <= value__alignment10)

axiom object__alignment_axiom10 :
  (forall a:us_main_type. forall a1:natural. forall a2:us_private.
  forall a3:int. (0 <= object__alignment10({ us_split_fields21 = {
  rec__tagged_component_check__q__p4__c = a;
  rec__tagged_component_check__q__p4__root__f1 = a1; rec__ext__10 = a2 };
  attr__tag10 = a3 })))

logic tagged_component_check__q__p4__root__f__first__bit1 : int

logic tagged_component_check__q__p4__root__f__last__bit1 : int

logic tagged_component_check__q__p4__root__f__position1 : int

axiom tagged_component_check__q__p4__root__f__first__bit_axiom1 :
  (0 <= tagged_component_check__q__p4__root__f__first__bit1)

axiom tagged_component_check__q__p4__root__f__last__bit_axiom1 :
  (tagged_component_check__q__p4__root__f__first__bit1 <  tagged_component_check__q__p4__root__f__last__bit1)

axiom tagged_component_check__q__p4__root__f__position_axiom1 :
  (0 <= tagged_component_check__q__p4__root__f__position1)

logic user_eq12 : us_rep10, us_rep10 -> bool

logic dummy41 : us_main_type

logic dummy42 : natural

logic dummy43 : us_private

logic dummy44 : int

type c__ref3 = { c__content3 : us_rep10
}

function c__ref___4__projection(a: c__ref3) : us_rep10 = (a).c__content3

type us_split_fields22 = { rec__tagged_component_check__q__p4__c1 :
us_main_type; rec__tagged_component_check__q__d4__h : natural;
rec__tagged_component_check__q__p4__root__f2 : natural; rec__ext__11 :
us_private
}

function us_split_fields_C__3__projection(a: us_split_fields22) : us_main_type =
  (a).rec__tagged_component_check__q__p4__c1

function us_split_fields_H__4__projection(a: us_split_fields22) : natural =
  (a).rec__tagged_component_check__q__d4__h

function us_split_fields_F__13__projection(a: us_split_fields22) : natural =
  (a).rec__tagged_component_check__q__p4__root__f2

function us_split_fields___14__projection(a: us_split_fields22) : us_private =
  (a).rec__ext__11

type us_split_fields__ref11 = { us_split_fields__content11 :
us_split_fields22
}

function us_split_fields__ref___14__projection(a: us_split_fields__ref11) : us_split_fields22 =
  (a).us_split_fields__content11

type us_rep11 = { us_split_fields23 : us_split_fields22; attr__tag11 : int
}

function us_rep___27__projection(a: us_rep11) : us_split_fields22 =
  (a).us_split_fields23

function us_rep___28__projection(a: us_rep11) : int = (a).attr__tag11

logic hide_ext__7 : us_main_type, natural, us_private -> us_private

axiom extract__c__conv1 :
  (forall c:us_main_type.
  (forall h:natural.
  (forall rec__ext__12:us_private. (extract__c(hide_ext__7(c, h,
  rec__ext__12)) = c))))

logic extract__h3 : us_private -> natural

axiom extract__h__conv3 :
  (forall c:us_main_type.
  (forall h:natural.
  (forall rec__ext__12:us_private. (extract__h3(hide_ext__7(c, h,
  rec__ext__12)) = h))))

logic extract__ext__7 : us_private -> us_private

function to_base7(a: us_rep11) : us_rep9 = { us_split_fields19 = {
  rec__tagged_component_check__q__p4__root__f =
  ((a).us_split_fields23).rec__tagged_component_check__q__p4__root__f2;
  rec__ext__9 =
  hide_ext__7(((a).us_split_fields23).rec__tagged_component_check__q__p4__c1,
  ((a).us_split_fields23).rec__tagged_component_check__q__d4__h,
  ((a).us_split_fields23).rec__ext__11) }; attr__tag9 = (a).attr__tag11 }

function of_base7(r: us_rep9) : us_rep11 = { us_split_fields23 = {
  rec__tagged_component_check__q__p4__c1 =
  extract__c(((r).us_split_fields19).rec__ext__9);
  rec__tagged_component_check__q__d4__h =
  extract__h3(((r).us_split_fields19).rec__ext__9);
  rec__tagged_component_check__q__p4__root__f2 =
  ((r).us_split_fields19).rec__tagged_component_check__q__p4__root__f;
  rec__ext__11 = extract__ext__7(((r).us_split_fields19).rec__ext__9) };
  attr__tag11 = (r).attr__tag9 }

logic bool_eq14 : us_rep11, us_rep11 -> bool

axiom bool_eq_def13 :
  (forall a:us_rep11. forall b:us_rep11 [bool_eq14(a, b)].
  (((((us_main_eq(((a).us_split_fields23).rec__tagged_component_check__q__p4__c1,
  ((b).us_split_fields23).rec__tagged_component_check__q__p4__c1) = true) and
  (to_rep(((a).us_split_fields23).rec__tagged_component_check__q__d4__h) = to_rep(((b).us_split_fields23).rec__tagged_component_check__q__d4__h))) and
  (to_rep(((a).us_split_fields23).rec__tagged_component_check__q__p4__root__f2) = to_rep(((b).us_split_fields23).rec__tagged_component_check__q__p4__root__f2))) ->
  (bool_eq14(a, b) = true)) and
  ((not (((us_main_eq(((a).us_split_fields23).rec__tagged_component_check__q__p4__c1,
  ((b).us_split_fields23).rec__tagged_component_check__q__p4__c1) = true) and
  (to_rep(((a).us_split_fields23).rec__tagged_component_check__q__d4__h) = to_rep(((b).us_split_fields23).rec__tagged_component_check__q__d4__h))) and
  (to_rep(((a).us_split_fields23).rec__tagged_component_check__q__p4__root__f2) = to_rep(((b).us_split_fields23).rec__tagged_component_check__q__p4__root__f2)))) ->
  (bool_eq14(a, b) = false))))

logic us_tag11 : int

logic value__size11 : int

logic object__size11 : us_rep11 -> int

logic value__alignment11 : int

logic object__alignment11 : us_rep11 -> int

axiom value__size_axiom11 : (0 <= value__size11)

axiom object__size_axiom11 :
  (forall a:us_main_type. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__size11({
  us_split_fields23 = { rec__tagged_component_check__q__p4__c1 = a;
  rec__tagged_component_check__q__d4__h = a1;
  rec__tagged_component_check__q__p4__root__f2 = a2; rec__ext__11 = a3 };
  attr__tag11 = a4 })))

axiom value__alignment_axiom11 : (0 <= value__alignment11)

axiom object__alignment_axiom11 :
  (forall a:us_main_type. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__alignment11({
  us_split_fields23 = { rec__tagged_component_check__q__p4__c1 = a;
  rec__tagged_component_check__q__d4__h = a1;
  rec__tagged_component_check__q__p4__root__f2 = a2; rec__ext__11 = a3 };
  attr__tag11 = a4 })))

logic tagged_component_check__q__d4__h__first__bit : int

logic tagged_component_check__q__d4__h__last__bit : int

logic tagged_component_check__q__d4__h__position : int

axiom tagged_component_check__q__d4__h__first__bit_axiom :
  (0 <= tagged_component_check__q__d4__h__first__bit)

axiom tagged_component_check__q__d4__h__last__bit_axiom :
  (tagged_component_check__q__d4__h__first__bit <  tagged_component_check__q__d4__h__last__bit)

axiom tagged_component_check__q__d4__h__position_axiom :
  (0 <= tagged_component_check__q__d4__h__position)

logic tagged_component_check__q__p4__root__f__first__bit2 : int

logic tagged_component_check__q__p4__root__f__last__bit2 : int

logic tagged_component_check__q__p4__root__f__position2 : int

axiom tagged_component_check__q__p4__root__f__first__bit_axiom2 :
  (0 <= tagged_component_check__q__p4__root__f__first__bit2)

axiom tagged_component_check__q__p4__root__f__last__bit_axiom2 :
  (tagged_component_check__q__p4__root__f__first__bit2 <  tagged_component_check__q__p4__root__f__last__bit2)

axiom tagged_component_check__q__p4__root__f__position_axiom2 :
  (0 <= tagged_component_check__q__p4__root__f__position2)

logic user_eq13 : us_rep11, us_rep11 -> bool

logic dummy45 : us_main_type

logic dummy46 : natural

logic dummy47 : natural

logic dummy48 : us_private

logic dummy49 : int

type d4__ref = { d4__content : us_rep11
}

function d4__ref___projection(a: d4__ref) : us_rep11 = (a).d4__content

type us_main_type1

logic us_main_eq1 : us_main_type1, us_main_type1 -> bool

type us_split_fields24 = { rec__tagged_component_check__q__p5__c :
us_main_type1; rec__ext__12 : us_private
}

function us_split_fields_C__2__projection(a: us_split_fields24) : us_main_type1 =
  (a).rec__tagged_component_check__q__p5__c

function us_split_fields___10__projection(a: us_split_fields24) : us_private =
  (a).rec__ext__12

type us_split_fields__ref12 = { us_split_fields__content12 :
us_split_fields24
}

function us_split_fields__ref___10__projection(a: us_split_fields__ref12) : us_split_fields24 =
  (a).us_split_fields__content12

type us_rep12 = { us_split_fields25 : us_split_fields24; attr__tag12 : int
}

function us_rep___19__projection(a: us_rep12) : us_split_fields24 =
  (a).us_split_fields25

function us_rep___20__projection(a: us_rep12) : int = (a).attr__tag12

logic bool_eq15 : us_rep12, us_rep12 -> bool

axiom bool_eq_def14 :
  (forall a:us_rep12. forall b:us_rep12 [bool_eq15(a, b)].
  (((us_main_eq1(((a).us_split_fields25).rec__tagged_component_check__q__p5__c,
  ((b).us_split_fields25).rec__tagged_component_check__q__p5__c) = true) ->
  (bool_eq15(a, b) = true)) and
  ((not (us_main_eq1(((a).us_split_fields25).rec__tagged_component_check__q__p5__c,
  ((b).us_split_fields25).rec__tagged_component_check__q__p5__c) = true)) ->
  (bool_eq15(a, b) = false))))

logic us_dispatch_eq4 : us_rep12, us_rep12 -> bool

logic us_tag12 : int

logic value__size12 : int

logic object__size12 : us_rep12 -> int

logic value__alignment12 : int

logic object__alignment12 : us_rep12 -> int

axiom value__size_axiom12 : (0 <= value__size12)

axiom object__size_axiom12 :
  (forall a:us_main_type1. forall a1:us_private. forall a2:int.
  (0 <= object__size12({ us_split_fields25 = {
  rec__tagged_component_check__q__p5__c = a; rec__ext__12 = a1 };
  attr__tag12 = a2 })))

axiom value__alignment_axiom12 : (0 <= value__alignment12)

axiom object__alignment_axiom12 :
  (forall a:us_main_type1. forall a1:us_private. forall a2:int.
  (0 <= object__alignment12({ us_split_fields25 = {
  rec__tagged_component_check__q__p5__c = a; rec__ext__12 = a1 };
  attr__tag12 = a2 })))

logic user_eq14 : us_rep12, us_rep12 -> bool

logic dummy50 : us_main_type1

logic dummy51 : us_private

logic dummy52 : int

type c__ref4 = { c__content4 : us_rep12
}

function c__ref___5__projection(a: c__ref4) : us_rep12 = (a).c__content4

type us_split_fields26 = { rec__tagged_component_check__q__p5__c1 :
us_main_type1; rec__tagged_component_check__q__d5__h : natural; rec__ext__13
: us_private
}

function us_split_fields_C__4__projection(a: us_split_fields26) : us_main_type1 =
  (a).rec__tagged_component_check__q__p5__c1

function us_split_fields_H__5__projection(a: us_split_fields26) : natural =
  (a).rec__tagged_component_check__q__d5__h

function us_split_fields___15__projection(a: us_split_fields26) : us_private =
  (a).rec__ext__13

type us_split_fields__ref13 = { us_split_fields__content13 :
us_split_fields26
}

function us_split_fields__ref___15__projection(a: us_split_fields__ref13) : us_split_fields26 =
  (a).us_split_fields__content13

type us_rep13 = { us_split_fields27 : us_split_fields26; attr__tag13 : int
}

function us_rep___29__projection(a: us_rep13) : us_split_fields26 =
  (a).us_split_fields27

function us_rep___30__projection(a: us_rep13) : int = (a).attr__tag13

logic hide_ext__8 : natural, us_private -> us_private

logic extract__h4 : us_private -> natural

axiom extract__h__conv4 :
  (forall h:natural.
  (forall rec__ext__14:us_private. (extract__h4(hide_ext__8(h,
  rec__ext__14)) = h)))

logic extract__ext__8 : us_private -> us_private

function to_base8(a: us_rep13) : us_rep12 = { us_split_fields25 = {
  rec__tagged_component_check__q__p5__c =
  ((a).us_split_fields27).rec__tagged_component_check__q__p5__c1;
  rec__ext__12 =
  hide_ext__8(((a).us_split_fields27).rec__tagged_component_check__q__d5__h,
  ((a).us_split_fields27).rec__ext__13) }; attr__tag12 = (a).attr__tag13 }

function of_base8(r: us_rep12) : us_rep13 = { us_split_fields27 = {
  rec__tagged_component_check__q__p5__c1 =
  ((r).us_split_fields25).rec__tagged_component_check__q__p5__c;
  rec__tagged_component_check__q__d5__h =
  extract__h4(((r).us_split_fields25).rec__ext__12); rec__ext__13 =
  extract__ext__8(((r).us_split_fields25).rec__ext__12) }; attr__tag13 =
  (r).attr__tag12 }

logic bool_eq16 : us_rep13, us_rep13 -> bool

axiom bool_eq_def15 :
  (forall a:us_rep13. forall b:us_rep13 [bool_eq16(a, b)].
  ((((us_main_eq1(((a).us_split_fields27).rec__tagged_component_check__q__p5__c1,
  ((b).us_split_fields27).rec__tagged_component_check__q__p5__c1) = true) and
  (to_rep(((a).us_split_fields27).rec__tagged_component_check__q__d5__h) = to_rep(((b).us_split_fields27).rec__tagged_component_check__q__d5__h))) ->
  (bool_eq16(a, b) = true)) and
  ((not ((us_main_eq1(((a).us_split_fields27).rec__tagged_component_check__q__p5__c1,
  ((b).us_split_fields27).rec__tagged_component_check__q__p5__c1) = true) and
  (to_rep(((a).us_split_fields27).rec__tagged_component_check__q__d5__h) = to_rep(((b).us_split_fields27).rec__tagged_component_check__q__d5__h)))) ->
  (bool_eq16(a, b) = false))))

logic us_tag13 : int

logic value__size13 : int

logic object__size13 : us_rep13 -> int

logic value__alignment13 : int

logic object__alignment13 : us_rep13 -> int

axiom value__size_axiom13 : (0 <= value__size13)

axiom object__size_axiom13 :
  (forall a:us_main_type1. forall a1:natural. forall a2:us_private.
  forall a3:int. (0 <= object__size13({ us_split_fields27 = {
  rec__tagged_component_check__q__p5__c1 = a;
  rec__tagged_component_check__q__d5__h = a1; rec__ext__13 = a2 };
  attr__tag13 = a3 })))

axiom value__alignment_axiom13 : (0 <= value__alignment13)

axiom object__alignment_axiom13 :
  (forall a:us_main_type1. forall a1:natural. forall a2:us_private.
  forall a3:int. (0 <= object__alignment13({ us_split_fields27 = {
  rec__tagged_component_check__q__p5__c1 = a;
  rec__tagged_component_check__q__d5__h = a1; rec__ext__13 = a2 };
  attr__tag13 = a3 })))

logic tagged_component_check__q__d5__h__first__bit : int

logic tagged_component_check__q__d5__h__last__bit : int

logic tagged_component_check__q__d5__h__position : int

axiom tagged_component_check__q__d5__h__first__bit_axiom :
  (0 <= tagged_component_check__q__d5__h__first__bit)

axiom tagged_component_check__q__d5__h__last__bit_axiom :
  (tagged_component_check__q__d5__h__first__bit <  tagged_component_check__q__d5__h__last__bit)

axiom tagged_component_check__q__d5__h__position_axiom :
  (0 <= tagged_component_check__q__d5__h__position)

logic user_eq15 : us_rep13, us_rep13 -> bool

logic dummy53 : us_main_type1

logic dummy54 : natural

logic dummy55 : us_private

logic dummy56 : int

type d5__ref = { d5__content : us_rep13
}

function d5__ref___projection(a: d5__ref) : us_rep13 = (a).d5__content

logic x1__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS : int

logic x2__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic x3__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic x4__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic x5__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS4 : int

type us_split_fields28 = { rec__tagged_component_check__r__p1__root__f :
natural; rec__ext__14 : us_private
}

function us_split_fields_F__14__projection(a: us_split_fields28) : natural =
  (a).rec__tagged_component_check__r__p1__root__f

function us_split_fields___16__projection(a: us_split_fields28) : us_private =
  (a).rec__ext__14

type us_split_fields__ref14 = { us_split_fields__content14 :
us_split_fields28
}

function us_split_fields__ref___16__projection(a: us_split_fields__ref14) : us_split_fields28 =
  (a).us_split_fields__content14

type us_rep14 = { us_split_fields29 : us_split_fields28; attr__tag14 : int
}

function us_rep___31__projection(a: us_rep14) : us_split_fields28 =
  (a).us_split_fields29

function us_rep___32__projection(a: us_rep14) : int = (a).attr__tag14

logic bool_eq17 : us_rep14, us_rep14 -> bool

axiom bool_eq_def16 :
  (forall a:us_rep14. forall b:us_rep14 [bool_eq17(a, b)].
  (((to_rep(((a).us_split_fields29).rec__tagged_component_check__r__p1__root__f) = to_rep(((b).us_split_fields29).rec__tagged_component_check__r__p1__root__f)) ->
  (bool_eq17(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields29).rec__tagged_component_check__r__p1__root__f) = to_rep(((b).us_split_fields29).rec__tagged_component_check__r__p1__root__f))) ->
  (bool_eq17(a, b) = false))))

logic us_dispatch_eq5 : us_rep14, us_rep14 -> bool

logic us_tag14 : int

logic value__size14 : int

logic object__size14 : us_rep14 -> int

logic value__alignment14 : int

logic object__alignment14 : us_rep14 -> int

axiom value__size_axiom14 : (0 <= value__size14)

axiom object__size_axiom14 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__size14({ us_split_fields29 = {
  rec__tagged_component_check__r__p1__root__f = a; rec__ext__14 = a1 };
  attr__tag14 = a2 })))

axiom value__alignment_axiom14 : (0 <= value__alignment14)

axiom object__alignment_axiom14 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__alignment14({ us_split_fields29 = {
  rec__tagged_component_check__r__p1__root__f = a; rec__ext__14 = a1 };
  attr__tag14 = a2 })))

logic tagged_component_check__r__p1__root__f__first__bit : int

logic tagged_component_check__r__p1__root__f__last__bit : int

logic tagged_component_check__r__p1__root__f__position : int

axiom tagged_component_check__r__p1__root__f__first__bit_axiom :
  (0 <= tagged_component_check__r__p1__root__f__first__bit)

axiom tagged_component_check__r__p1__root__f__last__bit_axiom :
  (tagged_component_check__r__p1__root__f__first__bit <  tagged_component_check__r__p1__root__f__last__bit)

axiom tagged_component_check__r__p1__root__f__position_axiom :
  (0 <= tagged_component_check__r__p1__root__f__position)

logic user_eq16 : us_rep14, us_rep14 -> bool

logic dummy57 : natural

logic dummy58 : us_private

logic dummy59 : int

type root__ref4 = { root__content4 : us_rep14
}

function root__ref___6__projection(a: root__ref4) : us_rep14 =
  (a).root__content4

type us_split_fields30 = { rec__tagged_component_check__r__p1__c__g :
natural; rec__tagged_component_check__r__p1__root__f1 : natural; rec__ext__15
: us_private
}

function us_split_fields_G__7__projection(a: us_split_fields30) : natural =
  (a).rec__tagged_component_check__r__p1__c__g

function us_split_fields_F__15__projection(a: us_split_fields30) : natural =
  (a).rec__tagged_component_check__r__p1__root__f1

function us_split_fields___17__projection(a: us_split_fields30) : us_private =
  (a).rec__ext__15

type us_split_fields__ref15 = { us_split_fields__content15 :
us_split_fields30
}

function us_split_fields__ref___17__projection(a: us_split_fields__ref15) : us_split_fields30 =
  (a).us_split_fields__content15

type us_rep15 = { us_split_fields31 : us_split_fields30; attr__tag15 : int
}

function us_rep___33__projection(a: us_rep15) : us_split_fields30 =
  (a).us_split_fields31

function us_rep___34__projection(a: us_rep15) : int = (a).attr__tag15

logic hide_ext__9 : natural, us_private -> us_private

logic extract__g3 : us_private -> natural

axiom extract__g__conv6 :
  (forall g:natural.
  (forall rec__ext__16:us_private. (extract__g3(hide_ext__9(g,
  rec__ext__16)) = g)))

logic extract__ext__9 : us_private -> us_private

function to_base9(a: us_rep15) : us_rep14 = { us_split_fields29 = {
  rec__tagged_component_check__r__p1__root__f =
  ((a).us_split_fields31).rec__tagged_component_check__r__p1__root__f1;
  rec__ext__14 =
  hide_ext__9(((a).us_split_fields31).rec__tagged_component_check__r__p1__c__g,
  ((a).us_split_fields31).rec__ext__15) }; attr__tag14 = (a).attr__tag15 }

function of_base9(r: us_rep14) : us_rep15 = { us_split_fields31 = {
  rec__tagged_component_check__r__p1__c__g =
  extract__g3(((r).us_split_fields29).rec__ext__14);
  rec__tagged_component_check__r__p1__root__f1 =
  ((r).us_split_fields29).rec__tagged_component_check__r__p1__root__f;
  rec__ext__15 = extract__ext__9(((r).us_split_fields29).rec__ext__14) };
  attr__tag15 = (r).attr__tag14 }

logic bool_eq18 : us_rep15, us_rep15 -> bool

axiom bool_eq_def17 :
  (forall a:us_rep15. forall b:us_rep15 [bool_eq18(a, b)].
  ((((to_rep(((a).us_split_fields31).rec__tagged_component_check__r__p1__c__g) = to_rep(((b).us_split_fields31).rec__tagged_component_check__r__p1__c__g)) and
  (to_rep(((a).us_split_fields31).rec__tagged_component_check__r__p1__root__f1) = to_rep(((b).us_split_fields31).rec__tagged_component_check__r__p1__root__f1))) ->
  (bool_eq18(a, b) = true)) and
  ((not ((to_rep(((a).us_split_fields31).rec__tagged_component_check__r__p1__c__g) = to_rep(((b).us_split_fields31).rec__tagged_component_check__r__p1__c__g)) and
  (to_rep(((a).us_split_fields31).rec__tagged_component_check__r__p1__root__f1) = to_rep(((b).us_split_fields31).rec__tagged_component_check__r__p1__root__f1)))) ->
  (bool_eq18(a, b) = false))))

logic us_tag15 : int

logic value__size15 : int

logic object__size15 : us_rep15 -> int

logic value__alignment15 : int

logic object__alignment15 : us_rep15 -> int

axiom value__size_axiom15 : (0 <= value__size15)

axiom object__size_axiom15 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__size15({ us_split_fields31 = {
  rec__tagged_component_check__r__p1__c__g = a;
  rec__tagged_component_check__r__p1__root__f1 = a1; rec__ext__15 = a2 };
  attr__tag15 = a3 })))

axiom value__alignment_axiom15 : (0 <= value__alignment15)

axiom object__alignment_axiom15 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__alignment15({ us_split_fields31 = {
  rec__tagged_component_check__r__p1__c__g = a;
  rec__tagged_component_check__r__p1__root__f1 = a1; rec__ext__15 = a2 };
  attr__tag15 = a3 })))

logic tagged_component_check__r__p1__c__g__first__bit : int

logic tagged_component_check__r__p1__c__g__last__bit : int

logic tagged_component_check__r__p1__c__g__position : int

axiom tagged_component_check__r__p1__c__g__first__bit_axiom :
  (0 <= tagged_component_check__r__p1__c__g__first__bit)

axiom tagged_component_check__r__p1__c__g__last__bit_axiom :
  (tagged_component_check__r__p1__c__g__first__bit <  tagged_component_check__r__p1__c__g__last__bit)

axiom tagged_component_check__r__p1__c__g__position_axiom :
  (0 <= tagged_component_check__r__p1__c__g__position)

logic tagged_component_check__r__p1__root__f__first__bit1 : int

logic tagged_component_check__r__p1__root__f__last__bit1 : int

logic tagged_component_check__r__p1__root__f__position1 : int

axiom tagged_component_check__r__p1__root__f__first__bit_axiom1 :
  (0 <= tagged_component_check__r__p1__root__f__first__bit1)

axiom tagged_component_check__r__p1__root__f__last__bit_axiom1 :
  (tagged_component_check__r__p1__root__f__first__bit1 <  tagged_component_check__r__p1__root__f__last__bit1)

axiom tagged_component_check__r__p1__root__f__position_axiom1 :
  (0 <= tagged_component_check__r__p1__root__f__position1)

logic user_eq17 : us_rep15, us_rep15 -> bool

logic dummy60 : natural

logic dummy61 : natural

logic dummy62 : us_private

logic dummy63 : int

type c__ref5 = { c__content5 : us_rep15
}

function c__ref___6__projection(a: c__ref5) : us_rep15 = (a).c__content5

type us_split_fields32 = { rec__tagged_component_check__r__d1__h : natural;
rec__tagged_component_check__r__p1__root__f2 : natural;
rec__tagged_component_check__r__p1__c__g1 : natural; rec__ext__16 :
us_private
}

function us_split_fields_H__6__projection(a: us_split_fields32) : natural =
  (a).rec__tagged_component_check__r__d1__h

function us_split_fields_F__23__projection(a: us_split_fields32) : natural =
  (a).rec__tagged_component_check__r__p1__root__f2

function us_split_fields_G__10__projection(a: us_split_fields32) : natural =
  (a).rec__tagged_component_check__r__p1__c__g1

function us_split_fields___26__projection(a: us_split_fields32) : us_private =
  (a).rec__ext__16

type us_split_fields__ref16 = { us_split_fields__content16 :
us_split_fields32
}

function us_split_fields__ref___26__projection(a: us_split_fields__ref16) : us_split_fields32 =
  (a).us_split_fields__content16

type us_rep16 = { us_split_fields33 : us_split_fields32; attr__tag16 : int
}

function us_rep___51__projection(a: us_rep16) : us_split_fields32 =
  (a).us_split_fields33

function us_rep___52__projection(a: us_rep16) : int = (a).attr__tag16

logic hide_ext__10 : natural, natural, us_private -> us_private

logic extract__h5 : us_private -> natural

axiom extract__h__conv5 :
  (forall h:natural. forall g:natural.
  (forall rec__ext__17:us_private. (extract__h5(hide_ext__10(h, g,
  rec__ext__17)) = h)))

axiom extract__g__conv7 :
  (forall h:natural. forall g:natural.
  (forall rec__ext__17:us_private. (extract__g3(hide_ext__10(h, g,
  rec__ext__17)) = g)))

logic extract__ext__10 : us_private -> us_private

function to_base10(a: us_rep16) : us_rep14 = { us_split_fields29 = {
  rec__tagged_component_check__r__p1__root__f =
  ((a).us_split_fields33).rec__tagged_component_check__r__p1__root__f2;
  rec__ext__14 =
  hide_ext__10(((a).us_split_fields33).rec__tagged_component_check__r__d1__h,
  ((a).us_split_fields33).rec__tagged_component_check__r__p1__c__g1,
  ((a).us_split_fields33).rec__ext__16) }; attr__tag14 = (a).attr__tag16 }

function of_base10(r: us_rep14) : us_rep16 = { us_split_fields33 = {
  rec__tagged_component_check__r__d1__h =
  extract__h5(((r).us_split_fields29).rec__ext__14);
  rec__tagged_component_check__r__p1__root__f2 =
  ((r).us_split_fields29).rec__tagged_component_check__r__p1__root__f;
  rec__tagged_component_check__r__p1__c__g1 =
  extract__g3(((r).us_split_fields29).rec__ext__14); rec__ext__16 =
  extract__ext__10(((r).us_split_fields29).rec__ext__14) }; attr__tag16 =
  (r).attr__tag14 }

logic bool_eq19 : us_rep16, us_rep16 -> bool

axiom bool_eq_def18 :
  (forall a:us_rep16. forall b:us_rep16 [bool_eq19(a, b)].
  (((((to_rep(((a).us_split_fields33).rec__tagged_component_check__r__d1__h) = to_rep(((b).us_split_fields33).rec__tagged_component_check__r__d1__h)) and
  (to_rep(((a).us_split_fields33).rec__tagged_component_check__r__p1__root__f2) = to_rep(((b).us_split_fields33).rec__tagged_component_check__r__p1__root__f2))) and
  (to_rep(((a).us_split_fields33).rec__tagged_component_check__r__p1__c__g1) = to_rep(((b).us_split_fields33).rec__tagged_component_check__r__p1__c__g1))) ->
  (bool_eq19(a, b) = true)) and
  ((not (((to_rep(((a).us_split_fields33).rec__tagged_component_check__r__d1__h) = to_rep(((b).us_split_fields33).rec__tagged_component_check__r__d1__h)) and
  (to_rep(((a).us_split_fields33).rec__tagged_component_check__r__p1__root__f2) = to_rep(((b).us_split_fields33).rec__tagged_component_check__r__p1__root__f2))) and
  (to_rep(((a).us_split_fields33).rec__tagged_component_check__r__p1__c__g1) = to_rep(((b).us_split_fields33).rec__tagged_component_check__r__p1__c__g1)))) ->
  (bool_eq19(a, b) = false))))

logic us_tag16 : int

logic value__size16 : int

logic object__size16 : us_rep16 -> int

logic value__alignment16 : int

logic object__alignment16 : us_rep16 -> int

axiom value__size_axiom16 : (0 <= value__size16)

axiom object__size_axiom16 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__size16({
  us_split_fields33 = { rec__tagged_component_check__r__d1__h = a;
  rec__tagged_component_check__r__p1__root__f2 = a1;
  rec__tagged_component_check__r__p1__c__g1 = a2; rec__ext__16 = a3 };
  attr__tag16 = a4 })))

axiom value__alignment_axiom16 : (0 <= value__alignment16)

axiom object__alignment_axiom16 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__alignment16({
  us_split_fields33 = { rec__tagged_component_check__r__d1__h = a;
  rec__tagged_component_check__r__p1__root__f2 = a1;
  rec__tagged_component_check__r__p1__c__g1 = a2; rec__ext__16 = a3 };
  attr__tag16 = a4 })))

logic tagged_component_check__r__d1__h__first__bit : int

logic tagged_component_check__r__d1__h__last__bit : int

logic tagged_component_check__r__d1__h__position : int

axiom tagged_component_check__r__d1__h__first__bit_axiom :
  (0 <= tagged_component_check__r__d1__h__first__bit)

axiom tagged_component_check__r__d1__h__last__bit_axiom :
  (tagged_component_check__r__d1__h__first__bit <  tagged_component_check__r__d1__h__last__bit)

axiom tagged_component_check__r__d1__h__position_axiom :
  (0 <= tagged_component_check__r__d1__h__position)

logic tagged_component_check__r__p1__root__f__first__bit2 : int

logic tagged_component_check__r__p1__root__f__last__bit2 : int

logic tagged_component_check__r__p1__root__f__position2 : int

axiom tagged_component_check__r__p1__root__f__first__bit_axiom2 :
  (0 <= tagged_component_check__r__p1__root__f__first__bit2)

axiom tagged_component_check__r__p1__root__f__last__bit_axiom2 :
  (tagged_component_check__r__p1__root__f__first__bit2 <  tagged_component_check__r__p1__root__f__last__bit2)

axiom tagged_component_check__r__p1__root__f__position_axiom2 :
  (0 <= tagged_component_check__r__p1__root__f__position2)

logic tagged_component_check__r__p1__c__g__first__bit1 : int

logic tagged_component_check__r__p1__c__g__last__bit1 : int

logic tagged_component_check__r__p1__c__g__position1 : int

axiom tagged_component_check__r__p1__c__g__first__bit_axiom1 :
  (0 <= tagged_component_check__r__p1__c__g__first__bit1)

axiom tagged_component_check__r__p1__c__g__last__bit_axiom1 :
  (tagged_component_check__r__p1__c__g__first__bit1 <  tagged_component_check__r__p1__c__g__last__bit1)

axiom tagged_component_check__r__p1__c__g__position_axiom1 :
  (0 <= tagged_component_check__r__p1__c__g__position1)

logic user_eq18 : us_rep16, us_rep16 -> bool

logic dummy64 : natural

logic dummy65 : natural

logic dummy66 : natural

logic dummy67 : us_private

logic dummy68 : int

type d1__ref1 = { d1__content1 : us_rep16
}

function d1__ref___2__projection(a: d1__ref1) : us_rep16 = (a).d1__content1

type us_split_fields34 = { rec__tagged_component_check__r__p2__root__f :
natural; rec__ext__17 : us_private
}

function us_split_fields_F__16__projection(a: us_split_fields34) : natural =
  (a).rec__tagged_component_check__r__p2__root__f

function us_split_fields___18__projection(a: us_split_fields34) : us_private =
  (a).rec__ext__17

type us_split_fields__ref17 = { us_split_fields__content17 :
us_split_fields34
}

function us_split_fields__ref___18__projection(a: us_split_fields__ref17) : us_split_fields34 =
  (a).us_split_fields__content17

type us_rep17 = { us_split_fields35 : us_split_fields34; attr__tag17 : int
}

function us_rep___35__projection(a: us_rep17) : us_split_fields34 =
  (a).us_split_fields35

function us_rep___36__projection(a: us_rep17) : int = (a).attr__tag17

logic bool_eq20 : us_rep17, us_rep17 -> bool

axiom bool_eq_def19 :
  (forall a:us_rep17. forall b:us_rep17 [bool_eq20(a, b)].
  (((to_rep(((a).us_split_fields35).rec__tagged_component_check__r__p2__root__f) = to_rep(((b).us_split_fields35).rec__tagged_component_check__r__p2__root__f)) ->
  (bool_eq20(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields35).rec__tagged_component_check__r__p2__root__f) = to_rep(((b).us_split_fields35).rec__tagged_component_check__r__p2__root__f))) ->
  (bool_eq20(a, b) = false))))

logic us_dispatch_eq6 : us_rep17, us_rep17 -> bool

logic us_tag17 : int

logic value__size17 : int

logic object__size17 : us_rep17 -> int

logic value__alignment17 : int

logic object__alignment17 : us_rep17 -> int

axiom value__size_axiom17 : (0 <= value__size17)

axiom object__size_axiom17 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__size17({ us_split_fields35 = {
  rec__tagged_component_check__r__p2__root__f = a; rec__ext__17 = a1 };
  attr__tag17 = a2 })))

axiom value__alignment_axiom17 : (0 <= value__alignment17)

axiom object__alignment_axiom17 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__alignment17({ us_split_fields35 = {
  rec__tagged_component_check__r__p2__root__f = a; rec__ext__17 = a1 };
  attr__tag17 = a2 })))

logic tagged_component_check__r__p2__root__f__first__bit : int

logic tagged_component_check__r__p2__root__f__last__bit : int

logic tagged_component_check__r__p2__root__f__position : int

axiom tagged_component_check__r__p2__root__f__first__bit_axiom :
  (0 <= tagged_component_check__r__p2__root__f__first__bit)

axiom tagged_component_check__r__p2__root__f__last__bit_axiom :
  (tagged_component_check__r__p2__root__f__first__bit <  tagged_component_check__r__p2__root__f__last__bit)

axiom tagged_component_check__r__p2__root__f__position_axiom :
  (0 <= tagged_component_check__r__p2__root__f__position)

logic user_eq19 : us_rep17, us_rep17 -> bool

logic dummy69 : natural

logic dummy70 : us_private

logic dummy71 : int

type root__ref5 = { root__content5 : us_rep17
}

function root__ref___7__projection(a: root__ref5) : us_rep17 =
  (a).root__content5

type us_split_fields36 = { rec__tagged_component_check__r__p2__c__g :
natural; rec__tagged_component_check__r__p2__root__f1 : natural; rec__ext__18
: us_private
}

function us_split_fields_G__8__projection(a: us_split_fields36) : natural =
  (a).rec__tagged_component_check__r__p2__c__g

function us_split_fields_F__17__projection(a: us_split_fields36) : natural =
  (a).rec__tagged_component_check__r__p2__root__f1

function us_split_fields___19__projection(a: us_split_fields36) : us_private =
  (a).rec__ext__18

type us_split_fields__ref18 = { us_split_fields__content18 :
us_split_fields36
}

function us_split_fields__ref___19__projection(a: us_split_fields__ref18) : us_split_fields36 =
  (a).us_split_fields__content18

type us_rep18 = { us_split_fields37 : us_split_fields36; attr__tag18 : int
}

function us_rep___37__projection(a: us_rep18) : us_split_fields36 =
  (a).us_split_fields37

function us_rep___38__projection(a: us_rep18) : int = (a).attr__tag18

logic hide_ext__11 : natural, us_private -> us_private

logic extract__g4 : us_private -> natural

axiom extract__g__conv8 :
  (forall g:natural.
  (forall rec__ext__19:us_private. (extract__g4(hide_ext__11(g,
  rec__ext__19)) = g)))

logic extract__ext__11 : us_private -> us_private

function to_base11(a: us_rep18) : us_rep17 = { us_split_fields35 = {
  rec__tagged_component_check__r__p2__root__f =
  ((a).us_split_fields37).rec__tagged_component_check__r__p2__root__f1;
  rec__ext__17 =
  hide_ext__11(((a).us_split_fields37).rec__tagged_component_check__r__p2__c__g,
  ((a).us_split_fields37).rec__ext__18) }; attr__tag17 = (a).attr__tag18 }

function of_base11(r: us_rep17) : us_rep18 = { us_split_fields37 = {
  rec__tagged_component_check__r__p2__c__g =
  extract__g4(((r).us_split_fields35).rec__ext__17);
  rec__tagged_component_check__r__p2__root__f1 =
  ((r).us_split_fields35).rec__tagged_component_check__r__p2__root__f;
  rec__ext__18 = extract__ext__11(((r).us_split_fields35).rec__ext__17) };
  attr__tag18 = (r).attr__tag17 }

logic bool_eq21 : us_rep18, us_rep18 -> bool

axiom bool_eq_def20 :
  (forall a:us_rep18. forall b:us_rep18 [bool_eq21(a, b)].
  ((((to_rep(((a).us_split_fields37).rec__tagged_component_check__r__p2__c__g) = to_rep(((b).us_split_fields37).rec__tagged_component_check__r__p2__c__g)) and
  (to_rep(((a).us_split_fields37).rec__tagged_component_check__r__p2__root__f1) = to_rep(((b).us_split_fields37).rec__tagged_component_check__r__p2__root__f1))) ->
  (bool_eq21(a, b) = true)) and
  ((not ((to_rep(((a).us_split_fields37).rec__tagged_component_check__r__p2__c__g) = to_rep(((b).us_split_fields37).rec__tagged_component_check__r__p2__c__g)) and
  (to_rep(((a).us_split_fields37).rec__tagged_component_check__r__p2__root__f1) = to_rep(((b).us_split_fields37).rec__tagged_component_check__r__p2__root__f1)))) ->
  (bool_eq21(a, b) = false))))

logic us_tag18 : int

logic value__size18 : int

logic object__size18 : us_rep18 -> int

logic value__alignment18 : int

logic object__alignment18 : us_rep18 -> int

axiom value__size_axiom18 : (0 <= value__size18)

axiom object__size_axiom18 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__size18({ us_split_fields37 = {
  rec__tagged_component_check__r__p2__c__g = a;
  rec__tagged_component_check__r__p2__root__f1 = a1; rec__ext__18 = a2 };
  attr__tag18 = a3 })))

axiom value__alignment_axiom18 : (0 <= value__alignment18)

axiom object__alignment_axiom18 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__alignment18({ us_split_fields37 = {
  rec__tagged_component_check__r__p2__c__g = a;
  rec__tagged_component_check__r__p2__root__f1 = a1; rec__ext__18 = a2 };
  attr__tag18 = a3 })))

logic tagged_component_check__r__p2__c__g__first__bit : int

logic tagged_component_check__r__p2__c__g__last__bit : int

logic tagged_component_check__r__p2__c__g__position : int

axiom tagged_component_check__r__p2__c__g__first__bit_axiom :
  (0 <= tagged_component_check__r__p2__c__g__first__bit)

axiom tagged_component_check__r__p2__c__g__last__bit_axiom :
  (tagged_component_check__r__p2__c__g__first__bit <  tagged_component_check__r__p2__c__g__last__bit)

axiom tagged_component_check__r__p2__c__g__position_axiom :
  (0 <= tagged_component_check__r__p2__c__g__position)

logic tagged_component_check__r__p2__root__f__first__bit1 : int

logic tagged_component_check__r__p2__root__f__last__bit1 : int

logic tagged_component_check__r__p2__root__f__position1 : int

axiom tagged_component_check__r__p2__root__f__first__bit_axiom1 :
  (0 <= tagged_component_check__r__p2__root__f__first__bit1)

axiom tagged_component_check__r__p2__root__f__last__bit_axiom1 :
  (tagged_component_check__r__p2__root__f__first__bit1 <  tagged_component_check__r__p2__root__f__last__bit1)

axiom tagged_component_check__r__p2__root__f__position_axiom1 :
  (0 <= tagged_component_check__r__p2__root__f__position1)

logic user_eq20 : us_rep18, us_rep18 -> bool

logic dummy72 : natural

logic dummy73 : natural

logic dummy74 : us_private

logic dummy75 : int

type c__ref6 = { c__content6 : us_rep18
}

function c__ref___7__projection(a: c__ref6) : us_rep18 = (a).c__content6

type us_split_fields38 = { rec__tagged_component_check__r__p2__c__g1 :
natural; rec__tagged_component_check__r__d2__h : natural;
rec__tagged_component_check__r__p2__root__f2 : natural; rec__ext__19 :
us_private
}

function us_split_fields_G__11__projection(a: us_split_fields38) : natural =
  (a).rec__tagged_component_check__r__p2__c__g1

function us_split_fields_H__7__projection(a: us_split_fields38) : natural =
  (a).rec__tagged_component_check__r__d2__h

function us_split_fields_F__24__projection(a: us_split_fields38) : natural =
  (a).rec__tagged_component_check__r__p2__root__f2

function us_split_fields___27__projection(a: us_split_fields38) : us_private =
  (a).rec__ext__19

type us_split_fields__ref19 = { us_split_fields__content19 :
us_split_fields38
}

function us_split_fields__ref___27__projection(a: us_split_fields__ref19) : us_split_fields38 =
  (a).us_split_fields__content19

type us_rep19 = { us_split_fields39 : us_split_fields38; attr__tag19 : int
}

function us_rep___53__projection(a: us_rep19) : us_split_fields38 =
  (a).us_split_fields39

function us_rep___54__projection(a: us_rep19) : int = (a).attr__tag19

logic hide_ext__12 : natural, natural, us_private -> us_private

axiom extract__g__conv9 :
  (forall g:natural. forall h:natural.
  (forall rec__ext__20:us_private. (extract__g4(hide_ext__12(g, h,
  rec__ext__20)) = g)))

logic extract__h6 : us_private -> natural

axiom extract__h__conv6 :
  (forall g:natural. forall h:natural.
  (forall rec__ext__20:us_private. (extract__h6(hide_ext__12(g, h,
  rec__ext__20)) = h)))

logic extract__ext__12 : us_private -> us_private

function to_base12(a: us_rep19) : us_rep17 = { us_split_fields35 = {
  rec__tagged_component_check__r__p2__root__f =
  ((a).us_split_fields39).rec__tagged_component_check__r__p2__root__f2;
  rec__ext__17 =
  hide_ext__12(((a).us_split_fields39).rec__tagged_component_check__r__p2__c__g1,
  ((a).us_split_fields39).rec__tagged_component_check__r__d2__h,
  ((a).us_split_fields39).rec__ext__19) }; attr__tag17 = (a).attr__tag19 }

function of_base12(r: us_rep17) : us_rep19 = { us_split_fields39 = {
  rec__tagged_component_check__r__p2__c__g1 =
  extract__g4(((r).us_split_fields35).rec__ext__17);
  rec__tagged_component_check__r__d2__h =
  extract__h6(((r).us_split_fields35).rec__ext__17);
  rec__tagged_component_check__r__p2__root__f2 =
  ((r).us_split_fields35).rec__tagged_component_check__r__p2__root__f;
  rec__ext__19 = extract__ext__12(((r).us_split_fields35).rec__ext__17) };
  attr__tag19 = (r).attr__tag17 }

logic bool_eq22 : us_rep19, us_rep19 -> bool

axiom bool_eq_def21 :
  (forall a:us_rep19. forall b:us_rep19 [bool_eq22(a, b)].
  (((((to_rep(((a).us_split_fields39).rec__tagged_component_check__r__p2__c__g1) = to_rep(((b).us_split_fields39).rec__tagged_component_check__r__p2__c__g1)) and
  (to_rep(((a).us_split_fields39).rec__tagged_component_check__r__d2__h) = to_rep(((b).us_split_fields39).rec__tagged_component_check__r__d2__h))) and
  (to_rep(((a).us_split_fields39).rec__tagged_component_check__r__p2__root__f2) = to_rep(((b).us_split_fields39).rec__tagged_component_check__r__p2__root__f2))) ->
  (bool_eq22(a, b) = true)) and
  ((not (((to_rep(((a).us_split_fields39).rec__tagged_component_check__r__p2__c__g1) = to_rep(((b).us_split_fields39).rec__tagged_component_check__r__p2__c__g1)) and
  (to_rep(((a).us_split_fields39).rec__tagged_component_check__r__d2__h) = to_rep(((b).us_split_fields39).rec__tagged_component_check__r__d2__h))) and
  (to_rep(((a).us_split_fields39).rec__tagged_component_check__r__p2__root__f2) = to_rep(((b).us_split_fields39).rec__tagged_component_check__r__p2__root__f2)))) ->
  (bool_eq22(a, b) = false))))

logic us_tag19 : int

logic value__size19 : int

logic object__size19 : us_rep19 -> int

logic value__alignment19 : int

logic object__alignment19 : us_rep19 -> int

axiom value__size_axiom19 : (0 <= value__size19)

axiom object__size_axiom19 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__size19({
  us_split_fields39 = { rec__tagged_component_check__r__p2__c__g1 = a;
  rec__tagged_component_check__r__d2__h = a1;
  rec__tagged_component_check__r__p2__root__f2 = a2; rec__ext__19 = a3 };
  attr__tag19 = a4 })))

axiom value__alignment_axiom19 : (0 <= value__alignment19)

axiom object__alignment_axiom19 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__alignment19({
  us_split_fields39 = { rec__tagged_component_check__r__p2__c__g1 = a;
  rec__tagged_component_check__r__d2__h = a1;
  rec__tagged_component_check__r__p2__root__f2 = a2; rec__ext__19 = a3 };
  attr__tag19 = a4 })))

logic tagged_component_check__r__p2__c__g__first__bit1 : int

logic tagged_component_check__r__p2__c__g__last__bit1 : int

logic tagged_component_check__r__p2__c__g__position1 : int

axiom tagged_component_check__r__p2__c__g__first__bit_axiom1 :
  (0 <= tagged_component_check__r__p2__c__g__first__bit1)

axiom tagged_component_check__r__p2__c__g__last__bit_axiom1 :
  (tagged_component_check__r__p2__c__g__first__bit1 <  tagged_component_check__r__p2__c__g__last__bit1)

axiom tagged_component_check__r__p2__c__g__position_axiom1 :
  (0 <= tagged_component_check__r__p2__c__g__position1)

logic tagged_component_check__r__d2__h__first__bit : int

logic tagged_component_check__r__d2__h__last__bit : int

logic tagged_component_check__r__d2__h__position : int

axiom tagged_component_check__r__d2__h__first__bit_axiom :
  (0 <= tagged_component_check__r__d2__h__first__bit)

axiom tagged_component_check__r__d2__h__last__bit_axiom :
  (tagged_component_check__r__d2__h__first__bit <  tagged_component_check__r__d2__h__last__bit)

axiom tagged_component_check__r__d2__h__position_axiom :
  (0 <= tagged_component_check__r__d2__h__position)

logic tagged_component_check__r__p2__root__f__first__bit2 : int

logic tagged_component_check__r__p2__root__f__last__bit2 : int

logic tagged_component_check__r__p2__root__f__position2 : int

axiom tagged_component_check__r__p2__root__f__first__bit_axiom2 :
  (0 <= tagged_component_check__r__p2__root__f__first__bit2)

axiom tagged_component_check__r__p2__root__f__last__bit_axiom2 :
  (tagged_component_check__r__p2__root__f__first__bit2 <  tagged_component_check__r__p2__root__f__last__bit2)

axiom tagged_component_check__r__p2__root__f__position_axiom2 :
  (0 <= tagged_component_check__r__p2__root__f__position2)

logic user_eq21 : us_rep19, us_rep19 -> bool

logic dummy76 : natural

logic dummy77 : natural

logic dummy78 : natural

logic dummy79 : us_private

logic dummy80 : int

type d2__ref1 = { d2__content1 : us_rep19
}

function d2__ref___2__projection(a: d2__ref1) : us_rep19 = (a).d2__content1

type us_split_fields40 = { rec__tagged_component_check__r__p3__root__f :
natural; rec__ext__20 : us_private
}

function us_split_fields_F__18__projection(a: us_split_fields40) : natural =
  (a).rec__tagged_component_check__r__p3__root__f

function us_split_fields___20__projection(a: us_split_fields40) : us_private =
  (a).rec__ext__20

type us_split_fields__ref20 = { us_split_fields__content20 :
us_split_fields40
}

function us_split_fields__ref___20__projection(a: us_split_fields__ref20) : us_split_fields40 =
  (a).us_split_fields__content20

type us_rep20 = { us_split_fields41 : us_split_fields40; attr__tag20 : int
}

function us_rep___39__projection(a: us_rep20) : us_split_fields40 =
  (a).us_split_fields41

function us_rep___40__projection(a: us_rep20) : int = (a).attr__tag20

logic bool_eq23 : us_rep20, us_rep20 -> bool

axiom bool_eq_def22 :
  (forall a:us_rep20. forall b:us_rep20 [bool_eq23(a, b)].
  (((to_rep(((a).us_split_fields41).rec__tagged_component_check__r__p3__root__f) = to_rep(((b).us_split_fields41).rec__tagged_component_check__r__p3__root__f)) ->
  (bool_eq23(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields41).rec__tagged_component_check__r__p3__root__f) = to_rep(((b).us_split_fields41).rec__tagged_component_check__r__p3__root__f))) ->
  (bool_eq23(a, b) = false))))

logic us_dispatch_eq7 : us_rep20, us_rep20 -> bool

logic us_tag20 : int

logic value__size20 : int

logic object__size20 : us_rep20 -> int

logic value__alignment20 : int

logic object__alignment20 : us_rep20 -> int

axiom value__size_axiom20 : (0 <= value__size20)

axiom object__size_axiom20 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__size20({ us_split_fields41 = {
  rec__tagged_component_check__r__p3__root__f = a; rec__ext__20 = a1 };
  attr__tag20 = a2 })))

axiom value__alignment_axiom20 : (0 <= value__alignment20)

axiom object__alignment_axiom20 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__alignment20({ us_split_fields41 = {
  rec__tagged_component_check__r__p3__root__f = a; rec__ext__20 = a1 };
  attr__tag20 = a2 })))

logic tagged_component_check__r__p3__root__f__first__bit : int

logic tagged_component_check__r__p3__root__f__last__bit : int

logic tagged_component_check__r__p3__root__f__position : int

axiom tagged_component_check__r__p3__root__f__first__bit_axiom :
  (0 <= tagged_component_check__r__p3__root__f__first__bit)

axiom tagged_component_check__r__p3__root__f__last__bit_axiom :
  (tagged_component_check__r__p3__root__f__first__bit <  tagged_component_check__r__p3__root__f__last__bit)

axiom tagged_component_check__r__p3__root__f__position_axiom :
  (0 <= tagged_component_check__r__p3__root__f__position)

logic user_eq22 : us_rep20, us_rep20 -> bool

logic dummy81 : natural

logic dummy82 : us_private

logic dummy83 : int

type root__ref6 = { root__content6 : us_rep20
}

function root__ref___8__projection(a: root__ref6) : us_rep20 =
  (a).root__content6

type us_split_fields42 = { rec__tagged_component_check__r__p3__c__g :
natural; rec__tagged_component_check__r__p3__root__f1 : natural; rec__ext__21
: us_private
}

function us_split_fields_G__9__projection(a: us_split_fields42) : natural =
  (a).rec__tagged_component_check__r__p3__c__g

function us_split_fields_F__19__projection(a: us_split_fields42) : natural =
  (a).rec__tagged_component_check__r__p3__root__f1

function us_split_fields___21__projection(a: us_split_fields42) : us_private =
  (a).rec__ext__21

type us_split_fields__ref21 = { us_split_fields__content21 :
us_split_fields42
}

function us_split_fields__ref___21__projection(a: us_split_fields__ref21) : us_split_fields42 =
  (a).us_split_fields__content21

type us_rep21 = { us_split_fields43 : us_split_fields42; attr__tag21 : int
}

function us_rep___41__projection(a: us_rep21) : us_split_fields42 =
  (a).us_split_fields43

function us_rep___42__projection(a: us_rep21) : int = (a).attr__tag21

logic hide_ext__13 : natural, us_private -> us_private

logic extract__g5 : us_private -> natural

axiom extract__g__conv10 :
  (forall g:natural.
  (forall rec__ext__22:us_private. (extract__g5(hide_ext__13(g,
  rec__ext__22)) = g)))

logic extract__ext__13 : us_private -> us_private

function to_base13(a: us_rep21) : us_rep20 = { us_split_fields41 = {
  rec__tagged_component_check__r__p3__root__f =
  ((a).us_split_fields43).rec__tagged_component_check__r__p3__root__f1;
  rec__ext__20 =
  hide_ext__13(((a).us_split_fields43).rec__tagged_component_check__r__p3__c__g,
  ((a).us_split_fields43).rec__ext__21) }; attr__tag20 = (a).attr__tag21 }

function of_base13(r: us_rep20) : us_rep21 = { us_split_fields43 = {
  rec__tagged_component_check__r__p3__c__g =
  extract__g5(((r).us_split_fields41).rec__ext__20);
  rec__tagged_component_check__r__p3__root__f1 =
  ((r).us_split_fields41).rec__tagged_component_check__r__p3__root__f;
  rec__ext__21 = extract__ext__13(((r).us_split_fields41).rec__ext__20) };
  attr__tag21 = (r).attr__tag20 }

logic bool_eq24 : us_rep21, us_rep21 -> bool

axiom bool_eq_def23 :
  (forall a:us_rep21. forall b:us_rep21 [bool_eq24(a, b)].
  ((((to_rep(((a).us_split_fields43).rec__tagged_component_check__r__p3__c__g) = to_rep(((b).us_split_fields43).rec__tagged_component_check__r__p3__c__g)) and
  (to_rep(((a).us_split_fields43).rec__tagged_component_check__r__p3__root__f1) = to_rep(((b).us_split_fields43).rec__tagged_component_check__r__p3__root__f1))) ->
  (bool_eq24(a, b) = true)) and
  ((not ((to_rep(((a).us_split_fields43).rec__tagged_component_check__r__p3__c__g) = to_rep(((b).us_split_fields43).rec__tagged_component_check__r__p3__c__g)) and
  (to_rep(((a).us_split_fields43).rec__tagged_component_check__r__p3__root__f1) = to_rep(((b).us_split_fields43).rec__tagged_component_check__r__p3__root__f1)))) ->
  (bool_eq24(a, b) = false))))

logic us_tag21 : int

logic value__size21 : int

logic object__size21 : us_rep21 -> int

logic value__alignment21 : int

logic object__alignment21 : us_rep21 -> int

axiom value__size_axiom21 : (0 <= value__size21)

axiom object__size_axiom21 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__size21({ us_split_fields43 = {
  rec__tagged_component_check__r__p3__c__g = a;
  rec__tagged_component_check__r__p3__root__f1 = a1; rec__ext__21 = a2 };
  attr__tag21 = a3 })))

axiom value__alignment_axiom21 : (0 <= value__alignment21)

axiom object__alignment_axiom21 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__alignment21({ us_split_fields43 = {
  rec__tagged_component_check__r__p3__c__g = a;
  rec__tagged_component_check__r__p3__root__f1 = a1; rec__ext__21 = a2 };
  attr__tag21 = a3 })))

logic tagged_component_check__r__p3__c__g__first__bit : int

logic tagged_component_check__r__p3__c__g__last__bit : int

logic tagged_component_check__r__p3__c__g__position : int

axiom tagged_component_check__r__p3__c__g__first__bit_axiom :
  (0 <= tagged_component_check__r__p3__c__g__first__bit)

axiom tagged_component_check__r__p3__c__g__last__bit_axiom :
  (tagged_component_check__r__p3__c__g__first__bit <  tagged_component_check__r__p3__c__g__last__bit)

axiom tagged_component_check__r__p3__c__g__position_axiom :
  (0 <= tagged_component_check__r__p3__c__g__position)

logic tagged_component_check__r__p3__root__f__first__bit1 : int

logic tagged_component_check__r__p3__root__f__last__bit1 : int

logic tagged_component_check__r__p3__root__f__position1 : int

axiom tagged_component_check__r__p3__root__f__first__bit_axiom1 :
  (0 <= tagged_component_check__r__p3__root__f__first__bit1)

axiom tagged_component_check__r__p3__root__f__last__bit_axiom1 :
  (tagged_component_check__r__p3__root__f__first__bit1 <  tagged_component_check__r__p3__root__f__last__bit1)

axiom tagged_component_check__r__p3__root__f__position_axiom1 :
  (0 <= tagged_component_check__r__p3__root__f__position1)

logic user_eq23 : us_rep21, us_rep21 -> bool

logic dummy84 : natural

logic dummy85 : natural

logic dummy86 : us_private

logic dummy87 : int

type c__ref7 = { c__content7 : us_rep21
}

function c__ref___8__projection(a: c__ref7) : us_rep21 = (a).c__content7

type us_split_fields44 = { rec__tagged_component_check__r__p3__c__g1 :
natural; rec__tagged_component_check__r__d3__h : natural;
rec__tagged_component_check__r__p3__root__f2 : natural; rec__ext__22 :
us_private
}

function us_split_fields_G__12__projection(a: us_split_fields44) : natural =
  (a).rec__tagged_component_check__r__p3__c__g1

function us_split_fields_H__8__projection(a: us_split_fields44) : natural =
  (a).rec__tagged_component_check__r__d3__h

function us_split_fields_F__25__projection(a: us_split_fields44) : natural =
  (a).rec__tagged_component_check__r__p3__root__f2

function us_split_fields___28__projection(a: us_split_fields44) : us_private =
  (a).rec__ext__22

type us_split_fields__ref22 = { us_split_fields__content22 :
us_split_fields44
}

function us_split_fields__ref___28__projection(a: us_split_fields__ref22) : us_split_fields44 =
  (a).us_split_fields__content22

type us_rep22 = { us_split_fields45 : us_split_fields44; attr__tag22 : int
}

function us_rep___55__projection(a: us_rep22) : us_split_fields44 =
  (a).us_split_fields45

function us_rep___56__projection(a: us_rep22) : int = (a).attr__tag22

logic hide_ext__14 : natural, natural, us_private -> us_private

axiom extract__g__conv11 :
  (forall g:natural. forall h:natural.
  (forall rec__ext__23:us_private. (extract__g5(hide_ext__14(g, h,
  rec__ext__23)) = g)))

logic extract__h7 : us_private -> natural

axiom extract__h__conv7 :
  (forall g:natural. forall h:natural.
  (forall rec__ext__23:us_private. (extract__h7(hide_ext__14(g, h,
  rec__ext__23)) = h)))

logic extract__ext__14 : us_private -> us_private

function to_base14(a: us_rep22) : us_rep20 = { us_split_fields41 = {
  rec__tagged_component_check__r__p3__root__f =
  ((a).us_split_fields45).rec__tagged_component_check__r__p3__root__f2;
  rec__ext__20 =
  hide_ext__14(((a).us_split_fields45).rec__tagged_component_check__r__p3__c__g1,
  ((a).us_split_fields45).rec__tagged_component_check__r__d3__h,
  ((a).us_split_fields45).rec__ext__22) }; attr__tag20 = (a).attr__tag22 }

function of_base14(r: us_rep20) : us_rep22 = { us_split_fields45 = {
  rec__tagged_component_check__r__p3__c__g1 =
  extract__g5(((r).us_split_fields41).rec__ext__20);
  rec__tagged_component_check__r__d3__h =
  extract__h7(((r).us_split_fields41).rec__ext__20);
  rec__tagged_component_check__r__p3__root__f2 =
  ((r).us_split_fields41).rec__tagged_component_check__r__p3__root__f;
  rec__ext__22 = extract__ext__14(((r).us_split_fields41).rec__ext__20) };
  attr__tag22 = (r).attr__tag20 }

logic bool_eq25 : us_rep22, us_rep22 -> bool

axiom bool_eq_def24 :
  (forall a:us_rep22. forall b:us_rep22 [bool_eq25(a, b)].
  (((((to_rep(((a).us_split_fields45).rec__tagged_component_check__r__p3__c__g1) = to_rep(((b).us_split_fields45).rec__tagged_component_check__r__p3__c__g1)) and
  (to_rep(((a).us_split_fields45).rec__tagged_component_check__r__d3__h) = to_rep(((b).us_split_fields45).rec__tagged_component_check__r__d3__h))) and
  (to_rep(((a).us_split_fields45).rec__tagged_component_check__r__p3__root__f2) = to_rep(((b).us_split_fields45).rec__tagged_component_check__r__p3__root__f2))) ->
  (bool_eq25(a, b) = true)) and
  ((not (((to_rep(((a).us_split_fields45).rec__tagged_component_check__r__p3__c__g1) = to_rep(((b).us_split_fields45).rec__tagged_component_check__r__p3__c__g1)) and
  (to_rep(((a).us_split_fields45).rec__tagged_component_check__r__d3__h) = to_rep(((b).us_split_fields45).rec__tagged_component_check__r__d3__h))) and
  (to_rep(((a).us_split_fields45).rec__tagged_component_check__r__p3__root__f2) = to_rep(((b).us_split_fields45).rec__tagged_component_check__r__p3__root__f2)))) ->
  (bool_eq25(a, b) = false))))

logic us_tag22 : int

logic value__size22 : int

logic object__size22 : us_rep22 -> int

logic value__alignment22 : int

logic object__alignment22 : us_rep22 -> int

axiom value__size_axiom22 : (0 <= value__size22)

axiom object__size_axiom22 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__size22({
  us_split_fields45 = { rec__tagged_component_check__r__p3__c__g1 = a;
  rec__tagged_component_check__r__d3__h = a1;
  rec__tagged_component_check__r__p3__root__f2 = a2; rec__ext__22 = a3 };
  attr__tag22 = a4 })))

axiom value__alignment_axiom22 : (0 <= value__alignment22)

axiom object__alignment_axiom22 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__alignment22({
  us_split_fields45 = { rec__tagged_component_check__r__p3__c__g1 = a;
  rec__tagged_component_check__r__d3__h = a1;
  rec__tagged_component_check__r__p3__root__f2 = a2; rec__ext__22 = a3 };
  attr__tag22 = a4 })))

logic tagged_component_check__r__p3__c__g__first__bit1 : int

logic tagged_component_check__r__p3__c__g__last__bit1 : int

logic tagged_component_check__r__p3__c__g__position1 : int

axiom tagged_component_check__r__p3__c__g__first__bit_axiom1 :
  (0 <= tagged_component_check__r__p3__c__g__first__bit1)

axiom tagged_component_check__r__p3__c__g__last__bit_axiom1 :
  (tagged_component_check__r__p3__c__g__first__bit1 <  tagged_component_check__r__p3__c__g__last__bit1)

axiom tagged_component_check__r__p3__c__g__position_axiom1 :
  (0 <= tagged_component_check__r__p3__c__g__position1)

logic tagged_component_check__r__d3__h__first__bit : int

logic tagged_component_check__r__d3__h__last__bit : int

logic tagged_component_check__r__d3__h__position : int

axiom tagged_component_check__r__d3__h__first__bit_axiom :
  (0 <= tagged_component_check__r__d3__h__first__bit)

axiom tagged_component_check__r__d3__h__last__bit_axiom :
  (tagged_component_check__r__d3__h__first__bit <  tagged_component_check__r__d3__h__last__bit)

axiom tagged_component_check__r__d3__h__position_axiom :
  (0 <= tagged_component_check__r__d3__h__position)

logic tagged_component_check__r__p3__root__f__first__bit2 : int

logic tagged_component_check__r__p3__root__f__last__bit2 : int

logic tagged_component_check__r__p3__root__f__position2 : int

axiom tagged_component_check__r__p3__root__f__first__bit_axiom2 :
  (0 <= tagged_component_check__r__p3__root__f__first__bit2)

axiom tagged_component_check__r__p3__root__f__last__bit_axiom2 :
  (tagged_component_check__r__p3__root__f__first__bit2 <  tagged_component_check__r__p3__root__f__last__bit2)

axiom tagged_component_check__r__p3__root__f__position_axiom2 :
  (0 <= tagged_component_check__r__p3__root__f__position2)

logic user_eq24 : us_rep22, us_rep22 -> bool

logic dummy88 : natural

logic dummy89 : natural

logic dummy90 : natural

logic dummy91 : us_private

logic dummy92 : int

type d3__ref1 = { d3__content1 : us_rep22
}

function d3__ref___2__projection(a: d3__ref1) : us_rep22 = (a).d3__content1

type us_split_fields46 = { rec__tagged_component_check__r__p4__root__f :
natural; rec__ext__23 : us_private
}

function us_split_fields_F__20__projection(a: us_split_fields46) : natural =
  (a).rec__tagged_component_check__r__p4__root__f

function us_split_fields___22__projection(a: us_split_fields46) : us_private =
  (a).rec__ext__23

type us_split_fields__ref23 = { us_split_fields__content23 :
us_split_fields46
}

function us_split_fields__ref___22__projection(a: us_split_fields__ref23) : us_split_fields46 =
  (a).us_split_fields__content23

type us_rep23 = { us_split_fields47 : us_split_fields46; attr__tag23 : int
}

function us_rep___43__projection(a: us_rep23) : us_split_fields46 =
  (a).us_split_fields47

function us_rep___44__projection(a: us_rep23) : int = (a).attr__tag23

logic bool_eq26 : us_rep23, us_rep23 -> bool

axiom bool_eq_def25 :
  (forall a:us_rep23. forall b:us_rep23 [bool_eq26(a, b)].
  (((to_rep(((a).us_split_fields47).rec__tagged_component_check__r__p4__root__f) = to_rep(((b).us_split_fields47).rec__tagged_component_check__r__p4__root__f)) ->
  (bool_eq26(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields47).rec__tagged_component_check__r__p4__root__f) = to_rep(((b).us_split_fields47).rec__tagged_component_check__r__p4__root__f))) ->
  (bool_eq26(a, b) = false))))

logic us_dispatch_eq8 : us_rep23, us_rep23 -> bool

logic us_tag23 : int

logic value__size23 : int

logic object__size23 : us_rep23 -> int

logic value__alignment23 : int

logic object__alignment23 : us_rep23 -> int

axiom value__size_axiom23 : (0 <= value__size23)

axiom object__size_axiom23 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__size23({ us_split_fields47 = {
  rec__tagged_component_check__r__p4__root__f = a; rec__ext__23 = a1 };
  attr__tag23 = a2 })))

axiom value__alignment_axiom23 : (0 <= value__alignment23)

axiom object__alignment_axiom23 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__alignment23({ us_split_fields47 = {
  rec__tagged_component_check__r__p4__root__f = a; rec__ext__23 = a1 };
  attr__tag23 = a2 })))

logic tagged_component_check__r__p4__root__f__first__bit : int

logic tagged_component_check__r__p4__root__f__last__bit : int

logic tagged_component_check__r__p4__root__f__position : int

axiom tagged_component_check__r__p4__root__f__first__bit_axiom :
  (0 <= tagged_component_check__r__p4__root__f__first__bit)

axiom tagged_component_check__r__p4__root__f__last__bit_axiom :
  (tagged_component_check__r__p4__root__f__first__bit <  tagged_component_check__r__p4__root__f__last__bit)

axiom tagged_component_check__r__p4__root__f__position_axiom :
  (0 <= tagged_component_check__r__p4__root__f__position)

logic user_eq25 : us_rep23, us_rep23 -> bool

logic dummy93 : natural

logic dummy94 : us_private

logic dummy95 : int

type root__ref7 = { root__content7 : us_rep23
}

function root__ref___9__projection(a: root__ref7) : us_rep23 =
  (a).root__content7

type us_main_type2

logic us_main_eq2 : us_main_type2, us_main_type2 -> bool

type us_split_fields48 = { rec__tagged_component_check__r__p4__c :
us_main_type2; rec__tagged_component_check__r__p4__root__f1 : natural;
rec__ext__24 : us_private
}

function us_split_fields_C__5__projection(a: us_split_fields48) : us_main_type2 =
  (a).rec__tagged_component_check__r__p4__c

function us_split_fields_F__21__projection(a: us_split_fields48) : natural =
  (a).rec__tagged_component_check__r__p4__root__f1

function us_split_fields___23__projection(a: us_split_fields48) : us_private =
  (a).rec__ext__24

type us_split_fields__ref24 = { us_split_fields__content24 :
us_split_fields48
}

function us_split_fields__ref___23__projection(a: us_split_fields__ref24) : us_split_fields48 =
  (a).us_split_fields__content24

type us_rep24 = { us_split_fields49 : us_split_fields48; attr__tag24 : int
}

function us_rep___45__projection(a: us_rep24) : us_split_fields48 =
  (a).us_split_fields49

function us_rep___46__projection(a: us_rep24) : int = (a).attr__tag24

logic hide_ext__15 : us_main_type2, us_private -> us_private

logic extract__c1 : us_private -> us_main_type2

axiom extract__c__conv2 :
  (forall c:us_main_type2.
  (forall rec__ext__25:us_private. (extract__c1(hide_ext__15(c,
  rec__ext__25)) = c)))

logic extract__ext__15 : us_private -> us_private

function to_base15(a: us_rep24) : us_rep23 = { us_split_fields47 = {
  rec__tagged_component_check__r__p4__root__f =
  ((a).us_split_fields49).rec__tagged_component_check__r__p4__root__f1;
  rec__ext__23 =
  hide_ext__15(((a).us_split_fields49).rec__tagged_component_check__r__p4__c,
  ((a).us_split_fields49).rec__ext__24) }; attr__tag23 = (a).attr__tag24 }

function of_base15(r: us_rep23) : us_rep24 = { us_split_fields49 = {
  rec__tagged_component_check__r__p4__c =
  extract__c1(((r).us_split_fields47).rec__ext__23);
  rec__tagged_component_check__r__p4__root__f1 =
  ((r).us_split_fields47).rec__tagged_component_check__r__p4__root__f;
  rec__ext__24 = extract__ext__15(((r).us_split_fields47).rec__ext__23) };
  attr__tag24 = (r).attr__tag23 }

logic bool_eq27 : us_rep24, us_rep24 -> bool

axiom bool_eq_def26 :
  (forall a:us_rep24. forall b:us_rep24 [bool_eq27(a, b)].
  ((((us_main_eq2(((a).us_split_fields49).rec__tagged_component_check__r__p4__c,
  ((b).us_split_fields49).rec__tagged_component_check__r__p4__c) = true) and
  (to_rep(((a).us_split_fields49).rec__tagged_component_check__r__p4__root__f1) = to_rep(((b).us_split_fields49).rec__tagged_component_check__r__p4__root__f1))) ->
  (bool_eq27(a, b) = true)) and
  ((not ((us_main_eq2(((a).us_split_fields49).rec__tagged_component_check__r__p4__c,
  ((b).us_split_fields49).rec__tagged_component_check__r__p4__c) = true) and
  (to_rep(((a).us_split_fields49).rec__tagged_component_check__r__p4__root__f1) = to_rep(((b).us_split_fields49).rec__tagged_component_check__r__p4__root__f1)))) ->
  (bool_eq27(a, b) = false))))

logic us_tag24 : int

logic value__size24 : int

logic object__size24 : us_rep24 -> int

logic value__alignment24 : int

logic object__alignment24 : us_rep24 -> int

axiom value__size_axiom24 : (0 <= value__size24)

axiom object__size_axiom24 :
  (forall a:us_main_type2. forall a1:natural. forall a2:us_private.
  forall a3:int. (0 <= object__size24({ us_split_fields49 = {
  rec__tagged_component_check__r__p4__c = a;
  rec__tagged_component_check__r__p4__root__f1 = a1; rec__ext__24 = a2 };
  attr__tag24 = a3 })))

axiom value__alignment_axiom24 : (0 <= value__alignment24)

axiom object__alignment_axiom24 :
  (forall a:us_main_type2. forall a1:natural. forall a2:us_private.
  forall a3:int. (0 <= object__alignment24({ us_split_fields49 = {
  rec__tagged_component_check__r__p4__c = a;
  rec__tagged_component_check__r__p4__root__f1 = a1; rec__ext__24 = a2 };
  attr__tag24 = a3 })))

logic tagged_component_check__r__p4__root__f__first__bit1 : int

logic tagged_component_check__r__p4__root__f__last__bit1 : int

logic tagged_component_check__r__p4__root__f__position1 : int

axiom tagged_component_check__r__p4__root__f__first__bit_axiom1 :
  (0 <= tagged_component_check__r__p4__root__f__first__bit1)

axiom tagged_component_check__r__p4__root__f__last__bit_axiom1 :
  (tagged_component_check__r__p4__root__f__first__bit1 <  tagged_component_check__r__p4__root__f__last__bit1)

axiom tagged_component_check__r__p4__root__f__position_axiom1 :
  (0 <= tagged_component_check__r__p4__root__f__position1)

logic user_eq26 : us_rep24, us_rep24 -> bool

logic dummy96 : us_main_type2

logic dummy97 : natural

logic dummy98 : us_private

logic dummy99 : int

type c__ref8 = { c__content8 : us_rep24
}

function c__ref___9__projection(a: c__ref8) : us_rep24 = (a).c__content8

type us_split_fields50 = { rec__tagged_component_check__r__p4__c1 :
us_main_type2; rec__tagged_component_check__r__d4__h : natural;
rec__tagged_component_check__r__p4__root__f2 : natural; rec__ext__25 :
us_private
}

function us_split_fields_C__7__projection(a: us_split_fields50) : us_main_type2 =
  (a).rec__tagged_component_check__r__p4__c1

function us_split_fields_H__9__projection(a: us_split_fields50) : natural =
  (a).rec__tagged_component_check__r__d4__h

function us_split_fields_F__26__projection(a: us_split_fields50) : natural =
  (a).rec__tagged_component_check__r__p4__root__f2

function us_split_fields___29__projection(a: us_split_fields50) : us_private =
  (a).rec__ext__25

type us_split_fields__ref25 = { us_split_fields__content25 :
us_split_fields50
}

function us_split_fields__ref___29__projection(a: us_split_fields__ref25) : us_split_fields50 =
  (a).us_split_fields__content25

type us_rep25 = { us_split_fields51 : us_split_fields50; attr__tag25 : int
}

function us_rep___57__projection(a: us_rep25) : us_split_fields50 =
  (a).us_split_fields51

function us_rep___58__projection(a: us_rep25) : int = (a).attr__tag25

logic hide_ext__16 : us_main_type2, natural, us_private -> us_private

axiom extract__c__conv3 :
  (forall c:us_main_type2.
  (forall h:natural.
  (forall rec__ext__26:us_private. (extract__c1(hide_ext__16(c, h,
  rec__ext__26)) = c))))

logic extract__h8 : us_private -> natural

axiom extract__h__conv8 :
  (forall c:us_main_type2.
  (forall h:natural.
  (forall rec__ext__26:us_private. (extract__h8(hide_ext__16(c, h,
  rec__ext__26)) = h))))

logic extract__ext__16 : us_private -> us_private

function to_base16(a: us_rep25) : us_rep23 = { us_split_fields47 = {
  rec__tagged_component_check__r__p4__root__f =
  ((a).us_split_fields51).rec__tagged_component_check__r__p4__root__f2;
  rec__ext__23 =
  hide_ext__16(((a).us_split_fields51).rec__tagged_component_check__r__p4__c1,
  ((a).us_split_fields51).rec__tagged_component_check__r__d4__h,
  ((a).us_split_fields51).rec__ext__25) }; attr__tag23 = (a).attr__tag25 }

function of_base16(r: us_rep23) : us_rep25 = { us_split_fields51 = {
  rec__tagged_component_check__r__p4__c1 =
  extract__c1(((r).us_split_fields47).rec__ext__23);
  rec__tagged_component_check__r__d4__h =
  extract__h8(((r).us_split_fields47).rec__ext__23);
  rec__tagged_component_check__r__p4__root__f2 =
  ((r).us_split_fields47).rec__tagged_component_check__r__p4__root__f;
  rec__ext__25 = extract__ext__16(((r).us_split_fields47).rec__ext__23) };
  attr__tag25 = (r).attr__tag23 }

logic bool_eq28 : us_rep25, us_rep25 -> bool

axiom bool_eq_def27 :
  (forall a:us_rep25. forall b:us_rep25 [bool_eq28(a, b)].
  (((((us_main_eq2(((a).us_split_fields51).rec__tagged_component_check__r__p4__c1,
  ((b).us_split_fields51).rec__tagged_component_check__r__p4__c1) = true) and
  (to_rep(((a).us_split_fields51).rec__tagged_component_check__r__d4__h) = to_rep(((b).us_split_fields51).rec__tagged_component_check__r__d4__h))) and
  (to_rep(((a).us_split_fields51).rec__tagged_component_check__r__p4__root__f2) = to_rep(((b).us_split_fields51).rec__tagged_component_check__r__p4__root__f2))) ->
  (bool_eq28(a, b) = true)) and
  ((not (((us_main_eq2(((a).us_split_fields51).rec__tagged_component_check__r__p4__c1,
  ((b).us_split_fields51).rec__tagged_component_check__r__p4__c1) = true) and
  (to_rep(((a).us_split_fields51).rec__tagged_component_check__r__d4__h) = to_rep(((b).us_split_fields51).rec__tagged_component_check__r__d4__h))) and
  (to_rep(((a).us_split_fields51).rec__tagged_component_check__r__p4__root__f2) = to_rep(((b).us_split_fields51).rec__tagged_component_check__r__p4__root__f2)))) ->
  (bool_eq28(a, b) = false))))

logic us_tag25 : int

logic value__size25 : int

logic object__size25 : us_rep25 -> int

logic value__alignment25 : int

logic object__alignment25 : us_rep25 -> int

axiom value__size_axiom25 : (0 <= value__size25)

axiom object__size_axiom25 :
  (forall a:us_main_type2. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__size25({
  us_split_fields51 = { rec__tagged_component_check__r__p4__c1 = a;
  rec__tagged_component_check__r__d4__h = a1;
  rec__tagged_component_check__r__p4__root__f2 = a2; rec__ext__25 = a3 };
  attr__tag25 = a4 })))

axiom value__alignment_axiom25 : (0 <= value__alignment25)

axiom object__alignment_axiom25 :
  (forall a:us_main_type2. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__alignment25({
  us_split_fields51 = { rec__tagged_component_check__r__p4__c1 = a;
  rec__tagged_component_check__r__d4__h = a1;
  rec__tagged_component_check__r__p4__root__f2 = a2; rec__ext__25 = a3 };
  attr__tag25 = a4 })))

logic tagged_component_check__r__d4__h__first__bit : int

logic tagged_component_check__r__d4__h__last__bit : int

logic tagged_component_check__r__d4__h__position : int

axiom tagged_component_check__r__d4__h__first__bit_axiom :
  (0 <= tagged_component_check__r__d4__h__first__bit)

axiom tagged_component_check__r__d4__h__last__bit_axiom :
  (tagged_component_check__r__d4__h__first__bit <  tagged_component_check__r__d4__h__last__bit)

axiom tagged_component_check__r__d4__h__position_axiom :
  (0 <= tagged_component_check__r__d4__h__position)

logic tagged_component_check__r__p4__root__f__first__bit2 : int

logic tagged_component_check__r__p4__root__f__last__bit2 : int

logic tagged_component_check__r__p4__root__f__position2 : int

axiom tagged_component_check__r__p4__root__f__first__bit_axiom2 :
  (0 <= tagged_component_check__r__p4__root__f__first__bit2)

axiom tagged_component_check__r__p4__root__f__last__bit_axiom2 :
  (tagged_component_check__r__p4__root__f__first__bit2 <  tagged_component_check__r__p4__root__f__last__bit2)

axiom tagged_component_check__r__p4__root__f__position_axiom2 :
  (0 <= tagged_component_check__r__p4__root__f__position2)

logic user_eq27 : us_rep25, us_rep25 -> bool

logic dummy100 : us_main_type2

logic dummy101 : natural

logic dummy102 : natural

logic dummy103 : us_private

logic dummy104 : int

type d4__ref1 = { d4__content1 : us_rep25
}

function d4__ref___2__projection(a: d4__ref1) : us_rep25 = (a).d4__content1

type us_main_type3

logic us_main_eq3 : us_main_type3, us_main_type3 -> bool

type us_split_fields52 = { rec__tagged_component_check__r__p5__c :
us_main_type3; rec__ext__26 : us_private
}

function us_split_fields_C__6__projection(a: us_split_fields52) : us_main_type3 =
  (a).rec__tagged_component_check__r__p5__c

function us_split_fields___25__projection(a: us_split_fields52) : us_private =
  (a).rec__ext__26

type us_split_fields__ref26 = { us_split_fields__content26 :
us_split_fields52
}

function us_split_fields__ref___25__projection(a: us_split_fields__ref26) : us_split_fields52 =
  (a).us_split_fields__content26

type us_rep26 = { us_split_fields53 : us_split_fields52; attr__tag26 : int
}

function us_rep___49__projection(a: us_rep26) : us_split_fields52 =
  (a).us_split_fields53

function us_rep___50__projection(a: us_rep26) : int = (a).attr__tag26

logic bool_eq29 : us_rep26, us_rep26 -> bool

axiom bool_eq_def28 :
  (forall a:us_rep26. forall b:us_rep26 [bool_eq29(a, b)].
  (((us_main_eq3(((a).us_split_fields53).rec__tagged_component_check__r__p5__c,
  ((b).us_split_fields53).rec__tagged_component_check__r__p5__c) = true) ->
  (bool_eq29(a, b) = true)) and
  ((not (us_main_eq3(((a).us_split_fields53).rec__tagged_component_check__r__p5__c,
  ((b).us_split_fields53).rec__tagged_component_check__r__p5__c) = true)) ->
  (bool_eq29(a, b) = false))))

logic us_dispatch_eq9 : us_rep26, us_rep26 -> bool

logic us_tag26 : int

logic value__size26 : int

logic object__size26 : us_rep26 -> int

logic value__alignment26 : int

logic object__alignment26 : us_rep26 -> int

axiom value__size_axiom26 : (0 <= value__size26)

axiom object__size_axiom26 :
  (forall a:us_main_type3. forall a1:us_private. forall a2:int.
  (0 <= object__size26({ us_split_fields53 = {
  rec__tagged_component_check__r__p5__c = a; rec__ext__26 = a1 };
  attr__tag26 = a2 })))

axiom value__alignment_axiom26 : (0 <= value__alignment26)

axiom object__alignment_axiom26 :
  (forall a:us_main_type3. forall a1:us_private. forall a2:int.
  (0 <= object__alignment26({ us_split_fields53 = {
  rec__tagged_component_check__r__p5__c = a; rec__ext__26 = a1 };
  attr__tag26 = a2 })))

logic user_eq28 : us_rep26, us_rep26 -> bool

logic dummy105 : us_main_type3

logic dummy106 : us_private

logic dummy107 : int

type c__ref9 = { c__content9 : us_rep26
}

function c__ref___10__projection(a: c__ref9) : us_rep26 = (a).c__content9

type us_split_fields54 = { rec__tagged_component_check__r__p5__c1 :
us_main_type3; rec__tagged_component_check__r__d5__h : natural; rec__ext__27
: us_private
}

function us_split_fields_C__8__projection(a: us_split_fields54) : us_main_type3 =
  (a).rec__tagged_component_check__r__p5__c1

function us_split_fields_H__10__projection(a: us_split_fields54) : natural =
  (a).rec__tagged_component_check__r__d5__h

function us_split_fields___30__projection(a: us_split_fields54) : us_private =
  (a).rec__ext__27

type us_split_fields__ref27 = { us_split_fields__content27 :
us_split_fields54
}

function us_split_fields__ref___30__projection(a: us_split_fields__ref27) : us_split_fields54 =
  (a).us_split_fields__content27

type us_rep27 = { us_split_fields55 : us_split_fields54; attr__tag27 : int
}

function us_rep___59__projection(a: us_rep27) : us_split_fields54 =
  (a).us_split_fields55

function us_rep___60__projection(a: us_rep27) : int = (a).attr__tag27

logic hide_ext__17 : natural, us_private -> us_private

logic extract__h9 : us_private -> natural

axiom extract__h__conv9 :
  (forall h:natural.
  (forall rec__ext__28:us_private. (extract__h9(hide_ext__17(h,
  rec__ext__28)) = h)))

logic extract__ext__17 : us_private -> us_private

function to_base17(a: us_rep27) : us_rep26 = { us_split_fields53 = {
  rec__tagged_component_check__r__p5__c =
  ((a).us_split_fields55).rec__tagged_component_check__r__p5__c1;
  rec__ext__26 =
  hide_ext__17(((a).us_split_fields55).rec__tagged_component_check__r__d5__h,
  ((a).us_split_fields55).rec__ext__27) }; attr__tag26 = (a).attr__tag27 }

function of_base17(r: us_rep26) : us_rep27 = { us_split_fields55 = {
  rec__tagged_component_check__r__p5__c1 =
  ((r).us_split_fields53).rec__tagged_component_check__r__p5__c;
  rec__tagged_component_check__r__d5__h =
  extract__h9(((r).us_split_fields53).rec__ext__26); rec__ext__27 =
  extract__ext__17(((r).us_split_fields53).rec__ext__26) }; attr__tag27 =
  (r).attr__tag26 }

logic bool_eq30 : us_rep27, us_rep27 -> bool

axiom bool_eq_def29 :
  (forall a:us_rep27. forall b:us_rep27 [bool_eq30(a, b)].
  ((((us_main_eq3(((a).us_split_fields55).rec__tagged_component_check__r__p5__c1,
  ((b).us_split_fields55).rec__tagged_component_check__r__p5__c1) = true) and
  (to_rep(((a).us_split_fields55).rec__tagged_component_check__r__d5__h) = to_rep(((b).us_split_fields55).rec__tagged_component_check__r__d5__h))) ->
  (bool_eq30(a, b) = true)) and
  ((not ((us_main_eq3(((a).us_split_fields55).rec__tagged_component_check__r__p5__c1,
  ((b).us_split_fields55).rec__tagged_component_check__r__p5__c1) = true) and
  (to_rep(((a).us_split_fields55).rec__tagged_component_check__r__d5__h) = to_rep(((b).us_split_fields55).rec__tagged_component_check__r__d5__h)))) ->
  (bool_eq30(a, b) = false))))

logic us_tag27 : int

logic value__size27 : int

logic object__size27 : us_rep27 -> int

logic value__alignment27 : int

logic object__alignment27 : us_rep27 -> int

axiom value__size_axiom27 : (0 <= value__size27)

axiom object__size_axiom27 :
  (forall a:us_main_type3. forall a1:natural. forall a2:us_private.
  forall a3:int. (0 <= object__size27({ us_split_fields55 = {
  rec__tagged_component_check__r__p5__c1 = a;
  rec__tagged_component_check__r__d5__h = a1; rec__ext__27 = a2 };
  attr__tag27 = a3 })))

axiom value__alignment_axiom27 : (0 <= value__alignment27)

axiom object__alignment_axiom27 :
  (forall a:us_main_type3. forall a1:natural. forall a2:us_private.
  forall a3:int. (0 <= object__alignment27({ us_split_fields55 = {
  rec__tagged_component_check__r__p5__c1 = a;
  rec__tagged_component_check__r__d5__h = a1; rec__ext__27 = a2 };
  attr__tag27 = a3 })))

logic tagged_component_check__r__d5__h__first__bit : int

logic tagged_component_check__r__d5__h__last__bit : int

logic tagged_component_check__r__d5__h__position : int

axiom tagged_component_check__r__d5__h__first__bit_axiom :
  (0 <= tagged_component_check__r__d5__h__first__bit)

axiom tagged_component_check__r__d5__h__last__bit_axiom :
  (tagged_component_check__r__d5__h__first__bit <  tagged_component_check__r__d5__h__last__bit)

axiom tagged_component_check__r__d5__h__position_axiom :
  (0 <= tagged_component_check__r__d5__h__position)

logic user_eq29 : us_rep27, us_rep27 -> bool

logic dummy108 : us_main_type3

logic dummy109 : natural

logic dummy110 : us_private

logic dummy111 : int

type d5__ref1 = { d5__content1 : us_rep27
}

function d5__ref___2__projection(a: d5__ref1) : us_rep27 = (a).d5__content1

logic y1__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic y2__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic y3__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic y4__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic y5__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS9 : int

type us_split_fields56 = { rec__tagged_component_check__s__p1__root__f :
natural; rec__ext__28 : us_private
}

function us_split_fields_F__27__projection(a: us_split_fields56) : natural =
  (a).rec__tagged_component_check__s__p1__root__f

function us_split_fields___31__projection(a: us_split_fields56) : us_private =
  (a).rec__ext__28

type us_split_fields__ref28 = { us_split_fields__content28 :
us_split_fields56
}

function us_split_fields__ref___31__projection(a: us_split_fields__ref28) : us_split_fields56 =
  (a).us_split_fields__content28

type us_rep28 = { us_split_fields57 : us_split_fields56; attr__tag28 : int
}

function us_rep___61__projection(a: us_rep28) : us_split_fields56 =
  (a).us_split_fields57

function us_rep___62__projection(a: us_rep28) : int = (a).attr__tag28

logic bool_eq31 : us_rep28, us_rep28 -> bool

axiom bool_eq_def30 :
  (forall a:us_rep28. forall b:us_rep28 [bool_eq31(a, b)].
  (((to_rep(((a).us_split_fields57).rec__tagged_component_check__s__p1__root__f) = to_rep(((b).us_split_fields57).rec__tagged_component_check__s__p1__root__f)) ->
  (bool_eq31(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields57).rec__tagged_component_check__s__p1__root__f) = to_rep(((b).us_split_fields57).rec__tagged_component_check__s__p1__root__f))) ->
  (bool_eq31(a, b) = false))))

logic us_dispatch_eq10 : us_rep28, us_rep28 -> bool

logic us_tag28 : int

logic value__size28 : int

logic object__size28 : us_rep28 -> int

logic value__alignment28 : int

logic object__alignment28 : us_rep28 -> int

axiom value__size_axiom28 : (0 <= value__size28)

axiom object__size_axiom28 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__size28({ us_split_fields57 = {
  rec__tagged_component_check__s__p1__root__f = a; rec__ext__28 = a1 };
  attr__tag28 = a2 })))

axiom value__alignment_axiom28 : (0 <= value__alignment28)

axiom object__alignment_axiom28 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__alignment28({ us_split_fields57 = {
  rec__tagged_component_check__s__p1__root__f = a; rec__ext__28 = a1 };
  attr__tag28 = a2 })))

logic tagged_component_check__s__p1__root__f__first__bit : int

logic tagged_component_check__s__p1__root__f__last__bit : int

logic tagged_component_check__s__p1__root__f__position : int

axiom tagged_component_check__s__p1__root__f__first__bit_axiom :
  (0 <= tagged_component_check__s__p1__root__f__first__bit)

axiom tagged_component_check__s__p1__root__f__last__bit_axiom :
  (tagged_component_check__s__p1__root__f__first__bit <  tagged_component_check__s__p1__root__f__last__bit)

axiom tagged_component_check__s__p1__root__f__position_axiom :
  (0 <= tagged_component_check__s__p1__root__f__position)

logic user_eq30 : us_rep28, us_rep28 -> bool

logic dummy112 : natural

logic dummy113 : us_private

logic dummy114 : int

type root__ref8 = { root__content8 : us_rep28
}

function root__ref___11__projection(a: root__ref8) : us_rep28 =
  (a).root__content8

type us_split_fields58 = { rec__tagged_component_check__s__p1__c__g :
natural; rec__tagged_component_check__s__p1__root__f1 : natural; rec__ext__29
: us_private
}

function us_split_fields_G__13__projection(a: us_split_fields58) : natural =
  (a).rec__tagged_component_check__s__p1__c__g

function us_split_fields_F__28__projection(a: us_split_fields58) : natural =
  (a).rec__tagged_component_check__s__p1__root__f1

function us_split_fields___32__projection(a: us_split_fields58) : us_private =
  (a).rec__ext__29

type us_split_fields__ref29 = { us_split_fields__content29 :
us_split_fields58
}

function us_split_fields__ref___32__projection(a: us_split_fields__ref29) : us_split_fields58 =
  (a).us_split_fields__content29

type us_rep29 = { us_split_fields59 : us_split_fields58; attr__tag29 : int
}

function us_rep___63__projection(a: us_rep29) : us_split_fields58 =
  (a).us_split_fields59

function us_rep___64__projection(a: us_rep29) : int = (a).attr__tag29

logic hide_ext__18 : natural, us_private -> us_private

logic extract__g6 : us_private -> natural

axiom extract__g__conv12 :
  (forall g:natural.
  (forall rec__ext__30:us_private. (extract__g6(hide_ext__18(g,
  rec__ext__30)) = g)))

logic extract__ext__18 : us_private -> us_private

function to_base18(a: us_rep29) : us_rep28 = { us_split_fields57 = {
  rec__tagged_component_check__s__p1__root__f =
  ((a).us_split_fields59).rec__tagged_component_check__s__p1__root__f1;
  rec__ext__28 =
  hide_ext__18(((a).us_split_fields59).rec__tagged_component_check__s__p1__c__g,
  ((a).us_split_fields59).rec__ext__29) }; attr__tag28 = (a).attr__tag29 }

function of_base18(r: us_rep28) : us_rep29 = { us_split_fields59 = {
  rec__tagged_component_check__s__p1__c__g =
  extract__g6(((r).us_split_fields57).rec__ext__28);
  rec__tagged_component_check__s__p1__root__f1 =
  ((r).us_split_fields57).rec__tagged_component_check__s__p1__root__f;
  rec__ext__29 = extract__ext__18(((r).us_split_fields57).rec__ext__28) };
  attr__tag29 = (r).attr__tag28 }

logic bool_eq32 : us_rep29, us_rep29 -> bool

axiom bool_eq_def31 :
  (forall a:us_rep29. forall b:us_rep29 [bool_eq32(a, b)].
  ((((to_rep(((a).us_split_fields59).rec__tagged_component_check__s__p1__c__g) = to_rep(((b).us_split_fields59).rec__tagged_component_check__s__p1__c__g)) and
  (to_rep(((a).us_split_fields59).rec__tagged_component_check__s__p1__root__f1) = to_rep(((b).us_split_fields59).rec__tagged_component_check__s__p1__root__f1))) ->
  (bool_eq32(a, b) = true)) and
  ((not ((to_rep(((a).us_split_fields59).rec__tagged_component_check__s__p1__c__g) = to_rep(((b).us_split_fields59).rec__tagged_component_check__s__p1__c__g)) and
  (to_rep(((a).us_split_fields59).rec__tagged_component_check__s__p1__root__f1) = to_rep(((b).us_split_fields59).rec__tagged_component_check__s__p1__root__f1)))) ->
  (bool_eq32(a, b) = false))))

logic us_tag29 : int

logic value__size29 : int

logic object__size29 : us_rep29 -> int

logic value__alignment29 : int

logic object__alignment29 : us_rep29 -> int

axiom value__size_axiom29 : (0 <= value__size29)

axiom object__size_axiom29 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__size29({ us_split_fields59 = {
  rec__tagged_component_check__s__p1__c__g = a;
  rec__tagged_component_check__s__p1__root__f1 = a1; rec__ext__29 = a2 };
  attr__tag29 = a3 })))

axiom value__alignment_axiom29 : (0 <= value__alignment29)

axiom object__alignment_axiom29 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__alignment29({ us_split_fields59 = {
  rec__tagged_component_check__s__p1__c__g = a;
  rec__tagged_component_check__s__p1__root__f1 = a1; rec__ext__29 = a2 };
  attr__tag29 = a3 })))

logic tagged_component_check__s__p1__c__g__first__bit : int

logic tagged_component_check__s__p1__c__g__last__bit : int

logic tagged_component_check__s__p1__c__g__position : int

axiom tagged_component_check__s__p1__c__g__first__bit_axiom :
  (0 <= tagged_component_check__s__p1__c__g__first__bit)

axiom tagged_component_check__s__p1__c__g__last__bit_axiom :
  (tagged_component_check__s__p1__c__g__first__bit <  tagged_component_check__s__p1__c__g__last__bit)

axiom tagged_component_check__s__p1__c__g__position_axiom :
  (0 <= tagged_component_check__s__p1__c__g__position)

logic tagged_component_check__s__p1__root__f__first__bit1 : int

logic tagged_component_check__s__p1__root__f__last__bit1 : int

logic tagged_component_check__s__p1__root__f__position1 : int

axiom tagged_component_check__s__p1__root__f__first__bit_axiom1 :
  (0 <= tagged_component_check__s__p1__root__f__first__bit1)

axiom tagged_component_check__s__p1__root__f__last__bit_axiom1 :
  (tagged_component_check__s__p1__root__f__first__bit1 <  tagged_component_check__s__p1__root__f__last__bit1)

axiom tagged_component_check__s__p1__root__f__position_axiom1 :
  (0 <= tagged_component_check__s__p1__root__f__position1)

logic user_eq31 : us_rep29, us_rep29 -> bool

logic dummy115 : natural

logic dummy116 : natural

logic dummy117 : us_private

logic dummy118 : int

type c__ref10 = { c__content10 : us_rep29
}

function c__ref___11__projection(a: c__ref10) : us_rep29 = (a).c__content10

type us_split_fields60 = { rec__tagged_component_check__s__d1__h : natural;
rec__tagged_component_check__s__p1__root__f2 : natural;
rec__tagged_component_check__s__p1__c__g1 : natural; rec__ext__30 :
us_private
}

function us_split_fields_H__11__projection(a: us_split_fields60) : natural =
  (a).rec__tagged_component_check__s__d1__h

function us_split_fields_F__36__projection(a: us_split_fields60) : natural =
  (a).rec__tagged_component_check__s__p1__root__f2

function us_split_fields_G__16__projection(a: us_split_fields60) : natural =
  (a).rec__tagged_component_check__s__p1__c__g1

function us_split_fields___41__projection(a: us_split_fields60) : us_private =
  (a).rec__ext__30

type us_split_fields__ref30 = { us_split_fields__content30 :
us_split_fields60
}

function us_split_fields__ref___41__projection(a: us_split_fields__ref30) : us_split_fields60 =
  (a).us_split_fields__content30

type us_rep30 = { us_split_fields61 : us_split_fields60; attr__tag30 : int
}

function us_rep___81__projection(a: us_rep30) : us_split_fields60 =
  (a).us_split_fields61

function us_rep___82__projection(a: us_rep30) : int = (a).attr__tag30

logic hide_ext__19 : natural, natural, us_private -> us_private

logic extract__h10 : us_private -> natural

axiom extract__h__conv10 :
  (forall h:natural. forall g:natural.
  (forall rec__ext__31:us_private. (extract__h10(hide_ext__19(h, g,
  rec__ext__31)) = h)))

axiom extract__g__conv13 :
  (forall h:natural. forall g:natural.
  (forall rec__ext__31:us_private. (extract__g6(hide_ext__19(h, g,
  rec__ext__31)) = g)))

logic extract__ext__19 : us_private -> us_private

function to_base19(a: us_rep30) : us_rep28 = { us_split_fields57 = {
  rec__tagged_component_check__s__p1__root__f =
  ((a).us_split_fields61).rec__tagged_component_check__s__p1__root__f2;
  rec__ext__28 =
  hide_ext__19(((a).us_split_fields61).rec__tagged_component_check__s__d1__h,
  ((a).us_split_fields61).rec__tagged_component_check__s__p1__c__g1,
  ((a).us_split_fields61).rec__ext__30) }; attr__tag28 = (a).attr__tag30 }

function of_base19(r: us_rep28) : us_rep30 = { us_split_fields61 = {
  rec__tagged_component_check__s__d1__h =
  extract__h10(((r).us_split_fields57).rec__ext__28);
  rec__tagged_component_check__s__p1__root__f2 =
  ((r).us_split_fields57).rec__tagged_component_check__s__p1__root__f;
  rec__tagged_component_check__s__p1__c__g1 =
  extract__g6(((r).us_split_fields57).rec__ext__28); rec__ext__30 =
  extract__ext__19(((r).us_split_fields57).rec__ext__28) }; attr__tag30 =
  (r).attr__tag28 }

logic bool_eq33 : us_rep30, us_rep30 -> bool

axiom bool_eq_def32 :
  (forall a:us_rep30. forall b:us_rep30 [bool_eq33(a, b)].
  (((((to_rep(((a).us_split_fields61).rec__tagged_component_check__s__d1__h) = to_rep(((b).us_split_fields61).rec__tagged_component_check__s__d1__h)) and
  (to_rep(((a).us_split_fields61).rec__tagged_component_check__s__p1__root__f2) = to_rep(((b).us_split_fields61).rec__tagged_component_check__s__p1__root__f2))) and
  (to_rep(((a).us_split_fields61).rec__tagged_component_check__s__p1__c__g1) = to_rep(((b).us_split_fields61).rec__tagged_component_check__s__p1__c__g1))) ->
  (bool_eq33(a, b) = true)) and
  ((not (((to_rep(((a).us_split_fields61).rec__tagged_component_check__s__d1__h) = to_rep(((b).us_split_fields61).rec__tagged_component_check__s__d1__h)) and
  (to_rep(((a).us_split_fields61).rec__tagged_component_check__s__p1__root__f2) = to_rep(((b).us_split_fields61).rec__tagged_component_check__s__p1__root__f2))) and
  (to_rep(((a).us_split_fields61).rec__tagged_component_check__s__p1__c__g1) = to_rep(((b).us_split_fields61).rec__tagged_component_check__s__p1__c__g1)))) ->
  (bool_eq33(a, b) = false))))

logic us_tag30 : int

logic value__size30 : int

logic object__size30 : us_rep30 -> int

logic value__alignment30 : int

logic object__alignment30 : us_rep30 -> int

axiom value__size_axiom30 : (0 <= value__size30)

axiom object__size_axiom30 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__size30({
  us_split_fields61 = { rec__tagged_component_check__s__d1__h = a;
  rec__tagged_component_check__s__p1__root__f2 = a1;
  rec__tagged_component_check__s__p1__c__g1 = a2; rec__ext__30 = a3 };
  attr__tag30 = a4 })))

axiom value__alignment_axiom30 : (0 <= value__alignment30)

axiom object__alignment_axiom30 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__alignment30({
  us_split_fields61 = { rec__tagged_component_check__s__d1__h = a;
  rec__tagged_component_check__s__p1__root__f2 = a1;
  rec__tagged_component_check__s__p1__c__g1 = a2; rec__ext__30 = a3 };
  attr__tag30 = a4 })))

logic tagged_component_check__s__d1__h__first__bit : int

logic tagged_component_check__s__d1__h__last__bit : int

logic tagged_component_check__s__d1__h__position : int

axiom tagged_component_check__s__d1__h__first__bit_axiom :
  (0 <= tagged_component_check__s__d1__h__first__bit)

axiom tagged_component_check__s__d1__h__last__bit_axiom :
  (tagged_component_check__s__d1__h__first__bit <  tagged_component_check__s__d1__h__last__bit)

axiom tagged_component_check__s__d1__h__position_axiom :
  (0 <= tagged_component_check__s__d1__h__position)

logic tagged_component_check__s__p1__root__f__first__bit2 : int

logic tagged_component_check__s__p1__root__f__last__bit2 : int

logic tagged_component_check__s__p1__root__f__position2 : int

axiom tagged_component_check__s__p1__root__f__first__bit_axiom2 :
  (0 <= tagged_component_check__s__p1__root__f__first__bit2)

axiom tagged_component_check__s__p1__root__f__last__bit_axiom2 :
  (tagged_component_check__s__p1__root__f__first__bit2 <  tagged_component_check__s__p1__root__f__last__bit2)

axiom tagged_component_check__s__p1__root__f__position_axiom2 :
  (0 <= tagged_component_check__s__p1__root__f__position2)

logic tagged_component_check__s__p1__c__g__first__bit1 : int

logic tagged_component_check__s__p1__c__g__last__bit1 : int

logic tagged_component_check__s__p1__c__g__position1 : int

axiom tagged_component_check__s__p1__c__g__first__bit_axiom1 :
  (0 <= tagged_component_check__s__p1__c__g__first__bit1)

axiom tagged_component_check__s__p1__c__g__last__bit_axiom1 :
  (tagged_component_check__s__p1__c__g__first__bit1 <  tagged_component_check__s__p1__c__g__last__bit1)

axiom tagged_component_check__s__p1__c__g__position_axiom1 :
  (0 <= tagged_component_check__s__p1__c__g__position1)

logic user_eq32 : us_rep30, us_rep30 -> bool

logic dummy119 : natural

logic dummy120 : natural

logic dummy121 : natural

logic dummy122 : us_private

logic dummy123 : int

type d1__ref2 = { d1__content2 : us_rep30
}

function d1__ref___3__projection(a: d1__ref2) : us_rep30 = (a).d1__content2

type us_split_fields62 = { rec__tagged_component_check__s__p2__root__f :
natural; rec__ext__31 : us_private
}

function us_split_fields_F__29__projection(a: us_split_fields62) : natural =
  (a).rec__tagged_component_check__s__p2__root__f

function us_split_fields___33__projection(a: us_split_fields62) : us_private =
  (a).rec__ext__31

type us_split_fields__ref31 = { us_split_fields__content31 :
us_split_fields62
}

function us_split_fields__ref___33__projection(a: us_split_fields__ref31) : us_split_fields62 =
  (a).us_split_fields__content31

type us_rep31 = { us_split_fields63 : us_split_fields62; attr__tag31 : int
}

function us_rep___65__projection(a: us_rep31) : us_split_fields62 =
  (a).us_split_fields63

function us_rep___66__projection(a: us_rep31) : int = (a).attr__tag31

logic bool_eq34 : us_rep31, us_rep31 -> bool

axiom bool_eq_def33 :
  (forall a:us_rep31. forall b:us_rep31 [bool_eq34(a, b)].
  (((to_rep(((a).us_split_fields63).rec__tagged_component_check__s__p2__root__f) = to_rep(((b).us_split_fields63).rec__tagged_component_check__s__p2__root__f)) ->
  (bool_eq34(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields63).rec__tagged_component_check__s__p2__root__f) = to_rep(((b).us_split_fields63).rec__tagged_component_check__s__p2__root__f))) ->
  (bool_eq34(a, b) = false))))

logic us_dispatch_eq11 : us_rep31, us_rep31 -> bool

logic us_tag31 : int

logic value__size31 : int

logic object__size31 : us_rep31 -> int

logic value__alignment31 : int

logic object__alignment31 : us_rep31 -> int

axiom value__size_axiom31 : (0 <= value__size31)

axiom object__size_axiom31 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__size31({ us_split_fields63 = {
  rec__tagged_component_check__s__p2__root__f = a; rec__ext__31 = a1 };
  attr__tag31 = a2 })))

axiom value__alignment_axiom31 : (0 <= value__alignment31)

axiom object__alignment_axiom31 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__alignment31({ us_split_fields63 = {
  rec__tagged_component_check__s__p2__root__f = a; rec__ext__31 = a1 };
  attr__tag31 = a2 })))

logic tagged_component_check__s__p2__root__f__first__bit : int

logic tagged_component_check__s__p2__root__f__last__bit : int

logic tagged_component_check__s__p2__root__f__position : int

axiom tagged_component_check__s__p2__root__f__first__bit_axiom :
  (0 <= tagged_component_check__s__p2__root__f__first__bit)

axiom tagged_component_check__s__p2__root__f__last__bit_axiom :
  (tagged_component_check__s__p2__root__f__first__bit <  tagged_component_check__s__p2__root__f__last__bit)

axiom tagged_component_check__s__p2__root__f__position_axiom :
  (0 <= tagged_component_check__s__p2__root__f__position)

logic user_eq33 : us_rep31, us_rep31 -> bool

logic dummy124 : natural

logic dummy125 : us_private

logic dummy126 : int

type root__ref9 = { root__content9 : us_rep31
}

function root__ref___12__projection(a: root__ref9) : us_rep31 =
  (a).root__content9

type us_split_fields64 = { rec__tagged_component_check__s__p2__c__g :
natural; rec__tagged_component_check__s__p2__root__f1 : natural; rec__ext__32
: us_private
}

function us_split_fields_G__14__projection(a: us_split_fields64) : natural =
  (a).rec__tagged_component_check__s__p2__c__g

function us_split_fields_F__30__projection(a: us_split_fields64) : natural =
  (a).rec__tagged_component_check__s__p2__root__f1

function us_split_fields___34__projection(a: us_split_fields64) : us_private =
  (a).rec__ext__32

type us_split_fields__ref32 = { us_split_fields__content32 :
us_split_fields64
}

function us_split_fields__ref___34__projection(a: us_split_fields__ref32) : us_split_fields64 =
  (a).us_split_fields__content32

type us_rep32 = { us_split_fields65 : us_split_fields64; attr__tag32 : int
}

function us_rep___67__projection(a: us_rep32) : us_split_fields64 =
  (a).us_split_fields65

function us_rep___68__projection(a: us_rep32) : int = (a).attr__tag32

logic hide_ext__20 : natural, us_private -> us_private

logic extract__g7 : us_private -> natural

axiom extract__g__conv14 :
  (forall g:natural.
  (forall rec__ext__33:us_private. (extract__g7(hide_ext__20(g,
  rec__ext__33)) = g)))

logic extract__ext__20 : us_private -> us_private

function to_base20(a: us_rep32) : us_rep31 = { us_split_fields63 = {
  rec__tagged_component_check__s__p2__root__f =
  ((a).us_split_fields65).rec__tagged_component_check__s__p2__root__f1;
  rec__ext__31 =
  hide_ext__20(((a).us_split_fields65).rec__tagged_component_check__s__p2__c__g,
  ((a).us_split_fields65).rec__ext__32) }; attr__tag31 = (a).attr__tag32 }

function of_base20(r: us_rep31) : us_rep32 = { us_split_fields65 = {
  rec__tagged_component_check__s__p2__c__g =
  extract__g7(((r).us_split_fields63).rec__ext__31);
  rec__tagged_component_check__s__p2__root__f1 =
  ((r).us_split_fields63).rec__tagged_component_check__s__p2__root__f;
  rec__ext__32 = extract__ext__20(((r).us_split_fields63).rec__ext__31) };
  attr__tag32 = (r).attr__tag31 }

logic bool_eq35 : us_rep32, us_rep32 -> bool

axiom bool_eq_def34 :
  (forall a:us_rep32. forall b:us_rep32 [bool_eq35(a, b)].
  ((((to_rep(((a).us_split_fields65).rec__tagged_component_check__s__p2__c__g) = to_rep(((b).us_split_fields65).rec__tagged_component_check__s__p2__c__g)) and
  (to_rep(((a).us_split_fields65).rec__tagged_component_check__s__p2__root__f1) = to_rep(((b).us_split_fields65).rec__tagged_component_check__s__p2__root__f1))) ->
  (bool_eq35(a, b) = true)) and
  ((not ((to_rep(((a).us_split_fields65).rec__tagged_component_check__s__p2__c__g) = to_rep(((b).us_split_fields65).rec__tagged_component_check__s__p2__c__g)) and
  (to_rep(((a).us_split_fields65).rec__tagged_component_check__s__p2__root__f1) = to_rep(((b).us_split_fields65).rec__tagged_component_check__s__p2__root__f1)))) ->
  (bool_eq35(a, b) = false))))

logic us_tag32 : int

logic value__size32 : int

logic object__size32 : us_rep32 -> int

logic value__alignment32 : int

logic object__alignment32 : us_rep32 -> int

axiom value__size_axiom32 : (0 <= value__size32)

axiom object__size_axiom32 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__size32({ us_split_fields65 = {
  rec__tagged_component_check__s__p2__c__g = a;
  rec__tagged_component_check__s__p2__root__f1 = a1; rec__ext__32 = a2 };
  attr__tag32 = a3 })))

axiom value__alignment_axiom32 : (0 <= value__alignment32)

axiom object__alignment_axiom32 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__alignment32({ us_split_fields65 = {
  rec__tagged_component_check__s__p2__c__g = a;
  rec__tagged_component_check__s__p2__root__f1 = a1; rec__ext__32 = a2 };
  attr__tag32 = a3 })))

logic tagged_component_check__s__p2__c__g__first__bit : int

logic tagged_component_check__s__p2__c__g__last__bit : int

logic tagged_component_check__s__p2__c__g__position : int

axiom tagged_component_check__s__p2__c__g__first__bit_axiom :
  (0 <= tagged_component_check__s__p2__c__g__first__bit)

axiom tagged_component_check__s__p2__c__g__last__bit_axiom :
  (tagged_component_check__s__p2__c__g__first__bit <  tagged_component_check__s__p2__c__g__last__bit)

axiom tagged_component_check__s__p2__c__g__position_axiom :
  (0 <= tagged_component_check__s__p2__c__g__position)

logic tagged_component_check__s__p2__root__f__first__bit1 : int

logic tagged_component_check__s__p2__root__f__last__bit1 : int

logic tagged_component_check__s__p2__root__f__position1 : int

axiom tagged_component_check__s__p2__root__f__first__bit_axiom1 :
  (0 <= tagged_component_check__s__p2__root__f__first__bit1)

axiom tagged_component_check__s__p2__root__f__last__bit_axiom1 :
  (tagged_component_check__s__p2__root__f__first__bit1 <  tagged_component_check__s__p2__root__f__last__bit1)

axiom tagged_component_check__s__p2__root__f__position_axiom1 :
  (0 <= tagged_component_check__s__p2__root__f__position1)

logic user_eq34 : us_rep32, us_rep32 -> bool

logic dummy127 : natural

logic dummy128 : natural

logic dummy129 : us_private

logic dummy130 : int

type c__ref11 = { c__content11 : us_rep32
}

function c__ref___12__projection(a: c__ref11) : us_rep32 = (a).c__content11

type us_split_fields66 = { rec__tagged_component_check__s__p2__c__g1 :
natural; rec__tagged_component_check__s__d2__h : natural;
rec__tagged_component_check__s__p2__root__f2 : natural; rec__ext__33 :
us_private
}

function us_split_fields_G__17__projection(a: us_split_fields66) : natural =
  (a).rec__tagged_component_check__s__p2__c__g1

function us_split_fields_H__12__projection(a: us_split_fields66) : natural =
  (a).rec__tagged_component_check__s__d2__h

function us_split_fields_F__37__projection(a: us_split_fields66) : natural =
  (a).rec__tagged_component_check__s__p2__root__f2

function us_split_fields___42__projection(a: us_split_fields66) : us_private =
  (a).rec__ext__33

type us_split_fields__ref33 = { us_split_fields__content33 :
us_split_fields66
}

function us_split_fields__ref___42__projection(a: us_split_fields__ref33) : us_split_fields66 =
  (a).us_split_fields__content33

type us_rep33 = { us_split_fields67 : us_split_fields66; attr__tag33 : int
}

function us_rep___83__projection(a: us_rep33) : us_split_fields66 =
  (a).us_split_fields67

function us_rep___84__projection(a: us_rep33) : int = (a).attr__tag33

logic hide_ext__21 : natural, natural, us_private -> us_private

axiom extract__g__conv15 :
  (forall g:natural. forall h:natural.
  (forall rec__ext__34:us_private. (extract__g7(hide_ext__21(g, h,
  rec__ext__34)) = g)))

logic extract__h11 : us_private -> natural

axiom extract__h__conv11 :
  (forall g:natural. forall h:natural.
  (forall rec__ext__34:us_private. (extract__h11(hide_ext__21(g, h,
  rec__ext__34)) = h)))

logic extract__ext__21 : us_private -> us_private

function to_base21(a: us_rep33) : us_rep31 = { us_split_fields63 = {
  rec__tagged_component_check__s__p2__root__f =
  ((a).us_split_fields67).rec__tagged_component_check__s__p2__root__f2;
  rec__ext__31 =
  hide_ext__21(((a).us_split_fields67).rec__tagged_component_check__s__p2__c__g1,
  ((a).us_split_fields67).rec__tagged_component_check__s__d2__h,
  ((a).us_split_fields67).rec__ext__33) }; attr__tag31 = (a).attr__tag33 }

function of_base21(r: us_rep31) : us_rep33 = { us_split_fields67 = {
  rec__tagged_component_check__s__p2__c__g1 =
  extract__g7(((r).us_split_fields63).rec__ext__31);
  rec__tagged_component_check__s__d2__h =
  extract__h11(((r).us_split_fields63).rec__ext__31);
  rec__tagged_component_check__s__p2__root__f2 =
  ((r).us_split_fields63).rec__tagged_component_check__s__p2__root__f;
  rec__ext__33 = extract__ext__21(((r).us_split_fields63).rec__ext__31) };
  attr__tag33 = (r).attr__tag31 }

logic bool_eq36 : us_rep33, us_rep33 -> bool

axiom bool_eq_def35 :
  (forall a:us_rep33. forall b:us_rep33 [bool_eq36(a, b)].
  (((((to_rep(((a).us_split_fields67).rec__tagged_component_check__s__p2__c__g1) = to_rep(((b).us_split_fields67).rec__tagged_component_check__s__p2__c__g1)) and
  (to_rep(((a).us_split_fields67).rec__tagged_component_check__s__d2__h) = to_rep(((b).us_split_fields67).rec__tagged_component_check__s__d2__h))) and
  (to_rep(((a).us_split_fields67).rec__tagged_component_check__s__p2__root__f2) = to_rep(((b).us_split_fields67).rec__tagged_component_check__s__p2__root__f2))) ->
  (bool_eq36(a, b) = true)) and
  ((not (((to_rep(((a).us_split_fields67).rec__tagged_component_check__s__p2__c__g1) = to_rep(((b).us_split_fields67).rec__tagged_component_check__s__p2__c__g1)) and
  (to_rep(((a).us_split_fields67).rec__tagged_component_check__s__d2__h) = to_rep(((b).us_split_fields67).rec__tagged_component_check__s__d2__h))) and
  (to_rep(((a).us_split_fields67).rec__tagged_component_check__s__p2__root__f2) = to_rep(((b).us_split_fields67).rec__tagged_component_check__s__p2__root__f2)))) ->
  (bool_eq36(a, b) = false))))

logic us_tag33 : int

logic value__size33 : int

logic object__size33 : us_rep33 -> int

logic value__alignment33 : int

logic object__alignment33 : us_rep33 -> int

axiom value__size_axiom33 : (0 <= value__size33)

axiom object__size_axiom33 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__size33({
  us_split_fields67 = { rec__tagged_component_check__s__p2__c__g1 = a;
  rec__tagged_component_check__s__d2__h = a1;
  rec__tagged_component_check__s__p2__root__f2 = a2; rec__ext__33 = a3 };
  attr__tag33 = a4 })))

axiom value__alignment_axiom33 : (0 <= value__alignment33)

axiom object__alignment_axiom33 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__alignment33({
  us_split_fields67 = { rec__tagged_component_check__s__p2__c__g1 = a;
  rec__tagged_component_check__s__d2__h = a1;
  rec__tagged_component_check__s__p2__root__f2 = a2; rec__ext__33 = a3 };
  attr__tag33 = a4 })))

logic tagged_component_check__s__p2__c__g__first__bit1 : int

logic tagged_component_check__s__p2__c__g__last__bit1 : int

logic tagged_component_check__s__p2__c__g__position1 : int

axiom tagged_component_check__s__p2__c__g__first__bit_axiom1 :
  (0 <= tagged_component_check__s__p2__c__g__first__bit1)

axiom tagged_component_check__s__p2__c__g__last__bit_axiom1 :
  (tagged_component_check__s__p2__c__g__first__bit1 <  tagged_component_check__s__p2__c__g__last__bit1)

axiom tagged_component_check__s__p2__c__g__position_axiom1 :
  (0 <= tagged_component_check__s__p2__c__g__position1)

logic tagged_component_check__s__d2__h__first__bit : int

logic tagged_component_check__s__d2__h__last__bit : int

logic tagged_component_check__s__d2__h__position : int

axiom tagged_component_check__s__d2__h__first__bit_axiom :
  (0 <= tagged_component_check__s__d2__h__first__bit)

axiom tagged_component_check__s__d2__h__last__bit_axiom :
  (tagged_component_check__s__d2__h__first__bit <  tagged_component_check__s__d2__h__last__bit)

axiom tagged_component_check__s__d2__h__position_axiom :
  (0 <= tagged_component_check__s__d2__h__position)

logic tagged_component_check__s__p2__root__f__first__bit2 : int

logic tagged_component_check__s__p2__root__f__last__bit2 : int

logic tagged_component_check__s__p2__root__f__position2 : int

axiom tagged_component_check__s__p2__root__f__first__bit_axiom2 :
  (0 <= tagged_component_check__s__p2__root__f__first__bit2)

axiom tagged_component_check__s__p2__root__f__last__bit_axiom2 :
  (tagged_component_check__s__p2__root__f__first__bit2 <  tagged_component_check__s__p2__root__f__last__bit2)

axiom tagged_component_check__s__p2__root__f__position_axiom2 :
  (0 <= tagged_component_check__s__p2__root__f__position2)

logic user_eq35 : us_rep33, us_rep33 -> bool

logic dummy131 : natural

logic dummy132 : natural

logic dummy133 : natural

logic dummy134 : us_private

logic dummy135 : int

type d2__ref2 = { d2__content2 : us_rep33
}

function d2__ref___3__projection(a: d2__ref2) : us_rep33 = (a).d2__content2

type us_split_fields68 = { rec__tagged_component_check__s__p3__root__f :
natural; rec__ext__34 : us_private
}

function us_split_fields_F__31__projection(a: us_split_fields68) : natural =
  (a).rec__tagged_component_check__s__p3__root__f

function us_split_fields___35__projection(a: us_split_fields68) : us_private =
  (a).rec__ext__34

type us_split_fields__ref34 = { us_split_fields__content34 :
us_split_fields68
}

function us_split_fields__ref___35__projection(a: us_split_fields__ref34) : us_split_fields68 =
  (a).us_split_fields__content34

type us_rep34 = { us_split_fields69 : us_split_fields68; attr__tag34 : int
}

function us_rep___69__projection(a: us_rep34) : us_split_fields68 =
  (a).us_split_fields69

function us_rep___70__projection(a: us_rep34) : int = (a).attr__tag34

logic bool_eq37 : us_rep34, us_rep34 -> bool

axiom bool_eq_def36 :
  (forall a:us_rep34. forall b:us_rep34 [bool_eq37(a, b)].
  (((to_rep(((a).us_split_fields69).rec__tagged_component_check__s__p3__root__f) = to_rep(((b).us_split_fields69).rec__tagged_component_check__s__p3__root__f)) ->
  (bool_eq37(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields69).rec__tagged_component_check__s__p3__root__f) = to_rep(((b).us_split_fields69).rec__tagged_component_check__s__p3__root__f))) ->
  (bool_eq37(a, b) = false))))

logic us_dispatch_eq12 : us_rep34, us_rep34 -> bool

logic us_tag34 : int

logic value__size34 : int

logic object__size34 : us_rep34 -> int

logic value__alignment34 : int

logic object__alignment34 : us_rep34 -> int

axiom value__size_axiom34 : (0 <= value__size34)

axiom object__size_axiom34 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__size34({ us_split_fields69 = {
  rec__tagged_component_check__s__p3__root__f = a; rec__ext__34 = a1 };
  attr__tag34 = a2 })))

axiom value__alignment_axiom34 : (0 <= value__alignment34)

axiom object__alignment_axiom34 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__alignment34({ us_split_fields69 = {
  rec__tagged_component_check__s__p3__root__f = a; rec__ext__34 = a1 };
  attr__tag34 = a2 })))

logic tagged_component_check__s__p3__root__f__first__bit : int

logic tagged_component_check__s__p3__root__f__last__bit : int

logic tagged_component_check__s__p3__root__f__position : int

axiom tagged_component_check__s__p3__root__f__first__bit_axiom :
  (0 <= tagged_component_check__s__p3__root__f__first__bit)

axiom tagged_component_check__s__p3__root__f__last__bit_axiom :
  (tagged_component_check__s__p3__root__f__first__bit <  tagged_component_check__s__p3__root__f__last__bit)

axiom tagged_component_check__s__p3__root__f__position_axiom :
  (0 <= tagged_component_check__s__p3__root__f__position)

logic user_eq36 : us_rep34, us_rep34 -> bool

logic dummy136 : natural

logic dummy137 : us_private

logic dummy138 : int

type root__ref10 = { root__content10 : us_rep34
}

function root__ref___13__projection(a: root__ref10) : us_rep34 =
  (a).root__content10

type us_split_fields70 = { rec__tagged_component_check__s__p3__c__g :
natural; rec__tagged_component_check__s__p3__root__f1 : natural; rec__ext__35
: us_private
}

function us_split_fields_G__15__projection(a: us_split_fields70) : natural =
  (a).rec__tagged_component_check__s__p3__c__g

function us_split_fields_F__32__projection(a: us_split_fields70) : natural =
  (a).rec__tagged_component_check__s__p3__root__f1

function us_split_fields___36__projection(a: us_split_fields70) : us_private =
  (a).rec__ext__35

type us_split_fields__ref35 = { us_split_fields__content35 :
us_split_fields70
}

function us_split_fields__ref___36__projection(a: us_split_fields__ref35) : us_split_fields70 =
  (a).us_split_fields__content35

type us_rep35 = { us_split_fields71 : us_split_fields70; attr__tag35 : int
}

function us_rep___71__projection(a: us_rep35) : us_split_fields70 =
  (a).us_split_fields71

function us_rep___72__projection(a: us_rep35) : int = (a).attr__tag35

logic hide_ext__22 : natural, us_private -> us_private

logic extract__g8 : us_private -> natural

axiom extract__g__conv16 :
  (forall g:natural.
  (forall rec__ext__36:us_private. (extract__g8(hide_ext__22(g,
  rec__ext__36)) = g)))

logic extract__ext__22 : us_private -> us_private

function to_base22(a: us_rep35) : us_rep34 = { us_split_fields69 = {
  rec__tagged_component_check__s__p3__root__f =
  ((a).us_split_fields71).rec__tagged_component_check__s__p3__root__f1;
  rec__ext__34 =
  hide_ext__22(((a).us_split_fields71).rec__tagged_component_check__s__p3__c__g,
  ((a).us_split_fields71).rec__ext__35) }; attr__tag34 = (a).attr__tag35 }

function of_base22(r: us_rep34) : us_rep35 = { us_split_fields71 = {
  rec__tagged_component_check__s__p3__c__g =
  extract__g8(((r).us_split_fields69).rec__ext__34);
  rec__tagged_component_check__s__p3__root__f1 =
  ((r).us_split_fields69).rec__tagged_component_check__s__p3__root__f;
  rec__ext__35 = extract__ext__22(((r).us_split_fields69).rec__ext__34) };
  attr__tag35 = (r).attr__tag34 }

logic bool_eq38 : us_rep35, us_rep35 -> bool

axiom bool_eq_def37 :
  (forall a:us_rep35. forall b:us_rep35 [bool_eq38(a, b)].
  ((((to_rep(((a).us_split_fields71).rec__tagged_component_check__s__p3__c__g) = to_rep(((b).us_split_fields71).rec__tagged_component_check__s__p3__c__g)) and
  (to_rep(((a).us_split_fields71).rec__tagged_component_check__s__p3__root__f1) = to_rep(((b).us_split_fields71).rec__tagged_component_check__s__p3__root__f1))) ->
  (bool_eq38(a, b) = true)) and
  ((not ((to_rep(((a).us_split_fields71).rec__tagged_component_check__s__p3__c__g) = to_rep(((b).us_split_fields71).rec__tagged_component_check__s__p3__c__g)) and
  (to_rep(((a).us_split_fields71).rec__tagged_component_check__s__p3__root__f1) = to_rep(((b).us_split_fields71).rec__tagged_component_check__s__p3__root__f1)))) ->
  (bool_eq38(a, b) = false))))

logic us_tag35 : int

logic value__size35 : int

logic object__size35 : us_rep35 -> int

logic value__alignment35 : int

logic object__alignment35 : us_rep35 -> int

axiom value__size_axiom35 : (0 <= value__size35)

axiom object__size_axiom35 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__size35({ us_split_fields71 = {
  rec__tagged_component_check__s__p3__c__g = a;
  rec__tagged_component_check__s__p3__root__f1 = a1; rec__ext__35 = a2 };
  attr__tag35 = a3 })))

axiom value__alignment_axiom35 : (0 <= value__alignment35)

axiom object__alignment_axiom35 :
  (forall a:natural. forall a1:natural. forall a2:us_private. forall a3:int.
  (0 <= object__alignment35({ us_split_fields71 = {
  rec__tagged_component_check__s__p3__c__g = a;
  rec__tagged_component_check__s__p3__root__f1 = a1; rec__ext__35 = a2 };
  attr__tag35 = a3 })))

logic tagged_component_check__s__p3__c__g__first__bit : int

logic tagged_component_check__s__p3__c__g__last__bit : int

logic tagged_component_check__s__p3__c__g__position : int

axiom tagged_component_check__s__p3__c__g__first__bit_axiom :
  (0 <= tagged_component_check__s__p3__c__g__first__bit)

axiom tagged_component_check__s__p3__c__g__last__bit_axiom :
  (tagged_component_check__s__p3__c__g__first__bit <  tagged_component_check__s__p3__c__g__last__bit)

axiom tagged_component_check__s__p3__c__g__position_axiom :
  (0 <= tagged_component_check__s__p3__c__g__position)

logic tagged_component_check__s__p3__root__f__first__bit1 : int

logic tagged_component_check__s__p3__root__f__last__bit1 : int

logic tagged_component_check__s__p3__root__f__position1 : int

axiom tagged_component_check__s__p3__root__f__first__bit_axiom1 :
  (0 <= tagged_component_check__s__p3__root__f__first__bit1)

axiom tagged_component_check__s__p3__root__f__last__bit_axiom1 :
  (tagged_component_check__s__p3__root__f__first__bit1 <  tagged_component_check__s__p3__root__f__last__bit1)

axiom tagged_component_check__s__p3__root__f__position_axiom1 :
  (0 <= tagged_component_check__s__p3__root__f__position1)

logic user_eq37 : us_rep35, us_rep35 -> bool

logic dummy139 : natural

logic dummy140 : natural

logic dummy141 : us_private

logic dummy142 : int

type c__ref12 = { c__content12 : us_rep35
}

function c__ref___13__projection(a: c__ref12) : us_rep35 = (a).c__content12

type us_split_fields72 = { rec__tagged_component_check__s__p3__c__g1 :
natural; rec__tagged_component_check__s__d3__h : natural;
rec__tagged_component_check__s__p3__root__f2 : natural; rec__ext__36 :
us_private
}

function us_split_fields_G__18__projection(a: us_split_fields72) : natural =
  (a).rec__tagged_component_check__s__p3__c__g1

function us_split_fields_H__13__projection(a: us_split_fields72) : natural =
  (a).rec__tagged_component_check__s__d3__h

function us_split_fields_F__38__projection(a: us_split_fields72) : natural =
  (a).rec__tagged_component_check__s__p3__root__f2

function us_split_fields___43__projection(a: us_split_fields72) : us_private =
  (a).rec__ext__36

type us_split_fields__ref36 = { us_split_fields__content36 :
us_split_fields72
}

function us_split_fields__ref___43__projection(a: us_split_fields__ref36) : us_split_fields72 =
  (a).us_split_fields__content36

type us_rep36 = { us_split_fields73 : us_split_fields72; attr__tag36 : int
}

function us_rep___85__projection(a: us_rep36) : us_split_fields72 =
  (a).us_split_fields73

function us_rep___86__projection(a: us_rep36) : int = (a).attr__tag36

logic hide_ext__23 : natural, natural, us_private -> us_private

axiom extract__g__conv17 :
  (forall g:natural. forall h:natural.
  (forall rec__ext__37:us_private. (extract__g8(hide_ext__23(g, h,
  rec__ext__37)) = g)))

logic extract__h12 : us_private -> natural

axiom extract__h__conv12 :
  (forall g:natural. forall h:natural.
  (forall rec__ext__37:us_private. (extract__h12(hide_ext__23(g, h,
  rec__ext__37)) = h)))

logic extract__ext__23 : us_private -> us_private

function to_base23(a: us_rep36) : us_rep34 = { us_split_fields69 = {
  rec__tagged_component_check__s__p3__root__f =
  ((a).us_split_fields73).rec__tagged_component_check__s__p3__root__f2;
  rec__ext__34 =
  hide_ext__23(((a).us_split_fields73).rec__tagged_component_check__s__p3__c__g1,
  ((a).us_split_fields73).rec__tagged_component_check__s__d3__h,
  ((a).us_split_fields73).rec__ext__36) }; attr__tag34 = (a).attr__tag36 }

function of_base23(r: us_rep34) : us_rep36 = { us_split_fields73 = {
  rec__tagged_component_check__s__p3__c__g1 =
  extract__g8(((r).us_split_fields69).rec__ext__34);
  rec__tagged_component_check__s__d3__h =
  extract__h12(((r).us_split_fields69).rec__ext__34);
  rec__tagged_component_check__s__p3__root__f2 =
  ((r).us_split_fields69).rec__tagged_component_check__s__p3__root__f;
  rec__ext__36 = extract__ext__23(((r).us_split_fields69).rec__ext__34) };
  attr__tag36 = (r).attr__tag34 }

logic bool_eq39 : us_rep36, us_rep36 -> bool

axiom bool_eq_def38 :
  (forall a:us_rep36. forall b:us_rep36 [bool_eq39(a, b)].
  (((((to_rep(((a).us_split_fields73).rec__tagged_component_check__s__p3__c__g1) = to_rep(((b).us_split_fields73).rec__tagged_component_check__s__p3__c__g1)) and
  (to_rep(((a).us_split_fields73).rec__tagged_component_check__s__d3__h) = to_rep(((b).us_split_fields73).rec__tagged_component_check__s__d3__h))) and
  (to_rep(((a).us_split_fields73).rec__tagged_component_check__s__p3__root__f2) = to_rep(((b).us_split_fields73).rec__tagged_component_check__s__p3__root__f2))) ->
  (bool_eq39(a, b) = true)) and
  ((not (((to_rep(((a).us_split_fields73).rec__tagged_component_check__s__p3__c__g1) = to_rep(((b).us_split_fields73).rec__tagged_component_check__s__p3__c__g1)) and
  (to_rep(((a).us_split_fields73).rec__tagged_component_check__s__d3__h) = to_rep(((b).us_split_fields73).rec__tagged_component_check__s__d3__h))) and
  (to_rep(((a).us_split_fields73).rec__tagged_component_check__s__p3__root__f2) = to_rep(((b).us_split_fields73).rec__tagged_component_check__s__p3__root__f2)))) ->
  (bool_eq39(a, b) = false))))

logic us_tag36 : int

logic value__size36 : int

logic object__size36 : us_rep36 -> int

logic value__alignment36 : int

logic object__alignment36 : us_rep36 -> int

axiom value__size_axiom36 : (0 <= value__size36)

axiom object__size_axiom36 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__size36({
  us_split_fields73 = { rec__tagged_component_check__s__p3__c__g1 = a;
  rec__tagged_component_check__s__d3__h = a1;
  rec__tagged_component_check__s__p3__root__f2 = a2; rec__ext__36 = a3 };
  attr__tag36 = a4 })))

axiom value__alignment_axiom36 : (0 <= value__alignment36)

axiom object__alignment_axiom36 :
  (forall a:natural. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__alignment36({
  us_split_fields73 = { rec__tagged_component_check__s__p3__c__g1 = a;
  rec__tagged_component_check__s__d3__h = a1;
  rec__tagged_component_check__s__p3__root__f2 = a2; rec__ext__36 = a3 };
  attr__tag36 = a4 })))

logic tagged_component_check__s__p3__c__g__first__bit1 : int

logic tagged_component_check__s__p3__c__g__last__bit1 : int

logic tagged_component_check__s__p3__c__g__position1 : int

axiom tagged_component_check__s__p3__c__g__first__bit_axiom1 :
  (0 <= tagged_component_check__s__p3__c__g__first__bit1)

axiom tagged_component_check__s__p3__c__g__last__bit_axiom1 :
  (tagged_component_check__s__p3__c__g__first__bit1 <  tagged_component_check__s__p3__c__g__last__bit1)

axiom tagged_component_check__s__p3__c__g__position_axiom1 :
  (0 <= tagged_component_check__s__p3__c__g__position1)

logic tagged_component_check__s__d3__h__first__bit : int

logic tagged_component_check__s__d3__h__last__bit : int

logic tagged_component_check__s__d3__h__position : int

axiom tagged_component_check__s__d3__h__first__bit_axiom :
  (0 <= tagged_component_check__s__d3__h__first__bit)

axiom tagged_component_check__s__d3__h__last__bit_axiom :
  (tagged_component_check__s__d3__h__first__bit <  tagged_component_check__s__d3__h__last__bit)

axiom tagged_component_check__s__d3__h__position_axiom :
  (0 <= tagged_component_check__s__d3__h__position)

logic tagged_component_check__s__p3__root__f__first__bit2 : int

logic tagged_component_check__s__p3__root__f__last__bit2 : int

logic tagged_component_check__s__p3__root__f__position2 : int

axiom tagged_component_check__s__p3__root__f__first__bit_axiom2 :
  (0 <= tagged_component_check__s__p3__root__f__first__bit2)

axiom tagged_component_check__s__p3__root__f__last__bit_axiom2 :
  (tagged_component_check__s__p3__root__f__first__bit2 <  tagged_component_check__s__p3__root__f__last__bit2)

axiom tagged_component_check__s__p3__root__f__position_axiom2 :
  (0 <= tagged_component_check__s__p3__root__f__position2)

logic user_eq38 : us_rep36, us_rep36 -> bool

logic dummy143 : natural

logic dummy144 : natural

logic dummy145 : natural

logic dummy146 : us_private

logic dummy147 : int

type d3__ref2 = { d3__content2 : us_rep36
}

function d3__ref___3__projection(a: d3__ref2) : us_rep36 = (a).d3__content2

type us_split_fields74 = { rec__tagged_component_check__s__p4__root__f :
natural; rec__ext__37 : us_private
}

function us_split_fields_F__33__projection(a: us_split_fields74) : natural =
  (a).rec__tagged_component_check__s__p4__root__f

function us_split_fields___37__projection(a: us_split_fields74) : us_private =
  (a).rec__ext__37

type us_split_fields__ref37 = { us_split_fields__content37 :
us_split_fields74
}

function us_split_fields__ref___37__projection(a: us_split_fields__ref37) : us_split_fields74 =
  (a).us_split_fields__content37

type us_rep37 = { us_split_fields75 : us_split_fields74; attr__tag37 : int
}

function us_rep___73__projection(a: us_rep37) : us_split_fields74 =
  (a).us_split_fields75

function us_rep___74__projection(a: us_rep37) : int = (a).attr__tag37

logic bool_eq40 : us_rep37, us_rep37 -> bool

axiom bool_eq_def39 :
  (forall a:us_rep37. forall b:us_rep37 [bool_eq40(a, b)].
  (((to_rep(((a).us_split_fields75).rec__tagged_component_check__s__p4__root__f) = to_rep(((b).us_split_fields75).rec__tagged_component_check__s__p4__root__f)) ->
  (bool_eq40(a, b) = true)) and
  ((not (to_rep(((a).us_split_fields75).rec__tagged_component_check__s__p4__root__f) = to_rep(((b).us_split_fields75).rec__tagged_component_check__s__p4__root__f))) ->
  (bool_eq40(a, b) = false))))

logic us_dispatch_eq13 : us_rep37, us_rep37 -> bool

logic us_tag37 : int

logic value__size37 : int

logic object__size37 : us_rep37 -> int

logic value__alignment37 : int

logic object__alignment37 : us_rep37 -> int

axiom value__size_axiom37 : (0 <= value__size37)

axiom object__size_axiom37 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__size37({ us_split_fields75 = {
  rec__tagged_component_check__s__p4__root__f = a; rec__ext__37 = a1 };
  attr__tag37 = a2 })))

axiom value__alignment_axiom37 : (0 <= value__alignment37)

axiom object__alignment_axiom37 :
  (forall a:natural. forall a1:us_private. forall a2:int.
  (0 <= object__alignment37({ us_split_fields75 = {
  rec__tagged_component_check__s__p4__root__f = a; rec__ext__37 = a1 };
  attr__tag37 = a2 })))

logic tagged_component_check__s__p4__root__f__first__bit : int

logic tagged_component_check__s__p4__root__f__last__bit : int

logic tagged_component_check__s__p4__root__f__position : int

axiom tagged_component_check__s__p4__root__f__first__bit_axiom :
  (0 <= tagged_component_check__s__p4__root__f__first__bit)

axiom tagged_component_check__s__p4__root__f__last__bit_axiom :
  (tagged_component_check__s__p4__root__f__first__bit <  tagged_component_check__s__p4__root__f__last__bit)

axiom tagged_component_check__s__p4__root__f__position_axiom :
  (0 <= tagged_component_check__s__p4__root__f__position)

logic user_eq39 : us_rep37, us_rep37 -> bool

logic dummy148 : natural

logic dummy149 : us_private

logic dummy150 : int

type root__ref11 = { root__content11 : us_rep37
}

function root__ref___14__projection(a: root__ref11) : us_rep37 =
  (a).root__content11

type us_main_type4

logic us_main_eq4 : us_main_type4, us_main_type4 -> bool

type us_split_fields76 = { rec__tagged_component_check__s__p4__c :
us_main_type4; rec__tagged_component_check__s__p4__root__f1 : natural;
rec__ext__38 : us_private
}

function us_split_fields_C__9__projection(a: us_split_fields76) : us_main_type4 =
  (a).rec__tagged_component_check__s__p4__c

function us_split_fields_F__34__projection(a: us_split_fields76) : natural =
  (a).rec__tagged_component_check__s__p4__root__f1

function us_split_fields___38__projection(a: us_split_fields76) : us_private =
  (a).rec__ext__38

type us_split_fields__ref38 = { us_split_fields__content38 :
us_split_fields76
}

function us_split_fields__ref___38__projection(a: us_split_fields__ref38) : us_split_fields76 =
  (a).us_split_fields__content38

type us_rep38 = { us_split_fields77 : us_split_fields76; attr__tag38 : int
}

function us_rep___75__projection(a: us_rep38) : us_split_fields76 =
  (a).us_split_fields77

function us_rep___76__projection(a: us_rep38) : int = (a).attr__tag38

logic hide_ext__24 : us_main_type4, us_private -> us_private

logic extract__c2 : us_private -> us_main_type4

axiom extract__c__conv4 :
  (forall c:us_main_type4.
  (forall rec__ext__39:us_private. (extract__c2(hide_ext__24(c,
  rec__ext__39)) = c)))

logic extract__ext__24 : us_private -> us_private

function to_base24(a: us_rep38) : us_rep37 = { us_split_fields75 = {
  rec__tagged_component_check__s__p4__root__f =
  ((a).us_split_fields77).rec__tagged_component_check__s__p4__root__f1;
  rec__ext__37 =
  hide_ext__24(((a).us_split_fields77).rec__tagged_component_check__s__p4__c,
  ((a).us_split_fields77).rec__ext__38) }; attr__tag37 = (a).attr__tag38 }

function of_base24(r: us_rep37) : us_rep38 = { us_split_fields77 = {
  rec__tagged_component_check__s__p4__c =
  extract__c2(((r).us_split_fields75).rec__ext__37);
  rec__tagged_component_check__s__p4__root__f1 =
  ((r).us_split_fields75).rec__tagged_component_check__s__p4__root__f;
  rec__ext__38 = extract__ext__24(((r).us_split_fields75).rec__ext__37) };
  attr__tag38 = (r).attr__tag37 }

logic bool_eq41 : us_rep38, us_rep38 -> bool

axiom bool_eq_def40 :
  (forall a:us_rep38. forall b:us_rep38 [bool_eq41(a, b)].
  ((((us_main_eq4(((a).us_split_fields77).rec__tagged_component_check__s__p4__c,
  ((b).us_split_fields77).rec__tagged_component_check__s__p4__c) = true) and
  (to_rep(((a).us_split_fields77).rec__tagged_component_check__s__p4__root__f1) = to_rep(((b).us_split_fields77).rec__tagged_component_check__s__p4__root__f1))) ->
  (bool_eq41(a, b) = true)) and
  ((not ((us_main_eq4(((a).us_split_fields77).rec__tagged_component_check__s__p4__c,
  ((b).us_split_fields77).rec__tagged_component_check__s__p4__c) = true) and
  (to_rep(((a).us_split_fields77).rec__tagged_component_check__s__p4__root__f1) = to_rep(((b).us_split_fields77).rec__tagged_component_check__s__p4__root__f1)))) ->
  (bool_eq41(a, b) = false))))

logic us_tag38 : int

logic value__size38 : int

logic object__size38 : us_rep38 -> int

logic value__alignment38 : int

logic object__alignment38 : us_rep38 -> int

axiom value__size_axiom38 : (0 <= value__size38)

axiom object__size_axiom38 :
  (forall a:us_main_type4. forall a1:natural. forall a2:us_private.
  forall a3:int. (0 <= object__size38({ us_split_fields77 = {
  rec__tagged_component_check__s__p4__c = a;
  rec__tagged_component_check__s__p4__root__f1 = a1; rec__ext__38 = a2 };
  attr__tag38 = a3 })))

axiom value__alignment_axiom38 : (0 <= value__alignment38)

axiom object__alignment_axiom38 :
  (forall a:us_main_type4. forall a1:natural. forall a2:us_private.
  forall a3:int. (0 <= object__alignment38({ us_split_fields77 = {
  rec__tagged_component_check__s__p4__c = a;
  rec__tagged_component_check__s__p4__root__f1 = a1; rec__ext__38 = a2 };
  attr__tag38 = a3 })))

logic tagged_component_check__s__p4__root__f__first__bit1 : int

logic tagged_component_check__s__p4__root__f__last__bit1 : int

logic tagged_component_check__s__p4__root__f__position1 : int

axiom tagged_component_check__s__p4__root__f__first__bit_axiom1 :
  (0 <= tagged_component_check__s__p4__root__f__first__bit1)

axiom tagged_component_check__s__p4__root__f__last__bit_axiom1 :
  (tagged_component_check__s__p4__root__f__first__bit1 <  tagged_component_check__s__p4__root__f__last__bit1)

axiom tagged_component_check__s__p4__root__f__position_axiom1 :
  (0 <= tagged_component_check__s__p4__root__f__position1)

logic user_eq40 : us_rep38, us_rep38 -> bool

logic dummy151 : us_main_type4

logic dummy152 : natural

logic dummy153 : us_private

logic dummy154 : int

type c__ref13 = { c__content13 : us_rep38
}

function c__ref___14__projection(a: c__ref13) : us_rep38 = (a).c__content13

type us_split_fields78 = { rec__tagged_component_check__s__p4__c1 :
us_main_type4; rec__tagged_component_check__s__d4__h : natural;
rec__tagged_component_check__s__p4__root__f2 : natural; rec__ext__39 :
us_private
}

function us_split_fields_C__11__projection(a: us_split_fields78) : us_main_type4 =
  (a).rec__tagged_component_check__s__p4__c1

function us_split_fields_H__14__projection(a: us_split_fields78) : natural =
  (a).rec__tagged_component_check__s__d4__h

function us_split_fields_F__39__projection(a: us_split_fields78) : natural =
  (a).rec__tagged_component_check__s__p4__root__f2

function us_split_fields___44__projection(a: us_split_fields78) : us_private =
  (a).rec__ext__39

type us_split_fields__ref39 = { us_split_fields__content39 :
us_split_fields78
}

function us_split_fields__ref___44__projection(a: us_split_fields__ref39) : us_split_fields78 =
  (a).us_split_fields__content39

type us_rep39 = { us_split_fields79 : us_split_fields78; attr__tag39 : int
}

function us_rep___87__projection(a: us_rep39) : us_split_fields78 =
  (a).us_split_fields79

function us_rep___88__projection(a: us_rep39) : int = (a).attr__tag39

logic hide_ext__25 : us_main_type4, natural, us_private -> us_private

axiom extract__c__conv5 :
  (forall c:us_main_type4.
  (forall h:natural.
  (forall rec__ext__40:us_private. (extract__c2(hide_ext__25(c, h,
  rec__ext__40)) = c))))

logic extract__h13 : us_private -> natural

axiom extract__h__conv13 :
  (forall c:us_main_type4.
  (forall h:natural.
  (forall rec__ext__40:us_private. (extract__h13(hide_ext__25(c, h,
  rec__ext__40)) = h))))

logic extract__ext__25 : us_private -> us_private

function to_base25(a: us_rep39) : us_rep37 = { us_split_fields75 = {
  rec__tagged_component_check__s__p4__root__f =
  ((a).us_split_fields79).rec__tagged_component_check__s__p4__root__f2;
  rec__ext__37 =
  hide_ext__25(((a).us_split_fields79).rec__tagged_component_check__s__p4__c1,
  ((a).us_split_fields79).rec__tagged_component_check__s__d4__h,
  ((a).us_split_fields79).rec__ext__39) }; attr__tag37 = (a).attr__tag39 }

function of_base25(r: us_rep37) : us_rep39 = { us_split_fields79 = {
  rec__tagged_component_check__s__p4__c1 =
  extract__c2(((r).us_split_fields75).rec__ext__37);
  rec__tagged_component_check__s__d4__h =
  extract__h13(((r).us_split_fields75).rec__ext__37);
  rec__tagged_component_check__s__p4__root__f2 =
  ((r).us_split_fields75).rec__tagged_component_check__s__p4__root__f;
  rec__ext__39 = extract__ext__25(((r).us_split_fields75).rec__ext__37) };
  attr__tag39 = (r).attr__tag37 }

logic bool_eq42 : us_rep39, us_rep39 -> bool

axiom bool_eq_def41 :
  (forall a:us_rep39. forall b:us_rep39 [bool_eq42(a, b)].
  (((((us_main_eq4(((a).us_split_fields79).rec__tagged_component_check__s__p4__c1,
  ((b).us_split_fields79).rec__tagged_component_check__s__p4__c1) = true) and
  (to_rep(((a).us_split_fields79).rec__tagged_component_check__s__d4__h) = to_rep(((b).us_split_fields79).rec__tagged_component_check__s__d4__h))) and
  (to_rep(((a).us_split_fields79).rec__tagged_component_check__s__p4__root__f2) = to_rep(((b).us_split_fields79).rec__tagged_component_check__s__p4__root__f2))) ->
  (bool_eq42(a, b) = true)) and
  ((not (((us_main_eq4(((a).us_split_fields79).rec__tagged_component_check__s__p4__c1,
  ((b).us_split_fields79).rec__tagged_component_check__s__p4__c1) = true) and
  (to_rep(((a).us_split_fields79).rec__tagged_component_check__s__d4__h) = to_rep(((b).us_split_fields79).rec__tagged_component_check__s__d4__h))) and
  (to_rep(((a).us_split_fields79).rec__tagged_component_check__s__p4__root__f2) = to_rep(((b).us_split_fields79).rec__tagged_component_check__s__p4__root__f2)))) ->
  (bool_eq42(a, b) = false))))

logic us_tag39 : int

logic value__size39 : int

logic object__size39 : us_rep39 -> int

logic value__alignment39 : int

logic object__alignment39 : us_rep39 -> int

axiom value__size_axiom39 : (0 <= value__size39)

axiom object__size_axiom39 :
  (forall a:us_main_type4. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__size39({
  us_split_fields79 = { rec__tagged_component_check__s__p4__c1 = a;
  rec__tagged_component_check__s__d4__h = a1;
  rec__tagged_component_check__s__p4__root__f2 = a2; rec__ext__39 = a3 };
  attr__tag39 = a4 })))

axiom value__alignment_axiom39 : (0 <= value__alignment39)

axiom object__alignment_axiom39 :
  (forall a:us_main_type4. forall a1:natural. forall a2:natural.
  forall a3:us_private. forall a4:int. (0 <= object__alignment39({
  us_split_fields79 = { rec__tagged_component_check__s__p4__c1 = a;
  rec__tagged_component_check__s__d4__h = a1;
  rec__tagged_component_check__s__p4__root__f2 = a2; rec__ext__39 = a3 };
  attr__tag39 = a4 })))

logic tagged_component_check__s__d4__h__first__bit : int

logic tagged_component_check__s__d4__h__last__bit : int

logic tagged_component_check__s__d4__h__position : int

axiom tagged_component_check__s__d4__h__first__bit_axiom :
  (0 <= tagged_component_check__s__d4__h__first__bit)

axiom tagged_component_check__s__d4__h__last__bit_axiom :
  (tagged_component_check__s__d4__h__first__bit <  tagged_component_check__s__d4__h__last__bit)

axiom tagged_component_check__s__d4__h__position_axiom :
  (0 <= tagged_component_check__s__d4__h__position)

logic tagged_component_check__s__p4__root__f__first__bit2 : int

logic tagged_component_check__s__p4__root__f__last__bit2 : int

logic tagged_component_check__s__p4__root__f__position2 : int

axiom tagged_component_check__s__p4__root__f__first__bit_axiom2 :
  (0 <= tagged_component_check__s__p4__root__f__first__bit2)

axiom tagged_component_check__s__p4__root__f__last__bit_axiom2 :
  (tagged_component_check__s__p4__root__f__first__bit2 <  tagged_component_check__s__p4__root__f__last__bit2)

axiom tagged_component_check__s__p4__root__f__position_axiom2 :
  (0 <= tagged_component_check__s__p4__root__f__position2)

logic user_eq41 : us_rep39, us_rep39 -> bool

logic dummy155 : us_main_type4

logic dummy156 : natural

logic dummy157 : natural

logic dummy158 : us_private

logic dummy159 : int

type d4__ref2 = { d4__content2 : us_rep39
}

function d4__ref___3__projection(a: d4__ref2) : us_rep39 = (a).d4__content2

type us_main_type5

logic us_main_eq5 : us_main_type5, us_main_type5 -> bool

type us_split_fields80 = { rec__tagged_component_check__s__p5__c :
us_main_type5; rec__ext__40 : us_private
}

function us_split_fields_C__10__projection(a: us_split_fields80) : us_main_type5 =
  (a).rec__tagged_component_check__s__p5__c

function us_split_fields___40__projection(a: us_split_fields80) : us_private =
  (a).rec__ext__40

type us_split_fields__ref40 = { us_split_fields__content40 :
us_split_fields80
}

function us_split_fields__ref___40__projection(a: us_split_fields__ref40) : us_split_fields80 =
  (a).us_split_fields__content40

type us_rep40 = { us_split_fields81 : us_split_fields80; attr__tag40 : int
}

function us_rep___79__projection(a: us_rep40) : us_split_fields80 =
  (a).us_split_fields81

function us_rep___80__projection(a: us_rep40) : int = (a).attr__tag40

logic bool_eq43 : us_rep40, us_rep40 -> bool

axiom bool_eq_def42 :
  (forall a:us_rep40. forall b:us_rep40 [bool_eq43(a, b)].
  (((us_main_eq5(((a).us_split_fields81).rec__tagged_component_check__s__p5__c,
  ((b).us_split_fields81).rec__tagged_component_check__s__p5__c) = true) ->
  (bool_eq43(a, b) = true)) and
  ((not (us_main_eq5(((a).us_split_fields81).rec__tagged_component_check__s__p5__c,
  ((b).us_split_fields81).rec__tagged_component_check__s__p5__c) = true)) ->
  (bool_eq43(a, b) = false))))

logic us_dispatch_eq14 : us_rep40, us_rep40 -> bool

logic us_tag40 : int

logic value__size40 : int

logic object__size40 : us_rep40 -> int

logic value__alignment40 : int

logic object__alignment40 : us_rep40 -> int

axiom value__size_axiom40 : (0 <= value__size40)

axiom object__size_axiom40 :
  (forall a:us_main_type5. forall a1:us_private. forall a2:int.
  (0 <= object__size40({ us_split_fields81 = {
  rec__tagged_component_check__s__p5__c = a; rec__ext__40 = a1 };
  attr__tag40 = a2 })))

axiom value__alignment_axiom40 : (0 <= value__alignment40)

axiom object__alignment_axiom40 :
  (forall a:us_main_type5. forall a1:us_private. forall a2:int.
  (0 <= object__alignment40({ us_split_fields81 = {
  rec__tagged_component_check__s__p5__c = a; rec__ext__40 = a1 };
  attr__tag40 = a2 })))

logic user_eq42 : us_rep40, us_rep40 -> bool

logic dummy160 : us_main_type5

logic dummy161 : us_private

logic dummy162 : int

type c__ref14 = { c__content14 : us_rep40
}

function c__ref___15__projection(a: c__ref14) : us_rep40 = (a).c__content14

type us_split_fields82 = { rec__tagged_component_check__s__p5__c1 :
us_main_type5; rec__tagged_component_check__s__d5__h : natural; rec__ext__41
: us_private
}

function us_split_fields_C__12__projection(a: us_split_fields82) : us_main_type5 =
  (a).rec__tagged_component_check__s__p5__c1

function us_split_fields_H__15__projection(a: us_split_fields82) : natural =
  (a).rec__tagged_component_check__s__d5__h

function us_split_fields___45__projection(a: us_split_fields82) : us_private =
  (a).rec__ext__41

type us_split_fields__ref41 = { us_split_fields__content41 :
us_split_fields82
}

function us_split_fields__ref___45__projection(a: us_split_fields__ref41) : us_split_fields82 =
  (a).us_split_fields__content41

type us_rep41 = { us_split_fields83 : us_split_fields82; attr__tag41 : int
}

function us_rep___89__projection(a: us_rep41) : us_split_fields82 =
  (a).us_split_fields83

function us_rep___90__projection(a: us_rep41) : int = (a).attr__tag41

logic hide_ext__26 : natural, us_private -> us_private

logic extract__h14 : us_private -> natural

axiom extract__h__conv14 :
  (forall h:natural.
  (forall rec__ext__42:us_private. (extract__h14(hide_ext__26(h,
  rec__ext__42)) = h)))

logic extract__ext__26 : us_private -> us_private

function to_base26(a: us_rep41) : us_rep40 = { us_split_fields81 = {
  rec__tagged_component_check__s__p5__c =
  ((a).us_split_fields83).rec__tagged_component_check__s__p5__c1;
  rec__ext__40 =
  hide_ext__26(((a).us_split_fields83).rec__tagged_component_check__s__d5__h,
  ((a).us_split_fields83).rec__ext__41) }; attr__tag40 = (a).attr__tag41 }

function of_base26(r: us_rep40) : us_rep41 = { us_split_fields83 = {
  rec__tagged_component_check__s__p5__c1 =
  ((r).us_split_fields81).rec__tagged_component_check__s__p5__c;
  rec__tagged_component_check__s__d5__h =
  extract__h14(((r).us_split_fields81).rec__ext__40); rec__ext__41 =
  extract__ext__26(((r).us_split_fields81).rec__ext__40) }; attr__tag41 =
  (r).attr__tag40 }

logic bool_eq44 : us_rep41, us_rep41 -> bool

axiom bool_eq_def43 :
  (forall a:us_rep41. forall b:us_rep41 [bool_eq44(a, b)].
  ((((us_main_eq5(((a).us_split_fields83).rec__tagged_component_check__s__p5__c1,
  ((b).us_split_fields83).rec__tagged_component_check__s__p5__c1) = true) and
  (to_rep(((a).us_split_fields83).rec__tagged_component_check__s__d5__h) = to_rep(((b).us_split_fields83).rec__tagged_component_check__s__d5__h))) ->
  (bool_eq44(a, b) = true)) and
  ((not ((us_main_eq5(((a).us_split_fields83).rec__tagged_component_check__s__p5__c1,
  ((b).us_split_fields83).rec__tagged_component_check__s__p5__c1) = true) and
  (to_rep(((a).us_split_fields83).rec__tagged_component_check__s__d5__h) = to_rep(((b).us_split_fields83).rec__tagged_component_check__s__d5__h)))) ->
  (bool_eq44(a, b) = false))))

logic us_tag41 : int

logic value__size41 : int

logic object__size41 : us_rep41 -> int

logic value__alignment41 : int

logic object__alignment41 : us_rep41 -> int

axiom value__size_axiom41 : (0 <= value__size41)

axiom object__size_axiom41 :
  (forall a:us_main_type5. forall a1:natural. forall a2:us_private.
  forall a3:int. (0 <= object__size41({ us_split_fields83 = {
  rec__tagged_component_check__s__p5__c1 = a;
  rec__tagged_component_check__s__d5__h = a1; rec__ext__41 = a2 };
  attr__tag41 = a3 })))

axiom value__alignment_axiom41 : (0 <= value__alignment41)

axiom object__alignment_axiom41 :
  (forall a:us_main_type5. forall a1:natural. forall a2:us_private.
  forall a3:int. (0 <= object__alignment41({ us_split_fields83 = {
  rec__tagged_component_check__s__p5__c1 = a;
  rec__tagged_component_check__s__d5__h = a1; rec__ext__41 = a2 };
  attr__tag41 = a3 })))

logic tagged_component_check__s__d5__h__first__bit : int

logic tagged_component_check__s__d5__h__last__bit : int

logic tagged_component_check__s__d5__h__position : int

axiom tagged_component_check__s__d5__h__first__bit_axiom :
  (0 <= tagged_component_check__s__d5__h__first__bit)

axiom tagged_component_check__s__d5__h__last__bit_axiom :
  (tagged_component_check__s__d5__h__first__bit <  tagged_component_check__s__d5__h__last__bit)

axiom tagged_component_check__s__d5__h__position_axiom :
  (0 <= tagged_component_check__s__d5__h__position)

logic user_eq43 : us_rep41, us_rep41 -> bool

logic dummy163 : us_main_type5

logic dummy164 : natural

logic dummy165 : us_private

logic dummy166 : int

type d5__ref2 = { d5__content2 : us_rep41
}

function d5__ref___3__projection(a: d5__ref2) : us_rep41 = (a).d5__content2

logic z1__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic z2__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic z3__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic z4__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic z5__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS14 : int

logic x1__split_fields : natural

logic x1__split_fields1 : natural

logic x1__split_fields2 : natural

logic x2__split_fields : natural

logic x2__split_fields1 : natural

logic x2__split_fields2 : natural

logic x3__split_fields : natural

logic x3__split_fields1 : natural

logic x3__split_fields2 : natural

logic x4__split_fields : natural

logic x4__split_fields1 : natural

logic x5__split_fields : natural

logic y1__split_fields : natural

logic y1__split_fields1 : natural

logic y1__split_fields2 : natural

logic y2__split_fields : natural

logic y2__split_fields1 : natural

logic y2__split_fields2 : natural

logic y3__split_fields : natural

logic y3__split_fields1 : natural

logic y3__split_fields2 : natural

logic y4__split_fields : natural

logic y4__split_fields1 : natural

logic y5__split_fields : natural

logic z1__split_fields : natural

logic z1__split_fields1 : natural

logic z1__split_fields2 : natural

logic z2__split_fields : natural

logic z2__split_fields1 : natural

logic z2__split_fields2 : natural

logic z2__split_fields3 : us_private

logic z3__split_fields : natural

logic z3__split_fields1 : natural

logic z3__split_fields2 : natural

logic z3__split_fields3 : us_private

logic z4__split_fields : us_main_type4

logic z4__split_fields1 : natural

logic z4__split_fields2 : natural

logic z4__split_fields3 : us_private

logic o : int

logic us : int

logic o1 : int

logic us1 : int

logic o2 : int

logic us2 : int

logic o3 : int

logic us3 : int

logic o4 : int

logic us4 : int

logic o5 : int

logic us5 : int

logic o6 : int

logic us6 : int

logic o7 : int

logic us7 : int

logic o8 : int

logic us8 : int

logic o9 : int

logic us9 : int

logic o10 : int

logic us10 : int

logic o11 : int

logic us11 : int

logic o12 : int

logic us12 : int

logic o13 : int

logic us13 : int

logic o14 : int

logic us14 : int

logic o15 : int

logic us15 : int

logic o16 : int

logic us16 : int

logic o17 : int

logic us17 : int

logic o18 : int

logic us18 : int

logic o19 : int

logic us19 : int

logic o20 : int

logic us20 : int

logic o21 : int

logic us21 : int

logic o22 : int

logic us22 : int

logic o23 : int

logic us23 : int

logic o24 : int

logic us24 : int

logic o25 : int

logic us25 : int

logic o26 : int

logic us26 : int

axiom H : ((x1__attr__tag = us_tag2) and
  (((to_rep(x1__split_fields) = hide(10)) and
  (to_rep(x1__split_fields1) = hide(0))) and
  (to_rep(x1__split_fields2) = hide(1))))

axiom H1 : ((x2__attr__tag = us_tag5) and
  (((to_rep(x2__split_fields) = hide(3)) and
  (to_rep(x2__split_fields1) = hide(11))) and
  (to_rep(x2__split_fields2) = hide(2))))

axiom H2 : ((x3__attr__tag = us_tag8) and
  (((to_rep(x3__split_fields) = hide(5)) and
  (to_rep(x3__split_fields1) = hide(12))) and
  (to_rep(x3__split_fields2) = hide(4))))

axiom H3 : ((x4__attr__tag = us_tag11) and
  ((to_rep(x4__split_fields) = hide(13)) and
  (to_rep(x4__split_fields1) = hide(6))))

axiom H4 : ((o8 = hide(14)) and in_range1(o8))

 (* File "tagged_component_check.ads", line 3, characters 0-0 *)
goal WP_parameter_def : in_range(o8)
