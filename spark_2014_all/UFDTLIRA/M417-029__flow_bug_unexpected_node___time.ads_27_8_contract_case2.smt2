(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun to_rep ((x natural)) Int (naturalqtint x))
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort minutes_t 0)
(declare-fun minutes_tqtint (minutes_t) Int)
(assert (forall ((i minutes_t)) (and (<= 0 (minutes_tqtint i)) (<= (minutes_tqtint i) 59))))
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 59)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (minutes_t minutes_t) Bool)
(declare-const dummy2 minutes_t)
(declare-datatypes () ((minutes_t__ref (mk_minutes_t__ref (minutes_t__content minutes_t)))))
(define-fun minutes_t__ref___projection ((a minutes_t__ref)) minutes_t (minutes_t__content a))
(define-fun to_rep1 ((x minutes_t)) Int (minutes_tqtint x))
(declare-fun of_rep1 (Int) minutes_t)
(assert (forall ((x minutes_t)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x minutes_t)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort seconds_t 0)
(declare-fun seconds_tqtint (seconds_t) Int)
(assert (forall ((i seconds_t)) (and (<= 0 (seconds_tqtint i)) (<= (seconds_tqtint i) 59))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 59)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (seconds_t seconds_t) Bool)
(declare-const dummy3 seconds_t)
(declare-datatypes () ((seconds_t__ref (mk_seconds_t__ref (seconds_t__content seconds_t)))))
(define-fun seconds_t__ref___projection ((a seconds_t__ref)) seconds_t (seconds_t__content a))
(define-fun to_rep2 ((x seconds_t)) Int (seconds_tqtint x))
(declare-fun of_rep2 (Int) seconds_t)
(assert (forall ((x seconds_t)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x seconds_t)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__time__t__hours natural) (rec__time__t__minutes minutes_t) (rec__time__t__seconds seconds_t)))))
(define-fun us_split_fields_Hours__projection ((a us_split_fields)) natural (rec__time__t__hours a))
(define-fun us_split_fields_Minutes__projection ((a us_split_fields)) minutes_t (rec__time__t__minutes a))
(define-fun us_split_fields_Seconds__projection ((a us_split_fields)) seconds_t (rec__time__t__seconds a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (and (= (to_rep (rec__time__t__hours (us_split_fields1 a))) (to_rep (rec__time__t__hours (us_split_fields1 b)))) (= (to_rep1 (rec__time__t__minutes (us_split_fields1 a))) (to_rep1 (rec__time__t__minutes (us_split_fields1 b))))) (= (to_rep2 (rec__time__t__seconds (us_split_fields1 a))) (to_rep2 (rec__time__t__seconds (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const time__t__hours__first__bit Int)
(declare-const time__t__hours__last__bit Int)
(declare-const time__t__hours__position Int)
(assert (<= 0 time__t__hours__first__bit))
(assert (< time__t__hours__first__bit time__t__hours__last__bit))
(assert (<= 0 time__t__hours__position))
(declare-const time__t__minutes__first__bit Int)
(declare-const time__t__minutes__last__bit Int)
(declare-const time__t__minutes__position Int)
(assert (<= 0 time__t__minutes__first__bit))
(assert (< time__t__minutes__first__bit time__t__minutes__last__bit))
(assert (<= 0 time__t__minutes__position))
(declare-const time__t__seconds__first__bit Int)
(declare-const time__t__seconds__last__bit Int)
(declare-const time__t__seconds__position Int)
(assert (<= 0 time__t__seconds__first__bit))
(assert (< time__t__seconds__first__bit time__t__seconds__last__bit))
(assert (<= 0 time__t__seconds__position))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))
(declare-const max us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const x us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant2 ((temp___expr_158 Int) (temp___is_init_154 Bool) (temp___skip_constant_155 Bool) (temp___do_toplevel_156 Bool) (temp___do_typ_inv_157 Bool)) Bool (=> (or (= temp___is_init_154 true) (<= 0 59)) (in_range3 temp___expr_158)))
(define-fun dynamic_invariant3 ((temp___expr_165 Int) (temp___is_init_161 Bool) (temp___skip_constant_162 Bool) (temp___do_toplevel_163 Bool) (temp___do_typ_inv_164 Bool)) Bool (=> (or (= temp___is_init_161 true) (<= 0 59)) (in_range4 temp___expr_165)))
(declare-const rliteral natural)
(assert (= (naturalqtint rliteral) 2147483647))
(declare-const rliteral1 minutes_t)
(assert (= (minutes_tqtint rliteral1) 59))
(declare-const rliteral2 seconds_t)
(assert (= (seconds_tqtint rliteral2) 59))
(assert (= max (mk___rep (mk___split_fields rliteral rliteral1 rliteral2))))
(declare-const rliteral3 seconds_t)
(assert (= (seconds_tqtint rliteral3) 0))
(declare-const rliteral4 minutes_t)
(assert (= (minutes_tqtint rliteral4) 0))
(declare-const result____split_fields natural)
(declare-const result____split_fields1 minutes_t)
(declare-const result____split_fields2 seconds_t)
(declare-const time__t_increment__result natural)
(declare-const time__t_increment__result1 minutes_t)
(declare-const time__t_increment__result2 seconds_t)
(declare-const o Int)
(declare-const o1 seconds_t)
(declare-const o2 natural)
(declare-const o3 minutes_t)
(declare-const o4 seconds_t)
(declare-const temp___190 natural)
(declare-const temp___1901 minutes_t)
(declare-const temp___1902 seconds_t)
(declare-const o5 Int)
(declare-const o6 minutes_t)
(declare-const o7 natural)
(declare-const o8 minutes_t)
(declare-const o9 seconds_t)
(declare-const temp___188 natural)
(declare-const temp___1881 minutes_t)
(declare-const temp___1882 seconds_t)
(declare-const o10 Int)
(declare-const o11 natural)
(declare-const o12 natural)
(declare-const o13 minutes_t)
(declare-const o14 seconds_t)
(declare-const temp___186 natural)
(declare-const temp___1861 minutes_t)
(declare-const temp___1862 seconds_t)
(declare-const result natural)
(declare-const result1 minutes_t)
(declare-const result2 seconds_t)
(declare-const result____split_fields3 natural)
(declare-const result____split_fields4 minutes_t)
(declare-const result____split_fields5 seconds_t)
(declare-const result3 natural)
(declare-const result4 minutes_t)
(declare-const result5 seconds_t)
(declare-const result____split_fields6 natural)
(declare-const result____split_fields7 minutes_t)
(declare-const result____split_fields8 seconds_t)
(declare-const result6 natural)
(declare-const result7 minutes_t)
(declare-const result8 seconds_t)
(declare-const time__t_increment__result3 us_rep)
(declare-const result9 us_split_fields__ref)
(declare-const result____split_fields9 us_split_fields)
(declare-const result10 us_split_fields__ref)
(declare-const result____split_fields10 us_split_fields)
(declare-const result11 t__ref)
(declare-const time__t_increment__result4 us_rep)
(declare-const result12 us_split_fields__ref)
(declare-const result____split_fields11 us_split_fields)
(declare-const result13 us_split_fields__ref)
(declare-const result____split_fields12 us_split_fields)
(declare-const result14 t__ref)
(declare-const time__t_increment__result5 us_rep)
(declare-const result____split_fields13 us_split_fields__ref)
(declare-const time__t_increment__result6 t__ref)
(declare-const result____split_fields14 us_split_fields)
(declare-const time__t_increment__result7 us_rep)
(declare-const result____split_fields15 us_split_fields__ref)
(declare-const time__t_increment__result8 t__ref)
(declare-const result____split_fields16 us_split_fields)
(declare-const time__t_increment__result9 us_rep)
(declare-const result____split_fields17 us_split_fields__ref)
(declare-const time__t_increment__result10 t__ref)
(declare-const result____split_fields18 us_split_fields)
(declare-const time__t_increment__result11 us_rep)
(declare-const result____split_fields19 us_split_fields__ref)
(declare-const time__t_increment__result12 t__ref)
(declare-const result____split_fields20 us_split_fields)
(declare-const time__t_increment__result13 us_rep)
(define-fun result____split_fields21 () us_split_fields (mk___split_fields result____split_fields6 result____split_fields7 result____split_fields8))
(define-fun result____split_fields22 () us_split_fields (mk___split_fields result____split_fields3 result____split_fields4 result____split_fields5))
(define-fun time__t_increment__result14 () t__ref (mk_t__ref (mk___rep (mk___split_fields time__t_increment__result time__t_increment__result1 time__t_increment__result2))))
(assert (= (mk___rep (mk___split_fields rliteral rliteral1 rliteral2)) max))
(assert (not (= (bool_eq x max) true)))
(assert (= (mk___split_fields__ref (mk___split_fields result result1 result2)) (mk___split_fields__ref (mk___split_fields result____split_fields result____split_fields1 result____split_fields2))))
(assert (= result____split_fields22 (us_split_fields1 x)))
(assert (= time__t_increment__result10 time__t_increment__result8))
(assert (= result____split_fields17 result____split_fields15))
(assert (= time__t_increment__result11 time__t_increment__result9))
(assert (= result____split_fields18 result____split_fields16))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= time__t_increment__result8 (mk_t__ref time__t_increment__result3))))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= result____split_fields15 (mk___split_fields__ref result____split_fields21))))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= time__t_increment__result9 time__t_increment__result3)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= result____split_fields16 result____split_fields21)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (and (= o (+ (to_rep2 result____split_fields5) 1)) (in_range4 (+ (to_rep2 result____split_fields5) 1)))))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= (to_rep2 o1) o)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= result____split_fields3 o2)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= result____split_fields4 o3)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= o1 o4)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= temp___190 o2)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= temp___1901 o3)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= temp___1902 o4)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= result3 result____split_fields3)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= result4 result____split_fields4)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= result5 result____split_fields5)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= temp___190 result____split_fields6)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= temp___1901 result____split_fields7)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= temp___1902 result____split_fields8)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= result6 time__t_increment__result)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= result7 time__t_increment__result1)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= result8 time__t_increment__result2)))
(assert (=> (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) (= time__t_increment__result3 (mk___rep result____split_fields21))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (= time__t_increment__result8 time__t_increment__result6)))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (= result____split_fields15 result____split_fields13)))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (= time__t_increment__result9 time__t_increment__result7)))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (= result____split_fields16 result____split_fields14)))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (= result9 (mk___split_fields__ref result____split_fields22))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (= result____split_fields9 (mk___split_fields result____split_fields3 result____split_fields4 rliteral3))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= time__t_increment__result6 (mk_t__ref time__t_increment__result4)))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= result____split_fields13 (mk___split_fields__ref result____split_fields10)))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= time__t_increment__result7 time__t_increment__result4))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= result____split_fields14 result____split_fields10))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (and (= o5 (+ (to_rep1 (rec__time__t__minutes result____split_fields9)) 1)) (in_range3 (+ (to_rep1 (rec__time__t__minutes result____split_fields9)) 1))))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= (to_rep1 o6) o5))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= (rec__time__t__hours result____split_fields9) o7))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= o6 o8))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= (rec__time__t__seconds result____split_fields9) o9))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= temp___188 o7))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= temp___1881 o8))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= temp___1882 o9))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= result10 (mk___split_fields__ref result____split_fields9)))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= result____split_fields10 (mk___split_fields temp___188 temp___1881 temp___1882)))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= result11 time__t_increment__result14))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59) (= time__t_increment__result4 (mk___rep result____split_fields10)))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= time__t_increment__result6 (mk_t__ref time__t_increment__result5)))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= result____split_fields13 (mk___split_fields__ref result____split_fields12)))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= time__t_increment__result7 time__t_increment__result5))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= result____split_fields14 result____split_fields12))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= result12 (mk___split_fields__ref result____split_fields9)))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= result____split_fields11 (mk___split_fields (rec__time__t__hours result____split_fields9) rliteral4 (rec__time__t__seconds result____split_fields9))))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (and (= o10 (+ (to_rep (rec__time__t__hours result____split_fields11)) 1)) (in_range1 (+ (to_rep (rec__time__t__hours result____split_fields11)) 1))))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= (to_rep o11) o10))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= o11 o12))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= (rec__time__t__minutes result____split_fields11) o13))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= (rec__time__t__seconds result____split_fields11) o14))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= temp___186 o12))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= temp___1861 o13))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= temp___1862 o14))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= result13 (mk___split_fields__ref result____split_fields11)))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= result____split_fields12 (mk___split_fields temp___186 temp___1861 temp___1862)))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= result14 time__t_increment__result14))))
(assert (=> (not (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59)) (=> (not (< (to_rep1 (rec__time__t__minutes (us_split_fields1 x))) 59)) (= time__t_increment__result5 (mk___rep result____split_fields12)))))
(assert (= time__t_increment__result12 time__t_increment__result10))
(assert (= result____split_fields19 result____split_fields17))
(assert (= time__t_increment__result13 time__t_increment__result11))
(assert (= result____split_fields20 result____split_fields18))
(assert (= (< (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 59) true))
(assert (not (= (to_rep2 (rec__time__t__seconds (us_split_fields1 (t__content time__t_increment__result12)))) (+ (to_rep2 (rec__time__t__seconds (us_split_fields1 x))) 1))))
(check-sat)
(exit)
