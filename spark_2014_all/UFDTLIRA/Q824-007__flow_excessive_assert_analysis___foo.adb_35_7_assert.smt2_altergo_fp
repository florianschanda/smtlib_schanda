(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq1 : int, int -> bool

axiom bool_eq_def :
  (forall x:int. forall y:int [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type us_split_fields = { rec__foo__level_0__a1 : bool; rec__foo__level_0__a2
: bool; rec__foo__level_0__a3 : bool; rec__foo__level_0__a4 : bool;
rec__foo__level_0__a5 : bool
}

function us_split_fields_A1__projection(a: us_split_fields) : bool =
  (a).rec__foo__level_0__a1

function us_split_fields_A2__projection(a: us_split_fields) : bool =
  (a).rec__foo__level_0__a2

function us_split_fields_A3__projection(a: us_split_fields) : bool =
  (a).rec__foo__level_0__a3

function us_split_fields_A4__projection(a: us_split_fields) : bool =
  (a).rec__foo__level_0__a4

function us_split_fields_A5__projection(a: us_split_fields) : bool =
  (a).rec__foo__level_0__a5

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq2 : us_rep, us_rep -> bool

axiom bool_eq_def1 :
  (forall a:us_rep. forall b:us_rep [bool_eq2(a, b)].
  (((((((((a).us_split_fields1).rec__foo__level_0__a1 = ((b).us_split_fields1).rec__foo__level_0__a1) and
  (((a).us_split_fields1).rec__foo__level_0__a2 = ((b).us_split_fields1).rec__foo__level_0__a2)) and
  (((a).us_split_fields1).rec__foo__level_0__a3 = ((b).us_split_fields1).rec__foo__level_0__a3)) and
  (((a).us_split_fields1).rec__foo__level_0__a4 = ((b).us_split_fields1).rec__foo__level_0__a4)) and
  (((a).us_split_fields1).rec__foo__level_0__a5 = ((b).us_split_fields1).rec__foo__level_0__a5)) ->
  (bool_eq2(a, b) = true)) and
  ((not (((((((a).us_split_fields1).rec__foo__level_0__a1 = ((b).us_split_fields1).rec__foo__level_0__a1) and
  (((a).us_split_fields1).rec__foo__level_0__a2 = ((b).us_split_fields1).rec__foo__level_0__a2)) and
  (((a).us_split_fields1).rec__foo__level_0__a3 = ((b).us_split_fields1).rec__foo__level_0__a3)) and
  (((a).us_split_fields1).rec__foo__level_0__a4 = ((b).us_split_fields1).rec__foo__level_0__a4)) and
  (((a).us_split_fields1).rec__foo__level_0__a5 = ((b).us_split_fields1).rec__foo__level_0__a5))) ->
  (bool_eq2(a, b) = false))))

logic value__size : int

logic object__size : us_rep -> int

logic value__alignment : int

logic object__alignment : us_rep -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:bool. forall a1:bool. forall a2:bool. forall a3:bool.
  forall a4:bool. (0 <= object__size({ us_split_fields1 = {
  rec__foo__level_0__a1 = a; rec__foo__level_0__a2 = a1;
  rec__foo__level_0__a3 = a2; rec__foo__level_0__a4 = a3;
  rec__foo__level_0__a5 = a4 } })))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:bool. forall a1:bool. forall a2:bool. forall a3:bool.
  forall a4:bool. (0 <= object__alignment({ us_split_fields1 = {
  rec__foo__level_0__a1 = a; rec__foo__level_0__a2 = a1;
  rec__foo__level_0__a3 = a2; rec__foo__level_0__a4 = a3;
  rec__foo__level_0__a5 = a4 } })))

logic foo__level_0__a1__first__bit : int

logic foo__level_0__a1__last__bit : int

logic foo__level_0__a1__position : int

axiom foo__level_0__a1__first__bit_axiom :
  (0 <= foo__level_0__a1__first__bit)

axiom foo__level_0__a1__last__bit_axiom :
  (foo__level_0__a1__first__bit <  foo__level_0__a1__last__bit)

axiom foo__level_0__a1__position_axiom : (0 <= foo__level_0__a1__position)

logic foo__level_0__a2__first__bit : int

logic foo__level_0__a2__last__bit : int

logic foo__level_0__a2__position : int

axiom foo__level_0__a2__first__bit_axiom :
  (0 <= foo__level_0__a2__first__bit)

axiom foo__level_0__a2__last__bit_axiom :
  (foo__level_0__a2__first__bit <  foo__level_0__a2__last__bit)

axiom foo__level_0__a2__position_axiom : (0 <= foo__level_0__a2__position)

logic foo__level_0__a3__first__bit : int

logic foo__level_0__a3__last__bit : int

logic foo__level_0__a3__position : int

axiom foo__level_0__a3__first__bit_axiom :
  (0 <= foo__level_0__a3__first__bit)

axiom foo__level_0__a3__last__bit_axiom :
  (foo__level_0__a3__first__bit <  foo__level_0__a3__last__bit)

axiom foo__level_0__a3__position_axiom : (0 <= foo__level_0__a3__position)

logic foo__level_0__a4__first__bit : int

logic foo__level_0__a4__last__bit : int

logic foo__level_0__a4__position : int

axiom foo__level_0__a4__first__bit_axiom :
  (0 <= foo__level_0__a4__first__bit)

axiom foo__level_0__a4__last__bit_axiom :
  (foo__level_0__a4__first__bit <  foo__level_0__a4__last__bit)

axiom foo__level_0__a4__position_axiom : (0 <= foo__level_0__a4__position)

logic foo__level_0__a5__first__bit : int

logic foo__level_0__a5__last__bit : int

logic foo__level_0__a5__position : int

axiom foo__level_0__a5__first__bit_axiom :
  (0 <= foo__level_0__a5__first__bit)

axiom foo__level_0__a5__last__bit_axiom :
  (foo__level_0__a5__first__bit <  foo__level_0__a5__last__bit)

axiom foo__level_0__a5__position_axiom : (0 <= foo__level_0__a5__position)

logic user_eq1 : us_rep, us_rep -> bool

logic dummy1 : bool

logic dummy2 : bool

logic dummy3 : bool

logic dummy4 : bool

logic dummy5 : bool

type level_0__ref = { level_0__content : us_rep
}

function level_0__ref___projection(a: level_0__ref) : us_rep =
  (a).level_0__content

type us_split_fields2 = { rec__foo__level_1__b1 : us_rep;
rec__foo__level_1__b2 : us_rep; rec__foo__level_1__b3 : us_rep;
rec__foo__level_1__b4 : us_rep
}

function us_split_fields_B1__projection(a: us_split_fields2) : us_rep =
  (a).rec__foo__level_1__b1

function us_split_fields_B2__projection(a: us_split_fields2) : us_rep =
  (a).rec__foo__level_1__b2

function us_split_fields_B3__projection(a: us_split_fields2) : us_rep =
  (a).rec__foo__level_1__b3

function us_split_fields_B4__projection(a: us_split_fields2) : us_rep =
  (a).rec__foo__level_1__b4

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2
}

function us_rep___2__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

logic bool_eq3 : us_rep1, us_rep1 -> bool

axiom bool_eq_def2 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq3(a, b)].
  ((((((bool_eq2(((a).us_split_fields3).rec__foo__level_1__b1,
  ((b).us_split_fields3).rec__foo__level_1__b1) = true) and
  (bool_eq2(((a).us_split_fields3).rec__foo__level_1__b2,
  ((b).us_split_fields3).rec__foo__level_1__b2) = true)) and
  (bool_eq2(((a).us_split_fields3).rec__foo__level_1__b3,
  ((b).us_split_fields3).rec__foo__level_1__b3) = true)) and
  (bool_eq2(((a).us_split_fields3).rec__foo__level_1__b4,
  ((b).us_split_fields3).rec__foo__level_1__b4) = true)) -> (bool_eq3(a,
  b) = true)) and
  ((not ((((bool_eq2(((a).us_split_fields3).rec__foo__level_1__b1,
  ((b).us_split_fields3).rec__foo__level_1__b1) = true) and
  (bool_eq2(((a).us_split_fields3).rec__foo__level_1__b2,
  ((b).us_split_fields3).rec__foo__level_1__b2) = true)) and
  (bool_eq2(((a).us_split_fields3).rec__foo__level_1__b3,
  ((b).us_split_fields3).rec__foo__level_1__b3) = true)) and
  (bool_eq2(((a).us_split_fields3).rec__foo__level_1__b4,
  ((b).us_split_fields3).rec__foo__level_1__b4) = true))) -> (bool_eq3(a,
  b) = false))))

logic value__size1 : int

logic object__size1 : us_rep1 -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep1 -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (forall a:us_rep1. (0 <= object__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:us_rep1. (0 <= object__alignment1(a)))

logic foo__level_1__b1__first__bit : int

logic foo__level_1__b1__last__bit : int

logic foo__level_1__b1__position : int

axiom foo__level_1__b1__first__bit_axiom :
  (0 <= foo__level_1__b1__first__bit)

axiom foo__level_1__b1__last__bit_axiom :
  (foo__level_1__b1__first__bit <  foo__level_1__b1__last__bit)

axiom foo__level_1__b1__position_axiom : (0 <= foo__level_1__b1__position)

logic foo__level_1__b2__first__bit : int

logic foo__level_1__b2__last__bit : int

logic foo__level_1__b2__position : int

axiom foo__level_1__b2__first__bit_axiom :
  (0 <= foo__level_1__b2__first__bit)

axiom foo__level_1__b2__last__bit_axiom :
  (foo__level_1__b2__first__bit <  foo__level_1__b2__last__bit)

axiom foo__level_1__b2__position_axiom : (0 <= foo__level_1__b2__position)

logic foo__level_1__b3__first__bit : int

logic foo__level_1__b3__last__bit : int

logic foo__level_1__b3__position : int

axiom foo__level_1__b3__first__bit_axiom :
  (0 <= foo__level_1__b3__first__bit)

axiom foo__level_1__b3__last__bit_axiom :
  (foo__level_1__b3__first__bit <  foo__level_1__b3__last__bit)

axiom foo__level_1__b3__position_axiom : (0 <= foo__level_1__b3__position)

logic foo__level_1__b4__first__bit : int

logic foo__level_1__b4__last__bit : int

logic foo__level_1__b4__position : int

axiom foo__level_1__b4__first__bit_axiom :
  (0 <= foo__level_1__b4__first__bit)

axiom foo__level_1__b4__last__bit_axiom :
  (foo__level_1__b4__first__bit <  foo__level_1__b4__last__bit)

axiom foo__level_1__b4__position_axiom : (0 <= foo__level_1__b4__position)

logic user_eq2 : us_rep1, us_rep1 -> bool

logic dummy6 : bool

logic dummy7 : bool

logic dummy8 : bool

logic dummy9 : bool

logic dummy10 : bool

logic dummy11 : bool

logic dummy12 : bool

logic dummy13 : bool

logic dummy14 : bool

logic dummy15 : bool

logic dummy16 : bool

logic dummy17 : bool

logic dummy18 : bool

logic dummy19 : bool

logic dummy20 : bool

logic dummy21 : bool

logic dummy22 : bool

logic dummy23 : bool

logic dummy24 : bool

logic dummy25 : bool

type level_1__ref = { level_1__content : us_rep1
}

function level_1__ref___projection(a: level_1__ref) : us_rep1 =
  (a).level_1__content

type us_split_fields4 = { rec__foo__level_2__c1 : us_rep1;
rec__foo__level_2__c2 : us_rep1; rec__foo__level_2__c3 : us_rep1
}

function us_split_fields_C1__projection(a: us_split_fields4) : us_rep1 =
  (a).rec__foo__level_2__c1

function us_split_fields_C2__projection(a: us_split_fields4) : us_rep1 =
  (a).rec__foo__level_2__c2

function us_split_fields_C3__projection(a: us_split_fields4) : us_rep1 =
  (a).rec__foo__level_2__c3

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___3__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_fields5 : us_split_fields4
}

function us_rep___3__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

logic bool_eq4 : us_rep2, us_rep2 -> bool

axiom bool_eq_def3 :
  (forall a:us_rep2. forall b:us_rep2 [bool_eq4(a, b)].
  (((((bool_eq3(((a).us_split_fields5).rec__foo__level_2__c1,
  ((b).us_split_fields5).rec__foo__level_2__c1) = true) and
  (bool_eq3(((a).us_split_fields5).rec__foo__level_2__c2,
  ((b).us_split_fields5).rec__foo__level_2__c2) = true)) and
  (bool_eq3(((a).us_split_fields5).rec__foo__level_2__c3,
  ((b).us_split_fields5).rec__foo__level_2__c3) = true)) -> (bool_eq4(a,
  b) = true)) and
  ((not (((bool_eq3(((a).us_split_fields5).rec__foo__level_2__c1,
  ((b).us_split_fields5).rec__foo__level_2__c1) = true) and
  (bool_eq3(((a).us_split_fields5).rec__foo__level_2__c2,
  ((b).us_split_fields5).rec__foo__level_2__c2) = true)) and
  (bool_eq3(((a).us_split_fields5).rec__foo__level_2__c3,
  ((b).us_split_fields5).rec__foo__level_2__c3) = true))) -> (bool_eq4(a,
  b) = false))))

logic value__size2 : int

logic object__size2 : us_rep2 -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep2 -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (forall a:us_rep2. (0 <= object__size2(a)))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:us_rep2. (0 <= object__alignment2(a)))

logic foo__level_2__c1__first__bit : int

logic foo__level_2__c1__last__bit : int

logic foo__level_2__c1__position : int

axiom foo__level_2__c1__first__bit_axiom :
  (0 <= foo__level_2__c1__first__bit)

axiom foo__level_2__c1__last__bit_axiom :
  (foo__level_2__c1__first__bit <  foo__level_2__c1__last__bit)

axiom foo__level_2__c1__position_axiom : (0 <= foo__level_2__c1__position)

logic foo__level_2__c2__first__bit : int

logic foo__level_2__c2__last__bit : int

logic foo__level_2__c2__position : int

axiom foo__level_2__c2__first__bit_axiom :
  (0 <= foo__level_2__c2__first__bit)

axiom foo__level_2__c2__last__bit_axiom :
  (foo__level_2__c2__first__bit <  foo__level_2__c2__last__bit)

axiom foo__level_2__c2__position_axiom : (0 <= foo__level_2__c2__position)

logic foo__level_2__c3__first__bit : int

logic foo__level_2__c3__last__bit : int

logic foo__level_2__c3__position : int

axiom foo__level_2__c3__first__bit_axiom :
  (0 <= foo__level_2__c3__first__bit)

axiom foo__level_2__c3__last__bit_axiom :
  (foo__level_2__c3__first__bit <  foo__level_2__c3__last__bit)

axiom foo__level_2__c3__position_axiom : (0 <= foo__level_2__c3__position)

logic user_eq3 : us_rep2, us_rep2 -> bool

logic dummy26 : bool

logic dummy27 : bool

logic dummy28 : bool

logic dummy29 : bool

logic dummy30 : bool

logic dummy31 : bool

logic dummy32 : bool

logic dummy33 : bool

logic dummy34 : bool

logic dummy35 : bool

logic dummy36 : bool

logic dummy37 : bool

logic dummy38 : bool

logic dummy39 : bool

logic dummy40 : bool

logic dummy41 : bool

logic dummy42 : bool

logic dummy43 : bool

logic dummy44 : bool

logic dummy45 : bool

logic dummy46 : bool

logic dummy47 : bool

logic dummy48 : bool

logic dummy49 : bool

logic dummy50 : bool

logic dummy51 : bool

logic dummy52 : bool

logic dummy53 : bool

logic dummy54 : bool

logic dummy55 : bool

logic dummy56 : bool

logic dummy57 : bool

logic dummy58 : bool

logic dummy59 : bool

logic dummy60 : bool

logic dummy61 : bool

logic dummy62 : bool

logic dummy63 : bool

logic dummy64 : bool

logic dummy65 : bool

logic dummy66 : bool

logic dummy67 : bool

logic dummy68 : bool

logic dummy69 : bool

logic dummy70 : bool

logic dummy71 : bool

logic dummy72 : bool

logic dummy73 : bool

logic dummy74 : bool

logic dummy75 : bool

logic dummy76 : bool

logic dummy77 : bool

logic dummy78 : bool

logic dummy79 : bool

logic dummy80 : bool

logic dummy81 : bool

logic dummy82 : bool

logic dummy83 : bool

logic dummy84 : bool

logic dummy85 : bool

type level_2__ref = { level_2__content : us_rep2
}

function level_2__ref___projection(a: level_2__ref) : us_rep2 =
  (a).level_2__content

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic x : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic invariant__ : us_rep1, us_rep1, us_rep1 -> bool

logic invariant____function_guard : bool, us_rep1, us_rep1, us_rep1 -> prop

axiom invariant____post_axiom : true

axiom invariant____def_axiom :
  (forall a:us_rep1. forall b:us_rep1. forall c:us_rep1 [invariant__(a, b,
  c)]. ((invariant__(a, b, c) = true) <->
  (((((((a).us_split_fields3).rec__foo__level_1__b1).us_split_fields1).rec__foo__level_0__a1 = true) and
  (((((b).us_split_fields3).rec__foo__level_1__b2).us_split_fields1).rec__foo__level_0__a2 = true)) and
  (((((c).us_split_fields3).rec__foo__level_1__b3).us_split_fields1).rec__foo__level_0__a3 = true))))

logic red__split_fields : bool

logic red__split_fields1 : bool

logic red__split_fields2 : bool

logic red__split_fields3 : bool

logic red__split_fields4 : bool

logic red__split_fields5 : bool

logic red__split_fields6 : bool

logic red__split_fields7 : bool

logic red__split_fields8 : bool

logic red__split_fields9 : bool

logic red__split_fields10 : bool

logic red__split_fields11 : bool

logic red__split_fields12 : bool

logic red__split_fields13 : bool

logic red__split_fields14 : bool

logic red__split_fields15 : bool

logic red__split_fields16 : bool

logic red__split_fields17 : bool

logic red__split_fields18 : bool

logic red__split_fields19 : bool

logic red__split_fields20 : bool

logic red__split_fields21 : bool

logic red__split_fields22 : bool

logic red__split_fields23 : bool

logic red__split_fields24 : bool

logic red__split_fields25 : bool

logic red__split_fields26 : bool

logic red__split_fields27 : bool

logic red__split_fields28 : bool

logic red__split_fields29 : bool

logic red__split_fields30 : bool

logic red__split_fields31 : bool

logic red__split_fields32 : bool

logic red__split_fields33 : bool

logic red__split_fields34 : bool

logic red__split_fields35 : bool

logic red__split_fields36 : bool

logic red__split_fields37 : bool

logic red__split_fields38 : bool

logic red__split_fields39 : bool

logic red__split_fields40 : bool

logic red__split_fields41 : bool

logic red__split_fields42 : bool

logic red__split_fields43 : bool

logic red__split_fields44 : bool

logic red__split_fields45 : bool

logic red__split_fields46 : bool

logic red__split_fields47 : bool

logic red__split_fields48 : bool

logic red__split_fields49 : bool

logic red__split_fields50 : bool

logic red__split_fields51 : bool

logic red__split_fields52 : bool

logic red__split_fields53 : bool

logic red__split_fields54 : bool

logic red__split_fields55 : bool

logic red__split_fields56 : bool

logic red__split_fields57 : bool

logic red__split_fields58 : bool

logic red__split_fields59 : bool

logic black__split_fields : bool

logic black__split_fields1 : bool

logic black__split_fields2 : bool

logic black__split_fields3 : bool

logic black__split_fields4 : bool

logic black__split_fields5 : bool

logic black__split_fields6 : bool

logic black__split_fields7 : bool

logic black__split_fields8 : bool

logic black__split_fields9 : bool

logic black__split_fields10 : bool

logic black__split_fields11 : bool

logic black__split_fields12 : bool

logic black__split_fields13 : bool

logic black__split_fields14 : bool

logic black__split_fields15 : bool

logic black__split_fields16 : bool

logic black__split_fields17 : bool

logic black__split_fields18 : bool

logic black__split_fields19 : bool

logic black__split_fields20 : bool

logic black__split_fields21 : bool

logic black__split_fields22 : bool

logic black__split_fields23 : bool

logic black__split_fields24 : bool

logic black__split_fields25 : bool

logic black__split_fields26 : bool

logic black__split_fields27 : bool

logic black__split_fields28 : bool

logic black__split_fields29 : bool

logic black__split_fields30 : bool

logic black__split_fields31 : bool

logic black__split_fields32 : bool

logic black__split_fields33 : bool

logic black__split_fields34 : bool

logic black__split_fields35 : bool

logic black__split_fields36 : bool

logic black__split_fields37 : bool

logic black__split_fields38 : bool

logic black__split_fields39 : bool

logic black__split_fields40 : bool

logic black__split_fields41 : bool

logic black__split_fields42 : bool

logic black__split_fields43 : bool

logic black__split_fields44 : bool

logic black__split_fields45 : bool

logic black__split_fields46 : bool

logic black__split_fields47 : bool

logic black__split_fields48 : bool

logic black__split_fields49 : bool

logic black__split_fields50 : bool

logic black__split_fields51 : bool

logic black__split_fields52 : bool

logic black__split_fields53 : bool

logic black__split_fields54 : bool

logic black__split_fields55 : bool

logic black__split_fields56 : bool

logic black__split_fields57 : bool

logic black__split_fields58 : bool

logic black__split_fields59 : bool

logic red__split_fields60 : bool

logic red__split_fields61 : bool

logic red__split_fields62 : bool

logic red__split_fields63 : bool

logic red__split_fields64 : bool

logic red__split_fields65 : bool

logic red__split_fields66 : bool

logic red__split_fields67 : bool

logic red__split_fields68 : bool

logic red__split_fields69 : bool

logic red__split_fields70 : bool

logic red__split_fields71 : bool

logic red__split_fields72 : bool

logic red__split_fields73 : bool

logic red__split_fields74 : bool

logic red__split_fields75 : bool

logic red__split_fields76 : bool

logic red__split_fields77 : bool

logic red__split_fields78 : bool

logic red__split_fields79 : bool

logic red__split_fields80 : bool

logic red__split_fields81 : bool

logic red__split_fields82 : bool

logic red__split_fields83 : bool

logic red__split_fields84 : bool

logic red__split_fields85 : bool

logic red__split_fields86 : bool

logic red__split_fields87 : bool

logic red__split_fields88 : bool

logic red__split_fields89 : bool

logic red__split_fields90 : bool

logic red__split_fields91 : bool

logic red__split_fields92 : bool

logic red__split_fields93 : bool

logic red__split_fields94 : bool

logic red__split_fields95 : bool

logic red__split_fields96 : bool

logic red__split_fields97 : bool

logic red__split_fields98 : bool

logic red__split_fields99 : bool

logic red__split_fields100 : bool

logic red__split_fields101 : bool

logic red__split_fields102 : bool

logic red__split_fields103 : bool

logic red__split_fields104 : bool

logic red__split_fields105 : bool

logic red__split_fields106 : bool

logic red__split_fields107 : bool

logic red__split_fields108 : bool

logic red__split_fields109 : bool

logic red__split_fields110 : bool

logic red__split_fields111 : bool

logic red__split_fields112 : bool

logic red__split_fields113 : bool

logic red__split_fields114 : bool

logic red__split_fields115 : bool

logic red__split_fields116 : bool

logic red__split_fields117 : bool

logic red__split_fields118 : bool

logic red__split_fields119 : bool

logic black__split_fields60 : bool

logic black__split_fields61 : bool

logic black__split_fields62 : bool

logic black__split_fields63 : bool

logic black__split_fields64 : bool

logic black__split_fields65 : bool

logic black__split_fields66 : bool

logic black__split_fields67 : bool

logic black__split_fields68 : bool

logic black__split_fields69 : bool

logic black__split_fields70 : bool

logic black__split_fields71 : bool

logic black__split_fields72 : bool

logic black__split_fields73 : bool

logic black__split_fields74 : bool

logic black__split_fields75 : bool

logic black__split_fields76 : bool

logic black__split_fields77 : bool

logic black__split_fields78 : bool

logic black__split_fields79 : bool

logic black__split_fields80 : bool

logic black__split_fields81 : bool

logic black__split_fields82 : bool

logic black__split_fields83 : bool

logic black__split_fields84 : bool

logic black__split_fields85 : bool

logic black__split_fields86 : bool

logic black__split_fields87 : bool

logic black__split_fields88 : bool

logic black__split_fields89 : bool

logic black__split_fields90 : bool

logic black__split_fields91 : bool

logic black__split_fields92 : bool

logic black__split_fields93 : bool

logic black__split_fields94 : bool

logic black__split_fields95 : bool

logic black__split_fields96 : bool

logic black__split_fields97 : bool

logic black__split_fields98 : bool

logic black__split_fields99 : bool

logic black__split_fields100 : bool

logic black__split_fields101 : bool

logic black__split_fields102 : bool

logic black__split_fields103 : bool

logic black__split_fields104 : bool

logic black__split_fields105 : bool

logic black__split_fields106 : bool

logic black__split_fields107 : bool

logic black__split_fields108 : bool

logic black__split_fields109 : bool

logic black__split_fields110 : bool

logic black__split_fields111 : bool

logic black__split_fields112 : bool

logic black__split_fields113 : bool

logic black__split_fields114 : bool

logic black__split_fields115 : bool

logic black__split_fields116 : bool

logic black__split_fields117 : bool

logic black__split_fields118 : bool

logic black__split_fields119 : bool

axiom H : in_range(x)

axiom H1 : (1 <  x)

axiom H2 : (invariant__({ us_split_fields3 = { rec__foo__level_1__b1 = {
  us_split_fields1 = { rec__foo__level_0__a1 = red__split_fields60;
  rec__foo__level_0__a2 = red__split_fields61; rec__foo__level_0__a3 =
  red__split_fields62; rec__foo__level_0__a4 = red__split_fields63;
  rec__foo__level_0__a5 = red__split_fields64 } }; rec__foo__level_1__b2 = {
  us_split_fields1 = { rec__foo__level_0__a1 = red__split_fields65;
  rec__foo__level_0__a2 = red__split_fields66; rec__foo__level_0__a3 =
  red__split_fields67; rec__foo__level_0__a4 = red__split_fields68;
  rec__foo__level_0__a5 = red__split_fields69 } }; rec__foo__level_1__b3 = {
  us_split_fields1 = { rec__foo__level_0__a1 = red__split_fields70;
  rec__foo__level_0__a2 = red__split_fields71; rec__foo__level_0__a3 =
  red__split_fields72; rec__foo__level_0__a4 = red__split_fields73;
  rec__foo__level_0__a5 = red__split_fields74 } }; rec__foo__level_1__b4 = {
  us_split_fields1 = { rec__foo__level_0__a1 = red__split_fields75;
  rec__foo__level_0__a2 = red__split_fields76; rec__foo__level_0__a3 =
  red__split_fields77; rec__foo__level_0__a4 = red__split_fields78;
  rec__foo__level_0__a5 = red__split_fields79 } } } }, { us_split_fields3 = {
  rec__foo__level_1__b1 = { us_split_fields1 = { rec__foo__level_0__a1 =
  red__split_fields80; rec__foo__level_0__a2 = red__split_fields81;
  rec__foo__level_0__a3 = red__split_fields82; rec__foo__level_0__a4 =
  red__split_fields83; rec__foo__level_0__a5 = red__split_fields84 } };
  rec__foo__level_1__b2 = { us_split_fields1 = { rec__foo__level_0__a1 =
  red__split_fields85; rec__foo__level_0__a2 = red__split_fields86;
  rec__foo__level_0__a3 = red__split_fields87; rec__foo__level_0__a4 =
  red__split_fields88; rec__foo__level_0__a5 = red__split_fields89 } };
  rec__foo__level_1__b3 = { us_split_fields1 = { rec__foo__level_0__a1 =
  red__split_fields90; rec__foo__level_0__a2 = red__split_fields91;
  rec__foo__level_0__a3 = red__split_fields92; rec__foo__level_0__a4 =
  red__split_fields93; rec__foo__level_0__a5 = red__split_fields94 } };
  rec__foo__level_1__b4 = { us_split_fields1 = { rec__foo__level_0__a1 =
  red__split_fields95; rec__foo__level_0__a2 = red__split_fields96;
  rec__foo__level_0__a3 = red__split_fields97; rec__foo__level_0__a4 =
  red__split_fields98; rec__foo__level_0__a5 = red__split_fields99 } } } }, {
  us_split_fields3 = { rec__foo__level_1__b1 = { us_split_fields1 = {
  rec__foo__level_0__a1 = red__split_fields100; rec__foo__level_0__a2 =
  red__split_fields101; rec__foo__level_0__a3 = red__split_fields102;
  rec__foo__level_0__a4 = red__split_fields103; rec__foo__level_0__a5 =
  red__split_fields104 } }; rec__foo__level_1__b2 = { us_split_fields1 = {
  rec__foo__level_0__a1 = red__split_fields105; rec__foo__level_0__a2 =
  red__split_fields106; rec__foo__level_0__a3 = red__split_fields107;
  rec__foo__level_0__a4 = red__split_fields108; rec__foo__level_0__a5 =
  red__split_fields109 } }; rec__foo__level_1__b3 = { us_split_fields1 = {
  rec__foo__level_0__a1 = red__split_fields110; rec__foo__level_0__a2 =
  red__split_fields111; rec__foo__level_0__a3 = red__split_fields112;
  rec__foo__level_0__a4 = red__split_fields113; rec__foo__level_0__a5 =
  red__split_fields114 } }; rec__foo__level_1__b4 = { us_split_fields1 = {
  rec__foo__level_0__a1 = red__split_fields115; rec__foo__level_0__a2 =
  red__split_fields116; rec__foo__level_0__a3 = red__split_fields117;
  rec__foo__level_0__a4 = red__split_fields118; rec__foo__level_0__a5 =
  red__split_fields119 } } } }) = true)

axiom H3 : (invariant__({ us_split_fields3 = { rec__foo__level_1__b1 = {
  us_split_fields1 = { rec__foo__level_0__a1 = black__split_fields60;
  rec__foo__level_0__a2 = black__split_fields61; rec__foo__level_0__a3 =
  black__split_fields62; rec__foo__level_0__a4 = black__split_fields63;
  rec__foo__level_0__a5 = black__split_fields64 } }; rec__foo__level_1__b2 =
  { us_split_fields1 = { rec__foo__level_0__a1 = black__split_fields65;
  rec__foo__level_0__a2 = black__split_fields66; rec__foo__level_0__a3 =
  black__split_fields67; rec__foo__level_0__a4 = black__split_fields68;
  rec__foo__level_0__a5 = black__split_fields69 } }; rec__foo__level_1__b3 =
  { us_split_fields1 = { rec__foo__level_0__a1 = black__split_fields70;
  rec__foo__level_0__a2 = black__split_fields71; rec__foo__level_0__a3 =
  black__split_fields72; rec__foo__level_0__a4 = black__split_fields73;
  rec__foo__level_0__a5 = black__split_fields74 } }; rec__foo__level_1__b4 =
  { us_split_fields1 = { rec__foo__level_0__a1 = black__split_fields75;
  rec__foo__level_0__a2 = black__split_fields76; rec__foo__level_0__a3 =
  black__split_fields77; rec__foo__level_0__a4 = black__split_fields78;
  rec__foo__level_0__a5 = black__split_fields79 } } } }, { us_split_fields3 =
  { rec__foo__level_1__b1 = { us_split_fields1 = { rec__foo__level_0__a1 =
  black__split_fields80; rec__foo__level_0__a2 = black__split_fields81;
  rec__foo__level_0__a3 = black__split_fields82; rec__foo__level_0__a4 =
  black__split_fields83; rec__foo__level_0__a5 = black__split_fields84 } };
  rec__foo__level_1__b2 = { us_split_fields1 = { rec__foo__level_0__a1 =
  black__split_fields85; rec__foo__level_0__a2 = black__split_fields86;
  rec__foo__level_0__a3 = black__split_fields87; rec__foo__level_0__a4 =
  black__split_fields88; rec__foo__level_0__a5 = black__split_fields89 } };
  rec__foo__level_1__b3 = { us_split_fields1 = { rec__foo__level_0__a1 =
  black__split_fields90; rec__foo__level_0__a2 = black__split_fields91;
  rec__foo__level_0__a3 = black__split_fields92; rec__foo__level_0__a4 =
  black__split_fields93; rec__foo__level_0__a5 = black__split_fields94 } };
  rec__foo__level_1__b4 = { us_split_fields1 = { rec__foo__level_0__a1 =
  black__split_fields95; rec__foo__level_0__a2 = black__split_fields96;
  rec__foo__level_0__a3 = black__split_fields97; rec__foo__level_0__a4 =
  black__split_fields98; rec__foo__level_0__a5 = black__split_fields99 } } }
  }, { us_split_fields3 = { rec__foo__level_1__b1 = { us_split_fields1 = {
  rec__foo__level_0__a1 = black__split_fields100; rec__foo__level_0__a2 =
  black__split_fields101; rec__foo__level_0__a3 = black__split_fields102;
  rec__foo__level_0__a4 = black__split_fields103; rec__foo__level_0__a5 =
  black__split_fields104 } }; rec__foo__level_1__b2 = { us_split_fields1 = {
  rec__foo__level_0__a1 = black__split_fields105; rec__foo__level_0__a2 =
  black__split_fields106; rec__foo__level_0__a3 = black__split_fields107;
  rec__foo__level_0__a4 = black__split_fields108; rec__foo__level_0__a5 =
  black__split_fields109 } }; rec__foo__level_1__b3 = { us_split_fields1 = {
  rec__foo__level_0__a1 = black__split_fields110; rec__foo__level_0__a2 =
  black__split_fields111; rec__foo__level_0__a3 = black__split_fields112;
  rec__foo__level_0__a4 = black__split_fields113; rec__foo__level_0__a5 =
  black__split_fields114 } }; rec__foo__level_1__b4 = { us_split_fields1 = {
  rec__foo__level_0__a1 = black__split_fields115; rec__foo__level_0__a2 =
  black__split_fields116; rec__foo__level_0__a3 = black__split_fields117;
  rec__foo__level_0__a4 = black__split_fields118; rec__foo__level_0__a5 =
  black__split_fields119 } } } }) = true)

 (* File "foo.ads", line 18, characters 0-0 *)
goal WP_parameter_def : (invariant__({ us_split_fields3 = {
  rec__foo__level_1__b1 = { us_split_fields1 = { rec__foo__level_0__a1 =
  red__split_fields60; rec__foo__level_0__a2 = red__split_fields61;
  rec__foo__level_0__a3 = red__split_fields62; rec__foo__level_0__a4 =
  red__split_fields63; rec__foo__level_0__a5 = red__split_fields64 } };
  rec__foo__level_1__b2 = { us_split_fields1 = { rec__foo__level_0__a1 =
  red__split_fields65; rec__foo__level_0__a2 = red__split_fields66;
  rec__foo__level_0__a3 = red__split_fields67; rec__foo__level_0__a4 =
  red__split_fields68; rec__foo__level_0__a5 = red__split_fields69 } };
  rec__foo__level_1__b3 = { us_split_fields1 = { rec__foo__level_0__a1 =
  red__split_fields70; rec__foo__level_0__a2 = red__split_fields71;
  rec__foo__level_0__a3 = red__split_fields72; rec__foo__level_0__a4 =
  red__split_fields73; rec__foo__level_0__a5 = red__split_fields74 } };
  rec__foo__level_1__b4 = { us_split_fields1 = { rec__foo__level_0__a1 =
  red__split_fields75; rec__foo__level_0__a2 = red__split_fields76;
  rec__foo__level_0__a3 = red__split_fields77; rec__foo__level_0__a4 =
  red__split_fields78; rec__foo__level_0__a5 = red__split_fields79 } } } }, {
  us_split_fields3 = { rec__foo__level_1__b1 = { us_split_fields1 = {
  rec__foo__level_0__a1 = red__split_fields80; rec__foo__level_0__a2 =
  red__split_fields81; rec__foo__level_0__a3 = red__split_fields82;
  rec__foo__level_0__a4 = red__split_fields83; rec__foo__level_0__a5 =
  red__split_fields84 } }; rec__foo__level_1__b2 = { us_split_fields1 = {
  rec__foo__level_0__a1 = red__split_fields85; rec__foo__level_0__a2 =
  red__split_fields86; rec__foo__level_0__a3 = red__split_fields87;
  rec__foo__level_0__a4 = red__split_fields88; rec__foo__level_0__a5 =
  red__split_fields89 } }; rec__foo__level_1__b3 = { us_split_fields1 = {
  rec__foo__level_0__a1 = red__split_fields90; rec__foo__level_0__a2 =
  red__split_fields91; rec__foo__level_0__a3 = red__split_fields92;
  rec__foo__level_0__a4 = red__split_fields93; rec__foo__level_0__a5 =
  red__split_fields94 } }; rec__foo__level_1__b4 = { us_split_fields1 = {
  rec__foo__level_0__a1 = red__split_fields95; rec__foo__level_0__a2 =
  red__split_fields96; rec__foo__level_0__a3 = red__split_fields97;
  rec__foo__level_0__a4 = red__split_fields98; rec__foo__level_0__a5 =
  red__split_fields99 } } } }, { us_split_fields3 = { rec__foo__level_1__b1 =
  { us_split_fields1 = { rec__foo__level_0__a1 = red__split_fields100;
  rec__foo__level_0__a2 = red__split_fields101; rec__foo__level_0__a3 =
  red__split_fields102; rec__foo__level_0__a4 = red__split_fields103;
  rec__foo__level_0__a5 = red__split_fields104 } }; rec__foo__level_1__b2 = {
  us_split_fields1 = { rec__foo__level_0__a1 = red__split_fields105;
  rec__foo__level_0__a2 = red__split_fields106; rec__foo__level_0__a3 =
  red__split_fields107; rec__foo__level_0__a4 = red__split_fields108;
  rec__foo__level_0__a5 = red__split_fields109 } }; rec__foo__level_1__b3 = {
  us_split_fields1 = { rec__foo__level_0__a1 = red__split_fields110;
  rec__foo__level_0__a2 = red__split_fields111; rec__foo__level_0__a3 =
  red__split_fields112; rec__foo__level_0__a4 = red__split_fields113;
  rec__foo__level_0__a5 = red__split_fields114 } }; rec__foo__level_1__b4 = {
  us_split_fields1 = { rec__foo__level_0__a1 = red__split_fields115;
  rec__foo__level_0__a2 = red__split_fields116; rec__foo__level_0__a3 =
  red__split_fields117; rec__foo__level_0__a4 = red__split_fields118;
  rec__foo__level_0__a5 = red__split_fields119 } } } }) = true)
