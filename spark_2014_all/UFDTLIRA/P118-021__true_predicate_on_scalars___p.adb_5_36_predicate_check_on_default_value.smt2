(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort t_bool 0)
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (t_bool t_bool) Bool)
(declare-const dummy t_bool)
(declare-datatypes () ((t_bool__ref (mk_t_bool__ref (t_bool__content t_bool)))))
(define-fun t_bool__ref___projection ((a t_bool__ref)) t_bool (t_bool__content a))
(define-fun dynamic_invariant ((temp___expr_207 Int) (temp___is_init_203 Bool) (temp___skip_constant_204 Bool) (temp___do_toplevel_205 Bool) (temp___do_typ_inv_206 Bool)) Bool (and (=> (or (= temp___is_init_203 true) (<= 0 1)) (in_range temp___expr_207)) (=> (= temp___do_toplevel_205 true) (=> (= temp___is_init_203 true) (and (<= 0 temp___expr_207) (<= temp___expr_207 1))))))
(define-fun dynamic_predicate ((temp___211 Int)) Bool (and (<= 0 temp___211) (<= temp___211 1)))
(declare-sort t_int 0)
(declare-fun t_intqtint (t_int) Int)
(assert (forall ((i t_int)) (and (<= (- 2147483648) (t_intqtint i)) (<= (t_intqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (t_int t_int) Bool)
(declare-const dummy1 t_int)
(declare-datatypes () ((t_int__ref (mk_t_int__ref (t_int__content t_int)))))
(define-fun t_int__ref___projection ((a t_int__ref)) t_int (t_int__content a))
(define-fun dynamic_invariant1 ((temp___expr_217 Int) (temp___is_init_213 Bool) (temp___skip_constant_214 Bool) (temp___do_toplevel_215 Bool) (temp___do_typ_inv_216 Bool)) Bool (and (=> (or (= temp___is_init_213 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_217)) (=> (= temp___do_toplevel_215 true) (=> (= temp___is_init_213 true) (and (<= (- 2147483648) temp___expr_217) (<= temp___expr_217 2147483647))))))
(define-fun dynamic_predicate1 ((temp___221 Int)) Bool (and (<= (- 2147483648) temp___221) (<= temp___221 2147483647)))
(declare-sort t_rec1 0)
(declare-fun user_eq2 (t_rec1 t_rec1) Bool)
(declare-const value__size Int)
(declare-fun object__size (t_rec1) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (t_rec1) Int)
(assert (<= 0 value__size))
(assert (forall ((a t_rec1)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a t_rec1)) (<= 0 (object__alignment a))))
(declare-const dummy2 t_rec1)
(declare-datatypes () ((t_rec1__ref (mk_t_rec1__ref (t_rec1__content t_rec1)))))
(define-fun t_rec1__ref___projection ((a t_rec1__ref)) t_rec1 (t_rec1__content a))
(define-fun dynamic_invariant2 ((temp___expr_227 t_rec1) (temp___is_init_223 Bool) (temp___skip_constant_224 Bool) (temp___do_toplevel_225 Bool) (temp___do_typ_inv_226 Bool)) Bool true)
(define-fun dynamic_predicate2 ((temp___231 t_rec1)) Bool true)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__p__t_rec2__c integer)))))
(define-fun us_split_fields_C__projection ((a us_split_fields)) integer (rec__p__t_rec2__c a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (= (to_rep (rec__p__t_rec2__c (us_split_fields1 a))) (to_rep (rec__p__t_rec2__c (us_split_fields1 b)))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const p__t_rec2__c__first__bit Int)
(declare-const p__t_rec2__c__last__bit Int)
(declare-const p__t_rec2__c__position Int)
(assert (<= 0 p__t_rec2__c__first__bit))
(assert (< p__t_rec2__c__first__bit p__t_rec2__c__last__bit))
(assert (<= 0 p__t_rec2__c__position))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((t_rec2__ref (mk_t_rec2__ref (t_rec2__content us_rep)))))
(define-fun t_rec2__ref___projection ((a t_rec2__ref)) us_rep (t_rec2__content a))
(define-fun dynamic_invariant3 ((temp___expr_237 us_rep) (temp___is_init_233 Bool) (temp___skip_constant_234 Bool) (temp___do_toplevel_235 Bool) (temp___do_typ_inv_236 Bool)) Bool true)
(define-fun dynamic_predicate3 ((temp___242 us_rep)) Bool true)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_invariant4 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range2 temp___expr_18)))
(declare-const b Int)
(declare-const j Int)
(declare-const temp___245 t_rec1)
(assert (dynamic_invariant b false false true true))
(assert (dynamic_invariant1 j false false true true))
(assert (not (dynamic_predicate2 temp___245)))
(check-sat)
(exit)
