(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic attr__ATTRIBUTE_ADDRESS : int

logic h_true : unit -> bool

logic h_true__function_guard : bool, unit -> prop

axiom h_true__post_axiom : true

axiom h_true__def_axiom : (h_true(void) = true)

logic h_x : bool -> bool

logic h_x__function_guard : bool, bool -> prop

axiom h_x__post_axiom : true

axiom h_x__def_axiom :
  (forall p__dummy__B17b__z:bool [h_x(p__dummy__B17b__z)].
  ((h_x(p__dummy__B17b__z) = true) <-> (p__dummy__B17b__z = true)))

logic h_false : unit -> bool

logic h_false__function_guard : bool, unit -> prop

axiom h_false__post_axiom : (not (h_false(void) = true))

axiom h_false__def_axiom : (not (h_false(void) = true))

logic h_y : bool -> bool

logic h_y__function_guard : bool, bool -> prop

axiom h_y__post_axiom :
  (forall p__dummy__B17b__z:bool [h_y(p__dummy__B17b__z)].
  ((h_y(p__dummy__B17b__z) = true) <-> (p__dummy__B17b__z = true)))

axiom h_y__def_axiom :
  (forall p__dummy__B17b__z:bool [h_y(p__dummy__B17b__z)].
  ((h_y(p__dummy__B17b__z) = true) <-> (p__dummy__B17b__z = true)))

logic z : bool

logic o : bool

logic o1 : bool

logic o2 : bool

logic o3 : bool

logic result : bool

logic z1 : bool

logic result1 : bool

logic z2 : bool

logic result2 : bool

logic z3 : bool

logic result3 : bool

logic z4 : bool

axiom H : ((o = h_true(void)) and (o = true))

axiom H1 : (result = z)

axiom H2 : (z1 = o)

axiom H3 : (z1 = true)

axiom H4 : ((o1 = h_x(z1)) and ((o1 = true) <-> (z1 = true)))

axiom H5 : (result1 = z1)

axiom H6 : (z2 = o1)

axiom H7 : (z2 = true)

axiom H8 : ((o2 = h_false(void)) and (not (o2 = true)))

axiom H9 : (result2 = z2)

axiom H10 : (z3 = o2)

axiom H11 : (not (z3 = true))

axiom H12 : ((o3 = h_y(z3)) and ((o3 = true) <-> (z3 = true)))

axiom H13 : (result3 = z3)

axiom H14 : (z4 = o3)

 (* File "p.adb", line 29, characters 0-0 *)
goal WP_parameter_def : (not (z4 = true))
