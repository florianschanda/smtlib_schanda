(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range2 temp___expr_39)))
(declare-fun fibonacci (Int) Int)
(declare-fun fibonacci__function_guard (Int Int) Bool)
(assert (forall ((n Int)) (! (=> (and (dynamic_invariant n true true true true) (<= n 23)) (dynamic_invariant (fibonacci n) true false true true)) :pattern ((fibonacci n)))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-const n1 Int)
(declare-const n2 Int)
(declare-const l1 Int)
(declare-const l2 Int)
(declare-const a1 Int)
(declare-const a2 Int)
(declare-const b1 Int)
(declare-const b2 Int)
(declare-const i Int)
(declare-const copy_n1 Int)
(declare-const copy_n2 Int)
(declare-const temp___188 Int)
(declare-const temp___187 Int)
(declare-const temp___186 Int)
(declare-const temp___185 Int)
(declare-const temp___189 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const temp___193 Int)
(declare-const temp___192 Int)
(declare-const temp___191 Int)
(declare-const temp___190 Int)
(declare-const temp___194 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const n11 Int)
(declare-const n21 Int)
(declare-const result Int)
(declare-const copy_n11 Int)
(declare-const result1 Int)
(declare-const copy_n21 Int)
(declare-const result2 Int)
(declare-const a11 Int)
(declare-const result3 Int)
(declare-const a21 Int)
(declare-const result4 Int)
(declare-const b11 Int)
(declare-const result5 Int)
(declare-const b21 Int)
(declare-const result6 Int)
(declare-const i1 Int)
(declare-const n12 Int)
(declare-const a12 Int)
(declare-const b12 Int)
(declare-const i2 Int)
(declare-const temp___1891 Int)
(declare-const result7 Int)
(declare-const temp___1892 Int)
(declare-const result8 int__ref)
(declare-const a13 Int)
(declare-const result9 int__ref)
(declare-const b13 Int)
(declare-const result10 int__ref)
(declare-const n13 Int)
(declare-const result11 int__ref)
(declare-const i3 Int)
(declare-const n14 int__ref)
(declare-const a14 int__ref)
(declare-const b14 int__ref)
(declare-const i4 int__ref)
(declare-const n15 Int)
(declare-const a15 Int)
(declare-const b15 Int)
(declare-const i5 Int)
(declare-const n16 int__ref)
(declare-const a16 int__ref)
(declare-const b16 int__ref)
(declare-const i6 int__ref)
(declare-const n17 Int)
(declare-const a17 Int)
(declare-const b17 Int)
(declare-const i7 Int)
(declare-const result12 int__ref)
(declare-const i8 Int)
(declare-const n22 Int)
(declare-const a22 Int)
(declare-const b22 Int)
(declare-const i9 Int)
(declare-const temp___1941 Int)
(declare-const result13 int__ref)
(declare-const temp___1942 Int)
(declare-const result14 int__ref)
(declare-const a23 Int)
(declare-const result15 int__ref)
(declare-const b23 Int)
(declare-const result16 int__ref)
(declare-const n23 Int)
(declare-const result17 int__ref)
(declare-const i10 Int)
(declare-const n24 int__ref)
(declare-const a24 int__ref)
(declare-const b24 int__ref)
(declare-const i11 int__ref)
(declare-const n25 Int)
(declare-const a25 Int)
(declare-const b25 Int)
(declare-const i12 Int)
(declare-const n26 int__ref)
(declare-const a26 int__ref)
(declare-const b26 int__ref)
(declare-const i13 int__ref)
(declare-const n27 Int)
(declare-const a27 Int)
(declare-const b27 Int)
(declare-const i14 Int)
(declare-const result18 int__ref)
(declare-const l11 Int)
(declare-const result19 int__ref)
(declare-const l12 Int)
(declare-const l13 int__ref)
(declare-const l14 Int)
(declare-const result20 int__ref)
(declare-const l21 Int)
(declare-const result21 int__ref)
(declare-const l22 Int)
(declare-const l23 int__ref)
(declare-const l24 Int)
(declare-const n18 int__ref)
(declare-const n28 int__ref)
(declare-const l15 int__ref)
(declare-const l25 int__ref)
(declare-const a18 int__ref)
(declare-const a28 int__ref)
(declare-const b18 int__ref)
(declare-const b28 int__ref)
(declare-const i15 int__ref)
(declare-const copy_n12 int__ref)
(declare-const copy_n22 int__ref)
(declare-const n19 Int)
(declare-const n29 Int)
(declare-const l16 Int)
(declare-const l26 Int)
(declare-const a19 Int)
(declare-const a29 Int)
(declare-const b19 Int)
(declare-const b29 Int)
(declare-const i16 Int)
(declare-const copy_n13 Int)
(declare-const copy_n23 Int)
(define-fun l27 () int__ref (mk_int__ref l2))
(define-fun l17 () int__ref (mk_int__ref l1))
(assert (in_range2 n1))
(assert (in_range2 n2))
(assert (in_range2 l1))
(assert (in_range2 l2))
(assert (and (= n1 n2) (and (= l1 l2) (<= n1 23))))
(assert (=> (<= 0 2147483647) (in_range2 a1)))
(assert (=> (<= 0 2147483647) (in_range2 a2)))
(assert (=> (<= 0 2147483647) (in_range2 b1)))
(assert (=> (<= 0 2147483647) (in_range2 b2)))
(assert (=> (<= 0 2147483647) (in_range2 i)))
(assert (=> (<= 0 2147483647) (in_range2 copy_n1)))
(assert (=> (<= 0 2147483647) (in_range2 copy_n2)))
(assert (= (mk_int__ref result) (mk_int__ref copy_n1)))
(assert (= copy_n11 n1))
(assert (= (mk_int__ref result1) (mk_int__ref copy_n2)))
(assert (= copy_n21 n2))
(assert (= (mk_int__ref result2) (mk_int__ref a1)))
(assert (= a11 1))
(assert (= (mk_int__ref result3) (mk_int__ref a2)))
(assert (= a21 1))
(assert (= (mk_int__ref result4) (mk_int__ref b1)))
(assert (= b11 1))
(assert (= (mk_int__ref result5) (mk_int__ref b2)))
(assert (= b21 1))
(assert (= (mk_int__ref result6) (mk_int__ref i)))
(assert (= i1 2))
(assert (=> (< 2 n1) (= temp___188 i1)))
(assert (=> (< 2 n1) (= temp___187 b11)))
(assert (=> (< 2 n1) (= temp___186 n1)))
(assert (=> (< 2 n1) (= temp___185 a11)))
(assert (=> (< 2 n1) (= 0 temp___189)))
(assert (=> (< 2 n1) (and (and (and (= a12 (fibonacci i2)) (= b12 (fibonacci (- i2 1)))) (<= i2 23)) (= (- (+ n12 i2) 2) copy_n11))))
(assert (=> (< 2 n1) (and (and (and (and (=> (<= 0 2147483647) (in_range2 a12)) (in_range2 n12)) (=> (<= 0 2147483647) (in_range2 b12))) (=> (<= 0 2147483647) (in_range2 i2))) (< 2 n12))))
(assert (=> (< 2 n1) (= temp___1891 result7)))
(assert (=> (< 2 n1) (= temp___1892 n12)))
(assert (=> (< 2 n1) (and (= o (+ a12 b12)) (in_range1 (+ a12 b12)))))
(assert (=> (< 2 n1) (= result8 (mk_int__ref a12))))
(assert (=> (< 2 n1) (= a13 o)))
(assert (=> (< 2 n1) (and (= o1 (- a13 b12)) (in_range1 (- a13 b12)))))
(assert (=> (< 2 n1) (and (= o2 o1) (in_range2 o1))))
(assert (=> (< 2 n1) (= result9 (mk_int__ref b12))))
(assert (=> (< 2 n1) (= b13 o2)))
(assert (=> (< 2 n1) (and (= o3 (- n12 1)) (in_range2 (- n12 1)))))
(assert (=> (< 2 n1) (= result10 (mk_int__ref n12))))
(assert (=> (< 2 n1) (= n13 o3)))
(assert (=> (< 2 n1) (and (= o4 (+ i2 1)) (in_range1 (+ i2 1)))))
(assert (=> (< 2 n1) (= result11 (mk_int__ref i2))))
(assert (=> (< 2 n1) (= i3 o4)))
(assert (=> (< 2 n1) (not (< 2 n13))))
(assert (=> (< 2 n1) (= i4 (mk_int__ref i3))))
(assert (=> (< 2 n1) (= b14 (mk_int__ref b13))))
(assert (=> (< 2 n1) (= a14 (mk_int__ref a13))))
(assert (=> (< 2 n1) (= n14 (mk_int__ref n13))))
(assert (=> (< 2 n1) (= i5 i3)))
(assert (=> (< 2 n1) (= b15 b13)))
(assert (=> (< 2 n1) (= a15 a13)))
(assert (=> (< 2 n1) (= n15 n13)))
(assert (=> (< 2 n1) (= i6 i4)))
(assert (=> (< 2 n1) (= b16 b14)))
(assert (=> (< 2 n1) (= a16 a14)))
(assert (=> (< 2 n1) (= n16 n14)))
(assert (=> (< 2 n1) (= i7 i5)))
(assert (=> (< 2 n1) (= b17 b15)))
(assert (=> (< 2 n1) (= a17 a15)))
(assert (=> (< 2 n1) (= n17 n15)))
(assert (=> (not (< 2 n1)) (= i6 (mk_int__ref i1))))
(assert (=> (not (< 2 n1)) (= b16 (mk_int__ref b11))))
(assert (=> (not (< 2 n1)) (= a16 (mk_int__ref a11))))
(assert (=> (not (< 2 n1)) (= n16 (mk_int__ref n1))))
(assert (=> (not (< 2 n1)) (= i7 i1)))
(assert (=> (not (< 2 n1)) (= b17 b11)))
(assert (=> (not (< 2 n1)) (= a17 a11)))
(assert (=> (not (< 2 n1)) (= n17 n11)))
(assert (= result12 i6))
(assert (= i8 2))
(assert (=> (< 2 n2) (= temp___193 i8)))
(assert (=> (< 2 n2) (= temp___192 b21)))
(assert (=> (< 2 n2) (= temp___191 n2)))
(assert (=> (< 2 n2) (= temp___190 a21)))
(assert (=> (< 2 n2) (= 0 temp___194)))
(assert (=> (< 2 n2) (and (and (and (= a22 (fibonacci i9)) (= b22 (fibonacci (- i9 1)))) (<= i9 23)) (= (- (+ n22 i9) 2) copy_n21))))
(assert (=> (< 2 n2) (and (and (and (and (=> (<= 0 2147483647) (in_range2 a22)) (in_range2 n22)) (=> (<= 0 2147483647) (in_range2 b22))) (=> (<= 0 2147483647) (in_range2 i9))) (< 2 n22))))
(assert (=> (< 2 n2) (= result13 (mk_int__ref temp___1941))))
(assert (=> (< 2 n2) (= temp___1942 n22)))
(assert (=> (< 2 n2) (and (= o5 (+ a22 b22)) (in_range1 (+ a22 b22)))))
(assert (=> (< 2 n2) (= result14 (mk_int__ref a22))))
(assert (=> (< 2 n2) (= a23 o5)))
(assert (=> (< 2 n2) (and (= o6 (- a23 b22)) (in_range1 (- a23 b22)))))
(assert (=> (< 2 n2) (and (= o7 o6) (in_range2 o6))))
(assert (=> (< 2 n2) (= result15 (mk_int__ref b22))))
(assert (=> (< 2 n2) (= b23 o7)))
(assert (=> (< 2 n2) (and (= o8 (- n22 1)) (in_range2 (- n22 1)))))
(assert (=> (< 2 n2) (= result16 (mk_int__ref n22))))
(assert (=> (< 2 n2) (= n23 o8)))
(assert (=> (< 2 n2) (and (= o9 (+ i9 1)) (in_range1 (+ i9 1)))))
(assert (=> (< 2 n2) (= result17 (mk_int__ref i9))))
(assert (=> (< 2 n2) (= i10 o9)))
(assert (=> (< 2 n2) (not (< 2 n23))))
(assert (=> (< 2 n2) (= i11 (mk_int__ref i10))))
(assert (=> (< 2 n2) (= b24 (mk_int__ref b23))))
(assert (=> (< 2 n2) (= a24 (mk_int__ref a23))))
(assert (=> (< 2 n2) (= n24 (mk_int__ref n23))))
(assert (=> (< 2 n2) (= i12 i10)))
(assert (=> (< 2 n2) (= b25 b23)))
(assert (=> (< 2 n2) (= a25 a23)))
(assert (=> (< 2 n2) (= n25 n23)))
(assert (=> (< 2 n2) (= i13 i11)))
(assert (=> (< 2 n2) (= b26 b24)))
(assert (=> (< 2 n2) (= a26 a24)))
(assert (=> (< 2 n2) (= n26 n24)))
(assert (=> (< 2 n2) (= i14 i12)))
(assert (=> (< 2 n2) (= b27 b25)))
(assert (=> (< 2 n2) (= a27 a25)))
(assert (=> (< 2 n2) (= n27 n25)))
(assert (=> (not (< 2 n2)) (= i13 (mk_int__ref i8))))
(assert (=> (not (< 2 n2)) (= b26 (mk_int__ref b21))))
(assert (=> (not (< 2 n2)) (= a26 (mk_int__ref a21))))
(assert (=> (not (< 2 n2)) (= n26 (mk_int__ref n2))))
(assert (=> (not (< 2 n2)) (= i14 i8)))
(assert (=> (not (< 2 n2)) (= b27 b21)))
(assert (=> (not (< 2 n2)) (= a27 a21)))
(assert (=> (not (< 2 n2)) (= n27 n21)))
(assert (=> (< l1 (int__content a16)) (= result18 l17)))
(assert (=> (< l1 (int__content a16)) (= l11 (int__content a16))))
(assert (=> (< l1 (int__content a16)) (= l13 (mk_int__ref l11))))
(assert (=> (< l1 (int__content a16)) (= l14 l11)))
(assert (=> (not (< l1 (int__content a16))) (= result19 l17)))
(assert (=> (not (< l1 (int__content a16))) (= l12 0)))
(assert (=> (not (< l1 (int__content a16))) (= l13 (mk_int__ref l12))))
(assert (=> (not (< l1 (int__content a16))) (= l14 l12)))
(assert (=> (< l2 (int__content a26)) (= result20 l27)))
(assert (=> (< l2 (int__content a26)) (= l21 (int__content a26))))
(assert (=> (< l2 (int__content a26)) (= l23 (mk_int__ref l21))))
(assert (=> (< l2 (int__content a26)) (= l24 l21)))
(assert (=> (not (< l2 (int__content a26))) (= result21 l27)))
(assert (=> (not (< l2 (int__content a26))) (= l22 0)))
(assert (=> (not (< l2 (int__content a26))) (= l23 (mk_int__ref l22))))
(assert (=> (not (< l2 (int__content a26))) (= l24 l22)))
(assert (= copy_n22 (mk_int__ref copy_n21)))
(assert (= copy_n12 (mk_int__ref copy_n11)))
(assert (= i15 i13))
(assert (= b28 b26))
(assert (= b18 b16))
(assert (= a28 a26))
(assert (= a18 a16))
(assert (= l25 l23))
(assert (= l15 l13))
(assert (= n28 n26))
(assert (= n18 n16))
(assert (= copy_n23 copy_n21))
(assert (= copy_n13 copy_n11))
(assert (= i16 i14))
(assert (= b29 b27))
(assert (= b19 b17))
(assert (= a29 a27))
(assert (= a19 a17))
(assert (= l26 l24))
(assert (= l16 l14))
(assert (= n29 n27))
(assert (= n19 n17))
(assert (not (= (int__content l15) (int__content l25))))
(check-sat)
(exit)
