(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort capacity_range 0)
(declare-fun capacity_rangeqtint (capacity_range) Int)
(assert (forall ((i capacity_range)) (and (<= 0 (capacity_rangeqtint i)) (<= (capacity_rangeqtint i) 1000))))
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 1000)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (capacity_range capacity_range) Bool)
(declare-const dummy capacity_range)
(declare-datatypes () ((capacity_range__ref (mk_capacity_range__ref (capacity_range__content capacity_range)))))
(define-fun capacity_range__ref___projection ((a capacity_range__ref)) capacity_range (capacity_range__content a))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__loop_types__vectors__vector__capacity capacity_range)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) capacity_range (rec__loop_types__vectors__vector__capacity a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__loop_types__vectors__vector us_main_type)))))
(define-fun us_split_fields_Vector__projection ((a us_split_fields)) us_main_type (rec__loop_types__vectors__vector a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const loop_types__vectors__vector__capacity__first__bit Int)
(declare-const loop_types__vectors__vector__capacity__last__bit Int)
(declare-const loop_types__vectors__vector__capacity__position Int)
(assert (<= 0 loop_types__vectors__vector__capacity__first__bit))
(assert (< loop_types__vectors__vector__capacity__first__bit loop_types__vectors__vector__capacity__last__bit))
(assert (<= 0 loop_types__vectors__vector__capacity__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((vector__ref (mk_vector__ref (vector__content us_rep)))))
(define-fun vector__ref___projection ((a vector__ref)) us_rep (vector__content a))
(declare-sort us_main_type1 0)
(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)
(declare-sort us_rep1 0)
(declare-fun bool_eq (us_rep1 us_rep1) Bool)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-fun user_eq2 (us_rep1 us_rep1) Bool)
(declare-const dummy2 us_rep1)
(declare-datatypes () ((sequence__ref (mk_sequence__ref (sequence__content us_rep1)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep1 (sequence__content a))
(declare-fun length (us_rep1) Int)
(declare-fun length__function_guard (Int us_rep1) Bool)
(define-fun last ((container us_rep1)) Int (+ 0 (length container)))
(declare-fun last__function_guard (Int us_rep1) Bool)
(declare-fun model__ (us_rep) us_rep1)
(declare-fun model____function_guard (us_rep1 us_rep) Bool)
(define-fun last_index ((container us_rep)) Int (last (model__ container)))
(declare-fun last_index__function_guard (Int us_rep) Bool)
(declare-sort extended_index 0)
(declare-fun extended_indexqtint (extended_index) Int)
(assert (forall ((i extended_index)) (and (<= 0 (extended_indexqtint i)) (<= (extended_indexqtint i) 1001))))
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 1001)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq3 (extended_index extended_index) Bool)
(declare-const dummy3 extended_index)
(declare-datatypes () ((extended_index__ref (mk_extended_index__ref (extended_index__content extended_index)))))
(define-fun extended_index__ref___projection ((a extended_index__ref)) extended_index (extended_index__content a))
(define-fun dynamic_invariant ((temp___expr_253 Int) (temp___is_init_249 Bool) (temp___skip_constant_250 Bool) (temp___do_toplevel_251 Bool) (temp___do_typ_inv_252 Bool)) Bool (=> (or (= temp___is_init_249 true) (<= 0 1001)) (in_range2 temp___expr_253)))
(declare-fun first_index__function_guard (Int us_rep) Bool)
(declare-sort index_type 0)
(declare-fun index_typeqtint (index_type) Int)
(assert (forall ((i index_type)) (and (<= 1 (index_typeqtint i)) (<= (index_typeqtint i) 1000))))
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 1000)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq4 (index_type index_type) Bool)
(declare-const dummy4 index_type)
(declare-datatypes () ((index_type__ref (mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref___projection ((a index_type__ref)) index_type (index_type__content a))
(define-fun dynamic_invariant1 ((temp___expr_239 Int) (temp___is_init_235 Bool) (temp___skip_constant_236 Bool) (temp___do_toplevel_237 Bool) (temp___do_typ_inv_238 Bool)) Bool (=> (or (= temp___is_init_235 true) (<= 1 1000)) (in_range3 temp___expr_239)))
(declare-fun get (us_rep1 Int) Int)
(declare-fun get__function_guard (Int us_rep1 Int) Bool)
(define-fun element ((container us_rep) (index Int)) Int (get (model__ container) index))
(declare-fun element__function_guard (Int us_rep Int) Bool)
(declare-sort element_type 0)
(declare-fun element_typeqtint (element_type) Int)
(assert (forall ((i element_type)) (and (<= 0 (element_typeqtint i)) (<= (element_typeqtint i) 2147483647))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (element_type element_type) Bool)
(declare-const dummy5 element_type)
(declare-datatypes () ((element_type__ref (mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___projection ((a element_type__ref)) element_type (element_type__content a))
(define-fun dynamic_invariant2 ((temp___expr_246 Int) (temp___is_init_242 Bool) (temp___skip_constant_243 Bool) (temp___do_toplevel_244 Bool) (temp___do_typ_inv_245 Bool)) Bool (=> (or (= temp___is_init_242 true) (<= 0 2147483647)) (in_range4 temp___expr_246)))
(declare-fun length1 (us_rep) Int)
(declare-fun length__function_guard1 (Int us_rep) Bool)
(define-fun equal_except ((left us_rep1) (right us_rep1) (position Int)) Bool (and (= (length left) (length right)) (ite (forall ((i Int)) (=> (and (<= 1 i) (<= i (last left))) (=> (not (= i position)) (= (get left i) (get right i))))) true false)))
(declare-fun equal_except__function_guard (Bool us_rep1 us_rep1 Int) Bool)
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const loop_types__vectors__vector__capacity__first__bit1 Int)
(declare-const loop_types__vectors__vector__capacity__last__bit1 Int)
(declare-const loop_types__vectors__vector__capacity__position1 Int)
(assert (<= 0 loop_types__vectors__vector__capacity__first__bit1))
(assert (< loop_types__vectors__vector__capacity__first__bit1 loop_types__vectors__vector__capacity__last__bit1))
(assert (<= 0 loop_types__vectors__vector__capacity__position1))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((vec_t__ref (mk_vec_t__ref (vec_t__content us_rep)))))
(define-fun vec_t__ref___projection ((a vec_t__ref)) us_rep (vec_t__content a))
(declare-const v__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const r4b Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const r5b Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range5 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq7 (integer integer) Bool)
(declare-const dummy7 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range5 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content integer)))))
(define-fun t6b__ref___projection ((a t6b__ref)) integer (t6b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range5 temp___expr_18)))
(declare-sort count_type 0)
(declare-fun count_typeqtint (count_type) Int)
(assert (forall ((i count_type)) (and (<= 0 (count_typeqtint i)) (<= (count_typeqtint i) 2147483647))))
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (count_type count_type) Bool)
(declare-const dummy9 count_type)
(declare-datatypes () ((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type (count_type__content a))
(define-fun dynamic_invariant4 ((temp___expr_166 Int) (temp___is_init_162 Bool) (temp___skip_constant_163 Bool) (temp___do_toplevel_164 Bool) (temp___do_typ_inv_165 Bool)) Bool (=> (or (= temp___is_init_162 true) (<= 0 2147483647)) (in_range6 temp___expr_166)))
(define-fun dynamic_invariant5 ((temp___expr_260 Int) (temp___is_init_256 Bool) (temp___skip_constant_257 Bool) (temp___do_toplevel_258 Bool) (temp___do_typ_inv_259 Bool)) Bool (=> (or (= temp___is_init_256 true) (<= 0 1000)) (in_range1 temp___expr_260)))
(define-fun to_rep1 ((x capacity_range)) Int (capacity_rangeqtint x))
(declare-fun of_rep1 (Int) capacity_range)
(assert (forall ((x capacity_range)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x capacity_range)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun capacity ((container us_rep)) Int (ite (= (distinct 1 0) true) (to_rep1 (rec__loop_types__vectors__vector__capacity (us_split_discrs1 container))) 1000))
(declare-fun capacity__function_guard (Int us_rep) Bool)
(assert (forall ((container us_rep)) (! (let ((result (length1 container))) (and (<= result (capacity container)) (dynamic_invariant5 result true false true true))) :pattern ((length1 container)))))
(define-fun oeq ((left us_rep1) (right us_rep1)) Bool (and (= (length left) (length right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun oeq__function_guard (Bool us_rep1 us_rep1) Bool)
(assert (forall ((a us_rep1) (b us_rep1)) (! (= (user_eq2 a b) (oeq a b)) :pattern ((user_eq2 a b)))))
(define-fun default_initial_assumption ((temp___expr_299 us_rep1) (temp___skip_top_level_300 Bool)) Bool (=> (not (= temp___skip_top_level_300 true)) (= (length temp___expr_299) 0)))
(assert (forall ((container us_rep)) (! (= (length (model__ container)) (length1 container)) :pattern ((model__ container)))))
(declare-sort extended_index1 0)
(declare-fun extended_indexqtint1 (extended_index1) Int)
(assert (forall ((i extended_index1)) (and (<= 0 (extended_indexqtint1 i)) (<= (extended_indexqtint1 i) 1000))))
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 1000)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq10 (extended_index1 extended_index1) Bool)
(declare-const dummy10 extended_index1)
(declare-datatypes () ((extended_index__ref1 (mk_extended_index__ref1 (extended_index__content1 extended_index1)))))
(define-fun extended_index__ref___2__projection ((a extended_index__ref1)) extended_index1 (extended_index__content1 a))
(define-fun dynamic_invariant6 ((temp___expr_291 Int) (temp___is_init_287 Bool) (temp___skip_constant_288 Bool) (temp___do_toplevel_289 Bool) (temp___do_typ_inv_290 Bool)) Bool (=> (or (= temp___is_init_287 true) (<= 0 1000)) (in_range7 temp___expr_291)))
(assert (forall ((container us_rep1)) (! (let ((result (length container))) (and (<= (+ 0 result) 1000) (dynamic_invariant4 result true false true true))) :pattern ((length container)))))
(declare-sort element_type1 0)
(declare-fun element_typeqtint1 (element_type1) Int)
(assert (forall ((i element_type1)) (and (<= 0 (element_typeqtint1 i)) (<= (element_typeqtint1 i) 2147483647))))
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq11 (element_type1 element_type1) Bool)
(declare-const dummy11 element_type1)
(declare-datatypes () ((element_type__ref1 (mk_element_type__ref1 (element_type__content1 element_type1)))))
(define-fun element_type__ref___2__projection ((a element_type__ref1)) element_type1 (element_type__content1 a))
(define-fun dynamic_invariant7 ((temp___expr_284 Int) (temp___is_init_280 Bool) (temp___skip_constant_281 Bool) (temp___do_toplevel_282 Bool) (temp___do_typ_inv_283 Bool)) Bool (=> (or (= temp___is_init_280 true) (<= 0 2147483647)) (in_range8 temp___expr_284)))
(assert (forall ((container us_rep1)) (forall ((position Int)) (! (=> (and (dynamic_invariant6 position true true true true) (and (<= 1 position) (<= position (last container)))) (dynamic_invariant7 (get container position) true false true true)) :pattern ((get container position))))))
(declare-const v__split_fields us_main_type)
(declare-const j Int)
(declare-const init_vec_zero__L_1__R4b__assume Int)
(declare-const init_vec_zero__L_1__R5b__assume Int)
(declare-const temp___587 Int)
(declare-const temp___588 Int)
(declare-const temp___586 capacity_range)
(declare-const temp___5861 us_main_type)
(declare-const o Int)
(declare-const j1 Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Bool)
(declare-const o4 Bool)
(declare-const o5 Int)
(declare-const v__split_fields1 us_main_type)
(declare-const result Int)
(declare-const j2 Int)
(declare-const loop_types__vectors__replace_element__container__fields us_main_type)
(declare-const result1 us_main_type)
(declare-const v__split_fields2 us_main_type)
(declare-const v__split_fields3 us_main_type)
(declare-const j3 Int)
(declare-const v__split_fields4 us_split_fields__ref)
(declare-const j4 int__ref)
(declare-const v__split_fields5 us_split_fields)
(declare-const j5 Int)
(declare-const v__split_fields6 us_split_fields__ref)
(declare-const j6 int__ref)
(declare-const v__split_fields7 us_split_fields)
(declare-const j7 Int)
(declare-const v__split_fields8 us_split_fields__ref)
(declare-const j8 int__ref)
(declare-const v__split_fields9 us_split_fields)
(declare-const j9 Int)
(declare-const result2 Bool)
(define-fun v__split_fields10 () us_split_fields (mk___split_fields v__split_fields3))
(define-fun loop_types__vectors__replace_element__container__fields1 () us_split_fields (mk___split_fields loop_types__vectors__replace_element__container__fields))
(define-fun v__split_fields11 () us_split_fields__ref (mk___split_fields__ref (mk___split_fields v__split_fields)))
(assert (and (= init_vec_zero__L_1__R4b__assume 1) (and (in_range3 init_vec_zero__L_1__R4b__assume) (= init_vec_zero__L_1__R4b__assume 1))))
(assert (= init_vec_zero__L_1__R4b__assume r4b))
(assert (in_range3 r4b))
(assert (and (= init_vec_zero__L_1__R5b__assume (last (model__ (mk___rep v__split_discrs (mk___split_fields v__split_fields))))) (and (in_range2 init_vec_zero__L_1__R5b__assume) (= init_vec_zero__L_1__R5b__assume (last (model__ (mk___rep v__split_discrs (mk___split_fields v__split_fields))))))))
(assert (= init_vec_zero__L_1__R5b__assume r5b))
(assert (in_range2 r5b))
(assert (= (mk_int__ref result) (mk_int__ref j)))
(assert (= j2 r4b))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= temp___587 j2)))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= temp___588 (last (model__ (mk___rep v__split_discrs (mk___split_fields v__split_fields)))))))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (and (= v__split_discrs (mk___split_discrs temp___586)) (= v__split_fields temp___5861))))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (and (= o j2) (in_range3 j2))))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (and (and (= (length1 (mk___rep v__split_discrs loop_types__vectors__replace_element__container__fields1)) (length1 (mk___rep v__split_discrs (mk___split_fields v__split_fields)))) (= (get (model__ (mk___rep v__split_discrs loop_types__vectors__replace_element__container__fields1)) o) 0)) (= (equal_except (model__ (mk___rep v__split_discrs (mk___split_fields v__split_fields))) (model__ (mk___rep v__split_discrs loop_types__vectors__replace_element__container__fields1)) o) true))))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= (mk___split_fields__ref (mk___split_fields result1)) v__split_fields11)))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= (mk___split_fields v__split_fields2) loop_types__vectors__replace_element__container__fields1)))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= (last (model__ (mk___rep v__split_discrs v__split_fields10))) temp___588)))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (forall ((k Int)) (=> (and (<= 1 k) (<= k j3)) (= (get (model__ (mk___rep v__split_discrs v__split_fields10)) k) 0)))))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (and (=> (<= r4b r5b) (dynamic_property r4b r5b j3)) (and (<= r4b j3) (<= j3 r5b)))))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= j3 r5b)))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= j4 (mk_int__ref j3))))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= v__split_fields4 (mk___split_fields__ref v__split_fields10))))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= j5 j3)))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= v__split_fields5 v__split_fields10)))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= j6 j4)))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= v__split_fields6 v__split_fields4)))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= j7 j5)))
(assert (=> (and (<= r4b j2) (<= j2 r5b)) (= v__split_fields7 v__split_fields5)))
(assert (=> (not (and (<= r4b j2) (<= j2 r5b))) (= j6 (mk_int__ref j2))))
(assert (=> (not (and (<= r4b j2) (<= j2 r5b))) (= v__split_fields6 v__split_fields11)))
(assert (=> (not (and (<= r4b j2) (<= j2 r5b))) (= j7 j2)))
(assert (=> (not (and (<= r4b j2) (<= j2 r5b))) (= v__split_fields7 (mk___split_fields v__split_fields1))))
(assert (= j8 j6))
(assert (= v__split_fields8 v__split_fields6))
(assert (= j9 j7))
(assert (= v__split_fields9 v__split_fields7))
(assert (and (= o2 (last (model__ (mk___rep v__split_discrs (us_split_fields__content v__split_fields8))))) (and (in_range2 o2) (= o2 (last (model__ (mk___rep v__split_discrs (us_split_fields__content v__split_fields8))))))))
(assert (= o3 (ite (<= j1 o2) true false)))
(assert (and (= o1 1) (and (in_range3 o1) (= o1 1))))
(assert (= o4 (ite (<= o1 j1) true false)))
(assert (= result2 (ite (= o4 true) o3 false)))
(assert (= result2 true))
(assert (and (= o5 j1) (in_range3 j1)))
(assert (not (<= 1 o5)))
(check-sat)
(exit)
