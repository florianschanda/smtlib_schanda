(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq1 : int, int -> bool

axiom bool_eq_def :
  (forall x:int. forall y:int [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

logic to_rep : integer -> int

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range(x) ->
  (to_rep(of_rep(x)) = x)))

type natural

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref___projection(a: natural__ref) : natural =
  (a).natural__content

logic to_rep1 : natural -> int

logic of_rep1 : int -> natural

axiom inversion_axiom1 :
  (forall x:natural [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:natural [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type us_split_discrs = { rec__extended_returns__record_t__discr : natural
}

function us_split_discrs___projection(a: us_split_discrs) : natural =
  (a).rec__extended_returns__record_t__discr

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = { rec__extended_returns__record_t__a : integer;
rec__extended_returns__record_t__b : integer;
rec__extended_returns__record_t__c : integer;
rec__extended_returns__record_t__d : integer
}

function us_split_fields_A__projection(a: us_split_fields) : integer =
  (a).rec__extended_returns__record_t__a

function us_split_fields_B__projection(a: us_split_fields) : integer =
  (a).rec__extended_returns__record_t__b

function us_split_fields_C__projection(a: us_split_fields) : integer =
  (a).rec__extended_returns__record_t__c

function us_split_fields_D__projection(a: us_split_fields) : integer =
  (a).rec__extended_returns__record_t__d

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields; attr__constrained : bool
}

function us_rep___projection(a: us_rep) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___2__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function us_rep___3__projection(a: us_rep) : bool = (a).attr__constrained

predicate extended_returns__record_t__b__pred(a: us_rep) =
  (to_rep1(((a).us_split_discrs1).rec__extended_returns__record_t__discr) = 0)

predicate extended_returns__record_t__c__pred(a: us_rep) =
  (to_rep1(((a).us_split_discrs1).rec__extended_returns__record_t__discr) = 1)

predicate extended_returns__record_t__d__pred(a: us_rep) =
  (to_rep1(((a).us_split_discrs1).rec__extended_returns__record_t__discr) = 1)

logic bool_eq3 : us_rep, us_rep -> bool

axiom bool_eq_def2 :
  (forall a:us_rep. forall b:us_rep [bool_eq3(a, b)].
  ((((to_rep1(((a).us_split_discrs1).rec__extended_returns__record_t__discr) = to_rep1(((b).us_split_discrs1).rec__extended_returns__record_t__discr)) and
  ((((to_rep(((a).us_split_fields1).rec__extended_returns__record_t__a) = to_rep(((b).us_split_fields1).rec__extended_returns__record_t__a)) and
  (extended_returns__record_t__b__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__extended_returns__record_t__b) = to_rep(((b).us_split_fields1).rec__extended_returns__record_t__b)))) and
  (extended_returns__record_t__c__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__extended_returns__record_t__c) = to_rep(((b).us_split_fields1).rec__extended_returns__record_t__c)))) and
  (extended_returns__record_t__d__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__extended_returns__record_t__d) = to_rep(((b).us_split_fields1).rec__extended_returns__record_t__d))))) ->
  (bool_eq3(a, b) = true)) and
  ((not ((to_rep1(((a).us_split_discrs1).rec__extended_returns__record_t__discr) = to_rep1(((b).us_split_discrs1).rec__extended_returns__record_t__discr)) and
  ((((to_rep(((a).us_split_fields1).rec__extended_returns__record_t__a) = to_rep(((b).us_split_fields1).rec__extended_returns__record_t__a)) and
  (extended_returns__record_t__b__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__extended_returns__record_t__b) = to_rep(((b).us_split_fields1).rec__extended_returns__record_t__b)))) and
  (extended_returns__record_t__c__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__extended_returns__record_t__c) = to_rep(((b).us_split_fields1).rec__extended_returns__record_t__c)))) and
  (extended_returns__record_t__d__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__extended_returns__record_t__d) = to_rep(((b).us_split_fields1).rec__extended_returns__record_t__d)))))) ->
  (bool_eq3(a, b) = false))))

logic value__size : int

logic object__size : us_rep -> int

logic value__alignment : int

logic object__alignment : us_rep -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:natural. forall a1:integer. forall a2:integer. forall a3:integer.
  forall a4:integer. forall a5:bool. (0 <= object__size({ us_split_discrs1 =
  { rec__extended_returns__record_t__discr = a }; us_split_fields1 = {
  rec__extended_returns__record_t__a = a1;
  rec__extended_returns__record_t__b = a2;
  rec__extended_returns__record_t__c = a3;
  rec__extended_returns__record_t__d = a4 }; attr__constrained = a5 })))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:natural. forall a1:integer. forall a2:integer. forall a3:integer.
  forall a4:integer. forall a5:bool. (0 <= object__alignment({
  us_split_discrs1 = { rec__extended_returns__record_t__discr = a };
  us_split_fields1 = { rec__extended_returns__record_t__a = a1;
  rec__extended_returns__record_t__b = a2;
  rec__extended_returns__record_t__c = a3;
  rec__extended_returns__record_t__d = a4 }; attr__constrained = a5 })))

logic extended_returns__record_t__discr__first__bit : int

logic extended_returns__record_t__discr__last__bit : int

logic extended_returns__record_t__discr__position : int

axiom extended_returns__record_t__discr__first__bit_axiom :
  (0 <= extended_returns__record_t__discr__first__bit)

axiom extended_returns__record_t__discr__last__bit_axiom :
  (extended_returns__record_t__discr__first__bit <  extended_returns__record_t__discr__last__bit)

axiom extended_returns__record_t__discr__position_axiom :
  (0 <= extended_returns__record_t__discr__position)

logic extended_returns__record_t__a__first__bit : int

logic extended_returns__record_t__a__last__bit : int

logic extended_returns__record_t__a__position : int

axiom extended_returns__record_t__a__first__bit_axiom :
  (0 <= extended_returns__record_t__a__first__bit)

axiom extended_returns__record_t__a__last__bit_axiom :
  (extended_returns__record_t__a__first__bit <  extended_returns__record_t__a__last__bit)

axiom extended_returns__record_t__a__position_axiom :
  (0 <= extended_returns__record_t__a__position)

logic extended_returns__record_t__b__first__bit : int

logic extended_returns__record_t__b__last__bit : int

logic extended_returns__record_t__b__position : int

axiom extended_returns__record_t__b__first__bit_axiom :
  (0 <= extended_returns__record_t__b__first__bit)

axiom extended_returns__record_t__b__last__bit_axiom :
  (extended_returns__record_t__b__first__bit <  extended_returns__record_t__b__last__bit)

axiom extended_returns__record_t__b__position_axiom :
  (0 <= extended_returns__record_t__b__position)

logic extended_returns__record_t__c__first__bit : int

logic extended_returns__record_t__c__last__bit : int

logic extended_returns__record_t__c__position : int

axiom extended_returns__record_t__c__first__bit_axiom :
  (0 <= extended_returns__record_t__c__first__bit)

axiom extended_returns__record_t__c__last__bit_axiom :
  (extended_returns__record_t__c__first__bit <  extended_returns__record_t__c__last__bit)

axiom extended_returns__record_t__c__position_axiom :
  (0 <= extended_returns__record_t__c__position)

logic extended_returns__record_t__d__first__bit : int

logic extended_returns__record_t__d__last__bit : int

logic extended_returns__record_t__d__position : int

axiom extended_returns__record_t__d__first__bit_axiom :
  (0 <= extended_returns__record_t__d__first__bit)

axiom extended_returns__record_t__d__last__bit_axiom :
  (extended_returns__record_t__d__first__bit <  extended_returns__record_t__d__last__bit)

axiom extended_returns__record_t__d__position_axiom :
  (0 <= extended_returns__record_t__d__position)

logic user_eq2 : us_rep, us_rep -> bool

logic dummy2 : natural

logic dummy3 : integer

logic dummy4 : integer

logic dummy5 : integer

logic dummy6 : integer

logic dummy7 : bool

type record_t__ref = { record_t__content : us_rep
}

function record_t__ref___projection(a: record_t__ref) : us_rep =
  (a).record_t__content

logic discr : int

logic attr__ATTRIBUTE_ADDRESS : int

logic init_val : int

logic attr__ATTRIBUTE_ADDRESS1 : int

predicate in_range2(rec__extended_returns__record_t__discr1: int,
  a: us_rep) =
  (rec__extended_returns__record_t__discr1 = to_rep1(((a).us_split_discrs1).rec__extended_returns__record_t__discr))

logic value__size1 : int

logic object__size1 : us_rep -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:natural. forall a1:integer. forall a2:integer. forall a3:integer.
  forall a4:integer. forall a5:bool. (0 <= object__size1({ us_split_discrs1 =
  { rec__extended_returns__record_t__discr = a }; us_split_fields1 = {
  rec__extended_returns__record_t__a = a1;
  rec__extended_returns__record_t__b = a2;
  rec__extended_returns__record_t__c = a3;
  rec__extended_returns__record_t__d = a4 }; attr__constrained = a5 })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:natural. forall a1:integer. forall a2:integer. forall a3:integer.
  forall a4:integer. forall a5:bool. (0 <= object__alignment1({
  us_split_discrs1 = { rec__extended_returns__record_t__discr = a };
  us_split_fields1 = { rec__extended_returns__record_t__a = a1;
  rec__extended_returns__record_t__b = a2;
  rec__extended_returns__record_t__c = a3;
  rec__extended_returns__record_t__d = a4 }; attr__constrained = a5 })))

logic extended_returns__record_t__discr__first__bit1 : int

logic extended_returns__record_t__discr__last__bit1 : int

logic extended_returns__record_t__discr__position1 : int

axiom extended_returns__record_t__discr__first__bit_axiom1 :
  (0 <= extended_returns__record_t__discr__first__bit1)

axiom extended_returns__record_t__discr__last__bit_axiom1 :
  (extended_returns__record_t__discr__first__bit1 <  extended_returns__record_t__discr__last__bit1)

axiom extended_returns__record_t__discr__position_axiom1 :
  (0 <= extended_returns__record_t__discr__position1)

logic extended_returns__record_t__a__first__bit1 : int

logic extended_returns__record_t__a__last__bit1 : int

logic extended_returns__record_t__a__position1 : int

axiom extended_returns__record_t__a__first__bit_axiom1 :
  (0 <= extended_returns__record_t__a__first__bit1)

axiom extended_returns__record_t__a__last__bit_axiom1 :
  (extended_returns__record_t__a__first__bit1 <  extended_returns__record_t__a__last__bit1)

axiom extended_returns__record_t__a__position_axiom1 :
  (0 <= extended_returns__record_t__a__position1)

logic extended_returns__record_t__b__first__bit1 : int

logic extended_returns__record_t__b__last__bit1 : int

logic extended_returns__record_t__b__position1 : int

axiom extended_returns__record_t__b__first__bit_axiom1 :
  (0 <= extended_returns__record_t__b__first__bit1)

axiom extended_returns__record_t__b__last__bit_axiom1 :
  (extended_returns__record_t__b__first__bit1 <  extended_returns__record_t__b__last__bit1)

axiom extended_returns__record_t__b__position_axiom1 :
  (0 <= extended_returns__record_t__b__position1)

logic extended_returns__record_t__c__first__bit1 : int

logic extended_returns__record_t__c__last__bit1 : int

logic extended_returns__record_t__c__position1 : int

axiom extended_returns__record_t__c__first__bit_axiom1 :
  (0 <= extended_returns__record_t__c__first__bit1)

axiom extended_returns__record_t__c__last__bit_axiom1 :
  (extended_returns__record_t__c__first__bit1 <  extended_returns__record_t__c__last__bit1)

axiom extended_returns__record_t__c__position_axiom1 :
  (0 <= extended_returns__record_t__c__position1)

logic extended_returns__record_t__d__first__bit1 : int

logic extended_returns__record_t__d__last__bit1 : int

logic extended_returns__record_t__d__position1 : int

axiom extended_returns__record_t__d__first__bit_axiom1 :
  (0 <= extended_returns__record_t__d__first__bit1)

axiom extended_returns__record_t__d__last__bit_axiom1 :
  (extended_returns__record_t__d__first__bit1 <  extended_returns__record_t__d__last__bit1)

axiom extended_returns__record_t__d__position_axiom1 :
  (0 <= extended_returns__record_t__d__position1)

logic user_eq3 : us_rep, us_rep -> bool

logic dummy8 : natural

logic dummy9 : integer

logic dummy10 : integer

logic dummy11 : integer

logic dummy12 : integer

logic dummy13 : bool

type tresultS__ref = { tresultS__content : us_rep
}

function tresultS__ref___projection(a: tresultS__ref) : us_rep =
  (a).tresultS__content

logic result____split_discrs : natural

logic result____attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS2 : int

 (* File "extended_returns.ads", line 2, characters 0-0 *)
goal WP_parameter_def :
  (forall result____split_fields:integer.
  forall result____split_fields1:integer.
  forall result____split_fields2:integer.
  forall result____split_fields3:integer.
  forall extended_returns__init__result:natural.
  forall extended_returns__init__result1:integer.
  forall extended_returns__init__result2:integer.
  forall extended_returns__init__result3:integer.
  forall extended_returns__init__result4:integer.
  forall extended_returns__init__result5:bool. forall us:int.
  forall o:integer. forall o1:integer. forall o2:integer. forall o3:integer.
  forall o4:integer. forall temp___187:natural. forall temp___1871:integer.
  forall temp___1872:integer. forall temp___1873:integer.
  forall temp___1874:integer. forall temp___1875:bool. forall o5:integer.
  forall o6:integer. forall o7:integer. forall o8:integer. forall o9:integer.
  forall temp___193:natural. forall temp___1931:integer.
  forall temp___1932:integer. forall temp___1933:integer.
  forall temp___1934:integer. forall temp___1935:bool. forall o10:integer.
  forall o11:integer. forall o12:integer. forall o13:integer.
  forall o14:integer. forall temp___189:natural. forall temp___1891:integer.
  forall temp___1892:integer. forall temp___1893:integer.
  forall temp___1894:integer. forall temp___1895:bool. forall o15:integer.
  forall o16:integer. forall o17:integer. forall o18:integer.
  forall o19:integer. forall temp___191:natural. forall temp___1911:integer.
  forall temp___1912:integer. forall temp___1913:integer.
  forall temp___1914:integer. forall temp___1915:bool. forall result:integer.
  forall result1:integer. forall result2:integer. forall result3:integer.
  forall result____split_fields4:integer.
  forall result____split_fields5:integer.
  forall result____split_fields6:integer.
  forall result____split_fields7:integer. forall result4:integer.
  forall result5:integer. forall result6:integer. forall result7:integer.
  forall result____split_fields8:integer.
  forall result____split_fields9:integer.
  forall result____split_fields10:integer.
  forall result____split_fields11:integer. forall result8:integer.
  forall result9:integer. forall result10:integer. forall result11:integer.
  forall result____split_fields12:integer.
  forall result____split_fields13:integer.
  forall result____split_fields14:integer.
  forall result____split_fields15:integer. forall result12:integer.
  forall result13:integer. forall result14:integer. forall result15:integer.
  forall result____split_fields16:integer.
  forall result____split_fields17:integer.
  forall result____split_fields18:integer.
  forall result____split_fields19:integer. forall result16:natural.
  forall result17:integer. forall result18:integer. forall result19:integer.
  forall result20:integer. forall result21:bool.
  forall extended_returns__init__result6:natural.
  forall extended_returns__init__result7:integer.
  forall extended_returns__init__result8:integer.
  forall extended_returns__init__result9:integer.
  forall extended_returns__init__result10:integer.
  forall extended_returns__init__result11:bool.
  forall result____split_fields20:integer.
  forall result____split_fields21:integer.
  forall result____split_fields22:integer.
  forall result____split_fields23:integer.
  forall extended_returns__init__result12:record_t__ref.
  forall result____split_fields24:us_split_fields.
  forall extended_returns__init__result13:us_rep.
  forall result____split_fields25:us_split_fields__ref.
  forall extended_returns__init__result14:record_t__ref.
  forall result____split_fields26:us_split_fields.
  forall extended_returns__init__result15:us_rep.
  (forall result22:natural. forall result23:integer. forall result24:integer.
  forall result25:integer. forall result26:integer. forall result27:bool.
  ((in_range(discr) and (in_range1(init_val) and
  ((((((extended_returns__init__result12 = { record_t__content = {
  us_split_discrs1 = { rec__extended_returns__record_t__discr =
  extended_returns__init__result6 }; us_split_fields1 = {
  rec__extended_returns__record_t__a = extended_returns__init__result7;
  rec__extended_returns__record_t__b = extended_returns__init__result8;
  rec__extended_returns__record_t__c = extended_returns__init__result9;
  rec__extended_returns__record_t__d = extended_returns__init__result10 };
  attr__constrained = extended_returns__init__result11 } }) and
  ((result____split_fields20 = result____split_fields8) and
  ((result____split_fields21 = result____split_fields9) and
  ((result____split_fields22 = result____split_fields10) and
  (result____split_fields23 = result____split_fields11))))) and
  ((extended_returns__init__result13 = { us_split_discrs1 = {
  rec__extended_returns__record_t__discr = extended_returns__init__result6 };
  us_split_fields1 = { rec__extended_returns__record_t__a =
  extended_returns__init__result7; rec__extended_returns__record_t__b =
  extended_returns__init__result8; rec__extended_returns__record_t__c =
  extended_returns__init__result9; rec__extended_returns__record_t__d =
  extended_returns__init__result10 }; attr__constrained =
  extended_returns__init__result11 }) and (result____split_fields24 = {
  rec__extended_returns__record_t__a = result____split_fields8;
  rec__extended_returns__record_t__b = result____split_fields9;
  rec__extended_returns__record_t__c = result____split_fields10;
  rec__extended_returns__record_t__d = result____split_fields11 }))) and
  (((us = discr) and in_range1(discr)) and
  ((((result____attr__constrained = true) and
  (to_rep1(result____split_discrs) = discr)) and
  ((discr = to_rep1(result____split_discrs)) and
  (result____attr__constrained = true))) and (((((to_rep(o) = init_val) and
  ((o = o1) and ((result____split_fields1 = o2) and
  ((result____split_fields2 = o3) and (result____split_fields3 = o4))))) and
  ((result____split_discrs = temp___187) and (((temp___1871 = o1) and
  ((temp___1872 = o2) and ((temp___1873 = o3) and (temp___1874 = o4)))) and
  (result____attr__constrained = temp___1875)))) and
  ((((result = result____split_fields) and
  ((result1 = result____split_fields1) and
  ((result2 = result____split_fields2) and
  (result3 = result____split_fields3)))) and
  ((temp___1871 = result____split_fields4) and
  ((temp___1872 = result____split_fields5) and
  ((temp___1873 = result____split_fields6) and
  (temp___1874 = result____split_fields7))))) and
  (result____split_discrs = temp___187))) and ((((discr = 0) and
  ((((to_rep(o5) = init_val) and ((result____split_fields4 = o6) and
  ((o5 = o7) and ((result____split_fields6 = o8) and
  (result____split_fields7 = o9))))) and
  ((result____split_discrs = temp___193) and (((temp___1931 = o6) and
  ((temp___1932 = o7) and ((temp___1933 = o8) and (temp___1934 = o9)))) and
  (result____attr__constrained = temp___1935)))) and
  ((((result4 = result____split_fields4) and
  ((result5 = result____split_fields5) and
  ((result6 = result____split_fields6) and
  (result7 = result____split_fields7)))) and
  ((temp___1931 = result____split_fields8) and
  ((temp___1932 = result____split_fields9) and
  ((temp___1933 = result____split_fields10) and
  (temp___1934 = result____split_fields11))))) and
  (result____split_discrs = temp___193)))) or ((not (discr = 0)) and
  ((((discr = 1) and (((((to_rep(o10) = init_val) and
  ((result____split_fields4 = o11) and ((result____split_fields5 = o12) and
  ((o10 = o13) and (result____split_fields7 = o14))))) and
  ((result____split_discrs = temp___189) and (((temp___1891 = o11) and
  ((temp___1892 = o12) and ((temp___1893 = o13) and
  (temp___1894 = o14)))) and
  (result____attr__constrained = temp___1895)))) and
  ((((result8 = result____split_fields4) and
  ((result9 = result____split_fields5) and
  ((result10 = result____split_fields6) and
  (result11 = result____split_fields7)))) and
  ((temp___1891 = result____split_fields12) and
  ((temp___1892 = result____split_fields13) and
  ((temp___1893 = result____split_fields14) and
  (temp___1894 = result____split_fields15))))) and
  (result____split_discrs = temp___189))) and ((((to_rep(o15) = init_val) and
  ((result____split_fields12 = o16) and ((result____split_fields13 = o17) and
  ((result____split_fields14 = o18) and (o15 = o19))))) and
  ((result____split_discrs = temp___191) and (((temp___1911 = o16) and
  ((temp___1912 = o17) and ((temp___1913 = o18) and
  (temp___1914 = o19)))) and
  (result____attr__constrained = temp___1915)))) and
  ((((result12 = result____split_fields12) and
  ((result13 = result____split_fields13) and
  ((result14 = result____split_fields14) and
  (result15 = result____split_fields15)))) and
  ((temp___1911 = result____split_fields16) and
  ((temp___1912 = result____split_fields17) and
  ((temp___1913 = result____split_fields18) and
  (temp___1914 = result____split_fields19))))) and
  (result____split_discrs = temp___191))))) or ((not (discr = 1)) and ({
  rec__extended_returns__record_t__a = result____split_fields16;
  rec__extended_returns__record_t__b = result____split_fields17;
  rec__extended_returns__record_t__c = result____split_fields18;
  rec__extended_returns__record_t__d = result____split_fields19 } = {
  rec__extended_returns__record_t__a = result____split_fields4;
  rec__extended_returns__record_t__b = result____split_fields5;
  rec__extended_returns__record_t__c = result____split_fields6;
  rec__extended_returns__record_t__d = result____split_fields7 }))) and ({
  rec__extended_returns__record_t__a = result____split_fields8;
  rec__extended_returns__record_t__b = result____split_fields9;
  rec__extended_returns__record_t__c = result____split_fields10;
  rec__extended_returns__record_t__d = result____split_fields11 } = {
  rec__extended_returns__record_t__a = result____split_fields16;
  rec__extended_returns__record_t__b = result____split_fields17;
  rec__extended_returns__record_t__c = result____split_fields18;
  rec__extended_returns__record_t__d = result____split_fields19 })))) and
  (((result16 = extended_returns__init__result) and
  (((result17 = extended_returns__init__result1) and
  ((result18 = extended_returns__init__result2) and
  ((result19 = extended_returns__init__result3) and
  (result20 = extended_returns__init__result4)))) and
  (result21 = extended_returns__init__result5))) and
  ((result____split_discrs = extended_returns__init__result6) and
  (((extended_returns__init__result7 = result____split_fields8) and
  ((extended_returns__init__result8 = result____split_fields9) and
  ((extended_returns__init__result9 = result____split_fields10) and
  (extended_returns__init__result10 = result____split_fields11)))) and
  (result____attr__constrained = extended_returns__init__result11))))))))) and
  (((extended_returns__init__result14 = extended_returns__init__result12) and
  (result____split_fields25 = { us_split_fields__content = {
  rec__extended_returns__record_t__a = result____split_fields20;
  rec__extended_returns__record_t__b = result____split_fields21;
  rec__extended_returns__record_t__c = result____split_fields22;
  rec__extended_returns__record_t__d = result____split_fields23 } })) and
  ((extended_returns__init__result15 = extended_returns__init__result13) and
  (result____split_fields26 = result____split_fields24)))) and ({
  us_split_discrs1 = { rec__extended_returns__record_t__discr = result22 };
  us_split_fields1 = { rec__extended_returns__record_t__a = result23;
  rec__extended_returns__record_t__b = result24;
  rec__extended_returns__record_t__c = result25;
  rec__extended_returns__record_t__d = result26 }; attr__constrained =
  result27 } = (extended_returns__init__result14).record_t__content)))) ->
  (to_rep((((extended_returns__init__result14).record_t__content).us_split_fields1).rec__extended_returns__record_t__a) = init_val))))
