(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-sort tcount_typeB 0)
(declare-fun tcount_typeBqtint (tcount_typeB) Int)
(assert (forall ((i tcount_typeB)) (and (<= (- 2147483648) (tcount_typeBqtint i)) (<= (tcount_typeBqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (tcount_typeB tcount_typeB) Bool)
(declare-const dummy1 tcount_typeB)
(declare-datatypes () ((tcount_typeB__ref (mk_tcount_typeB__ref (tcount_typeB__content tcount_typeB)))))
(define-fun tcount_typeB__ref___projection ((a tcount_typeB__ref)) tcount_typeB (tcount_typeB__content a))
(define-fun to_rep ((x tcount_typeB)) Int (tcount_typeBqtint x))
(declare-fun of_rep (Int) tcount_typeB)
(assert (forall ((x tcount_typeB)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x tcount_typeB)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-const last Int)
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (tcount_typeB tcount_typeB) Bool)
(declare-const dummy2 tcount_typeB)
(declare-datatypes () ((capacity_range__ref (mk_capacity_range__ref (capacity_range__content tcount_typeB)))))
(define-fun capacity_range__ref___projection ((a capacity_range__ref)) tcount_typeB (capacity_range__content a))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__use_vectors__my_vectors__vector__capacity tcount_typeB)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) tcount_typeB (rec__use_vectors__my_vectors__vector__capacity a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__use_vectors__my_vectors__vector us_main_type)))))
(define-fun us_split_fields_Vector__projection ((a us_split_fields)) us_main_type (rec__use_vectors__my_vectors__vector a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const use_vectors__my_vectors__vector__capacity__first__bit Int)
(declare-const use_vectors__my_vectors__vector__capacity__last__bit Int)
(declare-const use_vectors__my_vectors__vector__capacity__position Int)
(assert (<= 0 use_vectors__my_vectors__vector__capacity__first__bit))
(assert (< use_vectors__my_vectors__vector__capacity__first__bit use_vectors__my_vectors__vector__capacity__last__bit))
(assert (<= 0 use_vectors__my_vectors__vector__capacity__position))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((vector__ref (mk_vector__ref (vector__content us_rep)))))
(define-fun vector__ref___projection ((a vector__ref)) us_rep (vector__content a))
(declare-fun length (us_rep) Int)
(declare-fun length__function_guard (Int us_rep) Bool)
(define-fun capacity ((container us_rep)) Int (ite (= (distinct 0 0) true) (to_rep (rec__use_vectors__my_vectors__vector__capacity (us_split_discrs1 container))) last))
(declare-fun capacity__function_guard (Int us_rep) Bool)
(declare-const last_count Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun dynamic_invariant1 ((temp___expr_263 Int) (temp___is_init_259 Bool) (temp___skip_constant_260 Bool) (temp___do_toplevel_261 Bool) (temp___do_typ_inv_262 Bool)) Bool (=> (or (= temp___is_init_259 true) (<= 0 last)) (dynamic_property 0 last temp___expr_263)))
(assert (= last last_count))
(define-fun dynamic_invariant2 ((temp___expr_270 us_rep) (temp___is_init_266 Bool) (temp___skip_constant_267 Bool) (temp___do_toplevel_268 Bool) (temp___do_typ_inv_269 Bool)) Bool (dynamic_property 0 last (to_rep (rec__use_vectors__my_vectors__vector__capacity (us_split_discrs1 temp___expr_270)))))
(assert (forall ((container us_rep)) (! (=> (dynamic_invariant2 container true true true true) (let ((result (length container))) (and (<= result (capacity container)) (dynamic_invariant1 result true false true true)))) :pattern ((length container)))))
(declare-sort us_main_type1 0)
(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)
(declare-sort us_rep1 0)
(declare-fun bool_eq (us_rep1 us_rep1) Bool)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-fun user_eq4 (us_rep1 us_rep1) Bool)
(declare-const dummy4 us_rep1)
(declare-datatypes () ((sequence__ref (mk_sequence__ref (sequence__content us_rep1)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep1 (sequence__content a))
(declare-fun get (us_rep1 Int) Int)
(declare-fun get__function_guard (Int us_rep1 Int) Bool)
(declare-fun length1 (us_rep1) Int)
(declare-fun length__function_guard1 (Int us_rep1) Bool)
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-const first Int)
(declare-const last1 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((index_type__ref (mk_index_type__ref (index_type__content integer)))))
(define-fun index_type__ref___3__projection ((a index_type__ref)) integer (index_type__content a))
(define-fun last2 ((container us_rep1)) Int (+ (- first 1) (length1 container)))
(declare-fun last__function_guard (Int us_rep1) Bool)
(declare-sort element_type 0)
(declare-fun element_typeqtint (element_type) Int)
(assert (forall ((i element_type)) (and (<= (- 2147483648) (element_typeqtint i)) (<= (element_typeqtint i) 2147483647))))
(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (element_type element_type) Bool)
(declare-const dummy6 element_type)
(declare-datatypes () ((element_type__ref (mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___3__projection ((a element_type__ref)) element_type (element_type__content a))
(define-fun dynamic_invariant3 ((temp___expr_287 Int) (temp___is_init_283 Bool) (temp___skip_constant_284 Bool) (temp___do_toplevel_285 Bool) (temp___do_typ_inv_286 Bool)) Bool (=> (or (= temp___is_init_283 true) (<= (- 2147483648) 2147483647)) (in_range3 temp___expr_287)))
(declare-const first1 Int)
(declare-const last3 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (integer integer) Bool)
(declare-const dummy7 integer)
(declare-datatypes () ((extended_index__ref (mk_extended_index__ref (extended_index__content integer)))))
(define-fun extended_index__ref___2__projection ((a extended_index__ref)) integer (extended_index__content a))
(define-fun dynamic_invariant4 ((temp___expr_294 Int) (temp___is_init_290 Bool) (temp___skip_constant_291 Bool) (temp___do_toplevel_292 Bool) (temp___do_typ_inv_293 Bool)) Bool (=> (or (= temp___is_init_290 true) (<= first1 last3)) (dynamic_property2 first1 last3 temp___expr_294)))
(assert (= first1 (- first 1)))
(assert (= last3 last1))
(define-fun oeq ((left us_rep1) (right us_rep1)) Bool (and (= (length1 left) (length1 right)) (ite (forall ((n Int)) (=> (and (<= first n) (<= n (last2 left))) (= (get left n) (get right n)))) true false)))
(declare-fun oeq__function_guard (Bool us_rep1 us_rep1) Bool)
(assert (forall ((a us_rep1) (b us_rep1)) (! (= (user_eq4 a b) (oeq a b)) :pattern ((user_eq4 a b)))))
(define-fun default_initial_assumption ((temp___expr_302 us_rep1) (temp___skip_top_level_303 Bool)) Bool (=> (not (= temp___skip_top_level_303 true)) (= (length1 temp___expr_302) 0)))
(assert (forall ((container us_rep1)) (forall ((position Int)) (! (=> (and (dynamic_invariant4 position true true true true) (and (<= first position) (<= position (last2 container)))) (dynamic_invariant3 (get container position) true false true true)) :pattern ((get container position))))))
(declare-fun model__ (us_rep) us_rep1)
(declare-fun model____function_guard (us_rep1 us_rep) Bool)
(assert (forall ((container us_rep)) (! (=> (dynamic_invariant2 container true true true true) (= (length1 (model__ container)) (length container))) :pattern ((model__ container)))))
(define-fun last_index ((container us_rep)) Int (last2 (model__ container)))
(declare-fun last_index__function_guard (Int us_rep) Bool)
(declare-const first2 Int)
(declare-const last4 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((index_type__ref1 (mk_index_type__ref1 (index_type__content1 integer)))))
(define-fun index_type__ref___2__projection ((a index_type__ref1)) integer (index_type__content1 a))
(declare-const first3 Int)
(declare-const last5 Int)
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq9 (integer integer) Bool)
(declare-const dummy9 integer)
(declare-datatypes () ((extended_index__ref1 (mk_extended_index__ref1 (extended_index__content1 integer)))))
(define-fun extended_index__ref___projection ((a extended_index__ref1)) integer (extended_index__content1 a))
(define-fun dynamic_invariant5 ((temp___expr_256 Int) (temp___is_init_252 Bool) (temp___skip_constant_253 Bool) (temp___do_toplevel_254 Bool) (temp___do_typ_inv_255 Bool)) Bool (=> (or (= temp___is_init_252 true) (<= first3 last5)) (dynamic_property4 first3 last5 temp___expr_256)))
(assert (= first3 (- first2 1)))
(assert (= last5 (+ (ite (< 2147483646 last4) 2147483646 last4) 1)))
(define-fun element ((container us_rep) (index Int)) Int (get (model__ container) index))
(declare-fun element__function_guard (Int us_rep Int) Bool)
(declare-fun first_index__function_guard (Int us_rep) Bool)
(declare-sort element_type1 0)
(declare-fun element_typeqtint1 (element_type1) Int)
(assert (forall ((i element_type1)) (and (<= (- 2147483648) (element_typeqtint1 i)) (<= (element_typeqtint1 i) 2147483647))))
(define-fun in_range4 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq10 (element_type1 element_type1) Bool)
(declare-const dummy10 element_type1)
(declare-datatypes () ((element_type__ref1 (mk_element_type__ref1 (element_type__content1 element_type1)))))
(define-fun element_type__ref___2__projection ((a element_type__ref1)) element_type1 (element_type__content1 a))
(define-fun dynamic_invariant6 ((temp___expr_249 Int) (temp___is_init_245 Bool) (temp___skip_constant_246 Bool) (temp___do_toplevel_247 Bool) (temp___do_typ_inv_248 Bool)) Bool (=> (or (= temp___is_init_245 true) (<= (- 2147483648) 2147483647)) (in_range4 temp___expr_249)))
(define-fun equal_except ((left us_rep1) (right us_rep1) (position Int)) Bool (and (= (length1 left) (length1 right)) (ite (forall ((i Int)) (=> (and (<= first i) (<= i (last2 left))) (=> (not (= i position)) (= (get left i) (get right i))))) true false)))
(declare-fun equal_except__function_guard (Bool us_rep1 us_rep1 Int) Bool)
(declare-fun is_incr (Int Int) Bool)
(declare-fun is_incr__function_guard (Bool Int Int) Bool)
(declare-sort element_type2 0)
(declare-fun element_typeqtint2 (element_type2) Int)
(assert (forall ((i element_type2)) (and (<= (- 2147483648) (element_typeqtint2 i)) (<= (element_typeqtint2 i) 2147483647))))
(define-fun in_range5 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq11 (element_type2 element_type2) Bool)
(declare-const dummy11 element_type2)
(declare-datatypes () ((element_type__ref2 (mk_element_type__ref2 (element_type__content2 element_type2)))))
(define-fun element_type__ref___projection ((a element_type__ref2)) element_type2 (element_type__content2 a))
(define-fun dynamic_invariant7 ((temp___expr_235 Int) (temp___is_init_231 Bool) (temp___skip_constant_232 Bool) (temp___do_toplevel_233 Bool) (temp___do_typ_inv_234 Bool)) Bool (=> (or (= temp___is_init_231 true) (<= (- 2147483648) 2147483647)) (in_range5 temp___expr_235)))
(assert true)
(assert (forall ((i1 Int) (i2 Int)) (! (= (= (is_incr i1 i2) true) (ite (= i1 2147483647) (= i2 2147483647) (= i2 (+ i1 1)))) :pattern ((is_incr i1 i2)))))
(declare-const first4 Int)
(declare-const last6 Int)
(define-fun dynamic_property5 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq12 (integer integer) Bool)
(declare-const dummy12 integer)
(declare-datatypes () ((index_type__ref2 (mk_index_type__ref2 (index_type__content2 integer)))))
(define-fun index_type__ref___projection ((a index_type__ref2)) integer (index_type__content2 a))
(declare-sort telement_typeB 0)
(declare-fun telement_typeBqtint (telement_typeB) Int)
(assert (forall ((i telement_typeB)) (and (<= (- 2147483648) (telement_typeBqtint i)) (<= (telement_typeBqtint i) 2147483647))))
(define-fun in_range6 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq13 (telement_typeB telement_typeB) Bool)
(declare-const dummy13 telement_typeB)
(declare-datatypes () ((telement_typeB__ref (mk_telement_typeB__ref (telement_typeB__content telement_typeB)))))
(define-fun telement_typeB__ref___projection ((a telement_typeB__ref)) telement_typeB (telement_typeB__content a))
(declare-const v__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const r7b Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_property6 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq14 (integer integer) Bool)
(declare-const dummy14 integer)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content integer)))))
(define-fun t8b__ref___projection ((a t8b__ref)) integer (t8b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-fun id (Int Int Int) Int)
(declare-fun id__function_guard (Int Int Int Int) Bool)
(assert (forall ((x Int) (f Int) (l Int)) (! (=> (and (and (dynamic_invariant x true true true true) (dynamic_invariant f true true true true)) (dynamic_invariant l true true true true)) (let ((result (id x f l))) (and (=> (and (<= f x) (<= x l)) (and (<= f result) (<= result l))) (dynamic_invariant result true false true true)))) :pattern ((id x f l)))))
(declare-const fst Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(assert (= fst (id 1 (- 2147483647) 2147483647)))
(declare-const lst Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(assert (= lst (id 2147483647 fst 2147483647)))
(define-fun dynamic_invariant8 ((temp___expr_228 Int) (temp___is_init_224 Bool) (temp___skip_constant_225 Bool) (temp___do_toplevel_226 Bool) (temp___do_typ_inv_227 Bool)) Bool (=> (or (= temp___is_init_224 true) (<= first4 last6)) (dynamic_property5 first4 last6 temp___expr_228)))
(assert (= first4 fst))
(assert (= last6 lst))
(declare-sort count_type 0)
(declare-fun count_typeqtint (count_type) Int)
(assert (forall ((i count_type)) (and (<= 0 (count_typeqtint i)) (<= (count_typeqtint i) 2147483647))))
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq15 (count_type count_type) Bool)
(declare-const dummy15 count_type)
(declare-datatypes () ((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type (count_type__content a))
(define-fun dynamic_invariant9 ((temp___expr_165 Int) (temp___is_init_161 Bool) (temp___skip_constant_162 Bool) (temp___do_toplevel_163 Bool) (temp___do_typ_inv_164 Bool)) Bool (=> (or (= temp___is_init_161 true) (<= 0 2147483647)) (in_range7 temp___expr_165)))
(assert (= last_count (ite (< last4 first2) 0 (ite (or (< last4 (- 1)) (< (- last4 2147483647) first2)) (+ (- last4 first2) 1) 2147483647))))
(define-fun dynamic_invariant10 ((temp___expr_242 Int) (temp___is_init_238 Bool) (temp___skip_constant_239 Bool) (temp___do_toplevel_240 Bool) (temp___do_typ_inv_241 Bool)) Bool (=> (or (= temp___is_init_238 true) (<= first2 last4)) (dynamic_property3 first2 last4 temp___expr_242)))
(assert (= first2 fst))
(assert (= last4 lst))
(assert (forall ((container us_rep1)) (! (let ((result (length1 container))) (and (<= (+ (- first 1) result) last1) (dynamic_invariant9 result true false true true))) :pattern ((length1 container)))))
(define-fun dynamic_invariant11 ((temp___expr_280 Int) (temp___is_init_276 Bool) (temp___skip_constant_277 Bool) (temp___do_toplevel_278 Bool) (temp___do_typ_inv_279 Bool)) Bool (=> (or (= temp___is_init_276 true) (<= first last1)) (dynamic_property1 first last1 temp___expr_280)))
(assert (= first fst))
(assert (= last1 lst))
(declare-const v__split_fields us_main_type)
(declare-const lst1 Int)
(declare-const i Int)
(declare-const o Int)
(declare-const temp___479 Int)
(declare-const temp___481 us_rep1)
(declare-const temp___482 us_rep1)
(declare-const temp___478 tcount_typeB)
(declare-const temp___4781 us_main_type)
(declare-const temp___480 Int)
(declare-const us Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const us1 Int)
(declare-const o3 Int)
(declare-const us2 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const n Int)
(declare-const o8 Int)
(declare-const o9 Bool)
(declare-const us3 Int)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const v__split_fields1 us_main_type)
(declare-const result Int)
(declare-const lst2 Int)
(declare-const result1 Int)
(declare-const i1 Int)
(declare-const v__split_fields2 us_main_type)
(declare-const i2 Int)
(declare-const result2 Bool)
(declare-const v__split_fields3 us_main_type)
(declare-const v__split_fields4 us_main_type)
(declare-const i3 Int)
(declare-const v__split_fields5 us_main_type)
(declare-const i4 Int)
(declare-const v__split_fields6 us_split_fields__ref)
(declare-const i5 int__ref)
(declare-const v__split_fields7 us_split_fields)
(declare-const i6 Int)
(declare-const v__split_fields8 us_split_fields__ref)
(declare-const lst3 int__ref)
(declare-const i7 int__ref)
(declare-const v__split_fields9 us_split_fields)
(declare-const lst4 Int)
(declare-const i8 Int)
(declare-const result3 Bool)
(define-fun v__split_fields10 () us_split_fields (mk___split_fields v__split_fields5))
(define-fun v__split_fields11 () us_split_fields (mk___split_fields v__split_fields3))
(define-fun v__split_fields12 () us_split_fields (mk___split_fields v__split_fields2))
(assert (dynamic_property 0 last (to_rep (rec__use_vectors__my_vectors__vector__capacity v__split_discrs))))
(assert (and (= o (last2 (model__ (mk___rep v__split_discrs (mk___split_fields v__split_fields))))) (and (dynamic_property4 first3 last5 o) (= o (last2 (model__ (mk___rep v__split_discrs (mk___split_fields v__split_fields))))))))
(assert (= (mk_int__ref result) (mk_int__ref lst1)))
(assert (= lst2 o))
(assert (in_range1 lst2))
(assert (= lst2 r7b))
(assert (in_range1 r7b))
(assert (= (mk_int__ref result1) (mk_int__ref i)))
(assert (= i1 first4))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= temp___479 i1)))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= temp___481 (model__ (mk___rep v__split_discrs (mk___split_fields v__split_fields))))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= temp___482 (model__ (mk___rep v__split_discrs (mk___split_fields v__split_fields))))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (and (= v__split_discrs (mk___split_discrs temp___478)) (= v__split_fields temp___4781))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= temp___480 (length (mk___rep v__split_discrs (mk___split_fields v__split_fields))))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= (length (mk___rep v__split_discrs v__split_fields12)) temp___480)))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (forall ((n1 Int)) (=> (and (<= first4 n1) (<= n1 (- i2 1))) (= (is_incr (get temp___481 n1) (get (model__ (mk___rep v__split_discrs v__split_fields12)) n1)) true)))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (forall ((n1 Int)) (=> (and (<= i2 n1) (<= n1 (last2 (model__ (mk___rep v__split_discrs v__split_fields12))))) (= (get temp___482 n1) (get (model__ (mk___rep v__split_discrs v__split_fields12)) n1))))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (and (and (dynamic_property 0 last (to_rep (rec__use_vectors__my_vectors__vector__capacity v__split_discrs))) (=> (<= first4 r7b) (dynamic_property6 first4 r7b i2))) (and (<= first4 i2) (<= i2 r7b)))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (and (= us i2) (dynamic_property3 first2 last4 i2))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= o1 i2)))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (and (= o2 (get (model__ (mk___rep v__split_discrs v__split_fields12)) o1)) (and (in_range4 o2) (= o2 (get (model__ (mk___rep v__split_discrs v__split_fields12)) o1))))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= result2 (ite (< o2 2147483647) true false))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (=> (= result2 true) (and (= us2 i2) (dynamic_property3 first2 last4 i2)))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (=> (= result2 true) (= o4 i2))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (=> (= result2 true) (and (= o5 (get (model__ (mk___rep v__split_discrs v__split_fields12)) o4)) (and (in_range4 o5) (= o5 (get (model__ (mk___rep v__split_discrs v__split_fields12)) o4)))))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (=> (= result2 true) (= o6 (+ o5 1)))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (=> (= result2 true) (and (= o7 o6) (in_range6 o6)))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (=> (= result2 true) (and (= us1 i2) (dynamic_property3 first2 last4 i2)))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (=> (= result2 true) (= o3 i2))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (=> (= result2 true) (and (and (and (= (length (mk___rep v__split_discrs v__split_fields11)) (length (mk___rep v__split_discrs v__split_fields12))) (= (get (model__ (mk___rep v__split_discrs v__split_fields11)) o3) o7)) (= (equal_except (model__ (mk___rep v__split_discrs v__split_fields12)) (model__ (mk___rep v__split_discrs v__split_fields11)) o3) true)) (dynamic_property 0 last (to_rep (rec__use_vectors__my_vectors__vector__capacity v__split_discrs)))))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (=> (not (= result2 true)) (= v__split_fields11 v__split_fields12))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= i2 r7b)))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= i2 i3)))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= v__split_fields4 v__split_fields3)))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= i4 i2)))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= v__split_fields10 v__split_fields11)))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= i5 (mk_int__ref i3))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= v__split_fields6 (mk___split_fields__ref (mk___split_fields v__split_fields4)))))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= i6 i4)))
(assert (=> (and (<= first4 i1) (<= i1 r7b)) (= v__split_fields7 v__split_fields10)))
(assert (=> (not (and (<= first4 i1) (<= i1 r7b))) (= i5 (mk_int__ref i1))))
(assert (=> (not (and (<= first4 i1) (<= i1 r7b))) (= v__split_fields6 (mk___split_fields__ref (mk___split_fields v__split_fields)))))
(assert (=> (not (and (<= first4 i1) (<= i1 r7b))) (= i6 i1)))
(assert (=> (not (and (<= first4 i1) (<= i1 r7b))) (= v__split_fields7 (mk___split_fields v__split_fields1))))
(assert (= i7 i5))
(assert (= lst3 (mk_int__ref lst2)))
(assert (= v__split_fields8 v__split_fields6))
(assert (= i8 i6))
(assert (= lst4 lst2))
(assert (= v__split_fields9 v__split_fields7))
(assert (and (= o8 (last2 (model__ (mk___rep v__split_discrs (us_split_fields__content v__split_fields8))))) (and (dynamic_property4 first3 last5 o8) (= o8 (last2 (model__ (mk___rep v__split_discrs (us_split_fields__content v__split_fields8))))))))
(assert (= o9 (ite (<= n o8) true false)))
(assert (= result3 (ite (<= first4 n) o9 false)))
(assert (= result3 true))
(assert (and (= us3 n) (dynamic_property3 first2 last4 n)))
(assert (= o10 n))
(assert (and (= o11 (get (model__ (mk___rep v__split_discrs (us_split_fields__content v__split_fields8))) o10)) (and (in_range4 o11) (= o11 (get (model__ (mk___rep v__split_discrs (us_split_fields__content v__split_fields8))) o10)))))
(assert (not (dynamic_property2 first1 last3 n)))
(check-sat)
(exit)
