(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort natural 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__tests__test_15__record_with_mutable_discrs__present Bool)))))
(define-fun us_split_discrs___3__projection ((a us_split_discrs)) Bool (rec__tests__test_15__record_with_mutable_discrs__present a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___3__projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__tests__test_15__record_with_mutable_discrs__field natural)))))
(define-fun us_split_fields_Field__3__projection ((a us_split_fields)) natural (rec__tests__test_15__record_with_mutable_discrs__field a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___9__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields) (attr__constrained Bool)))))
(define-fun us_rep___16__projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___17__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___18__projection ((a us_rep)) Bool (attr__constrained a))
(define-fun tests__test_15__record_with_mutable_discrs__field__pred ((a us_rep)) Bool (= (ite (rec__tests__test_15__record_with_mutable_discrs__present (us_split_discrs1 a)) 1 0) 1))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (= (rec__tests__test_15__record_with_mutable_discrs__present (us_split_discrs1 a)) (rec__tests__test_15__record_with_mutable_discrs__present (us_split_discrs1 b))) (=> (tests__test_15__record_with_mutable_discrs__field__pred a) (= (to_rep (rec__tests__test_15__record_with_mutable_discrs__field (us_split_fields1 a))) (to_rep (rec__tests__test_15__record_with_mutable_discrs__field (us_split_fields1 b)))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const tests__test_15__record_with_mutable_discrs__present__first__bit Int)
(declare-const tests__test_15__record_with_mutable_discrs__present__last__bit Int)
(declare-const tests__test_15__record_with_mutable_discrs__present__position Int)
(assert (<= 0 tests__test_15__record_with_mutable_discrs__present__first__bit))
(assert (< tests__test_15__record_with_mutable_discrs__present__first__bit tests__test_15__record_with_mutable_discrs__present__last__bit))
(assert (<= 0 tests__test_15__record_with_mutable_discrs__present__position))
(declare-const tests__test_15__record_with_mutable_discrs__field__first__bit Int)
(declare-const tests__test_15__record_with_mutable_discrs__field__last__bit Int)
(declare-const tests__test_15__record_with_mutable_discrs__field__position Int)
(assert (<= 0 tests__test_15__record_with_mutable_discrs__field__first__bit))
(assert (< tests__test_15__record_with_mutable_discrs__field__first__bit tests__test_15__record_with_mutable_discrs__field__last__bit))
(assert (<= 0 tests__test_15__record_with_mutable_discrs__field__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((record_with_mutable_discrs__ref (mk_record_with_mutable_discrs__ref (record_with_mutable_discrs__content us_rep)))))
(define-fun record_with_mutable_discrs__ref___2__projection ((a record_with_mutable_discrs__ref)) us_rep (record_with_mutable_discrs__content a))
(define-fun in_range2 ((rec__tests__test_15__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__tests__test_15__record_with_mutable_discrs__present1 (rec__tests__test_15__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const tests__test_15__record_with_mutable_discrs__present__first__bit1 Int)
(declare-const tests__test_15__record_with_mutable_discrs__present__last__bit1 Int)
(declare-const tests__test_15__record_with_mutable_discrs__present__position1 Int)
(assert (<= 0 tests__test_15__record_with_mutable_discrs__present__first__bit1))
(assert (< tests__test_15__record_with_mutable_discrs__present__first__bit1 tests__test_15__record_with_mutable_discrs__present__last__bit1))
(assert (<= 0 tests__test_15__record_with_mutable_discrs__present__position1))
(declare-const tests__test_15__record_with_mutable_discrs__field__first__bit1 Int)
(declare-const tests__test_15__record_with_mutable_discrs__field__last__bit1 Int)
(declare-const tests__test_15__record_with_mutable_discrs__field__position1 Int)
(assert (<= 0 tests__test_15__record_with_mutable_discrs__field__first__bit1))
(assert (< tests__test_15__record_with_mutable_discrs__field__first__bit1 tests__test_15__record_with_mutable_discrs__field__last__bit1))
(assert (<= 0 tests__test_15__record_with_mutable_discrs__field__position1))
(declare-fun user_eq2 (us_rep us_rep) Bool)
(declare-const dummy2 us_rep)
(declare-datatypes () ((t14b__ref (mk_t14b__ref (t14b__content us_rep)))))
(define-fun t14b__ref___projection ((a t14b__ref)) us_rep (t14b__content a))
(declare-datatypes () ((us_split_discrs2 (mk___split_discrs1 (rec__tests__test_15__holder__present Bool)))))
(define-fun us_split_discrs___4__projection ((a us_split_discrs2)) Bool (rec__tests__test_15__holder__present a))
(declare-datatypes () ((us_split_discrs__ref1 (mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref___4__projection ((a us_split_discrs__ref1)) us_split_discrs2 (us_split_discrs__content1 a))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__tests__test_15__holder__content us_rep)))))
(define-fun us_split_fields_Content__projection ((a us_split_fields2)) us_rep (rec__tests__test_15__holder__content a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___10__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs3 us_split_discrs2) (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___19__projection ((a us_rep1)) us_split_discrs2 (us_split_discrs3 a))
(define-fun us_rep___20__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (rec__tests__test_15__holder__present (us_split_discrs3 a)) (rec__tests__test_15__holder__present (us_split_discrs3 b))) (= (bool_eq (rec__tests__test_15__holder__content (us_split_fields3 a)) (rec__tests__test_15__holder__content (us_split_fields3 b))) true)) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const tests__test_15__holder__present__first__bit Int)
(declare-const tests__test_15__holder__present__last__bit Int)
(declare-const tests__test_15__holder__present__position Int)
(assert (<= 0 tests__test_15__holder__present__first__bit))
(assert (< tests__test_15__holder__present__first__bit tests__test_15__holder__present__last__bit))
(assert (<= 0 tests__test_15__holder__present__position))
(declare-const tests__test_15__holder__content__first__bit Int)
(declare-const tests__test_15__holder__content__last__bit Int)
(declare-const tests__test_15__holder__content__position Int)
(assert (<= 0 tests__test_15__holder__content__first__bit))
(assert (< tests__test_15__holder__content__first__bit tests__test_15__holder__content__last__bit))
(assert (<= 0 tests__test_15__holder__content__position))
(declare-fun user_eq3 (us_rep1 us_rep1) Bool)
(declare-const dummy3 us_rep1)
(declare-datatypes () ((holder__ref (mk_holder__ref (holder__content us_rep1)))))
(define-fun holder__ref___projection ((a holder__ref)) us_rep1 (holder__content a))
(define-fun dynamic_invariant ((temp___expr_289 us_rep1) (temp___is_init_285 Bool) (temp___skip_constant_286 Bool) (temp___do_toplevel_287 Bool) (temp___do_typ_inv_288 Bool)) Bool (and (and (in_range2 (rec__tests__test_15__holder__present (us_split_discrs3 temp___expr_289)) (rec__tests__test_15__holder__content (us_split_fields3 temp___expr_289))) (= (attr__constrained (rec__tests__test_15__holder__content (us_split_fields3 temp___expr_289))) true)) (= (attr__constrained (rec__tests__test_15__holder__content (us_split_fields3 temp___expr_289))) true)))
(declare-fun id (us_rep1) us_rep1)
(declare-fun id__function_guard (us_rep1 us_rep1) Bool)
(assert (forall ((h us_rep1)) (! (=> (dynamic_invariant h true true true true) (dynamic_invariant (id h) true false true true)) :pattern ((id h)))))
(assert (forall ((h us_rep1)) (! (=> (dynamic_invariant h true true true true) (= (id h) h)) :pattern ((id h)))))
(define-fun in_range3 ((rec__tests__test_15__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__tests__test_15__record_with_mutable_discrs__present1 (rec__tests__test_15__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const tests__test_15__record_with_mutable_discrs__present__first__bit2 Int)
(declare-const tests__test_15__record_with_mutable_discrs__present__last__bit2 Int)
(declare-const tests__test_15__record_with_mutable_discrs__present__position2 Int)
(assert (<= 0 tests__test_15__record_with_mutable_discrs__present__first__bit2))
(assert (< tests__test_15__record_with_mutable_discrs__present__first__bit2 tests__test_15__record_with_mutable_discrs__present__last__bit2))
(assert (<= 0 tests__test_15__record_with_mutable_discrs__present__position2))
(declare-const tests__test_15__record_with_mutable_discrs__field__first__bit2 Int)
(declare-const tests__test_15__record_with_mutable_discrs__field__last__bit2 Int)
(declare-const tests__test_15__record_with_mutable_discrs__field__position2 Int)
(assert (<= 0 tests__test_15__record_with_mutable_discrs__field__first__bit2))
(assert (< tests__test_15__record_with_mutable_discrs__field__first__bit2 tests__test_15__record_with_mutable_discrs__field__last__bit2))
(assert (<= 0 tests__test_15__record_with_mutable_discrs__field__position2))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((t15b__ref (mk_t15b__ref (t15b__content us_rep)))))
(define-fun t15b__ref___projection ((a t15b__ref)) us_rep (t15b__content a))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__tests__test_15__holder__content1 us_rep)))))
(define-fun us_split_fields_Content__2__projection ((a us_split_fields4)) us_rep (rec__tests__test_15__holder__content1 a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___11__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_discrs4 us_split_discrs2) (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___21__projection ((a us_rep2)) us_split_discrs2 (us_split_discrs4 a))
(define-fun us_rep___22__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun to_base ((a us_rep2)) us_rep1 (mk___rep1 (us_split_discrs4 a) (mk___split_fields1 (rec__tests__test_15__holder__content1 (us_split_fields5 a)))))
(define-fun of_base ((r us_rep1)) us_rep2 (mk___rep2 (us_split_discrs3 r) (mk___split_fields2 (rec__tests__test_15__holder__content (us_split_fields3 r)))))
(define-fun bool_eq2 ((a us_rep2) (b us_rep2)) Bool (ite (and (= (rec__tests__test_15__holder__present (us_split_discrs4 a)) (rec__tests__test_15__holder__present (us_split_discrs4 b))) (= (bool_eq (rec__tests__test_15__holder__content1 (us_split_fields5 a)) (rec__tests__test_15__holder__content1 (us_split_fields5 b))) true)) true false))
(define-fun in_range4 ((rec__tests__test_15__holder__present1 Bool) (a us_rep1)) Bool (= rec__tests__test_15__holder__present1 (rec__tests__test_15__holder__present (us_split_discrs3 a))))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep2) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep2) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))
(declare-const tests__test_15__holder__present__first__bit1 Int)
(declare-const tests__test_15__holder__present__last__bit1 Int)
(declare-const tests__test_15__holder__present__position1 Int)
(assert (<= 0 tests__test_15__holder__present__first__bit1))
(assert (< tests__test_15__holder__present__first__bit1 tests__test_15__holder__present__last__bit1))
(assert (<= 0 tests__test_15__holder__present__position1))
(declare-const tests__test_15__holder__content__first__bit1 Int)
(declare-const tests__test_15__holder__content__last__bit1 Int)
(declare-const tests__test_15__holder__content__position1 Int)
(assert (<= 0 tests__test_15__holder__content__first__bit1))
(assert (< tests__test_15__holder__content__first__bit1 tests__test_15__holder__content__last__bit1))
(assert (<= 0 tests__test_15__holder__content__position1))
(declare-fun user_eq5 (us_rep2 us_rep2) Bool)
(declare-const dummy5 us_rep2)
(declare-datatypes () ((th1S__ref (mk_th1S__ref (th1S__content us_rep2)))))
(define-fun th1S__ref___projection ((a th1S__ref)) us_rep2 (th1S__content a))
(define-fun dynamic_invariant1 ((temp___expr_296 us_rep2) (temp___is_init_292 Bool) (temp___skip_constant_293 Bool) (temp___do_toplevel_294 Bool) (temp___do_typ_inv_295 Bool)) Bool (and (=> (not (= temp___skip_constant_293 true)) (in_range4 (distinct 0 0) (to_base temp___expr_296))) (and (and (in_range3 (distinct 0 0) (rec__tests__test_15__holder__content1 (us_split_fields5 temp___expr_296))) (= (attr__constrained (rec__tests__test_15__holder__content1 (us_split_fields5 temp___expr_296))) true)) (= (attr__constrained (rec__tests__test_15__holder__content1 (us_split_fields5 temp___expr_296))) true))))
(define-fun default_initial_assumption ((temp___expr_299 us_rep2) (temp___skip_top_level_300 Bool)) Bool (and (= (rec__tests__test_15__holder__present (us_split_discrs4 temp___expr_299)) (distinct 0 0)) (and (= (attr__constrained (rec__tests__test_15__holder__content1 (us_split_fields5 temp___expr_299))) true) (= (rec__tests__test_15__record_with_mutable_discrs__present (us_split_discrs1 (rec__tests__test_15__holder__content1 (us_split_fields5 temp___expr_299)))) (distinct 0 0)))))
(declare-const h1__split_discrs us_split_discrs2)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const r17b us_rep1)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun in_range5 ((rec__tests__test_15__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__tests__test_15__record_with_mutable_discrs__present1 (rec__tests__test_15__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep)) (<= 0 (object__alignment5 a))))
(declare-const tests__test_15__record_with_mutable_discrs__present__first__bit3 Int)
(declare-const tests__test_15__record_with_mutable_discrs__present__last__bit3 Int)
(declare-const tests__test_15__record_with_mutable_discrs__present__position3 Int)
(assert (<= 0 tests__test_15__record_with_mutable_discrs__present__first__bit3))
(assert (< tests__test_15__record_with_mutable_discrs__present__first__bit3 tests__test_15__record_with_mutable_discrs__present__last__bit3))
(assert (<= 0 tests__test_15__record_with_mutable_discrs__present__position3))
(declare-const tests__test_15__record_with_mutable_discrs__field__first__bit3 Int)
(declare-const tests__test_15__record_with_mutable_discrs__field__last__bit3 Int)
(declare-const tests__test_15__record_with_mutable_discrs__field__position3 Int)
(assert (<= 0 tests__test_15__record_with_mutable_discrs__field__first__bit3))
(assert (< tests__test_15__record_with_mutable_discrs__field__first__bit3 tests__test_15__record_with_mutable_discrs__field__last__bit3))
(assert (<= 0 tests__test_15__record_with_mutable_discrs__field__position3))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((s18b__ref (mk_s18b__ref (s18b__content us_rep)))))
(define-fun s18b__ref___projection ((a s18b__ref)) us_rep (s18b__content a))
(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range1 temp___expr_39)))
(define-fun default_initial_assumption1 ((temp___expr_281 us_rep) (temp___skip_top_level_282 Bool)) Bool (and (= (attr__constrained temp___expr_281) false) (= (rec__tests__test_15__record_with_mutable_discrs__present (us_split_discrs1 temp___expr_281)) (distinct 0 0))))
(define-fun dynamic_invariant3 ((temp___expr_309 us_rep) (temp___is_init_305 Bool) (temp___skip_constant_306 Bool) (temp___do_toplevel_307 Bool) (temp___do_typ_inv_308 Bool)) Bool (and (=> (not (= temp___skip_constant_306 true)) (in_range5 (rec__tests__test_15__holder__present (us_split_discrs3 r17b)) temp___expr_309)) (= (attr__constrained temp___expr_309) true)))
(define-fun default_initial_assumption2 ((temp___expr_311 us_rep) (temp___skip_top_level_312 Bool)) Bool (and (= (attr__constrained temp___expr_311) true) (= (rec__tests__test_15__record_with_mutable_discrs__present (us_split_discrs1 temp___expr_311)) (rec__tests__test_15__holder__present (us_split_discrs3 r17b)))))
(declare-const temp___present_425 Bool)
(assert (not (in_range (ite temp___present_425 1 0))))
(check-sat)
(exit)
