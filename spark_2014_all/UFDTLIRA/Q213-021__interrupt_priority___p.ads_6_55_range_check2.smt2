(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort interrupt_priority 0)
(declare-fun interrupt_priorityqtint (interrupt_priority) Int)
(assert (forall ((i interrupt_priority)) (and (<= 98 (interrupt_priorityqtint i)) (<= (interrupt_priorityqtint i) 98))))
(define-fun in_range ((x Int)) Bool (and (<= 98 x) (<= x 98)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (interrupt_priority interrupt_priority) Bool)
(declare-const dummy interrupt_priority)
(declare-datatypes () ((interrupt_priority__ref (mk_interrupt_priority__ref (interrupt_priority__content interrupt_priority)))))
(define-fun interrupt_priority__ref___projection ((a interrupt_priority__ref)) interrupt_priority (interrupt_priority__content a))
(declare-sort pt 0)
(declare-fun user_eq1 (pt pt) Bool)
(declare-const value__size Int)
(declare-fun object__size (pt) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (pt) Int)
(assert (<= 0 value__size))
(assert (forall ((a pt)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a pt)) (<= 0 (object__alignment a))))
(declare-datatypes () ((pt__ref (mk_pt__ref (pt__content pt)))))
(define-fun pt__ref___projection ((a pt__ref)) pt (pt__content a))
(define-fun dynamic_invariant ((temp___expr_193 Int) (temp___is_init_189 Bool) (temp___skip_constant_190 Bool) (temp___do_toplevel_191 Bool) (temp___do_typ_inv_192 Bool)) Bool (=> (or (= temp___is_init_189 true) (<= 98 98)) (in_range temp___expr_193)))
(declare-const self__ pt)
(assert (not (<= 98 96)))
(check-sat)
(exit)
