(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort capacity_range 0)
(declare-fun capacity_rangeqtint (capacity_range) Int)
(assert (forall ((i capacity_range)) (and (<= 0 (capacity_rangeqtint i)) (<= (capacity_rangeqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (capacity_range capacity_range) Bool)
(declare-const dummy capacity_range)
(declare-datatypes () ((capacity_range__ref (mk_capacity_range__ref (capacity_range__content capacity_range)))))
(define-fun capacity_range__ref___projection ((a capacity_range__ref)) capacity_range (capacity_range__content a))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__indefinite_unbounded__vect__vector__capacity capacity_range)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) capacity_range (rec__indefinite_unbounded__vect__vector__capacity a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__indefinite_unbounded__vect__vector us_main_type)))))
(define-fun us_split_fields_Vector__projection ((a us_split_fields)) us_main_type (rec__indefinite_unbounded__vect__vector a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const indefinite_unbounded__vect__vector__capacity__first__bit Int)
(declare-const indefinite_unbounded__vect__vector__capacity__last__bit Int)
(declare-const indefinite_unbounded__vect__vector__capacity__position Int)
(assert (<= 0 indefinite_unbounded__vect__vector__capacity__first__bit))
(assert (< indefinite_unbounded__vect__vector__capacity__first__bit indefinite_unbounded__vect__vector__capacity__last__bit))
(assert (<= 0 indefinite_unbounded__vect__vector__capacity__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((vector__ref (mk_vector__ref (vector__content us_rep)))))
(define-fun vector__ref___projection ((a vector__ref)) us_rep (vector__content a))
(define-fun to_rep ((x capacity_range)) Int (capacity_rangeqtint x))
(declare-fun of_rep (Int) capacity_range)
(assert (forall ((x capacity_range)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x capacity_range)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(define-fun capacity ((container us_rep)) Int (ite (= (distinct 0 0) true) (to_rep (rec__indefinite_unbounded__vect__vector__capacity (us_split_discrs1 container))) 2147483647))
(declare-fun capacity__function_guard (Int us_rep) Bool)
(define-fun dynamic_invariant ((temp___expr_235 Int) (temp___is_init_231 Bool) (temp___skip_constant_232 Bool) (temp___do_toplevel_233 Bool) (temp___do_typ_inv_234 Bool)) Bool (=> (or (= temp___is_init_231 true) (<= 0 2147483647)) (in_range1 temp___expr_235)))
(declare-fun length (us_rep) Int)
(declare-fun length__function_guard (Int us_rep) Bool)
(assert (forall ((container us_rep)) (! (let ((result (length container))) (and (<= result (capacity container)) (dynamic_invariant result true false true true))) :pattern ((length container)))))
(declare-sort us_main_type1 0)
(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)
(declare-sort us_rep1 0)
(declare-fun bool_eq (us_rep1 us_rep1) Bool)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-fun user_eq2 (us_rep1 us_rep1) Bool)
(declare-const dummy2 us_rep1)
(declare-datatypes () ((sequence__ref (mk_sequence__ref (sequence__content us_rep1)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep1 (sequence__content a))
(declare-fun length1 (us_rep1) Int)
(declare-fun length__function_guard1 (Int us_rep1) Bool)
(define-fun last ((container us_rep1)) Int (+ 0 (length1 container)))
(declare-fun last__function_guard (Int us_rep1) Bool)
(declare-fun model__ (us_rep) us_rep1)
(declare-fun model____function_guard (us_rep1 us_rep) Bool)
(define-fun last_index ((container us_rep)) Int (last (model__ container)))
(declare-fun last_index__function_guard (Int us_rep) Bool)
(declare-sort extended_index 0)
(declare-fun extended_indexqtint (extended_index) Int)
(assert (forall ((i extended_index)) (and (<= 0 (extended_indexqtint i)) (<= (extended_indexqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq3 (extended_index extended_index) Bool)
(declare-const dummy3 extended_index)
(declare-datatypes () ((extended_index__ref (mk_extended_index__ref (extended_index__content extended_index)))))
(define-fun extended_index__ref___projection ((a extended_index__ref)) extended_index (extended_index__content a))
(define-fun dynamic_invariant1 ((temp___expr_228 Int) (temp___is_init_224 Bool) (temp___skip_constant_225 Bool) (temp___do_toplevel_226 Bool) (temp___do_typ_inv_227 Bool)) Bool (=> (or (= temp___is_init_224 true) (<= 0 2147483647)) (in_range2 temp___expr_228)))
(declare-sort tcount_typeB 0)
(declare-fun tcount_typeBqtint (tcount_typeB) Int)
(assert (forall ((i tcount_typeB)) (and (<= (- 2147483648) (tcount_typeBqtint i)) (<= (tcount_typeBqtint i) 2147483647))))
(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq4 (tcount_typeB tcount_typeB) Bool)
(declare-const dummy4 tcount_typeB)
(declare-datatypes () ((tcount_typeB__ref (mk_tcount_typeB__ref (tcount_typeB__content tcount_typeB)))))
(define-fun tcount_typeB__ref___projection ((a tcount_typeB__ref)) tcount_typeB (tcount_typeB__content a))
(declare-sort count_type 0)
(declare-fun count_typeqtint (count_type) Int)
(assert (forall ((i count_type)) (and (<= 0 (count_typeqtint i)) (<= (count_typeqtint i) 2147483647))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (count_type count_type) Bool)
(declare-const dummy5 count_type)
(declare-datatypes () ((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type (count_type__content a))
(define-fun dynamic_invariant2 ((temp___expr_207 Int) (temp___is_init_203 Bool) (temp___skip_constant_204 Bool) (temp___do_toplevel_205 Bool) (temp___do_typ_inv_206 Bool)) Bool (=> (or (= temp___is_init_203 true) (<= 0 2147483647)) (in_range4 temp___expr_207)))
(declare-sort element_type 0)
(declare-fun element_typeqtint (element_type) Int)
(assert (forall ((i element_type)) (and (<= (- 2147483648) (element_typeqtint i)) (<= (element_typeqtint i) 2147483647))))
(define-fun in_range5 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (element_type element_type) Bool)
(declare-const dummy6 element_type)
(declare-datatypes () ((element_type__ref (mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___projection ((a element_type__ref)) element_type (element_type__content a))
(define-fun dynamic_invariant3 ((temp___expr_221 Int) (temp___is_init_217 Bool) (temp___skip_constant_218 Bool) (temp___do_toplevel_219 Bool) (temp___do_typ_inv_220 Bool)) Bool (=> (or (= temp___is_init_217 true) (<= (- 2147483648) 2147483647)) (in_range5 temp___expr_221)))
(declare-const container__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const before Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const new_item Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const count Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-fun get (us_rep1 Int) Int)
(declare-fun get__function_guard (Int us_rep1 Int) Bool)
(define-fun oeq ((left us_rep1) (right us_rep1)) Bool (and (= (length1 left) (length1 right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun oeq__function_guard (Bool us_rep1 us_rep1) Bool)
(assert (forall ((a us_rep1) (b us_rep1)) (! (= (user_eq2 a b) (oeq a b)) :pattern ((user_eq2 a b)))))
(define-fun default_initial_assumption ((temp___expr_274 us_rep1) (temp___skip_top_level_275 Bool)) Bool (=> (not (= temp___skip_top_level_275 true)) (= (length1 temp___expr_274) 0)))
(assert (forall ((container us_rep)) (! (= (length1 (model__ container)) (length container)) :pattern ((model__ container)))))
(declare-sort extended_index1 0)
(declare-fun extended_indexqtint1 (extended_index1) Int)
(assert (forall ((i extended_index1)) (and (<= 0 (extended_indexqtint1 i)) (<= (extended_indexqtint1 i) 2147483647))))
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (extended_index1 extended_index1) Bool)
(declare-const dummy7 extended_index1)
(declare-datatypes () ((extended_index__ref1 (mk_extended_index__ref1 (extended_index__content1 extended_index1)))))
(define-fun extended_index__ref___2__projection ((a extended_index__ref1)) extended_index1 (extended_index__content1 a))
(define-fun dynamic_invariant4 ((temp___expr_266 Int) (temp___is_init_262 Bool) (temp___skip_constant_263 Bool) (temp___do_toplevel_264 Bool) (temp___do_typ_inv_265 Bool)) Bool (=> (or (= temp___is_init_262 true) (<= 0 2147483647)) (in_range6 temp___expr_266)))
(assert (forall ((container us_rep1)) (! (let ((result (length1 container))) (and (<= (+ 0 result) 2147483647) (dynamic_invariant2 result true false true true))) :pattern ((length1 container)))))
(declare-sort element_type1 0)
(declare-fun element_typeqtint1 (element_type1) Int)
(assert (forall ((i element_type1)) (and (<= (- 2147483648) (element_typeqtint1 i)) (<= (element_typeqtint1 i) 2147483647))))
(define-fun in_range7 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq8 (element_type1 element_type1) Bool)
(declare-const dummy8 element_type1)
(declare-datatypes () ((element_type__ref1 (mk_element_type__ref1 (element_type__content1 element_type1)))))
(define-fun element_type__ref___2__projection ((a element_type__ref1)) element_type1 (element_type__content1 a))
(define-fun dynamic_invariant5 ((temp___expr_259 Int) (temp___is_init_255 Bool) (temp___skip_constant_256 Bool) (temp___do_toplevel_257 Bool) (temp___do_typ_inv_258 Bool)) Bool (=> (or (= temp___is_init_255 true) (<= (- 2147483648) 2147483647)) (in_range7 temp___expr_259)))
(assert (forall ((container us_rep1)) (forall ((position Int)) (! (=> (and (dynamic_invariant4 position true true true true) (and (<= 1 position) (<= position (last container)))) (dynamic_invariant5 (get container position) true false true true)) :pattern ((get container position))))))
(declare-const container__split_fields us_main_type)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Bool)
(declare-const o4 Int)
(declare-const o5 Bool)
(declare-const o6 Bool)
(declare-const o7 Bool)
(assert (in_range2 before))
(assert (in_range5 new_item))
(assert (in_range4 count))
(assert (=> (not (= before 0)) (and (= o4 (last (model__ (mk___rep container__split_discrs (mk___split_fields container__split_fields))))) (and (in_range2 o4) (= o4 (last (model__ (mk___rep container__split_discrs (mk___split_fields container__split_fields)))))))))
(assert (=> (not (= before 0)) (= o5 (ite (= (- before 1) o4) true false))))
(assert (=> (not (not (= before 0))) (= o5 false)))
(assert (and (= o2 (last (model__ (mk___rep container__split_discrs (mk___split_fields container__split_fields))))) (and (in_range2 o2) (= o2 (last (model__ (mk___rep container__split_discrs (mk___split_fields container__split_fields))))))))
(assert (= o3 (ite (<= before o2) true false)))
(assert (= o6 (ite (<= 1 before) o3 false)))
(assert (= o7 (ite (= o6 false) o5 true)))
(assert (and (= o (capacity (mk___rep container__split_discrs (mk___split_fields container__split_fields)))) (and (in_range1 o) (= o (ite (= (distinct 0 0) true) (to_rep (rec__indefinite_unbounded__vect__vector__capacity container__split_discrs)) 2147483647)))))
(assert (= o1 (- o count)))
(assert (not (in_range3 o1)))
(check-sat)
(exit)
