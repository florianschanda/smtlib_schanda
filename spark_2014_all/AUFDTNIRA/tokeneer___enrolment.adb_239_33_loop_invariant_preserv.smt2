(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(declare-sort statust 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (statust statust) Bool)
(declare-const dummy2 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant1 ((temp___expr_200 Int) (temp___is_init_196 Bool) (temp___skip_constant_197 Bool) (temp___do_toplevel_198 Bool) (temp___do_typ_inv_199 Bool)) Bool (=> (or (= temp___is_init_196 true) (<= 0 1)) (in_range3 temp___expr_200)))
(declare-sort character 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (character character) Bool)
(declare-const dummy3 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range4 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq4 (us_t us_t) Bool)
(declare-const dummy4 us_t)
(declare-datatypes () ((stringf1l1000__ref (mk_stringf1l1000__ref (stringf1l1000__content us_t)))))
(define-fun stringf1l1000__ref___projection ((a stringf1l1000__ref)) us_t (stringf1l1000__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq5 (us_t1 us_t1) Bool)
(declare-const dummy5 us_t1)
(declare-datatypes () ((stringf1__ref (mk_stringf1__ref (stringf1__content us_t1)))))
(define-fun stringf1__ref___projection ((a stringf1__ref)) us_t1 (stringf1__content a))
(define-fun dynamic_invariant2 ((temp___expr_350 us_t) (temp___is_init_346 Bool) (temp___skip_constant_347 Bool) (temp___do_toplevel_348 Bool) (temp___do_typ_inv_349 Bool)) Bool (and (=> (not (= temp___skip_constant_347 true)) (dynamic_property 1 2147483647 (first1 temp___expr_350) (last1 temp___expr_350))) (=> (= temp___do_toplevel_348 true) (=> (= temp___is_init_346 true) (and (let ((temp___352 (of_array1 (to_array temp___expr_350) (first1 temp___expr_350) (last1 temp___expr_350)))) (and (= (first3 temp___352) 1) (<= 0 (last3 temp___352)))) (<= (last1 temp___expr_350) 1000))))))
(define-fun dynamic_predicate ((temp___354 us_t)) Bool (and (let ((temp___356 (of_array1 (to_array temp___354) (first1 temp___354) (last1 temp___354)))) (and (= (first3 temp___356) 1) (<= 0 (last3 temp___356)))) (<= (last1 temp___354) 1000)))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep 0)
(declare-fun bool_eq3 (us_rep us_rep) Bool)
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))
(declare-fun endoffile (us_rep) Bool)
(declare-fun endoffile__function_guard (Bool us_rep) Bool)
(declare-fun endofline (us_rep) Bool)
(declare-fun endofline__function_guard (Bool us_rep) Bool)
(declare-sort logfileindext 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq7 (logfileindext logfileindext) Bool)
(declare-const dummy7 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep2 (logfileindext) Int)
(declare-fun of_rep2 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x logfileindext)) (! (in_range5 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (logentrycountt logentrycountt) Bool)
(declare-const dummy8 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep3 (logentrycountt) Int)
(declare-fun of_rep3 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x logentrycountt)) (! (in_range6 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort logfilecountt 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (logfilecountt logfilecountt) Bool)
(declare-const dummy9 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep4 (logfilecountt) Int)
(declare-fun of_rep4 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x logfilecountt)) (! (in_range7 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first4 Int)) (! (= (slide1 a first4 first4) a) :pattern ((slide1 a first4 first4))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq4 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_172 Int)) (=> (and (<= a__first temp___idx_172) (<= temp___idx_172 a__last)) (= (to_rep2 (select a temp___idx_172)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_172))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_172 Int)) (=> (and (<= a__first temp___idx_172) (<= temp___idx_172 a__last)) (= (to_rep2 (select a temp___idx_172)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_172)))))))))))
(declare-const dummy10 (Array Int logfileindext))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int logfileindext)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int logfileindext)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq10 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep1 (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep1)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq5 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (bool_eq4 (rec__auditlog__logfilelistt__list (us_split_fields1 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields1 b)) 1 17) true) (= (to_rep2 (rec__auditlog__logfilelistt__head (us_split_fields1 a))) (to_rep2 (rec__auditlog__logfilelistt__head (us_split_fields1 b))))) (= (to_rep2 (rec__auditlog__logfilelistt__lasti (us_split_fields1 a))) (to_rep2 (rec__auditlog__logfilelistt__lasti (us_split_fields1 b))))) (= (to_rep4 (rec__auditlog__logfilelistt__length (us_split_fields1 a))) (to_rep4 (rec__auditlog__logfilelistt__length (us_split_fields1 b))))) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep1) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep1) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep1)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment4 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq11 (us_rep1 us_rep1) Bool)
(declare-const dummy11 us_rep1)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep1)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep1 (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq12 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy12 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep5 (fileentrycountt) Int)
(declare-fun of_rep5 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range8 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first4 Int)) (! (= (slide2 a first4 first4) a) :pattern ((slide2 a first4 first4))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq6 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep5 (select a temp___idx_173)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_173))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep5 (select a temp___idx_173)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_173)))))))))))
(declare-const dummy13 (Array Int fileentrycountt))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment5 a))))
(declare-fun user_eq13 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep1) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields2)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields2)) us_rep1 (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields2)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep2 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___9__projection ((a us_rep2)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq7 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 a))) (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 b)))) (= (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 a))) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 b))))) (= (bool_eq5 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 b))) true)) (= (bool_eq6 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 b)) 1 17) true)) true false))
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep2) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep2) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep2)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment6 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq14 (us_rep2 us_rep2) Bool)
(declare-const dummy14 us_rep2)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep2)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep2 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun temp___1245 (Int) (Array Int logfileindext))
(declare-fun temp___1249 (Int) (Array Int fileentrycountt))
(define-fun dynamic_invariant3 ((temp___expr_1239 us_rep2) (temp___is_init_1235 Bool) (temp___skip_constant_1236 Bool) (temp___do_toplevel_1237 Bool) (temp___do_typ_inv_1238 Bool)) Bool (=> (= temp___do_typ_inv_1238 true) (= (valid_numberlogentries (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1239))) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1239))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1239)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1239))) true)))
(define-fun default_initial_assumption ((temp___expr_1243 us_rep2) (temp___skip_top_level_1244 Bool)) Bool (and (and (and (= (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1243))) 1) (= (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1243))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1243)) (mk___rep (mk___split_fields (temp___1245 1) (of_rep2 1) (of_rep2 1) (of_rep4 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1243)) (temp___1249 0))))
(define-fun type_invariant ((temp___1253 us_rep2)) Bool (= (valid_numberlogentries (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___1253))) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___1253))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___1253)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___1253))) true))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep))))))
(declare-fun slide3 ((Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep))) (forall ((first4 Int)) (! (= (slide3 a first4 first4) a) :pattern ((slide3 a first4 first4))))))
(assert (forall ((a (Array Int us_rep))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq8 ((a (Array Int us_rep)) (a__first Int) (a__last Int) (b (Array Int us_rep)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (bool_eq3 (select a temp___idx_174) (select b (+ (- b__first a__first) temp___idx_174))) true)))) true false))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq8 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (bool_eq3 (select a temp___idx_174) (select b (+ (- b__first a__first) temp___idx_174))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort filestatust 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq15 (filestatust filestatust) Bool)
(declare-const dummy15 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep6 (filestatust) Int)
(declare-fun of_rep6 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x filestatust)) (! (in_range9 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int filestatust))))))
(declare-fun slide4 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first4 Int)) (! (= (slide4 a first4 first4) a) :pattern ((slide4 a first4 first4))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(define-fun bool_eq9 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (to_rep6 (select a temp___idx_175)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_175))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq9 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (to_rep6 (select a temp___idx_175)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_175)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort namecountt 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 40)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq16 (namecountt namecountt) Bool)
(declare-const dummy16 namecountt)
(declare-datatypes () ((namecountt__ref (mk_namecountt__ref (namecountt__content namecountt)))))
(define-fun namecountt__ref___projection ((a namecountt__ref)) namecountt (namecountt__content a))
(declare-fun to_rep7 (namecountt) Int)
(declare-fun of_rep7 (Int) namecountt)
(assert (forall ((x namecountt)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x namecountt)) (! (in_range10 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-const dummy17 (Array Int character))
(declare-const value__size7 Int)
(declare-fun object__size7 ((Array Int character)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int character)) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 ((Array Int character)) Int)
(assert (<= 0 value__size7))
(assert (forall ((a (Array Int character))) (<= 0 (object__size7 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment7 a))))
(declare-fun user_eq17 ((Array Int character) (Array Int character)) Bool)
(declare-sort issueridt 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq18 (issueridt issueridt) Bool)
(declare-const dummy18 issueridt)
(declare-datatypes () ((issueridt__ref (mk_issueridt__ref (issueridt__content issueridt)))))
(define-fun issueridt__ref___projection ((a issueridt__ref)) issueridt (issueridt__content a))
(declare-fun to_rep8 (issueridt) Int)
(declare-fun of_rep8 (Int) issueridt)
(assert (forall ((x issueridt)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x issueridt)) (! (in_range11 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__cryptotypes__issuert__id issueridt) (rec__cryptotypes__issuert__namelength namecountt) (rec__cryptotypes__issuert__name (Array Int character))))))
(define-fun us_split_fields_ID__projection ((a us_split_fields4)) issueridt (rec__cryptotypes__issuert__id a))
(define-fun us_split_fields_NameLength__projection ((a us_split_fields4)) namecountt (rec__cryptotypes__issuert__namelength a))
(define-fun us_split_fields_Name__projection ((a us_split_fields4)) (Array Int character) (rec__cryptotypes__issuert__name a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep3 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___4__projection ((a us_rep3)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq10 ((a us_rep3) (b us_rep3)) Bool (ite (and (and (= (to_rep8 (rec__cryptotypes__issuert__id (us_split_fields5 a))) (to_rep8 (rec__cryptotypes__issuert__id (us_split_fields5 b)))) (= (to_rep7 (rec__cryptotypes__issuert__namelength (us_split_fields5 a))) (to_rep7 (rec__cryptotypes__issuert__namelength (us_split_fields5 b))))) (= (bool_eq (rec__cryptotypes__issuert__name (us_split_fields5 a)) 1 40 (rec__cryptotypes__issuert__name (us_split_fields5 b)) 1 40) true)) true false))
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep3) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep3) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep3)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment8 a))))
(declare-const cryptotypes__issuert__id__first__bit Int)
(declare-const cryptotypes__issuert__id__last__bit Int)
(declare-const cryptotypes__issuert__id__position Int)
(assert (<= 0 cryptotypes__issuert__id__first__bit))
(assert (< cryptotypes__issuert__id__first__bit cryptotypes__issuert__id__last__bit))
(assert (<= 0 cryptotypes__issuert__id__position))
(declare-const cryptotypes__issuert__namelength__first__bit Int)
(declare-const cryptotypes__issuert__namelength__last__bit Int)
(declare-const cryptotypes__issuert__namelength__position Int)
(assert (<= 0 cryptotypes__issuert__namelength__first__bit))
(assert (< cryptotypes__issuert__namelength__first__bit cryptotypes__issuert__namelength__last__bit))
(assert (<= 0 cryptotypes__issuert__namelength__position))
(declare-const cryptotypes__issuert__name__first__bit Int)
(declare-const cryptotypes__issuert__name__last__bit Int)
(declare-const cryptotypes__issuert__name__position Int)
(assert (<= 0 cryptotypes__issuert__name__first__bit))
(assert (< cryptotypes__issuert__name__first__bit cryptotypes__issuert__name__last__bit))
(assert (<= 0 cryptotypes__issuert__name__position))
(declare-fun user_eq19 (us_rep3 us_rep3) Bool)
(declare-const dummy19 us_rep3)
(declare-datatypes () ((issuert__ref (mk_issuert__ref (issuert__content us_rep3)))))
(define-fun issuert__ref___projection ((a issuert__ref)) us_rep3 (issuert__content a))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__keystore__optionalprivatekeyt__ispresent Bool) (rec__keystore__optionalprivatekeyt__owner us_rep3)))))
(define-fun us_split_fields_IsPresent__projection ((a us_split_fields6)) Bool (rec__keystore__optionalprivatekeyt__ispresent a))
(define-fun us_split_fields_Owner__projection ((a us_split_fields6)) us_rep3 (rec__keystore__optionalprivatekeyt__owner a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___12__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep4 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___13__projection ((a us_rep4)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq11 ((a us_rep4) (b us_rep4)) Bool (ite (and (= (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields7 a)) (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields7 b))) (= (bool_eq10 (rec__keystore__optionalprivatekeyt__owner (us_split_fields7 a)) (rec__keystore__optionalprivatekeyt__owner (us_split_fields7 b))) true)) true false))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep4) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep4) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep4)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment9 a))))
(declare-const keystore__optionalprivatekeyt__ispresent__first__bit Int)
(declare-const keystore__optionalprivatekeyt__ispresent__last__bit Int)
(declare-const keystore__optionalprivatekeyt__ispresent__position Int)
(assert (<= 0 keystore__optionalprivatekeyt__ispresent__first__bit))
(assert (< keystore__optionalprivatekeyt__ispresent__first__bit keystore__optionalprivatekeyt__ispresent__last__bit))
(assert (<= 0 keystore__optionalprivatekeyt__ispresent__position))
(declare-const keystore__optionalprivatekeyt__owner__first__bit Int)
(declare-const keystore__optionalprivatekeyt__owner__last__bit Int)
(declare-const keystore__optionalprivatekeyt__owner__position Int)
(assert (<= 0 keystore__optionalprivatekeyt__owner__first__bit))
(assert (< keystore__optionalprivatekeyt__owner__first__bit keystore__optionalprivatekeyt__owner__last__bit))
(assert (<= 0 keystore__optionalprivatekeyt__owner__position))
(declare-fun user_eq20 (us_rep4 us_rep4) Bool)
(declare-const dummy20 us_rep4)
(declare-datatypes () ((optionalprivatekeyt__ref (mk_optionalprivatekeyt__ref (optionalprivatekeyt__content us_rep4)))))
(define-fun optionalprivatekeyt__ref___projection ((a optionalprivatekeyt__ref)) us_rep4 (optionalprivatekeyt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-fun privatekeypresent (us_split_fields6 us_private) Bool)
(declare-fun privatekeypresent__function_guard (Bool us_split_fields6 us_private) Bool)
(assert true)
(assert (forall ((keystore__thistisinfo__fields us_split_fields6)) (forall ((keystore__state us_private)) (! (= (= (privatekeypresent keystore__thistisinfo__fields keystore__state) true) (= (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields7 (mk___rep3 keystore__thistisinfo__fields))) true)) :pattern ((privatekeypresent keystore__thistisinfo__fields keystore__state))))))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-fun makedescription (us_t Int) (Array Int character))
(declare-fun makedescription__function_guard ((Array Int character) us_t Int) Bool)
(assert true)
(declare-fun temp___String_Literal_1742 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1742 us_void_param) 1)) 84) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 2)) 104)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 3)) 101)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 4)) 32)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 6)) 110)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 7)) 114)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 8)) 111)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 10)) 109)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 11)) 101)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 12)) 110)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 15)) 102)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 16)) 105)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 17)) 108)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 18)) 101)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 20)) 105)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 21)) 115)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 23)) 99)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 24)) 111)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 25)) 114)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 26)) 114)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 27)) 117)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 28)) 112)) (= (to_rep (select (temp___String_Literal_1742 us_void_param) 29)) 116)) :pattern ((temp___String_Literal_1742 us_void_param)))))
(declare-fun temp___String_Literal_1754 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1754 us_void_param) 1)) 84) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 2)) 104)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 3)) 101)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 4)) 32)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 6)) 110)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 7)) 114)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 8)) 111)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 10)) 109)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 11)) 101)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 12)) 110)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 15)) 102)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 16)) 105)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 17)) 108)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 18)) 101)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 20)) 105)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 21)) 115)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 23)) 99)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 24)) 111)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 25)) 114)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 26)) 114)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 27)) 117)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 28)) 112)) (= (to_rep (select (temp___String_Literal_1754 us_void_param) 29)) 116)) :pattern ((temp___String_Literal_1754 us_void_param)))))
(define-fun dynamic_invariant4 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range4 temp___expr_74)))
(define-fun dynamic_invariant5 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant6 ((temp___expr_313 us_t1) (temp___is_init_309 Bool) (temp___skip_constant_310 Bool) (temp___do_toplevel_311 Bool) (temp___do_typ_inv_312 Bool)) Bool (and (=> (not (= temp___skip_constant_310 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_313) (last3 temp___expr_313))) (=> (= temp___do_toplevel_311 true) (=> (= temp___is_init_309 true) (and (= (first3 temp___expr_313) 1) (<= 0 (last3 temp___expr_313)))))))
(define-fun dynamic_predicate1 ((temp___316 us_t1)) Bool (and (= (first3 temp___316) 1) (<= 0 (last3 temp___316))))
(define-fun dynamic_invariant7 ((temp___expr_1177 Int) (temp___is_init_1173 Bool) (temp___skip_constant_1174 Bool) (temp___do_toplevel_1175 Bool) (temp___do_typ_inv_1176 Bool)) Bool (=> (or (= temp___is_init_1173 true) (<= 0 17)) (in_range7 temp___expr_1177)))
(define-fun dynamic_invariant8 ((temp___expr_1184 Int) (temp___is_init_1180 Bool) (temp___skip_constant_1181 Bool) (temp___do_toplevel_1182 Bool) (temp___do_typ_inv_1183 Bool)) Bool (=> (or (= temp___is_init_1180 true) (<= 1 17)) (in_range5 temp___expr_1184)))
(define-fun dynamic_invariant9 ((temp___expr_1310 Int) (temp___is_init_1306 Bool) (temp___skip_constant_1307 Bool) (temp___do_toplevel_1308 Bool) (temp___do_typ_inv_1309 Bool)) Bool (=> (or (= temp___is_init_1306 true) (<= 0 2)) (in_range9 temp___expr_1310)))
(define-fun dynamic_invariant10 ((temp___expr_1191 Int) (temp___is_init_1187 Bool) (temp___skip_constant_1188 Bool) (temp___do_toplevel_1189 Bool) (temp___do_typ_inv_1190 Bool)) Bool (=> (or (= temp___is_init_1187 true) (<= 0 17408)) (in_range6 temp___expr_1191)))
(define-fun dynamic_invariant11 ((temp___expr_1222 Int) (temp___is_init_1218 Bool) (temp___skip_constant_1219 Bool) (temp___do_toplevel_1220 Bool) (temp___do_typ_inv_1221 Bool)) Bool (=> (or (= temp___is_init_1218 true) (<= 0 1024)) (in_range8 temp___expr_1222)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep1)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep4 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep4 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles))) 1) 1024) (to_rep5 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(assert (forall ((temp___1251 Int)) (=> (dynamic_invariant11 temp___1251 true true true true) (forall ((temp___1252 Int)) (= (to_rep5 (select (temp___1249 temp___1251) temp___1252)) temp___1251)))))
(define-fun dynamic_invariant12 ((temp___expr_960 Int) (temp___is_init_956 Bool) (temp___skip_constant_957 Bool) (temp___do_toplevel_958 Bool) (temp___do_typ_inv_959 Bool)) Bool (=> (or (= temp___is_init_956 true) (<= 0 40)) (in_range10 temp___expr_960)))
(define-fun dynamic_invariant13 ((temp___expr_984 Int) (temp___is_init_980 Bool) (temp___skip_constant_981 Bool) (temp___do_toplevel_982 Bool) (temp___do_typ_inv_983 Bool)) Bool (=> (or (= temp___is_init_980 true) (<= 0 4294967295)) (in_range11 temp___expr_984)))
(assert (forall ((temp___1247 Int)) (=> (dynamic_invariant8 temp___1247 true true true true) (forall ((temp___1248 Int)) (= (to_rep2 (select (temp___1245 temp___1247) temp___1248)) temp___1247)))))
(declare-const logfiles (Array Int us_rep))
(declare-const logfilesstatus (Array Int filestatust))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const auditsystemfault Bool)
(declare-const thistisinfo__split_fields Bool)
(declare-const thistisinfo__split_fields1 issueridt)
(declare-const thistisinfo__split_fields2 namecountt)
(declare-const thistisinfo__split_fields3 (Array Int character))
(declare-const description (Array Int character))
(declare-const certno Int)
(declare-const filestate us_private)
(declare-const state us_private)
(declare-const state1 us_private)
(declare-const store1 us_private)
(declare-const temp___1743 us_t)
(declare-const o us_t)
(declare-const o1 (Array Int character))
(declare-const o2 Int)
(declare-const o3 Bool)
(declare-const o4 Bool)
(declare-const o5 Bool)
(declare-const o6 Int)
(declare-const o7 Bool)
(declare-const o8 Bool)
(declare-const o9 Bool)
(declare-const logfiles1 (Array Int us_rep))
(declare-const logfilesstatus1 (Array Int filestatust))
(declare-const logfilestate__split_fields7 us_split_fields2)
(declare-const auditalarm1 Int)
(declare-const auditsystemfault1 Bool)
(declare-const thistisinfo__split_fields4 us_split_fields6)
(declare-const filestate1 us_private)
(declare-const state2 us_private)
(declare-const state3 us_private)
(declare-const store2 us_private)
(declare-const result int__ref)
(declare-const certno1 Int)
(declare-const thefile us_rep)
(declare-const dataok Bool)
(declare-const logfiles2 (Array Int us_rep))
(declare-const logfilesstatus2 (Array Int filestatust))
(declare-const logfilestate__split_fields8 us_split_fields2)
(declare-const auditalarm2 Int)
(declare-const auditsystemfault2 Bool)
(declare-const thistisinfo__split_fields5 us_split_fields6)
(declare-const thefile1 us_rep)
(declare-const dataok1 Bool)
(declare-const description1 (Array Int character))
(declare-const filestate2 us_private)
(declare-const state4 us_private)
(declare-const state5 us_private)
(declare-const store3 us_private)
(declare-const result1 map__ref)
(declare-const description2 (Array Int character))
(declare-const result2 int__ref)
(declare-const certno2 Int)
(declare-const logfiles3 (Array Int us_rep))
(declare-const logfilesstatus3 (Array Int filestatust))
(declare-const logfilestate__split_fields9 us_split_fields2)
(declare-const auditalarm3 Int)
(declare-const auditsystemfault3 Bool)
(declare-const thistisinfo__split_fields6 us_split_fields6)
(declare-const thefile2 us_rep)
(declare-const dataok2 Bool)
(declare-const description3 (Array Int character))
(declare-const filestate3 us_private)
(declare-const state6 us_private)
(declare-const state7 us_private)
(declare-const store4 us_private)
(declare-const result3 Bool)
(declare-const logfiles4 (Array Int us_rep))
(declare-const logfilesstatus4 (Array Int filestatust))
(declare-const logfilestate__split_fields10 us_split_fields2)
(declare-const auditalarm4 Int)
(declare-const auditsystemfault4 Bool)
(declare-const thistisinfo__split_fields7 us_split_fields6)
(declare-const thefile3 us_rep)
(declare-const dataok3 Bool)
(declare-const description4 (Array Int character))
(declare-const certno3 Int)
(declare-const filestate4 us_private)
(declare-const state8 us_private)
(declare-const state9 us_private)
(declare-const store5 us_private)
(declare-const result4 Bool)
(declare-const result5 int__ref)
(declare-const certno4 Int)
(declare-const logfiles5 (Array Int us_rep))
(declare-const logfilesstatus5 (Array Int filestatust))
(declare-const logfilestate__split_fields11 us_split_fields2)
(declare-const auditalarm5 Int)
(declare-const auditsystemfault5 Bool)
(declare-const thistisinfo__split_fields8 us_split_fields6)
(declare-const thefile4 us_rep)
(declare-const dataok4 Bool)
(declare-const description5 (Array Int character))
(declare-const filestate5 us_private)
(declare-const state10 us_private)
(declare-const state11 us_private)
(declare-const store6 us_private)
(declare-const thefile5 us_rep)
(declare-const result6 Bool)
(assert (= (valid_numberlogentries (to_rep2 logfilestate__split_fields) (to_rep3 logfilestate__split_fields1) (mk___rep (mk___split_fields logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range3 auditalarm))
(assert (not (= (privatekeypresent (mk___split_fields3 thistisinfo__split_fields (mk___rep2 (mk___split_fields2 thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3))) state1) true)))
(assert (= result (mk_int__ref certno)))
(assert (= certno1 1))
(assert (in_range2 certno1))
(assert (=> (= dataok true) (and (and (=> (and (= (distinct 0 0) true) (= dataok1 true)) (= (privatekeypresent thistisinfo__split_fields5 state5) true)) (=> (not (and (= (distinct 0 0) true) (= dataok1 true))) (= (= (privatekeypresent thistisinfo__split_fields5 state5) true) (= (privatekeypresent (mk___split_fields3 thistisinfo__split_fields (mk___rep2 (mk___split_fields2 thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3))) state1) true)))) (and (= (valid_numberlogentries (to_rep2 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields8)) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields8)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields8) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields8)) true) (in_range3 auditalarm2)))))
(assert (=> (not (= dataok true)) (dynamic_property 1 2147483647 1 29)))
(assert (=> (not (= dataok true)) (= temp___1743 (mk___t (temp___String_Literal_1742 Tuple0) (mk 1 29)))))
(assert (=> (not (= dataok true)) (dynamic_predicate temp___1743)))
(assert (=> (not (= dataok true)) (= o temp___1743)))
(assert (=> (not (= dataok true)) (= o1 (makedescription o certno1))))
(assert (=> (not (= dataok true)) (= result1 (mk_map__ref description))))
(assert (=> (not (= dataok true)) (= description2 o1)))
(assert (=> (not (= dataok true)) (= store3 store1)))
(assert (=> (not (= dataok true)) (= state5 state1)))
(assert (=> (not (= dataok true)) (= state4 state)))
(assert (=> (not (= dataok true)) (= filestate2 filestate)))
(assert (=> (not (= dataok true)) (= description1 description2)))
(assert (=> (not (= dataok true)) (= dataok1 dataok)))
(assert (=> (not (= dataok true)) (= thefile1 thefile)))
(assert (=> (not (= dataok true)) (= thistisinfo__split_fields5 (mk___split_fields3 thistisinfo__split_fields (mk___rep2 (mk___split_fields2 thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3))))))
(assert (=> (not (= dataok true)) (= auditsystemfault2 auditsystemfault)))
(assert (=> (not (= dataok true)) (= auditalarm2 auditalarm)))
(assert (=> (not (= dataok true)) (= logfilestate__split_fields8 (mk___split_fields1 logfilestate__split_fields logfilestate__split_fields1 (mk___rep (mk___split_fields logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6))))
(assert (=> (not (= dataok true)) (= logfilesstatus2 logfilesstatus)))
(assert (=> (not (= dataok true)) (= logfiles2 logfiles)))
(assert (=> (not (= dataok true)) (= store3 store2)))
(assert (=> (not (= dataok true)) (= state5 state3)))
(assert (=> (not (= dataok true)) (= state4 state2)))
(assert (=> (not (= dataok true)) (= filestate2 filestate1)))
(assert (=> (not (= dataok true)) (= description1 description2)))
(assert (=> (not (= dataok true)) (= dataok1 dataok)))
(assert (=> (not (= dataok true)) (= thefile1 thefile)))
(assert (=> (not (= dataok true)) (= thistisinfo__split_fields5 thistisinfo__split_fields4)))
(assert (=> (not (= dataok true)) (= auditsystemfault2 auditsystemfault1)))
(assert (=> (not (= dataok true)) (= auditalarm2 auditalarm1)))
(assert (=> (not (= dataok true)) (= logfilestate__split_fields8 logfilestate__split_fields7)))
(assert (=> (not (= dataok true)) (= logfilesstatus2 logfilesstatus1)))
(assert (=> (not (= dataok true)) (= logfiles2 logfiles1)))
(assert (=> (= dataok1 true) (and (= o2 (+ certno1 1)) (in_range1 (+ certno1 1)))))
(assert (=> (= dataok1 true) (= result2 (mk_int__ref certno1))))
(assert (=> (= dataok1 true) (= certno2 o2)))
(assert (=> (= dataok1 true) (and (and (=> (and (= (distinct 1 0) true) (= dataok2 true)) (= (privatekeypresent thistisinfo__split_fields6 state7) true)) (=> (not (and (= (distinct 1 0) true) (= dataok2 true))) (= (= (privatekeypresent thistisinfo__split_fields6 state7) true) (= (privatekeypresent thistisinfo__split_fields5 state5) true)))) (and (= (valid_numberlogentries (to_rep2 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields9)) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields9)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields9) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields9)) true) (in_range3 auditalarm3)))))
(assert (=> (not (= dataok1 true)) (= store4 store3)))
(assert (=> (not (= dataok1 true)) (= state7 state5)))
(assert (=> (not (= dataok1 true)) (= state6 state4)))
(assert (=> (not (= dataok1 true)) (= filestate3 filestate2)))
(assert (=> (not (= dataok1 true)) (= certno2 certno1)))
(assert (=> (not (= dataok1 true)) (= description3 description1)))
(assert (=> (not (= dataok1 true)) (= dataok2 dataok1)))
(assert (=> (not (= dataok1 true)) (= thefile2 thefile1)))
(assert (=> (not (= dataok1 true)) (= thistisinfo__split_fields6 thistisinfo__split_fields5)))
(assert (=> (not (= dataok1 true)) (= auditsystemfault3 auditsystemfault2)))
(assert (=> (not (= dataok1 true)) (= auditalarm3 auditalarm2)))
(assert (=> (not (= dataok1 true)) (= logfilestate__split_fields9 logfilestate__split_fields8)))
(assert (=> (not (= dataok1 true)) (= logfilesstatus3 logfilesstatus2)))
(assert (=> (not (= dataok1 true)) (= logfiles3 logfiles2)))
(assert (= o3 (endoffile thefile2)))
(assert (= o4 (ite (not (= o3 true)) true false)))
(assert (= result3 (ite (= o4 true) dataok2 false)))
(assert (= result3 true))
(assert (= (privatekeypresent thistisinfo__split_fields7 state9) true))
(assert (<= 2 certno3))
(assert (and (and (and (= (valid_numberlogentries (to_rep2 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields10)) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields10)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields10) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields10)) true) (=> (<= 1 2147483647) (in_range2 certno3))) (in_range3 auditalarm4)) (and (not (= (endoffile thefile3) true)) (= dataok3 true))))
(assert (= o5 (endofline thefile3)))
(assert (= result4 (ite (not (= o5 true)) true false)))
(assert (=> (= result4 true) (and (= o6 (+ certno3 1)) (in_range1 (+ certno3 1)))))
(assert (=> (= result4 true) (= result5 (mk_int__ref certno3))))
(assert (=> (= result4 true) (= certno4 o6)))
(assert (=> (= result4 true) (and (and (=> (and (= (distinct 0 0) true) (= dataok4 true)) (= (privatekeypresent thistisinfo__split_fields8 state11) true)) (=> (not (and (= (distinct 0 0) true) (= dataok4 true))) (= (= (privatekeypresent thistisinfo__split_fields8 state11) true) (= (privatekeypresent thistisinfo__split_fields7 state9) true)))) (and (= (valid_numberlogentries (to_rep2 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields11)) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields11)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields11) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields11)) true) (in_range3 auditalarm5)))))
(assert (=> (not (= result4 true)) (= store6 store5)))
(assert (=> (not (= result4 true)) (= state11 state9)))
(assert (=> (not (= result4 true)) (= state10 state8)))
(assert (=> (not (= result4 true)) (= filestate5 filestate4)))
(assert (=> (not (= result4 true)) (= certno4 certno3)))
(assert (=> (not (= result4 true)) (= description5 description4)))
(assert (=> (not (= result4 true)) (= dataok4 dataok3)))
(assert (=> (not (= result4 true)) (= thefile4 thefile5)))
(assert (=> (not (= result4 true)) (= thistisinfo__split_fields8 thistisinfo__split_fields7)))
(assert (=> (not (= result4 true)) (= auditsystemfault5 auditsystemfault4)))
(assert (=> (not (= result4 true)) (= auditalarm5 auditalarm4)))
(assert (=> (not (= result4 true)) (= logfilestate__split_fields11 logfilestate__split_fields10)))
(assert (=> (not (= result4 true)) (= logfilesstatus5 logfilesstatus4)))
(assert (=> (not (= result4 true)) (= logfiles5 logfiles4)))
(assert (= o7 (endoffile thefile4)))
(assert (= o8 (ite (not (= o7 true)) true false)))
(assert (= o9 (ite (= o8 true) dataok4 false)))
(assert (= result6 (ite (not (= o9 true)) true false)))
(assert (not (= result6 true)))
(assert (not (<= 2 certno4)))
(check-sat)
(exit)
