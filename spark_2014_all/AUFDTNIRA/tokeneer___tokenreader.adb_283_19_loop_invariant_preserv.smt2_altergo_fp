(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq5 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def4 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_78:int. ((((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) and
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))) or
  (not ((a__first <= temp___idx_78) and (temp___idx_78 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))))))))

logic compare : (int,character) farray, int, int, (int,character) farray,
  int, int -> int

axiom compare_def_eq :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq5(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq5(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq5(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,character) farray -> int

logic value__component__size : int

logic object__component__size : (int,character) farray -> int

logic value__alignment : int

logic object__alignment : (int,character) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,character) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,character) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,character) farray. (0 <= object__alignment(a)))

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : (int,character) farray

logic dummy4 : t

logic to_string : us_image -> us_t

logic from_string : us_t -> us_image

type string__ref = { string__content : us_t
}

function string__ref___projection(a: string__ref) : us_t =
  (a).string__content

type unsigned32t

predicate in_range4(x: int) = ((0 <= x) and (x <= 4294967295))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : unsigned32t, unsigned32t -> bool

logic dummy5 : unsigned32t

type unsigned32t__ref = { unsigned32t__content : unsigned32t
}

function unsigned32t__ref___projection(a: unsigned32t__ref) : unsigned32t =
  (a).unsigned32t__content

type t1

logic first2 : t1 -> integer

logic last2 : t1 -> integer

logic mk1 : int, int -> t1

axiom mk_def1 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first2(mk1(f, l))) = f) and (to_rep1(last2(mk1(f, l))) = l)))))

predicate dynamic_property1(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t1 = { elts1 : (int,character) farray; rt1 : t1
}

function to_array1(a: us_t1) : (int,character) farray = (a).elts1

function of_array1(a: (int,character) farray, f: int, l: int) : us_t1 = {
  elts1 = a; rt1 = mk1(f, l) }

function first3(a: us_t1) : int = to_rep1(first2((a).rt1))

function last3(a: us_t1) : int = to_rep1(last2((a).rt1))

logic length1 : us_t1 -> int

axiom length_def1 :
  (forall a:us_t1 [length1(a)]. (((first3(a) <= last3(a)) ->
  (length1(a) = ((last3(a) - first3(a)) + 1))) and
  ((not (first3(a) <= last3(a))) -> (length1(a) = 0))))

logic value__size1 : int

logic object__size1 : (int,character) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,character) farray -> int

logic value__alignment1 : int

logic object__alignment1 : (int,character) farray -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:(int,character) farray. (0 <= object__size1(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,character) farray. (0 <= object__component__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:(int,character) farray. (0 <= object__alignment1(a)))

function bool_eq8(x: us_t1, y: us_t1) : bool = bool_eq5((x).elts1,
  to_rep1(first2((x).rt1)), to_rep1(last2((x).rt1)), (y).elts1,
  to_rep1(first2((y).rt1)), to_rep1(last2((y).rt1)))

logic user_eq5 : us_t1, us_t1 -> bool

logic dummy6 : (int,character) farray

logic dummy7 : t1

type stringf1l1000__ref = { stringf1l1000__content : us_t1
}

function stringf1l1000__ref___projection(a: stringf1l1000__ref) : us_t1 =
  (a).stringf1l1000__content

type t2

logic first4 : t2 -> integer

logic last4 : t2 -> integer

logic mk2 : int, int -> t2

axiom mk_def2 :
  (forall f:int. forall l:int [mk2(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first4(mk2(f, l))) = f) and (to_rep1(last4(mk2(f, l))) = l)))))

predicate dynamic_property2(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t2 = { elts2 : (int,character) farray; rt2 : t2
}

function to_array2(a: us_t2) : (int,character) farray = (a).elts2

function of_array2(a: (int,character) farray, f: int, l: int) : us_t2 = {
  elts2 = a; rt2 = mk2(f, l) }

function first5(a: us_t2) : int = to_rep1(first4((a).rt2))

function last5(a: us_t2) : int = to_rep1(last4((a).rt2))

logic length2 : us_t2 -> int

axiom length_def2 :
  (forall a:us_t2 [length2(a)]. (((first5(a) <= last5(a)) ->
  (length2(a) = ((last5(a) - first5(a)) + 1))) and
  ((not (first5(a) <= last5(a))) -> (length2(a) = 0))))

logic value__size2 : int

logic object__size2 : (int,character) farray -> int

logic value__component__size2 : int

logic object__component__size2 : (int,character) farray -> int

logic value__alignment2 : int

logic object__alignment2 : (int,character) farray -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:(int,character) farray. (0 <= object__size2(a)))

axiom value__component__size_axiom2 : (0 <= value__component__size2)

axiom object__component__size_axiom2 :
  (forall a:(int,character) farray. (0 <= object__component__size2(a)))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:(int,character) farray. (0 <= object__alignment2(a)))

function bool_eq9(x: us_t2, y: us_t2) : bool = bool_eq5((x).elts2,
  to_rep1(first4((x).rt2)), to_rep1(last4((x).rt2)), (y).elts2,
  to_rep1(first4((y).rt2)), to_rep1(last4((y).rt2)))

logic user_eq6 : us_t2, us_t2 -> bool

logic dummy8 : (int,character) farray

logic dummy9 : t2

type stringf1__ref = { stringf1__content : us_t2
}

function stringf1__ref___projection(a: stringf1__ref) : us_t2 =
  (a).stringf1__content

type statust

predicate in_range5(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq7 : statust, statust -> bool

logic dummy10 : statust

type statust__ref = { statust__content : statust
}

function statust__ref___projection(a: statust__ref) : statust =
  (a).statust__content

type descriptioni

predicate in_range6(x: int) = ((1 <= x) and (x <= 150))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq8 : descriptioni, descriptioni -> bool

logic dummy11 : descriptioni

type descriptioni__ref = { descriptioni__content : descriptioni
}

function descriptioni__ref___projection(a: descriptioni__ref) : descriptioni =
  (a).descriptioni__content

logic nouser : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS : int

logic temp___String_Literal_142 : unit -> (int,character) farray

axiom temp___String_Literal_142__def_axiom :
  ((((((((((((((((((((((((((((((((((((((((((((((((((to_rep((temp___String_Literal_142(void)[1])) = 78) and
  (to_rep((temp___String_Literal_142(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_142(void)[3])) = 85)) and
  (to_rep((temp___String_Literal_142(void)[4])) = 115)) and
  (to_rep((temp___String_Literal_142(void)[5])) = 101)) and
  (to_rep((temp___String_Literal_142(void)[6])) = 114)) and
  (to_rep((temp___String_Literal_142(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[8])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[9])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[10])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[12])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[23])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[24])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[25])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[26])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[27])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[28])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[29])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[30])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[31])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[32])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[33])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[34])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[35])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[36])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[37])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[38])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[39])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[40])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[41])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[42])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[43])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[44])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[45])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[46])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[47])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[48])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[49])) = 32)) and
  (to_rep((temp___String_Literal_142(void)[50])) = 32))

type logfileindext

predicate in_range7(x: int) = ((1 <= x) and (x <= 17))

logic bool_eq12 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq9 : logfileindext, logfileindext -> bool

logic dummy12 : logfileindext

type logfileindext__ref = { logfileindext__content : logfileindext
}

function logfileindext__ref___projection(a: logfileindext__ref) : logfileindext =
  (a).logfileindext__content

logic to_rep2 : logfileindext -> int

logic of_rep2 : int -> logfileindext

axiom inversion_axiom2 :
  (forall x:logfileindext [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:logfileindext [to_rep2(x)]. in_range7(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range7(x) ->
  (to_rep2(of_rep2(x)) = x)))

type logentrycountt

predicate in_range8(x: int) = ((0 <= x) and (x <= 17408))

logic bool_eq13 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq10 : logentrycountt, logentrycountt -> bool

logic dummy13 : logentrycountt

type logentrycountt__ref = { logentrycountt__content : logentrycountt
}

function logentrycountt__ref___projection(a: logentrycountt__ref) : logentrycountt =
  (a).logentrycountt__content

logic to_rep3 : logentrycountt -> int

logic of_rep3 : int -> logentrycountt

axiom inversion_axiom3 :
  (forall x:logentrycountt [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:logentrycountt [to_rep3(x)]. in_range8(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range8(x) ->
  (to_rep3(of_rep3(x)) = x)))

type map__ref1 = { map__content1 : (int,logfileindext) farray
}

logic slide1 : (int,logfileindext) farray, int,
  int -> (int,logfileindext) farray

axiom slide_eq1 :
  (forall a:(int,logfileindext) farray.
  (forall first6:int [slide1(a, first6, first6)]. (slide1(a, first6,
  first6) = a)))

axiom slide_def1 :
  (forall a:(int,logfileindext) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat1 : (int,logfileindext) farray, int, int,
  (int,logfileindext) farray, int, int -> (int,logfileindext) farray

axiom concat_def1 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat1(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat1(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat1(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton1 : logfileindext, int -> (int,logfileindext) farray

axiom singleton_def1 :
  (forall v:logfileindext.
  (forall i:int [(singleton1(v, i)[i])]. ((singleton1(v, i)[i]) = v)))

logic bool_eq14 : (int,logfileindext) farray, int, int,
  (int,logfileindext) farray, int, int -> bool

axiom bool_eq_def10 :
  (forall a:(int,logfileindext) farray. forall a__first:int.
  forall a__last:int. forall b:(int,logfileindext) farray.
  forall b__first:int. forall b__last:int [bool_eq14(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_153:int. ((((a__first <= temp___idx_153) and
  (temp___idx_153 <= a__last)) and
  (to_rep2((a[temp___idx_153])) = to_rep2((b[((b__first - a__first) + temp___idx_153)])))) or
  (not ((a__first <= temp___idx_153) and (temp___idx_153 <= a__last)))))) ->
  (bool_eq14(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_153:int. (((a__first <= temp___idx_153) and
  (temp___idx_153 <= a__last)) ->
  (to_rep2((a[temp___idx_153])) = to_rep2((b[((b__first - a__first) + temp___idx_153)]))))))) ->
  (bool_eq14(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq14(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_153:int. (((a__first <= temp___idx_153) and
  (temp___idx_153 <= a__last)) ->
  (to_rep2((a[temp___idx_153])) = to_rep2((b[((b__first - a__first) + temp___idx_153)])))))))))

logic compare1 : (int,logfileindext) farray, int, int,
  (int,logfileindext) farray, int, int -> int

axiom compare_def_eq1 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((compare1(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq14(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt1 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((compare1(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq14(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep2((a[(i + 1)])) <  to_rep2((b[(j + 1)]))))))))))))

axiom compare_def_gt1 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare1(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq14(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep2((b[(i + 1)])) <  to_rep2((a[(j + 1)]))))))))))))

logic dummy14 : (int,logfileindext) farray

logic value__size3 : int

logic object__size3 : (int,logfileindext) farray -> int

logic value__component__size3 : int

logic object__component__size3 : (int,logfileindext) farray -> int

logic value__alignment3 : int

logic object__alignment3 : (int,logfileindext) farray -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:(int,logfileindext) farray. (0 <= object__size3(a)))

axiom value__component__size_axiom3 : (0 <= value__component__size3)

axiom object__component__size_axiom3 :
  (forall a:(int,logfileindext) farray. (0 <= object__component__size3(a)))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:(int,logfileindext) farray. (0 <= object__alignment3(a)))

logic user_eq11 : (int,logfileindext) farray,
  (int,logfileindext) farray -> bool

type logfilecountt

predicate in_range9(x: int) = ((0 <= x) and (x <= 17))

logic bool_eq15 : int, int -> bool

axiom bool_eq_def11 :
  (forall x:int. forall y:int [bool_eq15(x, y)]. (((x = y) -> (bool_eq15(x,
  y) = true)) and ((not (x = y)) -> (bool_eq15(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq12 : logfilecountt, logfilecountt -> bool

logic dummy15 : logfilecountt

type logfilecountt__ref = { logfilecountt__content : logfilecountt
}

function logfilecountt__ref___projection(a: logfilecountt__ref) : logfilecountt =
  (a).logfilecountt__content

logic to_rep4 : logfilecountt -> int

logic of_rep4 : int -> logfilecountt

axiom inversion_axiom4 :
  (forall x:logfilecountt [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 :
  (forall x:logfilecountt [to_rep4(x)]. in_range9(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range9(x) ->
  (to_rep4(of_rep4(x)) = x)))

type us_split_fields = { rec__auditlog__logfilelistt__list :
(int,logfileindext) farray; rec__auditlog__logfilelistt__head :
logfileindext; rec__auditlog__logfilelistt__lasti : logfileindext;
rec__auditlog__logfilelistt__length : logfilecountt
}

function us_split_fields_List__projection(a: us_split_fields) : (int,logfileindext) farray =
  (a).rec__auditlog__logfilelistt__list

function us_split_fields_Head__projection(a: us_split_fields) : logfileindext =
  (a).rec__auditlog__logfilelistt__head

function us_split_fields_LastI__projection(a: us_split_fields) : logfileindext =
  (a).rec__auditlog__logfilelistt__lasti

function us_split_fields_Length__2__projection(a: us_split_fields) : logfilecountt =
  (a).rec__auditlog__logfilelistt__length

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___10__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___11__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq16 : us_rep, us_rep -> bool

axiom bool_eq_def12 :
  (forall a:us_rep. forall b:us_rep [bool_eq16(a, b)].
  ((((((bool_eq14(((a).us_split_fields1).rec__auditlog__logfilelistt__list,
  1, 17, ((b).us_split_fields1).rec__auditlog__logfilelistt__list, 1,
  17) = true) and
  (to_rep2(((a).us_split_fields1).rec__auditlog__logfilelistt__head) = to_rep2(((b).us_split_fields1).rec__auditlog__logfilelistt__head))) and
  (to_rep2(((a).us_split_fields1).rec__auditlog__logfilelistt__lasti) = to_rep2(((b).us_split_fields1).rec__auditlog__logfilelistt__lasti))) and
  (to_rep4(((a).us_split_fields1).rec__auditlog__logfilelistt__length) = to_rep4(((b).us_split_fields1).rec__auditlog__logfilelistt__length))) ->
  (bool_eq16(a, b) = true)) and
  ((not ((((bool_eq14(((a).us_split_fields1).rec__auditlog__logfilelistt__list,
  1, 17, ((b).us_split_fields1).rec__auditlog__logfilelistt__list, 1,
  17) = true) and
  (to_rep2(((a).us_split_fields1).rec__auditlog__logfilelistt__head) = to_rep2(((b).us_split_fields1).rec__auditlog__logfilelistt__head))) and
  (to_rep2(((a).us_split_fields1).rec__auditlog__logfilelistt__lasti) = to_rep2(((b).us_split_fields1).rec__auditlog__logfilelistt__lasti))) and
  (to_rep4(((a).us_split_fields1).rec__auditlog__logfilelistt__length) = to_rep4(((b).us_split_fields1).rec__auditlog__logfilelistt__length)))) ->
  (bool_eq16(a, b) = false))))

logic value__size4 : int

logic object__size4 : us_rep -> int

logic value__alignment4 : int

logic object__alignment4 : us_rep -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:(int,logfileindext) farray. forall a1:logfileindext.
  forall a2:logfileindext. forall a3:logfilecountt. (0 <= object__size4({
  us_split_fields1 = { rec__auditlog__logfilelistt__list = a;
  rec__auditlog__logfilelistt__head = a1;
  rec__auditlog__logfilelistt__lasti = a2;
  rec__auditlog__logfilelistt__length = a3 } })))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:(int,logfileindext) farray. forall a1:logfileindext.
  forall a2:logfileindext. forall a3:logfilecountt.
  (0 <= object__alignment4({ us_split_fields1 = {
  rec__auditlog__logfilelistt__list = a; rec__auditlog__logfilelistt__head =
  a1; rec__auditlog__logfilelistt__lasti = a2;
  rec__auditlog__logfilelistt__length = a3 } })))

logic auditlog__logfilelistt__list__first__bit : int

logic auditlog__logfilelistt__list__last__bit : int

logic auditlog__logfilelistt__list__position : int

axiom auditlog__logfilelistt__list__first__bit_axiom :
  (0 <= auditlog__logfilelistt__list__first__bit)

axiom auditlog__logfilelistt__list__last__bit_axiom :
  (auditlog__logfilelistt__list__first__bit <  auditlog__logfilelistt__list__last__bit)

axiom auditlog__logfilelistt__list__position_axiom :
  (0 <= auditlog__logfilelistt__list__position)

logic auditlog__logfilelistt__head__first__bit : int

logic auditlog__logfilelistt__head__last__bit : int

logic auditlog__logfilelistt__head__position : int

axiom auditlog__logfilelistt__head__first__bit_axiom :
  (0 <= auditlog__logfilelistt__head__first__bit)

axiom auditlog__logfilelistt__head__last__bit_axiom :
  (auditlog__logfilelistt__head__first__bit <  auditlog__logfilelistt__head__last__bit)

axiom auditlog__logfilelistt__head__position_axiom :
  (0 <= auditlog__logfilelistt__head__position)

logic auditlog__logfilelistt__lasti__first__bit : int

logic auditlog__logfilelistt__lasti__last__bit : int

logic auditlog__logfilelistt__lasti__position : int

axiom auditlog__logfilelistt__lasti__first__bit_axiom :
  (0 <= auditlog__logfilelistt__lasti__first__bit)

axiom auditlog__logfilelistt__lasti__last__bit_axiom :
  (auditlog__logfilelistt__lasti__first__bit <  auditlog__logfilelistt__lasti__last__bit)

axiom auditlog__logfilelistt__lasti__position_axiom :
  (0 <= auditlog__logfilelistt__lasti__position)

logic auditlog__logfilelistt__length__first__bit : int

logic auditlog__logfilelistt__length__last__bit : int

logic auditlog__logfilelistt__length__position : int

axiom auditlog__logfilelistt__length__first__bit_axiom :
  (0 <= auditlog__logfilelistt__length__first__bit)

axiom auditlog__logfilelistt__length__last__bit_axiom :
  (auditlog__logfilelistt__length__first__bit <  auditlog__logfilelistt__length__last__bit)

axiom auditlog__logfilelistt__length__position_axiom :
  (0 <= auditlog__logfilelistt__length__position)

logic user_eq13 : us_rep, us_rep -> bool

logic dummy16 : (int,logfileindext) farray

logic dummy17 : logfileindext

logic dummy18 : logfileindext

logic dummy19 : logfilecountt

type logfilelistt__ref = { logfilelistt__content : us_rep
}

function logfilelistt__ref___projection(a: logfilelistt__ref) : us_rep =
  (a).logfilelistt__content

type fileentrycountt

predicate in_range10(x: int) = ((0 <= x) and (x <= 1024))

logic bool_eq17 : int, int -> bool

axiom bool_eq_def13 :
  (forall x:int. forall y:int [bool_eq17(x, y)]. (((x = y) -> (bool_eq17(x,
  y) = true)) and ((not (x = y)) -> (bool_eq17(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq14 : fileentrycountt, fileentrycountt -> bool

logic dummy20 : fileentrycountt

type fileentrycountt__ref = { fileentrycountt__content : fileentrycountt
}

function fileentrycountt__ref___projection(a: fileentrycountt__ref) : fileentrycountt =
  (a).fileentrycountt__content

logic to_rep5 : fileentrycountt -> int

logic of_rep5 : int -> fileentrycountt

axiom inversion_axiom5 :
  (forall x:fileentrycountt [to_rep5(x)]. (of_rep5(to_rep5(x)) = x))

axiom range_axiom5 :
  (forall x:fileentrycountt [to_rep5(x)]. in_range10(to_rep5(x)))

axiom coerce_axiom5 :
  (forall x:int [to_rep5(of_rep5(x))]. (in_range10(x) ->
  (to_rep5(of_rep5(x)) = x)))

type map__ref2 = { map__content2 : (int,fileentrycountt) farray
}

logic slide2 : (int,fileentrycountt) farray, int,
  int -> (int,fileentrycountt) farray

axiom slide_eq2 :
  (forall a:(int,fileentrycountt) farray.
  (forall first6:int [slide2(a, first6, first6)]. (slide2(a, first6,
  first6) = a)))

axiom slide_def2 :
  (forall a:(int,fileentrycountt) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat2 : (int,fileentrycountt) farray, int, int,
  (int,fileentrycountt) farray, int, int -> (int,fileentrycountt) farray

axiom concat_def2 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat2(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat2(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat2(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton2 : fileentrycountt, int -> (int,fileentrycountt) farray

axiom singleton_def2 :
  (forall v:fileentrycountt.
  (forall i:int [(singleton2(v, i)[i])]. ((singleton2(v, i)[i]) = v)))

logic bool_eq18 : (int,fileentrycountt) farray, int, int,
  (int,fileentrycountt) farray, int, int -> bool

axiom bool_eq_def14 :
  (forall a:(int,fileentrycountt) farray. forall a__first:int.
  forall a__last:int. forall b:(int,fileentrycountt) farray.
  forall b__first:int. forall b__last:int [bool_eq18(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_154:int. ((((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) and
  (to_rep5((a[temp___idx_154])) = to_rep5((b[((b__first - a__first) + temp___idx_154)])))) or
  (not ((a__first <= temp___idx_154) and (temp___idx_154 <= a__last)))))) ->
  (bool_eq18(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep5((a[temp___idx_154])) = to_rep5((b[((b__first - a__first) + temp___idx_154)]))))))) ->
  (bool_eq18(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev2 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq18(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep5((a[temp___idx_154])) = to_rep5((b[((b__first - a__first) + temp___idx_154)])))))))))

logic compare2 : (int,fileentrycountt) farray, int, int,
  (int,fileentrycountt) farray, int, int -> int

axiom compare_def_eq2 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare2(a, a_first, a_last, b, b_first, b_last)].
  ((compare2(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq18(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt2 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare2(a, a_first, a_last, b, b_first, b_last)].
  ((compare2(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq18(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep5((a[(i + 1)])) <  to_rep5((b[(j + 1)]))))))))))))

axiom compare_def_gt2 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare2(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare2(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq18(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep5((b[(i + 1)])) <  to_rep5((a[(j + 1)]))))))))))))

logic dummy21 : (int,fileentrycountt) farray

logic value__size5 : int

logic object__size5 : (int,fileentrycountt) farray -> int

logic value__component__size4 : int

logic object__component__size4 : (int,fileentrycountt) farray -> int

logic value__alignment5 : int

logic object__alignment5 : (int,fileentrycountt) farray -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 :
  (forall a:(int,fileentrycountt) farray. (0 <= object__size5(a)))

axiom value__component__size_axiom4 : (0 <= value__component__size4)

axiom object__component__size_axiom4 :
  (forall a:(int,fileentrycountt) farray. (0 <= object__component__size4(a)))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:(int,fileentrycountt) farray. (0 <= object__alignment5(a)))

logic user_eq15 : (int,fileentrycountt) farray,
  (int,fileentrycountt) farray -> bool

type us_split_fields2 = { rec__auditlog__logfilestatet__currentlogfile :
logfileindext; rec__auditlog__logfilestatet__numberlogentries :
logentrycountt; rec__auditlog__logfilestatet__usedlogfiles : us_rep;
rec__auditlog__logfilestatet__logfileentries : (int,fileentrycountt) farray
}

function us_split_fields_CurrentLogFile__projection(a: us_split_fields2) : logfileindext =
  (a).rec__auditlog__logfilestatet__currentlogfile

function us_split_fields_NumberLogEntries__projection(a: us_split_fields2) : logentrycountt =
  (a).rec__auditlog__logfilestatet__numberlogentries

function us_split_fields_UsedLogFiles__projection(a: us_split_fields2) : us_rep =
  (a).rec__auditlog__logfilestatet__usedlogfiles

function us_split_fields_LogFileEntries__projection(a: us_split_fields2) : (int,fileentrycountt) farray =
  (a).rec__auditlog__logfilestatet__logfileentries

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___11__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2
}

function us_rep___12__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

logic bool_eq19 : us_rep1, us_rep1 -> bool

axiom bool_eq_def15 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq19(a, b)].
  ((((((to_rep2(((a).us_split_fields3).rec__auditlog__logfilestatet__currentlogfile) = to_rep2(((b).us_split_fields3).rec__auditlog__logfilestatet__currentlogfile)) and
  (to_rep3(((a).us_split_fields3).rec__auditlog__logfilestatet__numberlogentries) = to_rep3(((b).us_split_fields3).rec__auditlog__logfilestatet__numberlogentries))) and
  (bool_eq16(((a).us_split_fields3).rec__auditlog__logfilestatet__usedlogfiles,
  ((b).us_split_fields3).rec__auditlog__logfilestatet__usedlogfiles) = true)) and
  (bool_eq18(((a).us_split_fields3).rec__auditlog__logfilestatet__logfileentries,
  1, 17, ((b).us_split_fields3).rec__auditlog__logfilestatet__logfileentries,
  1, 17) = true)) -> (bool_eq19(a, b) = true)) and
  ((not ((((to_rep2(((a).us_split_fields3).rec__auditlog__logfilestatet__currentlogfile) = to_rep2(((b).us_split_fields3).rec__auditlog__logfilestatet__currentlogfile)) and
  (to_rep3(((a).us_split_fields3).rec__auditlog__logfilestatet__numberlogentries) = to_rep3(((b).us_split_fields3).rec__auditlog__logfilestatet__numberlogentries))) and
  (bool_eq16(((a).us_split_fields3).rec__auditlog__logfilestatet__usedlogfiles,
  ((b).us_split_fields3).rec__auditlog__logfilestatet__usedlogfiles) = true)) and
  (bool_eq18(((a).us_split_fields3).rec__auditlog__logfilestatet__logfileentries,
  1, 17, ((b).us_split_fields3).rec__auditlog__logfilestatet__logfileentries,
  1, 17) = true))) -> (bool_eq19(a, b) = false))))

logic value__size6 : int

logic object__size6 : us_rep1 -> int

logic value__alignment6 : int

logic object__alignment6 : us_rep1 -> int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 :
  (forall a:logfileindext. forall a1:logentrycountt.
  forall a2:(int,logfileindext) farray. forall a3:logfileindext.
  forall a4:logfileindext. forall a5:logfilecountt.
  forall a6:(int,fileentrycountt) farray. (0 <= object__size6({
  us_split_fields3 = { rec__auditlog__logfilestatet__currentlogfile = a;
  rec__auditlog__logfilestatet__numberlogentries = a1;
  rec__auditlog__logfilestatet__usedlogfiles = { us_split_fields1 = {
  rec__auditlog__logfilelistt__list = a2; rec__auditlog__logfilelistt__head =
  a3; rec__auditlog__logfilelistt__lasti = a4;
  rec__auditlog__logfilelistt__length = a5 } };
  rec__auditlog__logfilestatet__logfileentries = a6 } })))

axiom value__alignment_axiom6 : (0 <= value__alignment6)

axiom object__alignment_axiom6 :
  (forall a:logfileindext. forall a1:logentrycountt.
  forall a2:(int,logfileindext) farray. forall a3:logfileindext.
  forall a4:logfileindext. forall a5:logfilecountt.
  forall a6:(int,fileentrycountt) farray. (0 <= object__alignment6({
  us_split_fields3 = { rec__auditlog__logfilestatet__currentlogfile = a;
  rec__auditlog__logfilestatet__numberlogentries = a1;
  rec__auditlog__logfilestatet__usedlogfiles = { us_split_fields1 = {
  rec__auditlog__logfilelistt__list = a2; rec__auditlog__logfilelistt__head =
  a3; rec__auditlog__logfilelistt__lasti = a4;
  rec__auditlog__logfilelistt__length = a5 } };
  rec__auditlog__logfilestatet__logfileentries = a6 } })))

logic auditlog__logfilestatet__currentlogfile__first__bit : int

logic auditlog__logfilestatet__currentlogfile__last__bit : int

logic auditlog__logfilestatet__currentlogfile__position : int

axiom auditlog__logfilestatet__currentlogfile__first__bit_axiom :
  (0 <= auditlog__logfilestatet__currentlogfile__first__bit)

axiom auditlog__logfilestatet__currentlogfile__last__bit_axiom :
  (auditlog__logfilestatet__currentlogfile__first__bit <  auditlog__logfilestatet__currentlogfile__last__bit)

axiom auditlog__logfilestatet__currentlogfile__position_axiom :
  (0 <= auditlog__logfilestatet__currentlogfile__position)

logic auditlog__logfilestatet__numberlogentries__first__bit : int

logic auditlog__logfilestatet__numberlogentries__last__bit : int

logic auditlog__logfilestatet__numberlogentries__position : int

axiom auditlog__logfilestatet__numberlogentries__first__bit_axiom :
  (0 <= auditlog__logfilestatet__numberlogentries__first__bit)

axiom auditlog__logfilestatet__numberlogentries__last__bit_axiom :
  (auditlog__logfilestatet__numberlogentries__first__bit <  auditlog__logfilestatet__numberlogentries__last__bit)

axiom auditlog__logfilestatet__numberlogentries__position_axiom :
  (0 <= auditlog__logfilestatet__numberlogentries__position)

logic auditlog__logfilestatet__usedlogfiles__first__bit : int

logic auditlog__logfilestatet__usedlogfiles__last__bit : int

logic auditlog__logfilestatet__usedlogfiles__position : int

axiom auditlog__logfilestatet__usedlogfiles__first__bit_axiom :
  (0 <= auditlog__logfilestatet__usedlogfiles__first__bit)

axiom auditlog__logfilestatet__usedlogfiles__last__bit_axiom :
  (auditlog__logfilestatet__usedlogfiles__first__bit <  auditlog__logfilestatet__usedlogfiles__last__bit)

axiom auditlog__logfilestatet__usedlogfiles__position_axiom :
  (0 <= auditlog__logfilestatet__usedlogfiles__position)

logic auditlog__logfilestatet__logfileentries__first__bit : int

logic auditlog__logfilestatet__logfileentries__last__bit : int

logic auditlog__logfilestatet__logfileentries__position : int

axiom auditlog__logfilestatet__logfileentries__first__bit_axiom :
  (0 <= auditlog__logfilestatet__logfileentries__first__bit)

axiom auditlog__logfilestatet__logfileentries__last__bit_axiom :
  (auditlog__logfilestatet__logfileentries__first__bit <  auditlog__logfilestatet__logfileentries__last__bit)

axiom auditlog__logfilestatet__logfileentries__position_axiom :
  (0 <= auditlog__logfilestatet__logfileentries__position)

logic user_eq16 : us_rep1, us_rep1 -> bool

logic dummy22 : logfileindext

logic dummy23 : logentrycountt

logic dummy24 : (int,logfileindext) farray

logic dummy25 : logfileindext

logic dummy26 : logfileindext

logic dummy27 : logfilecountt

logic dummy28 : (int,fileentrycountt) farray

type logfilestatet__ref = { logfilestatet__content : us_rep1
}

function logfilestatet__ref___projection(a: logfilestatet__ref) : us_rep1 =
  (a).logfilestatet__content

logic valid_numberlogentries : int, int, us_rep,
  (int,fileentrycountt) farray -> bool

logic valid_numberlogentries__function_guard : bool, int, int, us_rep,
  (int,fileentrycountt) farray -> prop

logic temp___1217 : int -> (int,logfileindext) farray

axiom def_axiom :
  (forall temp___1219:int.
  (forall temp___1220:int.
  ((temp___1217(temp___1219)[temp___1220]) = of_rep2(temp___1219))))

logic temp___1221 : int -> (int,fileentrycountt) farray

axiom def_axiom1 :
  (forall temp___1223:int.
  (forall temp___1224:int.
  ((temp___1221(temp___1223)[temp___1224]) = of_rep5(temp___1223))))

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep2

logic bool_eq20 : us_rep2, us_rep2 -> bool

logic value__size7 : int

logic object__size7 : us_rep2 -> int

logic value__alignment7 : int

logic object__alignment7 : us_rep2 -> int

axiom value__size_axiom7 : (0 <= value__size7)

axiom object__size_axiom7 : (forall a:us_rep2. (0 <= object__size7(a)))

axiom value__alignment_axiom7 : (0 <= value__alignment7)

axiom object__alignment_axiom7 :
  (forall a:us_rep2. (0 <= object__alignment7(a)))

logic user_eq17 : us_rep2, us_rep2 -> bool

logic dummy29 : us_rep2

type t__ref = { t__content : us_rep2
}

function t__ref___projection(a: t__ref) : us_rep2 = (a).t__content

type map__ref3 = { map__content3 : (int,us_rep2) farray
}

logic slide3 : (int,us_rep2) farray, int, int -> (int,us_rep2) farray

axiom slide_eq3 :
  (forall a:(int,us_rep2) farray.
  (forall first6:int [slide3(a, first6, first6)]. (slide3(a, first6,
  first6) = a)))

axiom slide_def3 :
  (forall a:(int,us_rep2) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide3(a, old_first, new_first)[i])]. ((slide3(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat3 : (int,us_rep2) farray, int, int, (int,us_rep2) farray, int,
  int -> (int,us_rep2) farray

axiom concat_def3 :
  (forall a:(int,us_rep2) farray. forall b:(int,us_rep2) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat3(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat3(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat3(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton3 : us_rep2, int -> (int,us_rep2) farray

axiom singleton_def3 :
  (forall v:us_rep2.
  (forall i:int [(singleton3(v, i)[i])]. ((singleton3(v, i)[i]) = v)))

logic bool_eq21 : (int,us_rep2) farray, int, int, (int,us_rep2) farray, int,
  int -> bool

axiom bool_eq_def16 :
  (forall a:(int,us_rep2) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep2) farray. forall b__first:int. forall b__last:int
  [bool_eq21(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_155:int. ((((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) and (bool_eq20((a[temp___idx_155]),
  (b[((b__first - a__first) + temp___idx_155)])) = true)) or
  (not ((a__first <= temp___idx_155) and (temp___idx_155 <= a__last)))))) ->
  (bool_eq21(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq20((a[temp___idx_155]),
  (b[((b__first - a__first) + temp___idx_155)])) = true))))) -> (bool_eq21(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev3 :
  (forall a:(int,us_rep2) farray. forall b:(int,us_rep2) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq21(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq20((a[temp___idx_155]),
  (b[((b__first - a__first) + temp___idx_155)])) = true)))))))

logic attr__ATTRIBUTE_ADDRESS1 : int

type filestatust

predicate in_range11(x: int) = ((0 <= x) and (x <= 2))

logic bool_eq22 : int, int -> bool

axiom bool_eq_def17 :
  (forall x:int. forall y:int [bool_eq22(x, y)]. (((x = y) -> (bool_eq22(x,
  y) = true)) and ((not (x = y)) -> (bool_eq22(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq18 : filestatust, filestatust -> bool

logic dummy30 : filestatust

type filestatust__ref = { filestatust__content : filestatust
}

function filestatust__ref___projection(a: filestatust__ref) : filestatust =
  (a).filestatust__content

logic to_rep6 : filestatust -> int

logic of_rep6 : int -> filestatust

axiom inversion_axiom6 :
  (forall x:filestatust [to_rep6(x)]. (of_rep6(to_rep6(x)) = x))

axiom range_axiom6 :
  (forall x:filestatust [to_rep6(x)]. in_range11(to_rep6(x)))

axiom coerce_axiom6 :
  (forall x:int [to_rep6(of_rep6(x))]. (in_range11(x) ->
  (to_rep6(of_rep6(x)) = x)))

type map__ref4 = { map__content4 : (int,filestatust) farray
}

logic slide4 : (int,filestatust) farray, int, int -> (int,filestatust) farray

axiom slide_eq4 :
  (forall a:(int,filestatust) farray.
  (forall first6:int [slide4(a, first6, first6)]. (slide4(a, first6,
  first6) = a)))

axiom slide_def4 :
  (forall a:(int,filestatust) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide4(a, old_first, new_first)[i])]. ((slide4(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat4 : (int,filestatust) farray, int, int, (int,filestatust) farray,
  int, int -> (int,filestatust) farray

axiom concat_def4 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat4(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat4(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat4(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton4 : filestatust, int -> (int,filestatust) farray

axiom singleton_def4 :
  (forall v:filestatust.
  (forall i:int [(singleton4(v, i)[i])]. ((singleton4(v, i)[i]) = v)))

logic bool_eq23 : (int,filestatust) farray, int, int,
  (int,filestatust) farray, int, int -> bool

axiom bool_eq_def18 :
  (forall a:(int,filestatust) farray. forall a__first:int.
  forall a__last:int. forall b:(int,filestatust) farray. forall b__first:int.
  forall b__last:int [bool_eq23(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_156:int. ((((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) and
  (to_rep6((a[temp___idx_156])) = to_rep6((b[((b__first - a__first) + temp___idx_156)])))) or
  (not ((a__first <= temp___idx_156) and (temp___idx_156 <= a__last)))))) ->
  (bool_eq23(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) ->
  (to_rep6((a[temp___idx_156])) = to_rep6((b[((b__first - a__first) + temp___idx_156)]))))))) ->
  (bool_eq23(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev4 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq23(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) ->
  (to_rep6((a[temp___idx_156])) = to_rep6((b[((b__first - a__first) + temp___idx_156)])))))))))

logic compare3 : (int,filestatust) farray, int, int,
  (int,filestatust) farray, int, int -> int

axiom compare_def_eq3 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare3(a, a_first, a_last, b, b_first, b_last)].
  ((compare3(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq23(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt3 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare3(a, a_first, a_last, b, b_first, b_last)].
  ((compare3(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq23(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep6((a[(i + 1)])) <  to_rep6((b[(j + 1)]))))))))))))

axiom compare_def_gt3 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare3(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare3(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq23(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep6((b[(i + 1)])) <  to_rep6((a[(j + 1)]))))))))))))

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

type readert

predicate in_range12(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq24 : int, int -> bool

axiom bool_eq_def19 :
  (forall x:int. forall y:int [bool_eq24(x, y)]. (((x = y) -> (bool_eq24(x,
  y) = true)) and ((not (x = y)) -> (bool_eq24(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq19 : readert, readert -> bool

logic dummy31 : readert

type readert__ref = { readert__content : readert
}

function readert__ref___projection(a: readert__ref) : readert =
  (a).readert__content

logic to_rep7 : unsigned32t -> int

logic of_rep7 : int -> unsigned32t

axiom inversion_axiom7 :
  (forall x:unsigned32t [to_rep7(x)]. (of_rep7(to_rep7(x)) = x))

axiom range_axiom7 :
  (forall x:unsigned32t [to_rep7(x)]. in_range4(to_rep7(x)))

axiom coerce_axiom7 :
  (forall x:int [to_rep7(of_rep7(x))]. (in_range4(x) ->
  (to_rep7(of_rep7(x)) = x)))

type tokenidt

predicate in_range13(x: int) = ((0 <= x) and (x <= 4294967295))

logic bool_eq25 : int, int -> bool

axiom bool_eq_def20 :
  (forall x:int. forall y:int [bool_eq25(x, y)]. (((x = y) -> (bool_eq25(x,
  y) = true)) and ((not (x = y)) -> (bool_eq25(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE13 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check13 : us_image -> prop

logic attr__ATTRIBUTE_VALUE13 : us_image -> int

logic user_eq20 : tokenidt, tokenidt -> bool

logic dummy32 : tokenidt

type tokenidt__ref = { tokenidt__content : tokenidt
}

function tokenidt__ref___projection(a: tokenidt__ref) : tokenidt =
  (a).tokenidt__content

logic to_rep8 : tokenidt -> int

logic of_rep8 : int -> tokenidt

axiom inversion_axiom8 :
  (forall x:tokenidt [to_rep8(x)]. (of_rep8(to_rep8(x)) = x))

axiom range_axiom8 : (forall x:tokenidt [to_rep8(x)]. in_range13(to_rep8(x)))

axiom coerce_axiom8 :
  (forall x:int [to_rep8(of_rep8(x))]. (in_range13(x) ->
  (to_rep8(of_rep8(x)) = x)))

type tryt

predicate in_range14(x: int) = ((0 <= x) and (x <= 2))

logic bool_eq26 : int, int -> bool

axiom bool_eq_def21 :
  (forall x:int. forall y:int [bool_eq26(x, y)]. (((x = y) -> (bool_eq26(x,
  y) = true)) and ((not (x = y)) -> (bool_eq26(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE14 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check14 : us_image -> prop

logic attr__ATTRIBUTE_VALUE14 : us_image -> int

logic user_eq21 : tryt, tryt -> bool

logic dummy33 : tryt

type tryt__ref = { tryt__content : tryt
}

function tryt__ref___projection(a: tryt__ref) : tryt = (a).tryt__content

logic to_rep9 : tryt -> int

logic of_rep9 : int -> tryt

axiom inversion_axiom9 :
  (forall x:tryt [to_rep9(x)]. (of_rep9(to_rep9(x)) = x))

axiom range_axiom9 : (forall x:tryt [to_rep9(x)]. in_range14(to_rep9(x)))

axiom coerce_axiom9 :
  (forall x:int [to_rep9(of_rep9(x))]. (in_range14(x) ->
  (to_rep9(of_rep9(x)) = x)))

type cardhandlet

predicate in_range15(x: int) = ((0 <= x) and (x <= 4294967295))

logic bool_eq27 : int, int -> bool

axiom bool_eq_def22 :
  (forall x:int. forall y:int [bool_eq27(x, y)]. (((x = y) -> (bool_eq27(x,
  y) = true)) and ((not (x = y)) -> (bool_eq27(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE15 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check15 : us_image -> prop

logic attr__ATTRIBUTE_VALUE15 : us_image -> int

logic user_eq22 : cardhandlet, cardhandlet -> bool

logic dummy34 : cardhandlet

type cardhandlet__ref = { cardhandlet__content : cardhandlet
}

function cardhandlet__ref___projection(a: cardhandlet__ref) : cardhandlet =
  (a).cardhandlet__content

logic to_rep10 : cardhandlet -> int

logic of_rep10 : int -> cardhandlet

axiom inversion_axiom10 :
  (forall x:cardhandlet [to_rep10(x)]. (of_rep10(to_rep10(x)) = x))

axiom range_axiom10 :
  (forall x:cardhandlet [to_rep10(x)]. in_range15(to_rep10(x)))

axiom coerce_axiom10 :
  (forall x:int [to_rep10(of_rep10(x))]. (in_range15(x) ->
  (to_rep10(of_rep10(x)) = x)))

logic dummy35 : (int,character) farray

logic value__size8 : int

logic object__size8 : (int,character) farray -> int

logic value__component__size5 : int

logic object__component__size5 : (int,character) farray -> int

logic value__alignment8 : int

logic object__alignment8 : (int,character) farray -> int

axiom value__size_axiom8 : (0 <= value__size8)

axiom object__size_axiom8 :
  (forall a:(int,character) farray. (0 <= object__size8(a)))

axiom value__component__size_axiom5 : (0 <= value__component__size5)

axiom object__component__size_axiom5 :
  (forall a:(int,character) farray. (0 <= object__component__size5(a)))

axiom value__alignment_axiom8 : (0 <= value__alignment8)

axiom object__alignment_axiom8 :
  (forall a:(int,character) farray. (0 <= object__alignment8(a)))

logic user_eq23 : (int,character) farray, (int,character) farray -> bool

type validreaderstatet

predicate in_range16(x: int) = ((1 <= x) and (x <= 6))

logic bool_eq28 : int, int -> bool

axiom bool_eq_def23 :
  (forall x:int. forall y:int [bool_eq28(x, y)]. (((x = y) -> (bool_eq28(x,
  y) = true)) and ((not (x = y)) -> (bool_eq28(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE16 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check16 : us_image -> prop

logic attr__ATTRIBUTE_VALUE16 : us_image -> int

logic user_eq24 : validreaderstatet, validreaderstatet -> bool

logic dummy36 : validreaderstatet

type validreaderstatet__ref = { validreaderstatet__content :
validreaderstatet
}

function validreaderstatet__ref___projection(a: validreaderstatet__ref) : validreaderstatet =
  (a).validreaderstatet__content

logic to_rep11 : validreaderstatet -> int

logic of_rep11 : int -> validreaderstatet

axiom inversion_axiom11 :
  (forall x:validreaderstatet [to_rep11(x)]. (of_rep11(to_rep11(x)) = x))

axiom range_axiom11 :
  (forall x:validreaderstatet [to_rep11(x)]. in_range16(to_rep11(x)))

axiom coerce_axiom11 :
  (forall x:int [to_rep11(of_rep11(x))]. (in_range16(x) ->
  (to_rep11(of_rep11(x)) = x)))

type us_split_fields4 = { rec__tokenreader__readerinfot__name :
(int,character) farray; rec__tokenreader__readerinfot__tokentry : tryt;
rec__tokenreader__readerinfot__tokenid : tokenidt;
rec__tokenreader__readerinfot__tokenconnected : bool;
rec__tokenreader__readerinfot__tokenhandle : cardhandlet;
rec__tokenreader__readerinfot__currentstatus : validreaderstatet;
rec__tokenreader__readerinfot__lastfault : unsigned32t
}

function us_split_fields_Name__2__projection(a: us_split_fields4) : (int,character) farray =
  (a).rec__tokenreader__readerinfot__name

function us_split_fields_TokenTry__projection(a: us_split_fields4) : tryt =
  (a).rec__tokenreader__readerinfot__tokentry

function us_split_fields_TokenID__projection(a: us_split_fields4) : tokenidt =
  (a).rec__tokenreader__readerinfot__tokenid

function us_split_fields_TokenConnected__projection(a: us_split_fields4) : bool =
  (a).rec__tokenreader__readerinfot__tokenconnected

function us_split_fields_TokenHandle__projection(a: us_split_fields4) : cardhandlet =
  (a).rec__tokenreader__readerinfot__tokenhandle

function us_split_fields_CurrentStatus__projection(a: us_split_fields4) : validreaderstatet =
  (a).rec__tokenreader__readerinfot__currentstatus

function us_split_fields_LastFault__projection(a: us_split_fields4) : unsigned32t =
  (a).rec__tokenreader__readerinfot__lastfault

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___12__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep3 = { us_split_fields5 : us_split_fields4
}

function us_rep___13__projection(a: us_rep3) : us_split_fields4 =
  (a).us_split_fields5

logic bool_eq29 : us_rep3, us_rep3 -> bool

axiom bool_eq_def24 :
  (forall a:us_rep3. forall b:us_rep3 [bool_eq29(a, b)].
  (((((((((bool_eq5(((a).us_split_fields5).rec__tokenreader__readerinfot__name,
  1, 8, ((b).us_split_fields5).rec__tokenreader__readerinfot__name, 1,
  8) = true) and
  (to_rep9(((a).us_split_fields5).rec__tokenreader__readerinfot__tokentry) = to_rep9(((b).us_split_fields5).rec__tokenreader__readerinfot__tokentry))) and
  (to_rep8(((a).us_split_fields5).rec__tokenreader__readerinfot__tokenid) = to_rep8(((b).us_split_fields5).rec__tokenreader__readerinfot__tokenid))) and
  (((a).us_split_fields5).rec__tokenreader__readerinfot__tokenconnected = ((b).us_split_fields5).rec__tokenreader__readerinfot__tokenconnected)) and
  (to_rep10(((a).us_split_fields5).rec__tokenreader__readerinfot__tokenhandle) = to_rep10(((b).us_split_fields5).rec__tokenreader__readerinfot__tokenhandle))) and
  (to_rep11(((a).us_split_fields5).rec__tokenreader__readerinfot__currentstatus) = to_rep11(((b).us_split_fields5).rec__tokenreader__readerinfot__currentstatus))) and
  (to_rep7(((a).us_split_fields5).rec__tokenreader__readerinfot__lastfault) = to_rep7(((b).us_split_fields5).rec__tokenreader__readerinfot__lastfault))) ->
  (bool_eq29(a, b) = true)) and
  ((not (((((((bool_eq5(((a).us_split_fields5).rec__tokenreader__readerinfot__name,
  1, 8, ((b).us_split_fields5).rec__tokenreader__readerinfot__name, 1,
  8) = true) and
  (to_rep9(((a).us_split_fields5).rec__tokenreader__readerinfot__tokentry) = to_rep9(((b).us_split_fields5).rec__tokenreader__readerinfot__tokentry))) and
  (to_rep8(((a).us_split_fields5).rec__tokenreader__readerinfot__tokenid) = to_rep8(((b).us_split_fields5).rec__tokenreader__readerinfot__tokenid))) and
  (((a).us_split_fields5).rec__tokenreader__readerinfot__tokenconnected = ((b).us_split_fields5).rec__tokenreader__readerinfot__tokenconnected)) and
  (to_rep10(((a).us_split_fields5).rec__tokenreader__readerinfot__tokenhandle) = to_rep10(((b).us_split_fields5).rec__tokenreader__readerinfot__tokenhandle))) and
  (to_rep11(((a).us_split_fields5).rec__tokenreader__readerinfot__currentstatus) = to_rep11(((b).us_split_fields5).rec__tokenreader__readerinfot__currentstatus))) and
  (to_rep7(((a).us_split_fields5).rec__tokenreader__readerinfot__lastfault) = to_rep7(((b).us_split_fields5).rec__tokenreader__readerinfot__lastfault)))) ->
  (bool_eq29(a, b) = false))))

logic value__size9 : int

logic object__size9 : us_rep3 -> int

logic value__alignment9 : int

logic object__alignment9 : us_rep3 -> int

axiom value__size_axiom9 : (0 <= value__size9)

axiom object__size_axiom9 :
  (forall a:(int,character) farray. forall a1:tryt. forall a2:tokenidt.
  forall a3:bool. forall a4:cardhandlet. forall a5:validreaderstatet.
  forall a6:unsigned32t. (0 <= object__size9({ us_split_fields5 = {
  rec__tokenreader__readerinfot__name = a;
  rec__tokenreader__readerinfot__tokentry = a1;
  rec__tokenreader__readerinfot__tokenid = a2;
  rec__tokenreader__readerinfot__tokenconnected = a3;
  rec__tokenreader__readerinfot__tokenhandle = a4;
  rec__tokenreader__readerinfot__currentstatus = a5;
  rec__tokenreader__readerinfot__lastfault = a6 } })))

axiom value__alignment_axiom9 : (0 <= value__alignment9)

axiom object__alignment_axiom9 :
  (forall a:(int,character) farray. forall a1:tryt. forall a2:tokenidt.
  forall a3:bool. forall a4:cardhandlet. forall a5:validreaderstatet.
  forall a6:unsigned32t. (0 <= object__alignment9({ us_split_fields5 = {
  rec__tokenreader__readerinfot__name = a;
  rec__tokenreader__readerinfot__tokentry = a1;
  rec__tokenreader__readerinfot__tokenid = a2;
  rec__tokenreader__readerinfot__tokenconnected = a3;
  rec__tokenreader__readerinfot__tokenhandle = a4;
  rec__tokenreader__readerinfot__currentstatus = a5;
  rec__tokenreader__readerinfot__lastfault = a6 } })))

logic tokenreader__readerinfot__name__first__bit : int

logic tokenreader__readerinfot__name__last__bit : int

logic tokenreader__readerinfot__name__position : int

axiom tokenreader__readerinfot__name__first__bit_axiom :
  (0 <= tokenreader__readerinfot__name__first__bit)

axiom tokenreader__readerinfot__name__last__bit_axiom :
  (tokenreader__readerinfot__name__first__bit <  tokenreader__readerinfot__name__last__bit)

axiom tokenreader__readerinfot__name__position_axiom :
  (0 <= tokenreader__readerinfot__name__position)

logic tokenreader__readerinfot__tokentry__first__bit : int

logic tokenreader__readerinfot__tokentry__last__bit : int

logic tokenreader__readerinfot__tokentry__position : int

axiom tokenreader__readerinfot__tokentry__first__bit_axiom :
  (0 <= tokenreader__readerinfot__tokentry__first__bit)

axiom tokenreader__readerinfot__tokentry__last__bit_axiom :
  (tokenreader__readerinfot__tokentry__first__bit <  tokenreader__readerinfot__tokentry__last__bit)

axiom tokenreader__readerinfot__tokentry__position_axiom :
  (0 <= tokenreader__readerinfot__tokentry__position)

logic tokenreader__readerinfot__tokenid__first__bit : int

logic tokenreader__readerinfot__tokenid__last__bit : int

logic tokenreader__readerinfot__tokenid__position : int

axiom tokenreader__readerinfot__tokenid__first__bit_axiom :
  (0 <= tokenreader__readerinfot__tokenid__first__bit)

axiom tokenreader__readerinfot__tokenid__last__bit_axiom :
  (tokenreader__readerinfot__tokenid__first__bit <  tokenreader__readerinfot__tokenid__last__bit)

axiom tokenreader__readerinfot__tokenid__position_axiom :
  (0 <= tokenreader__readerinfot__tokenid__position)

logic tokenreader__readerinfot__tokenconnected__first__bit : int

logic tokenreader__readerinfot__tokenconnected__last__bit : int

logic tokenreader__readerinfot__tokenconnected__position : int

axiom tokenreader__readerinfot__tokenconnected__first__bit_axiom :
  (0 <= tokenreader__readerinfot__tokenconnected__first__bit)

axiom tokenreader__readerinfot__tokenconnected__last__bit_axiom :
  (tokenreader__readerinfot__tokenconnected__first__bit <  tokenreader__readerinfot__tokenconnected__last__bit)

axiom tokenreader__readerinfot__tokenconnected__position_axiom :
  (0 <= tokenreader__readerinfot__tokenconnected__position)

logic tokenreader__readerinfot__tokenhandle__first__bit : int

logic tokenreader__readerinfot__tokenhandle__last__bit : int

logic tokenreader__readerinfot__tokenhandle__position : int

axiom tokenreader__readerinfot__tokenhandle__first__bit_axiom :
  (0 <= tokenreader__readerinfot__tokenhandle__first__bit)

axiom tokenreader__readerinfot__tokenhandle__last__bit_axiom :
  (tokenreader__readerinfot__tokenhandle__first__bit <  tokenreader__readerinfot__tokenhandle__last__bit)

axiom tokenreader__readerinfot__tokenhandle__position_axiom :
  (0 <= tokenreader__readerinfot__tokenhandle__position)

logic tokenreader__readerinfot__currentstatus__first__bit : int

logic tokenreader__readerinfot__currentstatus__last__bit : int

logic tokenreader__readerinfot__currentstatus__position : int

axiom tokenreader__readerinfot__currentstatus__first__bit_axiom :
  (0 <= tokenreader__readerinfot__currentstatus__first__bit)

axiom tokenreader__readerinfot__currentstatus__last__bit_axiom :
  (tokenreader__readerinfot__currentstatus__first__bit <  tokenreader__readerinfot__currentstatus__last__bit)

axiom tokenreader__readerinfot__currentstatus__position_axiom :
  (0 <= tokenreader__readerinfot__currentstatus__position)

logic tokenreader__readerinfot__lastfault__first__bit : int

logic tokenreader__readerinfot__lastfault__last__bit : int

logic tokenreader__readerinfot__lastfault__position : int

axiom tokenreader__readerinfot__lastfault__first__bit_axiom :
  (0 <= tokenreader__readerinfot__lastfault__first__bit)

axiom tokenreader__readerinfot__lastfault__last__bit_axiom :
  (tokenreader__readerinfot__lastfault__first__bit <  tokenreader__readerinfot__lastfault__last__bit)

axiom tokenreader__readerinfot__lastfault__position_axiom :
  (0 <= tokenreader__readerinfot__lastfault__position)

logic user_eq25 : us_rep3, us_rep3 -> bool

logic dummy37 : (int,character) farray

logic dummy38 : tryt

logic dummy39 : tokenidt

logic dummy40 : bool

logic dummy41 : cardhandlet

logic dummy42 : validreaderstatet

logic dummy43 : unsigned32t

type readerinfot__ref = { readerinfot__content : us_rep3
}

function readerinfot__ref___projection(a: readerinfot__ref) : us_rep3 =
  (a).readerinfot__content

type map__ref5 = { map__content5 : (int,us_rep3) farray
}

logic slide5 : (int,us_rep3) farray, int, int -> (int,us_rep3) farray

axiom slide_eq5 :
  (forall a:(int,us_rep3) farray.
  (forall first6:int [slide5(a, first6, first6)]. (slide5(a, first6,
  first6) = a)))

axiom slide_def5 :
  (forall a:(int,us_rep3) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide5(a, old_first, new_first)[i])]. ((slide5(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat5 : (int,us_rep3) farray, int, int, (int,us_rep3) farray, int,
  int -> (int,us_rep3) farray

axiom concat_def5 :
  (forall a:(int,us_rep3) farray. forall b:(int,us_rep3) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat5(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat5(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat5(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton5 : us_rep3, int -> (int,us_rep3) farray

axiom singleton_def5 :
  (forall v:(int,character) farray. forall v1:tryt. forall v2:tokenidt.
  forall v3:bool. forall v4:cardhandlet. forall v5:validreaderstatet.
  forall v6:unsigned32t.
  (forall i:int [(singleton5({ us_split_fields5 = {
  rec__tokenreader__readerinfot__name = v;
  rec__tokenreader__readerinfot__tokentry = v1;
  rec__tokenreader__readerinfot__tokenid = v2;
  rec__tokenreader__readerinfot__tokenconnected = v3;
  rec__tokenreader__readerinfot__tokenhandle = v4;
  rec__tokenreader__readerinfot__currentstatus = v5;
  rec__tokenreader__readerinfot__lastfault = v6 } }, i)[i])]. ((singleton5({
  us_split_fields5 = { rec__tokenreader__readerinfot__name = v;
  rec__tokenreader__readerinfot__tokentry = v1;
  rec__tokenreader__readerinfot__tokenid = v2;
  rec__tokenreader__readerinfot__tokenconnected = v3;
  rec__tokenreader__readerinfot__tokenhandle = v4;
  rec__tokenreader__readerinfot__currentstatus = v5;
  rec__tokenreader__readerinfot__lastfault = v6 } }, i)[i]) = {
  us_split_fields5 = { rec__tokenreader__readerinfot__name = v;
  rec__tokenreader__readerinfot__tokentry = v1;
  rec__tokenreader__readerinfot__tokenid = v2;
  rec__tokenreader__readerinfot__tokenconnected = v3;
  rec__tokenreader__readerinfot__tokenhandle = v4;
  rec__tokenreader__readerinfot__currentstatus = v5;
  rec__tokenreader__readerinfot__lastfault = v6 } })))

logic bool_eq30 : (int,us_rep3) farray, int, int, (int,us_rep3) farray, int,
  int -> bool

axiom bool_eq_def25 :
  (forall a:(int,us_rep3) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep3) farray. forall b__first:int. forall b__last:int
  [bool_eq30(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_169:int. ((((a__first <= temp___idx_169) and
  (temp___idx_169 <= a__last)) and (bool_eq29((a[temp___idx_169]),
  (b[((b__first - a__first) + temp___idx_169)])) = true)) or
  (not ((a__first <= temp___idx_169) and (temp___idx_169 <= a__last)))))) ->
  (bool_eq30(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_169:int. (((a__first <= temp___idx_169) and
  (temp___idx_169 <= a__last)) -> (bool_eq29((a[temp___idx_169]),
  (b[((b__first - a__first) + temp___idx_169)])) = true))))) -> (bool_eq30(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev5 :
  (forall a:(int,us_rep3) farray. forall b:(int,us_rep3) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq30(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_169:int. (((a__first <= temp___idx_169) and
  (temp___idx_169 <= a__last)) -> (bool_eq29((a[temp___idx_169]),
  (b[((b__first - a__first) + temp___idx_169)])) = true)))))))

logic attr__ATTRIBUTE_ADDRESS6 : int

type readernamei

predicate in_range17(x: int) = ((1 <= x) and (x <= 8))

logic bool_eq31 : int, int -> bool

axiom bool_eq_def26 :
  (forall x:int. forall y:int [bool_eq31(x, y)]. (((x = y) -> (bool_eq31(x,
  y) = true)) and ((not (x = y)) -> (bool_eq31(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE17 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check17 : us_image -> prop

logic attr__ATTRIBUTE_VALUE17 : us_image -> int

logic user_eq26 : readernamei, readernamei -> bool

logic dummy44 : readernamei

type readernamei__ref = { readernamei__content : readernamei
}

function readernamei__ref___projection(a: readernamei__ref) : readernamei =
  (a).readernamei__content

type readerarrayi

predicate in_range18(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq32 : int, int -> bool

axiom bool_eq_def27 :
  (forall x:int. forall y:int [bool_eq32(x, y)]. (((x = y) -> (bool_eq32(x,
  y) = true)) and ((not (x = y)) -> (bool_eq32(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE18 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check18 : us_image -> prop

logic attr__ATTRIBUTE_VALUE18 : us_image -> int

logic user_eq27 : readerarrayi, readerarrayi -> bool

logic dummy45 : readerarrayi

type readerarrayi__ref = { readerarrayi__content : readerarrayi
}

function readerarrayi__ref___projection(a: readerarrayi__ref) : readerarrayi =
  (a).readerarrayi__content

type map__ref6 = { map__content6 : (int,(int,character) farray) farray
}

logic slide6 : (int,(int,character) farray) farray, int,
  int -> (int,(int,character) farray) farray

axiom slide_eq6 :
  (forall a:(int,(int,character) farray) farray.
  (forall first6:int [slide6(a, first6, first6)]. (slide6(a, first6,
  first6) = a)))

axiom slide_def6 :
  (forall a:(int,(int,character) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide6(a, old_first, new_first)[i])]. ((slide6(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat6 : (int,(int,character) farray) farray, int, int,
  (int,(int,character) farray) farray, int,
  int -> (int,(int,character) farray) farray

axiom concat_def6 :
  (forall a:(int,(int,character) farray) farray.
  forall b:(int,(int,character) farray) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat6(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat6(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat6(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton6 : (int,character) farray,
  int -> (int,(int,character) farray) farray

axiom singleton_def6 :
  (forall v:(int,character) farray.
  (forall i:int [(singleton6(v, i)[i])]. ((singleton6(v, i)[i]) = v)))

logic bool_eq33 : (int,(int,character) farray) farray, int, int,
  (int,(int,character) farray) farray, int, int -> bool

axiom bool_eq_def28 :
  (forall a:(int,(int,character) farray) farray. forall a__first:int.
  forall a__last:int. forall b:(int,(int,character) farray) farray.
  forall b__first:int. forall b__last:int [bool_eq33(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_167:int. ((((a__first <= temp___idx_167) and
  (temp___idx_167 <= a__last)) and (bool_eq5((a[temp___idx_167]), 1, 8,
  (b[((b__first - a__first) + temp___idx_167)]), 1, 8) = true)) or
  (not ((a__first <= temp___idx_167) and (temp___idx_167 <= a__last)))))) ->
  (bool_eq33(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_167:int. (((a__first <= temp___idx_167) and
  (temp___idx_167 <= a__last)) -> (bool_eq5((a[temp___idx_167]), 1, 8,
  (b[((b__first - a__first) + temp___idx_167)]), 1, 8) = true))))) ->
  (bool_eq33(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev6 :
  (forall a:(int,(int,character) farray) farray.
  forall b:(int,(int,character) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq33(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_167:int. (((a__first <= temp___idx_167) and
  (temp___idx_167 <= a__last)) -> (bool_eq5((a[temp___idx_167]), 1, 8,
  (b[((b__first - a__first) + temp___idx_167)]), 1, 8) = true)))))))

logic expectedreadernames : (int,(int,character) farray) farray

logic attr__ATTRIBUTE_ADDRESS7 : int

logic tokenreader__expectedreadernames__aggregate_def : (int,character) farray,
  (int,character) farray -> (int,(int,character) farray) farray

axiom def_axiom2 :
  (forall temp___174:(int,character) farray.
  forall temp___175:(int,character) farray.
  (((tokenreader__expectedreadernames__aggregate_def(temp___174,
  temp___175)[0]) = temp___174) and
  ((tokenreader__expectedreadernames__aggregate_def(temp___174,
  temp___175)[1]) = temp___175)))

logic temp___String_Literal_177 : unit -> (int,character) farray

axiom temp___String_Literal_177__def_axiom :
  ((((((((to_rep((temp___String_Literal_177(void)[1])) = 69) and
  (to_rep((temp___String_Literal_177(void)[2])) = 88)) and
  (to_rep((temp___String_Literal_177(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_177(void)[4])) = 82)) and
  (to_rep((temp___String_Literal_177(void)[5])) = 69)) and
  (to_rep((temp___String_Literal_177(void)[6])) = 65)) and
  (to_rep((temp___String_Literal_177(void)[7])) = 68)) and
  (to_rep((temp___String_Literal_177(void)[8])) = 32))

logic temp___String_Literal_178 : unit -> (int,character) farray

axiom temp___String_Literal_178__def_axiom :
  ((((((((to_rep((temp___String_Literal_178(void)[1])) = 73) and
  (to_rep((temp___String_Literal_178(void)[2])) = 78)) and
  (to_rep((temp___String_Literal_178(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_178(void)[4])) = 82)) and
  (to_rep((temp___String_Literal_178(void)[5])) = 69)) and
  (to_rep((temp___String_Literal_178(void)[6])) = 65)) and
  (to_rep((temp___String_Literal_178(void)[7])) = 68)) and
  (to_rep((temp___String_Literal_178(void)[8])) = 32))

logic makedescription : us_t1, int -> (int,character) farray

logic makedescription__function_guard : (int,character) farray, us_t1,
  int -> prop

axiom makedescription__post_axiom : true

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic r23b : int

logic attr__ATTRIBUTE_ADDRESS11 : int

predicate dynamic_property3(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq34 : int, int -> bool

axiom bool_eq_def29 :
  (forall x:int. forall y:int [bool_eq34(x, y)]. (((x = y) -> (bool_eq34(x,
  y) = true)) and ((not (x = y)) -> (bool_eq34(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE19 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check19 : us_image -> prop

logic attr__ATTRIBUTE_VALUE19 : us_image -> int

logic user_eq28 : integer, integer -> bool

logic dummy46 : integer

type t24b__ref = { t24b__content : integer
}

function t24b__ref___projection(a: t24b__ref) : integer = (a).t24b__content

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic temp___String_Literal_1590 : unit -> (int,character) farray

axiom temp___String_Literal_1590__def_axiom :
  ((((((((((((((((((((((((((((((((((((((to_rep((temp___String_Literal_1590(void)[1])) = 84) and
  (to_rep((temp___String_Literal_1590(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_1590(void)[3])) = 107)) and
  (to_rep((temp___String_Literal_1590(void)[4])) = 101)) and
  (to_rep((temp___String_Literal_1590(void)[5])) = 110)) and
  (to_rep((temp___String_Literal_1590(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_1590(void)[7])) = 82)) and
  (to_rep((temp___String_Literal_1590(void)[8])) = 101)) and
  (to_rep((temp___String_Literal_1590(void)[9])) = 97)) and
  (to_rep((temp___String_Literal_1590(void)[10])) = 100)) and
  (to_rep((temp___String_Literal_1590(void)[11])) = 101)) and
  (to_rep((temp___String_Literal_1590(void)[12])) = 114)) and
  (to_rep((temp___String_Literal_1590(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_1590(void)[14])) = 105)) and
  (to_rep((temp___String_Literal_1590(void)[15])) = 110)) and
  (to_rep((temp___String_Literal_1590(void)[16])) = 105)) and
  (to_rep((temp___String_Literal_1590(void)[17])) = 116)) and
  (to_rep((temp___String_Literal_1590(void)[18])) = 105)) and
  (to_rep((temp___String_Literal_1590(void)[19])) = 97)) and
  (to_rep((temp___String_Literal_1590(void)[20])) = 108)) and
  (to_rep((temp___String_Literal_1590(void)[21])) = 105)) and
  (to_rep((temp___String_Literal_1590(void)[22])) = 115)) and
  (to_rep((temp___String_Literal_1590(void)[23])) = 97)) and
  (to_rep((temp___String_Literal_1590(void)[24])) = 116)) and
  (to_rep((temp___String_Literal_1590(void)[25])) = 105)) and
  (to_rep((temp___String_Literal_1590(void)[26])) = 111)) and
  (to_rep((temp___String_Literal_1590(void)[27])) = 110)) and
  (to_rep((temp___String_Literal_1590(void)[28])) = 32)) and
  (to_rep((temp___String_Literal_1590(void)[29])) = 102)) and
  (to_rep((temp___String_Literal_1590(void)[30])) = 97)) and
  (to_rep((temp___String_Literal_1590(void)[31])) = 105)) and
  (to_rep((temp___String_Literal_1590(void)[32])) = 108)) and
  (to_rep((temp___String_Literal_1590(void)[33])) = 117)) and
  (to_rep((temp___String_Literal_1590(void)[34])) = 114)) and
  (to_rep((temp___String_Literal_1590(void)[35])) = 101)) and
  (to_rep((temp___String_Literal_1590(void)[36])) = 32)) and
  (to_rep((temp___String_Literal_1590(void)[37])) = 58)) and
  (to_rep((temp___String_Literal_1590(void)[38])) = 32))

logic temp___String_Literal_1592 : unit -> (int,character) farray

axiom temp___String_Literal_1592__def_axiom :
  (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((to_rep((temp___String_Literal_1592(void)[1])) = 84) and
  (to_rep((temp___String_Literal_1592(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_1592(void)[3])) = 107)) and
  (to_rep((temp___String_Literal_1592(void)[4])) = 101)) and
  (to_rep((temp___String_Literal_1592(void)[5])) = 110)) and
  (to_rep((temp___String_Literal_1592(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_1592(void)[7])) = 82)) and
  (to_rep((temp___String_Literal_1592(void)[8])) = 101)) and
  (to_rep((temp___String_Literal_1592(void)[9])) = 97)) and
  (to_rep((temp___String_Literal_1592(void)[10])) = 100)) and
  (to_rep((temp___String_Literal_1592(void)[11])) = 101)) and
  (to_rep((temp___String_Literal_1592(void)[12])) = 114)) and
  (to_rep((temp___String_Literal_1592(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_1592(void)[14])) = 105)) and
  (to_rep((temp___String_Literal_1592(void)[15])) = 110)) and
  (to_rep((temp___String_Literal_1592(void)[16])) = 105)) and
  (to_rep((temp___String_Literal_1592(void)[17])) = 116)) and
  (to_rep((temp___String_Literal_1592(void)[18])) = 105)) and
  (to_rep((temp___String_Literal_1592(void)[19])) = 97)) and
  (to_rep((temp___String_Literal_1592(void)[20])) = 108)) and
  (to_rep((temp___String_Literal_1592(void)[21])) = 105)) and
  (to_rep((temp___String_Literal_1592(void)[22])) = 115)) and
  (to_rep((temp___String_Literal_1592(void)[23])) = 97)) and
  (to_rep((temp___String_Literal_1592(void)[24])) = 116)) and
  (to_rep((temp___String_Literal_1592(void)[25])) = 105)) and
  (to_rep((temp___String_Literal_1592(void)[26])) = 111)) and
  (to_rep((temp___String_Literal_1592(void)[27])) = 110)) and
  (to_rep((temp___String_Literal_1592(void)[28])) = 32)) and
  (to_rep((temp___String_Literal_1592(void)[29])) = 102)) and
  (to_rep((temp___String_Literal_1592(void)[30])) = 97)) and
  (to_rep((temp___String_Literal_1592(void)[31])) = 105)) and
  (to_rep((temp___String_Literal_1592(void)[32])) = 108)) and
  (to_rep((temp___String_Literal_1592(void)[33])) = 117)) and
  (to_rep((temp___String_Literal_1592(void)[34])) = 114)) and
  (to_rep((temp___String_Literal_1592(void)[35])) = 101)) and
  (to_rep((temp___String_Literal_1592(void)[36])) = 32)) and
  (to_rep((temp___String_Literal_1592(void)[37])) = 58)) and
  (to_rep((temp___String_Literal_1592(void)[38])) = 32)) and
  (to_rep((temp___String_Literal_1592(void)[39])) = 73)) and
  (to_rep((temp___String_Literal_1592(void)[40])) = 110)) and
  (to_rep((temp___String_Literal_1592(void)[41])) = 118)) and
  (to_rep((temp___String_Literal_1592(void)[42])) = 97)) and
  (to_rep((temp___String_Literal_1592(void)[43])) = 108)) and
  (to_rep((temp___String_Literal_1592(void)[44])) = 105)) and
  (to_rep((temp___String_Literal_1592(void)[45])) = 100)) and
  (to_rep((temp___String_Literal_1592(void)[46])) = 32)) and
  (to_rep((temp___String_Literal_1592(void)[47])) = 78)) and
  (to_rep((temp___String_Literal_1592(void)[48])) = 117)) and
  (to_rep((temp___String_Literal_1592(void)[49])) = 109)) and
  (to_rep((temp___String_Literal_1592(void)[50])) = 98)) and
  (to_rep((temp___String_Literal_1592(void)[51])) = 101)) and
  (to_rep((temp___String_Literal_1592(void)[52])) = 114)) and
  (to_rep((temp___String_Literal_1592(void)[53])) = 32)) and
  (to_rep((temp___String_Literal_1592(void)[54])) = 111)) and
  (to_rep((temp___String_Literal_1592(void)[55])) = 102)) and
  (to_rep((temp___String_Literal_1592(void)[56])) = 32)) and
  (to_rep((temp___String_Literal_1592(void)[57])) = 84)) and
  (to_rep((temp___String_Literal_1592(void)[58])) = 111)) and
  (to_rep((temp___String_Literal_1592(void)[59])) = 107)) and
  (to_rep((temp___String_Literal_1592(void)[60])) = 101)) and
  (to_rep((temp___String_Literal_1592(void)[61])) = 110)) and
  (to_rep((temp___String_Literal_1592(void)[62])) = 32)) and
  (to_rep((temp___String_Literal_1592(void)[63])) = 82)) and
  (to_rep((temp___String_Literal_1592(void)[64])) = 101)) and
  (to_rep((temp___String_Literal_1592(void)[65])) = 97)) and
  (to_rep((temp___String_Literal_1592(void)[66])) = 100)) and
  (to_rep((temp___String_Literal_1592(void)[67])) = 101)) and
  (to_rep((temp___String_Literal_1592(void)[68])) = 114)) and
  (to_rep((temp___String_Literal_1592(void)[69])) = 115)) and
  (to_rep((temp___String_Literal_1592(void)[70])) = 32)) and
  (to_rep((temp___String_Literal_1592(void)[71])) = 102)) and
  (to_rep((temp___String_Literal_1592(void)[72])) = 111)) and
  (to_rep((temp___String_Literal_1592(void)[73])) = 117)) and
  (to_rep((temp___String_Literal_1592(void)[74])) = 110)) and
  (to_rep((temp___String_Literal_1592(void)[75])) = 100))

logic temp___String_Literal_1607 : unit -> (int,character) farray

axiom temp___String_Literal_1607__def_axiom :
  (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((to_rep((temp___String_Literal_1607(void)[1])) = 84) and
  (to_rep((temp___String_Literal_1607(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_1607(void)[3])) = 107)) and
  (to_rep((temp___String_Literal_1607(void)[4])) = 101)) and
  (to_rep((temp___String_Literal_1607(void)[5])) = 110)) and
  (to_rep((temp___String_Literal_1607(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_1607(void)[7])) = 82)) and
  (to_rep((temp___String_Literal_1607(void)[8])) = 101)) and
  (to_rep((temp___String_Literal_1607(void)[9])) = 97)) and
  (to_rep((temp___String_Literal_1607(void)[10])) = 100)) and
  (to_rep((temp___String_Literal_1607(void)[11])) = 101)) and
  (to_rep((temp___String_Literal_1607(void)[12])) = 114)) and
  (to_rep((temp___String_Literal_1607(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_1607(void)[14])) = 105)) and
  (to_rep((temp___String_Literal_1607(void)[15])) = 110)) and
  (to_rep((temp___String_Literal_1607(void)[16])) = 105)) and
  (to_rep((temp___String_Literal_1607(void)[17])) = 116)) and
  (to_rep((temp___String_Literal_1607(void)[18])) = 105)) and
  (to_rep((temp___String_Literal_1607(void)[19])) = 97)) and
  (to_rep((temp___String_Literal_1607(void)[20])) = 108)) and
  (to_rep((temp___String_Literal_1607(void)[21])) = 105)) and
  (to_rep((temp___String_Literal_1607(void)[22])) = 115)) and
  (to_rep((temp___String_Literal_1607(void)[23])) = 97)) and
  (to_rep((temp___String_Literal_1607(void)[24])) = 116)) and
  (to_rep((temp___String_Literal_1607(void)[25])) = 105)) and
  (to_rep((temp___String_Literal_1607(void)[26])) = 111)) and
  (to_rep((temp___String_Literal_1607(void)[27])) = 110)) and
  (to_rep((temp___String_Literal_1607(void)[28])) = 32)) and
  (to_rep((temp___String_Literal_1607(void)[29])) = 102)) and
  (to_rep((temp___String_Literal_1607(void)[30])) = 97)) and
  (to_rep((temp___String_Literal_1607(void)[31])) = 105)) and
  (to_rep((temp___String_Literal_1607(void)[32])) = 108)) and
  (to_rep((temp___String_Literal_1607(void)[33])) = 117)) and
  (to_rep((temp___String_Literal_1607(void)[34])) = 114)) and
  (to_rep((temp___String_Literal_1607(void)[35])) = 101)) and
  (to_rep((temp___String_Literal_1607(void)[36])) = 32)) and
  (to_rep((temp___String_Literal_1607(void)[37])) = 58)) and
  (to_rep((temp___String_Literal_1607(void)[38])) = 32)) and
  (to_rep((temp___String_Literal_1607(void)[39])) = 69)) and
  (to_rep((temp___String_Literal_1607(void)[40])) = 120)) and
  (to_rep((temp___String_Literal_1607(void)[41])) = 116)) and
  (to_rep((temp___String_Literal_1607(void)[42])) = 101)) and
  (to_rep((temp___String_Literal_1607(void)[43])) = 114)) and
  (to_rep((temp___String_Literal_1607(void)[44])) = 110)) and
  (to_rep((temp___String_Literal_1607(void)[45])) = 97)) and
  (to_rep((temp___String_Literal_1607(void)[46])) = 108)) and
  (to_rep((temp___String_Literal_1607(void)[47])) = 32)) and
  (to_rep((temp___String_Literal_1607(void)[48])) = 116)) and
  (to_rep((temp___String_Literal_1607(void)[49])) = 111)) and
  (to_rep((temp___String_Literal_1607(void)[50])) = 107)) and
  (to_rep((temp___String_Literal_1607(void)[51])) = 101)) and
  (to_rep((temp___String_Literal_1607(void)[52])) = 110)) and
  (to_rep((temp___String_Literal_1607(void)[53])) = 32)) and
  (to_rep((temp___String_Literal_1607(void)[54])) = 114)) and
  (to_rep((temp___String_Literal_1607(void)[55])) = 101)) and
  (to_rep((temp___String_Literal_1607(void)[56])) = 97)) and
  (to_rep((temp___String_Literal_1607(void)[57])) = 100)) and
  (to_rep((temp___String_Literal_1607(void)[58])) = 101)) and
  (to_rep((temp___String_Literal_1607(void)[59])) = 114)) and
  (to_rep((temp___String_Literal_1607(void)[60])) = 32)) and
  (to_rep((temp___String_Literal_1607(void)[61])) = 110)) and
  (to_rep((temp___String_Literal_1607(void)[62])) = 111)) and
  (to_rep((temp___String_Literal_1607(void)[63])) = 116)) and
  (to_rep((temp___String_Literal_1607(void)[64])) = 32)) and
  (to_rep((temp___String_Literal_1607(void)[65])) = 102)) and
  (to_rep((temp___String_Literal_1607(void)[66])) = 111)) and
  (to_rep((temp___String_Literal_1607(void)[67])) = 117)) and
  (to_rep((temp___String_Literal_1607(void)[68])) = 110)) and
  (to_rep((temp___String_Literal_1607(void)[69])) = 100))

logic temp___String_Literal_1610 : unit -> (int,character) farray

axiom temp___String_Literal_1610__def_axiom :
  (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((to_rep((temp___String_Literal_1610(void)[1])) = 84) and
  (to_rep((temp___String_Literal_1610(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_1610(void)[3])) = 107)) and
  (to_rep((temp___String_Literal_1610(void)[4])) = 101)) and
  (to_rep((temp___String_Literal_1610(void)[5])) = 110)) and
  (to_rep((temp___String_Literal_1610(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_1610(void)[7])) = 82)) and
  (to_rep((temp___String_Literal_1610(void)[8])) = 101)) and
  (to_rep((temp___String_Literal_1610(void)[9])) = 97)) and
  (to_rep((temp___String_Literal_1610(void)[10])) = 100)) and
  (to_rep((temp___String_Literal_1610(void)[11])) = 101)) and
  (to_rep((temp___String_Literal_1610(void)[12])) = 114)) and
  (to_rep((temp___String_Literal_1610(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_1610(void)[14])) = 105)) and
  (to_rep((temp___String_Literal_1610(void)[15])) = 110)) and
  (to_rep((temp___String_Literal_1610(void)[16])) = 105)) and
  (to_rep((temp___String_Literal_1610(void)[17])) = 116)) and
  (to_rep((temp___String_Literal_1610(void)[18])) = 105)) and
  (to_rep((temp___String_Literal_1610(void)[19])) = 97)) and
  (to_rep((temp___String_Literal_1610(void)[20])) = 108)) and
  (to_rep((temp___String_Literal_1610(void)[21])) = 105)) and
  (to_rep((temp___String_Literal_1610(void)[22])) = 115)) and
  (to_rep((temp___String_Literal_1610(void)[23])) = 97)) and
  (to_rep((temp___String_Literal_1610(void)[24])) = 116)) and
  (to_rep((temp___String_Literal_1610(void)[25])) = 105)) and
  (to_rep((temp___String_Literal_1610(void)[26])) = 111)) and
  (to_rep((temp___String_Literal_1610(void)[27])) = 110)) and
  (to_rep((temp___String_Literal_1610(void)[28])) = 32)) and
  (to_rep((temp___String_Literal_1610(void)[29])) = 102)) and
  (to_rep((temp___String_Literal_1610(void)[30])) = 97)) and
  (to_rep((temp___String_Literal_1610(void)[31])) = 105)) and
  (to_rep((temp___String_Literal_1610(void)[32])) = 108)) and
  (to_rep((temp___String_Literal_1610(void)[33])) = 117)) and
  (to_rep((temp___String_Literal_1610(void)[34])) = 114)) and
  (to_rep((temp___String_Literal_1610(void)[35])) = 101)) and
  (to_rep((temp___String_Literal_1610(void)[36])) = 32)) and
  (to_rep((temp___String_Literal_1610(void)[37])) = 58)) and
  (to_rep((temp___String_Literal_1610(void)[38])) = 32)) and
  (to_rep((temp___String_Literal_1610(void)[39])) = 73)) and
  (to_rep((temp___String_Literal_1610(void)[40])) = 110)) and
  (to_rep((temp___String_Literal_1610(void)[41])) = 116)) and
  (to_rep((temp___String_Literal_1610(void)[42])) = 101)) and
  (to_rep((temp___String_Literal_1610(void)[43])) = 114)) and
  (to_rep((temp___String_Literal_1610(void)[44])) = 110)) and
  (to_rep((temp___String_Literal_1610(void)[45])) = 97)) and
  (to_rep((temp___String_Literal_1610(void)[46])) = 108)) and
  (to_rep((temp___String_Literal_1610(void)[47])) = 32)) and
  (to_rep((temp___String_Literal_1610(void)[48])) = 116)) and
  (to_rep((temp___String_Literal_1610(void)[49])) = 111)) and
  (to_rep((temp___String_Literal_1610(void)[50])) = 107)) and
  (to_rep((temp___String_Literal_1610(void)[51])) = 101)) and
  (to_rep((temp___String_Literal_1610(void)[52])) = 110)) and
  (to_rep((temp___String_Literal_1610(void)[53])) = 32)) and
  (to_rep((temp___String_Literal_1610(void)[54])) = 114)) and
  (to_rep((temp___String_Literal_1610(void)[55])) = 101)) and
  (to_rep((temp___String_Literal_1610(void)[56])) = 97)) and
  (to_rep((temp___String_Literal_1610(void)[57])) = 100)) and
  (to_rep((temp___String_Literal_1610(void)[58])) = 101)) and
  (to_rep((temp___String_Literal_1610(void)[59])) = 114)) and
  (to_rep((temp___String_Literal_1610(void)[60])) = 32)) and
  (to_rep((temp___String_Literal_1610(void)[61])) = 110)) and
  (to_rep((temp___String_Literal_1610(void)[62])) = 111)) and
  (to_rep((temp___String_Literal_1610(void)[63])) = 116)) and
  (to_rep((temp___String_Literal_1610(void)[64])) = 32)) and
  (to_rep((temp___String_Literal_1610(void)[65])) = 102)) and
  (to_rep((temp___String_Literal_1610(void)[66])) = 111)) and
  (to_rep((temp___String_Literal_1610(void)[67])) = 117)) and
  (to_rep((temp___String_Literal_1610(void)[68])) = 110)) and
  (to_rep((temp___String_Literal_1610(void)[69])) = 100))

axiom expectedreadernames__def_axiom :
  (expectedreadernames = tokenreader__expectedreadernames__aggregate_def(temp___String_Literal_177(void),
  temp___String_Literal_178(void)))

axiom valid_numberlogentries__post_axiom : true

axiom valid_numberlogentries__def_axiom :
  (forall currentlogfile:int. forall numberlogentries:int.
  (forall usedlogfiles:(int,logfileindext) farray.
  forall usedlogfiles1:logfileindext. forall usedlogfiles2:logfileindext.
  forall usedlogfiles3:logfilecountt.
  (forall logfileentries:(int,fileentrycountt) farray
  [valid_numberlogentries(currentlogfile, numberlogentries, {
  us_split_fields1 = { rec__auditlog__logfilelistt__list = usedlogfiles;
  rec__auditlog__logfilelistt__head = usedlogfiles1;
  rec__auditlog__logfilelistt__lasti = usedlogfiles2;
  rec__auditlog__logfilelistt__length = usedlogfiles3 } }, logfileentries)].
  ((valid_numberlogentries(currentlogfile, numberlogentries, {
  us_split_fields1 = { rec__auditlog__logfilelistt__list = usedlogfiles;
  rec__auditlog__logfilelistt__head = usedlogfiles1;
  rec__auditlog__logfilelistt__lasti = usedlogfiles2;
  rec__auditlog__logfilelistt__length = usedlogfiles3 } },
  logfileentries) = true) <-> ((1 <= to_rep4(usedlogfiles3)) and
  (numberlogentries = (((to_rep4(usedlogfiles3) - 1) * 1024) + to_rep5((logfileentries[currentlogfile])))))))))

axiom nouser__def_axiom : (nouser = temp___String_Literal_142(void))

logic logfiles : (int,us_rep2) farray

logic logfilesstatus : (int,filestatust) farray

logic logfilestate__split_fields : logfileindext

logic logfilestate__split_fields1 : logentrycountt

logic logfilestate__split_fields2 : (int,logfileindext) farray

logic logfilestate__split_fields3 : logfileindext

logic logfilestate__split_fields4 : logfileindext

logic logfilestate__split_fields5 : logfilecountt

logic logfilestate__split_fields6 : (int,fileentrycountt) farray

logic auditalarm : int

logic auditsystemfault : bool

logic numberreaders : int

logic responsecode : int

logic i : int

logic r : int

logic filestate : us_private

logic state : us_private

logic tokenreader__init__L_1__R23b__assume : int

logic temp___1602 : int

logic temp___1601 : (int,us_rep3) farray

logic temp___1600 : int

logic o : int

logic temp___1596 : (int,us_rep3) farray

logic temp___1597 : int

logic temp___1595 : int

logic o1 : int

logic temp___1591 : (int,character) farray

logic temp___15911 : t1

logic o2 : (int,character) farray

logic o3 : t1

logic o4 : (int,character) farray

logic o5 : (int,character) farray

logic o6 : t

logic logfiles1 : (int,us_rep2) farray

logic logfilesstatus1 : (int,filestatust) farray

logic logfilestate__split_fields7 : logfileindext

logic logfilestate__split_fields8 : logentrycountt

logic logfilestate__split_fields9 : (int,logfileindext) farray

logic logfilestate__split_fields10 : logfileindext

logic logfilestate__split_fields11 : logfileindext

logic logfilestate__split_fields12 : logfilecountt

logic logfilestate__split_fields13 : (int,fileentrycountt) farray

logic auditalarm1 : int

logic auditsystemfault1 : bool

logic r1 : int

logic filestate1 : us_private

logic state1 : us_private

logic readerstatus : (int,us_rep3) farray

logic result : int

logic numberreaders1 : int

logic numberreaders2 : int

logic responsecode1 : int

logic readers : (int,(int,character) farray) farray

logic result1 : int

logic i1 : int

logic readerstatus1 : (int,us_rep3) farray

logic i2 : int

logic r2 : int

logic result2 : int

logic r3 : int

logic readerstatus2 : (int,us_rep3) farray

logic r4 : int

logic readerstatus3 : (int,us_rep3) farray

logic result3 : int

logic r5 : int

logic readerstatus4 : (int,us_rep3) farray

logic readerstatus5 : (int,us_rep3) farray

logic readerstatus6 : (int,us_rep3) farray

logic r6 : int

logic readerstatus7 : (int,us_rep3) farray

logic r7 : int

logic readerstatus8 : (int,us_rep3) farray

logic r8 : int

logic readerstatus9 : (int,us_rep3) farray

logic r9 : int

logic readerstatus10 : (int,us_rep3) farray

logic r10 : int

logic readerstatus11 : (int,us_rep3) farray

logic r11 : int

logic result4 : int

logic i3 : int

logic readerstatus12 : (int,us_rep3) farray

logic i4 : int

logic r12 : int

logic readerstatus13 : (int,us_rep3) farray

logic i5 : int

logic r13 : int

logic readerstatus14 : (int,us_rep3) farray

logic i6 : int

logic r14 : int

logic readerstatus15 : (int,us_rep3) farray

logic i7 : int

logic r15 : int

logic readerstatus16 : (int,us_rep3) farray

logic i8 : int

logic r16 : int

logic readerstatus17 : (int,us_rep3) farray

logic i9 : int

logic r17 : int

logic readerstatus18 : (int,us_rep3) farray

logic i10 : int

logic r18 : int

logic readerstatus19 : (int,us_rep3) farray

logic i11 : int

logic r19 : int

logic logfiles2 : (int,us_rep2) farray

logic logfilesstatus2 : (int,filestatust) farray

logic logfilestate__split_fields14 : logfileindext

logic logfilestate__split_fields15 : logentrycountt

logic logfilestate__split_fields16 : (int,logfileindext) farray

logic logfilestate__split_fields17 : logfileindext

logic logfilestate__split_fields18 : logfileindext

logic logfilestate__split_fields19 : logfilecountt

logic logfilestate__split_fields20 : (int,fileentrycountt) farray

logic auditalarm2 : int

logic auditsystemfault2 : bool

logic filestate2 : us_private

logic state2 : us_private

logic logfiles3 : (int,us_rep2) farray

logic logfilesstatus3 : (int,filestatust) farray

logic logfilestate__split_fields21 : logfileindext

logic logfilestate__split_fields22 : logentrycountt

logic logfilestate__split_fields23 : (int,logfileindext) farray

logic logfilestate__split_fields24 : logfileindext

logic logfilestate__split_fields25 : logfileindext

logic logfilestate__split_fields26 : logfilecountt

logic logfilestate__split_fields27 : (int,fileentrycountt) farray

logic auditalarm3 : int

logic auditsystemfault3 : bool

logic filestate3 : us_private

logic state3 : us_private

logic logfiles4 : (int,us_rep2) farray

logic logfilesstatus4 : (int,filestatust) farray

logic logfilestate__split_fields28 : logfileindext

logic logfilestate__split_fields29 : logentrycountt

logic logfilestate__split_fields30 : (int,logfileindext) farray

logic logfilestate__split_fields31 : logfileindext

logic logfilestate__split_fields32 : logfileindext

logic logfilestate__split_fields33 : logfilecountt

logic logfilestate__split_fields34 : (int,fileentrycountt) farray

logic auditalarm4 : int

logic auditsystemfault4 : bool

logic filestate4 : us_private

logic state4 : us_private

axiom H :
  (tokenreader__expectedreadernames__aggregate_def(temp___String_Literal_177(void),
  temp___String_Literal_178(void)) = expectedreadernames)

axiom H1 : (temp___String_Literal_142(void) = nouser)

axiom H2 : (valid_numberlogentries(to_rep2(logfilestate__split_fields),
  to_rep3(logfilestate__split_fields1), { us_split_fields1 = {
  rec__auditlog__logfilelistt__list = logfilestate__split_fields2;
  rec__auditlog__logfilelistt__head = logfilestate__split_fields3;
  rec__auditlog__logfilelistt__lasti = logfilestate__split_fields4;
  rec__auditlog__logfilelistt__length = logfilestate__split_fields5 } },
  logfilestate__split_fields6) = true)

axiom H3 : in_range5(auditalarm)

axiom H4 : ((0 <= 4294967295) -> in_range4(numberreaders))

axiom H5 : ((0 <= 4294967295) -> in_range4(responsecode))

axiom H6 : (result = numberreaders)

axiom H7 : (numberreaders1 = 2)

axiom H8 : (in_range4(numberreaders2) and in_range4(responsecode1))

axiom H9 : (responsecode1 = 0)

axiom H10 : (1 <= numberreaders2)

axiom H11 : (numberreaders2 <= 10)

axiom H12 : ((tokenreader__init__L_1__R23b__assume = numberreaders2) and
  in_range18(numberreaders2))

axiom H13 : (tokenreader__init__L_1__R23b__assume = r23b)

axiom H14 : in_range18(r23b)

axiom H15 : (result1 = i)

axiom H16 : (i1 = 1)

axiom H17 : (1 <= i1)

axiom H18 : (i1 <= r23b)

axiom H19 : (i2 <= numberreaders2)

axiom H20 : (((1 <= r23b) -> dynamic_property3(1, r23b, i2)) and
  ((1 <= i2) and (i2 <= r23b)))

axiom H21 : (result2 = r2)

axiom H22 : (r3 = 0)

axiom H23 : (((0 <= r3) and (r3 <= 1)) -> (((temp___1596 = readerstatus1) and
  ((temp___1597 = numberreaders2) and ((temp___1595 = r3) and
  (((i2 <= numberreaders2) and (numberreaders2 = temp___1597)) and
  ((((0 <= 1) -> in_range12(r4)) and ((0 <= r4) and (r4 <= 1))) and
  ((((readerstatus4 = readerstatus3) and (readerstatus5 = readerstatus3)) and
  (bool_eq5((expectedreadernames[r4]), 1, 8, (readers[i2]), 1, 8) = true)) or
  (((not (bool_eq5((expectedreadernames[r4]), 1, 8, (readers[i2]), 1,
  8) = true)) and (readerstatus3 = readerstatus2)) and
  (((readerstatus4 = readerstatus3) and (readerstatus5 = readerstatus3)) and
  (r4 = 1))))))))) and (((r8 = r4) and (readerstatus8 = readerstatus4)) and
  ((r9 = r4) and (readerstatus9 = readerstatus5)))))

axiom H24 : (((0 <= r3) and (r3 <= 1)) -> (r10 = r8))

axiom H25 : (((0 <= r3) and (r3 <= 1)) -> (readerstatus10 = readerstatus8))

axiom H26 : (((0 <= r3) and (r3 <= 1)) -> (r11 = r9))

axiom H27 : (((0 <= r3) and (r3 <= 1)) -> (readerstatus11 = readerstatus9))

axiom H28 : ((not ((0 <= r3) and (r3 <= 1))) -> (r10 = r3))

axiom H29 : ((not ((0 <= r3) and (r3 <= 1))) ->
  (readerstatus10 = readerstatus1))

axiom H30 : ((not ((0 <= r3) and (r3 <= 1))) -> (r11 = r3))

axiom H31 : ((not ((0 <= r3) and (r3 <= 1))) ->
  (readerstatus11 = readerstatus1))

axiom H32 : (not (i2 = r23b))

axiom H33 : (result4 = i2)

axiom H34 : (i3 = (i2 + 1))

axiom H35 : (r12 = r10)

axiom H36 : (i4 = i3)

axiom H37 : (readerstatus12 = readerstatus10)

axiom H38 : (r13 = r11)

axiom H39 : (i5 = i3)

axiom H40 : (readerstatus13 = readerstatus11)

 (* File "tokenreader.adb", line 59, characters 0-0 *)
goal WP_parameter_def : (i4 <= numberreaders2)
