(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort unsigned32t 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq4 (unsigned32t unsigned32t) Bool)
(declare-const dummy4 unsigned32t)
(declare-datatypes () ((unsigned32t__ref (mk_unsigned32t__ref (unsigned32t__content unsigned32t)))))
(define-fun unsigned32t__ref___projection ((a unsigned32t__ref)) unsigned32t (unsigned32t__content a))
(define-fun dynamic_invariant ((temp___expr_167 Int) (temp___is_init_164 Bool) (temp___skip_constant_165 Bool) (temp___do_toplevel_166 Bool)) Bool (=> (or (= temp___is_init_164 true) (<= 0 4294967295)) (in_range3 temp___expr_167)))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq5 (us_t1 us_t1) Bool)
(declare-const dummy5 us_t1)
(declare-datatypes () ((stringf1l1000__ref (mk_stringf1l1000__ref (stringf1l1000__content us_t1)))))
(define-fun stringf1l1000__ref___projection ((a stringf1l1000__ref)) us_t1 (stringf1l1000__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int character)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))
(define-fun of_array2 ((a (Array Int character)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq6 (us_t2 us_t2) Bool)
(declare-const dummy6 us_t2)
(declare-datatypes () ((stringf1__ref (mk_stringf1__ref (stringf1__content us_t2)))))
(define-fun stringf1__ref___projection ((a stringf1__ref)) us_t2 (stringf1__content a))
(define-fun dynamic_invariant1 ((temp___expr_294 us_t1) (temp___is_init_291 Bool) (temp___skip_constant_292 Bool) (temp___do_toplevel_293 Bool)) Bool (and (=> (not (= temp___skip_constant_292 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_294) (last3 temp___expr_294))) (=> (= temp___do_toplevel_293 true) (=> (= temp___is_init_291 true) (and (let ((temp___296 (of_array2 (to_array1 temp___expr_294) (first3 temp___expr_294) (last3 temp___expr_294)))) (and (= (first5 temp___296) 1) (<= 0 (last5 temp___296)))) (<= (last3 temp___expr_294) 1000))))))
(define-fun dynamic_predicate ((temp___298 us_t1)) Bool (and (let ((temp___300 (of_array2 (to_array1 temp___298) (first3 temp___298) (last3 temp___298)))) (and (= (first5 temp___300) 1) (<= 0 (last5 temp___300)))) (<= (last3 temp___298) 1000)))
(declare-sort fart 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq7 (fart fart) Bool)
(declare-const dummy7 fart)
(declare-datatypes () ((fart__ref (mk_fart__ref (fart__content fart)))))
(define-fun fart__ref___projection ((a fart__ref)) fart (fart__content a))
(define-fun dynamic_invariant2 ((temp___expr_432 Int) (temp___is_init_429 Bool) (temp___skip_constant_430 Bool) (temp___do_toplevel_431 Bool)) Bool (=> (or (= temp___is_init_429 true) (<= 0 2147483647)) (in_range4 temp___expr_432)))
(declare-sort matchresultt 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq8 (matchresultt matchresultt) Bool)
(declare-const dummy8 matchresultt)
(declare-datatypes () ((matchresultt__ref (mk_matchresultt__ref (matchresultt__content matchresultt)))))
(define-fun matchresultt__ref___projection ((a matchresultt__ref)) matchresultt (matchresultt__content a))
(define-fun dynamic_invariant3 ((temp___expr_442 Int) (temp___is_init_439 Bool) (temp___skip_constant_440 Bool) (temp___do_toplevel_441 Bool)) Bool (=> (or (= temp___is_init_439 true) (<= 0 1)) (in_range5 temp___expr_442)))
(declare-fun to_rep2 (fart) Int)
(declare-fun of_rep2 (Int) fart)
(assert (forall ((x fart)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x fart)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort bytet 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq9 (bytet bytet) Bool)
(declare-const dummy9 bytet)
(declare-datatypes () ((bytet__ref (mk_bytet__ref (bytet__content bytet)))))
(define-fun bytet__ref___projection ((a bytet__ref)) bytet (bytet__content a))
(declare-fun to_rep3 (bytet) Int)
(declare-fun of_rep3 (Int) bytet)
(assert (forall ((x bytet)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x bytet)) (! (in_range6 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int bytet))))))
(declare-fun slide1 ((Array Int bytet) Int Int) (Array Int bytet))
(assert (forall ((a (Array Int bytet))) (forall ((first6 Int)) (! (= (slide1 a first6 first6) a) :pattern ((slide1 a first6 first6))))))
(assert (forall ((a (Array Int bytet))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int bytet) Int Int (Array Int bytet) Int Int) (Array Int bytet))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (bytet Int) (Array Int bytet))
(assert (forall ((v bytet)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq4 ((a (Array Int bytet)) (a__first Int) (a__last Int) (b (Array Int bytet)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_136 Int)) (=> (and (<= a__first temp___idx_136) (<= temp___idx_136 a__last)) (= (to_rep3 (select a temp___idx_136)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_136))))))) true false))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_136 Int)) (=> (and (<= a__first temp___idx_136) (<= temp___idx_136 a__last)) (= (to_rep3 (select a temp___idx_136)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_136)))))))))))
(declare-fun compare1 ((Array Int bytet) Int Int (Array Int bytet) Int Int) Int)
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq4 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq4 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep3 (select a (+ i 1))) (to_rep3 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq4 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep3 (select b (+ i 1))) (to_rep3 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const dummy10 (Array Int bytet))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int bytet)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int bytet)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int bytet)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq10 ((Array Int bytet) (Array Int bytet)) Bool)
(declare-sort templatelengtht 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq11 (templatelengtht templatelengtht) Bool)
(declare-const dummy11 templatelengtht)
(declare-datatypes () ((templatelengtht__ref (mk_templatelengtht__ref (templatelengtht__content templatelengtht)))))
(define-fun templatelengtht__ref___projection ((a templatelengtht__ref)) templatelengtht (templatelengtht__content a))
(declare-fun to_rep4 (templatelengtht) Int)
(declare-fun of_rep4 (Int) templatelengtht)
(assert (forall ((x templatelengtht)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x templatelengtht)) (! (in_range7 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-const dummy12 (Array Int character))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int character)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int character)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int character)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment4 a))))
(declare-fun user_eq12 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__iandatypes__templatet__length templatelengtht) (rec__iandatypes__templatet__requiredmaxfar fart) (rec__iandatypes__templatet__id (Array Int character)) (rec__iandatypes__templatet__pad (Array Int bytet))))))
(define-fun us_split_fields_Length__projection ((a us_split_fields)) templatelengtht (rec__iandatypes__templatet__length a))
(define-fun us_split_fields_RequiredMaxFAR__projection ((a us_split_fields)) fart (rec__iandatypes__templatet__requiredmaxfar a))
(define-fun us_split_fields_ID__2__projection ((a us_split_fields)) (Array Int character) (rec__iandatypes__templatet__id a))
(define-fun us_split_fields_Pad__projection ((a us_split_fields)) (Array Int bytet) (rec__iandatypes__templatet__pad a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___3__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq5 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (to_rep4 (rec__iandatypes__templatet__length (us_split_fields1 a))) (to_rep4 (rec__iandatypes__templatet__length (us_split_fields1 b)))) (= (to_rep2 (rec__iandatypes__templatet__requiredmaxfar (us_split_fields1 a))) (to_rep2 (rec__iandatypes__templatet__requiredmaxfar (us_split_fields1 b))))) (= (bool_eq (rec__iandatypes__templatet__id (us_split_fields1 a)) 1 40 (rec__iandatypes__templatet__id (us_split_fields1 b)) 1 40) true)) (= (bool_eq4 (rec__iandatypes__templatet__pad (us_split_fields1 a)) 1 452 (rec__iandatypes__templatet__pad (us_split_fields1 b)) 1 452) true)) true false))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep)) (<= 0 (object__alignment5 a))))
(declare-const iandatypes__templatet__length__first__bit Int)
(declare-const iandatypes__templatet__length__last__bit Int)
(declare-const iandatypes__templatet__length__position Int)
(assert (<= 0 iandatypes__templatet__length__first__bit))
(assert (< iandatypes__templatet__length__first__bit iandatypes__templatet__length__last__bit))
(assert (<= 0 iandatypes__templatet__length__position))
(declare-const iandatypes__templatet__requiredmaxfar__first__bit Int)
(declare-const iandatypes__templatet__requiredmaxfar__last__bit Int)
(declare-const iandatypes__templatet__requiredmaxfar__position Int)
(assert (<= 0 iandatypes__templatet__requiredmaxfar__first__bit))
(assert (< iandatypes__templatet__requiredmaxfar__first__bit iandatypes__templatet__requiredmaxfar__last__bit))
(assert (<= 0 iandatypes__templatet__requiredmaxfar__position))
(declare-const iandatypes__templatet__id__first__bit Int)
(declare-const iandatypes__templatet__id__last__bit Int)
(declare-const iandatypes__templatet__id__position Int)
(assert (<= 0 iandatypes__templatet__id__first__bit))
(assert (< iandatypes__templatet__id__first__bit iandatypes__templatet__id__last__bit))
(assert (<= 0 iandatypes__templatet__id__position))
(declare-const iandatypes__templatet__pad__first__bit Int)
(declare-const iandatypes__templatet__pad__last__bit Int)
(declare-const iandatypes__templatet__pad__position Int)
(assert (<= 0 iandatypes__templatet__pad__first__bit))
(assert (< iandatypes__templatet__pad__first__bit iandatypes__templatet__pad__last__bit))
(assert (<= 0 iandatypes__templatet__pad__position))
(declare-fun user_eq13 (us_rep us_rep) Bool)
(declare-const dummy13 us_rep)
(declare-datatypes () ((templatet__ref (mk_templatet__ref (templatet__content us_rep)))))
(define-fun templatet__ref___projection ((a templatet__ref)) us_rep (templatet__content a))
(declare-sort statust 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq14 (statust statust) Bool)
(declare-const dummy14 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant4 ((temp___expr_500 Int) (temp___is_init_497 Bool) (temp___skip_constant_498 Bool) (temp___do_toplevel_499 Bool)) Bool (=> (or (= temp___is_init_497 true) (<= 0 1)) (in_range8 temp___expr_500)))
(declare-sort descriptioni 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 150)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq15 (descriptioni descriptioni) Bool)
(declare-const dummy15 descriptioni)
(declare-datatypes () ((descriptioni__ref (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni (descriptioni__content a))
(declare-const nouser (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun temp___String_Literal_147 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_147 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_147 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 3)) 85)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 32)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 33)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 36)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 38)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 41)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 43)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 44)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 46)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 48)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 49)) 32)) (= (to_rep (select (temp___String_Literal_147 us_void_param) 50)) 32)) :pattern ((temp___String_Literal_147 us_void_param)))))
(declare-sort logfileindext 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq16 (logfileindext logfileindext) Bool)
(declare-const dummy16 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep5 (logfileindext) Int)
(declare-fun of_rep5 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x logfileindext)) (! (in_range10 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq17 (logentrycountt logentrycountt) Bool)
(declare-const dummy17 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep6 (logentrycountt) Int)
(declare-fun of_rep6 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x logentrycountt)) (! (in_range11 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int logfileindext))))))
(declare-fun slide2 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first6 Int)) (! (= (slide2 a first6 first6) a) :pattern ((slide2 a first6 first6))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (logfileindext Int) (Array Int logfileindext))
(assert (forall ((v logfileindext)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq6 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep5 (select a temp___idx_150)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_150))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep5 (select a temp___idx_150)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_150)))))))))))
(declare-fun compare2 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) Int)
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare2 a a_first a_last b b_first b_last) 0) (= (bool_eq6 a a_first a_last b b_first b_last) true)) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare2 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq6 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep5 (select a (+ i 1))) (to_rep5 (select b (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare2 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq6 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep5 (select b (+ i 1))) (to_rep5 (select a (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(declare-const dummy18 (Array Int logfileindext))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int logfileindext)) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 ((Array Int logfileindext)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment6 a))))
(declare-fun user_eq18 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-sort logfilecountt 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq19 (logfilecountt logfilecountt) Bool)
(declare-const dummy19 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep7 (logfilecountt) Int)
(declare-fun of_rep7 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x logfilecountt)) (! (in_range12 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields2)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields2)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___8__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq7 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (bool_eq6 (rec__auditlog__logfilelistt__list (us_split_fields3 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields3 b)) 1 17) true) (= (to_rep5 (rec__auditlog__logfilelistt__head (us_split_fields3 a))) (to_rep5 (rec__auditlog__logfilelistt__head (us_split_fields3 b))))) (= (to_rep5 (rec__auditlog__logfilelistt__lasti (us_split_fields3 a))) (to_rep5 (rec__auditlog__logfilelistt__lasti (us_split_fields3 b))))) (= (to_rep7 (rec__auditlog__logfilelistt__length (us_split_fields3 a))) (to_rep7 (rec__auditlog__logfilelistt__length (us_split_fields3 b))))) true false))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep1) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep1) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep1)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment7 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq20 (us_rep1 us_rep1) Bool)
(declare-const dummy20 us_rep1)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep1)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep1 (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq21 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy21 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep8 (fileentrycountt) Int)
(declare-fun of_rep8 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range13 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int fileentrycountt))))))
(declare-fun slide3 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first6 Int)) (! (= (slide3 a first6 first6) a) :pattern ((slide3 a first6 first6))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(declare-fun concat4 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat4 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton4 (fileentrycountt Int) (Array Int fileentrycountt))
(assert (forall ((v fileentrycountt)) (forall ((i Int)) (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i))))))
(define-fun bool_eq8 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep8 (select a temp___idx_151)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_151))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq8 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep8 (select a temp___idx_151)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_151)))))))))))
(declare-fun compare3 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) Int)
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare3 a a_first a_last b b_first b_last) 0) (= (bool_eq8 a a_first a_last b b_first b_last) true)) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare3 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq8 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep8 (select a (+ i 1))) (to_rep8 (select b (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare3 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq8 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep8 (select b (+ i 1))) (to_rep8 (select a (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(declare-const dummy22 (Array Int fileentrycountt))
(declare-const value__size8 Int)
(declare-fun object__size8 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size6 Int)
(declare-fun object__component__size6 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size8))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size8 a))))
(assert (<= 0 value__component__size6))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size6 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment8 a))))
(declare-fun user_eq22 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep1) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields4)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields4)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields4)) us_rep1 (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields4)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___9__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq9 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 a))) (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 b)))) (= (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 a))) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 b))))) (= (bool_eq7 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 b))) true)) (= (bool_eq8 (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 b)) 1 17) true)) true false))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep2) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep2) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep2)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment9 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq23 (us_rep2 us_rep2) Bool)
(declare-const dummy23 us_rep2)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep2)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep2 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun temp___1096 (Int) (Array Int logfileindext))
(assert (forall ((temp___1098 Int)) (forall ((temp___1099 Int)) (= (select (temp___1096 temp___1098) temp___1099) (of_rep5 temp___1098)))))
(declare-fun temp___1100 (Int) (Array Int fileentrycountt))
(assert (forall ((temp___1102 Int)) (forall ((temp___1103 Int)) (= (select (temp___1100 temp___1102) temp___1103) (of_rep8 temp___1102)))))
(define-fun dynamic_invariant5 ((temp___expr_1090 us_rep2) (temp___is_init_1087 Bool) (temp___skip_constant_1088 Bool) (temp___do_toplevel_1089 Bool)) Bool (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___expr_1090))) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___expr_1090))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___expr_1090)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___expr_1090))) true))
(define-fun default_initial_assumption ((temp___expr_1094 us_rep2) (temp___skip_top_level_1095 Bool)) Bool (and (and (and (= (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___expr_1094))) 1) (= (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___expr_1094))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___expr_1094)) (mk___rep1 (mk___split_fields1 (temp___1096 1) (of_rep5 1) (of_rep5 1) (of_rep7 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___expr_1094)) (temp___1100 0))))
(define-fun type_invariant ((temp___1104 us_rep2)) Bool (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___1104))) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___1104))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___1104)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___1104))) true))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep3 0)
(declare-fun bool_eq10 (us_rep3 us_rep3) Bool)
(declare-const value__size10 Int)
(declare-fun object__size10 (us_rep3) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 (us_rep3) Int)
(assert (<= 0 value__size10))
(assert (forall ((a us_rep3)) (<= 0 (object__size10 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment10 a))))
(declare-fun user_eq24 (us_rep3 us_rep3) Bool)
(declare-const dummy24 us_rep3)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep3)))))
(define-fun t__ref___projection ((a t__ref)) us_rep3 (t__content a))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int us_rep3))))))
(declare-fun slide4 ((Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3))) (forall ((first6 Int)) (! (= (slide4 a first6 first6) a) :pattern ((slide4 a first6 first6))))))
(assert (forall ((a (Array Int us_rep3))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(declare-fun concat5 ((Array Int us_rep3) Int Int (Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat5 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat5 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat5 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton5 (us_rep3 Int) (Array Int us_rep3))
(assert (forall ((v us_rep3)) (forall ((i Int)) (! (= (select (singleton5 v i) i) v) :pattern ((select (singleton5 v i) i))))))
(define-fun bool_eq11 ((a (Array Int us_rep3)) (a__first Int) (a__last Int) (b (Array Int us_rep3)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq10 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true)))) true false))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq11 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq10 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort filestatust 0)
(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq25 (filestatust filestatust) Bool)
(declare-const dummy25 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep9 (filestatust) Int)
(declare-fun of_rep9 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x filestatust)) (! (in_range14 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range14 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-datatypes () ((map__ref5 (mk_map__ref5 (map__content5 (Array Int filestatust))))))
(declare-fun slide5 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first6 Int)) (! (= (slide5 a first6 first6) a) :pattern ((slide5 a first6 first6))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide5 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide5 a old_first new_first) i))))))))
(declare-fun concat6 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat6 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat6 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat6 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton6 (filestatust Int) (Array Int filestatust))
(assert (forall ((v filestatust)) (forall ((i Int)) (! (= (select (singleton6 v i) i) v) :pattern ((select (singleton6 v i) i))))))
(define-fun bool_eq12 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep9 (select a temp___idx_153)) (to_rep9 (select b (+ (- b__first a__first) temp___idx_153))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq12 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep9 (select a temp___idx_153)) (to_rep9 (select b (+ (- b__first a__first) temp___idx_153)))))))))))
(declare-fun compare4 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) Int)
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare4 a a_first a_last b b_first b_last) 0) (= (bool_eq12 a a_first a_last b b_first b_last) true)) :pattern ((compare4 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare4 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq12 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep9 (select a (+ i 1))) (to_rep9 (select b (+ j 1))))))))))) :pattern ((compare4 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare4 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq12 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep9 (select b (+ i 1))) (to_rep9 (select a (+ j 1))))))))))) :pattern ((compare4 a a_first a_last b b_first b_last))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const template us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const maxfar Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-sort returnt 0)
(define-fun in_range15 ((x Int)) Bool (and (<= 0 x) (<= x 16)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq26 (returnt returnt) Bool)
(declare-const dummy26 returnt)
(declare-datatypes () ((returnt__ref (mk_returnt__ref (returnt__content returnt)))))
(define-fun returnt__ref___projection ((a returnt__ref)) returnt (returnt__content a))
(define-fun dynamic_invariant6 ((temp___expr_1266 Int) (temp___is_init_1263 Bool) (temp___skip_constant_1264 Bool) (temp___do_toplevel_1265 Bool)) Bool (=> (or (= temp___is_init_1263 true) (<= 0 16)) (in_range15 temp___expr_1266)))
(declare-fun makedescription (us_t1 Int) (Array Int character))
(declare-fun makedescription__function_guard ((Array Int character) us_t1 Int) Bool)
(assert true)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const c31b Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-sort source 0)
(define-fun in_range16 ((x Int)) Bool (and (<= 0 x) (<= x 16)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq27 (source source) Bool)
(declare-const dummy27 source)
(declare-datatypes () ((source__ref (mk_source__ref (source__content source)))))
(define-fun source__ref___4__projection ((a source__ref)) source (source__content a))
(define-fun dynamic_invariant7 ((temp___expr_1326 Int) (temp___is_init_1323 Bool) (temp___skip_constant_1324 Bool) (temp___do_toplevel_1325 Bool)) Bool (=> (or (= temp___is_init_1323 true) (<= 0 16)) (in_range16 temp___expr_1326)))
(declare-sort target 0)
(define-fun in_range17 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)
(declare-fun user_eq28 (target target) Bool)
(declare-const dummy28 target)
(declare-datatypes () ((target__ref (mk_target__ref (target__content target)))))
(define-fun target__ref___4__projection ((a target__ref)) target (target__content a))
(define-fun dynamic_invariant8 ((temp___expr_1332 Int) (temp___is_init_1329 Bool) (temp___skip_constant_1330 Bool) (temp___do_toplevel_1331 Bool)) Bool (=> (or (= temp___is_init_1329 true) (<= 0 4294967295)) (in_range17 temp___expr_1332)))
(declare-fun codetoval (Int) Int)
(declare-fun codetoval__function_guard (Int Int) Bool)
(assert (forall ((s Int)) (! (=> (dynamic_invariant7 s true true true) (dynamic_invariant8 (codetoval s) true false true)) :pattern ((codetoval s)))))
(declare-fun temp___String_Literal_1335 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1335 us_void_param) 1)) 66) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 2)) 105)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 3)) 111)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 4)) 109)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 6)) 116)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 7)) 114)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 9)) 99)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 11)) 100)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 12)) 101)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 13)) 118)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 14)) 105)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 15)) 99)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 16)) 101)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 18)) 102)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 19)) 97)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 20)) 105)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 21)) 108)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 22)) 117)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 23)) 114)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 24)) 101)) (= (to_rep (select (temp___String_Literal_1335 us_void_param) 25)) 32)) :pattern ((temp___String_Literal_1335 us_void_param)))))
(define-fun dynamic_invariant9 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range1 temp___expr_39)))
(define-fun dynamic_invariant10 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range2 temp___expr_63)))
(define-fun dynamic_invariant11 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant12 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_15)))
(define-fun dynamic_invariant13 ((temp___expr_1056 Int) (temp___is_init_1053 Bool) (temp___skip_constant_1054 Bool) (temp___do_toplevel_1055 Bool)) Bool (=> (or (= temp___is_init_1053 true) (<= 0 17)) (in_range12 temp___expr_1056)))
(define-fun dynamic_invariant14 ((temp___expr_1035 Int) (temp___is_init_1032 Bool) (temp___skip_constant_1033 Bool) (temp___do_toplevel_1034 Bool)) Bool (=> (or (= temp___is_init_1032 true) (<= 1 17)) (in_range10 temp___expr_1035)))
(define-fun dynamic_invariant15 ((temp___expr_1160 Int) (temp___is_init_1157 Bool) (temp___skip_constant_1158 Bool) (temp___do_toplevel_1159 Bool)) Bool (=> (or (= temp___is_init_1157 true) (<= 0 2)) (in_range14 temp___expr_1160)))
(define-fun dynamic_invariant16 ((temp___expr_1041 Int) (temp___is_init_1038 Bool) (temp___skip_constant_1039 Bool) (temp___do_toplevel_1040 Bool)) Bool (=> (or (= temp___is_init_1038 true) (<= 0 17408)) (in_range11 temp___expr_1041)))
(define-fun dynamic_invariant17 ((temp___expr_1075 Int) (temp___is_init_1072 Bool) (temp___skip_constant_1073 Bool) (temp___do_toplevel_1074 Bool)) Bool (=> (or (= temp___is_init_1072 true) (<= 0 1024)) (in_range13 temp___expr_1075)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep1)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep7 (rec__auditlog__logfilelistt__length (us_split_fields3 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep7 (rec__auditlog__logfilelistt__length (us_split_fields3 usedlogfiles))) 1) 1024) (to_rep8 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(define-fun dynamic_invariant18 ((temp___expr_522 Int) (temp___is_init_519 Bool) (temp___skip_constant_520 Bool) (temp___do_toplevel_521 Bool)) Bool (=> (or (= temp___is_init_519 true) (<= 1 150)) (in_range9 temp___expr_522)))
(assert (= nouser (temp___String_Literal_147 Tuple0)))
(define-fun dynamic_invariant19 ((temp___expr_185 Int) (temp___is_init_182 Bool) (temp___skip_constant_183 Bool) (temp___do_toplevel_184 Bool)) Bool (=> (or (= temp___is_init_182 true) (<= 0 255)) (in_range6 temp___expr_185)))
(define-fun dynamic_invariant20 ((temp___expr_260 us_t2) (temp___is_init_257 Bool) (temp___skip_constant_258 Bool) (temp___do_toplevel_259 Bool)) Bool (and (=> (not (= temp___skip_constant_258 true)) (dynamic_property2 1 2147483647 (first5 temp___expr_260) (last5 temp___expr_260))) (=> (= temp___do_toplevel_259 true) (=> (= temp___is_init_257 true) (and (= (first5 temp___expr_260) 1) (<= 0 (last5 temp___expr_260)))))))
(define-fun dynamic_predicate1 ((temp___263 us_t2)) Bool (and (= (first5 temp___263) 1) (<= 0 (last5 temp___263))))
(define-fun dynamic_invariant21 ((temp___expr_463 Int) (temp___is_init_460 Bool) (temp___skip_constant_461 Bool) (temp___do_toplevel_462 Bool)) Bool (=> (or (= temp___is_init_460 true) (<= 0 4294967295)) (in_range7 temp___expr_463)))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const matchresult Int)
(declare-const achievedfar Int)
(declare-const numericreturn Int)
(declare-const c32b Int)
(declare-const o Int)
(declare-const temp___1336 (Array Int character))
(declare-const temp___13361 t1)
(declare-const o1 (Array Int character))
(declare-const o2 t1)
(declare-const o3 (Array Int character))
(declare-const o4 (Array Int character))
(declare-const o5 t)
(declare-const matchresult1 Int)
(declare-const achievedfar1 Int)
(declare-const numericreturn1 Int)
(declare-const result Int)
(declare-const c32b1 Int)
(declare-const result1 Int)
(declare-const matchresult2 Int)
(assert (= (temp___String_Literal_147 Tuple0) nouser))
(assert (in_range4 maxfar))
(assert (=> (<= 0 1) (in_range5 matchresult)))
(assert (=> (<= 0 2147483647) (in_range4 achievedfar)))
(assert (= (valid_numberlogentries (to_rep5 logfilestate__split_fields) (to_rep6 logfilestate__split_fields1) (mk___rep1 (mk___split_fields1 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range8 auditalarm))
(assert (=> (<= 0 4294967295) (in_range3 numericreturn)))
(assert (and (and (in_range5 matchresult1) (in_range4 achievedfar1)) (in_range3 numericreturn1)))
(assert (in_range15 c31b))
(assert (=> (<= 0 4294967295) (in_range3 c32b)))
(assert (and (= o (codetoval 0)) (in_range17 o)))
(assert (= result c32b))
(assert (= c32b1 o))
(assert (not (= numericreturn1 c32b1)))
(assert (= result1 matchresult1))
(assert (= matchresult2 1))
(assert (not (dynamic_property1 1 2147483647 1 25)))
(check-sat)
(exit)
