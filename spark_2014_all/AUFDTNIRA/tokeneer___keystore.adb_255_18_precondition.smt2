(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun div1 (Int Int) Int)
(declare-fun mod1 (Int Int) Int)
(assert (forall ((x Int) (y Int)) (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))
(assert (forall ((x Int) (y Int)) (=> (not (= y 0)) (and (< (- (abs y)) (mod1 x y)) (< (mod1 x y) (abs y))))))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))
(assert (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))
(assert (forall ((x Int) (y Int)) (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))
(assert (forall ((x Int) (y Int)) (=> (not (= y 0)) (<= (abs (* (div1 x y) y)) (abs x)))))
(assert (forall ((x Int)) (= (div1 x 1) x)))
(assert (forall ((x Int)) (= (mod1 x 1) 0)))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))
(assert (forall ((x Int) (y Int) (z Int)) (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z))) (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1 (+ (* x y) z) x)))))
(assert (forall ((x Int) (y Int) (z Int)) (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z))) (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)))))
(define-fun mod2 ((x Int) (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(declare-sort statust 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (statust statust) Bool)
(declare-const dummy4 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant1 ((temp___expr_237 Int) (temp___is_init_233 Bool) (temp___skip_constant_234 Bool) (temp___do_toplevel_235 Bool) (temp___do_typ_inv_236 Bool)) Bool (=> (or (= temp___is_init_233 true) (<= 0 1)) (in_range4 temp___expr_237)))
(declare-sort unsigned32t 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (unsigned32t unsigned32t) Bool)
(declare-const dummy5 unsigned32t)
(declare-datatypes () ((unsigned32t__ref (mk_unsigned32t__ref (unsigned32t__content unsigned32t)))))
(define-fun unsigned32t__ref___projection ((a unsigned32t__ref)) unsigned32t (unsigned32t__content a))
(define-fun dynamic_invariant2 ((temp___expr_244 Int) (temp___is_init_240 Bool) (temp___skip_constant_241 Bool) (temp___do_toplevel_242 Bool) (temp___do_typ_inv_243 Bool)) Bool (=> (or (= temp___is_init_240 true) (<= 0 4294967295)) (in_range5 temp___expr_244)))
(declare-fun to_rep2 (unsigned32t) Int)
(declare-fun of_rep2 (Int) unsigned32t)
(assert (forall ((x unsigned32t)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x unsigned32t)) (! (in_range5 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq6 (us_t1 us_t1) Bool)
(declare-const dummy6 us_t1)
(declare-datatypes () ((stringf1l1000__ref (mk_stringf1l1000__ref (stringf1l1000__content us_t1)))))
(define-fun stringf1l1000__ref___projection ((a stringf1l1000__ref)) us_t1 (stringf1l1000__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int character)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))
(define-fun of_array2 ((a (Array Int character)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((stringf1__ref (mk_stringf1__ref (stringf1__content us_t2)))))
(define-fun stringf1__ref___projection ((a stringf1__ref)) us_t2 (stringf1__content a))
(define-fun dynamic_invariant3 ((temp___expr_387 us_t1) (temp___is_init_383 Bool) (temp___skip_constant_384 Bool) (temp___do_toplevel_385 Bool) (temp___do_typ_inv_386 Bool)) Bool (and (=> (not (= temp___skip_constant_384 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_387) (last3 temp___expr_387))) (=> (= temp___do_toplevel_385 true) (=> (= temp___is_init_383 true) (and (let ((temp___389 (of_array2 (to_array1 temp___expr_387) (first3 temp___expr_387) (last3 temp___expr_387)))) (and (= (first5 temp___389) 1) (<= 0 (last5 temp___389)))) (<= (last3 temp___expr_387) 1000))))))
(define-fun dynamic_predicate ((temp___391 us_t1)) Bool (and (let ((temp___393 (of_array2 (to_array1 temp___391) (first3 temp___391) (last3 temp___391)))) (and (= (first5 temp___393) 1) (<= 0 (last5 temp___393)))) (<= (last3 temp___391) 1000)))
(declare-sort descriptioni 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 150)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (descriptioni descriptioni) Bool)
(declare-const dummy8 descriptioni)
(declare-datatypes () ((descriptioni__ref (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni (descriptioni__content a))
(declare-const nouser (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun temp___String_Literal_158 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_158 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_158 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 3)) 85)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 32)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 33)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 36)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 38)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 41)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 43)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 44)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 46)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 48)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 49)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 50)) 32)) :pattern ((temp___String_Literal_158 us_void_param)))))
(declare-sort algorithmt 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (algorithmt algorithmt) Bool)
(declare-const dummy9 algorithmt)
(declare-datatypes () ((algorithmt__ref (mk_algorithmt__ref (algorithmt__content algorithmt)))))
(define-fun algorithmt__ref___projection ((a algorithmt__ref)) algorithmt (algorithmt__content a))
(define-fun dynamic_invariant4 ((temp___expr_1045 Int) (temp___is_init_1041 Bool) (temp___skip_constant_1042 Bool) (temp___do_toplevel_1043 Bool) (temp___do_typ_inv_1044 Bool)) Bool (=> (or (= temp___is_init_1041 true) (<= 0 10)) (in_range7 temp___expr_1045)))
(declare-sort logfileindext 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq10 (logfileindext logfileindext) Bool)
(declare-const dummy10 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep3 (logfileindext) Int)
(declare-fun of_rep3 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x logfileindext)) (! (in_range8 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq11 (logentrycountt logentrycountt) Bool)
(declare-const dummy11 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep4 (logentrycountt) Int)
(declare-fun of_rep4 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x logentrycountt)) (! (in_range9 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-sort logfilecountt 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq12 (logfilecountt logfilecountt) Bool)
(declare-const dummy12 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep5 (logfilecountt) Int)
(declare-fun of_rep5 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x logfilecountt)) (! (in_range10 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first6 Int)) (! (= (slide1 a first6 first6) a) :pattern ((slide1 a first6 first6))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq4 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_172 Int)) (=> (and (<= a__first temp___idx_172) (<= temp___idx_172 a__last)) (= (to_rep3 (select a temp___idx_172)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_172))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_172 Int)) (=> (and (<= a__first temp___idx_172) (<= temp___idx_172 a__last)) (= (to_rep3 (select a temp___idx_172)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_172)))))))))))
(declare-const dummy13 (Array Int logfileindext))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int logfileindext)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int logfileindext)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq13 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq5 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (bool_eq4 (rec__auditlog__logfilelistt__list (us_split_fields1 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields1 b)) 1 17) true) (= (to_rep3 (rec__auditlog__logfilelistt__head (us_split_fields1 a))) (to_rep3 (rec__auditlog__logfilelistt__head (us_split_fields1 b))))) (= (to_rep3 (rec__auditlog__logfilelistt__lasti (us_split_fields1 a))) (to_rep3 (rec__auditlog__logfilelistt__lasti (us_split_fields1 b))))) (= (to_rep5 (rec__auditlog__logfilelistt__length (us_split_fields1 a))) (to_rep5 (rec__auditlog__logfilelistt__length (us_split_fields1 b))))) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep)) (<= 0 (object__alignment4 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq14 (us_rep us_rep) Bool)
(declare-const dummy14 us_rep)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq15 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy15 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep6 (fileentrycountt) Int)
(declare-fun of_rep6 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range11 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first6 Int)) (! (= (slide2 a first6 first6) a) :pattern ((slide2 a first6 first6))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq6 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep6 (select a temp___idx_173)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_173))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep6 (select a temp___idx_173)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_173)))))))))))
(declare-const dummy16 (Array Int fileentrycountt))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment5 a))))
(declare-fun user_eq16 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields2)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields2)) us_rep (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields2)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___9__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq7 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 a))) (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 b)))) (= (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 a))) (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 b))))) (= (bool_eq5 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 b))) true)) (= (bool_eq6 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 b)) 1 17) true)) true false))
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep1) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep1) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep1)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment6 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq17 (us_rep1 us_rep1) Bool)
(declare-const dummy17 us_rep1)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep1)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep1 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep (Array Int fileentrycountt)) Bool)
(declare-fun temp___1282 (Int) (Array Int logfileindext))
(declare-fun temp___1286 (Int) (Array Int fileentrycountt))
(define-fun dynamic_invariant5 ((temp___expr_1276 us_rep1) (temp___is_init_1272 Bool) (temp___skip_constant_1273 Bool) (temp___do_toplevel_1274 Bool) (temp___do_typ_inv_1275 Bool)) Bool (=> (= temp___do_typ_inv_1275 true) (= (valid_numberlogentries (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1276))) (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1276))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1276)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1276))) true)))
(define-fun default_initial_assumption ((temp___expr_1280 us_rep1) (temp___skip_top_level_1281 Bool)) Bool (and (and (and (= (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1280))) 1) (= (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1280))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1280)) (mk___rep (mk___split_fields (temp___1282 1) (of_rep3 1) (of_rep3 1) (of_rep5 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1280)) (temp___1286 0))))
(define-fun type_invariant ((temp___1290 us_rep1)) Bool (= (valid_numberlogentries (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___1290))) (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___1290))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___1290)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___1290))) true))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep2 0)
(declare-fun bool_eq8 (us_rep2 us_rep2) Bool)
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep2) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep2) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep2)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment7 a))))
(declare-fun user_eq18 (us_rep2 us_rep2) Bool)
(declare-const dummy18 us_rep2)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep2)))))
(define-fun t__ref___projection ((a t__ref)) us_rep2 (t__content a))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep2))))))
(declare-fun slide3 ((Array Int us_rep2) Int Int) (Array Int us_rep2))
(assert (forall ((a (Array Int us_rep2))) (forall ((first6 Int)) (! (= (slide3 a first6 first6) a) :pattern ((slide3 a first6 first6))))))
(assert (forall ((a (Array Int us_rep2))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq9 ((a (Array Int us_rep2)) (a__first Int) (a__last Int) (b (Array Int us_rep2)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (bool_eq8 (select a temp___idx_174) (select b (+ (- b__first a__first) temp___idx_174))) true)))) true false))
(assert (forall ((a (Array Int us_rep2)) (b (Array Int us_rep2))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq9 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (bool_eq8 (select a temp___idx_174) (select b (+ (- b__first a__first) temp___idx_174))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort filestatust 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq19 (filestatust filestatust) Bool)
(declare-const dummy19 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep7 (filestatust) Int)
(declare-fun of_rep7 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x filestatust)) (! (in_range12 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int filestatust))))))
(declare-fun slide4 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first6 Int)) (! (= (slide4 a first6 first6) a) :pattern ((slide4 a first6 first6))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(define-fun bool_eq10 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (to_rep7 (select a temp___idx_175)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_175))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq10 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (to_rep7 (select a temp___idx_175)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_175)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-sort rawcertificatei 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 1 x) (<= x 4096)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq20 (rawcertificatei rawcertificatei) Bool)
(declare-const dummy20 rawcertificatei)
(declare-datatypes () ((rawcertificatei__ref (mk_rawcertificatei__ref (rawcertificatei__content rawcertificatei)))))
(define-fun rawcertificatei__ref___projection ((a rawcertificatei__ref)) rawcertificatei (rawcertificatei__content a))
(declare-fun to_rep8 (rawcertificatei) Int)
(declare-fun of_rep8 (Int) rawcertificatei)
(assert (forall ((x rawcertificatei)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x rawcertificatei)) (! (in_range13 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-const dummy21 (Array Int character))
(declare-const value__size8 Int)
(declare-fun object__size8 ((Array Int character)) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 ((Array Int character)) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 ((Array Int character)) Int)
(assert (<= 0 value__size8))
(assert (forall ((a (Array Int character))) (<= 0 (object__size8 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment8 a))))
(declare-fun user_eq21 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__certtypes__rawdatat__rawdata (Array Int character)) (rec__certtypes__rawdatat__datalength rawcertificatei)))))
(define-fun us_split_fields_RawData__projection ((a us_split_fields4)) (Array Int character) (rec__certtypes__rawdatat__rawdata a))
(define-fun us_split_fields_DataLength__projection ((a us_split_fields4)) rawcertificatei (rec__certtypes__rawdatat__datalength a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___9__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep3 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___10__projection ((a us_rep3)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq11 ((a us_rep3) (b us_rep3)) Bool (ite (and (= (bool_eq (rec__certtypes__rawdatat__rawdata (us_split_fields5 a)) 1 4096 (rec__certtypes__rawdatat__rawdata (us_split_fields5 b)) 1 4096) true) (= (to_rep8 (rec__certtypes__rawdatat__datalength (us_split_fields5 a))) (to_rep8 (rec__certtypes__rawdatat__datalength (us_split_fields5 b))))) true false))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep3) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep3) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep3)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment9 a))))
(declare-const certtypes__rawdatat__rawdata__first__bit Int)
(declare-const certtypes__rawdatat__rawdata__last__bit Int)
(declare-const certtypes__rawdatat__rawdata__position Int)
(assert (<= 0 certtypes__rawdatat__rawdata__first__bit))
(assert (< certtypes__rawdatat__rawdata__first__bit certtypes__rawdatat__rawdata__last__bit))
(assert (<= 0 certtypes__rawdatat__rawdata__position))
(declare-const certtypes__rawdatat__datalength__first__bit Int)
(declare-const certtypes__rawdatat__datalength__last__bit Int)
(declare-const certtypes__rawdatat__datalength__position Int)
(assert (<= 0 certtypes__rawdatat__datalength__first__bit))
(assert (< certtypes__rawdatat__datalength__first__bit certtypes__rawdatat__datalength__last__bit))
(assert (<= 0 certtypes__rawdatat__datalength__position))
(declare-fun user_eq22 (us_rep3 us_rep3) Bool)
(declare-const dummy22 us_rep3)
(declare-datatypes () ((rawdatat__ref (mk_rawdatat__ref (rawdatat__content us_rep3)))))
(define-fun rawdatat__ref___projection ((a rawdatat__ref)) us_rep3 (rawdatat__content a))
(declare-sort returnvaluet 0)
(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 28)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq23 (returnvaluet returnvaluet) Bool)
(declare-const dummy23 returnvaluet)
(declare-datatypes () ((returnvaluet__ref (mk_returnvaluet__ref (returnvaluet__content returnvaluet)))))
(define-fun returnvaluet__ref___projection ((a returnvaluet__ref)) returnvaluet (returnvaluet__content a))
(define-fun dynamic_invariant6 ((temp___expr_1688 Int) (temp___is_init_1684 Bool) (temp___skip_constant_1685 Bool) (temp___do_toplevel_1686 Bool) (temp___do_typ_inv_1687 Bool)) Bool (=> (or (= temp___is_init_1684 true) (<= 0 28)) (in_range14 temp___expr_1688)))
(declare-fun to_rep9 (returnvaluet) Int)
(declare-fun of_rep9 (Int) returnvaluet)
(assert (forall ((x returnvaluet)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x returnvaluet)) (! (in_range14 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range14 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-sort bytet 0)
(define-fun in_range15 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq24 (bytet bytet) Bool)
(declare-const dummy24 bytet)
(declare-datatypes () ((bytet__ref (mk_bytet__ref (bytet__content bytet)))))
(define-fun bytet__ref___projection ((a bytet__ref)) bytet (bytet__content a))
(declare-fun to_rep10 (bytet) Int)
(declare-fun of_rep10 (Int) bytet)
(assert (forall ((x bytet)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x bytet)) (! (in_range15 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x Int)) (! (=> (in_range15 x) (= (to_rep10 (of_rep10 x)) x)) :pattern ((to_rep10 (of_rep10 x))))))
(declare-datatypes () ((map__ref5 (mk_map__ref5 (map__content5 (Array Int bytet))))))
(declare-fun slide5 ((Array Int bytet) Int Int) (Array Int bytet))
(assert (forall ((a (Array Int bytet))) (forall ((first6 Int)) (! (= (slide5 a first6 first6) a) :pattern ((slide5 a first6 first6))))))
(assert (forall ((a (Array Int bytet))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide5 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide5 a old_first new_first) i))))))))
(define-fun bool_eq12 ((a (Array Int bytet)) (a__first Int) (a__last Int) (b (Array Int bytet)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_164 Int)) (=> (and (<= a__first temp___idx_164) (<= temp___idx_164 a__last)) (= (to_rep10 (select a temp___idx_164)) (to_rep10 (select b (+ (- b__first a__first) temp___idx_164))))))) true false))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq12 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_164 Int)) (=> (and (<= a__first temp___idx_164) (<= temp___idx_164 a__last)) (= (to_rep10 (select a temp___idx_164)) (to_rep10 (select b (+ (- b__first a__first) temp___idx_164)))))))))))
(declare-const dummy25 (Array Int bytet))
(declare-const value__size10 Int)
(declare-fun object__size10 ((Array Int bytet)) Int)
(declare-const value__component__size6 Int)
(declare-fun object__component__size6 ((Array Int bytet)) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 ((Array Int bytet)) Int)
(assert (<= 0 value__size10))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__size10 a))))
(assert (<= 0 value__component__size6))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__component__size6 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__alignment10 a))))
(declare-fun user_eq25 ((Array Int bytet) (Array Int bytet)) Bool)
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__keystore__interfac__digestt__digestid unsigned32t) (rec__keystore__interfac__digestt__signreturn returnvaluet) (rec__keystore__interfac__digestt__verifyreturn returnvaluet) (rec__keystore__interfac__digestt__pad (Array Int bytet))))))
(define-fun us_split_fields_DigestID__projection ((a us_split_fields6)) unsigned32t (rec__keystore__interfac__digestt__digestid a))
(define-fun us_split_fields_SignReturn__projection ((a us_split_fields6)) returnvaluet (rec__keystore__interfac__digestt__signreturn a))
(define-fun us_split_fields_VerifyReturn__projection ((a us_split_fields6)) returnvaluet (rec__keystore__interfac__digestt__verifyreturn a))
(define-fun us_split_fields_Pad__2__projection ((a us_split_fields6)) (Array Int bytet) (rec__keystore__interfac__digestt__pad a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___14__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep4 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___15__projection ((a us_rep4)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq13 ((a us_rep4) (b us_rep4)) Bool (ite (and (and (and (= (to_rep2 (rec__keystore__interfac__digestt__digestid (us_split_fields7 a))) (to_rep2 (rec__keystore__interfac__digestt__digestid (us_split_fields7 b)))) (= (to_rep9 (rec__keystore__interfac__digestt__signreturn (us_split_fields7 a))) (to_rep9 (rec__keystore__interfac__digestt__signreturn (us_split_fields7 b))))) (= (to_rep9 (rec__keystore__interfac__digestt__verifyreturn (us_split_fields7 a))) (to_rep9 (rec__keystore__interfac__digestt__verifyreturn (us_split_fields7 b))))) (= (bool_eq12 (rec__keystore__interfac__digestt__pad (us_split_fields7 a)) 1 20 (rec__keystore__interfac__digestt__pad (us_split_fields7 b)) 1 20) true)) true false))
(declare-const value__size11 Int)
(declare-fun object__size11 (us_rep4) Int)
(declare-const value__alignment11 Int)
(declare-fun object__alignment11 (us_rep4) Int)
(assert (<= 0 value__size11))
(assert (forall ((a us_rep4)) (<= 0 (object__size11 a))))
(assert (<= 0 value__alignment11))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment11 a))))
(declare-const keystore__interfac__digestt__digestid__first__bit Int)
(declare-const keystore__interfac__digestt__digestid__last__bit Int)
(declare-const keystore__interfac__digestt__digestid__position Int)
(assert (<= 0 keystore__interfac__digestt__digestid__first__bit))
(assert (< keystore__interfac__digestt__digestid__first__bit keystore__interfac__digestt__digestid__last__bit))
(assert (<= 0 keystore__interfac__digestt__digestid__position))
(declare-const keystore__interfac__digestt__signreturn__first__bit Int)
(declare-const keystore__interfac__digestt__signreturn__last__bit Int)
(declare-const keystore__interfac__digestt__signreturn__position Int)
(assert (<= 0 keystore__interfac__digestt__signreturn__first__bit))
(assert (< keystore__interfac__digestt__signreturn__first__bit keystore__interfac__digestt__signreturn__last__bit))
(assert (<= 0 keystore__interfac__digestt__signreturn__position))
(declare-const keystore__interfac__digestt__verifyreturn__first__bit Int)
(declare-const keystore__interfac__digestt__verifyreturn__last__bit Int)
(declare-const keystore__interfac__digestt__verifyreturn__position Int)
(assert (<= 0 keystore__interfac__digestt__verifyreturn__first__bit))
(assert (< keystore__interfac__digestt__verifyreturn__first__bit keystore__interfac__digestt__verifyreturn__last__bit))
(assert (<= 0 keystore__interfac__digestt__verifyreturn__position))
(declare-const keystore__interfac__digestt__pad__first__bit Int)
(declare-const keystore__interfac__digestt__pad__last__bit Int)
(declare-const keystore__interfac__digestt__pad__position Int)
(assert (<= 0 keystore__interfac__digestt__pad__first__bit))
(assert (< keystore__interfac__digestt__pad__first__bit keystore__interfac__digestt__pad__last__bit))
(assert (<= 0 keystore__interfac__digestt__pad__position))
(declare-fun user_eq26 (us_rep4 us_rep4) Bool)
(declare-const dummy26 us_rep4)
(declare-datatypes () ((digestt__ref (mk_digestt__ref (digestt__content us_rep4)))))
(define-fun digestt__ref___projection ((a digestt__ref)) us_rep4 (digestt__content a))
(declare-const nulldigest us_rep4)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun temp___190 (Int) (Array Int bytet))
(declare-datatypes () ((map__ref6 (mk_map__ref6 (map__content6 (Array Int Bool))))))
(declare-fun slide6 ((Array Int Bool) Int Int) (Array Int Bool))
(assert (forall ((a (Array Int Bool))) (forall ((first6 Int)) (! (= (slide6 a first6 first6) a) :pattern ((slide6 a first6 first6))))))
(assert (forall ((a (Array Int Bool))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide6 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide6 a old_first new_first) i))))))))
(define-fun bool_eq14 ((a (Array Int Bool)) (a__first Int) (a__last Int) (b (Array Int Bool)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_194 Int)) (=> (and (<= a__first temp___idx_194) (<= temp___idx_194 a__last)) (= (select a temp___idx_194) (select b (+ (- b__first a__first) temp___idx_194)))))) true false))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq14 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_194 Int)) (=> (and (<= a__first temp___idx_194) (<= temp___idx_194 a__last)) (= (select a temp___idx_194) (select b (+ (- b__first a__first) temp___idx_194))))))))))
(declare-const issystem (Array Int Bool))
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-fun keystore__issystem__aggregate_def (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool) (Array Int Bool))
(declare-fun convertretvaltotext (Int us_t1) (Array Int character))
(declare-fun convertretvaltotext__function_guard ((Array Int character) Int us_t1) Bool)
(assert true)
(declare-const mechanism Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const rawcertdata us_rep3)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-fun getblock ((Array Int character) Int Int) (Array Int character))
(declare-fun getblock__function_guard ((Array Int character) (Array Int character) Int Int) Bool)
(assert true)
(declare-const r29b Int)
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq27 (integer integer) Bool)
(declare-const dummy27 integer)
(declare-datatypes () ((t30b__ref (mk_t30b__ref (t30b__content integer)))))
(define-fun t30b__ref___projection ((a t30b__ref)) integer (t30b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS20 Int)
(declare-fun temp___String_Literal_1905 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1905 us_void_param) 1)) 68) (= (to_rep (select (temp___String_Literal_1905 us_void_param) 2)) 105)) (= (to_rep (select (temp___String_Literal_1905 us_void_param) 3)) 103)) (= (to_rep (select (temp___String_Literal_1905 us_void_param) 4)) 101)) (= (to_rep (select (temp___String_Literal_1905 us_void_param) 5)) 115)) (= (to_rep (select (temp___String_Literal_1905 us_void_param) 6)) 116)) (= (to_rep (select (temp___String_Literal_1905 us_void_param) 7)) 73)) (= (to_rep (select (temp___String_Literal_1905 us_void_param) 8)) 110)) (= (to_rep (select (temp___String_Literal_1905 us_void_param) 9)) 105)) (= (to_rep (select (temp___String_Literal_1905 us_void_param) 10)) 116)) :pattern ((temp___String_Literal_1905 us_void_param)))))
(declare-fun temp___String_Literal_1907 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1907 us_void_param) 1)) 68) (= (to_rep (select (temp___String_Literal_1907 us_void_param) 2)) 105)) (= (to_rep (select (temp___String_Literal_1907 us_void_param) 3)) 103)) (= (to_rep (select (temp___String_Literal_1907 us_void_param) 4)) 101)) (= (to_rep (select (temp___String_Literal_1907 us_void_param) 5)) 115)) (= (to_rep (select (temp___String_Literal_1907 us_void_param) 6)) 116)) (= (to_rep (select (temp___String_Literal_1907 us_void_param) 7)) 85)) (= (to_rep (select (temp___String_Literal_1907 us_void_param) 8)) 112)) (= (to_rep (select (temp___String_Literal_1907 us_void_param) 9)) 100)) (= (to_rep (select (temp___String_Literal_1907 us_void_param) 10)) 97)) (= (to_rep (select (temp___String_Literal_1907 us_void_param) 11)) 116)) (= (to_rep (select (temp___String_Literal_1907 us_void_param) 12)) 101)) :pattern ((temp___String_Literal_1907 us_void_param)))))
(declare-fun temp___String_Literal_1909 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1909 us_void_param) 1)) 68) (= (to_rep (select (temp___String_Literal_1909 us_void_param) 2)) 105)) (= (to_rep (select (temp___String_Literal_1909 us_void_param) 3)) 103)) (= (to_rep (select (temp___String_Literal_1909 us_void_param) 4)) 101)) (= (to_rep (select (temp___String_Literal_1909 us_void_param) 5)) 115)) (= (to_rep (select (temp___String_Literal_1909 us_void_param) 6)) 116)) (= (to_rep (select (temp___String_Literal_1909 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_1909 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_1909 us_void_param) 9)) 110)) (= (to_rep (select (temp___String_Literal_1909 us_void_param) 10)) 97)) (= (to_rep (select (temp___String_Literal_1909 us_void_param) 11)) 108)) :pattern ((temp___String_Literal_1909 us_void_param)))))
(define-fun dynamic_invariant7 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant8 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant9 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(assert (= issystem (keystore__issystem__aggregate_def (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0))))
(assert (forall ((temp___196 Bool) (temp___197 Bool) (temp___198 Bool) (temp___199 Bool) (temp___200 Bool) (temp___201 Bool) (temp___202 Bool) (temp___203 Bool) (temp___204 Bool) (temp___205 Bool) (temp___206 Bool) (temp___207 Bool) (temp___208 Bool) (temp___209 Bool) (temp___210 Bool) (temp___211 Bool) (temp___212 Bool) (temp___213 Bool) (temp___214 Bool) (temp___215 Bool) (temp___216 Bool) (temp___217 Bool) (temp___218 Bool) (temp___219 Bool) (temp___220 Bool) (temp___221 Bool) (temp___222 Bool) (temp___223 Bool) (temp___224 Bool)) (let ((temp___195 (keystore__issystem__aggregate_def temp___196 temp___197 temp___198 temp___199 temp___200 temp___201 temp___202 temp___203 temp___204 temp___205 temp___206 temp___207 temp___208 temp___209 temp___210 temp___211 temp___212 temp___213 temp___214 temp___215 temp___216 temp___217 temp___218 temp___219 temp___220 temp___221 temp___222 temp___223 temp___224))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (select temp___195 0) temp___196) (= (select temp___195 1) temp___197)) (= (select temp___195 2) temp___198)) (= (select temp___195 3) temp___199)) (= (select temp___195 4) temp___200)) (= (select temp___195 5) temp___201)) (= (select temp___195 6) temp___202)) (= (select temp___195 7) temp___203)) (= (select temp___195 8) temp___204)) (= (select temp___195 9) temp___205)) (= (select temp___195 10) temp___206)) (= (select temp___195 11) temp___207)) (= (select temp___195 12) temp___208)) (= (select temp___195 13) temp___209)) (= (select temp___195 14) temp___210)) (= (select temp___195 15) temp___211)) (= (select temp___195 16) temp___212)) (= (select temp___195 17) temp___213)) (= (select temp___195 18) temp___214)) (= (select temp___195 19) temp___215)) (= (select temp___195 20) temp___216)) (= (select temp___195 21) temp___217)) (= (select temp___195 22) temp___218)) (= (select temp___195 23) temp___219)) (= (select temp___195 24) temp___220)) (= (select temp___195 25) temp___221)) (= (select temp___195 26) temp___222)) (= (select temp___195 27) temp___223)) (= (select temp___195 28) temp___224)))))
(define-fun dynamic_invariant10 ((temp___expr_265 Int) (temp___is_init_261 Bool) (temp___skip_constant_262 Bool) (temp___do_toplevel_263 Bool) (temp___do_typ_inv_264 Bool)) Bool (=> (or (= temp___is_init_261 true) (<= 0 255)) (in_range15 temp___expr_265)))
(define-fun dynamic_invariant11 ((temp___expr_350 us_t2) (temp___is_init_346 Bool) (temp___skip_constant_347 Bool) (temp___do_toplevel_348 Bool) (temp___do_typ_inv_349 Bool)) Bool (and (=> (not (= temp___skip_constant_347 true)) (dynamic_property2 1 2147483647 (first5 temp___expr_350) (last5 temp___expr_350))) (=> (= temp___do_toplevel_348 true) (=> (= temp___is_init_346 true) (and (= (first5 temp___expr_350) 1) (<= 0 (last5 temp___expr_350)))))))
(define-fun dynamic_predicate1 ((temp___353 us_t2)) Bool (and (= (first5 temp___353) 1) (<= 0 (last5 temp___353))))
(define-fun dynamic_invariant12 ((temp___expr_1455 Int) (temp___is_init_1451 Bool) (temp___skip_constant_1452 Bool) (temp___do_toplevel_1453 Bool) (temp___do_typ_inv_1454 Bool)) Bool (=> (or (= temp___is_init_1451 true) (<= 1 4096)) (in_range13 temp___expr_1455)))
(define-fun dynamic_invariant13 ((temp___expr_471 Int) (temp___is_init_467 Bool) (temp___skip_constant_468 Bool) (temp___do_toplevel_469 Bool) (temp___do_typ_inv_470 Bool)) Bool (=> (or (= temp___is_init_467 true) (<= 1 150)) (in_range6 temp___expr_471)))
(assert (= nouser (temp___String_Literal_158 Tuple0)))
(define-fun dynamic_invariant14 ((temp___expr_1214 Int) (temp___is_init_1210 Bool) (temp___skip_constant_1211 Bool) (temp___do_toplevel_1212 Bool) (temp___do_typ_inv_1213 Bool)) Bool (=> (or (= temp___is_init_1210 true) (<= 0 17)) (in_range10 temp___expr_1214)))
(define-fun dynamic_invariant15 ((temp___expr_1221 Int) (temp___is_init_1217 Bool) (temp___skip_constant_1218 Bool) (temp___do_toplevel_1219 Bool) (temp___do_typ_inv_1220 Bool)) Bool (=> (or (= temp___is_init_1217 true) (<= 1 17)) (in_range8 temp___expr_1221)))
(define-fun dynamic_invariant16 ((temp___expr_1347 Int) (temp___is_init_1343 Bool) (temp___skip_constant_1344 Bool) (temp___do_toplevel_1345 Bool) (temp___do_typ_inv_1346 Bool)) Bool (=> (or (= temp___is_init_1343 true) (<= 0 2)) (in_range12 temp___expr_1347)))
(define-fun dynamic_invariant17 ((temp___expr_1228 Int) (temp___is_init_1224 Bool) (temp___skip_constant_1225 Bool) (temp___do_toplevel_1226 Bool) (temp___do_typ_inv_1227 Bool)) Bool (=> (or (= temp___is_init_1224 true) (<= 0 17408)) (in_range9 temp___expr_1228)))
(define-fun dynamic_invariant18 ((temp___expr_1259 Int) (temp___is_init_1255 Bool) (temp___skip_constant_1256 Bool) (temp___do_toplevel_1257 Bool) (temp___do_typ_inv_1258 Bool)) Bool (=> (or (= temp___is_init_1255 true) (<= 0 1024)) (in_range11 temp___expr_1259)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep5 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep5 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles))) 1) 1024) (to_rep6 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(assert (forall ((temp___1288 Int)) (=> (dynamic_invariant18 temp___1288 true true true true) (forall ((temp___1289 Int)) (= (to_rep6 (select (temp___1286 temp___1288) temp___1289)) temp___1288)))))
(assert (= nulldigest (mk___rep3 (mk___split_fields3 (of_rep2 0) (of_rep9 3) (of_rep9 3) (temp___190 0)))))
(assert (forall ((temp___192 Int)) (=> (dynamic_invariant10 temp___192 true true true true) (forall ((temp___193 Int)) (= (to_rep10 (select (temp___190 temp___192) temp___193)) temp___192)))))
(assert (forall ((temp___1284 Int)) (=> (dynamic_invariant15 temp___1284 true true true true) (forall ((temp___1285 Int)) (= (to_rep3 (select (temp___1282 temp___1284) temp___1285)) temp___1284)))))
(declare-const logfiles (Array Int us_rep2))
(declare-const logfilesstatus (Array Int filestatust))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const auditsystemfault Bool)
(declare-const thedigest__split_fields unsigned32t)
(declare-const thedigest__split_fields1 returnvaluet)
(declare-const thedigest__split_fields2 returnvaluet)
(declare-const thedigest__split_fields3 (Array Int bytet))
(declare-const success Bool)
(declare-const retvalini Int)
(declare-const retvalupd Int)
(declare-const retvalfin Int)
(declare-const loopmax Int)
(declare-const bytesleft Int)
(declare-const block (Array Int character))
(declare-const size Int)
(declare-const j Int)
(declare-const filestate us_private)
(declare-const state us_private)
(declare-const o returnvaluet)
(declare-const o1 returnvaluet)
(declare-const o2 unsigned32t)
(declare-const o3 us_split_fields6)
(declare-const temp___1921 us_rep4)
(declare-const temp___1901 Int)
(declare-const temp___1900 Int)
(declare-const temp___1899 Int)
(declare-const temp___1898 (Array Int character))
(declare-const temp___1897 Int)
(declare-const temp___1902 Int)
(declare-const o4 (Array Int character))
(declare-const o5 Int)
(declare-const temp___1906 us_t1)
(declare-const o6 us_t1)
(declare-const o7 (Array Int character))
(declare-const o8 us_t)
(declare-const temp___1908 us_t1)
(declare-const o9 us_t1)
(declare-const o10 (Array Int character))
(declare-const o11 us_t)
(declare-const logfiles1 (Array Int us_rep2))
(declare-const logfilesstatus1 (Array Int filestatust))
(declare-const logfilestate__split_fields7 us_split_fields2)
(declare-const auditalarm1 Int)
(declare-const auditsystemfault1 Bool)
(declare-const loopmax1 Int)
(declare-const bytesleft1 Int)
(declare-const block1 (Array Int character))
(declare-const j1 Int)
(declare-const filestate1 us_private)
(declare-const state1 us_private)
(declare-const result int__ref)
(declare-const retvalupd1 Int)
(declare-const result1 int__ref)
(declare-const retvalfin1 Int)
(declare-const result2 int__ref)
(declare-const size1 Int)
(declare-const result3 us_split_fields__ref3)
(declare-const thedigest__split_fields4 us_split_fields6)
(declare-const retvalini1 Int)
(declare-const result4 int__ref)
(declare-const loopmax2 Int)
(declare-const result5 int__ref)
(declare-const bytesleft2 Int)
(declare-const result6 int__ref)
(declare-const j2 Int)
(declare-const retvalupd2 Int)
(declare-const bytesleft3 Int)
(declare-const block2 (Array Int character))
(declare-const size2 Int)
(declare-const j3 Int)
(declare-const result7 int__ref)
(declare-const size3 Int)
(declare-const result8 map__ref)
(declare-const block3 (Array Int character))
(declare-const retvalupd3 Int)
(declare-const result9 int__ref)
(declare-const bytesleft4 Int)
(declare-const bytesleft5 int__ref)
(declare-const bytesleft6 Int)
(declare-const retvalupd4 int__ref)
(declare-const bytesleft7 int__ref)
(declare-const block4 map__ref)
(declare-const size4 int__ref)
(declare-const j4 int__ref)
(declare-const retvalupd5 Int)
(declare-const bytesleft8 Int)
(declare-const block5 (Array Int character))
(declare-const size5 Int)
(declare-const j5 Int)
(declare-const retvalupd6 int__ref)
(declare-const bytesleft9 int__ref)
(declare-const block6 map__ref)
(declare-const size6 int__ref)
(declare-const j6 int__ref)
(declare-const retvalupd7 Int)
(declare-const bytesleft10 Int)
(declare-const block7 (Array Int character))
(declare-const size7 Int)
(declare-const j7 Int)
(declare-const thedigest__split_fields5 us_split_fields6)
(declare-const retvalfin2 Int)
(declare-const thedigest__split_fields6 us_split_fields__ref3)
(declare-const retvalfin3 int__ref)
(declare-const thedigest__split_fields7 us_split_fields6)
(declare-const retvalfin4 Int)
(declare-const thedigest__split_fields8 us_split_fields__ref3)
(declare-const retvalupd8 int__ref)
(declare-const retvalfin5 int__ref)
(declare-const loopmax3 int__ref)
(declare-const bytesleft11 int__ref)
(declare-const block8 map__ref)
(declare-const size8 int__ref)
(declare-const j8 int__ref)
(declare-const thedigest__split_fields9 us_split_fields6)
(declare-const retvalupd9 Int)
(declare-const retvalfin6 Int)
(declare-const loopmax4 Int)
(declare-const bytesleft12 Int)
(declare-const block9 (Array Int character))
(declare-const size9 Int)
(declare-const j9 Int)
(declare-const result10 bool__ref)
(declare-const success1 Bool)
(declare-const logfiles2 (Array Int us_rep2))
(declare-const logfilesstatus2 (Array Int filestatust))
(declare-const logfilestate__split_fields8 us_split_fields2)
(declare-const auditalarm2 Int)
(declare-const auditsystemfault2 Bool)
(declare-const filestate2 us_private)
(declare-const state2 us_private)
(declare-const logfiles3 map__ref3)
(declare-const logfilesstatus3 map__ref4)
(declare-const logfilestate__split_fields9 us_split_fields__ref1)
(declare-const auditalarm3 int__ref)
(declare-const auditsystemfault3 bool__ref)
(declare-const filestate3 us_private__ref)
(declare-const state3 us_private__ref)
(declare-const logfiles4 (Array Int us_rep2))
(declare-const logfilesstatus4 (Array Int filestatust))
(declare-const logfilestate__split_fields10 us_split_fields2)
(declare-const auditalarm4 Int)
(declare-const auditsystemfault4 Bool)
(declare-const filestate4 us_private)
(declare-const state4 us_private)
(define-fun j10 () int__ref (mk_int__ref j))
(define-fun block10 () map__ref (mk_map__ref block))
(define-fun bytesleft13 () int__ref (mk_int__ref bytesleft))
(define-fun loopmax5 () int__ref (mk_int__ref loopmax))
(assert (= (keystore__issystem__aggregate_def (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0)) issystem))
(assert (= (temp___String_Literal_158 Tuple0) nouser))
(assert (= (to_rep9 o) 3))
(assert (= (to_rep9 o1) 3))
(assert (= (to_rep2 o2) 0))
(assert (= o3 (mk___split_fields3 o2 o1 o (temp___190 0))))
(assert (= temp___1921 (mk___rep3 o3)))
(assert (= temp___1921 nulldigest))
(assert (in_range7 mechanism))
(assert (= (valid_numberlogentries (to_rep3 logfilestate__split_fields) (to_rep4 logfilestate__split_fields1) (mk___rep (mk___split_fields logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range4 auditalarm))
(assert (=> (<= 0 28) (in_range14 retvalini)))
(assert (= result (mk_int__ref retvalupd)))
(assert (= retvalupd1 0))
(assert (in_range14 retvalupd1))
(assert (= result1 (mk_int__ref retvalfin)))
(assert (= retvalfin1 0))
(assert (in_range14 retvalfin1))
(assert (=> (<= 1 2147483647) (in_range2 loopmax)))
(assert (=> (<= 1 2147483647) (in_range2 bytesleft)))
(assert (= result2 (mk_int__ref size)))
(assert (= size1 100))
(assert (in_range5 size1))
(assert (= result3 (mk___split_fields__ref3 (mk___split_fields3 thedigest__split_fields thedigest__split_fields1 thedigest__split_fields2 thedigest__split_fields3))))
(assert (= thedigest__split_fields4 (us_split_fields7 nulldigest)))
(assert (in_range14 retvalini1))
(assert (=> (= retvalini1 0) (= result4 loopmax5)))
(assert (=> (= retvalini1 0) (= loopmax2 (+ (div1 (- (to_rep8 (rec__certtypes__rawdatat__datalength (us_split_fields5 rawcertdata))) 1) 100) 1))))
(assert (=> (= retvalini1 0) (= result5 bytesleft13)))
(assert (=> (= retvalini1 0) (= bytesleft2 (to_rep8 (rec__certtypes__rawdatat__datalength (us_split_fields5 rawcertdata))))))
(assert (=> (= retvalini1 0) (= loopmax2 r29b)))
(assert (=> (= retvalini1 0) (in_range2 r29b)))
(assert (=> (= retvalini1 0) (= result6 j10)))
(assert (=> (= retvalini1 0) (= j2 1)))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= temp___1901 j2))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= temp___1900 size1))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= temp___1899 retvalupd1))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= temp___1898 block))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= temp___1897 bytesleft2))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= temp___1902 loopmax2))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (and (and (and (and (and (and (= loopmax2 (+ (div1 (- (to_rep8 (rec__certtypes__rawdatat__datalength (us_split_fields5 rawcertdata))) 1) 100) 1)) (= loopmax2 temp___1902)) (and (<= 1 j3) (<= j3 loopmax2))) (= bytesleft3 (- (to_rep8 (rec__certtypes__rawdatat__datalength (us_split_fields5 rawcertdata))) (* (- j3 1) 100)))) (and (<= 1 size2) (<= size2 100))) (= retvalini1 0)) (= retvalfin1 0)))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (and (and (and (and (=> (<= 1 2147483647) (in_range2 bytesleft3)) (=> (<= 0 28) (in_range14 retvalupd2))) (=> (<= 0 4294967295) (in_range5 size2))) (=> (<= 1 r29b) (dynamic_property3 1 r29b j3))) (and (<= 1 j3) (<= j3 r29b))))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (=> (< bytesleft3 100) (= result7 (mk_int__ref size2))))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (=> (< bytesleft3 100) (= size3 bytesleft3)))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (=> (not (< bytesleft3 100)) (= size3 size2)))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= o4 (getblock (rec__certtypes__rawdatat__rawdata (us_split_fields5 rawcertdata)) j3 size3)))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= result8 (mk_map__ref block2)))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= block3 o4))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (in_range14 retvalupd3))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (or (and (and (= bytesleft5 (mk_int__ref bytesleft3)) (= bytesleft6 bytesleft3)) (=> (= retvalupd3 0) (= j3 loopmax2))) (and (not (=> (= retvalupd3 0) (= j3 loopmax2))) (and (and (= bytesleft5 (mk_int__ref bytesleft4)) (= bytesleft6 bytesleft4)) (and (and (and (= o5 (- bytesleft3 100)) (in_range2 (- bytesleft3 100))) (and (= result9 (mk_int__ref bytesleft3)) (= bytesleft4 o5))) (= j3 r29b))))))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= j4 (mk_int__ref j3)))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= size4 (mk_int__ref size3)))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= block4 (mk_map__ref block3)))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= bytesleft7 bytesleft5))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= retvalupd4 (mk_int__ref retvalupd3)))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= j5 j3))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= size5 size3))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= block5 block3))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= bytesleft8 bytesleft6))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= retvalupd5 retvalupd3))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= j6 j4))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= size6 size4))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= block6 block4))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= bytesleft9 bytesleft7))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= retvalupd6 retvalupd4))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= j7 j5))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= size7 size5))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= block7 block5))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= bytesleft10 bytesleft8))))
(assert (=> (= retvalini1 0) (=> (and (<= 1 j2) (<= j2 r29b)) (= retvalupd7 retvalupd5))))
(assert (=> (= retvalini1 0) (=> (not (and (<= 1 j2) (<= j2 r29b))) (= j6 (mk_int__ref j2)))))
(assert (=> (= retvalini1 0) (=> (not (and (<= 1 j2) (<= j2 r29b))) (= size6 (mk_int__ref size1)))))
(assert (=> (= retvalini1 0) (=> (not (and (<= 1 j2) (<= j2 r29b))) (= block6 block10))))
(assert (=> (= retvalini1 0) (=> (not (and (<= 1 j2) (<= j2 r29b))) (= bytesleft9 (mk_int__ref bytesleft2)))))
(assert (=> (= retvalini1 0) (=> (not (and (<= 1 j2) (<= j2 r29b))) (= retvalupd6 (mk_int__ref retvalupd1)))))
(assert (=> (= retvalini1 0) (=> (not (and (<= 1 j2) (<= j2 r29b))) (= j7 j2))))
(assert (=> (= retvalini1 0) (=> (not (and (<= 1 j2) (<= j2 r29b))) (= size7 size1))))
(assert (=> (= retvalini1 0) (=> (not (and (<= 1 j2) (<= j2 r29b))) (= block7 block1))))
(assert (=> (= retvalini1 0) (=> (not (and (<= 1 j2) (<= j2 r29b))) (= bytesleft10 bytesleft2))))
(assert (=> (= retvalini1 0) (=> (not (and (<= 1 j2) (<= j2 r29b))) (= retvalupd7 retvalupd1))))
(assert (=> (= retvalini1 0) (=> (= (int__content retvalupd6) 0) (in_range14 retvalfin2))))
(assert (=> (= retvalini1 0) (=> (= (int__content retvalupd6) 0) (= retvalfin3 (mk_int__ref retvalfin2)))))
(assert (=> (= retvalini1 0) (=> (= (int__content retvalupd6) 0) (= thedigest__split_fields6 (mk___split_fields__ref3 thedigest__split_fields5)))))
(assert (=> (= retvalini1 0) (=> (= (int__content retvalupd6) 0) (= retvalfin4 retvalfin2))))
(assert (=> (= retvalini1 0) (=> (= (int__content retvalupd6) 0) (= thedigest__split_fields7 thedigest__split_fields5))))
(assert (=> (= retvalini1 0) (=> (not (= (int__content retvalupd6) 0)) (= retvalfin3 (mk_int__ref retvalfin1)))))
(assert (=> (= retvalini1 0) (=> (not (= (int__content retvalupd6) 0)) (= thedigest__split_fields6 (mk___split_fields__ref3 thedigest__split_fields4)))))
(assert (=> (= retvalini1 0) (=> (not (= (int__content retvalupd6) 0)) (= retvalfin4 retvalfin1))))
(assert (=> (= retvalini1 0) (=> (not (= (int__content retvalupd6) 0)) (= thedigest__split_fields7 thedigest__split_fields4))))
(assert (=> (= retvalini1 0) (= j8 j6)))
(assert (=> (= retvalini1 0) (= size8 size6)))
(assert (=> (= retvalini1 0) (= block8 block6)))
(assert (=> (= retvalini1 0) (= bytesleft11 bytesleft9)))
(assert (=> (= retvalini1 0) (= loopmax3 (mk_int__ref loopmax2))))
(assert (=> (= retvalini1 0) (= retvalfin5 retvalfin3)))
(assert (=> (= retvalini1 0) (= retvalupd8 retvalupd6)))
(assert (=> (= retvalini1 0) (= thedigest__split_fields8 thedigest__split_fields6)))
(assert (=> (= retvalini1 0) (= j9 j7)))
(assert (=> (= retvalini1 0) (= size9 size7)))
(assert (=> (= retvalini1 0) (= block9 block7)))
(assert (=> (= retvalini1 0) (= bytesleft12 bytesleft10)))
(assert (=> (= retvalini1 0) (= loopmax4 loopmax2)))
(assert (=> (= retvalini1 0) (= retvalfin6 retvalfin4)))
(assert (=> (= retvalini1 0) (= retvalupd9 retvalupd7)))
(assert (=> (= retvalini1 0) (= thedigest__split_fields9 thedigest__split_fields7)))
(assert (=> (not (= retvalini1 0)) (= j8 j10)))
(assert (=> (not (= retvalini1 0)) (= size8 (mk_int__ref size1))))
(assert (=> (not (= retvalini1 0)) (= block8 block10)))
(assert (=> (not (= retvalini1 0)) (= bytesleft11 bytesleft13)))
(assert (=> (not (= retvalini1 0)) (= loopmax3 loopmax5)))
(assert (=> (not (= retvalini1 0)) (= retvalfin5 (mk_int__ref retvalfin1))))
(assert (=> (not (= retvalini1 0)) (= retvalupd8 (mk_int__ref retvalupd1))))
(assert (=> (not (= retvalini1 0)) (= thedigest__split_fields8 (mk___split_fields__ref3 thedigest__split_fields4))))
(assert (=> (not (= retvalini1 0)) (= j9 j1)))
(assert (=> (not (= retvalini1 0)) (= size9 size1)))
(assert (=> (not (= retvalini1 0)) (= block9 block1)))
(assert (=> (not (= retvalini1 0)) (= bytesleft12 bytesleft1)))
(assert (=> (not (= retvalini1 0)) (= loopmax4 loopmax1)))
(assert (=> (not (= retvalini1 0)) (= retvalfin6 retvalfin1)))
(assert (=> (not (= retvalini1 0)) (= retvalupd9 retvalupd1)))
(assert (=> (not (= retvalini1 0)) (= thedigest__split_fields9 thedigest__split_fields4)))
(assert (= result10 (mk_bool__ref success)))
(assert (= success1 (ite (= retvalini1 0) (ite (= (int__content retvalupd8) 0) (ite (= (int__content retvalfin5) 0) true false) false) false)))
(assert (=> (= (select issystem retvalini1) true) (dynamic_property1 1 2147483647 1 10)))
(assert (=> (= (select issystem retvalini1) true) (= temp___1906 (mk___t1 (temp___String_Literal_1905 Tuple0) (mk1 1 10)))))
(assert (=> (= (select issystem retvalini1) true) (dynamic_predicate temp___1906)))
(assert (=> (= (select issystem retvalini1) true) (= o6 temp___1906)))
(assert (=> (= (select issystem retvalini1) true) (= o7 (convertretvaltotext retvalini1 o6))))
(assert (=> (= (select issystem retvalini1) true) (= o8 (mk___t o7 (mk 1 150)))))
(assert (=> (= (select issystem retvalini1) true) (and (in_range4 auditalarm2) (= (valid_numberlogentries (to_rep3 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields8)) (to_rep4 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields8)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields8) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields8)) true))))
(assert (=> (= (select issystem retvalini1) true) (= state3 (mk___private__ref state2))))
(assert (=> (= (select issystem retvalini1) true) (= filestate3 (mk___private__ref filestate2))))
(assert (=> (= (select issystem retvalini1) true) (= auditsystemfault3 (mk_bool__ref auditsystemfault2))))
(assert (=> (= (select issystem retvalini1) true) (= auditalarm3 (mk_int__ref auditalarm2))))
(assert (=> (= (select issystem retvalini1) true) (= logfilestate__split_fields9 (mk___split_fields__ref1 logfilestate__split_fields8))))
(assert (=> (= (select issystem retvalini1) true) (= logfilesstatus3 (mk_map__ref4 logfilesstatus2))))
(assert (=> (= (select issystem retvalini1) true) (= logfiles3 (mk_map__ref3 logfiles2))))
(assert (=> (= (select issystem retvalini1) true) (= state4 state2)))
(assert (=> (= (select issystem retvalini1) true) (= filestate4 filestate2)))
(assert (=> (= (select issystem retvalini1) true) (= auditsystemfault4 auditsystemfault2)))
(assert (=> (= (select issystem retvalini1) true) (= auditalarm4 auditalarm2)))
(assert (=> (= (select issystem retvalini1) true) (= logfilestate__split_fields10 logfilestate__split_fields8)))
(assert (=> (= (select issystem retvalini1) true) (= logfilesstatus4 logfilesstatus2)))
(assert (=> (= (select issystem retvalini1) true) (= logfiles4 logfiles2)))
(assert (=> (not (= (select issystem retvalini1) true)) (= state3 (mk___private__ref state))))
(assert (=> (not (= (select issystem retvalini1) true)) (= filestate3 (mk___private__ref filestate))))
(assert (=> (not (= (select issystem retvalini1) true)) (= auditsystemfault3 (mk_bool__ref auditsystemfault))))
(assert (=> (not (= (select issystem retvalini1) true)) (= auditalarm3 (mk_int__ref auditalarm))))
(assert (=> (not (= (select issystem retvalini1) true)) (= logfilestate__split_fields9 (mk___split_fields__ref1 (mk___split_fields1 logfilestate__split_fields logfilestate__split_fields1 (mk___rep (mk___split_fields logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6)))))
(assert (=> (not (= (select issystem retvalini1) true)) (= logfilesstatus3 (mk_map__ref4 logfilesstatus))))
(assert (=> (not (= (select issystem retvalini1) true)) (= logfiles3 (mk_map__ref3 logfiles))))
(assert (=> (not (= (select issystem retvalini1) true)) (= state4 state1)))
(assert (=> (not (= (select issystem retvalini1) true)) (= filestate4 filestate1)))
(assert (=> (not (= (select issystem retvalini1) true)) (= auditsystemfault4 auditsystemfault1)))
(assert (=> (not (= (select issystem retvalini1) true)) (= auditalarm4 auditalarm1)))
(assert (=> (not (= (select issystem retvalini1) true)) (= logfilestate__split_fields10 logfilestate__split_fields7)))
(assert (=> (not (= (select issystem retvalini1) true)) (= logfilesstatus4 logfilesstatus1)))
(assert (=> (not (= (select issystem retvalini1) true)) (= logfiles4 logfiles1)))
(assert (= (select issystem (int__content retvalupd8)) true))
(assert (dynamic_property1 1 2147483647 1 12))
(assert (= temp___1908 (mk___t1 (temp___String_Literal_1907 Tuple0) (mk1 1 12))))
(assert (dynamic_predicate temp___1908))
(assert (= o9 temp___1908))
(assert (= o10 (convertretvaltotext (int__content retvalupd8) o9)))
(assert (= o11 (mk___t o10 (mk 1 150))))
(assert (not (= (to_rep1 (first (rt o11))) 1)))
(check-sat)
(exit)
