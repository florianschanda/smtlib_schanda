(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort presencet 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (presencet presencet) Bool)
(declare-const dummy presencet)
(declare-datatypes () ((presencet__ref (mk_presencet__ref (presencet__content presencet)))))
(define-fun presencet__ref___projection ((a presencet__ref)) presencet (presencet__content a))
(define-fun dynamic_invariant ((temp___expr_195 Int) (temp___is_init_192 Bool) (temp___skip_constant_193 Bool) (temp___do_toplevel_194 Bool)) Bool (=> (or (= temp___is_init_192 true) (<= 0 1)) (in_range1 temp___expr_195)))
(declare-sort tokenidt 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (tokenidt tokenidt) Bool)
(declare-const dummy1 tokenidt)
(declare-datatypes () ((tokenidt__ref (mk_tokenidt__ref (tokenidt__content tokenidt)))))
(define-fun tokenidt__ref___projection ((a tokenidt__ref)) tokenidt (tokenidt__content a))
(define-fun dynamic_invariant1 ((temp___expr_396 Int) (temp___is_init_393 Bool) (temp___skip_constant_394 Bool) (temp___do_toplevel_395 Bool)) Bool (=> (or (= temp___is_init_393 true) (<= 0 4294967295)) (in_range2 temp___expr_396)))
(declare-sort tryt 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (tryt tryt) Bool)
(declare-const dummy2 tryt)
(declare-datatypes () ((tryt__ref (mk_tryt__ref (tryt__content tryt)))))
(define-fun tryt__ref___projection ((a tryt__ref)) tryt (tryt__content a))
(define-fun dynamic_invariant2 ((temp___expr_402 Int) (temp___is_init_399 Bool) (temp___skip_constant_400 Bool) (temp___do_toplevel_401 Bool)) Bool (=> (or (= temp___is_init_399 true) (<= 0 2)) (in_range3 temp___expr_402)))
(declare-sort statust 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (statust statust) Bool)
(declare-const dummy3 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant3 ((temp___expr_408 Int) (temp___is_init_405 Bool) (temp___skip_constant_406 Bool) (temp___do_toplevel_407 Bool)) Bool (=> (or (= temp___is_init_405 true) (<= 0 1)) (in_range4 temp___expr_408)))
(declare-sort yearst 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1901 x) (<= x 2099)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (yearst yearst) Bool)
(declare-const dummy4 yearst)
(declare-datatypes () ((yearst__ref (mk_yearst__ref (yearst__content yearst)))))
(define-fun yearst__ref___projection ((a yearst__ref)) yearst (yearst__content a))
(declare-fun to_rep (yearst) Int)
(declare-fun of_rep (Int) yearst)
(assert (forall ((x yearst)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x yearst)) (! (in_range5 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort monthst 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (monthst monthst) Bool)
(declare-const dummy5 monthst)
(declare-datatypes () ((monthst__ref (mk_monthst__ref (monthst__content monthst)))))
(define-fun monthst__ref___projection ((a monthst__ref)) monthst (monthst__content a))
(declare-fun to_rep1 (monthst) Int)
(declare-fun of_rep1 (Int) monthst)
(assert (forall ((x monthst)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x monthst)) (! (in_range6 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort dayst 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq6 (dayst dayst) Bool)
(declare-const dummy6 dayst)
(declare-datatypes () ((dayst__ref (mk_dayst__ref (dayst__content dayst)))))
(define-fun dayst__ref___projection ((a dayst__ref)) dayst (dayst__content a))
(declare-fun to_rep2 (dayst) Int)
(declare-fun of_rep2 (Int) dayst)
(assert (forall ((x dayst)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x dayst)) (! (in_range7 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort millisecst 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 86399999)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq7 (millisecst millisecst) Bool)
(declare-const dummy7 millisecst)
(declare-datatypes () ((millisecst__ref (mk_millisecst__ref (millisecst__content millisecst)))))
(define-fun millisecst__ref___projection ((a millisecst__ref)) millisecst (millisecst__content a))
(declare-fun to_rep3 (millisecst) Int)
(declare-fun of_rep3 (Int) millisecst)
(assert (forall ((x millisecst)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x millisecst)) (! (in_range8 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__clock__timet__year yearst) (rec__clock__timet__month monthst) (rec__clock__timet__day dayst) (rec__clock__timet__millisec millisecst)))))
(define-fun us_split_fields_Year__projection ((a us_split_fields)) yearst (rec__clock__timet__year a))
(define-fun us_split_fields_Month__projection ((a us_split_fields)) monthst (rec__clock__timet__month a))
(define-fun us_split_fields_Day__projection ((a us_split_fields)) dayst (rec__clock__timet__day a))
(define-fun us_split_fields_MilliSec__projection ((a us_split_fields)) millisecst (rec__clock__timet__millisec a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___3__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (to_rep (rec__clock__timet__year (us_split_fields1 a))) (to_rep (rec__clock__timet__year (us_split_fields1 b)))) (= (to_rep1 (rec__clock__timet__month (us_split_fields1 a))) (to_rep1 (rec__clock__timet__month (us_split_fields1 b))))) (= (to_rep2 (rec__clock__timet__day (us_split_fields1 a))) (to_rep2 (rec__clock__timet__day (us_split_fields1 b))))) (= (to_rep3 (rec__clock__timet__millisec (us_split_fields1 a))) (to_rep3 (rec__clock__timet__millisec (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const clock__timet__year__first__bit Int)
(declare-const clock__timet__year__last__bit Int)
(declare-const clock__timet__year__position Int)
(assert (<= 0 clock__timet__year__first__bit))
(assert (< clock__timet__year__first__bit clock__timet__year__last__bit))
(assert (<= 0 clock__timet__year__position))
(declare-const clock__timet__month__first__bit Int)
(declare-const clock__timet__month__last__bit Int)
(declare-const clock__timet__month__position Int)
(assert (<= 0 clock__timet__month__first__bit))
(assert (< clock__timet__month__first__bit clock__timet__month__last__bit))
(assert (<= 0 clock__timet__month__position))
(declare-const clock__timet__day__first__bit Int)
(declare-const clock__timet__day__last__bit Int)
(declare-const clock__timet__day__position Int)
(assert (<= 0 clock__timet__day__first__bit))
(assert (< clock__timet__day__first__bit clock__timet__day__last__bit))
(assert (<= 0 clock__timet__day__position))
(declare-const clock__timet__millisec__first__bit Int)
(declare-const clock__timet__millisec__last__bit Int)
(declare-const clock__timet__millisec__position Int)
(assert (<= 0 clock__timet__millisec__first__bit))
(assert (< clock__timet__millisec__first__bit clock__timet__millisec__last__bit))
(assert (<= 0 clock__timet__millisec__position))
(declare-fun user_eq8 (us_rep us_rep) Bool)
(declare-const dummy8 us_rep)
(declare-datatypes () ((timet__ref (mk_timet__ref (timet__content us_rep)))))
(define-fun timet__ref___projection ((a timet__ref)) us_rep (timet__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun thecurrenttime (us_split_fields us_private) us_rep)
(declare-fun thecurrenttime__function_guard (us_rep us_split_fields us_private) Bool)
(assert true)
(assert (forall ((clock__currenttimevar__fields us_split_fields)) (forall ((clock__currenttime us_private)) (! (= (thecurrenttime clock__currenttimevar__fields clock__currenttime) (mk___rep clock__currenttimevar__fields)) :pattern ((thecurrenttime clock__currenttimevar__fields clock__currenttime))))))
(declare-fun greaterthanorequal (us_rep us_rep) Bool)
(declare-fun greaterthanorequal__function_guard (Bool us_rep us_rep) Bool)
(declare-fun greaterthan (us_rep us_rep) Bool)
(declare-fun greaterthan__function_guard (Bool us_rep us_rep) Bool)
(assert true)
(assert (forall ((left us_rep) (right us_rep)) (! (= (= (greaterthanorequal left right) true) (or (= (greaterthan left right) true) (= (bool_eq left right) true))) :pattern ((greaterthanorequal left right)))))
(declare-sort logfileindext 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq9 (logfileindext logfileindext) Bool)
(declare-const dummy9 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep4 (logfileindext) Int)
(declare-fun of_rep4 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x logfileindext)) (! (in_range9 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq10 (logentrycountt logentrycountt) Bool)
(declare-const dummy10 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep5 (logentrycountt) Int)
(declare-fun of_rep5 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x logentrycountt)) (! (in_range10 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int logfileindext))))))
(declare-fun slide ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (logfileindext Int) (Array Int logfileindext))
(assert (forall ((v logfileindext)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq1 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep4 (select a temp___idx_150)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_150))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep4 (select a temp___idx_150)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_150)))))))))))
(declare-fun compare ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) Int)
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq1 a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq1 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep4 (select a (+ i 1))) (to_rep4 (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq1 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep4 (select b (+ i 1))) (to_rep4 (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-const dummy11 (Array Int logfileindext))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int logfileindext)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int logfileindext)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq11 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-sort logfilecountt 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq12 (logfilecountt logfilecountt) Bool)
(declare-const dummy12 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep6 (logfilecountt) Int)
(declare-fun of_rep6 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x logfilecountt)) (! (in_range11 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields2)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields2)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___8__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq2 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (bool_eq1 (rec__auditlog__logfilelistt__list (us_split_fields3 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields3 b)) 1 17) true) (= (to_rep4 (rec__auditlog__logfilelistt__head (us_split_fields3 a))) (to_rep4 (rec__auditlog__logfilelistt__head (us_split_fields3 b))))) (= (to_rep4 (rec__auditlog__logfilelistt__lasti (us_split_fields3 a))) (to_rep4 (rec__auditlog__logfilelistt__lasti (us_split_fields3 b))))) (= (to_rep6 (rec__auditlog__logfilelistt__length (us_split_fields3 a))) (to_rep6 (rec__auditlog__logfilelistt__length (us_split_fields3 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq13 (us_rep1 us_rep1) Bool)
(declare-const dummy13 us_rep1)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep1)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep1 (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq14 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy14 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep7 (fileentrycountt) Int)
(declare-fun of_rep7 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range12 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int fileentrycountt))))))
(declare-fun slide1 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (fileentrycountt Int) (Array Int fileentrycountt))
(assert (forall ((v fileentrycountt)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq3 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep7 (select a temp___idx_151)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_151))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep7 (select a temp___idx_151)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_151)))))))))))
(declare-fun compare1 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) Int)
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq3 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep7 (select a (+ i 1))) (to_rep7 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq3 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep7 (select b (+ i 1))) (to_rep7 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const dummy15 (Array Int fileentrycountt))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq15 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep1) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields4)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields4)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields4)) us_rep1 (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields4)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___9__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq4 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (to_rep4 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 a))) (to_rep4 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 b)))) (= (to_rep5 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 a))) (to_rep5 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 b))))) (= (bool_eq2 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 b))) true)) (= (bool_eq3 (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 b)) 1 17) true)) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep2) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep2) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq16 (us_rep2 us_rep2) Bool)
(declare-const dummy16 us_rep2)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep2)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep2 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun temp___1056 (Int) (Array Int logfileindext))
(assert (forall ((temp___1058 Int)) (forall ((temp___1059 Int)) (= (select (temp___1056 temp___1058) temp___1059) (of_rep4 temp___1058)))))
(declare-fun temp___1060 (Int) (Array Int fileentrycountt))
(assert (forall ((temp___1062 Int)) (forall ((temp___1063 Int)) (= (select (temp___1060 temp___1062) temp___1063) (of_rep7 temp___1062)))))
(define-fun dynamic_invariant4 ((temp___expr_1050 us_rep2) (temp___is_init_1047 Bool) (temp___skip_constant_1048 Bool) (temp___do_toplevel_1049 Bool)) Bool (= (valid_numberlogentries (to_rep4 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___expr_1050))) (to_rep5 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___expr_1050))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___expr_1050)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___expr_1050))) true))
(define-fun default_initial_assumption ((temp___expr_1054 us_rep2) (temp___skip_top_level_1055 Bool)) Bool (and (and (and (= (to_rep4 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___expr_1054))) 1) (= (to_rep5 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___expr_1054))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___expr_1054)) (mk___rep1 (mk___split_fields1 (temp___1056 1) (of_rep4 1) (of_rep4 1) (of_rep6 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___expr_1054)) (temp___1060 0))))
(define-fun type_invariant ((temp___1064 us_rep2)) Bool (= (valid_numberlogentries (to_rep4 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___1064))) (to_rep5 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___1064))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___1064)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___1064))) true))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep3 0)
(declare-fun bool_eq5 (us_rep3 us_rep3) Bool)
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep3) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep3) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep3)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment5 a))))
(declare-fun user_eq17 (us_rep3 us_rep3) Bool)
(declare-const dummy17 us_rep3)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep3)))))
(define-fun t__ref___projection ((a t__ref)) us_rep3 (t__content a))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int us_rep3))))))
(declare-fun slide2 ((Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int us_rep3))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int us_rep3) Int Int (Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (us_rep3 Int) (Array Int us_rep3))
(assert (forall ((v us_rep3)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq6 ((a (Array Int us_rep3)) (a__first Int) (a__last Int) (b (Array Int us_rep3)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq5 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true)))) true false))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq5 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort filestatust 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq18 (filestatust filestatust) Bool)
(declare-const dummy18 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep8 (filestatust) Int)
(declare-fun of_rep8 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x filestatust)) (! (in_range13 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int filestatust))))))
(declare-fun slide3 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first Int)) (! (= (slide3 a first first) a) :pattern ((slide3 a first first))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(declare-fun concat4 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat4 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton4 (filestatust Int) (Array Int filestatust))
(assert (forall ((v filestatust)) (forall ((i Int)) (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i))))))
(define-fun bool_eq7 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep8 (select a temp___idx_153)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_153))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq7 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep8 (select a temp___idx_153)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_153)))))))))))
(declare-fun compare2 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) Int)
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare2 a a_first a_last b b_first b_last) 0) (= (bool_eq7 a a_first a_last b b_first b_last) true)) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare2 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq7 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep8 (select a (+ i 1))) (to_rep8 (select b (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare2 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq7 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep8 (select b (+ i 1))) (to_rep8 (select a (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-sort algorithmt 0)
(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq19 (algorithmt algorithmt) Bool)
(declare-const dummy19 algorithmt)
(declare-datatypes () ((algorithmt__ref (mk_algorithmt__ref (algorithmt__content algorithmt)))))
(define-fun algorithmt__ref___projection ((a algorithmt__ref)) algorithmt (algorithmt__content a))
(declare-fun to_rep9 (algorithmt) Int)
(declare-fun of_rep9 (Int) algorithmt)
(assert (forall ((x algorithmt)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x algorithmt)) (! (in_range14 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range14 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-sort privileget 0)
(define-fun in_range15 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq20 (privileget privileget) Bool)
(declare-const dummy20 privileget)
(declare-datatypes () ((privileget__ref (mk_privileget__ref (privileget__content privileget)))))
(define-fun privileget__ref___projection ((a privileget__ref)) privileget (privileget__content a))
(declare-fun to_rep10 (privileget) Int)
(declare-fun of_rep10 (Int) privileget)
(assert (forall ((x privileget)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x privileget)) (! (in_range15 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x Int)) (! (=> (in_range15 x) (= (to_rep10 (of_rep10 x)) x)) :pattern ((to_rep10 (of_rep10 x))))))
(declare-sort classt 0)
(define-fun in_range16 ((x Int)) Bool (and (<= 0 x) (<= x 5)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq21 (classt classt) Bool)
(declare-const dummy21 classt)
(declare-datatypes () ((classt__ref (mk_classt__ref (classt__content classt)))))
(define-fun classt__ref___projection ((a classt__ref)) classt (classt__content a))
(declare-fun to_rep11 (classt) Int)
(declare-fun of_rep11 (Int) classt)
(assert (forall ((x classt)) (! (= (of_rep11 (to_rep11 x)) x) :pattern ((to_rep11 x)))))
(assert (forall ((x classt)) (! (in_range16 (to_rep11 x)) :pattern ((to_rep11 x)))))
(assert (forall ((x Int)) (! (=> (in_range16 x) (= (to_rep11 (of_rep11 x)) x)) :pattern ((to_rep11 (of_rep11 x))))))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__privtypes__clearancet__class classt)))))
(define-fun us_split_fields_Class__projection ((a us_split_fields6)) classt (rec__privtypes__clearancet__class a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___6__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep4 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___7__projection ((a us_rep4)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq8 ((a us_rep4) (b us_rep4)) Bool (ite (= (to_rep11 (rec__privtypes__clearancet__class (us_split_fields7 a))) (to_rep11 (rec__privtypes__clearancet__class (us_split_fields7 b)))) true false))
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep4) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep4) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep4)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment6 a))))
(declare-const privtypes__clearancet__class__first__bit Int)
(declare-const privtypes__clearancet__class__last__bit Int)
(declare-const privtypes__clearancet__class__position Int)
(assert (<= 0 privtypes__clearancet__class__first__bit))
(assert (< privtypes__clearancet__class__first__bit privtypes__clearancet__class__last__bit))
(assert (<= 0 privtypes__clearancet__class__position))
(declare-fun user_eq22 (us_rep4 us_rep4) Bool)
(declare-const dummy22 us_rep4)
(declare-datatypes () ((clearancet__ref (mk_clearancet__ref (clearancet__content us_rep4)))))
(define-fun clearancet__ref___projection ((a clearancet__ref)) us_rep4 (clearancet__content a))
(declare-sort namecountt 0)
(define-fun in_range17 ((x Int)) Bool (and (<= 0 x) (<= x 40)))
(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)
(declare-fun user_eq23 (namecountt namecountt) Bool)
(declare-const dummy23 namecountt)
(declare-datatypes () ((namecountt__ref (mk_namecountt__ref (namecountt__content namecountt)))))
(define-fun namecountt__ref___projection ((a namecountt__ref)) namecountt (namecountt__content a))
(declare-fun to_rep12 (namecountt) Int)
(declare-fun of_rep12 (Int) namecountt)
(assert (forall ((x namecountt)) (! (= (of_rep12 (to_rep12 x)) x) :pattern ((to_rep12 x)))))
(assert (forall ((x namecountt)) (! (in_range17 (to_rep12 x)) :pattern ((to_rep12 x)))))
(assert (forall ((x Int)) (! (=> (in_range17 x) (= (to_rep12 (of_rep12 x)) x)) :pattern ((to_rep12 (of_rep12 x))))))
(declare-sort character 0)
(define-fun in_range18 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)
(declare-fun user_eq24 (character character) Bool)
(declare-const dummy24 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep13 (character) Int)
(declare-fun of_rep13 (Int) character)
(assert (forall ((x character)) (! (= (of_rep13 (to_rep13 x)) x) :pattern ((to_rep13 x)))))
(assert (forall ((x character)) (! (in_range18 (to_rep13 x)) :pattern ((to_rep13 x)))))
(assert (forall ((x Int)) (! (=> (in_range18 x) (= (to_rep13 (of_rep13 x)) x)) :pattern ((to_rep13 (of_rep13 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int character))))))
(declare-fun slide4 ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide4 a first first) a) :pattern ((slide4 a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(declare-fun concat5 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat5 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat5 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat5 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton5 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton5 v i) i) v) :pattern ((select (singleton5 v i) i))))))
(define-fun bool_eq9 ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep13 (select a temp___idx_78)) (to_rep13 (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq9 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep13 (select a temp___idx_78)) (to_rep13 (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare3 ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare3 a a_first a_last b b_first b_last) 0) (= (bool_eq9 a a_first a_last b b_first b_last) true)) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare3 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq9 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep13 (select a (+ i 1))) (to_rep13 (select b (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare3 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq9 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep13 (select b (+ i 1))) (to_rep13 (select a (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(declare-const dummy25 (Array Int character))
(declare-const value__size7 Int)
(declare-fun object__size7 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 ((Array Int character)) Int)
(assert (<= 0 value__size7))
(assert (forall ((a (Array Int character))) (<= 0 (object__size7 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment7 a))))
(declare-fun user_eq25 ((Array Int character) (Array Int character)) Bool)
(declare-sort issueridt 0)
(define-fun in_range19 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE19 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check19 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE19 (us_image) Int)
(declare-fun user_eq26 (issueridt issueridt) Bool)
(declare-const dummy26 issueridt)
(declare-datatypes () ((issueridt__ref (mk_issueridt__ref (issueridt__content issueridt)))))
(define-fun issueridt__ref___projection ((a issueridt__ref)) issueridt (issueridt__content a))
(declare-fun to_rep14 (issueridt) Int)
(declare-fun of_rep14 (Int) issueridt)
(assert (forall ((x issueridt)) (! (= (of_rep14 (to_rep14 x)) x) :pattern ((to_rep14 x)))))
(assert (forall ((x issueridt)) (! (in_range19 (to_rep14 x)) :pattern ((to_rep14 x)))))
(assert (forall ((x Int)) (! (=> (in_range19 x) (= (to_rep14 (of_rep14 x)) x)) :pattern ((to_rep14 (of_rep14 x))))))
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__cryptotypes__issuert__id issueridt) (rec__cryptotypes__issuert__namelength namecountt) (rec__cryptotypes__issuert__name (Array Int character))))))
(define-fun us_split_fields_ID__projection ((a us_split_fields8)) issueridt (rec__cryptotypes__issuert__id a))
(define-fun us_split_fields_NameLength__projection ((a us_split_fields8)) namecountt (rec__cryptotypes__issuert__namelength a))
(define-fun us_split_fields_Name__projection ((a us_split_fields8)) (Array Int character) (rec__cryptotypes__issuert__name a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep5 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___projection ((a us_rep5)) us_split_fields8 (us_split_fields9 a))
(define-fun bool_eq10 ((a us_rep5) (b us_rep5)) Bool (ite (and (and (= (to_rep14 (rec__cryptotypes__issuert__id (us_split_fields9 a))) (to_rep14 (rec__cryptotypes__issuert__id (us_split_fields9 b)))) (= (to_rep12 (rec__cryptotypes__issuert__namelength (us_split_fields9 a))) (to_rep12 (rec__cryptotypes__issuert__namelength (us_split_fields9 b))))) (= (bool_eq9 (rec__cryptotypes__issuert__name (us_split_fields9 a)) 1 40 (rec__cryptotypes__issuert__name (us_split_fields9 b)) 1 40) true)) true false))
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep5) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep5) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep5)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment8 a))))
(declare-const cryptotypes__issuert__id__first__bit Int)
(declare-const cryptotypes__issuert__id__last__bit Int)
(declare-const cryptotypes__issuert__id__position Int)
(assert (<= 0 cryptotypes__issuert__id__first__bit))
(assert (< cryptotypes__issuert__id__first__bit cryptotypes__issuert__id__last__bit))
(assert (<= 0 cryptotypes__issuert__id__position))
(declare-const cryptotypes__issuert__namelength__first__bit Int)
(declare-const cryptotypes__issuert__namelength__last__bit Int)
(declare-const cryptotypes__issuert__namelength__position Int)
(assert (<= 0 cryptotypes__issuert__namelength__first__bit))
(assert (< cryptotypes__issuert__namelength__first__bit cryptotypes__issuert__namelength__last__bit))
(assert (<= 0 cryptotypes__issuert__namelength__position))
(declare-const cryptotypes__issuert__name__first__bit Int)
(declare-const cryptotypes__issuert__name__last__bit Int)
(declare-const cryptotypes__issuert__name__position Int)
(assert (<= 0 cryptotypes__issuert__name__first__bit))
(assert (< cryptotypes__issuert__name__first__bit cryptotypes__issuert__name__last__bit))
(assert (<= 0 cryptotypes__issuert__name__position))
(declare-fun user_eq27 (us_rep5 us_rep5) Bool)
(declare-const dummy27 us_rep5)
(declare-datatypes () ((issuert__ref (mk_issuert__ref (issuert__content us_rep5)))))
(define-fun issuert__ref___projection ((a issuert__ref)) us_rep5 (issuert__content a))
(declare-sort serialnumbert 0)
(define-fun in_range20 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE20 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check20 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE20 (us_image) Int)
(declare-fun user_eq28 (serialnumbert serialnumbert) Bool)
(declare-const dummy28 serialnumbert)
(declare-datatypes () ((serialnumbert__ref (mk_serialnumbert__ref (serialnumbert__content serialnumbert)))))
(define-fun serialnumbert__ref___projection ((a serialnumbert__ref)) serialnumbert (serialnumbert__content a))
(declare-fun to_rep15 (serialnumbert) Int)
(declare-fun of_rep15 (Int) serialnumbert)
(assert (forall ((x serialnumbert)) (! (= (of_rep15 (to_rep15 x)) x) :pattern ((to_rep15 x)))))
(assert (forall ((x serialnumbert)) (! (in_range20 (to_rep15 x)) :pattern ((to_rep15 x)))))
(assert (forall ((x Int)) (! (=> (in_range20 x) (= (to_rep15 (of_rep15 x)) x)) :pattern ((to_rep15 (of_rep15 x))))))
(declare-datatypes () ((us_split_fields10 (mk___split_fields5 (rec__certtypes__idt__issuer us_rep5) (rec__certtypes__idt__serialnumber serialnumbert)))))
(define-fun us_split_fields_Issuer__projection ((a us_split_fields10)) us_rep5 (rec__certtypes__idt__issuer a))
(define-fun us_split_fields_SerialNumber__projection ((a us_split_fields10)) serialnumbert (rec__certtypes__idt__serialnumber a))
(declare-datatypes () ((us_split_fields__ref5 (mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___11__projection ((a us_split_fields__ref5)) us_split_fields10 (us_split_fields__content5 a))
(declare-datatypes () ((us_rep6 (mk___rep5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___12__projection ((a us_rep6)) us_split_fields10 (us_split_fields11 a))
(define-fun bool_eq11 ((a us_rep6) (b us_rep6)) Bool (ite (and (= (bool_eq10 (rec__certtypes__idt__issuer (us_split_fields11 a)) (rec__certtypes__idt__issuer (us_split_fields11 b))) true) (= (to_rep15 (rec__certtypes__idt__serialnumber (us_split_fields11 a))) (to_rep15 (rec__certtypes__idt__serialnumber (us_split_fields11 b))))) true false))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep6) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep6) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep6)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep6)) (<= 0 (object__alignment9 a))))
(declare-const certtypes__idt__issuer__first__bit Int)
(declare-const certtypes__idt__issuer__last__bit Int)
(declare-const certtypes__idt__issuer__position Int)
(assert (<= 0 certtypes__idt__issuer__first__bit))
(assert (< certtypes__idt__issuer__first__bit certtypes__idt__issuer__last__bit))
(assert (<= 0 certtypes__idt__issuer__position))
(declare-const certtypes__idt__serialnumber__first__bit Int)
(declare-const certtypes__idt__serialnumber__last__bit Int)
(declare-const certtypes__idt__serialnumber__position Int)
(assert (<= 0 certtypes__idt__serialnumber__first__bit))
(assert (< certtypes__idt__serialnumber__first__bit certtypes__idt__serialnumber__last__bit))
(assert (<= 0 certtypes__idt__serialnumber__position))
(declare-fun user_eq29 (us_rep6 us_rep6) Bool)
(declare-const dummy29 us_rep6)
(declare-datatypes () ((idt__ref (mk_idt__ref (idt__content us_rep6)))))
(define-fun idt__ref___projection ((a idt__ref)) us_rep6 (idt__content a))
(declare-datatypes () ((us_split_fields12 (mk___split_fields6 (rec__cert__attr__auth__contentst__id us_rep6) (rec__cert__attr__auth__contentst__notbefore us_rep) (rec__cert__attr__auth__contentst__notafter us_rep) (rec__cert__attr__auth__contentst__mechanism algorithmt) (rec__cert__attr__auth__contentst__basecertid us_rep6) (rec__cert__attr__auth__contentst__role privileget) (rec__cert__attr__auth__contentst__clearance us_rep4)))))
(define-fun us_split_fields_ID__5__projection ((a us_split_fields12)) us_rep6 (rec__cert__attr__auth__contentst__id a))
(define-fun us_split_fields_NotBefore__3__projection ((a us_split_fields12)) us_rep (rec__cert__attr__auth__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__3__projection ((a us_split_fields12)) us_rep (rec__cert__attr__auth__contentst__notafter a))
(define-fun us_split_fields_Mechanism__3__projection ((a us_split_fields12)) algorithmt (rec__cert__attr__auth__contentst__mechanism a))
(define-fun us_split_fields_BaseCertID__2__projection ((a us_split_fields12)) us_rep6 (rec__cert__attr__auth__contentst__basecertid a))
(define-fun us_split_fields_Role__projection ((a us_split_fields12)) privileget (rec__cert__attr__auth__contentst__role a))
(define-fun us_split_fields_Clearance__projection ((a us_split_fields12)) us_rep4 (rec__cert__attr__auth__contentst__clearance a))
(declare-datatypes () ((us_split_fields__ref6 (mk___split_fields__ref6 (us_split_fields__content6 us_split_fields12)))))
(define-fun us_split_fields__ref___15__projection ((a us_split_fields__ref6)) us_split_fields12 (us_split_fields__content6 a))
(declare-datatypes () ((us_rep7 (mk___rep6 (us_split_fields13 us_split_fields12)))))
(define-fun us_rep___16__projection ((a us_rep7)) us_split_fields12 (us_split_fields13 a))
(define-fun bool_eq12 ((a us_rep7) (b us_rep7)) Bool (ite (and (and (and (and (and (and (= (bool_eq11 (rec__cert__attr__auth__contentst__id (us_split_fields13 a)) (rec__cert__attr__auth__contentst__id (us_split_fields13 b))) true) (= (bool_eq (rec__cert__attr__auth__contentst__notbefore (us_split_fields13 a)) (rec__cert__attr__auth__contentst__notbefore (us_split_fields13 b))) true)) (= (bool_eq (rec__cert__attr__auth__contentst__notafter (us_split_fields13 a)) (rec__cert__attr__auth__contentst__notafter (us_split_fields13 b))) true)) (= (to_rep9 (rec__cert__attr__auth__contentst__mechanism (us_split_fields13 a))) (to_rep9 (rec__cert__attr__auth__contentst__mechanism (us_split_fields13 b))))) (= (bool_eq11 (rec__cert__attr__auth__contentst__basecertid (us_split_fields13 a)) (rec__cert__attr__auth__contentst__basecertid (us_split_fields13 b))) true)) (= (to_rep10 (rec__cert__attr__auth__contentst__role (us_split_fields13 a))) (to_rep10 (rec__cert__attr__auth__contentst__role (us_split_fields13 b))))) (= (bool_eq8 (rec__cert__attr__auth__contentst__clearance (us_split_fields13 a)) (rec__cert__attr__auth__contentst__clearance (us_split_fields13 b))) true)) true false))
(declare-const value__size10 Int)
(declare-fun object__size10 (us_rep7) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 (us_rep7) Int)
(assert (<= 0 value__size10))
(assert (forall ((a us_rep7)) (<= 0 (object__size10 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a us_rep7)) (<= 0 (object__alignment10 a))))
(declare-const cert__attr__auth__contentst__id__first__bit Int)
(declare-const cert__attr__auth__contentst__id__last__bit Int)
(declare-const cert__attr__auth__contentst__id__position Int)
(assert (<= 0 cert__attr__auth__contentst__id__first__bit))
(assert (< cert__attr__auth__contentst__id__first__bit cert__attr__auth__contentst__id__last__bit))
(assert (<= 0 cert__attr__auth__contentst__id__position))
(declare-const cert__attr__auth__contentst__notbefore__first__bit Int)
(declare-const cert__attr__auth__contentst__notbefore__last__bit Int)
(declare-const cert__attr__auth__contentst__notbefore__position Int)
(assert (<= 0 cert__attr__auth__contentst__notbefore__first__bit))
(assert (< cert__attr__auth__contentst__notbefore__first__bit cert__attr__auth__contentst__notbefore__last__bit))
(assert (<= 0 cert__attr__auth__contentst__notbefore__position))
(declare-const cert__attr__auth__contentst__notafter__first__bit Int)
(declare-const cert__attr__auth__contentst__notafter__last__bit Int)
(declare-const cert__attr__auth__contentst__notafter__position Int)
(assert (<= 0 cert__attr__auth__contentst__notafter__first__bit))
(assert (< cert__attr__auth__contentst__notafter__first__bit cert__attr__auth__contentst__notafter__last__bit))
(assert (<= 0 cert__attr__auth__contentst__notafter__position))
(declare-const cert__attr__auth__contentst__mechanism__first__bit Int)
(declare-const cert__attr__auth__contentst__mechanism__last__bit Int)
(declare-const cert__attr__auth__contentst__mechanism__position Int)
(assert (<= 0 cert__attr__auth__contentst__mechanism__first__bit))
(assert (< cert__attr__auth__contentst__mechanism__first__bit cert__attr__auth__contentst__mechanism__last__bit))
(assert (<= 0 cert__attr__auth__contentst__mechanism__position))
(declare-const cert__attr__auth__contentst__basecertid__first__bit Int)
(declare-const cert__attr__auth__contentst__basecertid__last__bit Int)
(declare-const cert__attr__auth__contentst__basecertid__position Int)
(assert (<= 0 cert__attr__auth__contentst__basecertid__first__bit))
(assert (< cert__attr__auth__contentst__basecertid__first__bit cert__attr__auth__contentst__basecertid__last__bit))
(assert (<= 0 cert__attr__auth__contentst__basecertid__position))
(declare-const cert__attr__auth__contentst__role__first__bit Int)
(declare-const cert__attr__auth__contentst__role__last__bit Int)
(declare-const cert__attr__auth__contentst__role__position Int)
(assert (<= 0 cert__attr__auth__contentst__role__first__bit))
(assert (< cert__attr__auth__contentst__role__first__bit cert__attr__auth__contentst__role__last__bit))
(assert (<= 0 cert__attr__auth__contentst__role__position))
(declare-const cert__attr__auth__contentst__clearance__first__bit Int)
(declare-const cert__attr__auth__contentst__clearance__last__bit Int)
(declare-const cert__attr__auth__contentst__clearance__position Int)
(assert (<= 0 cert__attr__auth__contentst__clearance__first__bit))
(assert (< cert__attr__auth__contentst__clearance__first__bit cert__attr__auth__contentst__clearance__last__bit))
(assert (<= 0 cert__attr__auth__contentst__clearance__position))
(declare-fun user_eq30 (us_rep7 us_rep7) Bool)
(declare-const dummy30 us_rep7)
(declare-datatypes () ((contentst__ref (mk_contentst__ref (contentst__content us_rep7)))))
(define-fun contentst__ref___3__projection ((a contentst__ref)) us_rep7 (contentst__content a))
(declare-datatypes () ((us_split_fields14 (mk___split_fields7 (rec__admintoken__validauthcertt__valid Bool) (rec__admintoken__validauthcertt__contents us_rep7)))))
(define-fun us_split_fields_Valid__projection ((a us_split_fields14)) Bool (rec__admintoken__validauthcertt__valid a))
(define-fun us_split_fields_Contents__projection ((a us_split_fields14)) us_rep7 (rec__admintoken__validauthcertt__contents a))
(declare-datatypes () ((us_split_fields__ref7 (mk___split_fields__ref7 (us_split_fields__content7 us_split_fields14)))))
(define-fun us_split_fields__ref___17__projection ((a us_split_fields__ref7)) us_split_fields14 (us_split_fields__content7 a))
(declare-datatypes () ((us_rep8 (mk___rep7 (us_split_fields15 us_split_fields14)))))
(define-fun us_rep___18__projection ((a us_rep8)) us_split_fields14 (us_split_fields15 a))
(define-fun bool_eq13 ((a us_rep8) (b us_rep8)) Bool (ite (and (= (rec__admintoken__validauthcertt__valid (us_split_fields15 a)) (rec__admintoken__validauthcertt__valid (us_split_fields15 b))) (= (bool_eq12 (rec__admintoken__validauthcertt__contents (us_split_fields15 a)) (rec__admintoken__validauthcertt__contents (us_split_fields15 b))) true)) true false))
(declare-const value__size11 Int)
(declare-fun object__size11 (us_rep8) Int)
(declare-const value__alignment11 Int)
(declare-fun object__alignment11 (us_rep8) Int)
(assert (<= 0 value__size11))
(assert (forall ((a us_rep8)) (<= 0 (object__size11 a))))
(assert (<= 0 value__alignment11))
(assert (forall ((a us_rep8)) (<= 0 (object__alignment11 a))))
(declare-const admintoken__validauthcertt__valid__first__bit Int)
(declare-const admintoken__validauthcertt__valid__last__bit Int)
(declare-const admintoken__validauthcertt__valid__position Int)
(assert (<= 0 admintoken__validauthcertt__valid__first__bit))
(assert (< admintoken__validauthcertt__valid__first__bit admintoken__validauthcertt__valid__last__bit))
(assert (<= 0 admintoken__validauthcertt__valid__position))
(declare-const admintoken__validauthcertt__contents__first__bit Int)
(declare-const admintoken__validauthcertt__contents__last__bit Int)
(declare-const admintoken__validauthcertt__contents__position Int)
(assert (<= 0 admintoken__validauthcertt__contents__first__bit))
(assert (< admintoken__validauthcertt__contents__first__bit admintoken__validauthcertt__contents__last__bit))
(assert (<= 0 admintoken__validauthcertt__contents__position))
(declare-fun user_eq31 (us_rep8 us_rep8) Bool)
(declare-const dummy31 us_rep8)
(declare-datatypes () ((validauthcertt__ref (mk_validauthcertt__ref (validauthcertt__content us_rep8)))))
(define-fun validauthcertt__ref___projection ((a validauthcertt__ref)) us_rep8 (validauthcertt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-sort keyidt 0)
(define-fun in_range21 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE21 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check21 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE21 (us_image) Int)
(declare-fun user_eq32 (keyidt keyidt) Bool)
(declare-const dummy32 keyidt)
(declare-datatypes () ((keyidt__ref (mk_keyidt__ref (keyidt__content keyidt)))))
(define-fun keyidt__ref___projection ((a keyidt__ref)) keyidt (keyidt__content a))
(declare-fun to_rep16 (keyidt) Int)
(declare-fun of_rep16 (Int) keyidt)
(assert (forall ((x keyidt)) (! (= (of_rep16 (to_rep16 x)) x) :pattern ((to_rep16 x)))))
(assert (forall ((x keyidt)) (! (in_range21 (to_rep16 x)) :pattern ((to_rep16 x)))))
(assert (forall ((x Int)) (! (=> (in_range21 x) (= (to_rep16 (of_rep16 x)) x)) :pattern ((to_rep16 (of_rep16 x))))))
(declare-sort keylengtht 0)
(define-fun in_range22 ((x Int)) Bool (and (<= 0 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE22 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check22 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE22 (us_image) Int)
(declare-fun user_eq33 (keylengtht keylengtht) Bool)
(declare-const dummy33 keylengtht)
(declare-datatypes () ((keylengtht__ref (mk_keylengtht__ref (keylengtht__content keylengtht)))))
(define-fun keylengtht__ref___projection ((a keylengtht__ref)) keylengtht (keylengtht__content a))
(declare-fun to_rep17 (keylengtht) Int)
(declare-fun of_rep17 (Int) keylengtht)
(assert (forall ((x keylengtht)) (! (= (of_rep17 (to_rep17 x)) x) :pattern ((to_rep17 x)))))
(assert (forall ((x keylengtht)) (! (in_range22 (to_rep17 x)) :pattern ((to_rep17 x)))))
(assert (forall ((x Int)) (! (=> (in_range22 x) (= (to_rep17 (of_rep17 x)) x)) :pattern ((to_rep17 (of_rep17 x))))))
(declare-datatypes () ((us_split_fields16 (mk___split_fields8 (rec__cryptotypes__keypartt__algorithmid algorithmt) (rec__cryptotypes__keypartt__keyid keyidt) (rec__cryptotypes__keypartt__keylength keylengtht)))))
(define-fun us_split_fields_AlgorithmID__projection ((a us_split_fields16)) algorithmt (rec__cryptotypes__keypartt__algorithmid a))
(define-fun us_split_fields_KeyID__projection ((a us_split_fields16)) keyidt (rec__cryptotypes__keypartt__keyid a))
(define-fun us_split_fields_KeyLength__projection ((a us_split_fields16)) keylengtht (rec__cryptotypes__keypartt__keylength a))
(declare-datatypes () ((us_split_fields__ref8 (mk___split_fields__ref8 (us_split_fields__content8 us_split_fields16)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref8)) us_split_fields16 (us_split_fields__content8 a))
(declare-datatypes () ((us_rep9 (mk___rep8 (us_split_fields17 us_split_fields16)))))
(define-fun us_rep___2__projection ((a us_rep9)) us_split_fields16 (us_split_fields17 a))
(define-fun bool_eq14 ((a us_rep9) (b us_rep9)) Bool (ite (and (and (= (to_rep9 (rec__cryptotypes__keypartt__algorithmid (us_split_fields17 a))) (to_rep9 (rec__cryptotypes__keypartt__algorithmid (us_split_fields17 b)))) (= (to_rep16 (rec__cryptotypes__keypartt__keyid (us_split_fields17 a))) (to_rep16 (rec__cryptotypes__keypartt__keyid (us_split_fields17 b))))) (= (to_rep17 (rec__cryptotypes__keypartt__keylength (us_split_fields17 a))) (to_rep17 (rec__cryptotypes__keypartt__keylength (us_split_fields17 b))))) true false))
(declare-const value__size12 Int)
(declare-fun object__size12 (us_rep9) Int)
(declare-const value__alignment12 Int)
(declare-fun object__alignment12 (us_rep9) Int)
(assert (<= 0 value__size12))
(assert (forall ((a us_rep9)) (<= 0 (object__size12 a))))
(assert (<= 0 value__alignment12))
(assert (forall ((a us_rep9)) (<= 0 (object__alignment12 a))))
(declare-const cryptotypes__keypartt__algorithmid__first__bit Int)
(declare-const cryptotypes__keypartt__algorithmid__last__bit Int)
(declare-const cryptotypes__keypartt__algorithmid__position Int)
(assert (<= 0 cryptotypes__keypartt__algorithmid__first__bit))
(assert (< cryptotypes__keypartt__algorithmid__first__bit cryptotypes__keypartt__algorithmid__last__bit))
(assert (<= 0 cryptotypes__keypartt__algorithmid__position))
(declare-const cryptotypes__keypartt__keyid__first__bit Int)
(declare-const cryptotypes__keypartt__keyid__last__bit Int)
(declare-const cryptotypes__keypartt__keyid__position Int)
(assert (<= 0 cryptotypes__keypartt__keyid__first__bit))
(assert (< cryptotypes__keypartt__keyid__first__bit cryptotypes__keypartt__keyid__last__bit))
(assert (<= 0 cryptotypes__keypartt__keyid__position))
(declare-const cryptotypes__keypartt__keylength__first__bit Int)
(declare-const cryptotypes__keypartt__keylength__last__bit Int)
(declare-const cryptotypes__keypartt__keylength__position Int)
(assert (<= 0 cryptotypes__keypartt__keylength__first__bit))
(assert (< cryptotypes__keypartt__keylength__first__bit cryptotypes__keypartt__keylength__last__bit))
(assert (<= 0 cryptotypes__keypartt__keylength__position))
(declare-fun user_eq34 (us_rep9 us_rep9) Bool)
(declare-const dummy34 us_rep9)
(declare-datatypes () ((keypartt__ref (mk_keypartt__ref (keypartt__content us_rep9)))))
(define-fun keypartt__ref___projection ((a keypartt__ref)) us_rep9 (keypartt__content a))
(declare-datatypes () ((us_split_fields18 (mk___split_fields9 (rec__cert__id__contentst__id us_rep6) (rec__cert__id__contentst__notbefore us_rep) (rec__cert__id__contentst__notafter us_rep) (rec__cert__id__contentst__mechanism algorithmt) (rec__cert__id__contentst__subject us_rep5) (rec__cert__id__contentst__subjectpublickey us_rep9)))))
(define-fun us_split_fields_ID__6__projection ((a us_split_fields18)) us_rep6 (rec__cert__id__contentst__id a))
(define-fun us_split_fields_NotBefore__4__projection ((a us_split_fields18)) us_rep (rec__cert__id__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__4__projection ((a us_split_fields18)) us_rep (rec__cert__id__contentst__notafter a))
(define-fun us_split_fields_Mechanism__4__projection ((a us_split_fields18)) algorithmt (rec__cert__id__contentst__mechanism a))
(define-fun us_split_fields_Subject__projection ((a us_split_fields18)) us_rep5 (rec__cert__id__contentst__subject a))
(define-fun us_split_fields_SubjectPublicKey__projection ((a us_split_fields18)) us_rep9 (rec__cert__id__contentst__subjectpublickey a))
(declare-datatypes () ((us_split_fields__ref9 (mk___split_fields__ref9 (us_split_fields__content9 us_split_fields18)))))
(define-fun us_split_fields__ref___16__projection ((a us_split_fields__ref9)) us_split_fields18 (us_split_fields__content9 a))
(declare-datatypes () ((us_rep10 (mk___rep9 (us_split_fields19 us_split_fields18)))))
(define-fun us_rep___17__projection ((a us_rep10)) us_split_fields18 (us_split_fields19 a))
(define-fun bool_eq15 ((a us_rep10) (b us_rep10)) Bool (ite (and (and (and (and (and (= (bool_eq11 (rec__cert__id__contentst__id (us_split_fields19 a)) (rec__cert__id__contentst__id (us_split_fields19 b))) true) (= (bool_eq (rec__cert__id__contentst__notbefore (us_split_fields19 a)) (rec__cert__id__contentst__notbefore (us_split_fields19 b))) true)) (= (bool_eq (rec__cert__id__contentst__notafter (us_split_fields19 a)) (rec__cert__id__contentst__notafter (us_split_fields19 b))) true)) (= (to_rep9 (rec__cert__id__contentst__mechanism (us_split_fields19 a))) (to_rep9 (rec__cert__id__contentst__mechanism (us_split_fields19 b))))) (= (bool_eq10 (rec__cert__id__contentst__subject (us_split_fields19 a)) (rec__cert__id__contentst__subject (us_split_fields19 b))) true)) (= (bool_eq14 (rec__cert__id__contentst__subjectpublickey (us_split_fields19 a)) (rec__cert__id__contentst__subjectpublickey (us_split_fields19 b))) true)) true false))
(declare-const value__size13 Int)
(declare-fun object__size13 (us_rep10) Int)
(declare-const value__alignment13 Int)
(declare-fun object__alignment13 (us_rep10) Int)
(assert (<= 0 value__size13))
(assert (forall ((a us_rep10)) (<= 0 (object__size13 a))))
(assert (<= 0 value__alignment13))
(assert (forall ((a us_rep10)) (<= 0 (object__alignment13 a))))
(declare-const cert__id__contentst__id__first__bit Int)
(declare-const cert__id__contentst__id__last__bit Int)
(declare-const cert__id__contentst__id__position Int)
(assert (<= 0 cert__id__contentst__id__first__bit))
(assert (< cert__id__contentst__id__first__bit cert__id__contentst__id__last__bit))
(assert (<= 0 cert__id__contentst__id__position))
(declare-const cert__id__contentst__notbefore__first__bit Int)
(declare-const cert__id__contentst__notbefore__last__bit Int)
(declare-const cert__id__contentst__notbefore__position Int)
(assert (<= 0 cert__id__contentst__notbefore__first__bit))
(assert (< cert__id__contentst__notbefore__first__bit cert__id__contentst__notbefore__last__bit))
(assert (<= 0 cert__id__contentst__notbefore__position))
(declare-const cert__id__contentst__notafter__first__bit Int)
(declare-const cert__id__contentst__notafter__last__bit Int)
(declare-const cert__id__contentst__notafter__position Int)
(assert (<= 0 cert__id__contentst__notafter__first__bit))
(assert (< cert__id__contentst__notafter__first__bit cert__id__contentst__notafter__last__bit))
(assert (<= 0 cert__id__contentst__notafter__position))
(declare-const cert__id__contentst__mechanism__first__bit Int)
(declare-const cert__id__contentst__mechanism__last__bit Int)
(declare-const cert__id__contentst__mechanism__position Int)
(assert (<= 0 cert__id__contentst__mechanism__first__bit))
(assert (< cert__id__contentst__mechanism__first__bit cert__id__contentst__mechanism__last__bit))
(assert (<= 0 cert__id__contentst__mechanism__position))
(declare-const cert__id__contentst__subject__first__bit Int)
(declare-const cert__id__contentst__subject__last__bit Int)
(declare-const cert__id__contentst__subject__position Int)
(assert (<= 0 cert__id__contentst__subject__first__bit))
(assert (< cert__id__contentst__subject__first__bit cert__id__contentst__subject__last__bit))
(assert (<= 0 cert__id__contentst__subject__position))
(declare-const cert__id__contentst__subjectpublickey__first__bit Int)
(declare-const cert__id__contentst__subjectpublickey__last__bit Int)
(declare-const cert__id__contentst__subjectpublickey__position Int)
(assert (<= 0 cert__id__contentst__subjectpublickey__first__bit))
(assert (< cert__id__contentst__subjectpublickey__first__bit cert__id__contentst__subjectpublickey__last__bit))
(assert (<= 0 cert__id__contentst__subjectpublickey__position))
(declare-fun user_eq35 (us_rep10 us_rep10) Bool)
(declare-const dummy35 us_rep10)
(declare-datatypes () ((contentst__ref1 (mk_contentst__ref1 (contentst__content1 us_rep10)))))
(define-fun contentst__ref___4__projection ((a contentst__ref1)) us_rep10 (contentst__content1 a))
(declare-datatypes () ((us_split_fields20 (mk___split_fields10 (rec__admintoken__valididcertt__valid Bool) (rec__admintoken__valididcertt__contents us_rep10)))))
(define-fun us_split_fields_Valid__2__projection ((a us_split_fields20)) Bool (rec__admintoken__valididcertt__valid a))
(define-fun us_split_fields_Contents__2__projection ((a us_split_fields20)) us_rep10 (rec__admintoken__valididcertt__contents a))
(declare-datatypes () ((us_split_fields__ref10 (mk___split_fields__ref10 (us_split_fields__content10 us_split_fields20)))))
(define-fun us_split_fields__ref___18__projection ((a us_split_fields__ref10)) us_split_fields20 (us_split_fields__content10 a))
(declare-datatypes () ((us_rep11 (mk___rep10 (us_split_fields21 us_split_fields20)))))
(define-fun us_rep___19__projection ((a us_rep11)) us_split_fields20 (us_split_fields21 a))
(define-fun bool_eq16 ((a us_rep11) (b us_rep11)) Bool (ite (and (= (rec__admintoken__valididcertt__valid (us_split_fields21 a)) (rec__admintoken__valididcertt__valid (us_split_fields21 b))) (= (bool_eq15 (rec__admintoken__valididcertt__contents (us_split_fields21 a)) (rec__admintoken__valididcertt__contents (us_split_fields21 b))) true)) true false))
(declare-const value__size14 Int)
(declare-fun object__size14 (us_rep11) Int)
(declare-const value__alignment14 Int)
(declare-fun object__alignment14 (us_rep11) Int)
(assert (<= 0 value__size14))
(assert (forall ((a us_rep11)) (<= 0 (object__size14 a))))
(assert (<= 0 value__alignment14))
(assert (forall ((a us_rep11)) (<= 0 (object__alignment14 a))))
(declare-const admintoken__valididcertt__valid__first__bit Int)
(declare-const admintoken__valididcertt__valid__last__bit Int)
(declare-const admintoken__valididcertt__valid__position Int)
(assert (<= 0 admintoken__valididcertt__valid__first__bit))
(assert (< admintoken__valididcertt__valid__first__bit admintoken__valididcertt__valid__last__bit))
(assert (<= 0 admintoken__valididcertt__valid__position))
(declare-const admintoken__valididcertt__contents__first__bit Int)
(declare-const admintoken__valididcertt__contents__last__bit Int)
(declare-const admintoken__valididcertt__contents__position Int)
(assert (<= 0 admintoken__valididcertt__contents__first__bit))
(assert (< admintoken__valididcertt__contents__first__bit admintoken__valididcertt__contents__last__bit))
(assert (<= 0 admintoken__valididcertt__contents__position))
(declare-fun user_eq36 (us_rep11 us_rep11) Bool)
(declare-const dummy36 us_rep11)
(declare-datatypes () ((valididcertt__ref (mk_valididcertt__ref (valididcertt__content us_rep11)))))
(define-fun valididcertt__ref___projection ((a valididcertt__ref)) us_rep11 (valididcertt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-fun theauthcertrole (Int us_private Int Int us_split_fields14 us_split_fields20) Int)
(declare-fun theauthcertrole__function_guard (Int Int us_private Int Int us_split_fields14 us_split_fields20) Bool)
(define-fun dynamic_invariant5 ((temp___expr_954 Int) (temp___is_init_951 Bool) (temp___skip_constant_952 Bool) (temp___do_toplevel_953 Bool)) Bool (=> (or (= temp___is_init_951 true) (<= 0 3)) (in_range15 temp___expr_954)))
(declare-fun therole (us_rep7) Int)
(declare-fun therole__function_guard (Int us_rep7) Bool)
(assert (forall ((admintoken__tokenpresence Int) (admintoken__tokentry Int) (admintoken__tokenid Int)) (forall ((admintoken__state us_private)) (forall ((admintoken__authcert__fields us_split_fields14)) (forall ((admintoken__idcert__fields us_split_fields20)) (! (=> (and (and (dynamic_invariant admintoken__tokenpresence true true true) (dynamic_invariant2 admintoken__tokentry true true true)) (dynamic_invariant1 admintoken__tokenid true true true)) (dynamic_invariant5 (theauthcertrole admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields) true false true)) :pattern ((theauthcertrole admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields))))))))
(assert (forall ((admintoken__tokenpresence Int) (admintoken__tokentry Int) (admintoken__tokenid Int)) (forall ((admintoken__state us_private)) (forall ((admintoken__authcert__fields us_split_fields14)) (forall ((admintoken__idcert__fields us_split_fields20)) (! (=> (and (and (dynamic_invariant admintoken__tokenpresence true true true) (dynamic_invariant2 admintoken__tokentry true true true)) (dynamic_invariant1 admintoken__tokenid true true true)) (= (theauthcertrole admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields) (therole (rec__admintoken__validauthcertt__contents (us_split_fields15 (mk___rep7 admintoken__authcert__fields)))))) :pattern ((theauthcertrole admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields))))))))
(declare-fun isgood (Int us_private Int Int us_split_fields14 us_split_fields20) Bool)
(declare-fun isgood__function_guard (Bool Int us_private Int Int us_split_fields14 us_split_fields20) Bool)
(assert true)
(assert (forall ((admintoken__tokenpresence Int) (admintoken__tokentry Int) (admintoken__tokenid Int)) (forall ((admintoken__state us_private)) (forall ((admintoken__authcert__fields us_split_fields14)) (forall ((admintoken__idcert__fields us_split_fields20)) (! (= (= (isgood admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields) true) (= (rec__admintoken__valididcertt__valid (us_split_fields21 (mk___rep10 admintoken__idcert__fields))) true)) :pattern ((isgood admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields))))))))
(declare-fun authcertvalid (Int us_private Int Int us_split_fields14 us_split_fields20) Bool)
(declare-fun authcertvalid__function_guard (Bool Int us_private Int Int us_split_fields14 us_split_fields20) Bool)
(assert true)
(assert (forall ((admintoken__tokenpresence Int) (admintoken__tokentry Int) (admintoken__tokenid Int)) (forall ((admintoken__state us_private)) (forall ((admintoken__authcert__fields us_split_fields14)) (forall ((admintoken__idcert__fields us_split_fields20)) (! (= (= (authcertvalid admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields) true) (= (rec__admintoken__validauthcertt__valid (us_split_fields15 (mk___rep7 admintoken__authcert__fields))) true)) :pattern ((authcertvalid admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields))))))))
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-sort t 0)
(define-fun in_range23 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE23 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check23 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE23 (us_image) Int)
(declare-fun user_eq37 (t t) Bool)
(declare-const dummy37 t)
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 t)))))
(define-fun t__ref___2__projection ((a t__ref1)) t (t__content1 a))
(define-fun dynamic_invariant6 ((temp___expr_1922 Int) (temp___is_init_1919 Bool) (temp___skip_constant_1920 Bool) (temp___do_toplevel_1921 Bool)) Bool (=> (or (= temp___is_init_1919 true) (<= 0 1)) (in_range23 temp___expr_1922)))
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-fun latch_timeout (Int us_private us_split_fields) us_rep)
(declare-fun latch_timeout__function_guard (us_rep Int us_private us_split_fields) Bool)
(assert true)
(assert (forall ((latch__currentlatch Int)) (forall ((latch__state us_private)) (forall ((latch__latchtimeout__fields us_split_fields)) (! (=> (dynamic_invariant6 latch__currentlatch true true true) (= (latch_timeout latch__currentlatch latch__state latch__latchtimeout__fields) (mk___rep latch__latchtimeout__fields))) :pattern ((latch_timeout latch__currentlatch latch__state latch__latchtimeout__fields)))))))
(declare-fun islocked (Int us_private us_split_fields) Bool)
(declare-fun islocked__function_guard (Bool Int us_private us_split_fields) Bool)
(assert true)
(assert (forall ((latch__currentlatch Int)) (forall ((latch__state us_private)) (forall ((latch__latchtimeout__fields us_split_fields)) (! (= (= (islocked latch__currentlatch latch__state latch__latchtimeout__fields) true) (= latch__currentlatch 0)) :pattern ((islocked latch__currentlatch latch__state latch__latchtimeout__fields)))))))
(declare-fun alarm_timeout (us_private) us_rep)
(declare-fun alarm_timeout__function_guard (us_rep us_private) Bool)
(assert true)
(declare-fun thecurrentdoor (us_private) Int)
(declare-fun thecurrentdoor__function_guard (Int us_private) Bool)
(declare-sort t1 0)
(define-fun in_range24 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE24 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check24 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE24 (us_image) Int)
(declare-fun user_eq38 (t1 t1) Bool)
(declare-const dummy38 t1)
(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 t1)))))
(define-fun t__ref___3__projection ((a t__ref2)) t1 (t__content2 a))
(define-fun dynamic_invariant7 ((temp___expr_1944 Int) (temp___is_init_1941 Bool) (temp___skip_constant_1942 Bool) (temp___do_toplevel_1943 Bool)) Bool (=> (or (= temp___is_init_1941 true) (<= 0 1)) (in_range24 temp___expr_1944)))
(assert (forall ((door__state us_private)) (! (dynamic_invariant7 (thecurrentdoor door__state) true false true) :pattern ((thecurrentdoor door__state)))))
(declare-fun thedooralarm (us_private) Int)
(declare-fun thedooralarm__function_guard (Int us_private) Bool)
(assert (forall ((door__state us_private)) (! (dynamic_invariant3 (thedooralarm door__state) true false true) :pattern ((thedooralarm door__state)))))
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(define-fun dynamic_invariant8 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range18 temp___expr_63)))
(define-fun dynamic_invariant9 ((temp___expr_320 Int) (temp___is_init_317 Bool) (temp___skip_constant_318 Bool) (temp___do_toplevel_319 Bool)) Bool (=> (or (= temp___is_init_317 true) (<= 0 40)) (in_range17 temp___expr_320)))
(define-fun dynamic_invariant10 ((temp___expr_341 Int) (temp___is_init_338 Bool) (temp___skip_constant_339 Bool) (temp___do_toplevel_340 Bool)) Bool (=> (or (= temp___is_init_338 true) (<= 0 4294967295)) (in_range19 temp___expr_341)))
(define-fun dynamic_invariant11 ((temp___expr_363 Int) (temp___is_init_360 Bool) (temp___skip_constant_361 Bool) (temp___do_toplevel_362 Bool)) Bool (=> (or (= temp___is_init_360 true) (<= 0 10)) (in_range14 temp___expr_363)))
(define-fun dynamic_invariant12 ((temp___expr_375 Int) (temp___is_init_372 Bool) (temp___skip_constant_373 Bool) (temp___do_toplevel_374 Bool)) Bool (=> (or (= temp___is_init_372 true) (<= 0 4294967295)) (in_range21 temp___expr_375)))
(define-fun dynamic_invariant13 ((temp___expr_381 Int) (temp___is_init_378 Bool) (temp___skip_constant_379 Bool) (temp___do_toplevel_380 Bool)) Bool (=> (or (= temp___is_init_378 true) (<= 0 128)) (in_range22 temp___expr_381)))
(define-fun dynamic_invariant14 ((temp___expr_1016 Int) (temp___is_init_1013 Bool) (temp___skip_constant_1014 Bool) (temp___do_toplevel_1015 Bool)) Bool (=> (or (= temp___is_init_1013 true) (<= 0 17)) (in_range11 temp___expr_1016)))
(define-fun dynamic_invariant15 ((temp___expr_995 Int) (temp___is_init_992 Bool) (temp___skip_constant_993 Bool) (temp___do_toplevel_994 Bool)) Bool (=> (or (= temp___is_init_992 true) (<= 1 17)) (in_range9 temp___expr_995)))
(define-fun dynamic_invariant16 ((temp___expr_1120 Int) (temp___is_init_1117 Bool) (temp___skip_constant_1118 Bool) (temp___do_toplevel_1119 Bool)) Bool (=> (or (= temp___is_init_1117 true) (<= 0 2)) (in_range13 temp___expr_1120)))
(define-fun dynamic_invariant17 ((temp___expr_1001 Int) (temp___is_init_998 Bool) (temp___skip_constant_999 Bool) (temp___do_toplevel_1000 Bool)) Bool (=> (or (= temp___is_init_998 true) (<= 0 17408)) (in_range10 temp___expr_1001)))
(define-fun dynamic_invariant18 ((temp___expr_1035 Int) (temp___is_init_1032 Bool) (temp___skip_constant_1033 Bool) (temp___do_toplevel_1034 Bool)) Bool (=> (or (= temp___is_init_1032 true) (<= 0 1024)) (in_range12 temp___expr_1035)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep1)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep6 (rec__auditlog__logfilelistt__length (us_split_fields3 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep6 (rec__auditlog__logfilelistt__length (us_split_fields3 usedlogfiles))) 1) 1024) (to_rep7 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(define-fun dynamic_invariant19 ((temp___expr_472 Int) (temp___is_init_469 Bool) (temp___skip_constant_470 Bool) (temp___do_toplevel_471 Bool)) Bool (=> (or (= temp___is_init_469 true) (<= 1901 2099)) (in_range5 temp___expr_472)))
(define-fun dynamic_invariant20 ((temp___expr_478 Int) (temp___is_init_475 Bool) (temp___skip_constant_476 Bool) (temp___do_toplevel_477 Bool)) Bool (=> (or (= temp___is_init_475 true) (<= 1 12)) (in_range6 temp___expr_478)))
(define-fun dynamic_invariant21 ((temp___expr_484 Int) (temp___is_init_481 Bool) (temp___skip_constant_482 Bool) (temp___do_toplevel_483 Bool)) Bool (=> (or (= temp___is_init_481 true) (<= 1 31)) (in_range7 temp___expr_484)))
(define-fun dynamic_invariant22 ((temp___expr_508 Int) (temp___is_init_505 Bool) (temp___skip_constant_506 Bool) (temp___do_toplevel_507 Bool)) Bool (=> (or (= temp___is_init_505 true) (<= 0 86399999)) (in_range8 temp___expr_508)))
(assert true)
(assert (forall ((left us_rep) (right us_rep)) (! (= (= (greaterthan left right) true) (or (or (or (< (to_rep (rec__clock__timet__year (us_split_fields1 right))) (to_rep (rec__clock__timet__year (us_split_fields1 left)))) (and (= (to_rep (rec__clock__timet__year (us_split_fields1 left))) (to_rep (rec__clock__timet__year (us_split_fields1 right)))) (< (to_rep1 (rec__clock__timet__month (us_split_fields1 right))) (to_rep1 (rec__clock__timet__month (us_split_fields1 left)))))) (and (and (= (to_rep (rec__clock__timet__year (us_split_fields1 left))) (to_rep (rec__clock__timet__year (us_split_fields1 right)))) (= (to_rep1 (rec__clock__timet__month (us_split_fields1 left))) (to_rep1 (rec__clock__timet__month (us_split_fields1 right))))) (< (to_rep2 (rec__clock__timet__day (us_split_fields1 right))) (to_rep2 (rec__clock__timet__day (us_split_fields1 left)))))) (and (and (and (= (to_rep (rec__clock__timet__year (us_split_fields1 left))) (to_rep (rec__clock__timet__year (us_split_fields1 right)))) (= (to_rep1 (rec__clock__timet__month (us_split_fields1 left))) (to_rep1 (rec__clock__timet__month (us_split_fields1 right))))) (= (to_rep2 (rec__clock__timet__day (us_split_fields1 left))) (to_rep2 (rec__clock__timet__day (us_split_fields1 right))))) (< (to_rep3 (rec__clock__timet__millisec (us_split_fields1 right))) (to_rep3 (rec__clock__timet__millisec (us_split_fields1 left))))))) :pattern ((greaterthan left right)))))
(define-fun dynamic_invariant23 ((temp___expr_966 Int) (temp___is_init_963 Bool) (temp___skip_constant_964 Bool) (temp___do_toplevel_965 Bool)) Bool (=> (or (= temp___is_init_963 true) (<= 0 5)) (in_range16 temp___expr_966)))
(define-fun dynamic_invariant24 ((temp___expr_1274 Int) (temp___is_init_1271 Bool) (temp___skip_constant_1272 Bool) (temp___do_toplevel_1273 Bool)) Bool (=> (or (= temp___is_init_1271 true) (<= 0 4294967295)) (in_range20 temp___expr_1274)))
(assert (forall ((contents us_rep7)) (! (dynamic_invariant5 (therole contents) true false true) :pattern ((therole contents)))))
(assert (forall ((contents us_rep7)) (! (= (therole contents) (to_rep10 (rec__cert__attr__auth__contentst__role (us_split_fields13 contents)))) :pattern ((therole contents)))))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const tokenpresence Int)
(declare-const tokentry Int)
(declare-const tokenid Int)
(declare-const authcert__split_fields us_split_fields__ref7)
(declare-const idcert__split_fields us_split_fields__ref10)
(declare-const currentlatch Int)
(declare-const latchtimeout__split_fields yearst)
(declare-const latchtimeout__split_fields1 monthst)
(declare-const latchtimeout__split_fields2 dayst)
(declare-const latchtimeout__split_fields3 millisecst)
(declare-const state us_private)
(declare-const status us_private__ref)
(declare-const state1 us_private__ref)
(declare-const state2 us_private__ref)
(declare-const state3 us_private__ref)
(declare-const state4 us_private__ref)
(declare-const status1 us_private__ref)
(declare-const currenttimevar__split_fields us_split_fields)
(declare-const currenttime us_private)
(declare-const logfilestate__split_fields7 us_split_fields4)
(declare-const auditalarm1 Int)
(declare-const currentlatch1 Int)
(declare-const latchtimeout__split_fields4 us_split_fields)
(declare-const systemfault Bool)
(declare-const state5 us_private)
(declare-const state6 us_private)
(declare-const logfilestate__split_fields8 us_split_fields4)
(declare-const auditalarm2 Int)
(declare-const state7 us_private)
(declare-const status2 us_private)
(declare-const logfilestate__split_fields9 us_split_fields4)
(declare-const auditalarm3 Int)
(declare-const tokenpresence1 Int)
(declare-const tokentry1 Int)
(declare-const tokenid1 Int)
(declare-const authcert__split_fields1 us_split_fields14)
(declare-const idcert__split_fields1 us_split_fields20)
(declare-const state8 us_private)
(declare-const status3 us_private)
(declare-const logfiles (Array Int us_rep3))
(declare-const logfilesstatus (Array Int filestatust))
(declare-const logfilestate__split_fields10 us_split_fields4)
(declare-const auditalarm4 Int)
(declare-const auditsystemfault Bool)
(declare-const filestate us_private)
(declare-const state9 us_private)
(declare-const state10 us_private)
(declare-const currenttimevar__split_fields1 us_split_fields__ref)
(declare-const logfiles1 map__ref2)
(declare-const logfilesstatus1 map__ref3)
(declare-const logfilestate__split_fields11 us_split_fields__ref2)
(declare-const auditalarm5 int__ref)
(declare-const auditsystemfault1 bool__ref)
(declare-const tokenpresence2 int__ref)
(declare-const tokentry2 int__ref)
(declare-const tokenid2 int__ref)
(declare-const authcert__split_fields2 us_split_fields__ref7)
(declare-const idcert__split_fields2 us_split_fields__ref10)
(declare-const currentlatch2 int__ref)
(declare-const latchtimeout__split_fields5 us_split_fields__ref)
(declare-const systemfault1 bool__ref)
(declare-const currenttime1 us_private__ref)
(declare-const filestate1 us_private__ref)
(declare-const state11 us_private__ref)
(declare-const state12 us_private__ref)
(declare-const status4 us_private__ref)
(declare-const state13 us_private__ref)
(declare-const state14 us_private__ref)
(declare-const state15 us_private__ref)
(declare-const state16 us_private__ref)
(declare-const status5 us_private__ref)
(declare-const currenttimevar__split_fields2 us_split_fields)
(declare-const logfiles2 (Array Int us_rep3))
(declare-const logfilesstatus2 (Array Int filestatust))
(declare-const logfilestate__split_fields12 us_split_fields4)
(declare-const auditalarm6 Int)
(declare-const auditsystemfault2 Bool)
(declare-const tokenpresence3 Int)
(declare-const tokentry3 Int)
(declare-const tokenid3 Int)
(declare-const authcert__split_fields3 us_split_fields14)
(declare-const idcert__split_fields3 us_split_fields20)
(declare-const currentlatch3 Int)
(declare-const latchtimeout__split_fields6 us_split_fields)
(declare-const systemfault2 Bool)
(declare-const currenttime2 us_private)
(declare-const filestate2 us_private)
(declare-const state17 us_private)
(declare-const state18 us_private)
(declare-const status6 us_private)
(declare-const state19 us_private)
(declare-const state20 us_private)
(declare-const state21 us_private)
(declare-const state22 us_private)
(declare-const status7 us_private)
(assert (in_range1 tokenpresence))
(assert (in_range3 tokentry))
(assert (in_range2 tokenid))
(assert (= (valid_numberlogentries (to_rep4 logfilestate__split_fields) (to_rep5 logfilestate__split_fields1) (mk___rep1 (mk___split_fields1 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range4 auditalarm))
(assert (in_range23 currentlatch))
(assert (and (and (and (= (and (and (= (islocked currentlatch1 (let ((subject state2)) state5) latchtimeout__split_fields4) true) (= (thecurrentdoor (let ((subject state3)) state6)) 0)) (= (greaterthanorequal (thecurrenttime currenttimevar__split_fields currenttime) (alarm_timeout (let ((subject state3)) state6))) true)) (= (thedooralarm (let ((subject state3)) state6)) 0)) (= (= (islocked currentlatch1 (let ((subject state2)) state5) latchtimeout__split_fields4) true) (= (greaterthanorequal (thecurrenttime currenttimevar__split_fields currenttime) (latch_timeout currentlatch1 (let ((subject state2)) state5) latchtimeout__split_fields4)) true))) (= (bool_eq (latch_timeout currentlatch1 (let ((subject state2)) state5) latchtimeout__split_fields4) (latch_timeout currentlatch (us_private__content state2) (mk___split_fields latchtimeout__split_fields latchtimeout__split_fields1 latchtimeout__split_fields2 latchtimeout__split_fields3))) true)) (and (and (in_range4 auditalarm1) (in_range23 currentlatch1)) (= (valid_numberlogentries (to_rep4 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields7)) (to_rep5 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields7)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields7) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields7)) true))))
(assert (and (in_range4 auditalarm2) (= (valid_numberlogentries (to_rep4 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields8)) (to_rep5 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields8)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields8) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields8)) true)))
(assert (and (and (and (= (= (isgood tokenpresence state tokentry tokenid (us_split_fields__content7 authcert__split_fields) (us_split_fields__content10 idcert__split_fields)) true) (= (isgood tokenpresence1 state8 tokentry1 tokenid1 (let ((subject authcert__split_fields)) authcert__split_fields1) (let ((subject idcert__split_fields)) idcert__split_fields1)) true)) (= (= (authcertvalid tokenpresence state tokentry tokenid (us_split_fields__content7 authcert__split_fields) (us_split_fields__content10 idcert__split_fields)) true) (= (authcertvalid tokenpresence1 state8 tokentry1 tokenid1 (let ((subject authcert__split_fields)) authcert__split_fields1) (let ((subject idcert__split_fields)) idcert__split_fields1)) true))) (= (= (theauthcertrole tokenpresence state tokentry tokenid (us_split_fields__content7 authcert__split_fields) (us_split_fields__content10 idcert__split_fields)) 1) (= (theauthcertrole tokenpresence1 state8 tokentry1 tokenid1 (let ((subject authcert__split_fields)) authcert__split_fields1) (let ((subject idcert__split_fields)) idcert__split_fields1)) 1))) (and (and (and (and (in_range3 tokentry1) (in_range4 auditalarm3)) (in_range2 tokenid1)) (in_range1 tokenpresence1)) (= (valid_numberlogentries (to_rep4 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields9)) (to_rep5 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields9)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields9) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields9)) true))))
(assert (and (in_range4 auditalarm4) (= (valid_numberlogentries (to_rep4 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields10)) (to_rep5 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields10)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields10) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields10)) true)))
(assert (= status5 (let ((subject status1)) (mk___private__ref status2))))
(assert (= state16 (let ((subject state4)) (mk___private__ref state7))))
(assert (= state15 (let ((subject state3)) (mk___private__ref state6))))
(assert (= state14 (let ((subject state2)) (mk___private__ref state5))))
(assert (= state13 (let ((subject state1)) (mk___private__ref state10))))
(assert (= status4 (let ((subject status)) (mk___private__ref status3))))
(assert (= state12 (mk___private__ref state8)))
(assert (= state11 (mk___private__ref state9)))
(assert (= filestate1 (mk___private__ref filestate)))
(assert (= currenttime1 (mk___private__ref currenttime)))
(assert (= systemfault1 (mk_bool__ref systemfault)))
(assert (= latchtimeout__split_fields5 (mk___split_fields__ref latchtimeout__split_fields4)))
(assert (= currentlatch2 (mk_int__ref currentlatch1)))
(assert (= idcert__split_fields2 (let ((subject idcert__split_fields)) (mk___split_fields__ref10 idcert__split_fields1))))
(assert (= authcert__split_fields2 (let ((subject authcert__split_fields)) (mk___split_fields__ref7 authcert__split_fields1))))
(assert (= tokenid2 (mk_int__ref tokenid1)))
(assert (= tokentry2 (mk_int__ref tokentry1)))
(assert (= tokenpresence2 (mk_int__ref tokenpresence1)))
(assert (= auditsystemfault1 (mk_bool__ref auditsystemfault)))
(assert (= auditalarm5 (mk_int__ref auditalarm4)))
(assert (= logfilestate__split_fields11 (mk___split_fields__ref2 logfilestate__split_fields10)))
(assert (= logfilesstatus1 (mk_map__ref3 logfilesstatus)))
(assert (= logfiles1 (mk_map__ref2 logfiles)))
(assert (= currenttimevar__split_fields1 (mk___split_fields__ref currenttimevar__split_fields)))
(assert (= status7 status2))
(assert (= state22 state7))
(assert (= state21 state6))
(assert (= state20 state5))
(assert (= state19 state10))
(assert (= status6 status3))
(assert (= state18 state8))
(assert (= state17 state9))
(assert (= filestate2 filestate))
(assert (= currenttime2 currenttime))
(assert (= systemfault2 systemfault))
(assert (= latchtimeout__split_fields6 latchtimeout__split_fields4))
(assert (= currentlatch3 currentlatch1))
(assert (= idcert__split_fields3 idcert__split_fields1))
(assert (= authcert__split_fields3 authcert__split_fields1))
(assert (= tokenid3 tokenid1))
(assert (= tokentry3 tokentry1))
(assert (= tokenpresence3 tokenpresence1))
(assert (= auditsystemfault2 auditsystemfault))
(assert (= auditalarm6 auditalarm4))
(assert (= logfilestate__split_fields12 logfilestate__split_fields10))
(assert (= logfilesstatus2 logfilesstatus))
(assert (= logfiles2 logfiles))
(assert (= currenttimevar__split_fields2 currenttimevar__split_fields))
(assert (= (islocked (int__content currentlatch2) (us_private__content state14) (us_split_fields__content latchtimeout__split_fields5)) true))
(assert (= (thecurrentdoor (us_private__content state15)) 0))
(assert (= (greaterthanorequal (thecurrenttime (us_split_fields__content currenttimevar__split_fields1) (us_private__content currenttime1)) (alarm_timeout (us_private__content state15))) true))
(assert (not (= (thedooralarm (us_private__content state15)) 0)))
(check-sat)
(exit)
