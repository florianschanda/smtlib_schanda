(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq5 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def4 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_78:int. ((((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) and
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))) or
  (not ((a__first <= temp___idx_78) and (temp___idx_78 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))))))))

logic compare : (int,character) farray, int, int, (int,character) farray,
  int, int -> int

axiom compare_def_eq :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq5(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq5(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq5(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,character) farray -> int

logic value__component__size : int

logic object__component__size : (int,character) farray -> int

logic value__alignment : int

logic object__alignment : (int,character) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,character) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,character) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,character) farray. (0 <= object__alignment(a)))

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : (int,character) farray

logic dummy4 : t

logic to_string : us_image -> us_t

logic from_string : us_t -> us_image

type string__ref = { string__content : us_t
}

function string__ref___projection(a: string__ref) : us_t =
  (a).string__content

type statust

predicate in_range4(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : statust, statust -> bool

logic dummy5 : statust

type statust__ref = { statust__content : statust
}

function statust__ref___projection(a: statust__ref) : statust =
  (a).statust__content

logic nouser : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS : int

logic temp___String_Literal_136 : unit -> (int,character) farray

axiom temp___String_Literal_136__def_axiom :
  ((((((((((((((((((((((((((((((((((((((((((((((((((to_rep((temp___String_Literal_136(void)[1])) = 78) and
  (to_rep((temp___String_Literal_136(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_136(void)[3])) = 85)) and
  (to_rep((temp___String_Literal_136(void)[4])) = 115)) and
  (to_rep((temp___String_Literal_136(void)[5])) = 101)) and
  (to_rep((temp___String_Literal_136(void)[6])) = 114)) and
  (to_rep((temp___String_Literal_136(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[8])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[9])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[10])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[12])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[23])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[24])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[25])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[26])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[27])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[28])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[29])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[30])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[31])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[32])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[33])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[34])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[35])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[36])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[37])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[38])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[39])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[40])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[41])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[42])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[43])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[44])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[45])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[46])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[47])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[48])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[49])) = 32)) and
  (to_rep((temp___String_Literal_136(void)[50])) = 32))

type logfileindext

predicate in_range5(x: int) = ((1 <= x) and (x <= 17))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : logfileindext, logfileindext -> bool

logic dummy6 : logfileindext

type logfileindext__ref = { logfileindext__content : logfileindext
}

function logfileindext__ref___projection(a: logfileindext__ref) : logfileindext =
  (a).logfileindext__content

logic to_rep2 : logfileindext -> int

logic of_rep2 : int -> logfileindext

axiom inversion_axiom2 :
  (forall x:logfileindext [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:logfileindext [to_rep2(x)]. in_range5(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range5(x) ->
  (to_rep2(of_rep2(x)) = x)))

type logentrycountt

predicate in_range6(x: int) = ((0 <= x) and (x <= 17408))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : logentrycountt, logentrycountt -> bool

logic dummy7 : logentrycountt

type logentrycountt__ref = { logentrycountt__content : logentrycountt
}

function logentrycountt__ref___projection(a: logentrycountt__ref) : logentrycountt =
  (a).logentrycountt__content

logic to_rep3 : logentrycountt -> int

logic of_rep3 : int -> logentrycountt

axiom inversion_axiom3 :
  (forall x:logentrycountt [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:logentrycountt [to_rep3(x)]. in_range6(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range6(x) ->
  (to_rep3(of_rep3(x)) = x)))

type map__ref1 = { map__content1 : (int,logfileindext) farray
}

logic slide1 : (int,logfileindext) farray, int,
  int -> (int,logfileindext) farray

axiom slide_eq1 :
  (forall a:(int,logfileindext) farray.
  (forall first2:int [slide1(a, first2, first2)]. (slide1(a, first2,
  first2) = a)))

axiom slide_def1 :
  (forall a:(int,logfileindext) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat1 : (int,logfileindext) farray, int, int,
  (int,logfileindext) farray, int, int -> (int,logfileindext) farray

axiom concat_def1 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat1(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat1(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat1(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton1 : logfileindext, int -> (int,logfileindext) farray

axiom singleton_def1 :
  (forall v:logfileindext.
  (forall i:int [(singleton1(v, i)[i])]. ((singleton1(v, i)[i]) = v)))

logic bool_eq10 : (int,logfileindext) farray, int, int,
  (int,logfileindext) farray, int, int -> bool

axiom bool_eq_def8 :
  (forall a:(int,logfileindext) farray. forall a__first:int.
  forall a__last:int. forall b:(int,logfileindext) farray.
  forall b__first:int. forall b__last:int [bool_eq10(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_150:int. ((((a__first <= temp___idx_150) and
  (temp___idx_150 <= a__last)) and
  (to_rep2((a[temp___idx_150])) = to_rep2((b[((b__first - a__first) + temp___idx_150)])))) or
  (not ((a__first <= temp___idx_150) and (temp___idx_150 <= a__last)))))) ->
  (bool_eq10(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_150:int. (((a__first <= temp___idx_150) and
  (temp___idx_150 <= a__last)) ->
  (to_rep2((a[temp___idx_150])) = to_rep2((b[((b__first - a__first) + temp___idx_150)]))))))) ->
  (bool_eq10(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq10(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_150:int. (((a__first <= temp___idx_150) and
  (temp___idx_150 <= a__last)) ->
  (to_rep2((a[temp___idx_150])) = to_rep2((b[((b__first - a__first) + temp___idx_150)])))))))))

logic compare1 : (int,logfileindext) farray, int, int,
  (int,logfileindext) farray, int, int -> int

axiom compare_def_eq1 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((compare1(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq10(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt1 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((compare1(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq10(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep2((a[(i + 1)])) <  to_rep2((b[(j + 1)]))))))))))))

axiom compare_def_gt1 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare1(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq10(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep2((b[(i + 1)])) <  to_rep2((a[(j + 1)]))))))))))))

logic dummy8 : (int,logfileindext) farray

logic value__size1 : int

logic object__size1 : (int,logfileindext) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,logfileindext) farray -> int

logic value__alignment1 : int

logic object__alignment1 : (int,logfileindext) farray -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:(int,logfileindext) farray. (0 <= object__size1(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,logfileindext) farray. (0 <= object__component__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:(int,logfileindext) farray. (0 <= object__alignment1(a)))

logic user_eq7 : (int,logfileindext) farray,
  (int,logfileindext) farray -> bool

type logfilecountt

predicate in_range7(x: int) = ((0 <= x) and (x <= 17))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq8 : logfilecountt, logfilecountt -> bool

logic dummy9 : logfilecountt

type logfilecountt__ref = { logfilecountt__content : logfilecountt
}

function logfilecountt__ref___projection(a: logfilecountt__ref) : logfilecountt =
  (a).logfilecountt__content

logic to_rep4 : logfilecountt -> int

logic of_rep4 : int -> logfilecountt

axiom inversion_axiom4 :
  (forall x:logfilecountt [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 :
  (forall x:logfilecountt [to_rep4(x)]. in_range7(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range7(x) ->
  (to_rep4(of_rep4(x)) = x)))

type us_split_fields = { rec__auditlog__logfilelistt__list :
(int,logfileindext) farray; rec__auditlog__logfilelistt__head :
logfileindext; rec__auditlog__logfilelistt__lasti : logfileindext;
rec__auditlog__logfilelistt__length : logfilecountt
}

function us_split_fields_List__projection(a: us_split_fields) : (int,logfileindext) farray =
  (a).rec__auditlog__logfilelistt__list

function us_split_fields_Head__projection(a: us_split_fields) : logfileindext =
  (a).rec__auditlog__logfilelistt__head

function us_split_fields_LastI__projection(a: us_split_fields) : logfileindext =
  (a).rec__auditlog__logfilelistt__lasti

function us_split_fields_Length__2__projection(a: us_split_fields) : logfilecountt =
  (a).rec__auditlog__logfilelistt__length

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___7__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___8__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq12 : us_rep, us_rep -> bool

axiom bool_eq_def10 :
  (forall a:us_rep. forall b:us_rep [bool_eq12(a, b)].
  ((((((bool_eq10(((a).us_split_fields1).rec__auditlog__logfilelistt__list,
  1, 17, ((b).us_split_fields1).rec__auditlog__logfilelistt__list, 1,
  17) = true) and
  (to_rep2(((a).us_split_fields1).rec__auditlog__logfilelistt__head) = to_rep2(((b).us_split_fields1).rec__auditlog__logfilelistt__head))) and
  (to_rep2(((a).us_split_fields1).rec__auditlog__logfilelistt__lasti) = to_rep2(((b).us_split_fields1).rec__auditlog__logfilelistt__lasti))) and
  (to_rep4(((a).us_split_fields1).rec__auditlog__logfilelistt__length) = to_rep4(((b).us_split_fields1).rec__auditlog__logfilelistt__length))) ->
  (bool_eq12(a, b) = true)) and
  ((not ((((bool_eq10(((a).us_split_fields1).rec__auditlog__logfilelistt__list,
  1, 17, ((b).us_split_fields1).rec__auditlog__logfilelistt__list, 1,
  17) = true) and
  (to_rep2(((a).us_split_fields1).rec__auditlog__logfilelistt__head) = to_rep2(((b).us_split_fields1).rec__auditlog__logfilelistt__head))) and
  (to_rep2(((a).us_split_fields1).rec__auditlog__logfilelistt__lasti) = to_rep2(((b).us_split_fields1).rec__auditlog__logfilelistt__lasti))) and
  (to_rep4(((a).us_split_fields1).rec__auditlog__logfilelistt__length) = to_rep4(((b).us_split_fields1).rec__auditlog__logfilelistt__length)))) ->
  (bool_eq12(a, b) = false))))

logic value__size2 : int

logic object__size2 : us_rep -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:(int,logfileindext) farray. forall a1:logfileindext.
  forall a2:logfileindext. forall a3:logfilecountt. (0 <= object__size2({
  us_split_fields1 = { rec__auditlog__logfilelistt__list = a;
  rec__auditlog__logfilelistt__head = a1;
  rec__auditlog__logfilelistt__lasti = a2;
  rec__auditlog__logfilelistt__length = a3 } })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:(int,logfileindext) farray. forall a1:logfileindext.
  forall a2:logfileindext. forall a3:logfilecountt.
  (0 <= object__alignment2({ us_split_fields1 = {
  rec__auditlog__logfilelistt__list = a; rec__auditlog__logfilelistt__head =
  a1; rec__auditlog__logfilelistt__lasti = a2;
  rec__auditlog__logfilelistt__length = a3 } })))

logic auditlog__logfilelistt__list__first__bit : int

logic auditlog__logfilelistt__list__last__bit : int

logic auditlog__logfilelistt__list__position : int

axiom auditlog__logfilelistt__list__first__bit_axiom :
  (0 <= auditlog__logfilelistt__list__first__bit)

axiom auditlog__logfilelistt__list__last__bit_axiom :
  (auditlog__logfilelistt__list__first__bit <  auditlog__logfilelistt__list__last__bit)

axiom auditlog__logfilelistt__list__position_axiom :
  (0 <= auditlog__logfilelistt__list__position)

logic auditlog__logfilelistt__head__first__bit : int

logic auditlog__logfilelistt__head__last__bit : int

logic auditlog__logfilelistt__head__position : int

axiom auditlog__logfilelistt__head__first__bit_axiom :
  (0 <= auditlog__logfilelistt__head__first__bit)

axiom auditlog__logfilelistt__head__last__bit_axiom :
  (auditlog__logfilelistt__head__first__bit <  auditlog__logfilelistt__head__last__bit)

axiom auditlog__logfilelistt__head__position_axiom :
  (0 <= auditlog__logfilelistt__head__position)

logic auditlog__logfilelistt__lasti__first__bit : int

logic auditlog__logfilelistt__lasti__last__bit : int

logic auditlog__logfilelistt__lasti__position : int

axiom auditlog__logfilelistt__lasti__first__bit_axiom :
  (0 <= auditlog__logfilelistt__lasti__first__bit)

axiom auditlog__logfilelistt__lasti__last__bit_axiom :
  (auditlog__logfilelistt__lasti__first__bit <  auditlog__logfilelistt__lasti__last__bit)

axiom auditlog__logfilelistt__lasti__position_axiom :
  (0 <= auditlog__logfilelistt__lasti__position)

logic auditlog__logfilelistt__length__first__bit : int

logic auditlog__logfilelistt__length__last__bit : int

logic auditlog__logfilelistt__length__position : int

axiom auditlog__logfilelistt__length__first__bit_axiom :
  (0 <= auditlog__logfilelistt__length__first__bit)

axiom auditlog__logfilelistt__length__last__bit_axiom :
  (auditlog__logfilelistt__length__first__bit <  auditlog__logfilelistt__length__last__bit)

axiom auditlog__logfilelistt__length__position_axiom :
  (0 <= auditlog__logfilelistt__length__position)

logic user_eq9 : us_rep, us_rep -> bool

logic dummy10 : (int,logfileindext) farray

logic dummy11 : logfileindext

logic dummy12 : logfileindext

logic dummy13 : logfilecountt

type logfilelistt__ref = { logfilelistt__content : us_rep
}

function logfilelistt__ref___projection(a: logfilelistt__ref) : us_rep =
  (a).logfilelistt__content

type fileentrycountt

predicate in_range8(x: int) = ((0 <= x) and (x <= 1024))

logic bool_eq13 : int, int -> bool

axiom bool_eq_def11 :
  (forall x:int. forall y:int [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq10 : fileentrycountt, fileentrycountt -> bool

logic dummy14 : fileentrycountt

type fileentrycountt__ref = { fileentrycountt__content : fileentrycountt
}

function fileentrycountt__ref___projection(a: fileentrycountt__ref) : fileentrycountt =
  (a).fileentrycountt__content

logic to_rep5 : fileentrycountt -> int

logic of_rep5 : int -> fileentrycountt

axiom inversion_axiom5 :
  (forall x:fileentrycountt [to_rep5(x)]. (of_rep5(to_rep5(x)) = x))

axiom range_axiom5 :
  (forall x:fileentrycountt [to_rep5(x)]. in_range8(to_rep5(x)))

axiom coerce_axiom5 :
  (forall x:int [to_rep5(of_rep5(x))]. (in_range8(x) ->
  (to_rep5(of_rep5(x)) = x)))

type map__ref2 = { map__content2 : (int,fileentrycountt) farray
}

logic slide2 : (int,fileentrycountt) farray, int,
  int -> (int,fileentrycountt) farray

axiom slide_eq2 :
  (forall a:(int,fileentrycountt) farray.
  (forall first2:int [slide2(a, first2, first2)]. (slide2(a, first2,
  first2) = a)))

axiom slide_def2 :
  (forall a:(int,fileentrycountt) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat2 : (int,fileentrycountt) farray, int, int,
  (int,fileentrycountt) farray, int, int -> (int,fileentrycountt) farray

axiom concat_def2 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat2(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat2(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat2(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton2 : fileentrycountt, int -> (int,fileentrycountt) farray

axiom singleton_def2 :
  (forall v:fileentrycountt.
  (forall i:int [(singleton2(v, i)[i])]. ((singleton2(v, i)[i]) = v)))

logic bool_eq14 : (int,fileentrycountt) farray, int, int,
  (int,fileentrycountt) farray, int, int -> bool

axiom bool_eq_def12 :
  (forall a:(int,fileentrycountt) farray. forall a__first:int.
  forall a__last:int. forall b:(int,fileentrycountt) farray.
  forall b__first:int. forall b__last:int [bool_eq14(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_151:int. ((((a__first <= temp___idx_151) and
  (temp___idx_151 <= a__last)) and
  (to_rep5((a[temp___idx_151])) = to_rep5((b[((b__first - a__first) + temp___idx_151)])))) or
  (not ((a__first <= temp___idx_151) and (temp___idx_151 <= a__last)))))) ->
  (bool_eq14(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_151:int. (((a__first <= temp___idx_151) and
  (temp___idx_151 <= a__last)) ->
  (to_rep5((a[temp___idx_151])) = to_rep5((b[((b__first - a__first) + temp___idx_151)]))))))) ->
  (bool_eq14(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev2 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq14(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_151:int. (((a__first <= temp___idx_151) and
  (temp___idx_151 <= a__last)) ->
  (to_rep5((a[temp___idx_151])) = to_rep5((b[((b__first - a__first) + temp___idx_151)])))))))))

logic compare2 : (int,fileentrycountt) farray, int, int,
  (int,fileentrycountt) farray, int, int -> int

axiom compare_def_eq2 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare2(a, a_first, a_last, b, b_first, b_last)].
  ((compare2(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq14(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt2 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare2(a, a_first, a_last, b, b_first, b_last)].
  ((compare2(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq14(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep5((a[(i + 1)])) <  to_rep5((b[(j + 1)]))))))))))))

axiom compare_def_gt2 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare2(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare2(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq14(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep5((b[(i + 1)])) <  to_rep5((a[(j + 1)]))))))))))))

logic dummy15 : (int,fileentrycountt) farray

logic value__size3 : int

logic object__size3 : (int,fileentrycountt) farray -> int

logic value__component__size2 : int

logic object__component__size2 : (int,fileentrycountt) farray -> int

logic value__alignment3 : int

logic object__alignment3 : (int,fileentrycountt) farray -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:(int,fileentrycountt) farray. (0 <= object__size3(a)))

axiom value__component__size_axiom2 : (0 <= value__component__size2)

axiom object__component__size_axiom2 :
  (forall a:(int,fileentrycountt) farray. (0 <= object__component__size2(a)))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:(int,fileentrycountt) farray. (0 <= object__alignment3(a)))

logic user_eq11 : (int,fileentrycountt) farray,
  (int,fileentrycountt) farray -> bool

type us_split_fields2 = { rec__auditlog__logfilestatet__currentlogfile :
logfileindext; rec__auditlog__logfilestatet__numberlogentries :
logentrycountt; rec__auditlog__logfilestatet__usedlogfiles : us_rep;
rec__auditlog__logfilestatet__logfileentries : (int,fileentrycountt) farray
}

function us_split_fields_CurrentLogFile__projection(a: us_split_fields2) : logfileindext =
  (a).rec__auditlog__logfilestatet__currentlogfile

function us_split_fields_NumberLogEntries__projection(a: us_split_fields2) : logentrycountt =
  (a).rec__auditlog__logfilestatet__numberlogentries

function us_split_fields_UsedLogFiles__projection(a: us_split_fields2) : us_rep =
  (a).rec__auditlog__logfilestatet__usedlogfiles

function us_split_fields_LogFileEntries__projection(a: us_split_fields2) : (int,fileentrycountt) farray =
  (a).rec__auditlog__logfilestatet__logfileentries

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___8__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2
}

function us_rep___9__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

logic bool_eq15 : us_rep1, us_rep1 -> bool

axiom bool_eq_def13 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq15(a, b)].
  ((((((to_rep2(((a).us_split_fields3).rec__auditlog__logfilestatet__currentlogfile) = to_rep2(((b).us_split_fields3).rec__auditlog__logfilestatet__currentlogfile)) and
  (to_rep3(((a).us_split_fields3).rec__auditlog__logfilestatet__numberlogentries) = to_rep3(((b).us_split_fields3).rec__auditlog__logfilestatet__numberlogentries))) and
  (bool_eq12(((a).us_split_fields3).rec__auditlog__logfilestatet__usedlogfiles,
  ((b).us_split_fields3).rec__auditlog__logfilestatet__usedlogfiles) = true)) and
  (bool_eq14(((a).us_split_fields3).rec__auditlog__logfilestatet__logfileentries,
  1, 17, ((b).us_split_fields3).rec__auditlog__logfilestatet__logfileentries,
  1, 17) = true)) -> (bool_eq15(a, b) = true)) and
  ((not ((((to_rep2(((a).us_split_fields3).rec__auditlog__logfilestatet__currentlogfile) = to_rep2(((b).us_split_fields3).rec__auditlog__logfilestatet__currentlogfile)) and
  (to_rep3(((a).us_split_fields3).rec__auditlog__logfilestatet__numberlogentries) = to_rep3(((b).us_split_fields3).rec__auditlog__logfilestatet__numberlogentries))) and
  (bool_eq12(((a).us_split_fields3).rec__auditlog__logfilestatet__usedlogfiles,
  ((b).us_split_fields3).rec__auditlog__logfilestatet__usedlogfiles) = true)) and
  (bool_eq14(((a).us_split_fields3).rec__auditlog__logfilestatet__logfileentries,
  1, 17, ((b).us_split_fields3).rec__auditlog__logfilestatet__logfileentries,
  1, 17) = true))) -> (bool_eq15(a, b) = false))))

logic value__size4 : int

logic object__size4 : us_rep1 -> int

logic value__alignment4 : int

logic object__alignment4 : us_rep1 -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:logfileindext. forall a1:logentrycountt.
  forall a2:(int,logfileindext) farray. forall a3:logfileindext.
  forall a4:logfileindext. forall a5:logfilecountt.
  forall a6:(int,fileentrycountt) farray. (0 <= object__size4({
  us_split_fields3 = { rec__auditlog__logfilestatet__currentlogfile = a;
  rec__auditlog__logfilestatet__numberlogentries = a1;
  rec__auditlog__logfilestatet__usedlogfiles = { us_split_fields1 = {
  rec__auditlog__logfilelistt__list = a2; rec__auditlog__logfilelistt__head =
  a3; rec__auditlog__logfilelistt__lasti = a4;
  rec__auditlog__logfilelistt__length = a5 } };
  rec__auditlog__logfilestatet__logfileentries = a6 } })))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:logfileindext. forall a1:logentrycountt.
  forall a2:(int,logfileindext) farray. forall a3:logfileindext.
  forall a4:logfileindext. forall a5:logfilecountt.
  forall a6:(int,fileentrycountt) farray. (0 <= object__alignment4({
  us_split_fields3 = { rec__auditlog__logfilestatet__currentlogfile = a;
  rec__auditlog__logfilestatet__numberlogentries = a1;
  rec__auditlog__logfilestatet__usedlogfiles = { us_split_fields1 = {
  rec__auditlog__logfilelistt__list = a2; rec__auditlog__logfilelistt__head =
  a3; rec__auditlog__logfilelistt__lasti = a4;
  rec__auditlog__logfilelistt__length = a5 } };
  rec__auditlog__logfilestatet__logfileentries = a6 } })))

logic auditlog__logfilestatet__currentlogfile__first__bit : int

logic auditlog__logfilestatet__currentlogfile__last__bit : int

logic auditlog__logfilestatet__currentlogfile__position : int

axiom auditlog__logfilestatet__currentlogfile__first__bit_axiom :
  (0 <= auditlog__logfilestatet__currentlogfile__first__bit)

axiom auditlog__logfilestatet__currentlogfile__last__bit_axiom :
  (auditlog__logfilestatet__currentlogfile__first__bit <  auditlog__logfilestatet__currentlogfile__last__bit)

axiom auditlog__logfilestatet__currentlogfile__position_axiom :
  (0 <= auditlog__logfilestatet__currentlogfile__position)

logic auditlog__logfilestatet__numberlogentries__first__bit : int

logic auditlog__logfilestatet__numberlogentries__last__bit : int

logic auditlog__logfilestatet__numberlogentries__position : int

axiom auditlog__logfilestatet__numberlogentries__first__bit_axiom :
  (0 <= auditlog__logfilestatet__numberlogentries__first__bit)

axiom auditlog__logfilestatet__numberlogentries__last__bit_axiom :
  (auditlog__logfilestatet__numberlogentries__first__bit <  auditlog__logfilestatet__numberlogentries__last__bit)

axiom auditlog__logfilestatet__numberlogentries__position_axiom :
  (0 <= auditlog__logfilestatet__numberlogentries__position)

logic auditlog__logfilestatet__usedlogfiles__first__bit : int

logic auditlog__logfilestatet__usedlogfiles__last__bit : int

logic auditlog__logfilestatet__usedlogfiles__position : int

axiom auditlog__logfilestatet__usedlogfiles__first__bit_axiom :
  (0 <= auditlog__logfilestatet__usedlogfiles__first__bit)

axiom auditlog__logfilestatet__usedlogfiles__last__bit_axiom :
  (auditlog__logfilestatet__usedlogfiles__first__bit <  auditlog__logfilestatet__usedlogfiles__last__bit)

axiom auditlog__logfilestatet__usedlogfiles__position_axiom :
  (0 <= auditlog__logfilestatet__usedlogfiles__position)

logic auditlog__logfilestatet__logfileentries__first__bit : int

logic auditlog__logfilestatet__logfileentries__last__bit : int

logic auditlog__logfilestatet__logfileentries__position : int

axiom auditlog__logfilestatet__logfileentries__first__bit_axiom :
  (0 <= auditlog__logfilestatet__logfileentries__first__bit)

axiom auditlog__logfilestatet__logfileentries__last__bit_axiom :
  (auditlog__logfilestatet__logfileentries__first__bit <  auditlog__logfilestatet__logfileentries__last__bit)

axiom auditlog__logfilestatet__logfileentries__position_axiom :
  (0 <= auditlog__logfilestatet__logfileentries__position)

logic user_eq12 : us_rep1, us_rep1 -> bool

logic dummy16 : logfileindext

logic dummy17 : logentrycountt

logic dummy18 : (int,logfileindext) farray

logic dummy19 : logfileindext

logic dummy20 : logfileindext

logic dummy21 : logfilecountt

logic dummy22 : (int,fileentrycountt) farray

type logfilestatet__ref = { logfilestatet__content : us_rep1
}

function logfilestatet__ref___projection(a: logfilestatet__ref) : us_rep1 =
  (a).logfilestatet__content

logic valid_numberlogentries : int, int, us_rep,
  (int,fileentrycountt) farray -> bool

logic valid_numberlogentries__function_guard : bool, int, int, us_rep,
  (int,fileentrycountt) farray -> prop

logic temp___1064 : int -> (int,logfileindext) farray

axiom def_axiom :
  (forall temp___1066:int.
  (forall temp___1067:int.
  ((temp___1064(temp___1066)[temp___1067]) = of_rep2(temp___1066))))

logic temp___1068 : int -> (int,fileentrycountt) farray

axiom def_axiom1 :
  (forall temp___1070:int.
  (forall temp___1071:int.
  ((temp___1068(temp___1070)[temp___1071]) = of_rep5(temp___1070))))

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep2

logic bool_eq16 : us_rep2, us_rep2 -> bool

logic value__size5 : int

logic object__size5 : us_rep2 -> int

logic value__alignment5 : int

logic object__alignment5 : us_rep2 -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 : (forall a:us_rep2. (0 <= object__size5(a)))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:us_rep2. (0 <= object__alignment5(a)))

logic user_eq13 : us_rep2, us_rep2 -> bool

logic dummy23 : us_rep2

type t__ref = { t__content : us_rep2
}

function t__ref___projection(a: t__ref) : us_rep2 = (a).t__content

type map__ref3 = { map__content3 : (int,us_rep2) farray
}

logic slide3 : (int,us_rep2) farray, int, int -> (int,us_rep2) farray

axiom slide_eq3 :
  (forall a:(int,us_rep2) farray.
  (forall first2:int [slide3(a, first2, first2)]. (slide3(a, first2,
  first2) = a)))

axiom slide_def3 :
  (forall a:(int,us_rep2) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide3(a, old_first, new_first)[i])]. ((slide3(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat3 : (int,us_rep2) farray, int, int, (int,us_rep2) farray, int,
  int -> (int,us_rep2) farray

axiom concat_def3 :
  (forall a:(int,us_rep2) farray. forall b:(int,us_rep2) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat3(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat3(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat3(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton3 : us_rep2, int -> (int,us_rep2) farray

axiom singleton_def3 :
  (forall v:us_rep2.
  (forall i:int [(singleton3(v, i)[i])]. ((singleton3(v, i)[i]) = v)))

logic bool_eq17 : (int,us_rep2) farray, int, int, (int,us_rep2) farray, int,
  int -> bool

axiom bool_eq_def14 :
  (forall a:(int,us_rep2) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep2) farray. forall b__first:int. forall b__last:int
  [bool_eq17(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_152:int. ((((a__first <= temp___idx_152) and
  (temp___idx_152 <= a__last)) and (bool_eq16((a[temp___idx_152]),
  (b[((b__first - a__first) + temp___idx_152)])) = true)) or
  (not ((a__first <= temp___idx_152) and (temp___idx_152 <= a__last)))))) ->
  (bool_eq17(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_152:int. (((a__first <= temp___idx_152) and
  (temp___idx_152 <= a__last)) -> (bool_eq16((a[temp___idx_152]),
  (b[((b__first - a__first) + temp___idx_152)])) = true))))) -> (bool_eq17(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev3 :
  (forall a:(int,us_rep2) farray. forall b:(int,us_rep2) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq17(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_152:int. (((a__first <= temp___idx_152) and
  (temp___idx_152 <= a__last)) -> (bool_eq16((a[temp___idx_152]),
  (b[((b__first - a__first) + temp___idx_152)])) = true)))))))

logic attr__ATTRIBUTE_ADDRESS1 : int

type filestatust

predicate in_range9(x: int) = ((0 <= x) and (x <= 2))

logic bool_eq18 : int, int -> bool

axiom bool_eq_def15 :
  (forall x:int. forall y:int [bool_eq18(x, y)]. (((x = y) -> (bool_eq18(x,
  y) = true)) and ((not (x = y)) -> (bool_eq18(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq14 : filestatust, filestatust -> bool

logic dummy24 : filestatust

type filestatust__ref = { filestatust__content : filestatust
}

function filestatust__ref___projection(a: filestatust__ref) : filestatust =
  (a).filestatust__content

logic to_rep6 : filestatust -> int

logic of_rep6 : int -> filestatust

axiom inversion_axiom6 :
  (forall x:filestatust [to_rep6(x)]. (of_rep6(to_rep6(x)) = x))

axiom range_axiom6 :
  (forall x:filestatust [to_rep6(x)]. in_range9(to_rep6(x)))

axiom coerce_axiom6 :
  (forall x:int [to_rep6(of_rep6(x))]. (in_range9(x) ->
  (to_rep6(of_rep6(x)) = x)))

type map__ref4 = { map__content4 : (int,filestatust) farray
}

logic slide4 : (int,filestatust) farray, int, int -> (int,filestatust) farray

axiom slide_eq4 :
  (forall a:(int,filestatust) farray.
  (forall first2:int [slide4(a, first2, first2)]. (slide4(a, first2,
  first2) = a)))

axiom slide_def4 :
  (forall a:(int,filestatust) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide4(a, old_first, new_first)[i])]. ((slide4(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat4 : (int,filestatust) farray, int, int, (int,filestatust) farray,
  int, int -> (int,filestatust) farray

axiom concat_def4 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat4(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat4(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat4(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton4 : filestatust, int -> (int,filestatust) farray

axiom singleton_def4 :
  (forall v:filestatust.
  (forall i:int [(singleton4(v, i)[i])]. ((singleton4(v, i)[i]) = v)))

logic bool_eq19 : (int,filestatust) farray, int, int,
  (int,filestatust) farray, int, int -> bool

axiom bool_eq_def16 :
  (forall a:(int,filestatust) farray. forall a__first:int.
  forall a__last:int. forall b:(int,filestatust) farray. forall b__first:int.
  forall b__last:int [bool_eq19(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_153:int. ((((a__first <= temp___idx_153) and
  (temp___idx_153 <= a__last)) and
  (to_rep6((a[temp___idx_153])) = to_rep6((b[((b__first - a__first) + temp___idx_153)])))) or
  (not ((a__first <= temp___idx_153) and (temp___idx_153 <= a__last)))))) ->
  (bool_eq19(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_153:int. (((a__first <= temp___idx_153) and
  (temp___idx_153 <= a__last)) ->
  (to_rep6((a[temp___idx_153])) = to_rep6((b[((b__first - a__first) + temp___idx_153)]))))))) ->
  (bool_eq19(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev4 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq19(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_153:int. (((a__first <= temp___idx_153) and
  (temp___idx_153 <= a__last)) ->
  (to_rep6((a[temp___idx_153])) = to_rep6((b[((b__first - a__first) + temp___idx_153)])))))))))

logic compare3 : (int,filestatust) farray, int, int,
  (int,filestatust) farray, int, int -> int

axiom compare_def_eq3 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare3(a, a_first, a_last, b, b_first, b_last)].
  ((compare3(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq19(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt3 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare3(a, a_first, a_last, b, b_first, b_last)].
  ((compare3(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq19(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep6((a[(i + 1)])) <  to_rep6((b[(j + 1)]))))))))))))

axiom compare_def_gt3 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare3(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare3(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq19(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep6((b[(i + 1)])) <  to_rep6((a[(j + 1)]))))))))))))

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

type msgt

predicate in_range10(x: int) = ((0 <= x) and (x <= 7))

logic bool_eq20 : int, int -> bool

axiom bool_eq_def17 :
  (forall x:int. forall y:int [bool_eq20(x, y)]. (((x = y) -> (bool_eq20(x,
  y) = true)) and ((not (x = y)) -> (bool_eq20(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq15 : msgt, msgt -> bool

logic dummy25 : msgt

type msgt__ref = { msgt__content : msgt
}

function msgt__ref___projection(a: msgt__ref) : msgt = (a).msgt__content

type msgtextcount

predicate in_range11(x: int) = ((0 <= x) and (x <= 23))

logic bool_eq21 : int, int -> bool

axiom bool_eq_def18 :
  (forall x:int. forall y:int [bool_eq21(x, y)]. (((x = y) -> (bool_eq21(x,
  y) = true)) and ((not (x = y)) -> (bool_eq21(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq16 : msgtextcount, msgtextcount -> bool

logic dummy26 : msgtextcount

type msgtextcount__ref = { msgtextcount__content : msgtextcount
}

function msgtextcount__ref___projection(a: msgtextcount__ref) : msgtextcount =
  (a).msgtextcount__content

logic to_rep7 : msgtextcount -> int

logic of_rep7 : int -> msgtextcount

axiom inversion_axiom7 :
  (forall x:msgtextcount [to_rep7(x)]. (of_rep7(to_rep7(x)) = x))

axiom range_axiom7 :
  (forall x:msgtextcount [to_rep7(x)]. in_range11(to_rep7(x)))

axiom coerce_axiom7 :
  (forall x:int [to_rep7(of_rep7(x))]. (in_range11(x) ->
  (to_rep7(of_rep7(x)) = x)))

logic dummy27 : (int,character) farray

logic value__size6 : int

logic object__size6 : (int,character) farray -> int

logic value__component__size3 : int

logic object__component__size3 : (int,character) farray -> int

logic value__alignment6 : int

logic object__alignment6 : (int,character) farray -> int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 :
  (forall a:(int,character) farray. (0 <= object__size6(a)))

axiom value__component__size_axiom3 : (0 <= value__component__size3)

axiom object__component__size_axiom3 :
  (forall a:(int,character) farray. (0 <= object__component__size3(a)))

axiom value__alignment_axiom6 : (0 <= value__alignment6)

axiom object__alignment_axiom6 :
  (forall a:(int,character) farray. (0 <= object__alignment6(a)))

logic user_eq17 : (int,character) farray, (int,character) farray -> bool

type us_split_fields4 = { rec__display__msglinet__text :
(int,character) farray; rec__display__msglinet__len : msgtextcount
}

function us_split_fields_Text__projection(a: us_split_fields4) : (int,character) farray =
  (a).rec__display__msglinet__text

function us_split_fields_Len__projection(a: us_split_fields4) : msgtextcount =
  (a).rec__display__msglinet__len

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___9__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep3 = { us_split_fields5 : us_split_fields4
}

function us_rep___10__projection(a: us_rep3) : us_split_fields4 =
  (a).us_split_fields5

logic bool_eq22 : us_rep3, us_rep3 -> bool

axiom bool_eq_def19 :
  (forall a:us_rep3. forall b:us_rep3 [bool_eq22(a, b)].
  ((((bool_eq5(((a).us_split_fields5).rec__display__msglinet__text, 1, 23,
  ((b).us_split_fields5).rec__display__msglinet__text, 1, 23) = true) and
  (to_rep7(((a).us_split_fields5).rec__display__msglinet__len) = to_rep7(((b).us_split_fields5).rec__display__msglinet__len))) ->
  (bool_eq22(a, b) = true)) and
  ((not ((bool_eq5(((a).us_split_fields5).rec__display__msglinet__text, 1,
  23, ((b).us_split_fields5).rec__display__msglinet__text, 1, 23) = true) and
  (to_rep7(((a).us_split_fields5).rec__display__msglinet__len) = to_rep7(((b).us_split_fields5).rec__display__msglinet__len)))) ->
  (bool_eq22(a, b) = false))))

logic value__size7 : int

logic object__size7 : us_rep3 -> int

logic value__alignment7 : int

logic object__alignment7 : us_rep3 -> int

axiom value__size_axiom7 : (0 <= value__size7)

axiom object__size_axiom7 :
  (forall a:(int,character) farray. forall a1:msgtextcount.
  (0 <= object__size7({ us_split_fields5 = { rec__display__msglinet__text =
  a; rec__display__msglinet__len = a1 } })))

axiom value__alignment_axiom7 : (0 <= value__alignment7)

axiom object__alignment_axiom7 :
  (forall a:(int,character) farray. forall a1:msgtextcount.
  (0 <= object__alignment7({ us_split_fields5 = {
  rec__display__msglinet__text = a; rec__display__msglinet__len = a1 } })))

logic display__msglinet__text__first__bit : int

logic display__msglinet__text__last__bit : int

logic display__msglinet__text__position : int

axiom display__msglinet__text__first__bit_axiom :
  (0 <= display__msglinet__text__first__bit)

axiom display__msglinet__text__last__bit_axiom :
  (display__msglinet__text__first__bit <  display__msglinet__text__last__bit)

axiom display__msglinet__text__position_axiom :
  (0 <= display__msglinet__text__position)

logic display__msglinet__len__first__bit : int

logic display__msglinet__len__last__bit : int

logic display__msglinet__len__position : int

axiom display__msglinet__len__first__bit_axiom :
  (0 <= display__msglinet__len__first__bit)

axiom display__msglinet__len__last__bit_axiom :
  (display__msglinet__len__first__bit <  display__msglinet__len__last__bit)

axiom display__msglinet__len__position_axiom :
  (0 <= display__msglinet__len__position)

logic user_eq18 : us_rep3, us_rep3 -> bool

logic dummy28 : (int,character) farray

logic dummy29 : msgtextcount

type msglinet__ref = { msglinet__content : us_rep3
}

function msglinet__ref___projection(a: msglinet__ref) : us_rep3 =
  (a).msglinet__content

logic blankline : (int,character) farray

logic blankline1 : msgtextcount

logic attr__ATTRIBUTE_ADDRESS6 : int

type us_split_fields6 = { rec__display__msgstrt__top : us_rep3;
rec__display__msgstrt__bottom : us_rep3
}

function us_split_fields_Top__projection(a: us_split_fields6) : us_rep3 =
  (a).rec__display__msgstrt__top

function us_split_fields_Bottom__projection(a: us_split_fields6) : us_rep3 =
  (a).rec__display__msgstrt__bottom

type us_split_fields__ref3 = { us_split_fields__content3 : us_split_fields6
}

function us_split_fields__ref___10__projection(a: us_split_fields__ref3) : us_split_fields6 =
  (a).us_split_fields__content3

type us_rep4 = { us_split_fields7 : us_split_fields6
}

function us_rep___11__projection(a: us_rep4) : us_split_fields6 =
  (a).us_split_fields7

logic bool_eq23 : us_rep4, us_rep4 -> bool

axiom bool_eq_def20 :
  (forall a:us_rep4. forall b:us_rep4 [bool_eq23(a, b)].
  ((((bool_eq22(((a).us_split_fields7).rec__display__msgstrt__top,
  ((b).us_split_fields7).rec__display__msgstrt__top) = true) and
  (bool_eq22(((a).us_split_fields7).rec__display__msgstrt__bottom,
  ((b).us_split_fields7).rec__display__msgstrt__bottom) = true)) ->
  (bool_eq23(a, b) = true)) and
  ((not ((bool_eq22(((a).us_split_fields7).rec__display__msgstrt__top,
  ((b).us_split_fields7).rec__display__msgstrt__top) = true) and
  (bool_eq22(((a).us_split_fields7).rec__display__msgstrt__bottom,
  ((b).us_split_fields7).rec__display__msgstrt__bottom) = true))) ->
  (bool_eq23(a, b) = false))))

logic value__size8 : int

logic object__size8 : us_rep4 -> int

logic value__alignment8 : int

logic object__alignment8 : us_rep4 -> int

axiom value__size_axiom8 : (0 <= value__size8)

axiom object__size_axiom8 :
  (forall a:(int,character) farray. forall a1:msgtextcount.
  forall a2:(int,character) farray. forall a3:msgtextcount.
  (0 <= object__size8({ us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = a;
  rec__display__msglinet__len = a1 } }; rec__display__msgstrt__bottom = {
  us_split_fields5 = { rec__display__msglinet__text = a2;
  rec__display__msglinet__len = a3 } } } })))

axiom value__alignment_axiom8 : (0 <= value__alignment8)

axiom object__alignment_axiom8 :
  (forall a:(int,character) farray. forall a1:msgtextcount.
  forall a2:(int,character) farray. forall a3:msgtextcount.
  (0 <= object__alignment8({ us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = a; rec__display__msglinet__len = a1 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = a2; rec__display__msglinet__len = a3 } } }
  })))

logic display__msgstrt__top__first__bit : int

logic display__msgstrt__top__last__bit : int

logic display__msgstrt__top__position : int

axiom display__msgstrt__top__first__bit_axiom :
  (0 <= display__msgstrt__top__first__bit)

axiom display__msgstrt__top__last__bit_axiom :
  (display__msgstrt__top__first__bit <  display__msgstrt__top__last__bit)

axiom display__msgstrt__top__position_axiom :
  (0 <= display__msgstrt__top__position)

logic display__msgstrt__bottom__first__bit : int

logic display__msgstrt__bottom__last__bit : int

logic display__msgstrt__bottom__position : int

axiom display__msgstrt__bottom__first__bit_axiom :
  (0 <= display__msgstrt__bottom__first__bit)

axiom display__msgstrt__bottom__last__bit_axiom :
  (display__msgstrt__bottom__first__bit <  display__msgstrt__bottom__last__bit)

axiom display__msgstrt__bottom__position_axiom :
  (0 <= display__msgstrt__bottom__position)

logic user_eq19 : us_rep4, us_rep4 -> bool

logic dummy30 : (int,character) farray

logic dummy31 : msgtextcount

logic dummy32 : (int,character) farray

logic dummy33 : msgtextcount

type msgstrt__ref = { msgstrt__content : us_rep4
}

function msgstrt__ref___projection(a: msgstrt__ref) : us_rep4 =
  (a).msgstrt__content

type scrolltextcount

predicate in_range12(x: int) = ((0 <= x) and (x <= 50))

logic bool_eq24 : int, int -> bool

axiom bool_eq_def21 :
  (forall x:int. forall y:int [bool_eq24(x, y)]. (((x = y) -> (bool_eq24(x,
  y) = true)) and ((not (x = y)) -> (bool_eq24(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq20 : scrolltextcount, scrolltextcount -> bool

logic dummy34 : scrolltextcount

type scrolltextcount__ref = { scrolltextcount__content : scrolltextcount
}

function scrolltextcount__ref___projection(a: scrolltextcount__ref) : scrolltextcount =
  (a).scrolltextcount__content

logic to_rep8 : scrolltextcount -> int

logic of_rep8 : int -> scrolltextcount

axiom inversion_axiom8 :
  (forall x:scrolltextcount [to_rep8(x)]. (of_rep8(to_rep8(x)) = x))

axiom range_axiom8 :
  (forall x:scrolltextcount [to_rep8(x)]. in_range12(to_rep8(x)))

axiom coerce_axiom8 :
  (forall x:int [to_rep8(of_rep8(x))]. (in_range12(x) ->
  (to_rep8(of_rep8(x)) = x)))

type scrolltexti

predicate in_range13(x: int) = ((1 <= x) and (x <= 50))

logic bool_eq25 : int, int -> bool

axiom bool_eq_def22 :
  (forall x:int. forall y:int [bool_eq25(x, y)]. (((x = y) -> (bool_eq25(x,
  y) = true)) and ((not (x = y)) -> (bool_eq25(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE13 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check13 : us_image -> prop

logic attr__ATTRIBUTE_VALUE13 : us_image -> int

logic user_eq21 : scrolltexti, scrolltexti -> bool

logic dummy35 : scrolltexti

type scrolltexti__ref = { scrolltexti__content : scrolltexti
}

function scrolltexti__ref___projection(a: scrolltexti__ref) : scrolltexti =
  (a).scrolltexti__content

logic dummy36 : (int,character) farray

logic value__size9 : int

logic object__size9 : (int,character) farray -> int

logic value__component__size4 : int

logic object__component__size4 : (int,character) farray -> int

logic value__alignment9 : int

logic object__alignment9 : (int,character) farray -> int

axiom value__size_axiom9 : (0 <= value__size9)

axiom object__size_axiom9 :
  (forall a:(int,character) farray. (0 <= object__size9(a)))

axiom value__component__size_axiom4 : (0 <= value__component__size4)

axiom object__component__size_axiom4 :
  (forall a:(int,character) farray. (0 <= object__component__size4(a)))

axiom value__alignment_axiom9 : (0 <= value__alignment9)

axiom object__alignment_axiom9 :
  (forall a:(int,character) farray. (0 <= object__alignment9(a)))

logic user_eq22 : (int,character) farray, (int,character) farray -> bool

type us_split_fields8 = { rec__display__scrollstrt__text :
(int,character) farray; rec__display__scrollstrt__len : scrolltextcount
}

function us_split_fields_Text__2__projection(a: us_split_fields8) : (int,character) farray =
  (a).rec__display__scrollstrt__text

function us_split_fields_Len__2__projection(a: us_split_fields8) : scrolltextcount =
  (a).rec__display__scrollstrt__len

type us_split_fields__ref4 = { us_split_fields__content4 : us_split_fields8
}

function us_split_fields__ref___11__projection(a: us_split_fields__ref4) : us_split_fields8 =
  (a).us_split_fields__content4

type us_rep5 = { us_split_fields9 : us_split_fields8
}

function us_rep___12__projection(a: us_rep5) : us_split_fields8 =
  (a).us_split_fields9

logic bool_eq26 : us_rep5, us_rep5 -> bool

axiom bool_eq_def23 :
  (forall a:us_rep5. forall b:us_rep5 [bool_eq26(a, b)].
  ((((bool_eq5(((a).us_split_fields9).rec__display__scrollstrt__text, 1, 50,
  ((b).us_split_fields9).rec__display__scrollstrt__text, 1, 50) = true) and
  (to_rep8(((a).us_split_fields9).rec__display__scrollstrt__len) = to_rep8(((b).us_split_fields9).rec__display__scrollstrt__len))) ->
  (bool_eq26(a, b) = true)) and
  ((not ((bool_eq5(((a).us_split_fields9).rec__display__scrollstrt__text, 1,
  50, ((b).us_split_fields9).rec__display__scrollstrt__text, 1,
  50) = true) and
  (to_rep8(((a).us_split_fields9).rec__display__scrollstrt__len) = to_rep8(((b).us_split_fields9).rec__display__scrollstrt__len)))) ->
  (bool_eq26(a, b) = false))))

logic value__size10 : int

logic object__size10 : us_rep5 -> int

logic value__alignment10 : int

logic object__alignment10 : us_rep5 -> int

axiom value__size_axiom10 : (0 <= value__size10)

axiom object__size_axiom10 :
  (forall a:(int,character) farray. forall a1:scrolltextcount.
  (0 <= object__size10({ us_split_fields9 = {
  rec__display__scrollstrt__text = a; rec__display__scrollstrt__len = a1 }
  })))

axiom value__alignment_axiom10 : (0 <= value__alignment10)

axiom object__alignment_axiom10 :
  (forall a:(int,character) farray. forall a1:scrolltextcount.
  (0 <= object__alignment10({ us_split_fields9 = {
  rec__display__scrollstrt__text = a; rec__display__scrollstrt__len = a1 }
  })))

logic display__scrollstrt__text__first__bit : int

logic display__scrollstrt__text__last__bit : int

logic display__scrollstrt__text__position : int

axiom display__scrollstrt__text__first__bit_axiom :
  (0 <= display__scrollstrt__text__first__bit)

axiom display__scrollstrt__text__last__bit_axiom :
  (display__scrollstrt__text__first__bit <  display__scrollstrt__text__last__bit)

axiom display__scrollstrt__text__position_axiom :
  (0 <= display__scrollstrt__text__position)

logic display__scrollstrt__len__first__bit : int

logic display__scrollstrt__len__last__bit : int

logic display__scrollstrt__len__position : int

axiom display__scrollstrt__len__first__bit_axiom :
  (0 <= display__scrollstrt__len__first__bit)

axiom display__scrollstrt__len__last__bit_axiom :
  (display__scrollstrt__len__first__bit <  display__scrollstrt__len__last__bit)

axiom display__scrollstrt__len__position_axiom :
  (0 <= display__scrollstrt__len__position)

logic user_eq23 : us_rep5, us_rep5 -> bool

logic dummy37 : (int,character) farray

logic dummy38 : scrolltextcount

type scrollstrt__ref = { scrollstrt__content : us_rep5
}

function scrollstrt__ref___projection(a: scrollstrt__ref) : us_rep5 =
  (a).scrollstrt__content

logic msg : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

type map__ref5 = { map__content5 : (int,us_rep4) farray
}

logic slide5 : (int,us_rep4) farray, int, int -> (int,us_rep4) farray

axiom slide_eq5 :
  (forall a:(int,us_rep4) farray.
  (forall first2:int [slide5(a, first2, first2)]. (slide5(a, first2,
  first2) = a)))

axiom slide_def5 :
  (forall a:(int,us_rep4) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide5(a, old_first, new_first)[i])]. ((slide5(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat5 : (int,us_rep4) farray, int, int, (int,us_rep4) farray, int,
  int -> (int,us_rep4) farray

axiom concat_def5 :
  (forall a:(int,us_rep4) farray. forall b:(int,us_rep4) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat5(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat5(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat5(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton5 : us_rep4, int -> (int,us_rep4) farray

axiom singleton_def5 :
  (forall v:(int,character) farray. forall v1:msgtextcount.
  forall v2:(int,character) farray. forall v3:msgtextcount.
  (forall i:int [(singleton5({ us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = v; rec__display__msglinet__len = v1 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = v2; rec__display__msglinet__len = v3 } } }
  }, i)[i])]. ((singleton5({ us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = v; rec__display__msglinet__len = v1 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = v2; rec__display__msglinet__len = v3 } } }
  }, i)[i]) = { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = v;
  rec__display__msglinet__len = v1 } }; rec__display__msgstrt__bottom = {
  us_split_fields5 = { rec__display__msglinet__text = v2;
  rec__display__msglinet__len = v3 } } } })))

logic bool_eq27 : (int,us_rep4) farray, int, int, (int,us_rep4) farray, int,
  int -> bool

axiom bool_eq_def24 :
  (forall a:(int,us_rep4) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep4) farray. forall b__first:int. forall b__last:int
  [bool_eq27(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_165:int. ((((a__first <= temp___idx_165) and
  (temp___idx_165 <= a__last)) and (bool_eq23((a[temp___idx_165]),
  (b[((b__first - a__first) + temp___idx_165)])) = true)) or
  (not ((a__first <= temp___idx_165) and (temp___idx_165 <= a__last)))))) ->
  (bool_eq27(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_165:int. (((a__first <= temp___idx_165) and
  (temp___idx_165 <= a__last)) -> (bool_eq23((a[temp___idx_165]),
  (b[((b__first - a__first) + temp___idx_165)])) = true))))) -> (bool_eq27(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev5 :
  (forall a:(int,us_rep4) farray. forall b:(int,us_rep4) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq27(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_165:int. (((a__first <= temp___idx_165) and
  (temp___idx_165 <= a__last)) -> (bool_eq23((a[temp___idx_165]),
  (b[((b__first - a__first) + temp___idx_165)])) = true)))))))

logic msgtostrings : (int,us_rep4) farray

logic attr__ATTRIBUTE_ADDRESS9 : int

logic display__msgtostrings__aggregate_def : us_rep4, us_rep4, us_rep4,
  us_rep4, us_rep4, us_rep4, us_rep4, us_rep4 -> (int,us_rep4) farray

axiom def_axiom2 :
  (forall temp___167:(int,character) farray. forall temp___1671:msgtextcount.
  forall temp___1672:(int,character) farray. forall temp___1673:msgtextcount.
  forall temp___168:(int,character) farray. forall temp___1681:msgtextcount.
  forall temp___1682:(int,character) farray. forall temp___1683:msgtextcount.
  forall temp___169:(int,character) farray. forall temp___1691:msgtextcount.
  forall temp___1692:(int,character) farray. forall temp___1693:msgtextcount.
  forall temp___170:(int,character) farray. forall temp___1701:msgtextcount.
  forall temp___1702:(int,character) farray. forall temp___1703:msgtextcount.
  forall temp___171:us_rep4. forall temp___172:us_rep4.
  forall temp___173:us_rep4. forall temp___174:us_rep4.
  (((((((((display__msgtostrings__aggregate_def({ us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___167; rec__display__msglinet__len =
  temp___1671 } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1672; rec__display__msglinet__len =
  temp___1673 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___168;
  rec__display__msglinet__len = temp___1681 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1682; rec__display__msglinet__len =
  temp___1683 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___169;
  rec__display__msglinet__len = temp___1691 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1692; rec__display__msglinet__len =
  temp___1693 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___170;
  rec__display__msglinet__len = temp___1701 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1702; rec__display__msglinet__len =
  temp___1703 } } } }, temp___171, temp___172, temp___173,
  temp___174)[0]) = { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___167;
  rec__display__msglinet__len = temp___1671 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1672; rec__display__msglinet__len =
  temp___1673 } } } }) and ((display__msgtostrings__aggregate_def({
  us_split_fields7 = { rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___167; rec__display__msglinet__len =
  temp___1671 } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1672; rec__display__msglinet__len =
  temp___1673 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___168;
  rec__display__msglinet__len = temp___1681 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1682; rec__display__msglinet__len =
  temp___1683 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___169;
  rec__display__msglinet__len = temp___1691 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1692; rec__display__msglinet__len =
  temp___1693 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___170;
  rec__display__msglinet__len = temp___1701 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1702; rec__display__msglinet__len =
  temp___1703 } } } }, temp___171, temp___172, temp___173,
  temp___174)[1]) = { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___168;
  rec__display__msglinet__len = temp___1681 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1682; rec__display__msglinet__len =
  temp___1683 } } } })) and ((display__msgtostrings__aggregate_def({
  us_split_fields7 = { rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___167; rec__display__msglinet__len =
  temp___1671 } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1672; rec__display__msglinet__len =
  temp___1673 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___168;
  rec__display__msglinet__len = temp___1681 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1682; rec__display__msglinet__len =
  temp___1683 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___169;
  rec__display__msglinet__len = temp___1691 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1692; rec__display__msglinet__len =
  temp___1693 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___170;
  rec__display__msglinet__len = temp___1701 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1702; rec__display__msglinet__len =
  temp___1703 } } } }, temp___171, temp___172, temp___173,
  temp___174)[2]) = { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___169;
  rec__display__msglinet__len = temp___1691 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1692; rec__display__msglinet__len =
  temp___1693 } } } })) and ((display__msgtostrings__aggregate_def({
  us_split_fields7 = { rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___167; rec__display__msglinet__len =
  temp___1671 } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1672; rec__display__msglinet__len =
  temp___1673 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___168;
  rec__display__msglinet__len = temp___1681 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1682; rec__display__msglinet__len =
  temp___1683 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___169;
  rec__display__msglinet__len = temp___1691 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1692; rec__display__msglinet__len =
  temp___1693 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___170;
  rec__display__msglinet__len = temp___1701 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1702; rec__display__msglinet__len =
  temp___1703 } } } }, temp___171, temp___172, temp___173,
  temp___174)[3]) = { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___170;
  rec__display__msglinet__len = temp___1701 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1702; rec__display__msglinet__len =
  temp___1703 } } } })) and ((display__msgtostrings__aggregate_def({
  us_split_fields7 = { rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___167; rec__display__msglinet__len =
  temp___1671 } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1672; rec__display__msglinet__len =
  temp___1673 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___168;
  rec__display__msglinet__len = temp___1681 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1682; rec__display__msglinet__len =
  temp___1683 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___169;
  rec__display__msglinet__len = temp___1691 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1692; rec__display__msglinet__len =
  temp___1693 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___170;
  rec__display__msglinet__len = temp___1701 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1702; rec__display__msglinet__len =
  temp___1703 } } } }, temp___171, temp___172, temp___173,
  temp___174)[4]) = temp___171)) and ((display__msgtostrings__aggregate_def({
  us_split_fields7 = { rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___167; rec__display__msglinet__len =
  temp___1671 } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1672; rec__display__msglinet__len =
  temp___1673 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___168;
  rec__display__msglinet__len = temp___1681 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1682; rec__display__msglinet__len =
  temp___1683 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___169;
  rec__display__msglinet__len = temp___1691 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1692; rec__display__msglinet__len =
  temp___1693 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___170;
  rec__display__msglinet__len = temp___1701 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1702; rec__display__msglinet__len =
  temp___1703 } } } }, temp___171, temp___172, temp___173,
  temp___174)[5]) = temp___172)) and ((display__msgtostrings__aggregate_def({
  us_split_fields7 = { rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___167; rec__display__msglinet__len =
  temp___1671 } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1672; rec__display__msglinet__len =
  temp___1673 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___168;
  rec__display__msglinet__len = temp___1681 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1682; rec__display__msglinet__len =
  temp___1683 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___169;
  rec__display__msglinet__len = temp___1691 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1692; rec__display__msglinet__len =
  temp___1693 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___170;
  rec__display__msglinet__len = temp___1701 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1702; rec__display__msglinet__len =
  temp___1703 } } } }, temp___171, temp___172, temp___173,
  temp___174)[6]) = temp___173)) and ((display__msgtostrings__aggregate_def({
  us_split_fields7 = { rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___167; rec__display__msglinet__len =
  temp___1671 } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1672; rec__display__msglinet__len =
  temp___1673 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___168;
  rec__display__msglinet__len = temp___1681 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1682; rec__display__msglinet__len =
  temp___1683 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___169;
  rec__display__msglinet__len = temp___1691 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1692; rec__display__msglinet__len =
  temp___1693 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = temp___170;
  rec__display__msglinet__len = temp___1701 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1702; rec__display__msglinet__len =
  temp___1703 } } } }, temp___171, temp___172, temp___173,
  temp___174)[7]) = temp___174)))

logic temp___String_Literal_176 : unit -> (int,character) farray

axiom temp___String_Literal_176__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_176(void)[1])) = 83) and
  (to_rep((temp___String_Literal_176(void)[2])) = 89)) and
  (to_rep((temp___String_Literal_176(void)[3])) = 83)) and
  (to_rep((temp___String_Literal_176(void)[4])) = 84)) and
  (to_rep((temp___String_Literal_176(void)[5])) = 69)) and
  (to_rep((temp___String_Literal_176(void)[6])) = 77)) and
  (to_rep((temp___String_Literal_176(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_176(void)[8])) = 78)) and
  (to_rep((temp___String_Literal_176(void)[9])) = 79)) and
  (to_rep((temp___String_Literal_176(void)[10])) = 84)) and
  (to_rep((temp___String_Literal_176(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_176(void)[12])) = 79)) and
  (to_rep((temp___String_Literal_176(void)[13])) = 80)) and
  (to_rep((temp___String_Literal_176(void)[14])) = 69)) and
  (to_rep((temp___String_Literal_176(void)[15])) = 82)) and
  (to_rep((temp___String_Literal_176(void)[16])) = 65)) and
  (to_rep((temp___String_Literal_176(void)[17])) = 84)) and
  (to_rep((temp___String_Literal_176(void)[18])) = 73)) and
  (to_rep((temp___String_Literal_176(void)[19])) = 79)) and
  (to_rep((temp___String_Literal_176(void)[20])) = 78)) and
  (to_rep((temp___String_Literal_176(void)[21])) = 65)) and
  (to_rep((temp___String_Literal_176(void)[22])) = 76)) and
  (to_rep((temp___String_Literal_176(void)[23])) = 32))

logic temp___String_Literal_177 : unit -> (int,character) farray

axiom temp___String_Literal_177__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_177(void)[1])) = 87) and
  (to_rep((temp___String_Literal_177(void)[2])) = 69)) and
  (to_rep((temp___String_Literal_177(void)[3])) = 76)) and
  (to_rep((temp___String_Literal_177(void)[4])) = 67)) and
  (to_rep((temp___String_Literal_177(void)[5])) = 79)) and
  (to_rep((temp___String_Literal_177(void)[6])) = 77)) and
  (to_rep((temp___String_Literal_177(void)[7])) = 69)) and
  (to_rep((temp___String_Literal_177(void)[8])) = 32)) and
  (to_rep((temp___String_Literal_177(void)[9])) = 84)) and
  (to_rep((temp___String_Literal_177(void)[10])) = 79)) and
  (to_rep((temp___String_Literal_177(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_177(void)[12])) = 84)) and
  (to_rep((temp___String_Literal_177(void)[13])) = 73)) and
  (to_rep((temp___String_Literal_177(void)[14])) = 83)) and
  (to_rep((temp___String_Literal_177(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_177(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_177(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_177(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_177(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_177(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_177(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_177(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_177(void)[23])) = 32))

logic temp___String_Literal_178 : unit -> (int,character) farray

axiom temp___String_Literal_178__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_178(void)[1])) = 69) and
  (to_rep((temp___String_Literal_178(void)[2])) = 78)) and
  (to_rep((temp___String_Literal_178(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_178(void)[4])) = 69)) and
  (to_rep((temp___String_Literal_178(void)[5])) = 82)) and
  (to_rep((temp___String_Literal_178(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_178(void)[7])) = 84)) and
  (to_rep((temp___String_Literal_178(void)[8])) = 79)) and
  (to_rep((temp___String_Literal_178(void)[9])) = 75)) and
  (to_rep((temp___String_Literal_178(void)[10])) = 69)) and
  (to_rep((temp___String_Literal_178(void)[11])) = 78)) and
  (to_rep((temp___String_Literal_178(void)[12])) = 32)) and
  (to_rep((temp___String_Literal_178(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_178(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_178(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_178(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_178(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_178(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_178(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_178(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_178(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_178(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_178(void)[23])) = 32))

logic temp___String_Literal_179 : unit -> (int,character) farray

axiom temp___String_Literal_179__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_179(void)[1])) = 65) and
  (to_rep((temp___String_Literal_179(void)[2])) = 85)) and
  (to_rep((temp___String_Literal_179(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_179(void)[4])) = 72)) and
  (to_rep((temp___String_Literal_179(void)[5])) = 69)) and
  (to_rep((temp___String_Literal_179(void)[6])) = 78)) and
  (to_rep((temp___String_Literal_179(void)[7])) = 84)) and
  (to_rep((temp___String_Literal_179(void)[8])) = 73)) and
  (to_rep((temp___String_Literal_179(void)[9])) = 67)) and
  (to_rep((temp___String_Literal_179(void)[10])) = 65)) and
  (to_rep((temp___String_Literal_179(void)[11])) = 84)) and
  (to_rep((temp___String_Literal_179(void)[12])) = 73)) and
  (to_rep((temp___String_Literal_179(void)[13])) = 78)) and
  (to_rep((temp___String_Literal_179(void)[14])) = 71)) and
  (to_rep((temp___String_Literal_179(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_179(void)[16])) = 85)) and
  (to_rep((temp___String_Literal_179(void)[17])) = 83)) and
  (to_rep((temp___String_Literal_179(void)[18])) = 69)) and
  (to_rep((temp___String_Literal_179(void)[19])) = 82)) and
  (to_rep((temp___String_Literal_179(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_179(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_179(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_179(void)[23])) = 32))

logic temp___String_Literal_180 : unit -> (int,character) farray

axiom temp___String_Literal_180__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_180(void)[1])) = 73) and
  (to_rep((temp___String_Literal_180(void)[2])) = 78)) and
  (to_rep((temp___String_Literal_180(void)[3])) = 83)) and
  (to_rep((temp___String_Literal_180(void)[4])) = 69)) and
  (to_rep((temp___String_Literal_180(void)[5])) = 82)) and
  (to_rep((temp___String_Literal_180(void)[6])) = 84)) and
  (to_rep((temp___String_Literal_180(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_180(void)[8])) = 70)) and
  (to_rep((temp___String_Literal_180(void)[9])) = 73)) and
  (to_rep((temp___String_Literal_180(void)[10])) = 78)) and
  (to_rep((temp___String_Literal_180(void)[11])) = 71)) and
  (to_rep((temp___String_Literal_180(void)[12])) = 69)) and
  (to_rep((temp___String_Literal_180(void)[13])) = 82)) and
  (to_rep((temp___String_Literal_180(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_180(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_180(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_180(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_180(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_180(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_180(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_180(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_180(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_180(void)[23])) = 32))

logic temp___String_Literal_181 : unit -> (int,character) farray

axiom temp___String_Literal_181__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_181(void)[1])) = 82) and
  (to_rep((temp___String_Literal_181(void)[2])) = 69)) and
  (to_rep((temp___String_Literal_181(void)[3])) = 77)) and
  (to_rep((temp___String_Literal_181(void)[4])) = 79)) and
  (to_rep((temp___String_Literal_181(void)[5])) = 86)) and
  (to_rep((temp___String_Literal_181(void)[6])) = 69)) and
  (to_rep((temp___String_Literal_181(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_181(void)[8])) = 84)) and
  (to_rep((temp___String_Literal_181(void)[9])) = 79)) and
  (to_rep((temp___String_Literal_181(void)[10])) = 75)) and
  (to_rep((temp___String_Literal_181(void)[11])) = 69)) and
  (to_rep((temp___String_Literal_181(void)[12])) = 78)) and
  (to_rep((temp___String_Literal_181(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_181(void)[14])) = 65)) and
  (to_rep((temp___String_Literal_181(void)[15])) = 78)) and
  (to_rep((temp___String_Literal_181(void)[16])) = 68)) and
  (to_rep((temp___String_Literal_181(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_181(void)[18])) = 69)) and
  (to_rep((temp___String_Literal_181(void)[19])) = 78)) and
  (to_rep((temp___String_Literal_181(void)[20])) = 84)) and
  (to_rep((temp___String_Literal_181(void)[21])) = 69)) and
  (to_rep((temp___String_Literal_181(void)[22])) = 82)) and
  (to_rep((temp___String_Literal_181(void)[23])) = 32))

logic temp___String_Literal_182 : unit -> (int,character) farray

axiom temp___String_Literal_182__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_182(void)[1])) = 65) and
  (to_rep((temp___String_Literal_182(void)[2])) = 85)) and
  (to_rep((temp___String_Literal_182(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_182(void)[4])) = 72)) and
  (to_rep((temp___String_Literal_182(void)[5])) = 69)) and
  (to_rep((temp___String_Literal_182(void)[6])) = 78)) and
  (to_rep((temp___String_Literal_182(void)[7])) = 84)) and
  (to_rep((temp___String_Literal_182(void)[8])) = 73)) and
  (to_rep((temp___String_Literal_182(void)[9])) = 67)) and
  (to_rep((temp___String_Literal_182(void)[10])) = 65)) and
  (to_rep((temp___String_Literal_182(void)[11])) = 84)) and
  (to_rep((temp___String_Literal_182(void)[12])) = 73)) and
  (to_rep((temp___String_Literal_182(void)[13])) = 78)) and
  (to_rep((temp___String_Literal_182(void)[14])) = 71)) and
  (to_rep((temp___String_Literal_182(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_182(void)[16])) = 85)) and
  (to_rep((temp___String_Literal_182(void)[17])) = 83)) and
  (to_rep((temp___String_Literal_182(void)[18])) = 69)) and
  (to_rep((temp___String_Literal_182(void)[19])) = 82)) and
  (to_rep((temp___String_Literal_182(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_182(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_182(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_182(void)[23])) = 32))

logic temp___String_Literal_183 : unit -> (int,character) farray

axiom temp___String_Literal_183__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_183(void)[1])) = 80) and
  (to_rep((temp___String_Literal_183(void)[2])) = 76)) and
  (to_rep((temp___String_Literal_183(void)[3])) = 69)) and
  (to_rep((temp___String_Literal_183(void)[4])) = 65)) and
  (to_rep((temp___String_Literal_183(void)[5])) = 83)) and
  (to_rep((temp___String_Literal_183(void)[6])) = 69)) and
  (to_rep((temp___String_Literal_183(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[8])) = 87)) and
  (to_rep((temp___String_Literal_183(void)[9])) = 65)) and
  (to_rep((temp___String_Literal_183(void)[10])) = 73)) and
  (to_rep((temp___String_Literal_183(void)[11])) = 84)) and
  (to_rep((temp___String_Literal_183(void)[12])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[23])) = 32))

logic temp___String_Literal_184 : unit -> (int,character) farray

axiom temp___String_Literal_184__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_184(void)[1])) = 69) and
  (to_rep((temp___String_Literal_184(void)[2])) = 78)) and
  (to_rep((temp___String_Literal_184(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_184(void)[4])) = 82)) and
  (to_rep((temp___String_Literal_184(void)[5])) = 89)) and
  (to_rep((temp___String_Literal_184(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_184(void)[7])) = 68)) and
  (to_rep((temp___String_Literal_184(void)[8])) = 69)) and
  (to_rep((temp___String_Literal_184(void)[9])) = 78)) and
  (to_rep((temp___String_Literal_184(void)[10])) = 73)) and
  (to_rep((temp___String_Literal_184(void)[11])) = 69)) and
  (to_rep((temp___String_Literal_184(void)[12])) = 68)) and
  (to_rep((temp___String_Literal_184(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_184(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_184(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_184(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_184(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_184(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_184(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_184(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_184(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_184(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_184(void)[23])) = 32))

logic temp___String_Literal_185 : unit -> (int,character) farray

axiom temp___String_Literal_185__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_185(void)[1])) = 82) and
  (to_rep((temp___String_Literal_185(void)[2])) = 69)) and
  (to_rep((temp___String_Literal_185(void)[3])) = 77)) and
  (to_rep((temp___String_Literal_185(void)[4])) = 79)) and
  (to_rep((temp___String_Literal_185(void)[5])) = 86)) and
  (to_rep((temp___String_Literal_185(void)[6])) = 69)) and
  (to_rep((temp___String_Literal_185(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_185(void)[8])) = 84)) and
  (to_rep((temp___String_Literal_185(void)[9])) = 79)) and
  (to_rep((temp___String_Literal_185(void)[10])) = 75)) and
  (to_rep((temp___String_Literal_185(void)[11])) = 69)) and
  (to_rep((temp___String_Literal_185(void)[12])) = 78)) and
  (to_rep((temp___String_Literal_185(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_185(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_185(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_185(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_185(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_185(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_185(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_185(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_185(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_185(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_185(void)[23])) = 32))

logic temp___String_Literal_186 : unit -> (int,character) farray

axiom temp___String_Literal_186__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_186(void)[1])) = 84) and
  (to_rep((temp___String_Literal_186(void)[2])) = 79)) and
  (to_rep((temp___String_Literal_186(void)[3])) = 75)) and
  (to_rep((temp___String_Literal_186(void)[4])) = 69)) and
  (to_rep((temp___String_Literal_186(void)[5])) = 78)) and
  (to_rep((temp___String_Literal_186(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_186(void)[7])) = 85)) and
  (to_rep((temp___String_Literal_186(void)[8])) = 80)) and
  (to_rep((temp___String_Literal_186(void)[9])) = 68)) and
  (to_rep((temp___String_Literal_186(void)[10])) = 65)) and
  (to_rep((temp___String_Literal_186(void)[11])) = 84)) and
  (to_rep((temp___String_Literal_186(void)[12])) = 69)) and
  (to_rep((temp___String_Literal_186(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_186(void)[14])) = 70)) and
  (to_rep((temp___String_Literal_186(void)[15])) = 65)) and
  (to_rep((temp___String_Literal_186(void)[16])) = 73)) and
  (to_rep((temp___String_Literal_186(void)[17])) = 76)) and
  (to_rep((temp___String_Literal_186(void)[18])) = 69)) and
  (to_rep((temp___String_Literal_186(void)[19])) = 68)) and
  (to_rep((temp___String_Literal_186(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_186(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_186(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_186(void)[23])) = 32))

logic temp___String_Literal_187 : unit -> (int,character) farray

axiom temp___String_Literal_187__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_187(void)[1])) = 69) and
  (to_rep((temp___String_Literal_187(void)[2])) = 78)) and
  (to_rep((temp___String_Literal_187(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_187(void)[4])) = 69)) and
  (to_rep((temp___String_Literal_187(void)[5])) = 82)) and
  (to_rep((temp___String_Literal_187(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_187(void)[7])) = 69)) and
  (to_rep((temp___String_Literal_187(void)[8])) = 78)) and
  (to_rep((temp___String_Literal_187(void)[9])) = 67)) and
  (to_rep((temp___String_Literal_187(void)[10])) = 76)) and
  (to_rep((temp___String_Literal_187(void)[11])) = 65)) and
  (to_rep((temp___String_Literal_187(void)[12])) = 86)) and
  (to_rep((temp___String_Literal_187(void)[13])) = 69)) and
  (to_rep((temp___String_Literal_187(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_187(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_187(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_187(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_187(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_187(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_187(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_187(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_187(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_187(void)[23])) = 32))

logic c27b : (int,character) farray

logic c27b1 : msgtextcount

logic c27b2 : (int,character) farray

logic c27b3 : msgtextcount

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

predicate dynamic_property1(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq28 : int, int -> bool

axiom bool_eq_def25 :
  (forall x:int. forall y:int [bool_eq28(x, y)]. (((x = y) -> (bool_eq28(x,
  y) = true)) and ((not (x = y)) -> (bool_eq28(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE14 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check14 : us_image -> prop

logic attr__ATTRIBUTE_VALUE14 : us_image -> int

logic user_eq24 : integer, integer -> bool

logic dummy39 : integer

type t33b__ref = { t33b__content : integer
}

function t33b__ref___projection(a: t33b__ref) : integer = (a).t33b__content

logic attr__ATTRIBUTE_ADDRESS13 : int

predicate dynamic_property2(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq29 : int, int -> bool

axiom bool_eq_def26 :
  (forall x:int. forall y:int [bool_eq29(x, y)]. (((x = y) -> (bool_eq29(x,
  y) = true)) and ((not (x = y)) -> (bool_eq29(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE15 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check15 : us_image -> prop

logic attr__ATTRIBUTE_VALUE15 : us_image -> int

logic user_eq25 : integer, integer -> bool

logic dummy40 : integer

type t34b__ref = { t34b__content : integer
}

function t34b__ref___projection(a: t34b__ref) : integer = (a).t34b__content

logic attr__ATTRIBUTE_ADDRESS14 : int

logic temp___1406 : int -> (int,character) farray

axiom def_axiom3 :
  (forall temp___1408:int.
  (forall temp___1409:int.
  ((temp___1406(temp___1408)[temp___1409]) = of_rep(temp___1408))))

axiom msgtostrings__def_axiom :
  (msgtostrings = display__msgtostrings__aggregate_def({ us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___String_Literal_176(void);
  rec__display__msglinet__len = of_rep7(22) } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = blankline; rec__display__msglinet__len =
  blankline1 } } } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text =
  temp___String_Literal_177(void); rec__display__msglinet__len = of_rep7(14)
  } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___String_Literal_178(void);
  rec__display__msglinet__len = of_rep7(11) } } } }, { us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___String_Literal_179(void);
  rec__display__msglinet__len = of_rep7(19) } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___String_Literal_180(void);
  rec__display__msglinet__len = of_rep7(13) } } } }, { us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = blankline; rec__display__msglinet__len =
  blankline1 } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___String_Literal_181(void);
  rec__display__msglinet__len = of_rep7(22) } } } }, { us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___String_Literal_182(void);
  rec__display__msglinet__len = of_rep7(19) } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___String_Literal_183(void);
  rec__display__msglinet__len = of_rep7(11) } } } }, { us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___String_Literal_184(void);
  rec__display__msglinet__len = of_rep7(12) } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___String_Literal_185(void);
  rec__display__msglinet__len = of_rep7(12) } } } }, { us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = blankline; rec__display__msglinet__len =
  blankline1 } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___String_Literal_186(void);
  rec__display__msglinet__len = of_rep7(19) } } } }, { us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = blankline; rec__display__msglinet__len =
  blankline1 } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___String_Literal_187(void);
  rec__display__msglinet__len = of_rep7(13) } } } }))

logic temp___String_Literal_164 : unit -> (int,character) farray

axiom temp___String_Literal_164__def_axiom :
  (((((((((((((((((((((((to_rep((temp___String_Literal_164(void)[1])) = 32) and
  (to_rep((temp___String_Literal_164(void)[2])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[3])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[4])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[5])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[6])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[8])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[9])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[10])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[12])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_164(void)[23])) = 32))

axiom blankline__def_axiom :
  ((blankline = temp___String_Literal_164(void)) and
  (blankline1 = of_rep7(0)))

axiom valid_numberlogentries__post_axiom : true

axiom valid_numberlogentries__def_axiom :
  (forall currentlogfile:int. forall numberlogentries:int.
  (forall usedlogfiles:(int,logfileindext) farray.
  forall usedlogfiles1:logfileindext. forall usedlogfiles2:logfileindext.
  forall usedlogfiles3:logfilecountt.
  (forall logfileentries:(int,fileentrycountt) farray
  [valid_numberlogentries(currentlogfile, numberlogentries, {
  us_split_fields1 = { rec__auditlog__logfilelistt__list = usedlogfiles;
  rec__auditlog__logfilelistt__head = usedlogfiles1;
  rec__auditlog__logfilelistt__lasti = usedlogfiles2;
  rec__auditlog__logfilelistt__length = usedlogfiles3 } }, logfileentries)].
  ((valid_numberlogentries(currentlogfile, numberlogentries, {
  us_split_fields1 = { rec__auditlog__logfilelistt__list = usedlogfiles;
  rec__auditlog__logfilelistt__head = usedlogfiles1;
  rec__auditlog__logfilelistt__lasti = usedlogfiles2;
  rec__auditlog__logfilelistt__length = usedlogfiles3 } },
  logfileentries) = true) <-> ((1 <= to_rep4(usedlogfiles3)) and
  (numberlogentries = (((to_rep4(usedlogfiles3) - 1) * 1024) + to_rep5((logfileentries[currentlogfile])))))))))

axiom nouser__def_axiom : (nouser = temp___String_Literal_136(void))

logic logfilestate__split_fields : logfileindext

logic logfilestate__split_fields1 : logentrycountt

logic logfilestate__split_fields2 : (int,logfileindext) farray

logic logfilestate__split_fields3 : logfileindext

logic logfilestate__split_fields4 : logfileindext

logic logfilestate__split_fields5 : logfilecountt

logic logfilestate__split_fields6 : (int,fileentrycountt) farray

logic auditalarm : int

logic currentdisplay : int

logic c28b__split_fields : (int,character) farray

logic c28b__split_fields1 : scrolltextcount

logic result____split_fields : (int,character) farray

logic result____split_fields1 : scrolltextcount

logic i : int

logic i1 : int

logic o : msgtextcount

logic o1 : (int,character) farray

logic o2 : msgtextcount

logic o3 : (int,character) farray

logic o4 : msgtextcount

logic o5 : (int,character) farray

logic o6 : msgtextcount

logic o7 : (int,character) farray

logic o8 : msgtextcount

logic o9 : msgtextcount

logic o10 : (int,character) farray

logic o11 : msgtextcount

logic o12 : msgtextcount

logic o13 : (int,character) farray

logic o14 : msgtextcount

logic o15 : (int,character) farray

logic o16 : msgtextcount

logic o17 : (int,character) farray

logic o18 : msgtextcount

logic o19 : (int,character) farray

logic o20 : msgtextcount

logic o21 : (int,character) farray

logic o22 : msgtextcount

logic o23 : msgtextcount

logic o24 : (int,character) farray

logic o25 : msgtextcount

logic o26 : msgtextcount

logic o27 : (int,character) farray

logic o28 : msgtextcount

logic o29 : (int,character) farray

logic o30 : msgtextcount

logic o31 : (int,character) farray

logic o32 : msgtextcount

logic o33 : (int,character) farray

logic o34 : msgtextcount

logic o35 : (int,character) farray

logic o36 : msgtextcount

logic o37 : msgtextcount

logic o38 : (int,character) farray

logic o39 : msgtextcount

logic o40 : (int,character) farray

logic o41 : msgtextcount

logic o42 : (int,character) farray

logic o43 : msgtextcount

logic o44 : (int,character) farray

logic o45 : msgtextcount

logic o46 : msgtextcount

logic o47 : (int,character) farray

logic o48 : msgtextcount

logic o49 : msgtextcount

logic o50 : (int,character) farray

logic o51 : msgtextcount

logic o52 : (int,character) farray

logic o53 : msgtextcount

logic o54 : (int,character) farray

logic o55 : msgtextcount

logic o56 : (int,character) farray

logic o57 : msgtextcount

logic o58 : (int,character) farray

logic o59 : msgtextcount

logic o60 : msgtextcount

logic o61 : (int,character) farray

logic o62 : msgtextcount

logic o63 : msgtextcount

logic o64 : (int,character) farray

logic o65 : msgtextcount

logic o66 : (int,character) farray

logic o67 : msgtextcount

logic o68 : (int,character) farray

logic o69 : msgtextcount

logic o70 : (int,character) farray

logic o71 : msgtextcount

logic o72 : (int,character) farray

logic o73 : msgtextcount

logic o74 : msgtextcount

logic o75 : (int,character) farray

logic o76 : msgtextcount

logic o77 : (int,character) farray

logic o78 : msgtextcount

logic o79 : (int,character) farray

logic o80 : msgtextcount

logic o81 : (int,character) farray

logic o82 : msgtextcount

logic o83 : msgtextcount

logic o84 : (int,character) farray

logic o85 : msgtextcount

logic o86 : (int,character) farray

logic o87 : msgtextcount

logic o88 : (int,character) farray

logic o89 : msgtextcount

logic o90 : (int,character) farray

logic o91 : msgtextcount

logic o92 : (int,character) farray

logic o93 : msgtextcount

logic o94 : (int,character) farray

logic o95 : msgtextcount

logic o96 : (int,character) farray

logic o97 : msgtextcount

logic o98 : (int,character) farray

logic o99 : msgtextcount

logic o100 : (int,character) farray

logic o101 : msgtextcount

logic o102 : (int,character) farray

logic o103 : msgtextcount

logic o104 : (int,character) farray

logic o105 : msgtextcount

logic o106 : (int,character) farray

logic o107 : msgtextcount

logic o108 : (int,character) farray

logic o109 : msgtextcount

logic o110 : (int,character) farray

logic o111 : msgtextcount

logic o112 : (int,character) farray

logic o113 : msgtextcount

logic o114 : (int,character) farray

logic o115 : msgtextcount

logic o116 : (int,character) farray

logic o117 : msgtextcount

logic o118 : (int,character) farray

logic o119 : msgtextcount

logic o120 : (int,character) farray

logic o121 : msgtextcount

logic o122 : (int,character) farray

logic o123 : msgtextcount

logic temp___1418 : (int,us_rep4) farray

logic o124 : scrolltextcount

logic o125 : (int,character) farray

logic o126 : scrolltextcount

logic display__setvalue__B30b__result__assume : (int,character) farray

logic display__setvalue__B30b__result__assume1 : scrolltextcount

logic temp___1372 : int

logic temp___1370 : (int,character) farray

logic temp___13701 : scrolltextcount

logic temp___1373 : (int,character) farray

logic temp___13731 : msgtextcount

logic temp___13732 : (int,character) farray

logic temp___13733 : msgtextcount

logic o127 : character

logic o128 : (int,character) farray

logic o129 : (int,character) farray

logic o130 : scrolltextcount

logic temp___1369 : (int,character) farray

logic temp___13691 : scrolltextcount

logic o131 : scrolltextcount

logic o132 : (int,character) farray

logic o133 : scrolltextcount

logic temp___1377 : (int,character) farray

logic temp___13771 : scrolltextcount

logic o134 : character

logic o135 : int

logic o136 : (int,character) farray

logic o137 : (int,character) farray

logic o138 : scrolltextcount

logic temp___1381 : (int,character) farray

logic temp___13811 : scrolltextcount

logic o139 : character

logic o140 : int

logic o141 : (int,character) farray

logic o142 : (int,character) farray

logic o143 : scrolltextcount

logic temp___1385 : (int,character) farray

logic temp___13851 : scrolltextcount

logic o144 : character

logic o145 : int

logic o146 : (int,character) farray

logic o147 : (int,character) farray

logic o148 : scrolltextcount

logic temp___1389 : (int,character) farray

logic temp___13891 : scrolltextcount

logic o149 : int

logic o150 : scrolltextcount

logic o151 : (int,character) farray

logic o152 : scrolltextcount

logic temp___1391 : (int,character) farray

logic temp___13911 : scrolltextcount

logic temp___1399 : int

logic temp___1397 : (int,character) farray

logic temp___13971 : scrolltextcount

logic temp___1400 : (int,character) farray

logic temp___14001 : msgtextcount

logic temp___14002 : (int,character) farray

logic temp___14003 : msgtextcount

logic temp___1394 : int

logic o153 : character

logic o154 : int

logic o155 : (int,character) farray

logic o156 : (int,character) farray

logic o157 : scrolltextcount

logic temp___1396 : (int,character) farray

logic temp___13961 : scrolltextcount

logic o158 : int

logic o159 : scrolltextcount

logic o160 : (int,character) farray

logic o161 : scrolltextcount

logic temp___1404 : (int,character) farray

logic temp___14041 : scrolltextcount

logic result : (int,character) farray

logic result1 : scrolltextcount

logic result____split_fields2 : (int,character) farray

logic result____split_fields3 : scrolltextcount

logic result2 : int

logic i2 : int

logic result____split_fields4 : (int,character) farray

logic result____split_fields5 : scrolltextcount

logic i3 : int

logic result3 : (int,character) farray

logic result4 : scrolltextcount

logic result____split_fields6 : (int,character) farray

logic result____split_fields7 : scrolltextcount

logic result5 : int

logic i4 : int

logic result____split_fields8 : (int,character) farray

logic result____split_fields9 : scrolltextcount

logic i5 : int

logic result____split_fields10 : (int,character) farray

logic result____split_fields11 : scrolltextcount

logic i6 : int

logic result____split_fields12 : (int,character) farray

logic result____split_fields13 : scrolltextcount

logic i7 : int

logic result____split_fields14 : (int,character) farray

logic result____split_fields15 : scrolltextcount

logic i8 : int

logic result____split_fields16 : (int,character) farray

logic result____split_fields17 : scrolltextcount

logic i9 : int

logic result____split_fields18 : (int,character) farray

logic result____split_fields19 : scrolltextcount

logic i10 : int

logic result6 : (int,character) farray

logic result7 : scrolltextcount

logic result____split_fields20 : (int,character) farray

logic result____split_fields21 : scrolltextcount

logic result8 : (int,character) farray

logic result9 : scrolltextcount

logic result____split_fields22 : (int,character) farray

logic result____split_fields23 : scrolltextcount

logic result10 : (int,character) farray

logic result11 : scrolltextcount

logic result____split_fields24 : (int,character) farray

logic result____split_fields25 : scrolltextcount

logic result12 : (int,character) farray

logic result13 : scrolltextcount

logic result____split_fields26 : (int,character) farray

logic result____split_fields27 : scrolltextcount

logic result14 : (int,character) farray

logic result15 : scrolltextcount

logic result____split_fields28 : (int,character) farray

logic result____split_fields29 : scrolltextcount

logic result16 : int

logic i11 : int

logic result____split_fields30 : (int,character) farray

logic result____split_fields31 : scrolltextcount

logic i12 : int

logic result17 : (int,character) farray

logic result18 : scrolltextcount

logic result____split_fields32 : (int,character) farray

logic result____split_fields33 : scrolltextcount

logic result19 : int

logic i13 : int

logic result____split_fields34 : (int,character) farray

logic result____split_fields35 : scrolltextcount

logic i14 : int

logic result____split_fields36 : (int,character) farray

logic result____split_fields37 : scrolltextcount

logic i15 : int

logic result____split_fields38 : (int,character) farray

logic result____split_fields39 : scrolltextcount

logic i16 : int

logic result____split_fields40 : (int,character) farray

logic result____split_fields41 : scrolltextcount

logic i17 : int

logic result____split_fields42 : (int,character) farray

logic result____split_fields43 : scrolltextcount

logic i18 : int

logic result____split_fields44 : (int,character) farray

logic result____split_fields45 : scrolltextcount

logic i19 : int

logic result____split_fields46 : (int,character) farray

logic result____split_fields47 : scrolltextcount

logic i20 : int

logic result____split_fields48 : (int,character) farray

logic result____split_fields49 : scrolltextcount

logic i21 : int

logic result20 : (int,character) farray

logic result21 : scrolltextcount

logic result____split_fields50 : (int,character) farray

logic result____split_fields51 : scrolltextcount

logic result22 : (int,character) farray

logic result23 : scrolltextcount

logic c28b__split_fields2 : (int,character) farray

logic c28b__split_fields3 : scrolltextcount

axiom H : (to_rep7(o83) = 13)

axiom H1 : ((o84 = temp___String_Literal_187(void)) and (o85 = o83))

axiom H2 : ((o86 = o84) and (o87 = o85))

axiom H3 : (((o88 = blankline) and (o89 = blankline1)) and ((o90 = o86) and
  (o91 = o87)))

axiom H4 : (((o92 = o88) and (o93 = o89)) and ((o94 = o90) and (o95 = o91)))

axiom H5 : (to_rep7(o74) = 19)

axiom H6 : ((o75 = temp___String_Literal_186(void)) and (o76 = o74))

axiom H7 : ((o77 = o75) and (o78 = o76))

axiom H8 : (((o79 = blankline) and (o80 = blankline1)) and ((o81 = o77) and
  (o82 = o78)))

axiom H9 : (((o96 = o79) and (o97 = o80)) and ((o98 = o81) and (o99 = o82)))

axiom H10 : (to_rep7(o63) = 12)

axiom H11 : ((o64 = temp___String_Literal_185(void)) and (o65 = o63))

axiom H12 : ((o66 = o64) and (o67 = o65))

axiom H13 : (to_rep7(o60) = 12)

axiom H14 : ((o61 = temp___String_Literal_184(void)) and (o62 = o60))

axiom H15 : ((o68 = o61) and (o69 = o62))

axiom H16 : (((o70 = o68) and (o71 = o69)) and ((o72 = o66) and (o73 = o67)))

axiom H17 : (((o100 = o70) and (o101 = o71)) and ((o102 = o72) and
  (o103 = o73)))

axiom H18 : (to_rep7(o49) = 11)

axiom H19 : ((o50 = temp___String_Literal_183(void)) and (o51 = o49))

axiom H20 : ((o52 = o50) and (o53 = o51))

axiom H21 : (to_rep7(o46) = 19)

axiom H22 : ((o47 = temp___String_Literal_182(void)) and (o48 = o46))

axiom H23 : ((o54 = o47) and (o55 = o48))

axiom H24 : (((o56 = o54) and (o57 = o55)) and ((o58 = o52) and (o59 = o53)))

axiom H25 : (((o104 = o56) and (o105 = o57)) and ((o106 = o58) and
  (o107 = o59)))

axiom H26 : (to_rep7(o37) = 22)

axiom H27 : ((o38 = temp___String_Literal_181(void)) and (o39 = o37))

axiom H28 : ((o40 = o38) and (o41 = o39))

axiom H29 : (((o42 = blankline) and (o43 = blankline1)) and ((o44 = o40) and
  (o45 = o41)))

axiom H30 : (((o108 = o42) and (o109 = o43)) and ((o110 = o44) and
  (o111 = o45)))

axiom H31 : (to_rep7(o26) = 13)

axiom H32 : ((o27 = temp___String_Literal_180(void)) and (o28 = o26))

axiom H33 : ((o29 = o27) and (o30 = o28))

axiom H34 : (to_rep7(o23) = 19)

axiom H35 : ((o24 = temp___String_Literal_179(void)) and (o25 = o23))

axiom H36 : ((o31 = o24) and (o32 = o25))

axiom H37 : (((o33 = o31) and (o34 = o32)) and ((o35 = o29) and (o36 = o30)))

axiom H38 : (((o112 = o33) and (o113 = o34)) and ((o114 = o35) and
  (o115 = o36)))

axiom H39 : (to_rep7(o12) = 11)

axiom H40 : ((o13 = temp___String_Literal_178(void)) and (o14 = o12))

axiom H41 : ((o15 = o13) and (o16 = o14))

axiom H42 : (to_rep7(o9) = 14)

axiom H43 : ((o10 = temp___String_Literal_177(void)) and (o11 = o9))

axiom H44 : ((o17 = o10) and (o18 = o11))

axiom H45 : (((o19 = o17) and (o20 = o18)) and ((o21 = o15) and (o22 = o16)))

axiom H46 : (((o116 = o19) and (o117 = o20)) and ((o118 = o21) and
  (o119 = o22)))

axiom H47 : (to_rep7(o) = 22)

axiom H48 : (temp___String_Literal_176(void) = o1)

axiom H49 : (o = o2)

axiom H50 : (o3 = o1)

axiom H51 : (o4 = o2)

axiom H52 : (o5 = o3)

axiom H53 : (o6 = o4)

axiom H54 : ((blankline = o7) and (blankline1 = o8))

axiom H55 : (((o120 = o5) and (o121 = o6)) and ((o122 = o7) and (o123 = o8)))

axiom H56 : (temp___1418 = display__msgtostrings__aggregate_def({
  us_split_fields7 = { rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = o120; rec__display__msglinet__len = o121 }
  }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = o122; rec__display__msglinet__len = o123 } }
  } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = o116;
  rec__display__msglinet__len = o117 } }; rec__display__msgstrt__bottom = {
  us_split_fields5 = { rec__display__msglinet__text = o118;
  rec__display__msglinet__len = o119 } } } }, { us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = o112; rec__display__msglinet__len = o113 }
  }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = o114; rec__display__msglinet__len = o115 } }
  } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = o108;
  rec__display__msglinet__len = o109 } }; rec__display__msgstrt__bottom = {
  us_split_fields5 = { rec__display__msglinet__text = o110;
  rec__display__msglinet__len = o111 } } } }, { us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = o104; rec__display__msglinet__len = o105 }
  }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = o106; rec__display__msglinet__len = o107 } }
  } }, { us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = o100;
  rec__display__msglinet__len = o101 } }; rec__display__msgstrt__bottom = {
  us_split_fields5 = { rec__display__msglinet__text = o102;
  rec__display__msglinet__len = o103 } } } }, { us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = o96; rec__display__msglinet__len = o97 } };
  rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = o98; rec__display__msglinet__len = o99 } } }
  }, { us_split_fields7 = { rec__display__msgstrt__top = { us_split_fields5 =
  { rec__display__msglinet__text = o92; rec__display__msglinet__len = o93 }
  }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = o94; rec__display__msglinet__len = o95 } } }
  }))

axiom H57 : (temp___1418 = msgtostrings)

axiom H58 : (temp___String_Literal_136(void) = nouser)

axiom H59 : in_range10(currentdisplay)

axiom H60 : in_range10(msg)

axiom H61 : (valid_numberlogentries(to_rep2(logfilestate__split_fields),
  to_rep3(logfilestate__split_fields1), { us_split_fields1 = {
  rec__auditlog__logfilelistt__list = logfilestate__split_fields2;
  rec__auditlog__logfilelistt__head = logfilestate__split_fields3;
  rec__auditlog__logfilelistt__lasti = logfilestate__split_fields4;
  rec__auditlog__logfilelistt__length = logfilestate__split_fields5 } },
  logfilestate__split_fields6) = true)

axiom H62 : in_range4(auditalarm)

axiom H63 : (not (msg = currentdisplay))

axiom H64 : ((msgtostrings[msg]) = { us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = c27b; rec__display__msglinet__len = c27b1 }
  }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = c27b2; rec__display__msglinet__len = c27b3 }
  } } })

axiom H65 : (to_rep8(o124) = 0)

axiom H66 : ((o125 = temp___1406(32)) and (o126 = o124))

axiom H67 : ((display__setvalue__B30b__result__assume = o125) and
  (display__setvalue__B30b__result__assume1 = o126))

axiom H68 : ((result = result____split_fields) and
  (result1 = result____split_fields1))

axiom H69 :
  ((result____split_fields2 = display__setvalue__B30b__result__assume) and
  (result____split_fields3 = display__setvalue__B30b__result__assume1))

axiom H70 : (result2 = i)

axiom H71 : (i2 = 1)

axiom H72 : (((1 <= i2) and (i2 <= to_rep7(c27b1))) ->
  (((temp___1372 = i2) and (((temp___1370 = result____split_fields2) and
  (temp___13701 = result____split_fields3)) and ((((temp___1373 = c27b) and
  (temp___13731 = c27b1)) and ((temp___13732 = c27b2) and
  (temp___13733 = c27b3))) and ((((1 <= i3) and (i3 <= to_rep7(c27b1))) and
  (bool_eq23({ us_split_fields7 = { rec__display__msgstrt__top = {
  us_split_fields5 = { rec__display__msglinet__text = c27b;
  rec__display__msglinet__len = c27b1 } }; rec__display__msgstrt__bottom = {
  us_split_fields5 = { rec__display__msglinet__text = c27b2;
  rec__display__msglinet__len = c27b3 } } } }, { us_split_fields7 = {
  rec__display__msgstrt__top = { us_split_fields5 = {
  rec__display__msglinet__text = temp___1373; rec__display__msglinet__len =
  temp___13731 } }; rec__display__msgstrt__bottom = { us_split_fields5 = {
  rec__display__msglinet__text = temp___13732; rec__display__msglinet__len =
  temp___13733 } } } }) = true)) and
  (((((forall temp___1371:int. (((1 <= temp___1371) and
      (temp___1371 <= 50)) -> ((i3 <= temp___1371) ->
      ((result____split_fields4[temp___1371]) = (temp___1370[temp___1371]))))) and
  (result____split_fields5 = temp___13701)) and ((1 <= to_rep7(c27b1)) ->
  dynamic_property1(1, to_rep7(c27b1), i3))) and ((1 <= i3) and
  (i3 <= to_rep7(c27b1)))) and ((((((to_rep(o127) = to_rep((c27b[i3]))) and
  (o128 = (result____split_fields4[i3 <- o127]))) and ((o129 = o128) and
  (o130 = result____split_fields5))) and ((temp___1369 = o129) and
  (temp___13691 = o130))) and (((result3 = result____split_fields4) and
  (result4 = result____split_fields5)) and
  ((result____split_fields6 = temp___1369) and
  (result____split_fields7 = temp___13691)))) and
  (i3 = to_rep7(c27b1)))))))) and (((i7 = i3) and
  ((result____split_fields12 = result____split_fields6) and
  (result____split_fields13 = result____split_fields7))) and ((i8 = i3) and
  ((result____split_fields14 = result____split_fields6) and
  (result____split_fields15 = result____split_fields7))))))

axiom H73 : (((1 <= i2) and (i2 <= to_rep7(c27b1))) -> (i9 = i7))

axiom H74 : (((1 <= i2) and (i2 <= to_rep7(c27b1))) ->
  ((result____split_fields16 = result____split_fields12) and
  (result____split_fields17 = result____split_fields13)))

axiom H75 : (((1 <= i2) and (i2 <= to_rep7(c27b1))) -> (i10 = i8))

axiom H76 : (((1 <= i2) and (i2 <= to_rep7(c27b1))) ->
  ((result____split_fields18 = result____split_fields14) and
  (result____split_fields19 = result____split_fields15)))

axiom H77 : ((not ((1 <= i2) and (i2 <= to_rep7(c27b1)))) -> (i9 = i2))

axiom H78 : ((not ((1 <= i2) and (i2 <= to_rep7(c27b1)))) ->
  ((result____split_fields16 = result____split_fields2) and
  (result____split_fields17 = result____split_fields3)))

axiom H79 : ((not ((1 <= i2) and (i2 <= to_rep7(c27b1)))) -> (i10 = i2))

axiom H80 : ((not ((1 <= i2) and (i2 <= to_rep7(c27b1)))) ->
  ((result____split_fields18 = result____split_fields2) and
  (result____split_fields19 = result____split_fields3)))

axiom H81 : (to_rep8(o131) = to_rep7(c27b1))

axiom H82 : ((o132 = result____split_fields16) and (o133 = o131))

axiom H83 : ((temp___1377 = o132) and (temp___13771 = o133))

axiom H84 : ((result6 = result____split_fields16) and
  (result7 = result____split_fields17))

axiom H85 : ((result____split_fields20 = temp___1377) and
  (result____split_fields21 = temp___13771))

axiom H86 : (to_rep(o134) = 32)

axiom H87 : ((1 <= (to_rep8(result____split_fields21) + 1)) and
  ((to_rep8(result____split_fields21) + 1) <= 50))

axiom H88 : (o135 = (to_rep8(result____split_fields21) + 1))

axiom H89 : (o136 = (result____split_fields20[o135 <- o134]))

axiom H90 : ((o137 = o136) and (o138 = result____split_fields21))

axiom H91 : ((temp___1381 = o137) and (temp___13811 = o138))

axiom H92 : ((result8 = result____split_fields20) and
  (result9 = result____split_fields21))

axiom H93 : ((result____split_fields22 = temp___1381) and
  (result____split_fields23 = temp___13811))

axiom H94 : (to_rep(o139) = 47)

axiom H95 : ((1 <= (to_rep8(result____split_fields23) + 2)) and
  ((to_rep8(result____split_fields23) + 2) <= 50))

axiom H96 : (o140 = (to_rep8(result____split_fields23) + 2))

axiom H97 : (o141 = (result____split_fields22[o140 <- o139]))

axiom H98 : ((o142 = o141) and (o143 = result____split_fields23))

axiom H99 : ((temp___1385 = o142) and (temp___13851 = o143))

axiom H100 : ((result10 = result____split_fields22) and
  (result11 = result____split_fields23))

axiom H101 : ((result____split_fields24 = temp___1385) and
  (result____split_fields25 = temp___13851))

axiom H102 : (to_rep(o144) = 32)

axiom H103 : ((1 <= (to_rep8(result____split_fields25) + 3)) and
  ((to_rep8(result____split_fields25) + 3) <= 50))

axiom H104 : (o145 = (to_rep8(result____split_fields25) + 3))

axiom H105 : (o146 = (result____split_fields24[o145 <- o144]))

axiom H106 : ((o147 = o146) and (o148 = result____split_fields25))

axiom H107 : ((temp___1389 = o147) and (temp___13891 = o148))

axiom H108 : ((result12 = result____split_fields24) and
  (result13 = result____split_fields25))

axiom H109 : ((result____split_fields26 = temp___1389) and
  (result____split_fields27 = temp___13891))

axiom H110 : ((o149 = (to_rep8(result____split_fields27) + 3)) and
  in_range12((to_rep8(result____split_fields27) + 3)))

axiom H111 : (to_rep8(o150) = o149)

axiom H112 : ((o151 = result____split_fields26) and (o152 = o150))

axiom H113 : ((temp___1391 = o151) and (temp___13911 = o152))

axiom H114 : ((result14 = result____split_fields26) and
  (result15 = result____split_fields27))

axiom H115 : ((result____split_fields28 = temp___1391) and
  (result____split_fields29 = temp___13911))

axiom H116 : (1 <= to_rep7(c27b3))

 (* File "display.adb", line 93, characters 0-0 *)
goal WP_parameter_def : (1 <= 1)
