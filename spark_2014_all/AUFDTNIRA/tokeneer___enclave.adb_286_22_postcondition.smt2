(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort filestatust 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (filestatust filestatust) Bool)
(declare-const dummy filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep (filestatust) Int)
(declare-fun of_rep (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x filestatust)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int filestatust))))))
(declare-fun slide ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_198 Int)) (=> (and (<= a__first temp___idx_198) (<= temp___idx_198 a__last)) (= (to_rep (select a temp___idx_198)) (to_rep (select b (+ (- b__first a__first) temp___idx_198))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_198 Int)) (=> (and (<= a__first temp___idx_198) (<= temp___idx_198 a__last)) (= (to_rep (select a temp___idx_198)) (to_rep (select b (+ (- b__first a__first) temp___idx_198)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort logfileindext 0)
(declare-fun logfileindextqtint (logfileindext) Int)
(assert (forall ((i logfileindext)) (and (<= 1 (logfileindextqtint i)) (<= (logfileindextqtint i) 17))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (logfileindext logfileindext) Bool)
(declare-const dummy1 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(define-fun to_rep1 ((x logfileindext)) Int (logfileindextqtint x))
(declare-fun of_rep1 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x logfileindext)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort logentrycountt 0)
(declare-fun logentrycounttqtint (logentrycountt) Int)
(assert (forall ((i logentrycountt)) (and (<= 0 (logentrycounttqtint i)) (<= (logentrycounttqtint i) 17408))))
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (logentrycountt logentrycountt) Bool)
(declare-const dummy2 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(define-fun to_rep2 ((x logentrycountt)) Int (logentrycounttqtint x))
(declare-fun of_rep2 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x logentrycountt)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort logfilecountt 0)
(declare-fun logfilecounttqtint (logfilecountt) Int)
(assert (forall ((i logfilecountt)) (and (<= 0 (logfilecounttqtint i)) (<= (logfilecounttqtint i) 17))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (logfilecountt logfilecountt) Bool)
(declare-const dummy3 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(define-fun to_rep3 ((x logfilecountt)) Int (logfilecounttqtint x))
(declare-fun of_rep3 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x logfilecountt)) (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_195 Int)) (=> (and (<= a__first temp___idx_195) (<= temp___idx_195 a__last)) (= (to_rep1 (select a temp___idx_195)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_195))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_195 Int)) (=> (and (<= a__first temp___idx_195) (<= temp___idx_195 a__last)) (= (to_rep1 (select a temp___idx_195)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_195)))))))))))
(declare-const dummy4 (Array Int logfileindext))
(declare-const value__size Int)
(declare-fun object__size ((Array Int logfileindext)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int logfileindext)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int logfileindext)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment a))))
(declare-fun user_eq4 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__3__projection ((a us_split_fields)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___9__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___10__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (bool_eq1 (rec__auditlog__logfilelistt__list (us_split_fields1 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields1 b)) 1 17) true) (= (to_rep1 (rec__auditlog__logfilelistt__head (us_split_fields1 a))) (to_rep1 (rec__auditlog__logfilelistt__head (us_split_fields1 b))))) (= (to_rep1 (rec__auditlog__logfilelistt__lasti (us_split_fields1 a))) (to_rep1 (rec__auditlog__logfilelistt__lasti (us_split_fields1 b))))) (= (to_rep3 (rec__auditlog__logfilelistt__length (us_split_fields1 a))) (to_rep3 (rec__auditlog__logfilelistt__length (us_split_fields1 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(declare-fun fileentrycounttqtint (fileentrycountt) Int)
(assert (forall ((i fileentrycountt)) (and (<= 0 (fileentrycounttqtint i)) (<= (fileentrycounttqtint i) 1024))))
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy6 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(define-fun to_rep4 ((x fileentrycountt)) Int (fileentrycounttqtint x))
(declare-fun of_rep4 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range5 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq3 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_196 Int)) (=> (and (<= a__first temp___idx_196) (<= temp___idx_196 a__last)) (= (to_rep4 (select a temp___idx_196)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_196))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_196 Int)) (=> (and (<= a__first temp___idx_196) (<= temp___idx_196 a__last)) (= (to_rep4 (select a temp___idx_196)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_196)))))))))))
(declare-const dummy7 (Array Int fileentrycountt))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq7 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields2)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields2)) us_rep (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields2)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___10__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___11__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq4 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (to_rep1 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 a))) (to_rep1 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 b)))) (= (to_rep2 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 a))) (to_rep2 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 b))))) (= (bool_eq2 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 b))) true)) (= (bool_eq3 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 b)) 1 17) true)) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq8 (us_rep1 us_rep1) Bool)
(declare-const dummy8 us_rep1)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep1)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep1 (logfilestatet__content a))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep2 0)
(declare-fun bool_eq5 (us_rep2 us_rep2) Bool)
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep2) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep2) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))
(declare-fun user_eq9 (us_rep2 us_rep2) Bool)
(declare-const dummy9 us_rep2)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep2)))))
(define-fun t__ref___2__projection ((a t__ref)) us_rep2 (t__content a))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep2))))))
(declare-fun slide3 ((Array Int us_rep2) Int Int) (Array Int us_rep2))
(assert (forall ((a (Array Int us_rep2))) (forall ((first Int)) (! (= (slide3 a first first) a) :pattern ((slide3 a first first))))))
(assert (forall ((a (Array Int us_rep2))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq6 ((a (Array Int us_rep2)) (a__first Int) (a__last Int) (b (Array Int us_rep2)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_197 Int)) (=> (and (<= a__first temp___idx_197) (<= temp___idx_197 a__last)) (= (bool_eq5 (select a temp___idx_197) (select b (+ (- b__first a__first) temp___idx_197))) true)))) true false))
(assert (forall ((a (Array Int us_rep2)) (b (Array Int us_rep2))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_197 Int)) (=> (and (<= a__first temp___idx_197) (<= temp___idx_197 a__last)) (= (bool_eq5 (select a temp___idx_197) (select b (+ (- b__first a__first) temp___idx_197))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort statust 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq10 (statust statust) Bool)
(declare-const dummy10 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant ((temp___expr_548 Int) (temp___is_init_544 Bool) (temp___skip_constant_545 Bool) (temp___do_toplevel_546 Bool) (temp___do_typ_inv_547 Bool)) Bool (=> (or (= temp___is_init_544 true) (<= 0 1)) (in_range6 temp___expr_548)))
(declare-fun valid_numberlogentries (Int Int us_rep (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep (Array Int fileentrycountt)) Bool)
(declare-fun temp_____aggregate_def_1344 (Int) (Array Int logfileindext))
(declare-fun temp_____aggregate_def_1348 (Int) (Array Int fileentrycountt))
(define-fun dynamic_invariant1 ((temp___expr_1338 us_rep1) (temp___is_init_1334 Bool) (temp___skip_constant_1335 Bool) (temp___do_toplevel_1336 Bool) (temp___do_typ_inv_1337 Bool)) Bool (=> (= temp___do_typ_inv_1337 true) (= (valid_numberlogentries (to_rep1 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1338))) (to_rep2 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1338))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1338)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1338))) true)))
(declare-const rliteral logfileindext)
(assert (= (logfileindextqtint rliteral) 1))
(declare-const rliteral1 logfilecountt)
(assert (= (logfilecounttqtint rliteral1) 1))
(define-fun default_initial_assumption ((temp___expr_1342 us_rep1) (temp___skip_top_level_1343 Bool)) Bool (and (and (and (= (to_rep1 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1342))) 1) (= (to_rep2 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1342))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1342)) (mk___rep (mk___split_fields (temp_____aggregate_def_1344 1) rliteral rliteral rliteral1)))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1342)) (temp_____aggregate_def_1348 0))))
(define-fun type_invariant ((temp___1352 us_rep1)) Bool (= (valid_numberlogentries (to_rep1 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___1352))) (to_rep2 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___1352))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___1352)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___1352))) true))
(declare-fun ispresent (us_private) Bool)
(declare-fun ispresent__function_guard (Bool us_private) Bool)
(declare-sort statust1 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 8)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq11 (statust1 statust1) Bool)
(declare-const dummy11 statust1)
(declare-datatypes () ((statust__ref1 (mk_statust__ref1 (statust__content1 statust1)))))
(define-fun statust__ref___2__projection ((a statust__ref1)) statust1 (statust__content1 a))
(define-fun dynamic_invariant2 ((temp___expr_2867 Int) (temp___is_init_2863 Bool) (temp___skip_constant_2864 Bool) (temp___do_toplevel_2865 Bool) (temp___do_typ_inv_2866 Bool)) Bool (=> (or (= temp___is_init_2863 true) (<= 0 8)) (in_range7 temp___expr_2867)))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_invariant3 ((temp___expr_1276 Int) (temp___is_init_1272 Bool) (temp___skip_constant_1273 Bool) (temp___do_toplevel_1274 Bool) (temp___do_typ_inv_1275 Bool)) Bool (=> (or (= temp___is_init_1272 true) (<= 0 17)) (in_range4 temp___expr_1276)))
(define-fun dynamic_invariant4 ((temp___expr_1283 Int) (temp___is_init_1279 Bool) (temp___skip_constant_1280 Bool) (temp___do_toplevel_1281 Bool) (temp___do_typ_inv_1282 Bool)) Bool (=> (or (= temp___is_init_1279 true) (<= 1 17)) (in_range2 temp___expr_1283)))
(define-fun dynamic_invariant5 ((temp___expr_1409 Int) (temp___is_init_1405 Bool) (temp___skip_constant_1406 Bool) (temp___do_toplevel_1407 Bool) (temp___do_typ_inv_1408 Bool)) Bool (=> (or (= temp___is_init_1405 true) (<= 0 2)) (in_range1 temp___expr_1409)))
(define-fun dynamic_invariant6 ((temp___expr_1290 Int) (temp___is_init_1286 Bool) (temp___skip_constant_1287 Bool) (temp___do_toplevel_1288 Bool) (temp___do_typ_inv_1289 Bool)) Bool (=> (or (= temp___is_init_1286 true) (<= 0 17408)) (in_range3 temp___expr_1290)))
(define-fun dynamic_invariant7 ((temp___expr_1321 Int) (temp___is_init_1317 Bool) (temp___skip_constant_1318 Bool) (temp___do_toplevel_1319 Bool) (temp___do_typ_inv_1320 Bool)) Bool (=> (or (= temp___is_init_1317 true) (<= 0 1024)) (in_range5 temp___expr_1321)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep3 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep3 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles))) 1) 1024) (to_rep4 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(declare-const rliteral2 fileentrycountt)
(assert (= (fileentrycounttqtint rliteral2) 0))
(assert (forall ((temp___1350 Int)) (=> (dynamic_invariant7 temp___1350 true true true true) (forall ((temp___1351 Int)) (= (select (temp_____aggregate_def_1348 temp___1350) temp___1351) rliteral2)))))
(assert (forall ((temp___1346 Int)) (=> (dynamic_invariant4 temp___1346 true true true true) (forall ((temp___1347 Int)) (= (select (temp_____aggregate_def_1344 temp___1346) temp___1347) rliteral)))))
(declare-const logfiles (Array Int us_rep2))
(declare-const logfilesstatus (Array Int filestatust))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const auditsystemfault Bool)
(declare-const status Int)
(declare-const filestate us_private)
(declare-const state us_private)
(declare-const state1 us_private)
(declare-const state2 us_private)
(declare-const state3 us_private)
(declare-const o Bool)
(declare-const logfiles1 (Array Int us_rep2))
(declare-const logfilesstatus1 (Array Int filestatust))
(declare-const logfilestate__split_fields7 logfileindext)
(declare-const logfilestate__split_fields8 logentrycountt)
(declare-const logfilestate__split_fields9 (Array Int logfileindext))
(declare-const logfilestate__split_fields10 logfileindext)
(declare-const logfilestate__split_fields11 logfileindext)
(declare-const logfilestate__split_fields12 logfilecountt)
(declare-const logfilestate__split_fields13 (Array Int fileentrycountt))
(declare-const auditalarm1 Int)
(declare-const auditsystemfault1 Bool)
(declare-const status1 Int)
(declare-const filestate1 us_private)
(declare-const state4 us_private)
(declare-const state5 us_private)
(declare-const state6 us_private)
(declare-const result Bool)
(declare-const logfilestate__split_fields14 logfileindext)
(declare-const logfilestate__split_fields15 logentrycountt)
(declare-const logfilestate__split_fields16 (Array Int logfileindext))
(declare-const logfilestate__split_fields17 logfileindext)
(declare-const logfilestate__split_fields18 logfileindext)
(declare-const logfilestate__split_fields19 logfilecountt)
(declare-const logfilestate__split_fields20 (Array Int fileentrycountt))
(declare-const auditalarm2 Int)
(declare-const state7 us_private)
(declare-const logfiles2 (Array Int us_rep2))
(declare-const logfilesstatus2 (Array Int filestatust))
(declare-const logfilestate__split_fields21 logfileindext)
(declare-const logfilestate__split_fields22 logentrycountt)
(declare-const logfilestate__split_fields23 (Array Int logfileindext))
(declare-const logfilestate__split_fields24 logfileindext)
(declare-const logfilestate__split_fields25 logfileindext)
(declare-const logfilestate__split_fields26 logfilecountt)
(declare-const logfilestate__split_fields27 (Array Int fileentrycountt))
(declare-const auditalarm3 Int)
(declare-const auditsystemfault2 Bool)
(declare-const filestate2 us_private)
(declare-const state8 us_private)
(declare-const state9 us_private)
(declare-const result1 int__ref)
(declare-const status2 Int)
(declare-const logfiles3 map__ref3)
(declare-const logfilesstatus3 map__ref)
(declare-const logfilestate__split_fields28 us_split_fields__ref1)
(declare-const auditalarm4 int__ref)
(declare-const auditsystemfault3 bool__ref)
(declare-const status3 int__ref)
(declare-const filestate3 us_private__ref)
(declare-const state10 us_private__ref)
(declare-const state11 us_private__ref)
(declare-const state12 us_private__ref)
(declare-const logfiles4 (Array Int us_rep2))
(declare-const logfilesstatus4 (Array Int filestatust))
(declare-const logfilestate__split_fields29 us_split_fields2)
(declare-const auditalarm5 Int)
(declare-const auditsystemfault4 Bool)
(declare-const status4 Int)
(declare-const filestate4 us_private)
(declare-const state13 us_private)
(declare-const state14 us_private)
(declare-const state15 us_private)
(define-fun logfilestate__split_fields30 () us_split_fields2 (mk___split_fields1 logfilestate__split_fields21 logfilestate__split_fields22 (mk___rep (mk___split_fields logfilestate__split_fields23 logfilestate__split_fields24 logfilestate__split_fields25 logfilestate__split_fields26)) logfilestate__split_fields27))
(assert (in_range7 status))
(assert (= (valid_numberlogentries (to_rep1 logfilestate__split_fields) (to_rep2 logfilestate__split_fields1) (mk___rep (mk___split_fields logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range6 auditalarm))
(assert (= status 2))
(assert (= o (ispresent state2)))
(assert (= result (ite (not (= o true)) true false)))
(assert (=> (= result true) (and (= (valid_numberlogentries (to_rep1 logfilestate__split_fields14) (to_rep2 logfilestate__split_fields15) (mk___rep (mk___split_fields logfilestate__split_fields16 logfilestate__split_fields17 logfilestate__split_fields18 logfilestate__split_fields19)) logfilestate__split_fields20) true) (in_range6 auditalarm2))))
(assert (=> (= result true) (and (= (valid_numberlogentries (to_rep1 logfilestate__split_fields21) (to_rep2 logfilestate__split_fields22) (mk___rep (mk___split_fields logfilestate__split_fields23 logfilestate__split_fields24 logfilestate__split_fields25 logfilestate__split_fields26)) logfilestate__split_fields27) true) (in_range6 auditalarm3))))
(assert (=> (= result true) (= result1 (mk_int__ref status))))
(assert (=> (= result true) (= status2 0)))
(assert (=> (not (= result true)) (= state7 state3)))
(assert (=> (not (= result true)) (= state9 state1)))
(assert (=> (not (= result true)) (= state8 state)))
(assert (=> (not (= result true)) (= filestate2 filestate)))
(assert (=> (not (= result true)) (= status2 status)))
(assert (=> (not (= result true)) (= auditsystemfault2 auditsystemfault)))
(assert (=> (not (= result true)) (= auditalarm3 auditalarm)))
(assert (=> (not (= result true)) (= logfilestate__split_fields logfilestate__split_fields21)))
(assert (=> (not (= result true)) (= logfilestate__split_fields1 logfilestate__split_fields22)))
(assert (=> (not (= result true)) (= logfilestate__split_fields2 logfilestate__split_fields23)))
(assert (=> (not (= result true)) (= logfilestate__split_fields3 logfilestate__split_fields24)))
(assert (=> (not (= result true)) (= logfilestate__split_fields4 logfilestate__split_fields25)))
(assert (=> (not (= result true)) (= logfilestate__split_fields5 logfilestate__split_fields26)))
(assert (=> (not (= result true)) (= logfilestate__split_fields6 logfilestate__split_fields27)))
(assert (=> (not (= result true)) (= logfilesstatus2 logfilesstatus)))
(assert (=> (not (= result true)) (= logfiles2 logfiles)))
(assert (=> (not (= result true)) (= state7 state6)))
(assert (=> (not (= result true)) (= state9 state5)))
(assert (=> (not (= result true)) (= state8 state4)))
(assert (=> (not (= result true)) (= filestate2 filestate1)))
(assert (=> (not (= result true)) (= status2 status1)))
(assert (=> (not (= result true)) (= auditsystemfault2 auditsystemfault1)))
(assert (=> (not (= result true)) (= auditalarm3 auditalarm1)))
(assert (=> (not (= result true)) (= logfilestate__split_fields7 logfilestate__split_fields21)))
(assert (=> (not (= result true)) (= logfilestate__split_fields8 logfilestate__split_fields22)))
(assert (=> (not (= result true)) (= logfilestate__split_fields9 logfilestate__split_fields23)))
(assert (=> (not (= result true)) (= logfilestate__split_fields10 logfilestate__split_fields24)))
(assert (=> (not (= result true)) (= logfilestate__split_fields11 logfilestate__split_fields25)))
(assert (=> (not (= result true)) (= logfilestate__split_fields12 logfilestate__split_fields26)))
(assert (=> (not (= result true)) (= logfilestate__split_fields13 logfilestate__split_fields27)))
(assert (=> (not (= result true)) (= logfilesstatus2 logfilesstatus1)))
(assert (=> (not (= result true)) (= logfiles2 logfiles1)))
(assert (= state12 (mk___private__ref state7)))
(assert (= state11 (mk___private__ref state9)))
(assert (= state10 (mk___private__ref state8)))
(assert (= filestate3 (mk___private__ref filestate2)))
(assert (= status3 (mk_int__ref status2)))
(assert (= auditsystemfault3 (mk_bool__ref auditsystemfault2)))
(assert (= auditalarm4 (mk_int__ref auditalarm3)))
(assert (= logfilestate__split_fields28 (mk___split_fields__ref1 logfilestate__split_fields30)))
(assert (= logfilesstatus3 (mk_map__ref logfilesstatus2)))
(assert (= logfiles3 (mk_map__ref3 logfiles2)))
(assert (= state15 state7))
(assert (= state14 state9))
(assert (= state13 state8))
(assert (= filestate4 filestate2))
(assert (= status4 status2))
(assert (= auditsystemfault4 auditsystemfault2))
(assert (= auditalarm5 auditalarm3))
(assert (= logfilestate__split_fields29 logfilestate__split_fields30))
(assert (= logfilesstatus4 logfilesstatus2))
(assert (= logfiles4 logfiles2))
(assert (not (or (= (int__content status3) 2) (= (int__content status3) 0))))
(check-sat)
(exit)
