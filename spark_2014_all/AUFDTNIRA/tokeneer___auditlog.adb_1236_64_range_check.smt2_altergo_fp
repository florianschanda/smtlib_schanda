(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq5 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def4 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_78:int. ((((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) and
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))) or
  (not ((a__first <= temp___idx_78) and (temp___idx_78 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))))))))

logic compare : (int,character) farray, int, int, (int,character) farray,
  int, int -> int

axiom compare_def_eq :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq5(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq5(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq5(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,character) farray -> int

logic value__component__size : int

logic object__component__size : (int,character) farray -> int

logic value__alignment : int

logic object__alignment : (int,character) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,character) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,character) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,character) farray. (0 <= object__alignment(a)))

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : (int,character) farray

logic dummy4 : t

logic to_string : us_image -> us_t

logic from_string : us_t -> us_image

type string__ref = { string__content : us_t
}

function string__ref___projection(a: string__ref) : us_t =
  (a).string__content

type statust

predicate in_range4(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : statust, statust -> bool

logic dummy5 : statust

type statust__ref = { statust__content : statust
}

function statust__ref___projection(a: statust__ref) : statust =
  (a).statust__content

type fileentrycountt

predicate in_range5(x: int) = ((0 <= x) and (x <= 1024))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : fileentrycountt, fileentrycountt -> bool

logic dummy6 : fileentrycountt

type fileentrycountt__ref = { fileentrycountt__content : fileentrycountt
}

function fileentrycountt__ref___projection(a: fileentrycountt__ref) : fileentrycountt =
  (a).fileentrycountt__content

logic to_rep2 : fileentrycountt -> int

logic of_rep2 : int -> fileentrycountt

axiom inversion_axiom2 :
  (forall x:fileentrycountt [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:fileentrycountt [to_rep2(x)]. in_range5(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range5(x) ->
  (to_rep2(of_rep2(x)) = x)))

type map__ref1 = { map__content1 : (int,fileentrycountt) farray
}

logic slide1 : (int,fileentrycountt) farray, int,
  int -> (int,fileentrycountt) farray

axiom slide_eq1 :
  (forall a:(int,fileentrycountt) farray.
  (forall first2:int [slide1(a, first2, first2)]. (slide1(a, first2,
  first2) = a)))

axiom slide_def1 :
  (forall a:(int,fileentrycountt) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat1 : (int,fileentrycountt) farray, int, int,
  (int,fileentrycountt) farray, int, int -> (int,fileentrycountt) farray

axiom concat_def1 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat1(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat1(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat1(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton1 : fileentrycountt, int -> (int,fileentrycountt) farray

axiom singleton_def1 :
  (forall v:fileentrycountt.
  (forall i:int [(singleton1(v, i)[i])]. ((singleton1(v, i)[i]) = v)))

logic bool_eq9 : (int,fileentrycountt) farray, int, int,
  (int,fileentrycountt) farray, int, int -> bool

axiom bool_eq_def7 :
  (forall a:(int,fileentrycountt) farray. forall a__first:int.
  forall a__last:int. forall b:(int,fileentrycountt) farray.
  forall b__first:int. forall b__last:int [bool_eq9(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_162:int. ((((a__first <= temp___idx_162) and
  (temp___idx_162 <= a__last)) and
  (to_rep2((a[temp___idx_162])) = to_rep2((b[((b__first - a__first) + temp___idx_162)])))) or
  (not ((a__first <= temp___idx_162) and (temp___idx_162 <= a__last)))))) ->
  (bool_eq9(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_162:int. (((a__first <= temp___idx_162) and
  (temp___idx_162 <= a__last)) ->
  (to_rep2((a[temp___idx_162])) = to_rep2((b[((b__first - a__first) + temp___idx_162)]))))))) ->
  (bool_eq9(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq9(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_162:int. (((a__first <= temp___idx_162) and
  (temp___idx_162 <= a__last)) ->
  (to_rep2((a[temp___idx_162])) = to_rep2((b[((b__first - a__first) + temp___idx_162)])))))))))

logic compare1 : (int,fileentrycountt) farray, int, int,
  (int,fileentrycountt) farray, int, int -> int

axiom compare_def_eq1 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((compare1(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq9(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt1 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((compare1(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq9(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep2((a[(i + 1)])) <  to_rep2((b[(j + 1)]))))))))))))

axiom compare_def_gt1 :
  (forall a:(int,fileentrycountt) farray.
  forall b:(int,fileentrycountt) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare1(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq9(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep2((b[(i + 1)])) <  to_rep2((a[(j + 1)]))))))))))))

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

type logfilecountt

predicate in_range6(x: int) = ((0 <= x) and (x <= 17))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : logfilecountt, logfilecountt -> bool

logic dummy7 : logfilecountt

type logfilecountt__ref = { logfilecountt__content : logfilecountt
}

function logfilecountt__ref___projection(a: logfilecountt__ref) : logfilecountt =
  (a).logfilecountt__content

logic to_rep3 : logfilecountt -> int

logic of_rep3 : int -> logfilecountt

axiom inversion_axiom3 :
  (forall x:logfilecountt [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:logfilecountt [to_rep3(x)]. in_range6(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range6(x) ->
  (to_rep3(of_rep3(x)) = x)))

type logfileindext

predicate in_range7(x: int) = ((1 <= x) and (x <= 17))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq7 : logfileindext, logfileindext -> bool

logic dummy8 : logfileindext

type logfileindext__ref = { logfileindext__content : logfileindext
}

function logfileindext__ref___projection(a: logfileindext__ref) : logfileindext =
  (a).logfileindext__content

logic to_rep4 : logfileindext -> int

logic of_rep4 : int -> logfileindext

axiom inversion_axiom4 :
  (forall x:logfileindext [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 :
  (forall x:logfileindext [to_rep4(x)]. in_range7(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range7(x) ->
  (to_rep4(of_rep4(x)) = x)))

type map__ref2 = { map__content2 : (int,logfileindext) farray
}

logic slide2 : (int,logfileindext) farray, int,
  int -> (int,logfileindext) farray

axiom slide_eq2 :
  (forall a:(int,logfileindext) farray.
  (forall first2:int [slide2(a, first2, first2)]. (slide2(a, first2,
  first2) = a)))

axiom slide_def2 :
  (forall a:(int,logfileindext) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat2 : (int,logfileindext) farray, int, int,
  (int,logfileindext) farray, int, int -> (int,logfileindext) farray

axiom concat_def2 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat2(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat2(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat2(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton2 : logfileindext, int -> (int,logfileindext) farray

axiom singleton_def2 :
  (forall v:logfileindext.
  (forall i:int [(singleton2(v, i)[i])]. ((singleton2(v, i)[i]) = v)))

logic bool_eq12 : (int,logfileindext) farray, int, int,
  (int,logfileindext) farray, int, int -> bool

axiom bool_eq_def10 :
  (forall a:(int,logfileindext) farray. forall a__first:int.
  forall a__last:int. forall b:(int,logfileindext) farray.
  forall b__first:int. forall b__last:int [bool_eq12(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_152:int. ((((a__first <= temp___idx_152) and
  (temp___idx_152 <= a__last)) and
  (to_rep4((a[temp___idx_152])) = to_rep4((b[((b__first - a__first) + temp___idx_152)])))) or
  (not ((a__first <= temp___idx_152) and (temp___idx_152 <= a__last)))))) ->
  (bool_eq12(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_152:int. (((a__first <= temp___idx_152) and
  (temp___idx_152 <= a__last)) ->
  (to_rep4((a[temp___idx_152])) = to_rep4((b[((b__first - a__first) + temp___idx_152)]))))))) ->
  (bool_eq12(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev2 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq12(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_152:int. (((a__first <= temp___idx_152) and
  (temp___idx_152 <= a__last)) ->
  (to_rep4((a[temp___idx_152])) = to_rep4((b[((b__first - a__first) + temp___idx_152)])))))))))

logic compare2 : (int,logfileindext) farray, int, int,
  (int,logfileindext) farray, int, int -> int

axiom compare_def_eq2 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare2(a, a_first, a_last, b, b_first, b_last)].
  ((compare2(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq12(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt2 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare2(a, a_first, a_last, b, b_first, b_last)].
  ((compare2(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq12(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep4((a[(i + 1)])) <  to_rep4((b[(j + 1)]))))))))))))

axiom compare_def_gt2 :
  (forall a:(int,logfileindext) farray. forall b:(int,logfileindext) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare2(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare2(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq12(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep4((b[(i + 1)])) <  to_rep4((a[(j + 1)]))))))))))))

logic dummy9 : (int,logfileindext) farray

logic value__size1 : int

logic object__size1 : (int,logfileindext) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,logfileindext) farray -> int

logic value__alignment1 : int

logic object__alignment1 : (int,logfileindext) farray -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:(int,logfileindext) farray. (0 <= object__size1(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,logfileindext) farray. (0 <= object__component__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:(int,logfileindext) farray. (0 <= object__alignment1(a)))

logic user_eq8 : (int,logfileindext) farray,
  (int,logfileindext) farray -> bool

type us_split_fields = { rec__auditlog__logfilelistt__list :
(int,logfileindext) farray; rec__auditlog__logfilelistt__head :
logfileindext; rec__auditlog__logfilelistt__lasti : logfileindext;
rec__auditlog__logfilelistt__length : logfilecountt
}

function us_split_fields_List__projection(a: us_split_fields) : (int,logfileindext) farray =
  (a).rec__auditlog__logfilelistt__list

function us_split_fields_Head__projection(a: us_split_fields) : logfileindext =
  (a).rec__auditlog__logfilelistt__head

function us_split_fields_LastI__projection(a: us_split_fields) : logfileindext =
  (a).rec__auditlog__logfilelistt__lasti

function us_split_fields_Length__2__projection(a: us_split_fields) : logfilecountt =
  (a).rec__auditlog__logfilelistt__length

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___7__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___8__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq13 : us_rep, us_rep -> bool

axiom bool_eq_def11 :
  (forall a:us_rep. forall b:us_rep [bool_eq13(a, b)].
  ((((((bool_eq12(((a).us_split_fields1).rec__auditlog__logfilelistt__list,
  1, 17, ((b).us_split_fields1).rec__auditlog__logfilelistt__list, 1,
  17) = true) and
  (to_rep4(((a).us_split_fields1).rec__auditlog__logfilelistt__head) = to_rep4(((b).us_split_fields1).rec__auditlog__logfilelistt__head))) and
  (to_rep4(((a).us_split_fields1).rec__auditlog__logfilelistt__lasti) = to_rep4(((b).us_split_fields1).rec__auditlog__logfilelistt__lasti))) and
  (to_rep3(((a).us_split_fields1).rec__auditlog__logfilelistt__length) = to_rep3(((b).us_split_fields1).rec__auditlog__logfilelistt__length))) ->
  (bool_eq13(a, b) = true)) and
  ((not ((((bool_eq12(((a).us_split_fields1).rec__auditlog__logfilelistt__list,
  1, 17, ((b).us_split_fields1).rec__auditlog__logfilelistt__list, 1,
  17) = true) and
  (to_rep4(((a).us_split_fields1).rec__auditlog__logfilelistt__head) = to_rep4(((b).us_split_fields1).rec__auditlog__logfilelistt__head))) and
  (to_rep4(((a).us_split_fields1).rec__auditlog__logfilelistt__lasti) = to_rep4(((b).us_split_fields1).rec__auditlog__logfilelistt__lasti))) and
  (to_rep3(((a).us_split_fields1).rec__auditlog__logfilelistt__length) = to_rep3(((b).us_split_fields1).rec__auditlog__logfilelistt__length)))) ->
  (bool_eq13(a, b) = false))))

logic value__size2 : int

logic object__size2 : us_rep -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:(int,logfileindext) farray. forall a1:logfileindext.
  forall a2:logfileindext. forall a3:logfilecountt. (0 <= object__size2({
  us_split_fields1 = { rec__auditlog__logfilelistt__list = a;
  rec__auditlog__logfilelistt__head = a1;
  rec__auditlog__logfilelistt__lasti = a2;
  rec__auditlog__logfilelistt__length = a3 } })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:(int,logfileindext) farray. forall a1:logfileindext.
  forall a2:logfileindext. forall a3:logfilecountt.
  (0 <= object__alignment2({ us_split_fields1 = {
  rec__auditlog__logfilelistt__list = a; rec__auditlog__logfilelistt__head =
  a1; rec__auditlog__logfilelistt__lasti = a2;
  rec__auditlog__logfilelistt__length = a3 } })))

logic auditlog__logfilelistt__list__first__bit : int

logic auditlog__logfilelistt__list__last__bit : int

logic auditlog__logfilelistt__list__position : int

axiom auditlog__logfilelistt__list__first__bit_axiom :
  (0 <= auditlog__logfilelistt__list__first__bit)

axiom auditlog__logfilelistt__list__last__bit_axiom :
  (auditlog__logfilelistt__list__first__bit <  auditlog__logfilelistt__list__last__bit)

axiom auditlog__logfilelistt__list__position_axiom :
  (0 <= auditlog__logfilelistt__list__position)

logic auditlog__logfilelistt__head__first__bit : int

logic auditlog__logfilelistt__head__last__bit : int

logic auditlog__logfilelistt__head__position : int

axiom auditlog__logfilelistt__head__first__bit_axiom :
  (0 <= auditlog__logfilelistt__head__first__bit)

axiom auditlog__logfilelistt__head__last__bit_axiom :
  (auditlog__logfilelistt__head__first__bit <  auditlog__logfilelistt__head__last__bit)

axiom auditlog__logfilelistt__head__position_axiom :
  (0 <= auditlog__logfilelistt__head__position)

logic auditlog__logfilelistt__lasti__first__bit : int

logic auditlog__logfilelistt__lasti__last__bit : int

logic auditlog__logfilelistt__lasti__position : int

axiom auditlog__logfilelistt__lasti__first__bit_axiom :
  (0 <= auditlog__logfilelistt__lasti__first__bit)

axiom auditlog__logfilelistt__lasti__last__bit_axiom :
  (auditlog__logfilelistt__lasti__first__bit <  auditlog__logfilelistt__lasti__last__bit)

axiom auditlog__logfilelistt__lasti__position_axiom :
  (0 <= auditlog__logfilelistt__lasti__position)

logic auditlog__logfilelistt__length__first__bit : int

logic auditlog__logfilelistt__length__last__bit : int

logic auditlog__logfilelistt__length__position : int

axiom auditlog__logfilelistt__length__first__bit_axiom :
  (0 <= auditlog__logfilelistt__length__first__bit)

axiom auditlog__logfilelistt__length__last__bit_axiom :
  (auditlog__logfilelistt__length__first__bit <  auditlog__logfilelistt__length__last__bit)

axiom auditlog__logfilelistt__length__position_axiom :
  (0 <= auditlog__logfilelistt__length__position)

logic user_eq9 : us_rep, us_rep -> bool

logic dummy10 : (int,logfileindext) farray

logic dummy11 : logfileindext

logic dummy12 : logfileindext

logic dummy13 : logfilecountt

type logfilelistt__ref = { logfilelistt__content : us_rep
}

function logfilelistt__ref___projection(a: logfilelistt__ref) : us_rep =
  (a).logfilelistt__content

logic attr__ATTRIBUTE_ADDRESS3 : int

logic valid_numberlogentries : (int,fileentrycountt) farray, int, int,
  us_split_fields -> bool

logic valid_numberlogentries__function_guard : bool,
  (int,fileentrycountt) farray, int, int, us_split_fields -> prop

type logentrycountt

predicate in_range8(x: int) = ((0 <= x) and (x <= 17408))

logic bool_eq14 : int, int -> bool

axiom bool_eq_def12 :
  (forall x:int. forall y:int [bool_eq14(x, y)]. (((x = y) -> (bool_eq14(x,
  y) = true)) and ((not (x = y)) -> (bool_eq14(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq10 : logentrycountt, logentrycountt -> bool

logic dummy14 : logentrycountt

type logentrycountt__ref = { logentrycountt__content : logentrycountt
}

function logentrycountt__ref___projection(a: logentrycountt__ref) : logentrycountt =
  (a).logentrycountt__content

axiom valid_numberlogentries__post_axiom : true

axiom valid_numberlogentries__def_axiom :
  (forall auditlog__logfileentries:(int,fileentrycountt) farray.
  (forall auditlog__numberlogentries:int.
  forall auditlog__currentlogfile:int.
  (forall auditlog__usedlogfiles__fields:(int,logfileindext) farray.
  forall auditlog__usedlogfiles__fields1:logfileindext.
  forall auditlog__usedlogfiles__fields2:logfileindext.
  forall auditlog__usedlogfiles__fields3:logfilecountt
  [valid_numberlogentries(auditlog__logfileentries,
  auditlog__numberlogentries, auditlog__currentlogfile, {
  rec__auditlog__logfilelistt__list = auditlog__usedlogfiles__fields;
  rec__auditlog__logfilelistt__head = auditlog__usedlogfiles__fields1;
  rec__auditlog__logfilelistt__lasti = auditlog__usedlogfiles__fields2;
  rec__auditlog__logfilelistt__length = auditlog__usedlogfiles__fields3 })].
  ((valid_numberlogentries(auditlog__logfileentries,
  auditlog__numberlogentries, auditlog__currentlogfile, {
  rec__auditlog__logfilelistt__list = auditlog__usedlogfiles__fields;
  rec__auditlog__logfilelistt__head = auditlog__usedlogfiles__fields1;
  rec__auditlog__logfilelistt__lasti = auditlog__usedlogfiles__fields2;
  rec__auditlog__logfilelistt__length = auditlog__usedlogfiles__fields3
  }) = true) <-> ((1 <= to_rep3(auditlog__usedlogfiles__fields3)) and
  (auditlog__numberlogentries = (((to_rep3(auditlog__usedlogfiles__fields3) - 1) * 1024) + to_rep2((auditlog__logfileentries[auditlog__currentlogfile])))))))))

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep1

logic bool_eq15 : us_rep1, us_rep1 -> bool

logic value__size3 : int

logic object__size3 : us_rep1 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep1 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (forall a:us_rep1. (0 <= object__size3(a)))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:us_rep1. (0 <= object__alignment3(a)))

logic user_eq11 : us_rep1, us_rep1 -> bool

logic dummy15 : us_rep1

type t__ref = { t__content : us_rep1
}

function t__ref___projection(a: t__ref) : us_rep1 = (a).t__content

type map__ref3 = { map__content3 : (int,us_rep1) farray
}

logic slide3 : (int,us_rep1) farray, int, int -> (int,us_rep1) farray

axiom slide_eq3 :
  (forall a:(int,us_rep1) farray.
  (forall first2:int [slide3(a, first2, first2)]. (slide3(a, first2,
  first2) = a)))

axiom slide_def3 :
  (forall a:(int,us_rep1) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide3(a, old_first, new_first)[i])]. ((slide3(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat3 : (int,us_rep1) farray, int, int, (int,us_rep1) farray, int,
  int -> (int,us_rep1) farray

axiom concat_def3 :
  (forall a:(int,us_rep1) farray. forall b:(int,us_rep1) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat3(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat3(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat3(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton3 : us_rep1, int -> (int,us_rep1) farray

axiom singleton_def3 :
  (forall v:us_rep1.
  (forall i:int [(singleton3(v, i)[i])]. ((singleton3(v, i)[i]) = v)))

logic bool_eq16 : (int,us_rep1) farray, int, int, (int,us_rep1) farray, int,
  int -> bool

axiom bool_eq_def13 :
  (forall a:(int,us_rep1) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep1) farray. forall b__first:int. forall b__last:int
  [bool_eq16(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_149:int. ((((a__first <= temp___idx_149) and
  (temp___idx_149 <= a__last)) and (bool_eq15((a[temp___idx_149]),
  (b[((b__first - a__first) + temp___idx_149)])) = true)) or
  (not ((a__first <= temp___idx_149) and (temp___idx_149 <= a__last)))))) ->
  (bool_eq16(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_149:int. (((a__first <= temp___idx_149) and
  (temp___idx_149 <= a__last)) -> (bool_eq15((a[temp___idx_149]),
  (b[((b__first - a__first) + temp___idx_149)])) = true))))) -> (bool_eq16(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev3 :
  (forall a:(int,us_rep1) farray. forall b:(int,us_rep1) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq16(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_149:int. (((a__first <= temp___idx_149) and
  (temp___idx_149 <= a__last)) -> (bool_eq15((a[temp___idx_149]),
  (b[((b__first - a__first) + temp___idx_149)])) = true)))))))

logic attr__ATTRIBUTE_ADDRESS4 : int

type filestatust

predicate in_range9(x: int) = ((0 <= x) and (x <= 2))

logic bool_eq17 : int, int -> bool

axiom bool_eq_def14 :
  (forall x:int. forall y:int [bool_eq17(x, y)]. (((x = y) -> (bool_eq17(x,
  y) = true)) and ((not (x = y)) -> (bool_eq17(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq12 : filestatust, filestatust -> bool

logic dummy16 : filestatust

type filestatust__ref = { filestatust__content : filestatust
}

function filestatust__ref___projection(a: filestatust__ref) : filestatust =
  (a).filestatust__content

logic to_rep5 : filestatust -> int

logic of_rep5 : int -> filestatust

axiom inversion_axiom5 :
  (forall x:filestatust [to_rep5(x)]. (of_rep5(to_rep5(x)) = x))

axiom range_axiom5 :
  (forall x:filestatust [to_rep5(x)]. in_range9(to_rep5(x)))

axiom coerce_axiom5 :
  (forall x:int [to_rep5(of_rep5(x))]. (in_range9(x) ->
  (to_rep5(of_rep5(x)) = x)))

type map__ref4 = { map__content4 : (int,filestatust) farray
}

logic slide4 : (int,filestatust) farray, int, int -> (int,filestatust) farray

axiom slide_eq4 :
  (forall a:(int,filestatust) farray.
  (forall first2:int [slide4(a, first2, first2)]. (slide4(a, first2,
  first2) = a)))

axiom slide_def4 :
  (forall a:(int,filestatust) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide4(a, old_first, new_first)[i])]. ((slide4(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat4 : (int,filestatust) farray, int, int, (int,filestatust) farray,
  int, int -> (int,filestatust) farray

axiom concat_def4 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat4(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat4(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat4(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton4 : filestatust, int -> (int,filestatust) farray

axiom singleton_def4 :
  (forall v:filestatust.
  (forall i:int [(singleton4(v, i)[i])]. ((singleton4(v, i)[i]) = v)))

logic bool_eq18 : (int,filestatust) farray, int, int,
  (int,filestatust) farray, int, int -> bool

axiom bool_eq_def15 :
  (forall a:(int,filestatust) farray. forall a__first:int.
  forall a__last:int. forall b:(int,filestatust) farray. forall b__first:int.
  forall b__last:int [bool_eq18(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_150:int. ((((a__first <= temp___idx_150) and
  (temp___idx_150 <= a__last)) and
  (to_rep5((a[temp___idx_150])) = to_rep5((b[((b__first - a__first) + temp___idx_150)])))) or
  (not ((a__first <= temp___idx_150) and (temp___idx_150 <= a__last)))))) ->
  (bool_eq18(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_150:int. (((a__first <= temp___idx_150) and
  (temp___idx_150 <= a__last)) ->
  (to_rep5((a[temp___idx_150])) = to_rep5((b[((b__first - a__first) + temp___idx_150)]))))))) ->
  (bool_eq18(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev4 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq18(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_150:int. (((a__first <= temp___idx_150) and
  (temp___idx_150 <= a__last)) ->
  (to_rep5((a[temp___idx_150])) = to_rep5((b[((b__first - a__first) + temp___idx_150)])))))))))

logic compare3 : (int,filestatust) farray, int, int,
  (int,filestatust) farray, int, int -> int

axiom compare_def_eq3 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare3(a, a_first, a_last, b, b_first, b_last)].
  ((compare3(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq18(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt3 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare3(a, a_first, a_last, b, b_first, b_last)].
  ((compare3(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq18(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep5((a[(i + 1)])) <  to_rep5((b[(j + 1)]))))))))))))

axiom compare_def_gt3 :
  (forall a:(int,filestatust) farray. forall b:(int,filestatust) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare3(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare3(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq18(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep5((b[(i + 1)])) <  to_rep5((a[(j + 1)]))))))))))))

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

type tlogfilecounttB

predicate in_range10(x: int) = (((-128) <= x) and (x <= 127))

logic bool_eq19 : int, int -> bool

axiom bool_eq_def16 :
  (forall x:int. forall y:int [bool_eq19(x, y)]. (((x = y) -> (bool_eq19(x,
  y) = true)) and ((not (x = y)) -> (bool_eq19(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq13 : tlogfilecounttB, tlogfilecounttB -> bool

logic dummy17 : tlogfilecounttB

type tlogfilecounttB__ref = { tlogfilecounttB__content : tlogfilecounttB
}

function tlogfilecounttB__ref___projection(a: tlogfilecounttB__ref) : tlogfilecounttB =
  (a).tlogfilecounttB__content

logic emptylist : (int,logfileindext) farray

logic emptylist1 : logfileindext

logic emptylist2 : logfileindext

logic emptylist3 : logfilecountt

logic attr__ATTRIBUTE_ADDRESS8 : int

logic temp___153 : int -> (int,logfileindext) farray

axiom def_axiom :
  (forall temp___155:int.
  (forall temp___156:int.
  ((temp___153(temp___155)[temp___156]) = of_rep4(temp___155))))

type logdirstringi

predicate in_range11(x: int) = ((1 <= x) and (x <= 3))

logic bool_eq20 : int, int -> bool

axiom bool_eq_def17 :
  (forall x:int. forall y:int [bool_eq20(x, y)]. (((x = y) -> (bool_eq20(x,
  y) = true)) and ((not (x = y)) -> (bool_eq20(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq14 : logdirstringi, logdirstringi -> bool

logic dummy18 : logdirstringi

type logdirstringi__ref = { logdirstringi__content : logdirstringi
}

function logdirstringi__ref___projection(a: logdirstringi__ref) : logdirstringi =
  (a).logdirstringi__content

logic logdirectory : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS9 : int

logic temp___String_Literal_157 : unit -> (int,character) farray

axiom temp___String_Literal_157__def_axiom :
  (((to_rep((temp___String_Literal_157(void)[1])) = 76) and
  (to_rep((temp___String_Literal_157(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_157(void)[3])) = 103))

type tlogentrycounttB

predicate in_range12(x: int) = (((-32768) <= x) and (x <= 32767))

logic bool_eq21 : int, int -> bool

axiom bool_eq_def18 :
  (forall x:int. forall y:int [bool_eq21(x, y)]. (((x = y) -> (bool_eq21(x,
  y) = true)) and ((not (x = y)) -> (bool_eq21(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq15 : tlogentrycounttB, tlogentrycounttB -> bool

logic dummy19 : tlogentrycounttB

type tlogentrycounttB__ref = { tlogentrycounttB__content : tlogentrycounttB
}

function tlogentrycounttB__ref___projection(a: tlogentrycounttB__ref) : tlogentrycounttB =
  (a).tlogentrycounttB__content

type timetexti

predicate in_range13(x: int) = ((1 <= x) and (x <= 21))

logic bool_eq22 : int, int -> bool

axiom bool_eq_def19 :
  (forall x:int. forall y:int [bool_eq22(x, y)]. (((x = y) -> (bool_eq22(x,
  y) = true)) and ((not (x = y)) -> (bool_eq22(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE13 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check13 : us_image -> prop

logic attr__ATTRIBUTE_VALUE13 : us_image -> int

logic user_eq16 : timetexti, timetexti -> bool

logic dummy20 : timetexti

type timetexti__ref = { timetexti__content : timetexti
}

function timetexti__ref___projection(a: timetexti__ref) : timetexti =
  (a).timetexti__content

logic agelessthan : (int,character) farray, (int,character) farray -> bool

logic agelessthan__function_guard : bool, (int,character) farray,
  (int,character) farray -> prop

axiom agelessthan__post_axiom : true

axiom agelessthan__def_axiom :
  (forall left:(int,character) farray. forall right:(int,character) farray
  [agelessthan(left, right)]. ((agelessthan(left, right) = true) <->
  (compare(left, 1, 21, right, 1, 21) <  0)))

logic dummy21 : (int,character) farray

logic value__size4 : int

logic object__size4 : (int,character) farray -> int

logic value__component__size2 : int

logic object__component__size2 : (int,character) farray -> int

logic value__alignment4 : int

logic object__alignment4 : (int,character) farray -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:(int,character) farray. (0 <= object__size4(a)))

axiom value__component__size_axiom2 : (0 <= value__component__size2)

axiom object__component__size_axiom2 :
  (forall a:(int,character) farray. (0 <= object__component__size2(a)))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:(int,character) farray. (0 <= object__alignment4(a)))

logic user_eq17 : (int,character) farray, (int,character) farray -> bool

type map__ref5 = { map__content5 : (int,(int,character) farray) farray
}

logic slide5 : (int,(int,character) farray) farray, int,
  int -> (int,(int,character) farray) farray

axiom slide_eq5 :
  (forall a:(int,(int,character) farray) farray.
  (forall first2:int [slide5(a, first2, first2)]. (slide5(a, first2,
  first2) = a)))

axiom slide_def5 :
  (forall a:(int,(int,character) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide5(a, old_first, new_first)[i])]. ((slide5(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat5 : (int,(int,character) farray) farray, int, int,
  (int,(int,character) farray) farray, int,
  int -> (int,(int,character) farray) farray

axiom concat_def5 :
  (forall a:(int,(int,character) farray) farray.
  forall b:(int,(int,character) farray) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat5(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat5(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat5(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton5 : (int,character) farray,
  int -> (int,(int,character) farray) farray

axiom singleton_def5 :
  (forall v:(int,character) farray.
  (forall i:int [(singleton5(v, i)[i])]. ((singleton5(v, i)[i]) = v)))

logic bool_eq23 : (int,(int,character) farray) farray, int, int,
  (int,(int,character) farray) farray, int, int -> bool

axiom bool_eq_def20 :
  (forall a:(int,(int,character) farray) farray. forall a__first:int.
  forall a__last:int. forall b:(int,(int,character) farray) farray.
  forall b__first:int. forall b__last:int [bool_eq23(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_199:int. ((((a__first <= temp___idx_199) and
  (temp___idx_199 <= a__last)) and (bool_eq5((a[temp___idx_199]), 1, 21,
  (b[((b__first - a__first) + temp___idx_199)]), 1, 21) = true)) or
  (not ((a__first <= temp___idx_199) and (temp___idx_199 <= a__last)))))) ->
  (bool_eq23(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_199:int. (((a__first <= temp___idx_199) and
  (temp___idx_199 <= a__last)) -> (bool_eq5((a[temp___idx_199]), 1, 21,
  (b[((b__first - a__first) + temp___idx_199)]), 1, 21) = true))))) ->
  (bool_eq23(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev5 :
  (forall a:(int,(int,character) farray) farray.
  forall b:(int,(int,character) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq23(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_199:int. (((a__first <= temp___idx_199) and
  (temp___idx_199 <= a__last)) -> (bool_eq5((a[temp___idx_199]), 1, 21,
  (b[((b__first - a__first) + temp___idx_199)]), 1, 21) = true)))))))

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

logic attr__ATTRIBUTE_ADDRESS15 : int

logic attr__ATTRIBUTE_ADDRESS16 : int

axiom emptylist__def_axiom : ((emptylist = temp___153(1)) and
  ((emptylist1 = of_rep4(17)) and ((emptylist2 = of_rep4(1)) and
  (emptylist3 = of_rep3(0)))))

axiom logdirectory__def_axiom :
  (logdirectory = temp___String_Literal_157(void))

 (* File "auditlog.adb", line 174, characters 0-0 *)
goal WP_parameter_def :
  (forall currentlogfile:int. forall numberlogentries:int.
  forall usedlogfiles__split_fields:(int,logfileindext) farray.
  forall usedlogfiles__split_fields1:logfileindext.
  forall usedlogfiles__split_fields2:logfileindext.
  forall usedlogfiles__split_fields3:logfilecountt. forall auditalarm:int.
  forall auditsystemfault:bool. forall i:int. forall r95b:int. forall j:int.
  forall r97b:int. forall k:int. forall o:logfilecountt.
  forall o1:logfileindext. forall o2:logfileindext.
  forall o3:(int,logfileindext) farray. forall o4:logfileindext.
  forall o5:logfileindext. forall o6:logfilecountt.
  forall temp___1241:(int,logfileindext) farray.
  forall temp___12411:logfileindext. forall temp___12412:logfileindext.
  forall temp___12413:logfilecountt. forall o7:logfileindext.
  forall o8:(int,logfileindext) farray. forall o9:logfileindext.
  forall o10:logfileindext. forall o11:logfilecountt.
  forall temp___1214:(int,logfileindext) farray.
  forall temp___12141:logfileindext. forall temp___12142:logfileindext.
  forall temp___12143:logfilecountt. forall o12:logfileindext.
  forall o13:(int,logfileindext) farray. forall o14:logfileindext.
  forall o15:logfileindext. forall o16:logfilecountt.
  forall temp___1216:(int,logfileindext) farray.
  forall temp___12161:logfileindext. forall temp___12162:logfileindext.
  forall temp___12163:logfilecountt. forall o17:logfilecountt.
  forall o18:(int,logfileindext) farray. forall o19:logfileindext.
  forall o20:logfileindext. forall o21:logfilecountt.
  forall temp___1218:(int,logfileindext) farray.
  forall temp___12181:logfileindext. forall temp___12182:logfileindext.
  forall temp___12183:logfilecountt. forall o22:logfileindext.
  forall o23:(int,logfileindext) farray.
  forall o24:(int,logfileindext) farray. forall o25:logfileindext.
  forall o26:logfileindext. forall o27:logfilecountt.
  forall temp___1221:(int,logfileindext) farray.
  forall temp___12211:logfileindext. forall temp___12212:logfileindext.
  forall temp___12213:logfilecountt.
  forall temp___1209:(int,logfileindext) farray.
  forall temp___12091:logfileindext. forall temp___12092:logfileindext.
  forall temp___12093:logfilecountt. forall o28:int.
  forall o29:logfileindext. forall o30:(int,logfileindext) farray.
  forall o31:logfileindext. forall o32:logfileindext.
  forall o33:logfilecountt. forall temp___1187:(int,logfileindext) farray.
  forall temp___11871:logfileindext. forall temp___11872:logfileindext.
  forall temp___11873:logfilecountt. forall o34:int.
  forall o35:logfilecountt. forall o36:(int,logfileindext) farray.
  forall o37:logfileindext. forall o38:logfileindext.
  forall o39:logfilecountt. forall temp___1189:(int,logfileindext) farray.
  forall temp___11891:logfileindext. forall temp___11892:logfileindext.
  forall temp___11893:logfilecountt. forall temp___1197:int.
  forall temp___1195:(int,logfileindext) farray.
  forall temp___11951:logfileindext. forall temp___11952:logfileindext.
  forall temp___11953:logfilecountt. forall temp___1191:int. forall o40:int.
  forall o41:logfileindext. forall o42:int. forall o43:logfileindext.
  forall o44:int. forall o45:(int,logfileindext) farray.
  forall o46:(int,logfileindext) farray. forall o47:logfileindext.
  forall o48:logfileindext. forall o49:logfilecountt.
  forall temp___1194:(int,logfileindext) farray.
  forall temp___11941:logfileindext. forall temp___11942:logfileindext.
  forall temp___11943:logfilecountt. forall o50:logfileindext.
  forall o51:(int,logfileindext) farray. forall o52:us_split_fields.
  forall temp___1201:us_rep. forall o53:int. forall o54:logfileindext.
  forall o55:us_split_fields. forall temp___1203:us_rep. forall o56:int.
  forall o57:logfilecountt. forall o58:us_split_fields.
  forall temp___1205:us_rep. forall o59:logfileindext.
  forall o60:(int,logfileindext) farray. forall o61:us_split_fields.
  forall temp___1208:us_rep. forall r95b1:int. forall j1:int.
  forall r97b1:int. forall k1:int. forall ok:bool. forall result:bool__ref.
  forall auditsystemfault1:bool.
  forall logfilesstatus:(int,filestatust) farray.
  forall fileages:(int,(int,character) farray) farray.
  forall result1:us_split_fields__ref.
  forall usedlogfiles__split_fields4:us_split_fields.
  forall result2:int__ref. forall i1:int.
  forall result3:us_split_fields__ref.
  forall usedlogfiles__split_fields5:us_split_fields.
  forall result4:us_split_fields__ref.
  forall usedlogfiles__split_fields6:us_split_fields.
  forall result5:us_split_fields__ref.
  forall usedlogfiles__split_fields7:us_split_fields.
  forall result6:us_split_fields__ref.
  forall usedlogfiles__split_fields8:us_split_fields.
  forall result7:int__ref. forall r95b2:int. forall result8:int__ref.
  forall j2:int. forall usedlogfiles__split_fields9:us_split_fields.
  forall j3:int. forall r97b2:int. forall k2:int. forall result9:bool.
  forall result10:us_split_fields__ref.
  forall usedlogfiles__split_fields10:us_split_fields.
  forall result11:us_split_fields__ref.
  forall usedlogfiles__split_fields11:us_split_fields.
  forall result12:int__ref. forall r97b3:int. forall result13:int__ref.
  forall k3:int. forall usedlogfiles__split_fields12:us_split_fields.
  forall k4:int. forall result14:us_split_fields__ref.
  forall usedlogfiles__split_fields13:us_split_fields.
  forall usedlogfiles__split_fields14:us_split_fields__ref.
  forall k5:int__ref. forall usedlogfiles__split_fields15:us_split_fields.
  forall k6:int. forall usedlogfiles__split_fields16:us_split_fields__ref.
  forall k7:int__ref. forall usedlogfiles__split_fields17:us_split_fields.
  forall k8:int. forall result15:us_split_fields__ref.
  forall usedlogfiles__split_fields18:us_split_fields.
  forall usedlogfiles__split_fields19:us_split_fields__ref.
  forall r97b4:int__ref. forall k9:int__ref.
  forall usedlogfiles__split_fields20:us_split_fields. forall r97b5:int.
  forall k10:int. forall result16:us_split_fields__ref.
  forall usedlogfiles__split_fields21:us_split_fields.
  forall result17:us_split_fields__ref.
  forall usedlogfiles__split_fields22:us_split_fields.
  forall result18:us_split_fields__ref.
  forall usedlogfiles__split_fields23:us_split_fields.
  forall usedlogfiles__split_fields24:us_split_fields__ref.
  forall usedlogfiles__split_fields25:us_split_fields.
  forall usedlogfiles__split_fields26:us_split_fields__ref.
  forall usedlogfiles__split_fields27:us_split_fields.
  forall usedlogfiles__split_fields28:us_split_fields__ref.
  forall r97b6:int__ref. forall k11:int__ref.
  forall usedlogfiles__split_fields29:us_split_fields. forall r97b7:int.
  forall k12:int. forall usedlogfiles__split_fields30:us_split_fields__ref.
  forall j4:int__ref. forall r97b8:int__ref. forall k13:int__ref.
  forall usedlogfiles__split_fields31:us_split_fields. forall j5:int.
  forall r97b9:int. forall k14:int.
  forall usedlogfiles__split_fields32:us_split_fields__ref.
  forall j6:int__ref. forall r97b10:int__ref. forall k15:int__ref.
  forall usedlogfiles__split_fields33:us_split_fields. forall j7:int.
  forall r97b11:int. forall k16:int.
  forall usedlogfiles__split_fields34:us_split_fields__ref.
  forall r95b3:int__ref. forall j8:int__ref. forall r97b12:int__ref.
  forall k17:int__ref. forall usedlogfiles__split_fields35:us_split_fields.
  forall r95b4:int. forall j9:int. forall r97b13:int. forall k18:int.
  forall usedlogfiles__split_fields36:us_split_fields__ref.
  forall r95b5:int__ref. forall j10:int__ref. forall r97b14:int__ref.
  forall k19:int__ref. forall usedlogfiles__split_fields37:us_split_fields.
  forall r95b6:int. forall j11:int. forall r97b15:int. forall k20:int.
  forall result19:int__ref. forall i2:int. forall result20:int__ref.
  forall r95b7:int. forall result21:int__ref. forall j12:int.
  forall usedlogfiles__split_fields38:us_split_fields. forall j13:int.
  forall result22:bool. (((((to_rep3(o) = 0) and ((to_rep4(o1) = 1) and
  ((to_rep4(o2) = 17) and ((temp___153(1) = o3) and ((o2 = o4) and
  ((o1 = o5) and (o = o6))))))) and ((temp___1241 = o3) and
  ((temp___12411 = o4) and ((temp___12412 = o5) and
  (temp___12413 = o6))))) and ((emptylist = temp___1241) and
  ((emptylist1 = temp___12411) and ((emptylist2 = temp___12412) and
  (emptylist3 = temp___12413))))) ->
  ((temp___String_Literal_157(void) = logdirectory) -> (((1 <= 17) ->
  in_range7(currentlogfile)) -> (((0 <= 17408) ->
  in_range8(numberlogentries)) -> (((0 <= 1) -> in_range4(auditalarm)) ->
  (((result = { bool__content = auditsystemfault }) and
  (((not (ok = true)) and (auditsystemfault1 = true)) or ((ok = true) and
  (auditsystemfault1 = false)))) -> (((result1 = { us_split_fields__content =
  { rec__auditlog__logfilelistt__list = usedlogfiles__split_fields;
  rec__auditlog__logfilelistt__head = usedlogfiles__split_fields1;
  rec__auditlog__logfilelistt__lasti = usedlogfiles__split_fields2;
  rec__auditlog__logfilelistt__length = usedlogfiles__split_fields3 } }) and
  (usedlogfiles__split_fields4 = { rec__auditlog__logfilelistt__list =
  emptylist; rec__auditlog__logfilelistt__head = emptylist1;
  rec__auditlog__logfilelistt__lasti = emptylist2;
  rec__auditlog__logfilelistt__length = emptylist3 })) -> (((result2 = {
  int__content = i }) and (i1 = 1)) ->
  ((((to_rep5((logfilesstatus[i1])) = 2) and
  ((((to_rep3((usedlogfiles__split_fields4).rec__auditlog__logfilelistt__length) = 0) and
  ((((((to_rep4(o7) = 1) and
  (((usedlogfiles__split_fields4).rec__auditlog__logfilelistt__list = o8) and
  ((o7 = o9) and
  (((usedlogfiles__split_fields4).rec__auditlog__logfilelistt__lasti = o10) and
  ((usedlogfiles__split_fields4).rec__auditlog__logfilelistt__length = o11))))) and
  ((temp___1214 = o8) and ((temp___12141 = o9) and ((temp___12142 = o10) and
  (temp___12143 = o11))))) and ((result3 = { us_split_fields__content =
  usedlogfiles__split_fields4 }) and (usedlogfiles__split_fields5 = {
  rec__auditlog__logfilelistt__list = temp___1214;
  rec__auditlog__logfilelistt__head = temp___12141;
  rec__auditlog__logfilelistt__lasti = temp___12142;
  rec__auditlog__logfilelistt__length = temp___12143 }))) and
  (((((to_rep4(o12) = 1) and
  (((usedlogfiles__split_fields5).rec__auditlog__logfilelistt__list = o13) and
  (((usedlogfiles__split_fields5).rec__auditlog__logfilelistt__head = o14) and
  ((o12 = o15) and
  ((usedlogfiles__split_fields5).rec__auditlog__logfilelistt__length = o16))))) and
  ((temp___1216 = o13) and ((temp___12161 = o14) and
  ((temp___12162 = o15) and (temp___12163 = o16))))) and ((result4 = {
  us_split_fields__content = usedlogfiles__split_fields5 }) and
  (usedlogfiles__split_fields6 = { rec__auditlog__logfilelistt__list =
  temp___1216; rec__auditlog__logfilelistt__head = temp___12161;
  rec__auditlog__logfilelistt__lasti = temp___12162;
  rec__auditlog__logfilelistt__length = temp___12163 }))) and
  (((((to_rep3(o17) = 1) and
  (((usedlogfiles__split_fields6).rec__auditlog__logfilelistt__list = o18) and
  (((usedlogfiles__split_fields6).rec__auditlog__logfilelistt__head = o19) and
  (((usedlogfiles__split_fields6).rec__auditlog__logfilelistt__lasti = o20) and
  (o17 = o21))))) and ((temp___1218 = o18) and ((temp___12181 = o19) and
  ((temp___12182 = o20) and (temp___12183 = o21))))) and ((result5 = {
  us_split_fields__content = usedlogfiles__split_fields6 }) and
  (usedlogfiles__split_fields7 = { rec__auditlog__logfilelistt__list =
  temp___1218; rec__auditlog__logfilelistt__head = temp___12181;
  rec__auditlog__logfilelistt__lasti = temp___12182;
  rec__auditlog__logfilelistt__length = temp___12183 }))) and
  (((((to_rep4(o22) = i1) and
  (o23 = ((usedlogfiles__split_fields7).rec__auditlog__logfilelistt__list[to_rep4((usedlogfiles__split_fields7).rec__auditlog__logfilelistt__head) <- o22]))) and
  ((o23 = o24) and
  (((usedlogfiles__split_fields7).rec__auditlog__logfilelistt__head = o25) and
  (((usedlogfiles__split_fields7).rec__auditlog__logfilelistt__lasti = o26) and
  ((usedlogfiles__split_fields7).rec__auditlog__logfilelistt__length = o27))))) and
  ((temp___1221 = o24) and ((temp___12211 = o25) and
  ((temp___12212 = o26) and (temp___12213 = o27))))) and ((result6 = {
  us_split_fields__content = usedlogfiles__split_fields7 }) and
  (usedlogfiles__split_fields8 = { rec__auditlog__logfilelistt__list =
  temp___1221; rec__auditlog__logfilelistt__head = temp___12211;
  rec__auditlog__logfilelistt__lasti = temp___12212;
  rec__auditlog__logfilelistt__length = temp___12213 })))))) and (((k17 = {
  int__content = k }) and ((r97b12 = { int__content = r97b }) and ((j8 = {
  int__content = j }) and ((r95b3 = { int__content = r95b }) and
  (usedlogfiles__split_fields34 = { us_split_fields__content =
  usedlogfiles__split_fields8 }))))) and ((k18 = k1) and
  ((r97b13 = r97b1) and ((j9 = j1) and ((r95b4 = r95b1) and
  (usedlogfiles__split_fields35 = usedlogfiles__split_fields8)))))))) or
  ((not (to_rep3((usedlogfiles__split_fields4).rec__auditlog__logfilelistt__length) = 0)) and
  (((((result7 = { int__content = r95b }) and
  (r95b2 = to_rep4((usedlogfiles__split_fields4).rec__auditlog__logfilelistt__lasti))) and
  in_range7(r95b2)) and (((result8 = { int__content = j }) and (j2 = 1)) and
  ((((1 <= j2) and (j2 <= r95b2)) and ((((usedlogfiles__split_fields4 = {
  rec__auditlog__logfilelistt__list = temp___1209;
  rec__auditlog__logfilelistt__head = temp___12091;
  rec__auditlog__logfilelistt__lasti = temp___12092;
  rec__auditlog__logfilelistt__length = temp___12093 }) and
  ((((usedlogfiles__split_fields9).rec__auditlog__logfilelistt__head = temp___12091) and
  ((1 <= j3) and (j3 <= r95b2))) and (((((k11 = k7) and ((r97b6 = {
  int__content = r97b3 }) and (usedlogfiles__split_fields28 = {
  us_split_fields__content = usedlogfiles__split_fields18 }))) and
  ((k12 = k8) and ((r97b7 = r97b3) and
  (usedlogfiles__split_fields29 = usedlogfiles__split_fields18)))) and
  (((result9 = agelessthan((fileages[i1]),
  (fileages[to_rep4(((usedlogfiles__split_fields9).rec__auditlog__logfilelistt__list[j3]))]))) and
  ((result9 = true) <-> (compare((fileages[i1]), 1, 21,
  (fileages[to_rep4(((usedlogfiles__split_fields9).rec__auditlog__logfilelistt__list[j3]))]),
  1, 21) <  0))) and ((result9 = true) and
  (((((((o28 = (to_rep4((usedlogfiles__split_fields9).rec__auditlog__logfilelistt__lasti) + 1)) and
  in_range7((to_rep4((usedlogfiles__split_fields9).rec__auditlog__logfilelistt__lasti) + 1))) and
  (to_rep4(o29) = o28)) and
  (((usedlogfiles__split_fields9).rec__auditlog__logfilelistt__list = o30) and
  (((usedlogfiles__split_fields9).rec__auditlog__logfilelistt__head = o31) and
  ((o29 = o32) and
  ((usedlogfiles__split_fields9).rec__auditlog__logfilelistt__length = o33))))) and
  ((temp___1187 = o30) and ((temp___11871 = o31) and
  ((temp___11872 = o32) and (temp___11873 = o33))))) and ((result10 = {
  us_split_fields__content = usedlogfiles__split_fields9 }) and
  (usedlogfiles__split_fields10 = { rec__auditlog__logfilelistt__list =
  temp___1187; rec__auditlog__logfilelistt__head = temp___11871;
  rec__auditlog__logfilelistt__lasti = temp___11872;
  rec__auditlog__logfilelistt__length = temp___11873 }))) and
  (((((((o34 = (to_rep3((usedlogfiles__split_fields10).rec__auditlog__logfilelistt__length) + 1)) and
  in_range6((to_rep3((usedlogfiles__split_fields10).rec__auditlog__logfilelistt__length) + 1))) and
  (to_rep3(o35) = o34)) and
  (((usedlogfiles__split_fields10).rec__auditlog__logfilelistt__list = o36) and
  (((usedlogfiles__split_fields10).rec__auditlog__logfilelistt__head = o37) and
  (((usedlogfiles__split_fields10).rec__auditlog__logfilelistt__lasti = o38) and
  (o35 = o39))))) and ((temp___1189 = o36) and ((temp___11891 = o37) and
  ((temp___11892 = o38) and (temp___11893 = o39))))) and ((result11 = {
  us_split_fields__content = usedlogfiles__split_fields10 }) and
  (usedlogfiles__split_fields11 = { rec__auditlog__logfilelistt__list =
  temp___1189; rec__auditlog__logfilelistt__head = temp___11891;
  rec__auditlog__logfilelistt__lasti = temp___11892;
  rec__auditlog__logfilelistt__length = temp___11893 }))) and
  ((((result12 = { int__content = r97b2 }) and
  (r97b3 = to_rep4((usedlogfiles__split_fields11).rec__auditlog__logfilelistt__lasti))) and
  in_range7(r97b3)) and ((((temp___1197 = (j3 + 1)) and
  in_range10((j3 + 1))) and (((result13 = { int__content = k2 }) and
  (k3 = r97b3)) and ((((temp___1197 <= k3) and (k3 <= r97b3)) and
  ((((usedlogfiles__split_fields11 = { rec__auditlog__logfilelistt__list =
  temp___1195; rec__auditlog__logfilelistt__head = temp___11951;
  rec__auditlog__logfilelistt__lasti = temp___11952;
  rec__auditlog__logfilelistt__length = temp___11953 }) and
  ((((((forall temp___1196:int. (((1 <= temp___1196) and
       (temp___1196 <= 17)) -> ((temp___1196 <= k4) ->
       (((usedlogfiles__split_fields12).rec__auditlog__logfilelistt__list[temp___1196]) = (temp___1195[temp___1196]))))) and
  ((usedlogfiles__split_fields12).rec__auditlog__logfilelistt__head = temp___11951)) and
  ((usedlogfiles__split_fields12).rec__auditlog__logfilelistt__lasti = temp___11952)) and
  ((usedlogfiles__split_fields12).rec__auditlog__logfilelistt__length = temp___11953)) and
  (((j3 + 1) <= k4) and (k4 <= r97b3))) and
  (((((((((((temp___1191 = (k4 - 1)) and in_range10((k4 - 1))) and
  (((1 <= temp___1191) and (temp___1191 <= 17)) and (o40 = temp___1191))) and
  (o41 = ((usedlogfiles__split_fields12).rec__auditlog__logfilelistt__list[o40]))) and
  (o42 = to_rep4(o41))) and (to_rep4(o43) = o42)) and ((((1 <= k4) and
  (k4 <= 17)) and (o44 = k4)) and
  (o45 = ((usedlogfiles__split_fields12).rec__auditlog__logfilelistt__list[o44 <- o43])))) and
  ((o45 = o46) and
  (((usedlogfiles__split_fields12).rec__auditlog__logfilelistt__head = o47) and
  (((usedlogfiles__split_fields12).rec__auditlog__logfilelistt__lasti = o48) and
  ((usedlogfiles__split_fields12).rec__auditlog__logfilelistt__length = o49))))) and
  ((temp___1194 = o46) and ((temp___11941 = o47) and
  ((temp___11942 = o48) and (temp___11943 = o49))))) and ((result14 = {
  us_split_fields__content = usedlogfiles__split_fields12 }) and
  (usedlogfiles__split_fields13 = { rec__auditlog__logfilelistt__list =
  temp___1194; rec__auditlog__logfilelistt__head = temp___11941;
  rec__auditlog__logfilelistt__lasti = temp___11942;
  rec__auditlog__logfilelistt__length = temp___11943 }))) and
  (k4 = temp___1197)))) and (((k5 = { int__content = k4 }) and
  (usedlogfiles__split_fields14 = { us_split_fields__content =
  usedlogfiles__split_fields13 })) and ((k6 = k4) and
  (usedlogfiles__split_fields15 = usedlogfiles__split_fields13)))) and
  (((k7 = k5) and
  (usedlogfiles__split_fields16 = usedlogfiles__split_fields14)) and
  ((k8 = k6) and
  (usedlogfiles__split_fields17 = usedlogfiles__split_fields15))))) or
  ((not ((temp___1197 <= k3) and (k3 <= r97b3))) and (((k7 = { int__content =
  k3 }) and (usedlogfiles__split_fields16 = { us_split_fields__content =
  usedlogfiles__split_fields11 })) and ((k8 = k3) and
  (usedlogfiles__split_fields17 = usedlogfiles__split_fields11))))))) and
  (((((to_rep4(o50) = i1) and
  (o51 = (((usedlogfiles__split_fields16).us_split_fields__content).rec__auditlog__logfilelistt__list[j3 <- o50]))) and
  (o52 = { rec__auditlog__logfilelistt__list = o51;
  rec__auditlog__logfilelistt__head =
  ((usedlogfiles__split_fields16).us_split_fields__content).rec__auditlog__logfilelistt__head;
  rec__auditlog__logfilelistt__lasti =
  ((usedlogfiles__split_fields16).us_split_fields__content).rec__auditlog__logfilelistt__lasti;
  rec__auditlog__logfilelistt__length =
  ((usedlogfiles__split_fields16).us_split_fields__content).rec__auditlog__logfilelistt__length
  })) and (temp___1201 = { us_split_fields1 = o52 })) and
  ((result15 = usedlogfiles__split_fields16) and
  (usedlogfiles__split_fields18 = (temp___1201).us_split_fields1)))))))))) or
  ((((result9 = agelessthan((fileages[i1]),
  (fileages[to_rep4(((usedlogfiles__split_fields9).rec__auditlog__logfilelistt__list[j3]))]))) and
  ((result9 = true) <-> (compare((fileages[i1]), 1, 21,
  (fileages[to_rep4(((usedlogfiles__split_fields9).rec__auditlog__logfilelistt__list[j3]))]),
  1, 21) <  0))) and ((not (result9 = true)) and (((k9 = { int__content = k2
  }) and ((r97b4 = { int__content = r97b2 }) and
  (usedlogfiles__split_fields19 = { us_split_fields__content =
  usedlogfiles__split_fields9 }))) and ((k10 = k2) and ((r97b5 = r97b2) and
  (usedlogfiles__split_fields20 = usedlogfiles__split_fields9)))))) and
  ((((k11 = k9) and ((r97b6 = r97b4) and
  (usedlogfiles__split_fields28 = usedlogfiles__split_fields26))) and
  ((k12 = k10) and ((r97b7 = r97b5) and
  (usedlogfiles__split_fields29 = usedlogfiles__split_fields27)))) and
  ((((usedlogfiles__split_fields26 = { us_split_fields__content =
  usedlogfiles__split_fields23 }) and
  (usedlogfiles__split_fields27 = usedlogfiles__split_fields23)) and
  ((j3 = to_rep4(((usedlogfiles__split_fields19).us_split_fields__content).rec__auditlog__logfilelistt__lasti)) and
  (((((((o53 = (to_rep4(((usedlogfiles__split_fields19).us_split_fields__content).rec__auditlog__logfilelistt__lasti) + 1)) and
  in_range7((to_rep4(((usedlogfiles__split_fields19).us_split_fields__content).rec__auditlog__logfilelistt__lasti) + 1))) and
  (to_rep4(o54) = o53)) and (o55 = { rec__auditlog__logfilelistt__list =
  ((usedlogfiles__split_fields19).us_split_fields__content).rec__auditlog__logfilelistt__list;
  rec__auditlog__logfilelistt__head =
  ((usedlogfiles__split_fields19).us_split_fields__content).rec__auditlog__logfilelistt__head;
  rec__auditlog__logfilelistt__lasti = o54;
  rec__auditlog__logfilelistt__length =
  ((usedlogfiles__split_fields19).us_split_fields__content).rec__auditlog__logfilelistt__length
  })) and (temp___1203 = { us_split_fields1 = o55 })) and
  ((result16 = usedlogfiles__split_fields19) and
  (usedlogfiles__split_fields21 = (temp___1203).us_split_fields1))) and
  (((((((o56 = (to_rep3((usedlogfiles__split_fields21).rec__auditlog__logfilelistt__length) + 1)) and
  in_range6((to_rep3((usedlogfiles__split_fields21).rec__auditlog__logfilelistt__length) + 1))) and
  (to_rep3(o57) = o56)) and (o58 = { rec__auditlog__logfilelistt__list =
  (usedlogfiles__split_fields21).rec__auditlog__logfilelistt__list;
  rec__auditlog__logfilelistt__head =
  (usedlogfiles__split_fields21).rec__auditlog__logfilelistt__head;
  rec__auditlog__logfilelistt__lasti =
  (usedlogfiles__split_fields21).rec__auditlog__logfilelistt__lasti;
  rec__auditlog__logfilelistt__length = o57 })) and (temp___1205 = {
  us_split_fields1 = o58 })) and ((result17 = { us_split_fields__content =
  usedlogfiles__split_fields21 }) and
  (usedlogfiles__split_fields22 = (temp___1205).us_split_fields1))) and
  (((((to_rep4(o59) = i1) and
  (o60 = ((usedlogfiles__split_fields22).rec__auditlog__logfilelistt__list[to_rep4((usedlogfiles__split_fields22).rec__auditlog__logfilelistt__lasti) <- o59]))) and
  (o61 = { rec__auditlog__logfilelistt__list = o60;
  rec__auditlog__logfilelistt__head =
  (usedlogfiles__split_fields22).rec__auditlog__logfilelistt__head;
  rec__auditlog__logfilelistt__lasti =
  (usedlogfiles__split_fields22).rec__auditlog__logfilelistt__lasti;
  rec__auditlog__logfilelistt__length =
  (usedlogfiles__split_fields22).rec__auditlog__logfilelistt__length })) and
  (temp___1208 = { us_split_fields1 = o61 })) and ((result18 = {
  us_split_fields__content = usedlogfiles__split_fields22 }) and
  (usedlogfiles__split_fields23 = (temp___1208).us_split_fields1))))))) or
  (((not (j3 = to_rep4(((usedlogfiles__split_fields19).us_split_fields__content).rec__auditlog__logfilelistt__lasti))) and
  ((usedlogfiles__split_fields24 = usedlogfiles__split_fields19) and
  (usedlogfiles__split_fields25 = usedlogfiles__split_fields20))) and
  (((usedlogfiles__split_fields26 = usedlogfiles__split_fields24) and
  (usedlogfiles__split_fields27 = usedlogfiles__split_fields25)) and
  (j3 = r95b2))))))))) and (((k13 = k11) and ((r97b8 = r97b6) and ((j4 = {
  int__content = j3 }) and
  (usedlogfiles__split_fields30 = usedlogfiles__split_fields28)))) and
  ((k14 = k12) and ((r97b9 = r97b7) and ((j5 = j3) and
  (usedlogfiles__split_fields31 = usedlogfiles__split_fields29)))))) and
  (((k15 = k13) and ((r97b10 = r97b8) and ((j6 = j4) and
  (usedlogfiles__split_fields32 = usedlogfiles__split_fields30)))) and
  ((k16 = k14) and ((r97b11 = r97b9) and ((j7 = j5) and
  (usedlogfiles__split_fields33 = usedlogfiles__split_fields31))))))) or
  ((not ((1 <= j2) and (j2 <= r95b2))) and (((k15 = { int__content = k }) and
  ((r97b10 = { int__content = r97b }) and ((j6 = { int__content = j2 }) and
  (usedlogfiles__split_fields32 = { us_split_fields__content =
  usedlogfiles__split_fields4 })))) and ((k16 = k1) and ((r97b11 = r97b1) and
  ((j7 = j2) and
  (usedlogfiles__split_fields33 = usedlogfiles__split_fields4))))))))) and
  (((k17 = k15) and ((r97b12 = r97b10) and ((j8 = j6) and ((r95b3 = {
  int__content = r95b2 }) and
  (usedlogfiles__split_fields34 = usedlogfiles__split_fields32))))) and
  ((k18 = k16) and ((r97b13 = r97b11) and ((j9 = j7) and ((r95b4 = r95b2) and
  (usedlogfiles__split_fields35 = usedlogfiles__split_fields33))))))))) and
  (((k19 = k17) and ((r97b14 = r97b12) and ((j10 = j8) and
  ((r95b5 = r95b3) and
  (usedlogfiles__split_fields36 = usedlogfiles__split_fields34))))) and
  ((k20 = k18) and ((r97b15 = r97b13) and ((j11 = j9) and
  ((r95b6 = r95b4) and
  (usedlogfiles__split_fields37 = usedlogfiles__split_fields35)))))))) or
  ((not (to_rep5((logfilesstatus[i1])) = 2)) and (((k19 = { int__content = k
  }) and ((r97b14 = { int__content = r97b }) and ((j10 = { int__content = j
  }) and ((r95b5 = { int__content = r95b }) and
  (usedlogfiles__split_fields36 = { us_split_fields__content =
  usedlogfiles__split_fields4 }))))) and ((k20 = k1) and
  ((r97b15 = r97b1) and ((j11 = j1) and ((r95b6 = r95b1) and
  (usedlogfiles__split_fields37 = usedlogfiles__split_fields4)))))))) ->
  (((result19 = { int__content = i1 }) and (i2 = 2)) ->
  ((to_rep5((logfilesstatus[i2])) = 2) ->
  ((not (to_rep3(((usedlogfiles__split_fields36).us_split_fields__content).rec__auditlog__logfilelistt__length) = 0)) ->
  ((((result20 = r95b5) and
  (r95b7 = to_rep4(((usedlogfiles__split_fields36).us_split_fields__content).rec__auditlog__logfilelistt__lasti))) and
  in_range7(r95b7)) -> (((result21 = j10) and (j12 = 1)) -> (((1 <= j12) and
  (j12 <= r95b7)) ->
  ((((usedlogfiles__split_fields38).rec__auditlog__logfilelistt__head = ((usedlogfiles__split_fields36).us_split_fields__content).rec__auditlog__logfilelistt__head) and
  ((1 <= j13) and (j13 <= r95b7))) ->
  (((result22 = agelessthan((fileages[i2]),
  (fileages[to_rep4(((usedlogfiles__split_fields38).rec__auditlog__logfilelistt__list[j13]))]))) and
  ((result22 = true) <-> (compare((fileages[i2]), 1, 21,
  (fileages[to_rep4(((usedlogfiles__split_fields38).rec__auditlog__logfilelistt__list[j13]))]),
  1, 21) <  0))) -> ((result22 = true) ->
  in_range7((to_rep4((usedlogfiles__split_fields38).rec__auditlog__logfilelistt__lasti) + 1)))))))))))))))))))))
