(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun div1 (Int Int) Int)
(declare-fun mod1 (Int Int) Int)
(assert (forall ((x Int) (y Int)) (=> (not (= y 0)) (= x (+ (* y (div1 x y)) (mod1 x y))))))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (and (<= 0 (div1 x y)) (<= (div1 x y) x)))))
(assert (forall ((x Int) (y Int)) (=> (not (= y 0)) (and (< (- (abs y)) (mod1 x y)) (< (mod1 x y) (abs y))))))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< 0 y)) (<= 0 (div1 x y)))))
(assert (forall ((x Int) (y Int)) (=> (and (<= x 0) (< 0 y)) (<= (div1 x y) 0))))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (not (= y 0))) (<= 0 (mod1 x y)))))
(assert (forall ((x Int) (y Int)) (=> (and (<= x 0) (not (= y 0))) (<= (mod1 x y) 0))))
(assert (forall ((x Int) (y Int)) (=> (not (= y 0)) (<= (abs (* (div1 x y) y)) (abs x)))))
(assert (forall ((x Int)) (= (div1 x 1) x)))
(assert (forall ((x Int)) (= (mod1 x 1) 0)))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (div1 x y) 0))))
(assert (forall ((x Int) (y Int)) (=> (and (<= 0 x) (< x y)) (= (mod1 x y) x))))
(assert (forall ((x Int) (y Int) (z Int)) (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z))) (= (div1 (+ (* x y) z) x) (+ y (div1 z x)))) :pattern ((div1 (+ (* x y) z) x)))))
(assert (forall ((x Int) (y Int) (z Int)) (! (=> (and (< 0 x) (and (<= 0 y) (<= 0 z))) (= (mod1 (+ (* x y) z) x) (mod1 z x))) :pattern ((mod1 (+ (* x y) z) x)))))
(define-fun mod2 ((x Int) (y Int)) Int (ite (< 0 y) (mod x y) (+ (mod x y) y)))
(declare-sort integer 0)
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq4 (us_t1 us_t1) Bool)
(declare-const dummy4 us_t1)
(declare-datatypes () ((stringf1l12__ref (mk_stringf1l12__ref (stringf1l12__content us_t1)))))
(define-fun stringf1l12__ref___projection ((a stringf1l12__ref)) us_t1 (stringf1l12__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int character)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))
(define-fun of_array2 ((a (Array Int character)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq5 (us_t2 us_t2) Bool)
(declare-const dummy5 us_t2)
(declare-datatypes () ((stringf1l1000__ref (mk_stringf1l1000__ref (stringf1l1000__content us_t2)))))
(define-fun stringf1l1000__ref___projection ((a stringf1l1000__ref)) us_t2 (stringf1l1000__content a))
(declare-sort descriptioni 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 150)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq6 (descriptioni descriptioni) Bool)
(declare-const dummy6 descriptioni)
(declare-datatypes () ((descriptioni__ref (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni (descriptioni__content a))
(declare-const nodescription (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun audittypes__nodescription__aggregate_def (Int) (Array Int character))
(assert (forall ((temp___134 Int)) (forall ((temp___135 Int)) (= (select (audittypes__nodescription__aggregate_def temp___134) temp___135) (of_rep temp___134)))))
(declare-sort filesizet 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 4194304)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq7 (filesizet filesizet) Bool)
(declare-const dummy7 filesizet)
(declare-datatypes () ((filesizet__ref (mk_filesizet__ref (filesizet__content filesizet)))))
(define-fun filesizet__ref___projection ((a filesizet__ref)) filesizet (filesizet__content a))
(define-fun dynamic_invariant ((temp___expr_405 Int) (temp___is_init_402 Bool) (temp___skip_constant_403 Bool) (temp___do_toplevel_404 Bool)) Bool (=> (or (= temp___is_init_402 true) (<= 0 4194304)) (in_range4 temp___expr_405)))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first6 (mk3 f l))) f) (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int character)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int character) (elts3 a))
(define-fun of_array3 ((a (Array Int character)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int character)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int character)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int character)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq4 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first6 (rt3 x))) (to_rep1 (last6 (rt3 x))) (elts3 y) (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))
(declare-fun user_eq8 (us_t3 us_t3) Bool)
(declare-const dummy8 us_t3)
(declare-datatypes () ((stringf1__ref (mk_stringf1__ref (stringf1__content us_t3)))))
(define-fun stringf1__ref___projection ((a stringf1__ref)) us_t3 (stringf1__content a))
(define-fun dynamic_invariant1 ((temp___expr_297 us_t2) (temp___is_init_294 Bool) (temp___skip_constant_295 Bool) (temp___do_toplevel_296 Bool)) Bool (and (=> (not (= temp___skip_constant_295 true)) (dynamic_property2 1 2147483647 (first5 temp___expr_297) (last5 temp___expr_297))) (=> (= temp___do_toplevel_296 true) (=> (= temp___is_init_294 true) (and (let ((temp___299 (of_array3 (to_array2 temp___expr_297) (first5 temp___expr_297) (last5 temp___expr_297)))) (and (= (first7 temp___299) 1) (<= 0 (last7 temp___299)))) (<= (last5 temp___expr_297) 1000))))))
(define-fun dynamic_predicate ((temp___301 us_t2)) Bool (and (let ((temp___303 (of_array3 (to_array2 temp___301) (first5 temp___301) (last5 temp___301)))) (and (= (first7 temp___303) 1) (<= 0 (last7 temp___303)))) (<= (last5 temp___301) 1000)))
(declare-fun filesizet_image (Int) us_t2)
(declare-fun filesizet_image__function_guard (us_t2 Int) Bool)
(assert (forall ((x Int)) (! (=> (dynamic_invariant x true true true) (dynamic_invariant1 (filesizet_image x) true false true)) :pattern ((filesizet_image x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant x true true true) (= (filesizet_image x) (let ((temp___411 (to_string (attr__ATTRIBUTE_IMAGE4 x)))) (of_array2 (to_array temp___411) (first1 temp___411) (last1 temp___411))))) :pattern ((filesizet_image x)))))
(declare-sort durationt 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 864000)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq9 (durationt durationt) Bool)
(declare-const dummy9 durationt)
(declare-datatypes () ((durationt__ref (mk_durationt__ref (durationt__content durationt)))))
(define-fun durationt__ref___projection ((a durationt__ref)) durationt (durationt__content a))
(define-fun dynamic_invariant2 ((temp___expr_451 Int) (temp___is_init_448 Bool) (temp___skip_constant_449 Bool) (temp___do_toplevel_450 Bool)) Bool (=> (or (= temp___is_init_448 true) (<= 0 864000)) (in_range5 temp___expr_451)))
(declare-fun durationt_image (Int) us_t2)
(declare-fun durationt_image__function_guard (us_t2 Int) Bool)
(assert (forall ((x Int)) (! (=> (dynamic_invariant2 x true true true) (dynamic_invariant1 (durationt_image x) true false true)) :pattern ((durationt_image x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant2 x true true true) (= (durationt_image x) (let ((temp___457 (to_string (attr__ATTRIBUTE_IMAGE5 x)))) (of_array2 (to_array temp___457) (first1 temp___457) (last1 temp___457))))) :pattern ((durationt_image x)))))
(declare-sort durationtexti 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq10 (durationtexti durationtexti) Bool)
(declare-const dummy10 durationtexti)
(declare-datatypes () ((durationtexti__ref (mk_durationtexti__ref (durationtexti__content durationtexti)))))
(define-fun durationtexti__ref___projection ((a durationtexti__ref)) durationtexti (durationtexti__content a))
(declare-fun printduration (Int) (Array Int character))
(declare-fun printduration__function_guard ((Array Int character) Int) Bool)
(assert true)
(declare-sort fart 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq11 (fart fart) Bool)
(declare-const dummy11 fart)
(declare-datatypes () ((fart__ref (mk_fart__ref (fart__content fart)))))
(define-fun fart__ref___projection ((a fart__ref)) fart (fart__content a))
(define-fun dynamic_invariant3 ((temp___expr_933 Int) (temp___is_init_930 Bool) (temp___skip_constant_931 Bool) (temp___do_toplevel_932 Bool)) Bool (=> (or (= temp___is_init_930 true) (<= 0 2147483647)) (in_range7 temp___expr_933)))
(declare-fun fart_image (Int) us_t2)
(declare-fun fart_image__function_guard (us_t2 Int) Bool)
(assert (forall ((x Int)) (! (=> (dynamic_invariant3 x true true true) (dynamic_invariant1 (fart_image x) true false true)) :pattern ((fart_image x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant3 x true true true) (= (fart_image x) (let ((temp___939 (to_string (attr__ATTRIBUTE_IMAGE7 x)))) (of_array2 (to_array temp___939) (first1 temp___939) (last1 temp___939))))) :pattern ((fart_image x)))))
(declare-sort classt 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 5)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq12 (classt classt) Bool)
(declare-const dummy12 classt)
(declare-datatypes () ((classt__ref (mk_classt__ref (classt__content classt)))))
(define-fun classt__ref___projection ((a classt__ref)) classt (classt__content a))
(define-fun dynamic_invariant4 ((temp___expr_1013 Int) (temp___is_init_1010 Bool) (temp___skip_constant_1011 Bool) (temp___do_toplevel_1012 Bool)) Bool (=> (or (= temp___is_init_1010 true) (<= 0 5)) (in_range8 temp___expr_1013)))
(define-fun dynamic_invariant5 ((temp___expr_285 us_t1) (temp___is_init_282 Bool) (temp___skip_constant_283 Bool) (temp___do_toplevel_284 Bool)) Bool (and (=> (not (= temp___skip_constant_283 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_285) (last3 temp___expr_285))) (=> (= temp___do_toplevel_284 true) (=> (= temp___is_init_282 true) (and (let ((temp___287 (of_array3 (to_array1 temp___expr_285) (first3 temp___expr_285) (last3 temp___expr_285)))) (and (= (first7 temp___287) 1) (<= 0 (last7 temp___287)))) (<= (last3 temp___expr_285) 12))))))
(define-fun dynamic_predicate1 ((temp___289 us_t1)) Bool (and (let ((temp___291 (of_array3 (to_array1 temp___289) (first3 temp___289) (last3 temp___289)))) (and (= (first7 temp___291) 1) (<= 0 (last7 temp___291)))) (<= (last3 temp___289) 12)))
(declare-fun classt_image (Int) us_t1)
(declare-fun classt_image__function_guard (us_t1 Int) Bool)
(assert (forall ((x Int)) (! (=> (dynamic_invariant4 x true true true) (dynamic_invariant5 (classt_image x) true false true)) :pattern ((classt_image x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant4 x true true true) (= (classt_image x) (let ((temp___1019 (to_string (attr__ATTRIBUTE_IMAGE8 x)))) (of_array1 (to_array temp___1019) (first1 temp___1019) (last1 temp___1019))))) :pattern ((classt_image x)))))
(declare-sort durationt1 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 2000)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq13 (durationt1 durationt1) Bool)
(declare-const dummy13 durationt1)
(declare-datatypes () ((durationt__ref1 (mk_durationt__ref1 (durationt__content1 durationt1)))))
(define-fun durationt__ref___2__projection ((a durationt__ref1)) durationt1 (durationt__content1 a))
(define-fun dynamic_invariant6 ((temp___expr_1030 Int) (temp___is_init_1027 Bool) (temp___skip_constant_1028 Bool) (temp___do_toplevel_1029 Bool)) Bool (=> (or (= temp___is_init_1027 true) (<= 0 2000)) (in_range9 temp___expr_1030)))
(declare-sort accesspolicyt 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq14 (accesspolicyt accesspolicyt) Bool)
(declare-const dummy14 accesspolicyt)
(declare-datatypes () ((accesspolicyt__ref (mk_accesspolicyt__ref (accesspolicyt__content accesspolicyt)))))
(define-fun accesspolicyt__ref___projection ((a accesspolicyt__ref)) accesspolicyt (accesspolicyt__content a))
(define-fun dynamic_invariant7 ((temp___expr_1040 Int) (temp___is_init_1037 Bool) (temp___skip_constant_1038 Bool) (temp___do_toplevel_1039 Bool)) Bool (=> (or (= temp___is_init_1037 true) (<= 0 1)) (in_range10 temp___expr_1040)))
(declare-fun accesspolicyt_image (Int) us_t1)
(declare-fun accesspolicyt_image__function_guard (us_t1 Int) Bool)
(assert (forall ((x Int)) (! (=> (dynamic_invariant7 x true true true) (dynamic_invariant5 (accesspolicyt_image x) true false true)) :pattern ((accesspolicyt_image x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant7 x true true true) (= (accesspolicyt_image x) (let ((temp___1046 (to_string (attr__ATTRIBUTE_IMAGE10 x)))) (of_array1 (to_array temp___1046) (first1 temp___1046) (last1 temp___1046))))) :pattern ((accesspolicyt_image x)))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-sort t6b 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 1 x) (<= x 5)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq15 (t6b t6b) Bool)
(declare-const dummy15 t6b)
(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content t6b)))))
(define-fun t6b__ref___projection ((a t6b__ref)) t6b (t6b__content a))
(declare-sort t9b 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 1 x) (<= x 5)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq16 (t9b t9b) Bool)
(declare-const dummy16 t9b)
(declare-datatypes () ((t9b__ref (mk_t9b__ref (t9b__content t9b)))))
(define-fun t9b__ref___projection ((a t9b__ref)) t9b (t9b__content a))
(declare-sort t12b 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 1 x) (<= x 5)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq17 (t12b t12b) Bool)
(declare-const dummy17 t12b)
(declare-datatypes () ((t12b__ref (mk_t12b__ref (t12b__content t12b)))))
(define-fun t12b__ref___projection ((a t12b__ref)) t12b (t12b__content a))
(declare-const str__first integer)
(declare-const str__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq18 (integer integer) Bool)
(declare-const dummy18 integer)
(declare-datatypes () ((t22b__ref (mk_t22b__ref (t22b__content integer)))))
(define-fun t22b__ref___projection ((a t22b__ref)) integer (t22b__content a))
(declare-sort t4 0)
(declare-fun first8 (t4) integer)
(declare-fun last8 (t4) integer)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first8 (mk4 f l))) f) (= (to_rep1 (last8 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (dynamic_property4 range_first range_last low) (dynamic_property4 range_first range_last high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int character)) (rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int character) (elts4 a))
(define-fun of_array4 ((a (Array Int character)) (f Int) (l Int)) us_t4 (mk___t4 a (mk4 f l)))
(define-fun first9 ((a us_t4)) Int (to_rep1 (first8 (rt4 a))))
(define-fun last9 ((a us_t4)) Int (to_rep1 (last8 (rt4 a))))
(define-fun length4 ((a us_t4)) Int (ite (<= (first9 a) (last9 a)) (+ (- (last9 a) (first9 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int character)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int character)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int character)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq5 ((x us_t4) (y us_t4)) Bool (bool_eq (elts4 x) (to_rep1 (first8 (rt4 x))) (to_rep1 (last8 (rt4 x))) (elts4 y) (to_rep1 (first8 (rt4 y))) (to_rep1 (last8 (rt4 y)))))
(declare-fun user_eq19 (us_t4 us_t4) Bool)
(declare-const dummy19 us_t4)
(declare-datatypes () ((t23b__ref (mk_t23b__ref (t23b__content us_t4)))))
(define-fun t23b__ref___projection ((a t23b__ref)) us_t4 (t23b__content a))
(declare-fun temp___String_Literal_1889 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1889 us_void_param) 1)) 59) (= (to_rep (select (temp___String_Literal_1889 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1889 us_void_param)))))
(declare-fun temp___String_Literal_1894 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1894 us_void_param) 1)) 59) (= (to_rep (select (temp___String_Literal_1894 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1894 us_void_param)))))
(declare-fun temp___String_Literal_1899 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1899 us_void_param) 1)) 59) (= (to_rep (select (temp___String_Literal_1899 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1899 us_void_param)))))
(declare-fun temp___String_Literal_1904 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1904 us_void_param) 1)) 59) (= (to_rep (select (temp___String_Literal_1904 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1904 us_void_param)))))
(declare-fun temp___String_Literal_1909 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1909 us_void_param) 1)) 59) (= (to_rep (select (temp___String_Literal_1909 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1909 us_void_param)))))
(declare-fun temp___String_Literal_1917 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1917 us_void_param) 1)) 59) (= (to_rep (select (temp___String_Literal_1917 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1917 us_void_param)))))
(declare-fun temp___String_Literal_1925 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1925 us_void_param) 1)) 59) (= (to_rep (select (temp___String_Literal_1925 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1925 us_void_param)))))
(declare-fun temp___String_Literal_1933 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1933 us_void_param) 1)) 59) (= (to_rep (select (temp___String_Literal_1933 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1933 us_void_param)))))
(declare-fun temp___String_Literal_1938 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1938 us_void_param) 1)) 59) (= (to_rep (select (temp___String_Literal_1938 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1938 us_void_param)))))
(declare-fun temp___String_Literal_1943 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1943 us_void_param) 1)) 59) (= (to_rep (select (temp___String_Literal_1943 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1943 us_void_param)))))
(declare-fun temp___String_Literal_1948 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1948 us_void_param) 1)) 59) (= (to_rep (select (temp___String_Literal_1948 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1948 us_void_param)))))
(declare-fun temp___String_Literal_1953 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1953 us_void_param) 1)) 59) (= (to_rep (select (temp___String_Literal_1953 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1953 us_void_param)))))
(define-fun dynamic_invariant8 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range1 temp___expr_39)))
(define-fun dynamic_invariant9 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range2 temp___expr_63)))
(define-fun dynamic_invariant10 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant11 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_15)))
(define-fun dynamic_invariant12 ((temp___expr_263 us_t3) (temp___is_init_260 Bool) (temp___skip_constant_261 Bool) (temp___do_toplevel_262 Bool)) Bool (and (=> (not (= temp___skip_constant_261 true)) (dynamic_property3 1 2147483647 (first7 temp___expr_263) (last7 temp___expr_263))) (=> (= temp___do_toplevel_262 true) (=> (= temp___is_init_260 true) (and (= (first7 temp___expr_263) 1) (<= 0 (last7 temp___expr_263)))))))
(define-fun dynamic_predicate2 ((temp___266 us_t3)) Bool (and (= (first7 temp___266) 1) (<= 0 (last7 temp___266))))
(define-fun dynamic_invariant13 ((temp___expr_375 Int) (temp___is_init_372 Bool) (temp___skip_constant_373 Bool) (temp___do_toplevel_374 Bool)) Bool (=> (or (= temp___is_init_372 true) (<= 1 150)) (in_range3 temp___expr_375)))
(assert (= nodescription (audittypes__nodescription__aggregate_def 32)))
(define-fun dynamic_invariant14 ((temp___expr_492 Int) (temp___is_init_489 Bool) (temp___skip_constant_490 Bool) (temp___do_toplevel_491 Bool)) Bool (=> (or (= temp___is_init_489 true) (<= 1 10)) (in_range6 temp___expr_492)))
(declare-const thelatchunlockduration Int)
(declare-const thealarmsilentduration Int)
(declare-const thefingerwaitduration Int)
(declare-const thetokenremovalduration Int)
(declare-const theenclaveclearance Int)
(declare-const theworkinghoursstart Int)
(declare-const theworkinghoursend Int)
(declare-const themaxauthduration Int)
(declare-const theaccesspolicy Int)
(declare-const theminentryclass Int)
(declare-const theminpreservedlogsize Int)
(declare-const thealarmthresholdsize Int)
(declare-const thesystemmaxfar Int)
(declare-const localtext (Array Int character))
(declare-const str (Array Int character))
(declare-const temp___1957 (Array Int character))
(declare-const temp___19571 t2)
(declare-const temp___1952 (Array Int character))
(declare-const temp___19521 t2)
(declare-const temp___1947 (Array Int character))
(declare-const temp___19471 t2)
(declare-const temp___1942 (Array Int character))
(declare-const temp___19421 t1)
(declare-const temp___1937 (Array Int character))
(declare-const temp___19371 t1)
(declare-const temp___1930 (Array Int character))
(declare-const temp___1932 (Array Int character))
(declare-const temp___1922 (Array Int character))
(declare-const temp___1924 (Array Int character))
(declare-const temp___1914 (Array Int character))
(declare-const temp___1916 (Array Int character))
(declare-const temp___1908 (Array Int character))
(declare-const temp___19081 t1)
(declare-const temp___1903 us_t2)
(declare-const temp___1898 us_t2)
(declare-const temp___1893 us_t2)
(declare-const temp___1890 us_t2)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const temp___1892 us_t)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const temp___1895 us_t)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 Int)
(declare-const o17 Int)
(declare-const temp___1897 us_t)
(declare-const o18 Int)
(declare-const o19 Int)
(declare-const o20 Int)
(declare-const o21 Int)
(declare-const o22 Int)
(declare-const o23 Int)
(declare-const temp___1900 us_t)
(declare-const o24 Int)
(declare-const o25 Int)
(declare-const o26 Int)
(declare-const o27 Int)
(declare-const o28 Int)
(declare-const o29 Int)
(declare-const temp___1902 us_t)
(declare-const o30 Int)
(declare-const o31 Int)
(declare-const o32 Int)
(declare-const o33 Int)
(declare-const o34 Int)
(declare-const o35 Int)
(declare-const temp___1905 us_t)
(declare-const o36 Int)
(declare-const o37 Int)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const o40 Int)
(declare-const o41 Int)
(declare-const temp___1907 us_t)
(declare-const o42 Int)
(declare-const o43 Int)
(declare-const o44 Int)
(declare-const o45 Int)
(declare-const o46 Int)
(declare-const o47 Int)
(declare-const temp___1910 us_t)
(declare-const o48 Int)
(declare-const o49 Int)
(declare-const o50 Int)
(declare-const o51 Int)
(declare-const o52 Int)
(declare-const o53 Int)
(declare-const temp___1915 us_t)
(declare-const o54 Int)
(declare-const o55 Int)
(declare-const o56 Int)
(declare-const o57 Int)
(declare-const o58 Int)
(declare-const o59 Int)
(declare-const temp___1918 us_t)
(declare-const o60 Int)
(declare-const o61 Int)
(declare-const o62 Int)
(declare-const o63 Int)
(declare-const o64 Int)
(declare-const o65 Int)
(declare-const temp___1923 us_t)
(declare-const o66 Int)
(declare-const o67 Int)
(declare-const o68 Int)
(declare-const o69 Int)
(declare-const o70 Int)
(declare-const o71 Int)
(declare-const temp___1926 us_t)
(declare-const o72 Int)
(declare-const o73 Int)
(declare-const o74 Int)
(declare-const o75 Int)
(declare-const o76 Int)
(declare-const o77 Int)
(declare-const temp___1931 us_t)
(declare-const o78 Int)
(declare-const o79 Int)
(declare-const o80 Int)
(declare-const o81 Int)
(declare-const o82 Int)
(declare-const o83 Int)
(declare-const temp___1934 us_t)
(declare-const o84 Int)
(declare-const o85 Int)
(declare-const o86 Int)
(declare-const o87 Int)
(declare-const o88 Int)
(declare-const o89 Int)
(declare-const temp___1936 us_t)
(declare-const o90 Int)
(declare-const o91 Int)
(declare-const o92 Int)
(declare-const o93 Int)
(declare-const o94 Int)
(declare-const o95 Int)
(declare-const temp___1939 us_t)
(declare-const o96 Int)
(declare-const o97 Int)
(declare-const o98 Int)
(declare-const o99 Int)
(declare-const o100 Int)
(declare-const o101 Int)
(declare-const temp___1941 us_t)
(declare-const o102 Int)
(declare-const o103 Int)
(declare-const o104 Int)
(declare-const o105 Int)
(declare-const o106 Int)
(declare-const o107 Int)
(declare-const temp___1944 us_t)
(declare-const o108 Int)
(declare-const o109 Int)
(declare-const o110 Int)
(declare-const o111 Int)
(declare-const o112 Int)
(declare-const o113 Int)
(declare-const temp___1946 us_t)
(declare-const o114 Int)
(declare-const o115 Int)
(declare-const o116 Int)
(declare-const o117 Int)
(declare-const o118 Int)
(declare-const o119 Int)
(declare-const temp___1949 us_t)
(declare-const o120 Int)
(declare-const o121 Int)
(declare-const o122 Int)
(declare-const o123 Int)
(declare-const o124 Int)
(declare-const o125 Int)
(declare-const temp___1951 us_t)
(declare-const o126 Int)
(declare-const o127 Int)
(declare-const o128 Int)
(declare-const o129 Int)
(declare-const o130 Int)
(declare-const o131 Int)
(declare-const temp___1954 us_t)
(declare-const o132 Int)
(declare-const o133 Int)
(declare-const o134 Int)
(declare-const o135 Int)
(declare-const o136 Int)
(declare-const o137 Int)
(declare-const temp___1956 us_t)
(declare-const o138 Int)
(declare-const o139 Int)
(declare-const o140 Int)
(declare-const o141 Int)
(declare-const o142 Int)
(declare-const o143 Int)
(declare-const configuration__updatedata__makedescription__str__assume us_t)
(declare-const temp___1959 us_t4)
(declare-const o144 (Array Int character))
(declare-const temp___1962 us_t4)
(declare-const result map__ref)
(declare-const localtext1 (Array Int character))
(declare-const result1 map__ref)
(declare-const str1 (Array Int character))
(assert (= (audittypes__nodescription__aggregate_def 32) nodescription))
(assert (in_range9 thelatchunlockduration))
(assert (in_range9 thealarmsilentduration))
(assert (in_range9 thefingerwaitduration))
(assert (in_range9 thetokenremovalduration))
(assert (in_range8 theenclaveclearance))
(assert (in_range5 theworkinghoursstart))
(assert (in_range5 theworkinghoursend))
(assert (in_range5 themaxauthduration))
(assert (in_range10 theaccesspolicy))
(assert (in_range8 theminentryclass))
(assert (in_range4 theminpreservedlogsize))
(assert (in_range4 thealarmthresholdsize))
(assert (in_range7 thesystemmaxfar))
(assert (= result (mk_map__ref localtext)))
(assert (= localtext1 nodescription))
(assert (and (= (mk___t2 temp___1957 temp___19571) (fart_image thesystemmaxfar)) (and (dynamic_invariant1 (mk___t2 temp___1957 temp___19571) true false true) (= (mk___t2 temp___1957 temp___19571) (let ((temp___937 (to_string (attr__ATTRIBUTE_IMAGE7 thesystemmaxfar)))) (mk___t2 (elts temp___937) (mk2 (to_rep1 (first (rt temp___937))) (to_rep1 (last (rt temp___937))))))))))
(assert (and (= (mk___t2 temp___1952 temp___19521) (filesizet_image (div1 thealarmthresholdsize 1024))) (and (dynamic_invariant1 (mk___t2 temp___1952 temp___19521) true false true) (= (mk___t2 temp___1952 temp___19521) (let ((temp___409 (to_string (attr__ATTRIBUTE_IMAGE4 (div1 thealarmthresholdsize 1024))))) (mk___t2 (elts temp___409) (mk2 (to_rep1 (first (rt temp___409))) (to_rep1 (last (rt temp___409))))))))))
(assert (and (= (mk___t2 temp___1947 temp___19471) (filesizet_image (div1 theminpreservedlogsize 1024))) (and (dynamic_invariant1 (mk___t2 temp___1947 temp___19471) true false true) (= (mk___t2 temp___1947 temp___19471) (let ((temp___409 (to_string (attr__ATTRIBUTE_IMAGE4 (div1 theminpreservedlogsize 1024))))) (mk___t2 (elts temp___409) (mk2 (to_rep1 (first (rt temp___409))) (to_rep1 (last (rt temp___409))))))))))
(assert (and (= (mk___t1 temp___1942 temp___19421) (classt_image theminentryclass)) (and (dynamic_invariant5 (mk___t1 temp___1942 temp___19421) true false true) (= (mk___t1 temp___1942 temp___19421) (let ((temp___1017 (to_string (attr__ATTRIBUTE_IMAGE8 theminentryclass)))) (mk___t1 (elts temp___1017) (mk1 (to_rep1 (first (rt temp___1017))) (to_rep1 (last (rt temp___1017))))))))))
(assert (and (= (mk___t1 temp___1937 temp___19371) (accesspolicyt_image theaccesspolicy)) (and (dynamic_invariant5 (mk___t1 temp___1937 temp___19371) true false true) (= (mk___t1 temp___1937 temp___19371) (let ((temp___1044 (to_string (attr__ATTRIBUTE_IMAGE10 theaccesspolicy)))) (mk___t1 (elts temp___1044) (mk1 (to_rep1 (first (rt temp___1044))) (to_rep1 (last (rt temp___1044))))))))))
(assert (= temp___1930 (printduration themaxauthduration)))
(assert (=> (<= 1 5) (and (and (<= 1 1) (<= 1 10)) (and (<= 1 5) (<= 5 10)))))
(assert (= temp___1932 temp___1930))
(assert (= temp___1922 (printduration theworkinghoursend)))
(assert (=> (<= 1 5) (and (and (<= 1 1) (<= 1 10)) (and (<= 1 5) (<= 5 10)))))
(assert (= temp___1924 temp___1922))
(assert (= temp___1914 (printduration theworkinghoursstart)))
(assert (=> (<= 1 5) (and (and (<= 1 1) (<= 1 10)) (and (<= 1 5) (<= 5 10)))))
(assert (= temp___1916 temp___1914))
(assert (and (= (mk___t1 temp___1908 temp___19081) (classt_image theenclaveclearance)) (and (dynamic_invariant5 (mk___t1 temp___1908 temp___19081) true false true) (= (mk___t1 temp___1908 temp___19081) (let ((temp___1017 (to_string (attr__ATTRIBUTE_IMAGE8 theenclaveclearance)))) (mk___t1 (elts temp___1017) (mk1 (to_rep1 (first (rt temp___1017))) (to_rep1 (last (rt temp___1017))))))))))
(assert (not (not (= 10 0))))
(check-sat)
(exit)
