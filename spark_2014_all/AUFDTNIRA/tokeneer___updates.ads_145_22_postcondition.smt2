(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort yearst 0)
(declare-fun yearstqtint (yearst) Int)
(assert (forall ((i yearst)) (and (<= 1901 (yearstqtint i)) (<= (yearstqtint i) 2099))))
(define-fun in_range1 ((x Int)) Bool (and (<= 1901 x) (<= x 2099)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (yearst yearst) Bool)
(declare-const dummy yearst)
(declare-datatypes () ((yearst__ref (mk_yearst__ref (yearst__content yearst)))))
(define-fun yearst__ref___projection ((a yearst__ref)) yearst (yearst__content a))
(define-fun to_rep ((x yearst)) Int (yearstqtint x))
(declare-fun of_rep (Int) yearst)
(assert (forall ((x yearst)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x yearst)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort monthst 0)
(declare-fun monthstqtint (monthst) Int)
(assert (forall ((i monthst)) (and (<= 1 (monthstqtint i)) (<= (monthstqtint i) 12))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (monthst monthst) Bool)
(declare-const dummy1 monthst)
(declare-datatypes () ((monthst__ref (mk_monthst__ref (monthst__content monthst)))))
(define-fun monthst__ref___projection ((a monthst__ref)) monthst (monthst__content a))
(define-fun to_rep1 ((x monthst)) Int (monthstqtint x))
(declare-fun of_rep1 (Int) monthst)
(assert (forall ((x monthst)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x monthst)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort dayst 0)
(declare-fun daystqtint (dayst) Int)
(assert (forall ((i dayst)) (and (<= 1 (daystqtint i)) (<= (daystqtint i) 31))))
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (dayst dayst) Bool)
(declare-const dummy2 dayst)
(declare-datatypes () ((dayst__ref (mk_dayst__ref (dayst__content dayst)))))
(define-fun dayst__ref___projection ((a dayst__ref)) dayst (dayst__content a))
(define-fun to_rep2 ((x dayst)) Int (daystqtint x))
(declare-fun of_rep2 (Int) dayst)
(assert (forall ((x dayst)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x dayst)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort millisecst 0)
(declare-fun millisecstqtint (millisecst) Int)
(assert (forall ((i millisecst)) (and (<= 0 (millisecstqtint i)) (<= (millisecstqtint i) 86399999))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 86399999)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (millisecst millisecst) Bool)
(declare-const dummy3 millisecst)
(declare-datatypes () ((millisecst__ref (mk_millisecst__ref (millisecst__content millisecst)))))
(define-fun millisecst__ref___projection ((a millisecst__ref)) millisecst (millisecst__content a))
(define-fun to_rep3 ((x millisecst)) Int (millisecstqtint x))
(declare-fun of_rep3 (Int) millisecst)
(assert (forall ((x millisecst)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x millisecst)) (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__clock__timet__year yearst) (rec__clock__timet__month monthst) (rec__clock__timet__day dayst) (rec__clock__timet__millisec millisecst)))))
(define-fun us_split_fields_Year__projection ((a us_split_fields)) yearst (rec__clock__timet__year a))
(define-fun us_split_fields_Month__projection ((a us_split_fields)) monthst (rec__clock__timet__month a))
(define-fun us_split_fields_Day__projection ((a us_split_fields)) dayst (rec__clock__timet__day a))
(define-fun us_split_fields_MilliSec__projection ((a us_split_fields)) millisecst (rec__clock__timet__millisec a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___4__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (to_rep (rec__clock__timet__year (us_split_fields1 a))) (to_rep (rec__clock__timet__year (us_split_fields1 b)))) (= (to_rep1 (rec__clock__timet__month (us_split_fields1 a))) (to_rep1 (rec__clock__timet__month (us_split_fields1 b))))) (= (to_rep2 (rec__clock__timet__day (us_split_fields1 a))) (to_rep2 (rec__clock__timet__day (us_split_fields1 b))))) (= (to_rep3 (rec__clock__timet__millisec (us_split_fields1 a))) (to_rep3 (rec__clock__timet__millisec (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const clock__timet__year__first__bit Int)
(declare-const clock__timet__year__last__bit Int)
(declare-const clock__timet__year__position Int)
(assert (<= 0 clock__timet__year__first__bit))
(assert (< clock__timet__year__first__bit clock__timet__year__last__bit))
(assert (<= 0 clock__timet__year__position))
(declare-const clock__timet__month__first__bit Int)
(declare-const clock__timet__month__last__bit Int)
(declare-const clock__timet__month__position Int)
(assert (<= 0 clock__timet__month__first__bit))
(assert (< clock__timet__month__first__bit clock__timet__month__last__bit))
(assert (<= 0 clock__timet__month__position))
(declare-const clock__timet__day__first__bit Int)
(declare-const clock__timet__day__last__bit Int)
(declare-const clock__timet__day__position Int)
(assert (<= 0 clock__timet__day__first__bit))
(assert (< clock__timet__day__first__bit clock__timet__day__last__bit))
(assert (<= 0 clock__timet__day__position))
(declare-const clock__timet__millisec__first__bit Int)
(declare-const clock__timet__millisec__last__bit Int)
(declare-const clock__timet__millisec__position Int)
(assert (<= 0 clock__timet__millisec__first__bit))
(assert (< clock__timet__millisec__first__bit clock__timet__millisec__last__bit))
(assert (<= 0 clock__timet__millisec__position))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((timet__ref (mk_timet__ref (timet__content us_rep)))))
(define-fun timet__ref___projection ((a timet__ref)) us_rep (timet__content a))
(declare-fun latchislocked (tuple0) Bool)
(declare-fun latchislocked__function_guard (Bool tuple0) Bool)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-fun islocked (Int us_private us_split_fields) Bool)
(declare-fun islocked__function_guard (Bool Int us_private us_split_fields) Bool)
(declare-sort t 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (t t) Bool)
(declare-const dummy5 t)
(declare-datatypes () ((t__ref (mk_t__ref (t__content t)))))
(define-fun t__ref___3__projection ((a t__ref)) t (t__content a))
(define-fun dynamic_invariant ((temp___expr_1514 Int) (temp___is_init_1510 Bool) (temp___skip_constant_1511 Bool) (temp___do_toplevel_1512 Bool) (temp___do_typ_inv_1513 Bool)) Bool (=> (or (= temp___is_init_1510 true) (<= 0 1)) (in_range5 temp___expr_1514)))
(assert true)
(assert (forall ((latch__currentlatch Int)) (forall ((latch__state us_private)) (forall ((latch__latchtimeout__fields us_split_fields)) (! (= (= (islocked latch__currentlatch latch__state latch__latchtimeout__fields) true) (= latch__currentlatch 0)) :pattern ((islocked latch__currentlatch latch__state latch__latchtimeout__fields)))))))
(declare-fun thedooralarm (us_private) Int)
(declare-fun thedooralarm__function_guard (Int us_private) Bool)
(declare-sort statust 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (statust statust) Bool)
(declare-const dummy6 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant1 ((temp___expr_545 Int) (temp___is_init_541 Bool) (temp___skip_constant_542 Bool) (temp___do_toplevel_543 Bool) (temp___do_typ_inv_544 Bool)) Bool (=> (or (= temp___is_init_541 true) (<= 0 1)) (in_range6 temp___expr_545)))
(assert (forall ((door__state us_private)) (! (dynamic_invariant1 (thedooralarm door__state) true false true true) :pattern ((thedooralarm door__state)))))
(declare-fun isalarming (tuple0) Bool)
(declare-fun isalarming__function_guard (Bool tuple0) Bool)
(declare-sort filestatust 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq7 (filestatust filestatust) Bool)
(declare-const dummy7 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep4 (filestatust) Int)
(declare-fun of_rep4 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x filestatust)) (! (in_range7 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int filestatust))))))
(declare-fun slide ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_198 Int)) (=> (and (<= a__first temp___idx_198) (<= temp___idx_198 a__last)) (= (to_rep4 (select a temp___idx_198)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_198))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_198 Int)) (=> (and (<= a__first temp___idx_198) (<= temp___idx_198 a__last)) (= (to_rep4 (select a temp___idx_198)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_198)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort logfileindext 0)
(declare-fun logfileindextqtint (logfileindext) Int)
(assert (forall ((i logfileindext)) (and (<= 1 (logfileindextqtint i)) (<= (logfileindextqtint i) 17))))
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq8 (logfileindext logfileindext) Bool)
(declare-const dummy8 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(define-fun to_rep5 ((x logfileindext)) Int (logfileindextqtint x))
(declare-fun of_rep5 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x logfileindext)) (! (in_range8 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-sort logentrycountt 0)
(declare-fun logentrycounttqtint (logentrycountt) Int)
(assert (forall ((i logentrycountt)) (and (<= 0 (logentrycounttqtint i)) (<= (logentrycounttqtint i) 17408))))
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq9 (logentrycountt logentrycountt) Bool)
(declare-const dummy9 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(define-fun to_rep6 ((x logentrycountt)) Int (logentrycounttqtint x))
(declare-fun of_rep6 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x logentrycountt)) (! (in_range9 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-sort logfilecountt 0)
(declare-fun logfilecounttqtint (logfilecountt) Int)
(assert (forall ((i logfilecountt)) (and (<= 0 (logfilecounttqtint i)) (<= (logfilecounttqtint i) 17))))
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq10 (logfilecountt logfilecountt) Bool)
(declare-const dummy10 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(define-fun to_rep7 ((x logfilecountt)) Int (logfilecounttqtint x))
(declare-fun of_rep7 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x logfilecountt)) (! (in_range10 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_195 Int)) (=> (and (<= a__first temp___idx_195) (<= temp___idx_195 a__last)) (= (to_rep5 (select a temp___idx_195)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_195))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_195 Int)) (=> (and (<= a__first temp___idx_195) (<= temp___idx_195 a__last)) (= (to_rep5 (select a temp___idx_195)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_195)))))))))))
(declare-const dummy11 (Array Int logfileindext))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int logfileindext)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int logfileindext)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq11 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields2)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__3__projection ((a us_split_fields2)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___9__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___10__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (bool_eq2 (rec__auditlog__logfilelistt__list (us_split_fields3 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields3 b)) 1 17) true) (= (to_rep5 (rec__auditlog__logfilelistt__head (us_split_fields3 a))) (to_rep5 (rec__auditlog__logfilelistt__head (us_split_fields3 b))))) (= (to_rep5 (rec__auditlog__logfilelistt__lasti (us_split_fields3 a))) (to_rep5 (rec__auditlog__logfilelistt__lasti (us_split_fields3 b))))) (= (to_rep7 (rec__auditlog__logfilelistt__length (us_split_fields3 a))) (to_rep7 (rec__auditlog__logfilelistt__length (us_split_fields3 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq12 (us_rep1 us_rep1) Bool)
(declare-const dummy12 us_rep1)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep1)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep1 (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(declare-fun fileentrycounttqtint (fileentrycountt) Int)
(assert (forall ((i fileentrycountt)) (and (<= 0 (fileentrycounttqtint i)) (<= (fileentrycounttqtint i) 1024))))
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq13 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy13 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(define-fun to_rep8 ((x fileentrycountt)) Int (fileentrycounttqtint x))
(declare-fun of_rep8 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range11 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq4 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_196 Int)) (=> (and (<= a__first temp___idx_196) (<= temp___idx_196 a__last)) (= (to_rep8 (select a temp___idx_196)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_196))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_196 Int)) (=> (and (<= a__first temp___idx_196) (<= temp___idx_196 a__last)) (= (to_rep8 (select a temp___idx_196)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_196)))))))))))
(declare-const dummy14 (Array Int fileentrycountt))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq14 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep1) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields4)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields4)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields4)) us_rep1 (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields4)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___10__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___11__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq5 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 a))) (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 b)))) (= (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 a))) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 b))))) (= (bool_eq3 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 b))) true)) (= (bool_eq4 (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 b)) 1 17) true)) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep2) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep2) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq15 (us_rep2 us_rep2) Bool)
(declare-const dummy15 us_rep2)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep2)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep2 (logfilestatet__content a))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep3 0)
(declare-fun bool_eq6 (us_rep3 us_rep3) Bool)
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep3) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep3) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep3)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment5 a))))
(declare-fun user_eq16 (us_rep3 us_rep3) Bool)
(declare-const dummy16 us_rep3)
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 us_rep3)))))
(define-fun t__ref___2__projection ((a t__ref1)) us_rep3 (t__content1 a))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep3))))))
(declare-fun slide3 ((Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3))) (forall ((first Int)) (! (= (slide3 a first first) a) :pattern ((slide3 a first first))))))
(assert (forall ((a (Array Int us_rep3))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq7 ((a (Array Int us_rep3)) (a__first Int) (a__last Int) (b (Array Int us_rep3)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_197 Int)) (=> (and (<= a__first temp___idx_197) (<= temp___idx_197 a__last)) (= (bool_eq6 (select a temp___idx_197) (select b (+ (- b__first a__first) temp___idx_197))) true)))) true false))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq7 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_197 Int)) (=> (and (<= a__first temp___idx_197) (<= temp___idx_197 a__last)) (= (bool_eq6 (select a temp___idx_197) (select b (+ (- b__first a__first) temp___idx_197))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun valid_numberlogentries (Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun temp_____aggregate_def_1341 (Int) (Array Int logfileindext))
(declare-fun temp_____aggregate_def_1345 (Int) (Array Int fileentrycountt))
(define-fun dynamic_invariant2 ((temp___expr_1335 us_rep2) (temp___is_init_1331 Bool) (temp___skip_constant_1332 Bool) (temp___do_toplevel_1333 Bool) (temp___do_typ_inv_1334 Bool)) Bool (=> (= temp___do_typ_inv_1334 true) (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___expr_1335))) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___expr_1335))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___expr_1335)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___expr_1335))) true)))
(declare-const rliteral logfileindext)
(assert (= (logfileindextqtint rliteral) 1))
(declare-const rliteral1 logfilecountt)
(assert (= (logfilecounttqtint rliteral1) 1))
(define-fun default_initial_assumption ((temp___expr_1339 us_rep2) (temp___skip_top_level_1340 Bool)) Bool (and (and (and (= (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___expr_1339))) 1) (= (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___expr_1339))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___expr_1339)) (mk___rep1 (mk___split_fields1 (temp_____aggregate_def_1341 1) rliteral rliteral rliteral1)))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___expr_1339)) (temp_____aggregate_def_1345 0))))
(define-fun type_invariant ((temp___1349 us_rep2)) Bool (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___1349))) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___1349))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___1349)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___1349))) true))
(declare-sort privileget 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq17 (privileget privileget) Bool)
(declare-const dummy17 privileget)
(declare-datatypes () ((privileget__ref (mk_privileget__ref (privileget__content privileget)))))
(define-fun privileget__ref___projection ((a privileget__ref)) privileget (privileget__content a))
(declare-fun to_rep9 (privileget) Int)
(declare-fun of_rep9 (Int) privileget)
(assert (forall ((x privileget)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x privileget)) (! (in_range12 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-sort opandnullt 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 4)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq18 (opandnullt opandnullt) Bool)
(declare-const dummy18 opandnullt)
(declare-datatypes () ((opandnullt__ref (mk_opandnullt__ref (opandnullt__content opandnullt)))))
(define-fun opandnullt__ref___projection ((a opandnullt__ref)) opandnullt (opandnullt__content a))
(declare-fun to_rep10 (opandnullt) Int)
(declare-fun of_rep10 (Int) opandnullt)
(assert (forall ((x opandnullt)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x opandnullt)) (! (in_range13 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep10 (of_rep10 x)) x)) :pattern ((to_rep10 (of_rep10 x))))))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__admin__t__rolepresent privileget) (rec__admin__t__currentop opandnullt)))))
(define-fun us_split_fields_RolePresent__projection ((a us_split_fields6)) privileget (rec__admin__t__rolepresent a))
(define-fun us_split_fields_CurrentOp__projection ((a us_split_fields6)) opandnullt (rec__admin__t__currentop a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep4 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___3__projection ((a us_rep4)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq8 ((a us_rep4) (b us_rep4)) Bool (ite (and (= (to_rep9 (rec__admin__t__rolepresent (us_split_fields7 a))) (to_rep9 (rec__admin__t__rolepresent (us_split_fields7 b)))) (= (to_rep10 (rec__admin__t__currentop (us_split_fields7 a))) (to_rep10 (rec__admin__t__currentop (us_split_fields7 b))))) true false))
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep4) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep4) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep4)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment6 a))))
(declare-const admin__t__rolepresent__first__bit Int)
(declare-const admin__t__rolepresent__last__bit Int)
(declare-const admin__t__rolepresent__position Int)
(assert (<= 0 admin__t__rolepresent__first__bit))
(assert (< admin__t__rolepresent__first__bit admin__t__rolepresent__last__bit))
(assert (<= 0 admin__t__rolepresent__position))
(declare-const admin__t__currentop__first__bit Int)
(declare-const admin__t__currentop__last__bit Int)
(declare-const admin__t__currentop__position Int)
(assert (<= 0 admin__t__currentop__first__bit))
(assert (< admin__t__currentop__first__bit admin__t__currentop__last__bit))
(assert (<= 0 admin__t__currentop__position))
(declare-fun user_eq19 (us_rep4 us_rep4) Bool)
(declare-const dummy19 us_rep4)
(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 us_rep4)))))
(define-fun t__ref___projection ((a t__ref2)) us_rep4 (t__content2 a))
(declare-sort statscount 0)
(declare-fun statscountqtint (statscount) Int)
(assert (forall ((i statscount)) (and (<= 0 (statscountqtint i)) (<= (statscountqtint i) 2147483647))))
(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq20 (statscount statscount) Bool)
(declare-const dummy20 statscount)
(declare-datatypes () ((statscount__ref (mk_statscount__ref (statscount__content statscount)))))
(define-fun statscount__ref___projection ((a statscount__ref)) statscount (statscount__content a))
(define-fun to_rep11 ((x statscount)) Int (statscountqtint x))
(declare-fun of_rep11 (Int) statscount)
(assert (forall ((x statscount)) (! (= (of_rep11 (to_rep11 x)) x) :pattern ((to_rep11 x)))))
(assert (forall ((x statscount)) (! (in_range14 (to_rep11 x)) :pattern ((to_rep11 x)))))
(assert (forall ((x Int)) (! (=> (in_range14 x) (= (to_rep11 (of_rep11 x)) x)) :pattern ((to_rep11 (of_rep11 x))))))
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__stats__t__successentry statscount) (rec__stats__t__failentry statscount) (rec__stats__t__successbio statscount) (rec__stats__t__failbio statscount)))))
(define-fun us_split_fields_SuccessEntry__projection ((a us_split_fields8)) statscount (rec__stats__t__successentry a))
(define-fun us_split_fields_FailEntry__projection ((a us_split_fields8)) statscount (rec__stats__t__failentry a))
(define-fun us_split_fields_SuccessBio__projection ((a us_split_fields8)) statscount (rec__stats__t__successbio a))
(define-fun us_split_fields_FailBio__projection ((a us_split_fields8)) statscount (rec__stats__t__failbio a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___14__projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep5 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___15__projection ((a us_rep5)) us_split_fields8 (us_split_fields9 a))
(define-fun bool_eq9 ((a us_rep5) (b us_rep5)) Bool (ite (and (and (and (= (to_rep11 (rec__stats__t__successentry (us_split_fields9 a))) (to_rep11 (rec__stats__t__successentry (us_split_fields9 b)))) (= (to_rep11 (rec__stats__t__failentry (us_split_fields9 a))) (to_rep11 (rec__stats__t__failentry (us_split_fields9 b))))) (= (to_rep11 (rec__stats__t__successbio (us_split_fields9 a))) (to_rep11 (rec__stats__t__successbio (us_split_fields9 b))))) (= (to_rep11 (rec__stats__t__failbio (us_split_fields9 a))) (to_rep11 (rec__stats__t__failbio (us_split_fields9 b))))) true false))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep5) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep5) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep5)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment7 a))))
(declare-const stats__t__successentry__first__bit Int)
(declare-const stats__t__successentry__last__bit Int)
(declare-const stats__t__successentry__position Int)
(assert (<= 0 stats__t__successentry__first__bit))
(assert (< stats__t__successentry__first__bit stats__t__successentry__last__bit))
(assert (<= 0 stats__t__successentry__position))
(declare-const stats__t__failentry__first__bit Int)
(declare-const stats__t__failentry__last__bit Int)
(declare-const stats__t__failentry__position Int)
(assert (<= 0 stats__t__failentry__first__bit))
(assert (< stats__t__failentry__first__bit stats__t__failentry__last__bit))
(assert (<= 0 stats__t__failentry__position))
(declare-const stats__t__successbio__first__bit Int)
(declare-const stats__t__successbio__last__bit Int)
(declare-const stats__t__successbio__position Int)
(assert (<= 0 stats__t__successbio__first__bit))
(assert (< stats__t__successbio__first__bit stats__t__successbio__last__bit))
(assert (<= 0 stats__t__successbio__position))
(declare-const stats__t__failbio__first__bit Int)
(declare-const stats__t__failbio__last__bit Int)
(declare-const stats__t__failbio__position Int)
(assert (<= 0 stats__t__failbio__first__bit))
(assert (< stats__t__failbio__first__bit stats__t__failbio__last__bit))
(assert (<= 0 stats__t__failbio__position))
(declare-fun user_eq21 (us_rep5 us_rep5) Bool)
(declare-const dummy21 us_rep5)
(declare-datatypes () ((t__ref3 (mk_t__ref3 (t__content3 us_rep5)))))
(define-fun t__ref___5__projection ((a t__ref3)) us_rep5 (t__content3 a))
(declare-const thestats us_rep5)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const theadmin us_rep4)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(define-fun dynamic_invariant3 ((temp___expr_493 Int) (temp___is_init_489 Bool) (temp___skip_constant_490 Bool) (temp___do_toplevel_491 Bool) (temp___do_typ_inv_492 Bool)) Bool (=> (or (= temp___is_init_489 true) (<= 0 4)) (in_range13 temp___expr_493)))
(define-fun dynamic_invariant4 ((temp___expr_423 Int) (temp___is_init_419 Bool) (temp___skip_constant_420 Bool) (temp___do_toplevel_421 Bool) (temp___do_typ_inv_422 Bool)) Bool (=> (or (= temp___is_init_419 true) (<= 0 3)) (in_range12 temp___expr_423)))
(define-fun dynamic_invariant5 ((temp___expr_1273 Int) (temp___is_init_1269 Bool) (temp___skip_constant_1270 Bool) (temp___do_toplevel_1271 Bool) (temp___do_typ_inv_1272 Bool)) Bool (=> (or (= temp___is_init_1269 true) (<= 0 17)) (in_range10 temp___expr_1273)))
(define-fun dynamic_invariant6 ((temp___expr_1280 Int) (temp___is_init_1276 Bool) (temp___skip_constant_1277 Bool) (temp___do_toplevel_1278 Bool) (temp___do_typ_inv_1279 Bool)) Bool (=> (or (= temp___is_init_1276 true) (<= 1 17)) (in_range8 temp___expr_1280)))
(define-fun dynamic_invariant7 ((temp___expr_1406 Int) (temp___is_init_1402 Bool) (temp___skip_constant_1403 Bool) (temp___do_toplevel_1404 Bool) (temp___do_typ_inv_1405 Bool)) Bool (=> (or (= temp___is_init_1402 true) (<= 0 2)) (in_range7 temp___expr_1406)))
(define-fun dynamic_invariant8 ((temp___expr_1287 Int) (temp___is_init_1283 Bool) (temp___skip_constant_1284 Bool) (temp___do_toplevel_1285 Bool) (temp___do_typ_inv_1286 Bool)) Bool (=> (or (= temp___is_init_1283 true) (<= 0 17408)) (in_range9 temp___expr_1287)))
(define-fun dynamic_invariant9 ((temp___expr_1318 Int) (temp___is_init_1314 Bool) (temp___skip_constant_1315 Bool) (temp___do_toplevel_1316 Bool) (temp___do_typ_inv_1317 Bool)) Bool (=> (or (= temp___is_init_1314 true) (<= 0 1024)) (in_range11 temp___expr_1318)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep1)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep7 (rec__auditlog__logfilelistt__length (us_split_fields3 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep7 (rec__auditlog__logfilelistt__length (us_split_fields3 usedlogfiles))) 1) 1024) (to_rep8 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(declare-const rliteral2 fileentrycountt)
(assert (= (fileentrycounttqtint rliteral2) 0))
(assert (forall ((temp___1347 Int)) (=> (dynamic_invariant9 temp___1347 true true true true) (forall ((temp___1348 Int)) (= (select (temp_____aggregate_def_1345 temp___1347) temp___1348) rliteral2)))))
(define-fun dynamic_invariant10 ((temp___expr_622 Int) (temp___is_init_618 Bool) (temp___skip_constant_619 Bool) (temp___do_toplevel_620 Bool) (temp___do_typ_inv_621 Bool)) Bool (=> (or (= temp___is_init_618 true) (<= 1901 2099)) (in_range1 temp___expr_622)))
(define-fun dynamic_invariant11 ((temp___expr_629 Int) (temp___is_init_625 Bool) (temp___skip_constant_626 Bool) (temp___do_toplevel_627 Bool) (temp___do_typ_inv_628 Bool)) Bool (=> (or (= temp___is_init_625 true) (<= 1 12)) (in_range2 temp___expr_629)))
(define-fun dynamic_invariant12 ((temp___expr_636 Int) (temp___is_init_632 Bool) (temp___skip_constant_633 Bool) (temp___do_toplevel_634 Bool) (temp___do_typ_inv_635 Bool)) Bool (=> (or (= temp___is_init_632 true) (<= 1 31)) (in_range3 temp___expr_636)))
(define-fun dynamic_invariant13 ((temp___expr_668 Int) (temp___is_init_664 Bool) (temp___skip_constant_665 Bool) (temp___do_toplevel_666 Bool) (temp___do_typ_inv_667 Bool)) Bool (=> (or (= temp___is_init_664 true) (<= 0 86399999)) (in_range4 temp___expr_668)))
(define-fun dynamic_invariant14 ((temp___expr_1693 Int) (temp___is_init_1689 Bool) (temp___skip_constant_1690 Bool) (temp___do_toplevel_1691 Bool) (temp___do_typ_inv_1692 Bool)) Bool (=> (or (= temp___is_init_1689 true) (<= 0 2147483647)) (in_range14 temp___expr_1693)))
(assert (forall ((temp___1343 Int)) (=> (dynamic_invariant6 temp___1343 true true true true) (forall ((temp___1344 Int)) (= (select (temp_____aggregate_def_1341 temp___1343) temp___1344) rliteral)))))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const currentlatch Int)
(declare-const latchtimeout__split_fields yearst)
(declare-const latchtimeout__split_fields1 monthst)
(declare-const latchtimeout__split_fields2 dayst)
(declare-const latchtimeout__split_fields3 millisecst)
(declare-const state us_private)
(declare-const state1 us_private)
(declare-const output us_private__ref)
(declare-const logfilestate__split_fields7 us_split_fields4)
(declare-const auditalarm1 Int)
(declare-const state2 us_private)
(declare-const output1 us_private)
(declare-const logfilestate__split_fields8 us_split_fields4)
(declare-const auditalarm2 Int)
(declare-const state3 us_private)
(declare-const output2 us_private)
(declare-const logfiles (Array Int us_rep3))
(declare-const logfilesstatus (Array Int filestatust))
(declare-const logfilestate__split_fields9 us_split_fields4)
(declare-const auditalarm3 Int)
(declare-const auditsystemfault Bool)
(declare-const systemfault Bool)
(declare-const filestate us_private)
(declare-const state4 us_private)
(declare-const output3 us_private)
(declare-const output4 us_private)
(declare-const logfiles1 map__ref3)
(declare-const logfilesstatus1 map__ref)
(declare-const logfilestate__split_fields10 us_split_fields__ref2)
(declare-const auditalarm4 int__ref)
(declare-const auditsystemfault1 bool__ref)
(declare-const systemfault1 bool__ref)
(declare-const filestate1 us_private__ref)
(declare-const state5 us_private__ref)
(declare-const output5 us_private__ref)
(declare-const output6 us_private__ref)
(declare-const state6 us_private__ref)
(declare-const output7 us_private__ref)
(declare-const state7 us_private__ref)
(declare-const output8 us_private__ref)
(declare-const logfiles2 (Array Int us_rep3))
(declare-const logfilesstatus2 (Array Int filestatust))
(declare-const logfilestate__split_fields11 us_split_fields4)
(declare-const auditalarm5 Int)
(declare-const auditsystemfault2 Bool)
(declare-const systemfault2 Bool)
(declare-const filestate2 us_private)
(declare-const state8 us_private)
(declare-const output9 us_private)
(declare-const output10 us_private)
(declare-const state9 us_private)
(declare-const output11 us_private)
(declare-const state10 us_private)
(declare-const output12 us_private)
(assert (= (valid_numberlogentries (to_rep5 logfilestate__split_fields) (to_rep6 logfilestate__split_fields1) (mk___rep1 (mk___split_fields1 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range6 auditalarm))
(assert (in_range5 currentlatch))
(assert (and (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields7)) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields7)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields7) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields7)) true) (in_range6 auditalarm1)))
(assert (and (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields8)) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields8)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields8) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields8)) true) (in_range6 auditalarm2)))
(assert (and (and (=> (= (thedooralarm state1) 0) (= (isalarming Tuple0) true)) (or (= (= (islocked currentlatch state (mk___split_fields latchtimeout__split_fields latchtimeout__split_fields1 latchtimeout__split_fields2 latchtimeout__split_fields3)) true) (= (latchislocked Tuple0) true)) (= systemfault true))) (and (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields9)) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields9)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields9) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields9)) true) (in_range6 auditalarm3))))
(assert (= output8 (let ((subject output)) (mk___private__ref output2))))
(assert (= state7 (mk___private__ref state3)))
(assert (= output7 (mk___private__ref output1)))
(assert (= state6 (mk___private__ref state2)))
(assert (= output6 (mk___private__ref output4)))
(assert (= output5 (mk___private__ref output3)))
(assert (= state5 (mk___private__ref state4)))
(assert (= filestate1 (mk___private__ref filestate)))
(assert (= systemfault1 (mk_bool__ref systemfault)))
(assert (= auditsystemfault1 (mk_bool__ref auditsystemfault)))
(assert (= auditalarm4 (mk_int__ref auditalarm3)))
(assert (= logfilestate__split_fields10 (mk___split_fields__ref2 logfilestate__split_fields9)))
(assert (= logfilesstatus1 (mk_map__ref logfilesstatus)))
(assert (= logfiles1 (mk_map__ref3 logfiles)))
(assert (= output12 output2))
(assert (= state10 state3))
(assert (= output11 output1))
(assert (= state9 state2))
(assert (= output10 output4))
(assert (= output9 output3))
(assert (= state8 state4))
(assert (= filestate2 filestate))
(assert (= systemfault2 systemfault))
(assert (= auditsystemfault2 auditsystemfault))
(assert (= auditalarm5 auditalarm3))
(assert (= logfilestate__split_fields11 logfilestate__split_fields9))
(assert (= logfilesstatus2 logfilesstatus))
(assert (= logfiles2 logfiles))
(assert (not (or (= (= (islocked currentlatch state (mk___split_fields latchtimeout__split_fields latchtimeout__split_fields1 latchtimeout__split_fields2 latchtimeout__split_fields3)) true) (= (latchislocked Tuple0) true)) (= (bool__content systemfault1) true))))
(check-sat)
(exit)
