(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort yearst 0)
(declare-fun yearstqtint (yearst) Int)
(assert (forall ((i yearst)) (and (<= 1901 (yearstqtint i)) (<= (yearstqtint i) 2099))))
(define-fun in_range4 ((x Int)) Bool (and (<= 1901 x) (<= x 2099)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (yearst yearst) Bool)
(declare-const dummy4 yearst)
(declare-datatypes () ((yearst__ref (mk_yearst__ref (yearst__content yearst)))))
(define-fun yearst__ref___projection ((a yearst__ref)) yearst (yearst__content a))
(define-fun to_rep2 ((x yearst)) Int (yearstqtint x))
(declare-fun of_rep2 (Int) yearst)
(assert (forall ((x yearst)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x yearst)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort monthst 0)
(declare-fun monthstqtint (monthst) Int)
(assert (forall ((i monthst)) (and (<= 1 (monthstqtint i)) (<= (monthstqtint i) 12))))
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (monthst monthst) Bool)
(declare-const dummy5 monthst)
(declare-datatypes () ((monthst__ref (mk_monthst__ref (monthst__content monthst)))))
(define-fun monthst__ref___projection ((a monthst__ref)) monthst (monthst__content a))
(define-fun to_rep3 ((x monthst)) Int (monthstqtint x))
(declare-fun of_rep3 (Int) monthst)
(assert (forall ((x monthst)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x monthst)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort dayst 0)
(declare-fun daystqtint (dayst) Int)
(assert (forall ((i dayst)) (and (<= 1 (daystqtint i)) (<= (daystqtint i) 31))))
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (dayst dayst) Bool)
(declare-const dummy6 dayst)
(declare-datatypes () ((dayst__ref (mk_dayst__ref (dayst__content dayst)))))
(define-fun dayst__ref___projection ((a dayst__ref)) dayst (dayst__content a))
(define-fun to_rep4 ((x dayst)) Int (daystqtint x))
(declare-fun of_rep4 (Int) dayst)
(assert (forall ((x dayst)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x dayst)) (! (in_range6 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-sort millisecst 0)
(declare-fun millisecstqtint (millisecst) Int)
(assert (forall ((i millisecst)) (and (<= 0 (millisecstqtint i)) (<= (millisecstqtint i) 86399999))))
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 86399999)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq7 (millisecst millisecst) Bool)
(declare-const dummy7 millisecst)
(declare-datatypes () ((millisecst__ref (mk_millisecst__ref (millisecst__content millisecst)))))
(define-fun millisecst__ref___projection ((a millisecst__ref)) millisecst (millisecst__content a))
(define-fun to_rep5 ((x millisecst)) Int (millisecstqtint x))
(declare-fun of_rep5 (Int) millisecst)
(assert (forall ((x millisecst)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x millisecst)) (! (in_range7 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__clock__timet__year yearst) (rec__clock__timet__month monthst) (rec__clock__timet__day dayst) (rec__clock__timet__millisec millisecst)))))
(define-fun us_split_fields_Year__projection ((a us_split_fields)) yearst (rec__clock__timet__year a))
(define-fun us_split_fields_Month__projection ((a us_split_fields)) monthst (rec__clock__timet__month a))
(define-fun us_split_fields_Day__projection ((a us_split_fields)) dayst (rec__clock__timet__day a))
(define-fun us_split_fields_MilliSec__projection ((a us_split_fields)) millisecst (rec__clock__timet__millisec a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___7__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (to_rep2 (rec__clock__timet__year (us_split_fields1 a))) (to_rep2 (rec__clock__timet__year (us_split_fields1 b)))) (= (to_rep3 (rec__clock__timet__month (us_split_fields1 a))) (to_rep3 (rec__clock__timet__month (us_split_fields1 b))))) (= (to_rep4 (rec__clock__timet__day (us_split_fields1 a))) (to_rep4 (rec__clock__timet__day (us_split_fields1 b))))) (= (to_rep5 (rec__clock__timet__millisec (us_split_fields1 a))) (to_rep5 (rec__clock__timet__millisec (us_split_fields1 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const clock__timet__year__first__bit Int)
(declare-const clock__timet__year__last__bit Int)
(declare-const clock__timet__year__position Int)
(assert (<= 0 clock__timet__year__first__bit))
(assert (< clock__timet__year__first__bit clock__timet__year__last__bit))
(assert (<= 0 clock__timet__year__position))
(declare-const clock__timet__month__first__bit Int)
(declare-const clock__timet__month__last__bit Int)
(declare-const clock__timet__month__position Int)
(assert (<= 0 clock__timet__month__first__bit))
(assert (< clock__timet__month__first__bit clock__timet__month__last__bit))
(assert (<= 0 clock__timet__month__position))
(declare-const clock__timet__day__first__bit Int)
(declare-const clock__timet__day__last__bit Int)
(declare-const clock__timet__day__position Int)
(assert (<= 0 clock__timet__day__first__bit))
(assert (< clock__timet__day__first__bit clock__timet__day__last__bit))
(assert (<= 0 clock__timet__day__position))
(declare-const clock__timet__millisec__first__bit Int)
(declare-const clock__timet__millisec__last__bit Int)
(declare-const clock__timet__millisec__position Int)
(assert (<= 0 clock__timet__millisec__first__bit))
(assert (< clock__timet__millisec__first__bit clock__timet__millisec__last__bit))
(assert (<= 0 clock__timet__millisec__position))
(declare-fun user_eq8 (us_rep us_rep) Bool)
(declare-const dummy8 us_rep)
(declare-datatypes () ((timet__ref (mk_timet__ref (timet__content us_rep)))))
(define-fun timet__ref___projection ((a timet__ref)) us_rep (timet__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun thecurrenttime (us_split_fields us_private) us_rep)
(declare-fun thecurrenttime__function_guard (us_rep us_split_fields us_private) Bool)
(assert true)
(assert (forall ((clock__currenttimevar__fields us_split_fields)) (forall ((clock__currenttime us_private)) (! (= (thecurrenttime clock__currenttimevar__fields clock__currenttime) (mk___rep clock__currenttimevar__fields)) :pattern ((thecurrenttime clock__currenttimevar__fields clock__currenttime))))))
(declare-fun authperiodisempty (us_private) Bool)
(declare-fun authperiodisempty__function_guard (Bool us_private) Bool)
(assert true)
(declare-fun theenclaveclearance (us_private) Int)
(declare-fun theenclaveclearance__function_guard (Int us_private) Bool)
(declare-sort classt 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 5)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq9 (classt classt) Bool)
(declare-const dummy9 classt)
(declare-datatypes () ((classt__ref (mk_classt__ref (classt__content classt)))))
(define-fun classt__ref___projection ((a classt__ref)) classt (classt__content a))
(define-fun dynamic_invariant ((temp___expr_607 Int) (temp___is_init_603 Bool) (temp___skip_constant_604 Bool) (temp___do_toplevel_605 Bool) (temp___do_typ_inv_606 Bool)) Bool (=> (or (= temp___is_init_603 true) (<= 0 5)) (in_range8 temp___expr_607)))
(assert (forall ((configdata__state us_private)) (! (dynamic_invariant (theenclaveclearance configdata__state) true false true true) :pattern ((theenclaveclearance configdata__state)))))
(declare-sort logfileindext 0)
(declare-fun logfileindextqtint (logfileindext) Int)
(assert (forall ((i logfileindext)) (and (<= 1 (logfileindextqtint i)) (<= (logfileindextqtint i) 17))))
(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq10 (logfileindext logfileindext) Bool)
(declare-const dummy10 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(define-fun to_rep6 ((x logfileindext)) Int (logfileindextqtint x))
(declare-fun of_rep6 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x logfileindext)) (! (in_range9 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-sort logentrycountt 0)
(declare-fun logentrycounttqtint (logentrycountt) Int)
(assert (forall ((i logentrycountt)) (and (<= 0 (logentrycounttqtint i)) (<= (logentrycounttqtint i) 17408))))
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq11 (logentrycountt logentrycountt) Bool)
(declare-const dummy11 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(define-fun to_rep7 ((x logentrycountt)) Int (logentrycounttqtint x))
(declare-fun of_rep7 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x logentrycountt)) (! (in_range10 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-sort logfilecountt 0)
(declare-fun logfilecounttqtint (logfilecountt) Int)
(assert (forall ((i logfilecountt)) (and (<= 0 (logfilecounttqtint i)) (<= (logfilecounttqtint i) 17))))
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq12 (logfilecountt logfilecountt) Bool)
(declare-const dummy12 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(define-fun to_rep8 ((x logfilecountt)) Int (logfilecounttqtint x))
(declare-fun of_rep8 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x logfilecountt)) (! (in_range11 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq3 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (to_rep6 (select a temp___idx_175)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_175))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (to_rep6 (select a temp___idx_175)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_175)))))))))))
(declare-const dummy13 (Array Int logfileindext))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int logfileindext)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int logfileindext)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq13 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields2)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields2)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___10__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___11__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq4 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (bool_eq3 (rec__auditlog__logfilelistt__list (us_split_fields3 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields3 b)) 1 17) true) (= (to_rep6 (rec__auditlog__logfilelistt__head (us_split_fields3 a))) (to_rep6 (rec__auditlog__logfilelistt__head (us_split_fields3 b))))) (= (to_rep6 (rec__auditlog__logfilelistt__lasti (us_split_fields3 a))) (to_rep6 (rec__auditlog__logfilelistt__lasti (us_split_fields3 b))))) (= (to_rep8 (rec__auditlog__logfilelistt__length (us_split_fields3 a))) (to_rep8 (rec__auditlog__logfilelistt__length (us_split_fields3 b))))) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq14 (us_rep1 us_rep1) Bool)
(declare-const dummy14 us_rep1)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep1)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep1 (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(declare-fun fileentrycounttqtint (fileentrycountt) Int)
(assert (forall ((i fileentrycountt)) (and (<= 0 (fileentrycounttqtint i)) (<= (fileentrycounttqtint i) 1024))))
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq15 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy15 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(define-fun to_rep9 ((x fileentrycountt)) Int (fileentrycounttqtint x))
(declare-fun of_rep9 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range12 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first2 Int)) (! (= (slide2 a first2 first2) a) :pattern ((slide2 a first2 first2))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq5 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_176 Int)) (=> (and (<= a__first temp___idx_176) (<= temp___idx_176 a__last)) (= (to_rep9 (select a temp___idx_176)) (to_rep9 (select b (+ (- b__first a__first) temp___idx_176))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq5 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_176 Int)) (=> (and (<= a__first temp___idx_176) (<= temp___idx_176 a__last)) (= (to_rep9 (select a temp___idx_176)) (to_rep9 (select b (+ (- b__first a__first) temp___idx_176)))))))))))
(declare-const dummy16 (Array Int fileentrycountt))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment4 a))))
(declare-fun user_eq16 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep1) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields4)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields4)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields4)) us_rep1 (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields4)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___11__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___12__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq6 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (to_rep6 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 a))) (to_rep6 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 b)))) (= (to_rep7 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 a))) (to_rep7 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 b))))) (= (bool_eq4 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 b))) true)) (= (bool_eq5 (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 b)) 1 17) true)) true false))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep2) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep2) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq17 (us_rep2 us_rep2) Bool)
(declare-const dummy17 us_rep2)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep2)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep2 (logfilestatet__content a))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep3 0)
(declare-fun bool_eq7 (us_rep3 us_rep3) Bool)
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep3) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep3) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep3)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment6 a))))
(declare-fun user_eq18 (us_rep3 us_rep3) Bool)
(declare-const dummy18 us_rep3)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep3)))))
(define-fun t__ref___projection ((a t__ref)) us_rep3 (t__content a))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep3))))))
(declare-fun slide3 ((Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3))) (forall ((first2 Int)) (! (= (slide3 a first2 first2) a) :pattern ((slide3 a first2 first2))))))
(assert (forall ((a (Array Int us_rep3))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq8 ((a (Array Int us_rep3)) (a__first Int) (a__last Int) (b (Array Int us_rep3)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_177 Int)) (=> (and (<= a__first temp___idx_177) (<= temp___idx_177 a__last)) (= (bool_eq7 (select a temp___idx_177) (select b (+ (- b__first a__first) temp___idx_177))) true)))) true false))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq8 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_177 Int)) (=> (and (<= a__first temp___idx_177) (<= temp___idx_177 a__last)) (= (bool_eq7 (select a temp___idx_177) (select b (+ (- b__first a__first) temp___idx_177))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort filestatust 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq19 (filestatust filestatust) Bool)
(declare-const dummy19 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep10 (filestatust) Int)
(declare-fun of_rep10 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x filestatust)) (! (in_range13 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep10 (of_rep10 x)) x)) :pattern ((to_rep10 (of_rep10 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int filestatust))))))
(declare-fun slide4 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first2 Int)) (! (= (slide4 a first2 first2) a) :pattern ((slide4 a first2 first2))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(define-fun bool_eq9 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_178 Int)) (=> (and (<= a__first temp___idx_178) (<= temp___idx_178 a__last)) (= (to_rep10 (select a temp___idx_178)) (to_rep10 (select b (+ (- b__first a__first) temp___idx_178))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq9 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_178 Int)) (=> (and (<= a__first temp___idx_178) (<= temp___idx_178 a__last)) (= (to_rep10 (select a temp___idx_178)) (to_rep10 (select b (+ (- b__first a__first) temp___idx_178)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-sort statust 0)
(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq20 (statust statust) Bool)
(declare-const dummy20 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant1 ((temp___expr_626 Int) (temp___is_init_622 Bool) (temp___skip_constant_623 Bool) (temp___do_toplevel_624 Bool) (temp___do_typ_inv_625 Bool)) Bool (=> (or (= temp___is_init_622 true) (<= 0 1)) (in_range14 temp___expr_626)))
(declare-fun valid_numberlogentries (Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun temp_____aggregate_def_1336 (Int) (Array Int logfileindext))
(declare-fun temp_____aggregate_def_1340 (Int) (Array Int fileentrycountt))
(define-fun dynamic_invariant2 ((temp___expr_1330 us_rep2) (temp___is_init_1326 Bool) (temp___skip_constant_1327 Bool) (temp___do_toplevel_1328 Bool) (temp___do_typ_inv_1329 Bool)) Bool (=> (= temp___do_typ_inv_1329 true) (= (valid_numberlogentries (to_rep6 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___expr_1330))) (to_rep7 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___expr_1330))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___expr_1330)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___expr_1330))) true)))
(declare-const rliteral logfileindext)
(assert (= (logfileindextqtint rliteral) 1))
(declare-const rliteral1 logfilecountt)
(assert (= (logfilecounttqtint rliteral1) 1))
(define-fun default_initial_assumption ((temp___expr_1334 us_rep2) (temp___skip_top_level_1335 Bool)) Bool (and (and (and (= (to_rep6 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___expr_1334))) 1) (= (to_rep7 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___expr_1334))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___expr_1334)) (mk___rep1 (mk___split_fields1 (temp_____aggregate_def_1336 1) rliteral rliteral rliteral1)))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___expr_1334)) (temp_____aggregate_def_1340 0))))
(define-fun type_invariant ((temp___1344 us_rep2)) Bool (= (valid_numberlogentries (to_rep6 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___1344))) (to_rep7 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___1344))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___1344)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___1344))) true))
(declare-sort namecountt 0)
(declare-fun namecounttqtint (namecountt) Int)
(assert (forall ((i namecountt)) (and (<= 0 (namecounttqtint i)) (<= (namecounttqtint i) 40))))
(define-fun in_range15 ((x Int)) Bool (and (<= 0 x) (<= x 40)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq21 (namecountt namecountt) Bool)
(declare-const dummy21 namecountt)
(declare-datatypes () ((namecountt__ref (mk_namecountt__ref (namecountt__content namecountt)))))
(define-fun namecountt__ref___projection ((a namecountt__ref)) namecountt (namecountt__content a))
(define-fun to_rep11 ((x namecountt)) Int (namecounttqtint x))
(declare-fun of_rep11 (Int) namecountt)
(assert (forall ((x namecountt)) (! (= (of_rep11 (to_rep11 x)) x) :pattern ((to_rep11 x)))))
(assert (forall ((x namecountt)) (! (in_range15 (to_rep11 x)) :pattern ((to_rep11 x)))))
(assert (forall ((x Int)) (! (=> (in_range15 x) (= (to_rep11 (of_rep11 x)) x)) :pattern ((to_rep11 (of_rep11 x))))))
(declare-const dummy22 (Array Int character))
(declare-const value__size7 Int)
(declare-fun object__size7 ((Array Int character)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int character)) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 ((Array Int character)) Int)
(assert (<= 0 value__size7))
(assert (forall ((a (Array Int character))) (<= 0 (object__size7 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment7 a))))
(declare-fun user_eq22 ((Array Int character) (Array Int character)) Bool)
(declare-sort issueridt 0)
(declare-fun issueridtqtint (issueridt) Int)
(assert (forall ((i issueridt)) (and (<= 0 (issueridtqtint i)) (<= (issueridtqtint i) 4294967295))))
(define-fun in_range16 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq23 (issueridt issueridt) Bool)
(declare-const dummy23 issueridt)
(declare-datatypes () ((issueridt__ref (mk_issueridt__ref (issueridt__content issueridt)))))
(define-fun issueridt__ref___projection ((a issueridt__ref)) issueridt (issueridt__content a))
(define-fun to_rep12 ((x issueridt)) Int (issueridtqtint x))
(declare-fun of_rep12 (Int) issueridt)
(assert (forall ((x issueridt)) (! (= (of_rep12 (to_rep12 x)) x) :pattern ((to_rep12 x)))))
(assert (forall ((x issueridt)) (! (in_range16 (to_rep12 x)) :pattern ((to_rep12 x)))))
(assert (forall ((x Int)) (! (=> (in_range16 x) (= (to_rep12 (of_rep12 x)) x)) :pattern ((to_rep12 (of_rep12 x))))))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__cryptotypes__issuert__id issueridt) (rec__cryptotypes__issuert__namelength namecountt) (rec__cryptotypes__issuert__name (Array Int character))))))
(define-fun us_split_fields_ID__projection ((a us_split_fields6)) issueridt (rec__cryptotypes__issuert__id a))
(define-fun us_split_fields_NameLength__projection ((a us_split_fields6)) namecountt (rec__cryptotypes__issuert__namelength a))
(define-fun us_split_fields_Name__projection ((a us_split_fields6)) (Array Int character) (rec__cryptotypes__issuert__name a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep4 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___projection ((a us_rep4)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq10 ((a us_rep4) (b us_rep4)) Bool (ite (and (and (= (to_rep12 (rec__cryptotypes__issuert__id (us_split_fields7 a))) (to_rep12 (rec__cryptotypes__issuert__id (us_split_fields7 b)))) (= (to_rep11 (rec__cryptotypes__issuert__namelength (us_split_fields7 a))) (to_rep11 (rec__cryptotypes__issuert__namelength (us_split_fields7 b))))) (= (bool_eq (rec__cryptotypes__issuert__name (us_split_fields7 a)) 1 40 (rec__cryptotypes__issuert__name (us_split_fields7 b)) 1 40) true)) true false))
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep4) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep4) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep4)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment8 a))))
(declare-const cryptotypes__issuert__id__first__bit Int)
(declare-const cryptotypes__issuert__id__last__bit Int)
(declare-const cryptotypes__issuert__id__position Int)
(assert (<= 0 cryptotypes__issuert__id__first__bit))
(assert (< cryptotypes__issuert__id__first__bit cryptotypes__issuert__id__last__bit))
(assert (<= 0 cryptotypes__issuert__id__position))
(declare-const cryptotypes__issuert__namelength__first__bit Int)
(declare-const cryptotypes__issuert__namelength__last__bit Int)
(declare-const cryptotypes__issuert__namelength__position Int)
(assert (<= 0 cryptotypes__issuert__namelength__first__bit))
(assert (< cryptotypes__issuert__namelength__first__bit cryptotypes__issuert__namelength__last__bit))
(assert (<= 0 cryptotypes__issuert__namelength__position))
(declare-const cryptotypes__issuert__name__first__bit Int)
(declare-const cryptotypes__issuert__name__last__bit Int)
(declare-const cryptotypes__issuert__name__position Int)
(assert (<= 0 cryptotypes__issuert__name__first__bit))
(assert (< cryptotypes__issuert__name__first__bit cryptotypes__issuert__name__last__bit))
(assert (<= 0 cryptotypes__issuert__name__position))
(declare-fun user_eq24 (us_rep4 us_rep4) Bool)
(declare-const dummy24 us_rep4)
(declare-datatypes () ((issuert__ref (mk_issuert__ref (issuert__content us_rep4)))))
(define-fun issuert__ref___projection ((a issuert__ref)) us_rep4 (issuert__content a))
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__keystore__optionalprivatekeyt__ispresent Bool) (rec__keystore__optionalprivatekeyt__owner us_rep4)))))
(define-fun us_split_fields_IsPresent__projection ((a us_split_fields8)) Bool (rec__keystore__optionalprivatekeyt__ispresent a))
(define-fun us_split_fields_Owner__projection ((a us_split_fields8)) us_rep4 (rec__keystore__optionalprivatekeyt__owner a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___12__projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep5 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___13__projection ((a us_rep5)) us_split_fields8 (us_split_fields9 a))
(define-fun bool_eq11 ((a us_rep5) (b us_rep5)) Bool (ite (and (= (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields9 a)) (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields9 b))) (= (bool_eq10 (rec__keystore__optionalprivatekeyt__owner (us_split_fields9 a)) (rec__keystore__optionalprivatekeyt__owner (us_split_fields9 b))) true)) true false))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep5) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep5) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep5)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment9 a))))
(declare-const keystore__optionalprivatekeyt__ispresent__first__bit Int)
(declare-const keystore__optionalprivatekeyt__ispresent__last__bit Int)
(declare-const keystore__optionalprivatekeyt__ispresent__position Int)
(assert (<= 0 keystore__optionalprivatekeyt__ispresent__first__bit))
(assert (< keystore__optionalprivatekeyt__ispresent__first__bit keystore__optionalprivatekeyt__ispresent__last__bit))
(assert (<= 0 keystore__optionalprivatekeyt__ispresent__position))
(declare-const keystore__optionalprivatekeyt__owner__first__bit Int)
(declare-const keystore__optionalprivatekeyt__owner__last__bit Int)
(declare-const keystore__optionalprivatekeyt__owner__position Int)
(assert (<= 0 keystore__optionalprivatekeyt__owner__first__bit))
(assert (< keystore__optionalprivatekeyt__owner__first__bit keystore__optionalprivatekeyt__owner__last__bit))
(assert (<= 0 keystore__optionalprivatekeyt__owner__position))
(declare-fun user_eq25 (us_rep5 us_rep5) Bool)
(declare-const dummy25 us_rep5)
(declare-datatypes () ((optionalprivatekeyt__ref (mk_optionalprivatekeyt__ref (optionalprivatekeyt__content us_rep5)))))
(define-fun optionalprivatekeyt__ref___projection ((a optionalprivatekeyt__ref)) us_rep5 (optionalprivatekeyt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun privatekeypresent (us_split_fields8 us_private) Bool)
(declare-fun privatekeypresent__function_guard (Bool us_split_fields8 us_private) Bool)
(assert true)
(assert (forall ((keystore__thistisinfo__fields us_split_fields8)) (forall ((keystore__state us_private)) (! (= (= (privatekeypresent keystore__thistisinfo__fields keystore__state) true) (= (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields9 (mk___rep4 keystore__thistisinfo__fields))) true)) :pattern ((privatekeypresent keystore__thistisinfo__fields keystore__state))))))
(declare-fun thistis (us_split_fields8 us_private) us_rep4)
(declare-fun thistis__function_guard (us_rep4 us_split_fields8 us_private) Bool)
(assert true)
(assert (forall ((keystore__thistisinfo__fields us_split_fields8)) (forall ((keystore__state us_private)) (! (= (thistis keystore__thistisinfo__fields keystore__state) (rec__keystore__optionalprivatekeyt__owner (us_split_fields9 (mk___rep4 keystore__thistisinfo__fields)))) :pattern ((thistis keystore__thistisinfo__fields keystore__state))))))
(declare-sort serialnumbert 0)
(declare-fun serialnumbertqtint (serialnumbert) Int)
(assert (forall ((i serialnumbert)) (and (<= 0 (serialnumbertqtint i)) (<= (serialnumbertqtint i) 4294967295))))
(define-fun in_range17 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)
(declare-fun user_eq26 (serialnumbert serialnumbert) Bool)
(declare-const dummy26 serialnumbert)
(declare-datatypes () ((serialnumbert__ref (mk_serialnumbert__ref (serialnumbert__content serialnumbert)))))
(define-fun serialnumbert__ref___projection ((a serialnumbert__ref)) serialnumbert (serialnumbert__content a))
(define-fun to_rep13 ((x serialnumbert)) Int (serialnumbertqtint x))
(declare-fun of_rep13 (Int) serialnumbert)
(assert (forall ((x serialnumbert)) (! (= (of_rep13 (to_rep13 x)) x) :pattern ((to_rep13 x)))))
(assert (forall ((x serialnumbert)) (! (in_range17 (to_rep13 x)) :pattern ((to_rep13 x)))))
(assert (forall ((x Int)) (! (=> (in_range17 x) (= (to_rep13 (of_rep13 x)) x)) :pattern ((to_rep13 (of_rep13 x))))))
(declare-datatypes () ((us_split_fields10 (mk___split_fields5 (rec__certtypes__idt__issuer us_rep4) (rec__certtypes__idt__serialnumber serialnumbert)))))
(define-fun us_split_fields_Issuer__projection ((a us_split_fields10)) us_rep4 (rec__certtypes__idt__issuer a))
(define-fun us_split_fields_SerialNumber__projection ((a us_split_fields10)) serialnumbert (rec__certtypes__idt__serialnumber a))
(declare-datatypes () ((us_split_fields__ref5 (mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___5__projection ((a us_split_fields__ref5)) us_split_fields10 (us_split_fields__content5 a))
(declare-datatypes () ((us_rep6 (mk___rep5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___5__projection ((a us_rep6)) us_split_fields10 (us_split_fields11 a))
(define-fun bool_eq12 ((a us_rep6) (b us_rep6)) Bool (ite (and (= (bool_eq10 (rec__certtypes__idt__issuer (us_split_fields11 a)) (rec__certtypes__idt__issuer (us_split_fields11 b))) true) (= (to_rep13 (rec__certtypes__idt__serialnumber (us_split_fields11 a))) (to_rep13 (rec__certtypes__idt__serialnumber (us_split_fields11 b))))) true false))
(declare-const value__size10 Int)
(declare-fun object__size10 (us_rep6) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 (us_rep6) Int)
(assert (<= 0 value__size10))
(assert (forall ((a us_rep6)) (<= 0 (object__size10 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a us_rep6)) (<= 0 (object__alignment10 a))))
(declare-const certtypes__idt__issuer__first__bit Int)
(declare-const certtypes__idt__issuer__last__bit Int)
(declare-const certtypes__idt__issuer__position Int)
(assert (<= 0 certtypes__idt__issuer__first__bit))
(assert (< certtypes__idt__issuer__first__bit certtypes__idt__issuer__last__bit))
(assert (<= 0 certtypes__idt__issuer__position))
(declare-const certtypes__idt__serialnumber__first__bit Int)
(declare-const certtypes__idt__serialnumber__last__bit Int)
(declare-const certtypes__idt__serialnumber__position Int)
(assert (<= 0 certtypes__idt__serialnumber__first__bit))
(assert (< certtypes__idt__serialnumber__first__bit certtypes__idt__serialnumber__last__bit))
(assert (<= 0 certtypes__idt__serialnumber__position))
(declare-fun user_eq27 (us_rep6 us_rep6) Bool)
(declare-const dummy27 us_rep6)
(declare-datatypes () ((idt__ref (mk_idt__ref (idt__content us_rep6)))))
(define-fun idt__ref___projection ((a idt__ref)) us_rep6 (idt__content a))
(declare-sort algorithmt 0)
(define-fun in_range18 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)
(declare-fun user_eq28 (algorithmt algorithmt) Bool)
(declare-const dummy28 algorithmt)
(declare-datatypes () ((algorithmt__ref (mk_algorithmt__ref (algorithmt__content algorithmt)))))
(define-fun algorithmt__ref___projection ((a algorithmt__ref)) algorithmt (algorithmt__content a))
(declare-fun to_rep14 (algorithmt) Int)
(declare-fun of_rep14 (Int) algorithmt)
(assert (forall ((x algorithmt)) (! (= (of_rep14 (to_rep14 x)) x) :pattern ((to_rep14 x)))))
(assert (forall ((x algorithmt)) (! (in_range18 (to_rep14 x)) :pattern ((to_rep14 x)))))
(assert (forall ((x Int)) (! (=> (in_range18 x) (= (to_rep14 (of_rep14 x)) x)) :pattern ((to_rep14 (of_rep14 x))))))
(declare-datatypes () ((us_split_fields12 (mk___split_fields6 (rec__cert__contentst__id us_rep6) (rec__cert__contentst__notbefore us_rep) (rec__cert__contentst__notafter us_rep) (rec__cert__contentst__mechanism algorithmt)))))
(define-fun us_split_fields_ID__3__projection ((a us_split_fields12)) us_rep6 (rec__cert__contentst__id a))
(define-fun us_split_fields_NotBefore__projection ((a us_split_fields12)) us_rep (rec__cert__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__projection ((a us_split_fields12)) us_rep (rec__cert__contentst__notafter a))
(define-fun us_split_fields_Mechanism__projection ((a us_split_fields12)) algorithmt (rec__cert__contentst__mechanism a))
(declare-datatypes () ((us_split_fields__ref6 (mk___split_fields__ref6 (us_split_fields__content6 us_split_fields12)))))
(define-fun us_split_fields__ref___13__projection ((a us_split_fields__ref6)) us_split_fields12 (us_split_fields__content6 a))
(declare-datatypes () ((us_rep7 (mk___rep6 (us_split_fields13 us_split_fields12)))))
(define-fun us_rep___14__projection ((a us_rep7)) us_split_fields12 (us_split_fields13 a))
(define-fun bool_eq13 ((a us_rep7) (b us_rep7)) Bool (ite (and (and (and (= (bool_eq12 (rec__cert__contentst__id (us_split_fields13 a)) (rec__cert__contentst__id (us_split_fields13 b))) true) (= (bool_eq2 (rec__cert__contentst__notbefore (us_split_fields13 a)) (rec__cert__contentst__notbefore (us_split_fields13 b))) true)) (= (bool_eq2 (rec__cert__contentst__notafter (us_split_fields13 a)) (rec__cert__contentst__notafter (us_split_fields13 b))) true)) (= (to_rep14 (rec__cert__contentst__mechanism (us_split_fields13 a))) (to_rep14 (rec__cert__contentst__mechanism (us_split_fields13 b))))) true false))
(declare-const value__size11 Int)
(declare-fun object__size11 (us_rep7) Int)
(declare-const value__alignment11 Int)
(declare-fun object__alignment11 (us_rep7) Int)
(assert (<= 0 value__size11))
(assert (forall ((a us_rep7)) (<= 0 (object__size11 a))))
(assert (<= 0 value__alignment11))
(assert (forall ((a us_rep7)) (<= 0 (object__alignment11 a))))
(declare-const cert__contentst__id__first__bit Int)
(declare-const cert__contentst__id__last__bit Int)
(declare-const cert__contentst__id__position Int)
(assert (<= 0 cert__contentst__id__first__bit))
(assert (< cert__contentst__id__first__bit cert__contentst__id__last__bit))
(assert (<= 0 cert__contentst__id__position))
(declare-const cert__contentst__notbefore__first__bit Int)
(declare-const cert__contentst__notbefore__last__bit Int)
(declare-const cert__contentst__notbefore__position Int)
(assert (<= 0 cert__contentst__notbefore__first__bit))
(assert (< cert__contentst__notbefore__first__bit cert__contentst__notbefore__last__bit))
(assert (<= 0 cert__contentst__notbefore__position))
(declare-const cert__contentst__notafter__first__bit Int)
(declare-const cert__contentst__notafter__last__bit Int)
(declare-const cert__contentst__notafter__position Int)
(assert (<= 0 cert__contentst__notafter__first__bit))
(assert (< cert__contentst__notafter__first__bit cert__contentst__notafter__last__bit))
(assert (<= 0 cert__contentst__notafter__position))
(declare-const cert__contentst__mechanism__first__bit Int)
(declare-const cert__contentst__mechanism__last__bit Int)
(declare-const cert__contentst__mechanism__position Int)
(assert (<= 0 cert__contentst__mechanism__first__bit))
(assert (< cert__contentst__mechanism__first__bit cert__contentst__mechanism__last__bit))
(assert (<= 0 cert__contentst__mechanism__position))
(declare-fun user_eq29 (us_rep7 us_rep7) Bool)
(declare-const dummy29 us_rep7)
(declare-datatypes () ((contentst__ref (mk_contentst__ref (contentst__content us_rep7)))))
(define-fun contentst__ref___projection ((a contentst__ref)) us_rep7 (contentst__content a))
(declare-fun theid (us_rep7) us_rep6)
(declare-fun theid__function_guard (us_rep6 us_rep7) Bool)
(assert true)
(declare-sort keyidt 0)
(declare-fun keyidtqtint (keyidt) Int)
(assert (forall ((i keyidt)) (and (<= 0 (keyidtqtint i)) (<= (keyidtqtint i) 4294967295))))
(define-fun in_range19 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE19 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check19 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE19 (us_image) Int)
(declare-fun user_eq30 (keyidt keyidt) Bool)
(declare-const dummy30 keyidt)
(declare-datatypes () ((keyidt__ref (mk_keyidt__ref (keyidt__content keyidt)))))
(define-fun keyidt__ref___projection ((a keyidt__ref)) keyidt (keyidt__content a))
(define-fun to_rep15 ((x keyidt)) Int (keyidtqtint x))
(declare-fun of_rep15 (Int) keyidt)
(assert (forall ((x keyidt)) (! (= (of_rep15 (to_rep15 x)) x) :pattern ((to_rep15 x)))))
(assert (forall ((x keyidt)) (! (in_range19 (to_rep15 x)) :pattern ((to_rep15 x)))))
(assert (forall ((x Int)) (! (=> (in_range19 x) (= (to_rep15 (of_rep15 x)) x)) :pattern ((to_rep15 (of_rep15 x))))))
(declare-sort keylengtht 0)
(declare-fun keylengthtqtint (keylengtht) Int)
(assert (forall ((i keylengtht)) (and (<= 0 (keylengthtqtint i)) (<= (keylengthtqtint i) 128))))
(define-fun in_range20 ((x Int)) Bool (and (<= 0 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE20 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check20 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE20 (us_image) Int)
(declare-fun user_eq31 (keylengtht keylengtht) Bool)
(declare-const dummy31 keylengtht)
(declare-datatypes () ((keylengtht__ref (mk_keylengtht__ref (keylengtht__content keylengtht)))))
(define-fun keylengtht__ref___projection ((a keylengtht__ref)) keylengtht (keylengtht__content a))
(define-fun to_rep16 ((x keylengtht)) Int (keylengthtqtint x))
(declare-fun of_rep16 (Int) keylengtht)
(assert (forall ((x keylengtht)) (! (= (of_rep16 (to_rep16 x)) x) :pattern ((to_rep16 x)))))
(assert (forall ((x keylengtht)) (! (in_range20 (to_rep16 x)) :pattern ((to_rep16 x)))))
(assert (forall ((x Int)) (! (=> (in_range20 x) (= (to_rep16 (of_rep16 x)) x)) :pattern ((to_rep16 (of_rep16 x))))))
(declare-datatypes () ((us_split_fields14 (mk___split_fields7 (rec__cryptotypes__keypartt__algorithmid algorithmt) (rec__cryptotypes__keypartt__keyid keyidt) (rec__cryptotypes__keypartt__keylength keylengtht)))))
(define-fun us_split_fields_AlgorithmID__projection ((a us_split_fields14)) algorithmt (rec__cryptotypes__keypartt__algorithmid a))
(define-fun us_split_fields_KeyID__projection ((a us_split_fields14)) keyidt (rec__cryptotypes__keypartt__keyid a))
(define-fun us_split_fields_KeyLength__projection ((a us_split_fields14)) keylengtht (rec__cryptotypes__keypartt__keylength a))
(declare-datatypes () ((us_split_fields__ref7 (mk___split_fields__ref7 (us_split_fields__content7 us_split_fields14)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref7)) us_split_fields14 (us_split_fields__content7 a))
(declare-datatypes () ((us_rep8 (mk___rep7 (us_split_fields15 us_split_fields14)))))
(define-fun us_rep___2__projection ((a us_rep8)) us_split_fields14 (us_split_fields15 a))
(define-fun bool_eq14 ((a us_rep8) (b us_rep8)) Bool (ite (and (and (= (to_rep14 (rec__cryptotypes__keypartt__algorithmid (us_split_fields15 a))) (to_rep14 (rec__cryptotypes__keypartt__algorithmid (us_split_fields15 b)))) (= (to_rep15 (rec__cryptotypes__keypartt__keyid (us_split_fields15 a))) (to_rep15 (rec__cryptotypes__keypartt__keyid (us_split_fields15 b))))) (= (to_rep16 (rec__cryptotypes__keypartt__keylength (us_split_fields15 a))) (to_rep16 (rec__cryptotypes__keypartt__keylength (us_split_fields15 b))))) true false))
(declare-const value__size12 Int)
(declare-fun object__size12 (us_rep8) Int)
(declare-const value__alignment12 Int)
(declare-fun object__alignment12 (us_rep8) Int)
(assert (<= 0 value__size12))
(assert (forall ((a us_rep8)) (<= 0 (object__size12 a))))
(assert (<= 0 value__alignment12))
(assert (forall ((a us_rep8)) (<= 0 (object__alignment12 a))))
(declare-const cryptotypes__keypartt__algorithmid__first__bit Int)
(declare-const cryptotypes__keypartt__algorithmid__last__bit Int)
(declare-const cryptotypes__keypartt__algorithmid__position Int)
(assert (<= 0 cryptotypes__keypartt__algorithmid__first__bit))
(assert (< cryptotypes__keypartt__algorithmid__first__bit cryptotypes__keypartt__algorithmid__last__bit))
(assert (<= 0 cryptotypes__keypartt__algorithmid__position))
(declare-const cryptotypes__keypartt__keyid__first__bit Int)
(declare-const cryptotypes__keypartt__keyid__last__bit Int)
(declare-const cryptotypes__keypartt__keyid__position Int)
(assert (<= 0 cryptotypes__keypartt__keyid__first__bit))
(assert (< cryptotypes__keypartt__keyid__first__bit cryptotypes__keypartt__keyid__last__bit))
(assert (<= 0 cryptotypes__keypartt__keyid__position))
(declare-const cryptotypes__keypartt__keylength__first__bit Int)
(declare-const cryptotypes__keypartt__keylength__last__bit Int)
(declare-const cryptotypes__keypartt__keylength__position Int)
(assert (<= 0 cryptotypes__keypartt__keylength__first__bit))
(assert (< cryptotypes__keypartt__keylength__first__bit cryptotypes__keypartt__keylength__last__bit))
(assert (<= 0 cryptotypes__keypartt__keylength__position))
(declare-fun user_eq32 (us_rep8 us_rep8) Bool)
(declare-const dummy32 us_rep8)
(declare-datatypes () ((keypartt__ref (mk_keypartt__ref (keypartt__content us_rep8)))))
(define-fun keypartt__ref___projection ((a keypartt__ref)) us_rep8 (keypartt__content a))
(declare-datatypes () ((us_split_fields16 (mk___split_fields8 (rec__cert__id__contentst__id us_rep6) (rec__cert__id__contentst__notbefore us_rep) (rec__cert__id__contentst__notafter us_rep) (rec__cert__id__contentst__mechanism algorithmt) (rec__cert__id__contentst__subject us_rep4) (rec__cert__id__contentst__subjectpublickey us_rep8)))))
(define-fun us_split_fields_ID__4__projection ((a us_split_fields16)) us_rep6 (rec__cert__id__contentst__id a))
(define-fun us_split_fields_NotBefore__2__projection ((a us_split_fields16)) us_rep (rec__cert__id__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__2__projection ((a us_split_fields16)) us_rep (rec__cert__id__contentst__notafter a))
(define-fun us_split_fields_Mechanism__2__projection ((a us_split_fields16)) algorithmt (rec__cert__id__contentst__mechanism a))
(define-fun us_split_fields_Subject__projection ((a us_split_fields16)) us_rep4 (rec__cert__id__contentst__subject a))
(define-fun us_split_fields_SubjectPublicKey__projection ((a us_split_fields16)) us_rep8 (rec__cert__id__contentst__subjectpublickey a))
(declare-datatypes () ((us_split_fields__ref8 (mk___split_fields__ref8 (us_split_fields__content8 us_split_fields16)))))
(define-fun us_split_fields__ref___14__projection ((a us_split_fields__ref8)) us_split_fields16 (us_split_fields__content8 a))
(declare-datatypes () ((us_rep9 (mk___rep8 (us_split_fields17 us_split_fields16)))))
(define-fun us_rep___15__projection ((a us_rep9)) us_split_fields16 (us_split_fields17 a))
(define-fun bool_eq15 ((a us_rep9) (b us_rep9)) Bool (ite (and (and (and (and (and (= (bool_eq12 (rec__cert__id__contentst__id (us_split_fields17 a)) (rec__cert__id__contentst__id (us_split_fields17 b))) true) (= (bool_eq2 (rec__cert__id__contentst__notbefore (us_split_fields17 a)) (rec__cert__id__contentst__notbefore (us_split_fields17 b))) true)) (= (bool_eq2 (rec__cert__id__contentst__notafter (us_split_fields17 a)) (rec__cert__id__contentst__notafter (us_split_fields17 b))) true)) (= (to_rep14 (rec__cert__id__contentst__mechanism (us_split_fields17 a))) (to_rep14 (rec__cert__id__contentst__mechanism (us_split_fields17 b))))) (= (bool_eq10 (rec__cert__id__contentst__subject (us_split_fields17 a)) (rec__cert__id__contentst__subject (us_split_fields17 b))) true)) (= (bool_eq14 (rec__cert__id__contentst__subjectpublickey (us_split_fields17 a)) (rec__cert__id__contentst__subjectpublickey (us_split_fields17 b))) true)) true false))
(declare-const value__size13 Int)
(declare-fun object__size13 (us_rep9) Int)
(declare-const value__alignment13 Int)
(declare-fun object__alignment13 (us_rep9) Int)
(assert (<= 0 value__size13))
(assert (forall ((a us_rep9)) (<= 0 (object__size13 a))))
(assert (<= 0 value__alignment13))
(assert (forall ((a us_rep9)) (<= 0 (object__alignment13 a))))
(declare-const cert__id__contentst__id__first__bit Int)
(declare-const cert__id__contentst__id__last__bit Int)
(declare-const cert__id__contentst__id__position Int)
(assert (<= 0 cert__id__contentst__id__first__bit))
(assert (< cert__id__contentst__id__first__bit cert__id__contentst__id__last__bit))
(assert (<= 0 cert__id__contentst__id__position))
(declare-const cert__id__contentst__notbefore__first__bit Int)
(declare-const cert__id__contentst__notbefore__last__bit Int)
(declare-const cert__id__contentst__notbefore__position Int)
(assert (<= 0 cert__id__contentst__notbefore__first__bit))
(assert (< cert__id__contentst__notbefore__first__bit cert__id__contentst__notbefore__last__bit))
(assert (<= 0 cert__id__contentst__notbefore__position))
(declare-const cert__id__contentst__notafter__first__bit Int)
(declare-const cert__id__contentst__notafter__last__bit Int)
(declare-const cert__id__contentst__notafter__position Int)
(assert (<= 0 cert__id__contentst__notafter__first__bit))
(assert (< cert__id__contentst__notafter__first__bit cert__id__contentst__notafter__last__bit))
(assert (<= 0 cert__id__contentst__notafter__position))
(declare-const cert__id__contentst__mechanism__first__bit Int)
(declare-const cert__id__contentst__mechanism__last__bit Int)
(declare-const cert__id__contentst__mechanism__position Int)
(assert (<= 0 cert__id__contentst__mechanism__first__bit))
(assert (< cert__id__contentst__mechanism__first__bit cert__id__contentst__mechanism__last__bit))
(assert (<= 0 cert__id__contentst__mechanism__position))
(declare-const cert__id__contentst__subject__first__bit Int)
(declare-const cert__id__contentst__subject__last__bit Int)
(declare-const cert__id__contentst__subject__position Int)
(assert (<= 0 cert__id__contentst__subject__first__bit))
(assert (< cert__id__contentst__subject__first__bit cert__id__contentst__subject__last__bit))
(assert (<= 0 cert__id__contentst__subject__position))
(declare-const cert__id__contentst__subjectpublickey__first__bit Int)
(declare-const cert__id__contentst__subjectpublickey__last__bit Int)
(declare-const cert__id__contentst__subjectpublickey__position Int)
(assert (<= 0 cert__id__contentst__subjectpublickey__first__bit))
(assert (< cert__id__contentst__subjectpublickey__first__bit cert__id__contentst__subjectpublickey__last__bit))
(assert (<= 0 cert__id__contentst__subjectpublickey__position))
(declare-fun user_eq33 (us_rep9 us_rep9) Bool)
(declare-const dummy33 us_rep9)
(declare-datatypes () ((contentst__ref1 (mk_contentst__ref1 (contentst__content1 us_rep9)))))
(define-fun contentst__ref___2__projection ((a contentst__ref1)) us_rep9 (contentst__content1 a))
(declare-fun cert_id_to_cert (us_rep9) us_rep7)
(declare-fun cert_id_to_cert__function_guard (us_rep7 us_rep9) Bool)
(assert true)
(declare-fun to_rep17 (classt) Int)
(declare-fun of_rep17 (Int) classt)
(assert (forall ((x classt)) (! (= (of_rep17 (to_rep17 x)) x) :pattern ((to_rep17 x)))))
(assert (forall ((x classt)) (! (in_range8 (to_rep17 x)) :pattern ((to_rep17 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep17 (of_rep17 x)) x)) :pattern ((to_rep17 (of_rep17 x))))))
(declare-datatypes () ((us_split_fields18 (mk___split_fields9 (rec__privtypes__clearancet__class classt)))))
(define-fun us_split_fields_Class__projection ((a us_split_fields18)) classt (rec__privtypes__clearancet__class a))
(declare-datatypes () ((us_split_fields__ref9 (mk___split_fields__ref9 (us_split_fields__content9 us_split_fields18)))))
(define-fun us_split_fields__ref___6__projection ((a us_split_fields__ref9)) us_split_fields18 (us_split_fields__content9 a))
(declare-datatypes () ((us_rep10 (mk___rep9 (us_split_fields19 us_split_fields18)))))
(define-fun us_rep___6__projection ((a us_rep10)) us_split_fields18 (us_split_fields19 a))
(define-fun bool_eq16 ((a us_rep10) (b us_rep10)) Bool (ite (= (to_rep17 (rec__privtypes__clearancet__class (us_split_fields19 a))) (to_rep17 (rec__privtypes__clearancet__class (us_split_fields19 b)))) true false))
(declare-const value__size14 Int)
(declare-fun object__size14 (us_rep10) Int)
(declare-const value__alignment14 Int)
(declare-fun object__alignment14 (us_rep10) Int)
(assert (<= 0 value__size14))
(assert (forall ((a us_rep10)) (<= 0 (object__size14 a))))
(assert (<= 0 value__alignment14))
(assert (forall ((a us_rep10)) (<= 0 (object__alignment14 a))))
(declare-const privtypes__clearancet__class__first__bit Int)
(declare-const privtypes__clearancet__class__last__bit Int)
(declare-const privtypes__clearancet__class__position Int)
(assert (<= 0 privtypes__clearancet__class__first__bit))
(assert (< privtypes__clearancet__class__first__bit privtypes__clearancet__class__last__bit))
(assert (<= 0 privtypes__clearancet__class__position))
(declare-fun user_eq34 (us_rep10 us_rep10) Bool)
(declare-const dummy34 us_rep10)
(declare-datatypes () ((clearancet__ref (mk_clearancet__ref (clearancet__content us_rep10)))))
(define-fun clearancet__ref___projection ((a clearancet__ref)) us_rep10 (clearancet__content a))
(declare-sort privileget 0)
(define-fun in_range21 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE21 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check21 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE21 (us_image) Int)
(declare-fun user_eq35 (privileget privileget) Bool)
(declare-const dummy35 privileget)
(declare-datatypes () ((privileget__ref (mk_privileget__ref (privileget__content privileget)))))
(define-fun privileget__ref___projection ((a privileget__ref)) privileget (privileget__content a))
(declare-fun to_rep18 (privileget) Int)
(declare-fun of_rep18 (Int) privileget)
(assert (forall ((x privileget)) (! (= (of_rep18 (to_rep18 x)) x) :pattern ((to_rep18 x)))))
(assert (forall ((x privileget)) (! (in_range21 (to_rep18 x)) :pattern ((to_rep18 x)))))
(assert (forall ((x Int)) (! (=> (in_range21 x) (= (to_rep18 (of_rep18 x)) x)) :pattern ((to_rep18 (of_rep18 x))))))
(declare-datatypes () ((us_split_fields20 (mk___split_fields10 (rec__cert__attr__priv__contentst__id us_rep6) (rec__cert__attr__priv__contentst__notbefore us_rep) (rec__cert__attr__priv__contentst__notafter us_rep) (rec__cert__attr__priv__contentst__mechanism algorithmt) (rec__cert__attr__priv__contentst__basecertid us_rep6) (rec__cert__attr__priv__contentst__role privileget) (rec__cert__attr__priv__contentst__clearance us_rep10)))))
(define-fun us_split_fields_ID__6__projection ((a us_split_fields20)) us_rep6 (rec__cert__attr__priv__contentst__id a))
(define-fun us_split_fields_NotBefore__4__projection ((a us_split_fields20)) us_rep (rec__cert__attr__priv__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__4__projection ((a us_split_fields20)) us_rep (rec__cert__attr__priv__contentst__notafter a))
(define-fun us_split_fields_Mechanism__4__projection ((a us_split_fields20)) algorithmt (rec__cert__attr__priv__contentst__mechanism a))
(define-fun us_split_fields_BaseCertID__2__projection ((a us_split_fields20)) us_rep6 (rec__cert__attr__priv__contentst__basecertid a))
(define-fun us_split_fields_Role__projection ((a us_split_fields20)) privileget (rec__cert__attr__priv__contentst__role a))
(define-fun us_split_fields_Clearance__projection ((a us_split_fields20)) us_rep10 (rec__cert__attr__priv__contentst__clearance a))
(declare-datatypes () ((us_split_fields__ref10 (mk___split_fields__ref10 (us_split_fields__content10 us_split_fields20)))))
(define-fun us_split_fields__ref___16__projection ((a us_split_fields__ref10)) us_split_fields20 (us_split_fields__content10 a))
(declare-datatypes () ((us_rep11 (mk___rep10 (us_split_fields21 us_split_fields20)))))
(define-fun us_rep___17__projection ((a us_rep11)) us_split_fields20 (us_split_fields21 a))
(define-fun bool_eq17 ((a us_rep11) (b us_rep11)) Bool (ite (and (and (and (and (and (and (= (bool_eq12 (rec__cert__attr__priv__contentst__id (us_split_fields21 a)) (rec__cert__attr__priv__contentst__id (us_split_fields21 b))) true) (= (bool_eq2 (rec__cert__attr__priv__contentst__notbefore (us_split_fields21 a)) (rec__cert__attr__priv__contentst__notbefore (us_split_fields21 b))) true)) (= (bool_eq2 (rec__cert__attr__priv__contentst__notafter (us_split_fields21 a)) (rec__cert__attr__priv__contentst__notafter (us_split_fields21 b))) true)) (= (to_rep14 (rec__cert__attr__priv__contentst__mechanism (us_split_fields21 a))) (to_rep14 (rec__cert__attr__priv__contentst__mechanism (us_split_fields21 b))))) (= (bool_eq12 (rec__cert__attr__priv__contentst__basecertid (us_split_fields21 a)) (rec__cert__attr__priv__contentst__basecertid (us_split_fields21 b))) true)) (= (to_rep18 (rec__cert__attr__priv__contentst__role (us_split_fields21 a))) (to_rep18 (rec__cert__attr__priv__contentst__role (us_split_fields21 b))))) (= (bool_eq16 (rec__cert__attr__priv__contentst__clearance (us_split_fields21 a)) (rec__cert__attr__priv__contentst__clearance (us_split_fields21 b))) true)) true false))
(declare-const value__size15 Int)
(declare-fun object__size15 (us_rep11) Int)
(declare-const value__alignment15 Int)
(declare-fun object__alignment15 (us_rep11) Int)
(assert (<= 0 value__size15))
(assert (forall ((a us_rep11)) (<= 0 (object__size15 a))))
(assert (<= 0 value__alignment15))
(assert (forall ((a us_rep11)) (<= 0 (object__alignment15 a))))
(declare-const cert__attr__priv__contentst__id__first__bit Int)
(declare-const cert__attr__priv__contentst__id__last__bit Int)
(declare-const cert__attr__priv__contentst__id__position Int)
(assert (<= 0 cert__attr__priv__contentst__id__first__bit))
(assert (< cert__attr__priv__contentst__id__first__bit cert__attr__priv__contentst__id__last__bit))
(assert (<= 0 cert__attr__priv__contentst__id__position))
(declare-const cert__attr__priv__contentst__notbefore__first__bit Int)
(declare-const cert__attr__priv__contentst__notbefore__last__bit Int)
(declare-const cert__attr__priv__contentst__notbefore__position Int)
(assert (<= 0 cert__attr__priv__contentst__notbefore__first__bit))
(assert (< cert__attr__priv__contentst__notbefore__first__bit cert__attr__priv__contentst__notbefore__last__bit))
(assert (<= 0 cert__attr__priv__contentst__notbefore__position))
(declare-const cert__attr__priv__contentst__notafter__first__bit Int)
(declare-const cert__attr__priv__contentst__notafter__last__bit Int)
(declare-const cert__attr__priv__contentst__notafter__position Int)
(assert (<= 0 cert__attr__priv__contentst__notafter__first__bit))
(assert (< cert__attr__priv__contentst__notafter__first__bit cert__attr__priv__contentst__notafter__last__bit))
(assert (<= 0 cert__attr__priv__contentst__notafter__position))
(declare-const cert__attr__priv__contentst__mechanism__first__bit Int)
(declare-const cert__attr__priv__contentst__mechanism__last__bit Int)
(declare-const cert__attr__priv__contentst__mechanism__position Int)
(assert (<= 0 cert__attr__priv__contentst__mechanism__first__bit))
(assert (< cert__attr__priv__contentst__mechanism__first__bit cert__attr__priv__contentst__mechanism__last__bit))
(assert (<= 0 cert__attr__priv__contentst__mechanism__position))
(declare-const cert__attr__priv__contentst__basecertid__first__bit Int)
(declare-const cert__attr__priv__contentst__basecertid__last__bit Int)
(declare-const cert__attr__priv__contentst__basecertid__position Int)
(assert (<= 0 cert__attr__priv__contentst__basecertid__first__bit))
(assert (< cert__attr__priv__contentst__basecertid__first__bit cert__attr__priv__contentst__basecertid__last__bit))
(assert (<= 0 cert__attr__priv__contentst__basecertid__position))
(declare-const cert__attr__priv__contentst__role__first__bit Int)
(declare-const cert__attr__priv__contentst__role__last__bit Int)
(declare-const cert__attr__priv__contentst__role__position Int)
(assert (<= 0 cert__attr__priv__contentst__role__first__bit))
(assert (< cert__attr__priv__contentst__role__first__bit cert__attr__priv__contentst__role__last__bit))
(assert (<= 0 cert__attr__priv__contentst__role__position))
(declare-const cert__attr__priv__contentst__clearance__first__bit Int)
(declare-const cert__attr__priv__contentst__clearance__last__bit Int)
(declare-const cert__attr__priv__contentst__clearance__position Int)
(assert (<= 0 cert__attr__priv__contentst__clearance__first__bit))
(assert (< cert__attr__priv__contentst__clearance__first__bit cert__attr__priv__contentst__clearance__last__bit))
(assert (<= 0 cert__attr__priv__contentst__clearance__position))
(declare-fun user_eq36 (us_rep11 us_rep11) Bool)
(declare-const dummy36 us_rep11)
(declare-datatypes () ((contentst__ref2 (mk_contentst__ref2 (contentst__content2 us_rep11)))))
(define-fun contentst__ref___4__projection ((a contentst__ref2)) us_rep11 (contentst__content2 a))
(declare-fun therole (us_rep11) Int)
(declare-fun therole__function_guard (Int us_rep11) Bool)
(define-fun dynamic_invariant3 ((temp___expr_593 Int) (temp___is_init_589 Bool) (temp___skip_constant_590 Bool) (temp___do_toplevel_591 Bool) (temp___do_typ_inv_592 Bool)) Bool (=> (or (= temp___is_init_589 true) (<= 0 3)) (in_range21 temp___expr_593)))
(assert (forall ((contents us_rep11)) (! (dynamic_invariant3 (therole contents) true false true true) :pattern ((therole contents)))))
(declare-fun theclearance (us_rep11) us_rep10)
(declare-fun theclearance__function_guard (us_rep10 us_rep11) Bool)
(assert true)
(declare-datatypes () ((us_split_fields22 (mk___split_fields11 (rec__cert__attr__auth__contentst__id us_rep6) (rec__cert__attr__auth__contentst__notbefore us_rep) (rec__cert__attr__auth__contentst__notafter us_rep) (rec__cert__attr__auth__contentst__mechanism algorithmt) (rec__cert__attr__auth__contentst__basecertid us_rep6) (rec__cert__attr__auth__contentst__role privileget) (rec__cert__attr__auth__contentst__clearance us_rep10)))))
(define-fun us_split_fields_ID__7__projection ((a us_split_fields22)) us_rep6 (rec__cert__attr__auth__contentst__id a))
(define-fun us_split_fields_NotBefore__5__projection ((a us_split_fields22)) us_rep (rec__cert__attr__auth__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__5__projection ((a us_split_fields22)) us_rep (rec__cert__attr__auth__contentst__notafter a))
(define-fun us_split_fields_Mechanism__5__projection ((a us_split_fields22)) algorithmt (rec__cert__attr__auth__contentst__mechanism a))
(define-fun us_split_fields_BaseCertID__3__projection ((a us_split_fields22)) us_rep6 (rec__cert__attr__auth__contentst__basecertid a))
(define-fun us_split_fields_Role__2__projection ((a us_split_fields22)) privileget (rec__cert__attr__auth__contentst__role a))
(define-fun us_split_fields_Clearance__2__projection ((a us_split_fields22)) us_rep10 (rec__cert__attr__auth__contentst__clearance a))
(declare-datatypes () ((us_split_fields__ref11 (mk___split_fields__ref11 (us_split_fields__content11 us_split_fields22)))))
(define-fun us_split_fields__ref___17__projection ((a us_split_fields__ref11)) us_split_fields22 (us_split_fields__content11 a))
(declare-datatypes () ((us_rep12 (mk___rep11 (us_split_fields23 us_split_fields22)))))
(define-fun us_rep___18__projection ((a us_rep12)) us_split_fields22 (us_split_fields23 a))
(define-fun bool_eq18 ((a us_rep12) (b us_rep12)) Bool (ite (and (and (and (and (and (and (= (bool_eq12 (rec__cert__attr__auth__contentst__id (us_split_fields23 a)) (rec__cert__attr__auth__contentst__id (us_split_fields23 b))) true) (= (bool_eq2 (rec__cert__attr__auth__contentst__notbefore (us_split_fields23 a)) (rec__cert__attr__auth__contentst__notbefore (us_split_fields23 b))) true)) (= (bool_eq2 (rec__cert__attr__auth__contentst__notafter (us_split_fields23 a)) (rec__cert__attr__auth__contentst__notafter (us_split_fields23 b))) true)) (= (to_rep14 (rec__cert__attr__auth__contentst__mechanism (us_split_fields23 a))) (to_rep14 (rec__cert__attr__auth__contentst__mechanism (us_split_fields23 b))))) (= (bool_eq12 (rec__cert__attr__auth__contentst__basecertid (us_split_fields23 a)) (rec__cert__attr__auth__contentst__basecertid (us_split_fields23 b))) true)) (= (to_rep18 (rec__cert__attr__auth__contentst__role (us_split_fields23 a))) (to_rep18 (rec__cert__attr__auth__contentst__role (us_split_fields23 b))))) (= (bool_eq16 (rec__cert__attr__auth__contentst__clearance (us_split_fields23 a)) (rec__cert__attr__auth__contentst__clearance (us_split_fields23 b))) true)) true false))
(declare-const value__size16 Int)
(declare-fun object__size16 (us_rep12) Int)
(declare-const value__alignment16 Int)
(declare-fun object__alignment16 (us_rep12) Int)
(assert (<= 0 value__size16))
(assert (forall ((a us_rep12)) (<= 0 (object__size16 a))))
(assert (<= 0 value__alignment16))
(assert (forall ((a us_rep12)) (<= 0 (object__alignment16 a))))
(declare-const cert__attr__auth__contentst__id__first__bit Int)
(declare-const cert__attr__auth__contentst__id__last__bit Int)
(declare-const cert__attr__auth__contentst__id__position Int)
(assert (<= 0 cert__attr__auth__contentst__id__first__bit))
(assert (< cert__attr__auth__contentst__id__first__bit cert__attr__auth__contentst__id__last__bit))
(assert (<= 0 cert__attr__auth__contentst__id__position))
(declare-const cert__attr__auth__contentst__notbefore__first__bit Int)
(declare-const cert__attr__auth__contentst__notbefore__last__bit Int)
(declare-const cert__attr__auth__contentst__notbefore__position Int)
(assert (<= 0 cert__attr__auth__contentst__notbefore__first__bit))
(assert (< cert__attr__auth__contentst__notbefore__first__bit cert__attr__auth__contentst__notbefore__last__bit))
(assert (<= 0 cert__attr__auth__contentst__notbefore__position))
(declare-const cert__attr__auth__contentst__notafter__first__bit Int)
(declare-const cert__attr__auth__contentst__notafter__last__bit Int)
(declare-const cert__attr__auth__contentst__notafter__position Int)
(assert (<= 0 cert__attr__auth__contentst__notafter__first__bit))
(assert (< cert__attr__auth__contentst__notafter__first__bit cert__attr__auth__contentst__notafter__last__bit))
(assert (<= 0 cert__attr__auth__contentst__notafter__position))
(declare-const cert__attr__auth__contentst__mechanism__first__bit Int)
(declare-const cert__attr__auth__contentst__mechanism__last__bit Int)
(declare-const cert__attr__auth__contentst__mechanism__position Int)
(assert (<= 0 cert__attr__auth__contentst__mechanism__first__bit))
(assert (< cert__attr__auth__contentst__mechanism__first__bit cert__attr__auth__contentst__mechanism__last__bit))
(assert (<= 0 cert__attr__auth__contentst__mechanism__position))
(declare-const cert__attr__auth__contentst__basecertid__first__bit Int)
(declare-const cert__attr__auth__contentst__basecertid__last__bit Int)
(declare-const cert__attr__auth__contentst__basecertid__position Int)
(assert (<= 0 cert__attr__auth__contentst__basecertid__first__bit))
(assert (< cert__attr__auth__contentst__basecertid__first__bit cert__attr__auth__contentst__basecertid__last__bit))
(assert (<= 0 cert__attr__auth__contentst__basecertid__position))
(declare-const cert__attr__auth__contentst__role__first__bit Int)
(declare-const cert__attr__auth__contentst__role__last__bit Int)
(declare-const cert__attr__auth__contentst__role__position Int)
(assert (<= 0 cert__attr__auth__contentst__role__first__bit))
(assert (< cert__attr__auth__contentst__role__first__bit cert__attr__auth__contentst__role__last__bit))
(assert (<= 0 cert__attr__auth__contentst__role__position))
(declare-const cert__attr__auth__contentst__clearance__first__bit Int)
(declare-const cert__attr__auth__contentst__clearance__last__bit Int)
(declare-const cert__attr__auth__contentst__clearance__position Int)
(assert (<= 0 cert__attr__auth__contentst__clearance__first__bit))
(assert (< cert__attr__auth__contentst__clearance__first__bit cert__attr__auth__contentst__clearance__last__bit))
(assert (<= 0 cert__attr__auth__contentst__clearance__position))
(declare-fun user_eq37 (us_rep12 us_rep12) Bool)
(declare-const dummy37 us_rep12)
(declare-datatypes () ((contentst__ref3 (mk_contentst__ref3 (contentst__content3 us_rep12)))))
(define-fun contentst__ref___5__projection ((a contentst__ref3)) us_rep12 (contentst__content3 a))
(declare-fun serialnumberhasoverflowed (us_private) Bool)
(declare-fun serialnumberhasoverflowed__function_guard (Bool us_private) Bool)
(assert true)
(declare-fun serialnumber (us_private) Int)
(declare-fun serialnumber__function_guard (Int us_private) Bool)
(define-fun dynamic_invariant4 ((temp___expr_567 Int) (temp___is_init_563 Bool) (temp___skip_constant_564 Bool) (temp___do_toplevel_565 Bool) (temp___do_typ_inv_566 Bool)) Bool (=> (or (= temp___is_init_563 true) (<= 0 4294967295)) (in_range17 temp___expr_567)))
(assert (forall ((certificatestore__state us_private)) (! (=> (not (= (serialnumberhasoverflowed certificatestore__state) true)) (dynamic_invariant4 (serialnumber certificatestore__state) true false true true)) :pattern ((serialnumber certificatestore__state)))))
(declare-const nouser (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-fun temp___String_Literal_164 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_164 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_164 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 3)) 85)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 32)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 33)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 36)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 38)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 41)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 43)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 44)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 46)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 48)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 49)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 50)) 32)) :pattern ((temp___String_Literal_164 us_void_param)))))
(declare-const zerotime us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-sort certificatestatus 0)
(define-fun in_range22 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE22 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check22 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE22 (us_image) Int)
(declare-fun user_eq38 (certificatestatus certificatestatus) Bool)
(declare-const dummy38 certificatestatus)
(declare-datatypes () ((certificatestatus__ref (mk_certificatestatus__ref (certificatestatus__content certificatestatus)))))
(define-fun certificatestatus__ref___projection ((a certificatestatus__ref)) certificatestatus (certificatestatus__content a))
(declare-fun to_rep19 (certificatestatus) Int)
(declare-fun of_rep19 (Int) certificatestatus)
(assert (forall ((x certificatestatus)) (! (= (of_rep19 (to_rep19 x)) x) :pattern ((to_rep19 x)))))
(assert (forall ((x certificatestatus)) (! (in_range22 (to_rep19 x)) :pattern ((to_rep19 x)))))
(assert (forall ((x Int)) (! (=> (in_range22 x) (= (to_rep19 (of_rep19 x)) x)) :pattern ((to_rep19 (of_rep19 x))))))
(declare-datatypes () ((us_split_fields24 (mk___split_fields12 (rec__usertoken__valididcertt__valid Bool) (rec__usertoken__valididcertt__idstatus certificatestatus) (rec__usertoken__valididcertt__contents us_rep9)))))
(define-fun us_split_fields_Valid__projection ((a us_split_fields24)) Bool (rec__usertoken__valididcertt__valid a))
(define-fun us_split_fields_IDStatus__projection ((a us_split_fields24)) certificatestatus (rec__usertoken__valididcertt__idstatus a))
(define-fun us_split_fields_Contents__projection ((a us_split_fields24)) us_rep9 (rec__usertoken__valididcertt__contents a))
(declare-datatypes () ((us_split_fields__ref12 (mk___split_fields__ref12 (us_split_fields__content12 us_split_fields24)))))
(define-fun us_split_fields__ref___27__projection ((a us_split_fields__ref12)) us_split_fields24 (us_split_fields__content12 a))
(declare-datatypes () ((us_rep13 (mk___rep12 (us_split_fields25 us_split_fields24)))))
(define-fun us_rep___28__projection ((a us_rep13)) us_split_fields24 (us_split_fields25 a))
(define-fun bool_eq19 ((a us_rep13) (b us_rep13)) Bool (ite (and (and (= (rec__usertoken__valididcertt__valid (us_split_fields25 a)) (rec__usertoken__valididcertt__valid (us_split_fields25 b))) (= (to_rep19 (rec__usertoken__valididcertt__idstatus (us_split_fields25 a))) (to_rep19 (rec__usertoken__valididcertt__idstatus (us_split_fields25 b))))) (= (bool_eq15 (rec__usertoken__valididcertt__contents (us_split_fields25 a)) (rec__usertoken__valididcertt__contents (us_split_fields25 b))) true)) true false))
(declare-const value__size17 Int)
(declare-fun object__size17 (us_rep13) Int)
(declare-const value__alignment17 Int)
(declare-fun object__alignment17 (us_rep13) Int)
(assert (<= 0 value__size17))
(assert (forall ((a us_rep13)) (<= 0 (object__size17 a))))
(assert (<= 0 value__alignment17))
(assert (forall ((a us_rep13)) (<= 0 (object__alignment17 a))))
(declare-const usertoken__valididcertt__valid__first__bit Int)
(declare-const usertoken__valididcertt__valid__last__bit Int)
(declare-const usertoken__valididcertt__valid__position Int)
(assert (<= 0 usertoken__valididcertt__valid__first__bit))
(assert (< usertoken__valididcertt__valid__first__bit usertoken__valididcertt__valid__last__bit))
(assert (<= 0 usertoken__valididcertt__valid__position))
(declare-const usertoken__valididcertt__idstatus__first__bit Int)
(declare-const usertoken__valididcertt__idstatus__last__bit Int)
(declare-const usertoken__valididcertt__idstatus__position Int)
(assert (<= 0 usertoken__valididcertt__idstatus__first__bit))
(assert (< usertoken__valididcertt__idstatus__first__bit usertoken__valididcertt__idstatus__last__bit))
(assert (<= 0 usertoken__valididcertt__idstatus__position))
(declare-const usertoken__valididcertt__contents__first__bit Int)
(declare-const usertoken__valididcertt__contents__last__bit Int)
(declare-const usertoken__valididcertt__contents__position Int)
(assert (<= 0 usertoken__valididcertt__contents__first__bit))
(assert (< usertoken__valididcertt__contents__first__bit usertoken__valididcertt__contents__last__bit))
(assert (<= 0 usertoken__valididcertt__contents__position))
(declare-fun user_eq39 (us_rep13 us_rep13) Bool)
(declare-const dummy39 us_rep13)
(declare-datatypes () ((valididcertt__ref (mk_valididcertt__ref (valididcertt__content us_rep13)))))
(define-fun valididcertt__ref___projection ((a valididcertt__ref)) us_rep13 (valididcertt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-datatypes () ((us_split_fields26 (mk___split_fields13 (rec__usertoken__validauthcertt__valid Bool) (rec__usertoken__validauthcertt__contents us_rep12)))))
(define-fun us_split_fields_Valid__3__projection ((a us_split_fields26)) Bool (rec__usertoken__validauthcertt__valid a))
(define-fun us_split_fields_Contents__3__projection ((a us_split_fields26)) us_rep12 (rec__usertoken__validauthcertt__contents a))
(declare-datatypes () ((us_split_fields__ref13 (mk___split_fields__ref13 (us_split_fields__content13 us_split_fields26)))))
(define-fun us_split_fields__ref___29__projection ((a us_split_fields__ref13)) us_split_fields26 (us_split_fields__content13 a))
(declare-datatypes () ((us_rep14 (mk___rep13 (us_split_fields27 us_split_fields26)))))
(define-fun us_rep___30__projection ((a us_rep14)) us_split_fields26 (us_split_fields27 a))
(define-fun bool_eq20 ((a us_rep14) (b us_rep14)) Bool (ite (and (= (rec__usertoken__validauthcertt__valid (us_split_fields27 a)) (rec__usertoken__validauthcertt__valid (us_split_fields27 b))) (= (bool_eq18 (rec__usertoken__validauthcertt__contents (us_split_fields27 a)) (rec__usertoken__validauthcertt__contents (us_split_fields27 b))) true)) true false))
(declare-const value__size18 Int)
(declare-fun object__size18 (us_rep14) Int)
(declare-const value__alignment18 Int)
(declare-fun object__alignment18 (us_rep14) Int)
(assert (<= 0 value__size18))
(assert (forall ((a us_rep14)) (<= 0 (object__size18 a))))
(assert (<= 0 value__alignment18))
(assert (forall ((a us_rep14)) (<= 0 (object__alignment18 a))))
(declare-const usertoken__validauthcertt__valid__first__bit Int)
(declare-const usertoken__validauthcertt__valid__last__bit Int)
(declare-const usertoken__validauthcertt__valid__position Int)
(assert (<= 0 usertoken__validauthcertt__valid__first__bit))
(assert (< usertoken__validauthcertt__valid__first__bit usertoken__validauthcertt__valid__last__bit))
(assert (<= 0 usertoken__validauthcertt__valid__position))
(declare-const usertoken__validauthcertt__contents__first__bit Int)
(declare-const usertoken__validauthcertt__contents__last__bit Int)
(declare-const usertoken__validauthcertt__contents__position Int)
(assert (<= 0 usertoken__validauthcertt__contents__first__bit))
(assert (< usertoken__validauthcertt__contents__first__bit usertoken__validauthcertt__contents__last__bit))
(assert (<= 0 usertoken__validauthcertt__contents__position))
(declare-fun user_eq40 (us_rep14 us_rep14) Bool)
(declare-const dummy40 us_rep14)
(declare-datatypes () ((validauthcertt__ref (mk_validauthcertt__ref (validauthcertt__content us_rep14)))))
(define-fun validauthcertt__ref___projection ((a validauthcertt__ref)) us_rep14 (validauthcertt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-datatypes () ((us_split_fields28 (mk___split_fields14 (rec__usertoken__validprivcertt__valid Bool) (rec__usertoken__validprivcertt__contents us_rep11)))))
(define-fun us_split_fields_Valid__2__projection ((a us_split_fields28)) Bool (rec__usertoken__validprivcertt__valid a))
(define-fun us_split_fields_Contents__2__projection ((a us_split_fields28)) us_rep11 (rec__usertoken__validprivcertt__contents a))
(declare-datatypes () ((us_split_fields__ref14 (mk___split_fields__ref14 (us_split_fields__content14 us_split_fields28)))))
(define-fun us_split_fields__ref___28__projection ((a us_split_fields__ref14)) us_split_fields28 (us_split_fields__content14 a))
(declare-datatypes () ((us_rep15 (mk___rep14 (us_split_fields29 us_split_fields28)))))
(define-fun us_rep___29__projection ((a us_rep15)) us_split_fields28 (us_split_fields29 a))
(define-fun bool_eq21 ((a us_rep15) (b us_rep15)) Bool (ite (and (= (rec__usertoken__validprivcertt__valid (us_split_fields29 a)) (rec__usertoken__validprivcertt__valid (us_split_fields29 b))) (= (bool_eq17 (rec__usertoken__validprivcertt__contents (us_split_fields29 a)) (rec__usertoken__validprivcertt__contents (us_split_fields29 b))) true)) true false))
(declare-const value__size19 Int)
(declare-fun object__size19 (us_rep15) Int)
(declare-const value__alignment19 Int)
(declare-fun object__alignment19 (us_rep15) Int)
(assert (<= 0 value__size19))
(assert (forall ((a us_rep15)) (<= 0 (object__size19 a))))
(assert (<= 0 value__alignment19))
(assert (forall ((a us_rep15)) (<= 0 (object__alignment19 a))))
(declare-const usertoken__validprivcertt__valid__first__bit Int)
(declare-const usertoken__validprivcertt__valid__last__bit Int)
(declare-const usertoken__validprivcertt__valid__position Int)
(assert (<= 0 usertoken__validprivcertt__valid__first__bit))
(assert (< usertoken__validprivcertt__valid__first__bit usertoken__validprivcertt__valid__last__bit))
(assert (<= 0 usertoken__validprivcertt__valid__position))
(declare-const usertoken__validprivcertt__contents__first__bit Int)
(declare-const usertoken__validprivcertt__contents__last__bit Int)
(declare-const usertoken__validprivcertt__contents__position Int)
(assert (<= 0 usertoken__validprivcertt__contents__first__bit))
(assert (< usertoken__validprivcertt__contents__first__bit usertoken__validprivcertt__contents__last__bit))
(assert (<= 0 usertoken__validprivcertt__contents__position))
(declare-fun user_eq41 (us_rep15 us_rep15) Bool)
(declare-const dummy41 us_rep15)
(declare-datatypes () ((validprivcertt__ref (mk_validprivcertt__ref (validprivcertt__content us_rep15)))))
(define-fun validprivcertt__ref___projection ((a validprivcertt__ref)) us_rep15 (validprivcertt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-fun temp___String_Literal_2794 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_2794 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 3)) 32)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 4)) 83)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 7)) 105)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 8)) 97)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 11)) 78)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 12)) 117)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 13)) 109)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 14)) 98)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 15)) 101)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 16)) 114)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 17)) 115)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 19)) 97)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 20)) 118)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 21)) 97)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 22)) 105)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 23)) 97)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 24)) 98)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 25)) 108)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 26)) 101)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 28)) 102)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 29)) 111)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 30)) 114)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 32)) 105)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 33)) 115)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 34)) 115)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 35)) 117)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 36)) 101)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 38)) 111)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 39)) 102)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 41)) 65)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 42)) 117)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 43)) 116)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 44)) 104)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 45)) 111)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 46)) 114)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 47)) 105)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 48)) 115)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 49)) 97)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 50)) 116)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 51)) 105)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 52)) 111)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 53)) 110)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 54)) 32)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 55)) 67)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 56)) 101)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 57)) 114)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 58)) 116)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 59)) 105)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 60)) 102)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 61)) 105)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 62)) 99)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 63)) 97)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 64)) 116)) (= (to_rep (select (temp___String_Literal_2794 us_void_param) 65)) 101)) :pattern ((temp___String_Literal_2794 us_void_param)))))
(define-fun dynamic_invariant5 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant6 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant7 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant8 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant9 ((temp___expr_2407 Int) (temp___is_init_2403 Bool) (temp___skip_constant_2404 Bool) (temp___do_toplevel_2405 Bool) (temp___do_typ_inv_2406 Bool)) Bool (=> (or (= temp___is_init_2403 true) (<= 0 3)) (in_range22 temp___expr_2407)))
(define-fun dynamic_invariant10 ((temp___expr_1268 Int) (temp___is_init_1264 Bool) (temp___skip_constant_1265 Bool) (temp___do_toplevel_1266 Bool) (temp___do_typ_inv_1267 Bool)) Bool (=> (or (= temp___is_init_1264 true) (<= 0 17)) (in_range11 temp___expr_1268)))
(define-fun dynamic_invariant11 ((temp___expr_1275 Int) (temp___is_init_1271 Bool) (temp___skip_constant_1272 Bool) (temp___do_toplevel_1273 Bool) (temp___do_typ_inv_1274 Bool)) Bool (=> (or (= temp___is_init_1271 true) (<= 1 17)) (in_range9 temp___expr_1275)))
(define-fun dynamic_invariant12 ((temp___expr_1401 Int) (temp___is_init_1397 Bool) (temp___skip_constant_1398 Bool) (temp___do_toplevel_1399 Bool) (temp___do_typ_inv_1400 Bool)) Bool (=> (or (= temp___is_init_1397 true) (<= 0 2)) (in_range13 temp___expr_1401)))
(define-fun dynamic_invariant13 ((temp___expr_1282 Int) (temp___is_init_1278 Bool) (temp___skip_constant_1279 Bool) (temp___do_toplevel_1280 Bool) (temp___do_typ_inv_1281 Bool)) Bool (=> (or (= temp___is_init_1278 true) (<= 0 17408)) (in_range10 temp___expr_1282)))
(define-fun dynamic_invariant14 ((temp___expr_1313 Int) (temp___is_init_1309 Bool) (temp___skip_constant_1310 Bool) (temp___do_toplevel_1311 Bool) (temp___do_typ_inv_1312 Bool)) Bool (=> (or (= temp___is_init_1309 true) (<= 0 1024)) (in_range12 temp___expr_1313)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep1)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep8 (rec__auditlog__logfilelistt__length (us_split_fields3 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep8 (rec__auditlog__logfilelistt__length (us_split_fields3 usedlogfiles))) 1) 1024) (to_rep9 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(declare-const rliteral2 fileentrycountt)
(assert (= (fileentrycounttqtint rliteral2) 0))
(assert (forall ((temp___1342 Int)) (=> (dynamic_invariant14 temp___1342 true true true true) (forall ((temp___1343 Int)) (= (select (temp_____aggregate_def_1340 temp___1342) temp___1343) rliteral2)))))
(assert (= nouser (temp___String_Literal_164 Tuple0)))
(define-fun dynamic_invariant15 ((temp___expr_703 Int) (temp___is_init_699 Bool) (temp___skip_constant_700 Bool) (temp___do_toplevel_701 Bool) (temp___do_typ_inv_702 Bool)) Bool (=> (or (= temp___is_init_699 true) (<= 1901 2099)) (in_range4 temp___expr_703)))
(define-fun dynamic_invariant16 ((temp___expr_710 Int) (temp___is_init_706 Bool) (temp___skip_constant_707 Bool) (temp___do_toplevel_708 Bool) (temp___do_typ_inv_709 Bool)) Bool (=> (or (= temp___is_init_706 true) (<= 1 12)) (in_range5 temp___expr_710)))
(define-fun dynamic_invariant17 ((temp___expr_717 Int) (temp___is_init_713 Bool) (temp___skip_constant_714 Bool) (temp___do_toplevel_715 Bool) (temp___do_typ_inv_716 Bool)) Bool (=> (or (= temp___is_init_713 true) (<= 1 31)) (in_range6 temp___expr_717)))
(define-fun dynamic_invariant18 ((temp___expr_749 Int) (temp___is_init_745 Bool) (temp___skip_constant_746 Bool) (temp___do_toplevel_747 Bool) (temp___do_typ_inv_748 Bool)) Bool (=> (or (= temp___is_init_745 true) (<= 0 86399999)) (in_range7 temp___expr_749)))
(declare-const rliteral3 yearst)
(assert (= (yearstqtint rliteral3) 1901))
(declare-const rliteral4 monthst)
(assert (= (monthstqtint rliteral4) 1))
(declare-const rliteral5 dayst)
(assert (= (daystqtint rliteral5) 1))
(declare-const rliteral6 millisecst)
(assert (= (millisecstqtint rliteral6) 0))
(assert (= zerotime (mk___rep (mk___split_fields rliteral3 rliteral4 rliteral5 rliteral6))))
(define-fun dynamic_invariant19 ((temp___expr_402 Int) (temp___is_init_398 Bool) (temp___skip_constant_399 Bool) (temp___do_toplevel_400 Bool) (temp___do_typ_inv_401 Bool)) Bool (=> (or (= temp___is_init_398 true) (<= 0 40)) (in_range15 temp___expr_402)))
(define-fun dynamic_invariant20 ((temp___expr_426 Int) (temp___is_init_422 Bool) (temp___skip_constant_423 Bool) (temp___do_toplevel_424 Bool) (temp___do_typ_inv_425 Bool)) Bool (=> (or (= temp___is_init_422 true) (<= 0 4294967295)) (in_range16 temp___expr_426)))
(define-fun dynamic_invariant21 ((temp___expr_450 Int) (temp___is_init_446 Bool) (temp___skip_constant_447 Bool) (temp___do_toplevel_448 Bool) (temp___do_typ_inv_449 Bool)) Bool (=> (or (= temp___is_init_446 true) (<= 0 10)) (in_range18 temp___expr_450)))
(define-fun dynamic_invariant22 ((temp___expr_464 Int) (temp___is_init_460 Bool) (temp___skip_constant_461 Bool) (temp___do_toplevel_462 Bool) (temp___do_typ_inv_463 Bool)) Bool (=> (or (= temp___is_init_460 true) (<= 0 4294967295)) (in_range19 temp___expr_464)))
(define-fun dynamic_invariant23 ((temp___expr_471 Int) (temp___is_init_467 Bool) (temp___skip_constant_468 Bool) (temp___do_toplevel_469 Bool) (temp___do_typ_inv_470 Bool)) Bool (=> (or (= temp___is_init_467 true) (<= 0 128)) (in_range20 temp___expr_471)))
(assert (forall ((temp___1338 Int)) (=> (dynamic_invariant11 temp___1338 true true true true) (forall ((temp___1339 Int)) (= (select (temp_____aggregate_def_1336 temp___1338) temp___1339) rliteral)))))
(declare-const rliteral7 serialnumbert)
(assert (= (serialnumbertqtint rliteral7) 0))
(declare-const currenttimevar__split_fields yearst)
(declare-const currenttimevar__split_fields1 monthst)
(declare-const currenttimevar__split_fields2 dayst)
(declare-const currenttimevar__split_fields3 millisecst)
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const thistisinfo__split_fields Bool)
(declare-const thistisinfo__split_fields1 issueridt)
(declare-const thistisinfo__split_fields2 namecountt)
(declare-const thistisinfo__split_fields3 (Array Int character))
(declare-const privcert__split_fields us_split_fields__ref14)
(declare-const id__split_fields issueridt)
(declare-const id__split_fields1 namecountt)
(declare-const id__split_fields2 (Array Int character))
(declare-const id__split_fields3 serialnumbert)
(declare-const notbefore__split_fields yearst)
(declare-const notbefore__split_fields1 monthst)
(declare-const notbefore__split_fields2 dayst)
(declare-const notbefore__split_fields3 millisecst)
(declare-const notafter__split_fields yearst)
(declare-const notafter__split_fields1 monthst)
(declare-const notafter__split_fields2 dayst)
(declare-const notafter__split_fields3 millisecst)
(declare-const clearance__split_fields us_split_fields__ref9)
(declare-const currenttime us_private__ref)
(declare-const state us_private__ref)
(declare-const state1 us_private__ref)
(declare-const state2 us_private__ref)
(declare-const o us_rep10)
(declare-const o1 us_split_fields18)
(declare-const o2 classt)
(declare-const o3 Int)
(declare-const o4 classt)
(declare-const o5 us_split_fields18)
(declare-const temp___2786 us_rep10)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 classt)
(declare-const o9 us_split_fields18)
(declare-const temp___2788 us_rep10)
(declare-const temp___2789 us_rep)
(declare-const o10 us_rep)
(declare-const o11 us_rep4)
(declare-const o12 us_split_fields10)
(declare-const temp___2791 us_rep6)
(declare-const o13 Bool)
(declare-const result us_split_fields__ref9)
(declare-const clearance__split_fields1 us_split_fields18)
(declare-const result1 Bool)
(declare-const result2 us_split_fields__ref9)
(declare-const clearance__split_fields2 us_split_fields18)
(declare-const result3 Bool)
(declare-const result4 us_split_fields__ref)
(declare-const notbefore__split_fields4 us_split_fields)
(declare-const result5 us_split_fields__ref)
(declare-const notafter__split_fields4 us_split_fields)
(declare-const notbefore__split_fields5 us_split_fields)
(declare-const notafter__split_fields5 us_split_fields)
(declare-const result6 us_split_fields__ref5)
(declare-const id__split_fields4 us_split_fields10)
(declare-const result7 Bool)
(declare-const result8 us_split_fields__ref5)
(declare-const id__split_fields5 us_split_fields10)
(assert (= (temp___String_Literal_164 Tuple0) nouser))
(assert (= (mk___rep (mk___split_fields rliteral3 rliteral4 rliteral5 rliteral6)) zerotime))
(assert (= (valid_numberlogentries (to_rep6 logfilestate__split_fields) (to_rep7 logfilestate__split_fields1) (mk___rep1 (mk___split_fields1 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range14 auditalarm))
(assert (= (privatekeypresent (mk___split_fields4 thistisinfo__split_fields (mk___rep3 (mk___split_fields3 thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3))) (us_private__content state1)) true))
(assert (= o (theclearance (rec__usertoken__validprivcertt__contents (us_split_fields__content14 privcert__split_fields)))))
(assert (= o1 (us_split_fields19 o)))
(assert (= o2 (rec__privtypes__clearancet__class o1)))
(assert (= o3 (to_rep17 o2)))
(assert (= (to_rep17 o4) o3))
(assert (= o5 (mk___split_fields9 o4)))
(assert (= temp___2786 (mk___rep9 o5)))
(assert (= result clearance__split_fields))
(assert (= (let ((subject clearance__split_fields)) clearance__split_fields1) (us_split_fields19 temp___2786)))
(assert (and (= o6 (theenclaveclearance (us_private__content state))) (in_range8 o6)))
(assert (= result1 (ite (< o6 (to_rep17 (rec__privtypes__clearancet__class (let ((subject clearance__split_fields)) clearance__split_fields1)))) true false)))
(assert (=> (= result1 true) (and (= o7 (theenclaveclearance (us_private__content state))) (in_range8 o7))))
(assert (=> (= result1 true) (= (to_rep17 o8) o7)))
(assert (=> (= result1 true) (= o9 (mk___split_fields9 o8))))
(assert (=> (= result1 true) (= temp___2788 (mk___rep9 o9))))
(assert (=> (= result1 true) (= result2 (let ((subject clearance__split_fields)) (mk___split_fields__ref9 clearance__split_fields1)))))
(assert (=> (= result1 true) (= (let ((subject clearance__split_fields)) clearance__split_fields2) (us_split_fields19 temp___2788))))
(assert (=> (not (= result1 true)) (= (let ((subject clearance__split_fields)) (mk___split_fields__ref9 clearance__split_fields2)) (let ((subject clearance__split_fields)) (mk___split_fields__ref9 clearance__split_fields1)))))
(assert (=> (not (= result1 true)) (= clearance__split_fields2 clearance__split_fields1)))
(assert (= result3 (authperiodisempty (us_private__content state))))
(assert (=> (= result3 true) (and (= temp___2789 (thecurrenttime (mk___split_fields currenttimevar__split_fields currenttimevar__split_fields1 currenttimevar__split_fields2 currenttimevar__split_fields3) (us_private__content currenttime))) (= temp___2789 (mk___rep (mk___split_fields currenttimevar__split_fields currenttimevar__split_fields1 currenttimevar__split_fields2 currenttimevar__split_fields3))))))
(assert (=> (= result3 true) (= result4 (mk___split_fields__ref (mk___split_fields notbefore__split_fields notbefore__split_fields1 notbefore__split_fields2 notbefore__split_fields3)))))
(assert (=> (= result3 true) (= notbefore__split_fields4 (us_split_fields1 temp___2789))))
(assert (=> (= result3 true) (= result5 (mk___split_fields__ref (mk___split_fields notafter__split_fields notafter__split_fields1 notafter__split_fields2 notafter__split_fields3)))))
(assert (=> (= result3 true) (= notafter__split_fields4 (us_split_fields1 zerotime))))
(assert (=> (not (= result3 true)) (and (= o10 (thecurrenttime (mk___split_fields currenttimevar__split_fields currenttimevar__split_fields1 currenttimevar__split_fields2 currenttimevar__split_fields3) (us_private__content currenttime))) (= o10 (mk___rep (mk___split_fields currenttimevar__split_fields currenttimevar__split_fields1 currenttimevar__split_fields2 currenttimevar__split_fields3))))))
(assert (=> (not (= result3 true)) (= notafter__split_fields4 notafter__split_fields5)))
(assert (=> (not (= result3 true)) (= notbefore__split_fields4 notbefore__split_fields5)))
(assert (and (= o11 (thistis (mk___split_fields4 thistisinfo__split_fields (mk___rep3 (mk___split_fields3 thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3))) (us_private__content state1))) (= o11 (mk___rep3 (mk___split_fields3 thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3)))))
(assert (= o12 (mk___split_fields5 o11 id__split_fields3)))
(assert (= temp___2791 (mk___rep5 o12)))
(assert (= result6 (mk___split_fields__ref5 (mk___split_fields5 (mk___rep3 (mk___split_fields3 id__split_fields id__split_fields1 id__split_fields2)) id__split_fields3))))
(assert (= id__split_fields4 (us_split_fields11 temp___2791)))
(assert (= o13 (serialnumberhasoverflowed (us_private__content state2))))
(assert (= result7 (ite (not (= o13 true)) true false)))
(assert (not (= result7 true)))
(assert (= result8 (mk___split_fields__ref5 id__split_fields4)))
(assert (= id__split_fields5 (mk___split_fields5 (rec__certtypes__idt__issuer id__split_fields4) rliteral7)))
(assert (not (= (to_rep1 (first (mk 1 65))) 1)))
(check-sat)
(exit)
