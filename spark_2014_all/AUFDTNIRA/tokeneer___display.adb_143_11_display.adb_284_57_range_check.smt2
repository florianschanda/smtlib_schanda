(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort statust 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (statust statust) Bool)
(declare-const dummy4 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant ((temp___expr_191 Int) (temp___is_init_188 Bool) (temp___skip_constant_189 Bool) (temp___do_toplevel_190 Bool)) Bool (=> (or (= temp___is_init_188 true) (<= 0 1)) (in_range4 temp___expr_191)))
(declare-sort unsigned32t 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (unsigned32t unsigned32t) Bool)
(declare-const dummy5 unsigned32t)
(declare-datatypes () ((unsigned32t__ref (mk_unsigned32t__ref (unsigned32t__content unsigned32t)))))
(define-fun unsigned32t__ref___projection ((a unsigned32t__ref)) unsigned32t (unsigned32t__content a))
(declare-fun to_rep2 (unsigned32t) Int)
(declare-fun of_rep2 (Int) unsigned32t)
(assert (forall ((x unsigned32t)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x unsigned32t)) (! (in_range5 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-const nouser (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun temp___String_Literal_136 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_136 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_136 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 3)) 85)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 32)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 33)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 36)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 38)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 41)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 43)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 44)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 46)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 48)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 49)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 50)) 32)) :pattern ((temp___String_Literal_136 us_void_param)))))
(declare-sort logfileindext 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (logfileindext logfileindext) Bool)
(declare-const dummy6 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep3 (logfileindext) Int)
(declare-fun of_rep3 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x logfileindext)) (! (in_range6 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq7 (logentrycountt logentrycountt) Bool)
(declare-const dummy7 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep4 (logentrycountt) Int)
(declare-fun of_rep4 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x logentrycountt)) (! (in_range7 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (logfileindext Int) (Array Int logfileindext))
(assert (forall ((v logfileindext)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq2 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep3 (select a temp___idx_150)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_150))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep3 (select a temp___idx_150)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_150)))))))))))
(declare-fun compare1 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) Int)
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq2 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq2 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep3 (select a (+ i 1))) (to_rep3 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq2 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep3 (select b (+ i 1))) (to_rep3 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const dummy8 (Array Int logfileindext))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int logfileindext)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int logfileindext)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq8 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-sort logfilecountt 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq9 (logfilecountt logfilecountt) Bool)
(declare-const dummy9 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep5 (logfilecountt) Int)
(declare-fun of_rep5 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x logfilecountt)) (! (in_range8 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq3 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (bool_eq2 (rec__auditlog__logfilelistt__list (us_split_fields1 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields1 b)) 1 17) true) (= (to_rep3 (rec__auditlog__logfilelistt__head (us_split_fields1 a))) (to_rep3 (rec__auditlog__logfilelistt__head (us_split_fields1 b))))) (= (to_rep3 (rec__auditlog__logfilelistt__lasti (us_split_fields1 a))) (to_rep3 (rec__auditlog__logfilelistt__lasti (us_split_fields1 b))))) (= (to_rep5 (rec__auditlog__logfilelistt__length (us_split_fields1 a))) (to_rep5 (rec__auditlog__logfilelistt__length (us_split_fields1 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq10 (us_rep us_rep) Bool)
(declare-const dummy10 us_rep)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq11 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy11 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep6 (fileentrycountt) Int)
(declare-fun of_rep6 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range9 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first2 Int)) (! (= (slide2 a first2 first2) a) :pattern ((slide2 a first2 first2))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (fileentrycountt Int) (Array Int fileentrycountt))
(assert (forall ((v fileentrycountt)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq4 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep6 (select a temp___idx_151)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_151))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep6 (select a temp___idx_151)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_151)))))))))))
(declare-fun compare2 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) Int)
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare2 a a_first a_last b b_first b_last) 0) (= (bool_eq4 a a_first a_last b b_first b_last) true)) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare2 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq4 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep6 (select a (+ i 1))) (to_rep6 (select b (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare2 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq4 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep6 (select b (+ i 1))) (to_rep6 (select a (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(declare-const dummy12 (Array Int fileentrycountt))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq12 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields2)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields2)) us_rep (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields2)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___9__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq5 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 a))) (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 b)))) (= (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 a))) (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 b))))) (= (bool_eq3 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 b))) true)) (= (bool_eq4 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 b)) 1 17) true)) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep1) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep1) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep1)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment4 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq13 (us_rep1 us_rep1) Bool)
(declare-const dummy13 us_rep1)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep1)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep1 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep (Array Int fileentrycountt)) Bool)
(declare-fun temp___1120 (Int) (Array Int logfileindext))
(assert (forall ((temp___1122 Int)) (forall ((temp___1123 Int)) (= (select (temp___1120 temp___1122) temp___1123) (of_rep3 temp___1122)))))
(declare-fun temp___1124 (Int) (Array Int fileentrycountt))
(assert (forall ((temp___1126 Int)) (forall ((temp___1127 Int)) (= (select (temp___1124 temp___1126) temp___1127) (of_rep6 temp___1126)))))
(define-fun dynamic_invariant1 ((temp___expr_1114 us_rep1) (temp___is_init_1111 Bool) (temp___skip_constant_1112 Bool) (temp___do_toplevel_1113 Bool)) Bool (= (valid_numberlogentries (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1114))) (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1114))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1114)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1114))) true))
(define-fun default_initial_assumption ((temp___expr_1118 us_rep1) (temp___skip_top_level_1119 Bool)) Bool (and (and (and (= (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1118))) 1) (= (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1118))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1118)) (mk___rep (mk___split_fields (temp___1120 1) (of_rep3 1) (of_rep3 1) (of_rep5 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1118)) (temp___1124 0))))
(define-fun type_invariant ((temp___1128 us_rep1)) Bool (= (valid_numberlogentries (to_rep3 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___1128))) (to_rep4 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___1128))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___1128)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___1128))) true))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep2 0)
(declare-fun bool_eq6 (us_rep2 us_rep2) Bool)
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep2) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep2) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))
(declare-fun user_eq14 (us_rep2 us_rep2) Bool)
(declare-const dummy14 us_rep2)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep2)))))
(define-fun t__ref___projection ((a t__ref)) us_rep2 (t__content a))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep2))))))
(declare-fun slide3 ((Array Int us_rep2) Int Int) (Array Int us_rep2))
(assert (forall ((a (Array Int us_rep2))) (forall ((first2 Int)) (! (= (slide3 a first2 first2) a) :pattern ((slide3 a first2 first2))))))
(assert (forall ((a (Array Int us_rep2))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(declare-fun concat4 ((Array Int us_rep2) Int Int (Array Int us_rep2) Int Int) (Array Int us_rep2))
(assert (forall ((a (Array Int us_rep2)) (b (Array Int us_rep2))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat4 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton4 (us_rep2 Int) (Array Int us_rep2))
(assert (forall ((v us_rep2)) (forall ((i Int)) (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i))))))
(define-fun bool_eq7 ((a (Array Int us_rep2)) (a__first Int) (a__last Int) (b (Array Int us_rep2)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq6 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true)))) true false))
(assert (forall ((a (Array Int us_rep2)) (b (Array Int us_rep2))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq7 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq6 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort filestatust 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq15 (filestatust filestatust) Bool)
(declare-const dummy15 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep7 (filestatust) Int)
(declare-fun of_rep7 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x filestatust)) (! (in_range10 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int filestatust))))))
(declare-fun slide4 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first2 Int)) (! (= (slide4 a first2 first2) a) :pattern ((slide4 a first2 first2))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(declare-fun concat5 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat5 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat5 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat5 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton5 (filestatust Int) (Array Int filestatust))
(assert (forall ((v filestatust)) (forall ((i Int)) (! (= (select (singleton5 v i) i) v) :pattern ((select (singleton5 v i) i))))))
(define-fun bool_eq8 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep7 (select a temp___idx_153)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_153))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq8 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep7 (select a temp___idx_153)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_153)))))))))))
(declare-fun compare3 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) Int)
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare3 a a_first a_last b b_first b_last) 0) (= (bool_eq8 a a_first a_last b b_first b_last) true)) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare3 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq8 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep7 (select a (+ i 1))) (to_rep7 (select b (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare3 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq8 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep7 (select b (+ i 1))) (to_rep7 (select a (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-sort msgt 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq16 (msgt msgt) Bool)
(declare-const dummy16 msgt)
(declare-datatypes () ((msgt__ref (mk_msgt__ref (msgt__content msgt)))))
(define-fun msgt__ref___projection ((a msgt__ref)) msgt (msgt__content a))
(define-fun dynamic_invariant2 ((temp___expr_1280 Int) (temp___is_init_1277 Bool) (temp___skip_constant_1278 Bool) (temp___do_toplevel_1279 Bool)) Bool (=> (or (= temp___is_init_1277 true) (<= 0 7)) (in_range11 temp___expr_1280)))
(declare-sort msgtextcount 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 23)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq17 (msgtextcount msgtextcount) Bool)
(declare-const dummy17 msgtextcount)
(declare-datatypes () ((msgtextcount__ref (mk_msgtextcount__ref (msgtextcount__content msgtextcount)))))
(define-fun msgtextcount__ref___projection ((a msgtextcount__ref)) msgtextcount (msgtextcount__content a))
(declare-fun to_rep8 (msgtextcount) Int)
(declare-fun of_rep8 (Int) msgtextcount)
(assert (forall ((x msgtextcount)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x msgtextcount)) (! (in_range12 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-const dummy18 (Array Int character))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int character)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int character)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int character)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int character))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment6 a))))
(declare-fun user_eq18 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__display__msglinet__text (Array Int character)) (rec__display__msglinet__len msgtextcount)))))
(define-fun us_split_fields_Text__projection ((a us_split_fields4)) (Array Int character) (rec__display__msglinet__text a))
(define-fun us_split_fields_Len__projection ((a us_split_fields4)) msgtextcount (rec__display__msglinet__len a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___9__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep3 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___10__projection ((a us_rep3)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq9 ((a us_rep3) (b us_rep3)) Bool (ite (and (= (bool_eq (rec__display__msglinet__text (us_split_fields5 a)) 1 23 (rec__display__msglinet__text (us_split_fields5 b)) 1 23) true) (= (to_rep8 (rec__display__msglinet__len (us_split_fields5 a))) (to_rep8 (rec__display__msglinet__len (us_split_fields5 b))))) true false))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep3) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep3) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep3)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment7 a))))
(declare-const display__msglinet__text__first__bit Int)
(declare-const display__msglinet__text__last__bit Int)
(declare-const display__msglinet__text__position Int)
(assert (<= 0 display__msglinet__text__first__bit))
(assert (< display__msglinet__text__first__bit display__msglinet__text__last__bit))
(assert (<= 0 display__msglinet__text__position))
(declare-const display__msglinet__len__first__bit Int)
(declare-const display__msglinet__len__last__bit Int)
(declare-const display__msglinet__len__position Int)
(assert (<= 0 display__msglinet__len__first__bit))
(assert (< display__msglinet__len__first__bit display__msglinet__len__last__bit))
(assert (<= 0 display__msglinet__len__position))
(declare-fun user_eq19 (us_rep3 us_rep3) Bool)
(declare-const dummy19 us_rep3)
(declare-datatypes () ((msglinet__ref (mk_msglinet__ref (msglinet__content us_rep3)))))
(define-fun msglinet__ref___projection ((a msglinet__ref)) us_rep3 (msglinet__content a))
(declare-const blankline us_rep3)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__display__msgstrt__top us_rep3) (rec__display__msgstrt__bottom us_rep3)))))
(define-fun us_split_fields_Top__projection ((a us_split_fields6)) us_rep3 (rec__display__msgstrt__top a))
(define-fun us_split_fields_Bottom__projection ((a us_split_fields6)) us_rep3 (rec__display__msgstrt__bottom a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___10__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep4 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___11__projection ((a us_rep4)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq10 ((a us_rep4) (b us_rep4)) Bool (ite (and (= (bool_eq9 (rec__display__msgstrt__top (us_split_fields7 a)) (rec__display__msgstrt__top (us_split_fields7 b))) true) (= (bool_eq9 (rec__display__msgstrt__bottom (us_split_fields7 a)) (rec__display__msgstrt__bottom (us_split_fields7 b))) true)) true false))
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep4) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep4) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep4)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment8 a))))
(declare-const display__msgstrt__top__first__bit Int)
(declare-const display__msgstrt__top__last__bit Int)
(declare-const display__msgstrt__top__position Int)
(assert (<= 0 display__msgstrt__top__first__bit))
(assert (< display__msgstrt__top__first__bit display__msgstrt__top__last__bit))
(assert (<= 0 display__msgstrt__top__position))
(declare-const display__msgstrt__bottom__first__bit Int)
(declare-const display__msgstrt__bottom__last__bit Int)
(declare-const display__msgstrt__bottom__position Int)
(assert (<= 0 display__msgstrt__bottom__first__bit))
(assert (< display__msgstrt__bottom__first__bit display__msgstrt__bottom__last__bit))
(assert (<= 0 display__msgstrt__bottom__position))
(declare-fun user_eq20 (us_rep4 us_rep4) Bool)
(declare-const dummy20 us_rep4)
(declare-datatypes () ((msgstrt__ref (mk_msgstrt__ref (msgstrt__content us_rep4)))))
(define-fun msgstrt__ref___projection ((a msgstrt__ref)) us_rep4 (msgstrt__content a))
(declare-sort scrolltextcount 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 50)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq21 (scrolltextcount scrolltextcount) Bool)
(declare-const dummy21 scrolltextcount)
(declare-datatypes () ((scrolltextcount__ref (mk_scrolltextcount__ref (scrolltextcount__content scrolltextcount)))))
(define-fun scrolltextcount__ref___projection ((a scrolltextcount__ref)) scrolltextcount (scrolltextcount__content a))
(declare-fun to_rep9 (scrolltextcount) Int)
(declare-fun of_rep9 (Int) scrolltextcount)
(assert (forall ((x scrolltextcount)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x scrolltextcount)) (! (in_range13 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-sort scrolltexti 0)
(define-fun in_range14 ((x Int)) Bool (and (<= 1 x) (<= x 50)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq22 (scrolltexti scrolltexti) Bool)
(declare-const dummy22 scrolltexti)
(declare-datatypes () ((scrolltexti__ref (mk_scrolltexti__ref (scrolltexti__content scrolltexti)))))
(define-fun scrolltexti__ref___projection ((a scrolltexti__ref)) scrolltexti (scrolltexti__content a))
(declare-const dummy23 (Array Int character))
(declare-const value__size9 Int)
(declare-fun object__size9 ((Array Int character)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int character)) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 ((Array Int character)) Int)
(assert (<= 0 value__size9))
(assert (forall ((a (Array Int character))) (<= 0 (object__size9 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment9 a))))
(declare-fun user_eq23 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__display__scrollstrt__text (Array Int character)) (rec__display__scrollstrt__len scrolltextcount)))))
(define-fun us_split_fields_Text__2__projection ((a us_split_fields8)) (Array Int character) (rec__display__scrollstrt__text a))
(define-fun us_split_fields_Len__2__projection ((a us_split_fields8)) scrolltextcount (rec__display__scrollstrt__len a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___11__projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep5 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___12__projection ((a us_rep5)) us_split_fields8 (us_split_fields9 a))
(define-fun bool_eq11 ((a us_rep5) (b us_rep5)) Bool (ite (and (= (bool_eq (rec__display__scrollstrt__text (us_split_fields9 a)) 1 50 (rec__display__scrollstrt__text (us_split_fields9 b)) 1 50) true) (= (to_rep9 (rec__display__scrollstrt__len (us_split_fields9 a))) (to_rep9 (rec__display__scrollstrt__len (us_split_fields9 b))))) true false))
(declare-const value__size10 Int)
(declare-fun object__size10 (us_rep5) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 (us_rep5) Int)
(assert (<= 0 value__size10))
(assert (forall ((a us_rep5)) (<= 0 (object__size10 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment10 a))))
(declare-const display__scrollstrt__text__first__bit Int)
(declare-const display__scrollstrt__text__last__bit Int)
(declare-const display__scrollstrt__text__position Int)
(assert (<= 0 display__scrollstrt__text__first__bit))
(assert (< display__scrollstrt__text__first__bit display__scrollstrt__text__last__bit))
(assert (<= 0 display__scrollstrt__text__position))
(declare-const display__scrollstrt__len__first__bit Int)
(declare-const display__scrollstrt__len__last__bit Int)
(declare-const display__scrollstrt__len__position Int)
(assert (<= 0 display__scrollstrt__len__first__bit))
(assert (< display__scrollstrt__len__first__bit display__scrollstrt__len__last__bit))
(assert (<= 0 display__scrollstrt__len__position))
(declare-fun user_eq24 (us_rep5 us_rep5) Bool)
(declare-const dummy24 us_rep5)
(declare-datatypes () ((scrollstrt__ref (mk_scrollstrt__ref (scrollstrt__content us_rep5)))))
(define-fun scrollstrt__ref___projection ((a scrollstrt__ref)) us_rep5 (scrollstrt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-datatypes () ((us_split_fields10 (mk___split_fields5 (rec__display__sizest__top unsigned32t) (rec__display__sizest__bottom unsigned32t)))))
(define-fun us_split_fields_Top__2__projection ((a us_split_fields10)) unsigned32t (rec__display__sizest__top a))
(define-fun us_split_fields_Bottom__2__projection ((a us_split_fields10)) unsigned32t (rec__display__sizest__bottom a))
(declare-datatypes () ((us_split_fields__ref5 (mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___12__projection ((a us_split_fields__ref5)) us_split_fields10 (us_split_fields__content5 a))
(declare-datatypes () ((us_rep6 (mk___rep5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___13__projection ((a us_rep6)) us_split_fields10 (us_split_fields11 a))
(define-fun bool_eq12 ((a us_rep6) (b us_rep6)) Bool (ite (and (= (to_rep2 (rec__display__sizest__top (us_split_fields11 a))) (to_rep2 (rec__display__sizest__top (us_split_fields11 b)))) (= (to_rep2 (rec__display__sizest__bottom (us_split_fields11 a))) (to_rep2 (rec__display__sizest__bottom (us_split_fields11 b))))) true false))
(declare-const value__size11 Int)
(declare-fun object__size11 (us_rep6) Int)
(declare-const value__alignment11 Int)
(declare-fun object__alignment11 (us_rep6) Int)
(assert (<= 0 value__size11))
(assert (forall ((a us_rep6)) (<= 0 (object__size11 a))))
(assert (<= 0 value__alignment11))
(assert (forall ((a us_rep6)) (<= 0 (object__alignment11 a))))
(declare-const display__sizest__top__first__bit Int)
(declare-const display__sizest__top__last__bit Int)
(declare-const display__sizest__top__position Int)
(assert (<= 0 display__sizest__top__first__bit))
(assert (< display__sizest__top__first__bit display__sizest__top__last__bit))
(assert (<= 0 display__sizest__top__position))
(declare-const display__sizest__bottom__first__bit Int)
(declare-const display__sizest__bottom__last__bit Int)
(declare-const display__sizest__bottom__position Int)
(assert (<= 0 display__sizest__bottom__first__bit))
(assert (< display__sizest__bottom__first__bit display__sizest__bottom__last__bit))
(assert (<= 0 display__sizest__bottom__position))
(declare-fun user_eq25 (us_rep6 us_rep6) Bool)
(declare-const dummy25 us_rep6)
(declare-datatypes () ((sizest__ref (mk_sizest__ref (sizest__content us_rep6)))))
(define-fun sizest__ref___projection ((a sizest__ref)) us_rep6 (sizest__content a))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-datatypes () ((map__ref5 (mk_map__ref5 (map__content5 (Array Int us_rep4))))))
(declare-fun slide5 ((Array Int us_rep4) Int Int) (Array Int us_rep4))
(assert (forall ((a (Array Int us_rep4))) (forall ((first2 Int)) (! (= (slide5 a first2 first2) a) :pattern ((slide5 a first2 first2))))))
(assert (forall ((a (Array Int us_rep4))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide5 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide5 a old_first new_first) i))))))))
(declare-fun concat6 ((Array Int us_rep4) Int Int (Array Int us_rep4) Int Int) (Array Int us_rep4))
(assert (forall ((a (Array Int us_rep4)) (b (Array Int us_rep4))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat6 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat6 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat6 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton6 (us_rep4 Int) (Array Int us_rep4))
(assert (forall ((v us_rep4)) (forall ((i Int)) (! (= (select (singleton6 v i) i) v) :pattern ((select (singleton6 v i) i))))))
(define-fun bool_eq13 ((a (Array Int us_rep4)) (a__first Int) (a__last Int) (b (Array Int us_rep4)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_165 Int)) (=> (and (<= a__first temp___idx_165) (<= temp___idx_165 a__last)) (= (bool_eq10 (select a temp___idx_165) (select b (+ (- b__first a__first) temp___idx_165))) true)))) true false))
(assert (forall ((a (Array Int us_rep4)) (b (Array Int us_rep4))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq13 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_165 Int)) (=> (and (<= a__first temp___idx_165) (<= temp___idx_165 a__last)) (= (bool_eq10 (select a temp___idx_165) (select b (+ (- b__first a__first) temp___idx_165))) true))))))))
(declare-const msgtostrings (Array Int us_rep4))
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-fun display__msgtostrings__aggregate_def (us_rep4 us_rep4 us_rep4 us_rep4 us_rep4 us_rep4 us_rep4 us_rep4) (Array Int us_rep4))
(assert (forall ((temp___167 us_rep4) (temp___168 us_rep4) (temp___169 us_rep4) (temp___170 us_rep4) (temp___171 us_rep4) (temp___172 us_rep4) (temp___173 us_rep4) (temp___174 us_rep4)) (let ((temp___166 (display__msgtostrings__aggregate_def temp___167 temp___168 temp___169 temp___170 temp___171 temp___172 temp___173 temp___174))) (and (and (and (and (and (and (and (= (select temp___166 0) temp___167) (= (select temp___166 1) temp___168)) (= (select temp___166 2) temp___169)) (= (select temp___166 3) temp___170)) (= (select temp___166 4) temp___171)) (= (select temp___166 5) temp___172)) (= (select temp___166 6) temp___173)) (= (select temp___166 7) temp___174)))))
(declare-fun temp___String_Literal_176 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_176 us_void_param) 1)) 83) (= (to_rep (select (temp___String_Literal_176 us_void_param) 2)) 89)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 3)) 83)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 4)) 84)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 5)) 69)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 6)) 77)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 8)) 78)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 9)) 79)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 10)) 84)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 12)) 79)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 13)) 80)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 14)) 69)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 15)) 82)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 16)) 65)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 17)) 84)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 18)) 73)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 19)) 79)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 20)) 78)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 21)) 65)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 22)) 76)) (= (to_rep (select (temp___String_Literal_176 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_176 us_void_param)))))
(declare-fun temp___String_Literal_177 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_177 us_void_param) 1)) 87) (= (to_rep (select (temp___String_Literal_177 us_void_param) 2)) 69)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 4)) 67)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 5)) 79)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 6)) 77)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 7)) 69)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 9)) 84)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 10)) 79)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 12)) 84)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 13)) 73)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 14)) 83)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_177 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_177 us_void_param)))))
(declare-fun temp___String_Literal_178 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_178 us_void_param) 1)) 69) (= (to_rep (select (temp___String_Literal_178 us_void_param) 2)) 78)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 3)) 84)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 4)) 69)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 5)) 82)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 6)) 32)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 7)) 84)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 8)) 79)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 9)) 75)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 10)) 69)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 11)) 78)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_178 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_178 us_void_param)))))
(declare-fun temp___String_Literal_179 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_179 us_void_param) 1)) 65) (= (to_rep (select (temp___String_Literal_179 us_void_param) 2)) 85)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 3)) 84)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 4)) 72)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 5)) 69)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 6)) 78)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 7)) 84)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 8)) 73)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 9)) 67)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 10)) 65)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 11)) 84)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 12)) 73)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 13)) 78)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 14)) 71)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 16)) 85)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 17)) 83)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 18)) 69)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 19)) 82)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_179 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_179 us_void_param)))))
(declare-fun temp___String_Literal_180 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_180 us_void_param) 1)) 73) (= (to_rep (select (temp___String_Literal_180 us_void_param) 2)) 78)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 3)) 83)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 4)) 69)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 5)) 82)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 6)) 84)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 8)) 70)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 9)) 73)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 10)) 78)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 11)) 71)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 12)) 69)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 13)) 82)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_180 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_180 us_void_param)))))
(declare-fun temp___String_Literal_181 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_181 us_void_param) 1)) 82) (= (to_rep (select (temp___String_Literal_181 us_void_param) 2)) 69)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 3)) 77)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 4)) 79)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 5)) 86)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 6)) 69)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 8)) 84)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 9)) 79)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 10)) 75)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 11)) 69)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 12)) 78)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 14)) 65)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 15)) 78)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 16)) 68)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 18)) 69)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 19)) 78)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 20)) 84)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 21)) 69)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 22)) 82)) (= (to_rep (select (temp___String_Literal_181 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_181 us_void_param)))))
(declare-fun temp___String_Literal_182 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_182 us_void_param) 1)) 65) (= (to_rep (select (temp___String_Literal_182 us_void_param) 2)) 85)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 3)) 84)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 4)) 72)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 5)) 69)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 6)) 78)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 7)) 84)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 8)) 73)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 9)) 67)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 10)) 65)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 11)) 84)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 12)) 73)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 13)) 78)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 14)) 71)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 16)) 85)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 17)) 83)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 18)) 69)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 19)) 82)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_182 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_182 us_void_param)))))
(declare-fun temp___String_Literal_183 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_183 us_void_param) 1)) 80) (= (to_rep (select (temp___String_Literal_183 us_void_param) 2)) 76)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 3)) 69)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 4)) 65)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 5)) 83)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 6)) 69)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 8)) 87)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 9)) 65)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 10)) 73)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 11)) 84)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_183 us_void_param)))))
(declare-fun temp___String_Literal_184 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_184 us_void_param) 1)) 69) (= (to_rep (select (temp___String_Literal_184 us_void_param) 2)) 78)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 3)) 84)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 4)) 82)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 5)) 89)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 6)) 32)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 7)) 68)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 8)) 69)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 9)) 78)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 10)) 73)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 11)) 69)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 12)) 68)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_184 us_void_param)))))
(declare-fun temp___String_Literal_185 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_185 us_void_param) 1)) 82) (= (to_rep (select (temp___String_Literal_185 us_void_param) 2)) 69)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 3)) 77)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 4)) 79)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 5)) 86)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 6)) 69)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 8)) 84)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 9)) 79)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 10)) 75)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 11)) 69)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 12)) 78)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_185 us_void_param)))))
(declare-fun temp___String_Literal_186 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_186 us_void_param) 1)) 84) (= (to_rep (select (temp___String_Literal_186 us_void_param) 2)) 79)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 3)) 75)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 4)) 69)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 5)) 78)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 6)) 32)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 7)) 85)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 8)) 80)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 9)) 68)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 10)) 65)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 11)) 84)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 12)) 69)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 14)) 70)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 15)) 65)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 16)) 73)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 17)) 76)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 18)) 69)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 19)) 68)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_186 us_void_param)))))
(declare-fun temp___String_Literal_187 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_187 us_void_param) 1)) 69) (= (to_rep (select (temp___String_Literal_187 us_void_param) 2)) 78)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 3)) 84)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 4)) 69)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 5)) 82)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 6)) 32)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 7)) 69)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 8)) 78)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 9)) 67)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 10)) 76)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 11)) 65)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 12)) 86)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 13)) 69)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_187 us_void_param)))))
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const c37b us_rep4)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq26 (integer integer) Bool)
(declare-const dummy26 integer)
(declare-datatypes () ((t43b__ref (mk_t43b__ref (t43b__content integer)))))
(define-fun t43b__ref___projection ((a t43b__ref)) integer (t43b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq27 (integer integer) Bool)
(declare-const dummy27 integer)
(declare-datatypes () ((t44b__ref (mk_t44b__ref (t44b__content integer)))))
(define-fun t44b__ref___projection ((a t44b__ref)) integer (t44b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(declare-fun temp___1531 (Int) (Array Int character))
(assert (forall ((temp___1533 Int)) (forall ((temp___1534 Int)) (= (select (temp___1531 temp___1533) temp___1534) (of_rep temp___1533)))))
(declare-fun temp___String_Literal_1535 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1535 us_void_param) 1)) 67) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 3)) 117)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 4)) 108)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 5)) 100)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 6)) 32)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 7)) 110)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 8)) 111)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 9)) 116)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 11)) 117)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 12)) 112)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 13)) 100)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 14)) 97)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 15)) 116)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 16)) 101)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 18)) 68)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 19)) 105)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 20)) 115)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 21)) 112)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 22)) 108)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 23)) 97)) (= (to_rep (select (temp___String_Literal_1535 us_void_param) 24)) 121)) :pattern ((temp___String_Literal_1535 us_void_param)))))
(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant4 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant5 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant6 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(assert (= msgtostrings (display__msgtostrings__aggregate_def (mk___rep3 (mk___split_fields3 (mk___rep2 (mk___split_fields2 (temp___String_Literal_176 Tuple0) (of_rep8 22))) blankline)) (mk___rep3 (mk___split_fields3 (mk___rep2 (mk___split_fields2 (temp___String_Literal_177 Tuple0) (of_rep8 14))) (mk___rep2 (mk___split_fields2 (temp___String_Literal_178 Tuple0) (of_rep8 11))))) (mk___rep3 (mk___split_fields3 (mk___rep2 (mk___split_fields2 (temp___String_Literal_179 Tuple0) (of_rep8 19))) (mk___rep2 (mk___split_fields2 (temp___String_Literal_180 Tuple0) (of_rep8 13))))) (mk___rep3 (mk___split_fields3 blankline (mk___rep2 (mk___split_fields2 (temp___String_Literal_181 Tuple0) (of_rep8 22))))) (mk___rep3 (mk___split_fields3 (mk___rep2 (mk___split_fields2 (temp___String_Literal_182 Tuple0) (of_rep8 19))) (mk___rep2 (mk___split_fields2 (temp___String_Literal_183 Tuple0) (of_rep8 11))))) (mk___rep3 (mk___split_fields3 (mk___rep2 (mk___split_fields2 (temp___String_Literal_184 Tuple0) (of_rep8 12))) (mk___rep2 (mk___split_fields2 (temp___String_Literal_185 Tuple0) (of_rep8 12))))) (mk___rep3 (mk___split_fields3 blankline (mk___rep2 (mk___split_fields2 (temp___String_Literal_186 Tuple0) (of_rep8 19))))) (mk___rep3 (mk___split_fields3 blankline (mk___rep2 (mk___split_fields2 (temp___String_Literal_187 Tuple0) (of_rep8 13))))))))
(define-fun dynamic_invariant7 ((temp___expr_1286 Int) (temp___is_init_1283 Bool) (temp___skip_constant_1284 Bool) (temp___do_toplevel_1285 Bool)) Bool (=> (or (= temp___is_init_1283 true) (<= 0 23)) (in_range12 temp___expr_1286)))
(declare-fun temp___String_Literal_164 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_164 us_void_param) 1)) 32) (= (to_rep (select (temp___String_Literal_164 us_void_param) 2)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 3)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 4)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 5)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 6)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_164 us_void_param) 23)) 32)) :pattern ((temp___String_Literal_164 us_void_param)))))
(assert (= blankline (mk___rep2 (mk___split_fields2 (temp___String_Literal_164 Tuple0) (of_rep8 0)))))
(define-fun dynamic_invariant8 ((temp___expr_1336 Int) (temp___is_init_1333 Bool) (temp___skip_constant_1334 Bool) (temp___do_toplevel_1335 Bool)) Bool (=> (or (= temp___is_init_1333 true) (<= 0 50)) (in_range13 temp___expr_1336)))
(define-fun dynamic_invariant9 ((temp___expr_1342 Int) (temp___is_init_1339 Bool) (temp___skip_constant_1340 Bool) (temp___do_toplevel_1341 Bool)) Bool (=> (or (= temp___is_init_1339 true) (<= 1 50)) (in_range14 temp___expr_1342)))
(define-fun dynamic_invariant10 ((temp___expr_1080 Int) (temp___is_init_1077 Bool) (temp___skip_constant_1078 Bool) (temp___do_toplevel_1079 Bool)) Bool (=> (or (= temp___is_init_1077 true) (<= 0 17)) (in_range8 temp___expr_1080)))
(define-fun dynamic_invariant11 ((temp___expr_1059 Int) (temp___is_init_1056 Bool) (temp___skip_constant_1057 Bool) (temp___do_toplevel_1058 Bool)) Bool (=> (or (= temp___is_init_1056 true) (<= 1 17)) (in_range6 temp___expr_1059)))
(define-fun dynamic_invariant12 ((temp___expr_1184 Int) (temp___is_init_1181 Bool) (temp___skip_constant_1182 Bool) (temp___do_toplevel_1183 Bool)) Bool (=> (or (= temp___is_init_1181 true) (<= 0 2)) (in_range10 temp___expr_1184)))
(define-fun dynamic_invariant13 ((temp___expr_1065 Int) (temp___is_init_1062 Bool) (temp___skip_constant_1063 Bool) (temp___do_toplevel_1064 Bool)) Bool (=> (or (= temp___is_init_1062 true) (<= 0 17408)) (in_range7 temp___expr_1065)))
(define-fun dynamic_invariant14 ((temp___expr_1099 Int) (temp___is_init_1096 Bool) (temp___skip_constant_1097 Bool) (temp___do_toplevel_1098 Bool)) Bool (=> (or (= temp___is_init_1096 true) (<= 0 1024)) (in_range9 temp___expr_1099)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep5 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep5 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles))) 1) 1024) (to_rep6 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(assert (= nouser (temp___String_Literal_136 Tuple0)))
(define-fun dynamic_invariant15 ((temp___expr_197 Int) (temp___is_init_194 Bool) (temp___skip_constant_195 Bool) (temp___do_toplevel_196 Bool)) Bool (=> (or (= temp___is_init_194 true) (<= 0 4294967295)) (in_range5 temp___expr_197)))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const currentdisplay Int)
(declare-const currentlydisplayed Int)
(declare-const sizes__split_fields unsigned32t)
(declare-const sizes__split_fields1 unsigned32t)
(declare-const themsg__split_fields (Array Int character))
(declare-const themsg__split_fields1 msgtextcount)
(declare-const themsg__split_fields2 (Array Int character))
(declare-const themsg__split_fields3 msgtextcount)
(declare-const written Bool)
(declare-const topwritten Bool)
(declare-const bottomwritten Bool)
(declare-const c38b__split_fields (Array Int character))
(declare-const c38b__split_fields1 scrolltextcount)
(declare-const result____split_fields us_split_fields__ref4)
(declare-const i int__ref)
(declare-const i1 int__ref)
(declare-const output us_private__ref)
(declare-const o msgtextcount)
(declare-const o1 us_split_fields4)
(declare-const o2 us_rep3)
(declare-const o3 us_split_fields6)
(declare-const o4 msgtextcount)
(declare-const o5 us_split_fields4)
(declare-const o6 msgtextcount)
(declare-const o7 us_split_fields4)
(declare-const o8 us_rep3)
(declare-const o9 us_rep3)
(declare-const o10 us_split_fields6)
(declare-const o11 msgtextcount)
(declare-const o12 us_split_fields4)
(declare-const o13 msgtextcount)
(declare-const o14 us_split_fields4)
(declare-const o15 us_rep3)
(declare-const o16 us_rep3)
(declare-const o17 us_split_fields6)
(declare-const o18 msgtextcount)
(declare-const o19 us_split_fields4)
(declare-const o20 us_rep3)
(declare-const o21 us_split_fields6)
(declare-const o22 msgtextcount)
(declare-const o23 us_split_fields4)
(declare-const o24 msgtextcount)
(declare-const o25 us_split_fields4)
(declare-const o26 us_rep3)
(declare-const o27 us_rep3)
(declare-const o28 us_split_fields6)
(declare-const o29 msgtextcount)
(declare-const o30 us_split_fields4)
(declare-const o31 msgtextcount)
(declare-const o32 us_split_fields4)
(declare-const o33 us_rep3)
(declare-const o34 us_rep3)
(declare-const o35 us_split_fields6)
(declare-const o36 msgtextcount)
(declare-const o37 us_split_fields4)
(declare-const o38 us_rep3)
(declare-const o39 us_split_fields6)
(declare-const o40 msgtextcount)
(declare-const o41 us_split_fields4)
(declare-const o42 us_rep3)
(declare-const o43 us_split_fields6)
(declare-const o44 us_rep4)
(declare-const o45 us_rep4)
(declare-const o46 us_rep4)
(declare-const o47 us_rep4)
(declare-const o48 us_rep4)
(declare-const o49 us_rep4)
(declare-const o50 us_rep4)
(declare-const o51 us_rep4)
(declare-const temp___1544 (Array Int us_rep4))
(declare-const o52 scrolltextcount)
(declare-const o53 us_split_fields8)
(declare-const display__updatedevice__B40b__result__assume us_rep5)
(declare-const temp___1497 Int)
(declare-const temp___1495 us_rep5)
(declare-const temp___1498 us_rep4)
(declare-const o54 character)
(declare-const o55 (Array Int character))
(declare-const o56 us_split_fields8)
(declare-const temp___1494 us_rep5)
(declare-const o57 scrolltextcount)
(declare-const o58 us_split_fields8)
(declare-const temp___1502 us_rep5)
(declare-const o59 character)
(declare-const o60 Int)
(declare-const o61 (Array Int character))
(declare-const o62 us_split_fields8)
(declare-const temp___1506 us_rep5)
(declare-const o63 character)
(declare-const o64 Int)
(declare-const o65 (Array Int character))
(declare-const o66 us_split_fields8)
(declare-const temp___1510 us_rep5)
(declare-const o67 character)
(declare-const o68 Int)
(declare-const o69 (Array Int character))
(declare-const o70 us_split_fields8)
(declare-const temp___1514 us_rep5)
(declare-const o71 Int)
(declare-const o72 scrolltextcount)
(declare-const o73 us_split_fields8)
(declare-const temp___1516 us_rep5)
(declare-const temp___1524 Int)
(declare-const temp___1522 us_rep5)
(declare-const temp___1525 us_rep4)
(declare-const temp___1519 Int)
(declare-const o74 character)
(declare-const o75 Int)
(declare-const o76 (Array Int character))
(declare-const o77 us_split_fields8)
(declare-const temp___1521 us_rep5)
(declare-const o78 Int)
(declare-const o79 scrolltextcount)
(declare-const o80 us_split_fields8)
(declare-const temp___1529 us_rep5)
(declare-const topwritten1 Bool)
(declare-const bottomwritten1 Bool)
(declare-const c38b__split_fields2 us_split_fields8)
(declare-const result____split_fields1 us_split_fields8)
(declare-const i2 Int)
(declare-const i3 Int)
(declare-const result int__ref)
(declare-const currentlydisplayed1 Int)
(declare-const result1 us_split_fields__ref3)
(declare-const themsg__split_fields4 us_split_fields6)
(declare-const topwritten2 Bool)
(declare-const bottomwritten2 Bool)
(declare-const output1 us_private)
(declare-const result2 bool__ref)
(declare-const written1 Bool)
(declare-const result3 us_split_fields__ref4)
(declare-const result____split_fields2 us_split_fields8)
(declare-const result4 int__ref)
(declare-const i4 Int)
(declare-const result____split_fields3 us_split_fields8)
(declare-const i5 Int)
(declare-const result5 us_split_fields__ref4)
(declare-const result____split_fields4 us_split_fields8)
(declare-const result6 int__ref)
(declare-const i6 Int)
(declare-const result____split_fields5 us_split_fields__ref4)
(declare-const i7 int__ref)
(declare-const result____split_fields6 us_split_fields8)
(declare-const i8 Int)
(declare-const result____split_fields7 us_split_fields__ref4)
(declare-const i9 int__ref)
(declare-const result____split_fields8 us_split_fields8)
(declare-const i10 Int)
(declare-const result____split_fields9 us_split_fields__ref4)
(declare-const i11 int__ref)
(declare-const result____split_fields10 us_split_fields8)
(declare-const i12 Int)
(declare-const result7 us_split_fields__ref4)
(declare-const result____split_fields11 us_split_fields8)
(declare-const result8 us_split_fields__ref4)
(declare-const result____split_fields12 us_split_fields8)
(declare-const result9 us_split_fields__ref4)
(declare-const result____split_fields13 us_split_fields8)
(declare-const result10 us_split_fields__ref4)
(declare-const result____split_fields14 us_split_fields8)
(declare-const result11 us_split_fields__ref4)
(declare-const result____split_fields15 us_split_fields8)
(declare-const result12 int__ref)
(declare-const i13 Int)
(declare-const result____split_fields16 us_split_fields8)
(declare-const i14 Int)
(declare-const result13 us_split_fields__ref4)
(declare-const result____split_fields17 us_split_fields8)
(declare-const result14 int__ref)
(declare-const i15 Int)
(declare-const result____split_fields18 us_split_fields__ref4)
(declare-const i16 int__ref)
(declare-const result____split_fields19 us_split_fields8)
(declare-const i17 Int)
(declare-const result____split_fields20 us_split_fields__ref4)
(declare-const i18 int__ref)
(declare-const result____split_fields21 us_split_fields8)
(declare-const i19 Int)
(declare-const result____split_fields22 us_split_fields__ref4)
(declare-const i20 int__ref)
(declare-const result____split_fields23 us_split_fields8)
(declare-const i21 Int)
(declare-const result____split_fields24 us_split_fields__ref4)
(declare-const i22 int__ref)
(declare-const result____split_fields25 us_split_fields8)
(declare-const i23 Int)
(declare-const result15 us_split_fields__ref4)
(declare-const result____split_fields26 us_split_fields8)
(declare-const result16 us_split_fields__ref4)
(declare-const c38b__split_fields3 us_split_fields8)
(declare-const written2 Bool)
(declare-const output2 us_private)
(declare-const written3 bool__ref)
(declare-const topwritten3 bool__ref)
(declare-const bottomwritten3 bool__ref)
(declare-const c38b__split_fields4 us_split_fields__ref4)
(declare-const result____split_fields27 us_split_fields__ref4)
(declare-const i24 int__ref)
(declare-const i25 int__ref)
(declare-const output3 us_private__ref)
(declare-const written4 Bool)
(declare-const topwritten4 Bool)
(declare-const bottomwritten4 Bool)
(declare-const c38b__split_fields5 us_split_fields8)
(declare-const result____split_fields28 us_split_fields8)
(declare-const i26 Int)
(declare-const i27 Int)
(declare-const output4 us_private)
(assert (= (to_rep8 o40) 13))
(assert (= o41 (mk___split_fields2 (temp___String_Literal_187 Tuple0) o40)))
(assert (= o42 (mk___rep2 o41)))
(assert (= o43 (mk___split_fields3 blankline o42)))
(assert (= o44 (mk___rep3 o43)))
(assert (= (to_rep8 o36) 19))
(assert (= o37 (mk___split_fields2 (temp___String_Literal_186 Tuple0) o36)))
(assert (= o38 (mk___rep2 o37)))
(assert (= o39 (mk___split_fields3 blankline o38)))
(assert (= o45 (mk___rep3 o39)))
(assert (= (to_rep8 o31) 12))
(assert (= o32 (mk___split_fields2 (temp___String_Literal_185 Tuple0) o31)))
(assert (= o33 (mk___rep2 o32)))
(assert (= (to_rep8 o29) 12))
(assert (= o30 (mk___split_fields2 (temp___String_Literal_184 Tuple0) o29)))
(assert (= o34 (mk___rep2 o30)))
(assert (= o35 (mk___split_fields3 o34 o33)))
(assert (= o46 (mk___rep3 o35)))
(assert (= (to_rep8 o24) 11))
(assert (= o25 (mk___split_fields2 (temp___String_Literal_183 Tuple0) o24)))
(assert (= o26 (mk___rep2 o25)))
(assert (= (to_rep8 o22) 19))
(assert (= o23 (mk___split_fields2 (temp___String_Literal_182 Tuple0) o22)))
(assert (= o27 (mk___rep2 o23)))
(assert (= o28 (mk___split_fields3 o27 o26)))
(assert (= o47 (mk___rep3 o28)))
(assert (= (to_rep8 o18) 22))
(assert (= o19 (mk___split_fields2 (temp___String_Literal_181 Tuple0) o18)))
(assert (= o20 (mk___rep2 o19)))
(assert (= o21 (mk___split_fields3 blankline o20)))
(assert (= o48 (mk___rep3 o21)))
(assert (= (to_rep8 o13) 13))
(assert (= o14 (mk___split_fields2 (temp___String_Literal_180 Tuple0) o13)))
(assert (= o15 (mk___rep2 o14)))
(assert (= (to_rep8 o11) 19))
(assert (= o12 (mk___split_fields2 (temp___String_Literal_179 Tuple0) o11)))
(assert (= o16 (mk___rep2 o12)))
(assert (= o17 (mk___split_fields3 o16 o15)))
(assert (= o49 (mk___rep3 o17)))
(assert (= (to_rep8 o6) 11))
(assert (= o7 (mk___split_fields2 (temp___String_Literal_178 Tuple0) o6)))
(assert (= o8 (mk___rep2 o7)))
(assert (= (to_rep8 o4) 14))
(assert (= o5 (mk___split_fields2 (temp___String_Literal_177 Tuple0) o4)))
(assert (= o9 (mk___rep2 o5)))
(assert (= o10 (mk___split_fields3 o9 o8)))
(assert (= o50 (mk___rep3 o10)))
(assert (= (to_rep8 o) 22))
(assert (= o1 (mk___split_fields2 (temp___String_Literal_176 Tuple0) o)))
(assert (= o2 (mk___rep2 o1)))
(assert (= o3 (mk___split_fields3 o2 blankline)))
(assert (= o51 (mk___rep3 o3)))
(assert (= temp___1544 (display__msgtostrings__aggregate_def o51 o50 o49 o48 o47 o46 o45 o44)))
(assert (= temp___1544 msgtostrings))
(assert (= (temp___String_Literal_136 Tuple0) nouser))
(assert (in_range11 currentdisplay))
(assert (in_range11 currentlydisplayed))
(assert (= (valid_numberlogentries (to_rep3 logfilestate__split_fields) (to_rep4 logfilestate__split_fields1) (mk___rep (mk___split_fields logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range4 auditalarm))
(assert (not (= currentdisplay currentlydisplayed)))
(assert (= result (mk_int__ref currentlydisplayed)))
(assert (= currentlydisplayed1 currentdisplay))
(assert (= result1 (mk___split_fields__ref3 (mk___split_fields3 (mk___rep2 (mk___split_fields2 themsg__split_fields themsg__split_fields1)) (mk___rep2 (mk___split_fields2 themsg__split_fields2 themsg__split_fields3))))))
(assert (= themsg__split_fields4 (us_split_fields7 (select msgtostrings currentdisplay))))
(assert (not (and (<= (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top themsg__split_fields4)))) (to_rep2 sizes__split_fields)) (<= (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__bottom themsg__split_fields4)))) (to_rep2 sizes__split_fields1)))))
(assert (= (mk___rep3 themsg__split_fields4) c37b))
(assert (= (to_rep9 o52) 0))
(assert (= o53 (mk___split_fields4 (temp___1531 32) o52)))
(assert (= display__updatedevice__B40b__result__assume (mk___rep4 o53)))
(assert (= result3 result____split_fields))
(assert (= (let ((subject result____split_fields)) result____split_fields2) (us_split_fields9 display__updatedevice__B40b__result__assume)))
(assert (= result4 i))
(assert (= (let ((subject i)) i4) 1))
(assert (=> (and (<= 1 (let ((subject i)) i4)) (<= (let ((subject i)) i4) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b))))))) (and (and (= temp___1497 (let ((subject i)) i4)) (and (= temp___1495 (mk___rep4 (let ((subject result____split_fields)) result____split_fields2))) (and (= temp___1498 c37b) (and (and (and (<= 1 (let ((subject i)) i5)) (<= (let ((subject i)) i5) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b))))))) (= (bool_eq10 c37b temp___1498) true)) (and (and (and (and (forall ((temp___1496 Int)) (=> (and (<= 1 temp___1496) (<= temp___1496 50)) (=> (<= (let ((subject i)) i5) temp___1496) (= (select (rec__display__scrollstrt__text (let ((subject result____split_fields)) result____split_fields3)) temp___1496) (select (rec__display__scrollstrt__text (us_split_fields9 temp___1495)) temp___1496))))) (= (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields3)) (rec__display__scrollstrt__len (us_split_fields9 temp___1495)))) (=> (<= 1 (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b)))))) (dynamic_property1 1 (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b))))) (let ((subject i)) i5)))) (and (<= 1 (let ((subject i)) i5)) (<= (let ((subject i)) i5) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b)))))))) (and (and (and (and (and (= (to_rep o54) (to_rep (select (rec__display__msglinet__text (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b)))) (let ((subject i)) i5)))) (= o55 (store (rec__display__scrollstrt__text (let ((subject result____split_fields)) result____split_fields3)) (let ((subject i)) i5) o54))) (= o56 (mk___split_fields4 o55 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields3))))) (= temp___1494 (mk___rep4 o56))) (and (= result5 (let ((subject result____split_fields)) (mk___split_fields__ref4 result____split_fields3))) (= (let ((subject result____split_fields)) result____split_fields4) (us_split_fields9 temp___1494)))) (= (let ((subject i)) i5) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b)))))))))))) (and (and (= i9 (let ((subject i)) (mk_int__ref i5))) (= result____split_fields7 (let ((subject result____split_fields)) (mk___split_fields__ref4 result____split_fields4)))) (and (= i10 i5) (= result____split_fields8 result____split_fields4))))))
(assert (=> (and (<= 1 (let ((subject i)) i4)) (<= (let ((subject i)) i4) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b))))))) (= i11 i9)))
(assert (=> (and (<= 1 (let ((subject i)) i4)) (<= (let ((subject i)) i4) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b))))))) (= result____split_fields9 result____split_fields7)))
(assert (=> (and (<= 1 (let ((subject i)) i4)) (<= (let ((subject i)) i4) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b))))))) (= i12 i10)))
(assert (=> (and (<= 1 (let ((subject i)) i4)) (<= (let ((subject i)) i4) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b))))))) (= result____split_fields10 result____split_fields8)))
(assert (=> (not (and (<= 1 (let ((subject i)) i4)) (<= (let ((subject i)) i4) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b)))))))) (= i11 (let ((subject i)) (mk_int__ref i4)))))
(assert (=> (not (and (<= 1 (let ((subject i)) i4)) (<= (let ((subject i)) i4) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b)))))))) (= result____split_fields9 (let ((subject result____split_fields)) (mk___split_fields__ref4 result____split_fields2)))))
(assert (=> (not (and (<= 1 (let ((subject i)) i4)) (<= (let ((subject i)) i4) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b)))))))) (= i12 i4)))
(assert (=> (not (and (<= 1 (let ((subject i)) i4)) (<= (let ((subject i)) i4) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b)))))))) (= result____split_fields10 result____split_fields2)))
(assert (= (to_rep9 o57) (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__top (us_split_fields7 c37b)))))))
(assert (= o58 (mk___split_fields4 (rec__display__scrollstrt__text (us_split_fields__content4 result____split_fields9)) o57)))
(assert (= temp___1502 (mk___rep4 o58)))
(assert (= result7 result____split_fields9))
(assert (= (let ((subject result____split_fields)) result____split_fields11) (us_split_fields9 temp___1502)))
(assert (= (to_rep o59) 32))
(assert (and (<= 1 (+ (to_rep9 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields11))) 1)) (<= (+ (to_rep9 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields11))) 1) 50)))
(assert (= o60 (+ (to_rep9 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields11))) 1)))
(assert (= o61 (store (rec__display__scrollstrt__text (let ((subject result____split_fields)) result____split_fields11)) o60 o59)))
(assert (= o62 (mk___split_fields4 o61 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields11)))))
(assert (= temp___1506 (mk___rep4 o62)))
(assert (= result8 (let ((subject result____split_fields)) (mk___split_fields__ref4 result____split_fields11))))
(assert (= (let ((subject result____split_fields)) result____split_fields12) (us_split_fields9 temp___1506)))
(assert (= (to_rep o63) 47))
(assert (and (<= 1 (+ (to_rep9 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields12))) 2)) (<= (+ (to_rep9 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields12))) 2) 50)))
(assert (= o64 (+ (to_rep9 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields12))) 2)))
(assert (= o65 (store (rec__display__scrollstrt__text (let ((subject result____split_fields)) result____split_fields12)) o64 o63)))
(assert (= o66 (mk___split_fields4 o65 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields12)))))
(assert (= temp___1510 (mk___rep4 o66)))
(assert (= result9 (let ((subject result____split_fields)) (mk___split_fields__ref4 result____split_fields12))))
(assert (= (let ((subject result____split_fields)) result____split_fields13) (us_split_fields9 temp___1510)))
(assert (= (to_rep o67) 32))
(assert (and (<= 1 (+ (to_rep9 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields13))) 3)) (<= (+ (to_rep9 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields13))) 3) 50)))
(assert (= o68 (+ (to_rep9 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields13))) 3)))
(assert (= o69 (store (rec__display__scrollstrt__text (let ((subject result____split_fields)) result____split_fields13)) o68 o67)))
(assert (= o70 (mk___split_fields4 o69 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields13)))))
(assert (= temp___1514 (mk___rep4 o70)))
(assert (= result10 (let ((subject result____split_fields)) (mk___split_fields__ref4 result____split_fields13))))
(assert (= (let ((subject result____split_fields)) result____split_fields14) (us_split_fields9 temp___1514)))
(assert (and (= o71 (+ (to_rep9 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields14))) 3)) (in_range13 (+ (to_rep9 (rec__display__scrollstrt__len (let ((subject result____split_fields)) result____split_fields14))) 3))))
(assert (= (to_rep9 o72) o71))
(assert (= o73 (mk___split_fields4 (rec__display__scrollstrt__text (let ((subject result____split_fields)) result____split_fields14)) o72)))
(assert (= temp___1516 (mk___rep4 o73)))
(assert (= result11 (let ((subject result____split_fields)) (mk___split_fields__ref4 result____split_fields14))))
(assert (= (let ((subject result____split_fields)) result____split_fields15) (us_split_fields9 temp___1516)))
(assert (<= 1 (to_rep8 (rec__display__msglinet__len (us_split_fields5 (rec__display__msgstrt__bottom (us_split_fields7 c37b)))))))
(assert (not (<= 1 1)))
(check-sat)
(exit)
