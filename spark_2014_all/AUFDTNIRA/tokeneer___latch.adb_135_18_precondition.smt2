(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort statust 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (statust statust) Bool)
(declare-const dummy4 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant ((temp___expr_190 Int) (temp___is_init_186 Bool) (temp___skip_constant_187 Bool) (temp___do_toplevel_188 Bool) (temp___do_typ_inv_189 Bool)) Bool (=> (or (= temp___is_init_186 true) (<= 0 1)) (in_range4 temp___expr_190)))
(declare-const nouser (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun temp___String_Literal_158 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_158 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_158 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 3)) 85)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 32)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 33)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 36)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 38)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 41)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 43)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 44)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 46)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 48)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 49)) 32)) (= (to_rep (select (temp___String_Literal_158 us_void_param) 50)) 32)) :pattern ((temp___String_Literal_158 us_void_param)))))
(declare-sort logfileindext 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (logfileindext logfileindext) Bool)
(declare-const dummy5 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep2 (logfileindext) Int)
(declare-fun of_rep2 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x logfileindext)) (! (in_range5 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (logentrycountt logentrycountt) Bool)
(declare-const dummy6 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep3 (logentrycountt) Int)
(declare-fun of_rep3 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x logentrycountt)) (! (in_range6 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort logfilecountt 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq7 (logfilecountt logfilecountt) Bool)
(declare-const dummy7 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep4 (logfilecountt) Int)
(declare-fun of_rep4 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x logfilecountt)) (! (in_range7 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_172 Int)) (=> (and (<= a__first temp___idx_172) (<= temp___idx_172 a__last)) (= (to_rep2 (select a temp___idx_172)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_172))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_172 Int)) (=> (and (<= a__first temp___idx_172) (<= temp___idx_172 a__last)) (= (to_rep2 (select a temp___idx_172)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_172)))))))))))
(declare-const dummy8 (Array Int logfileindext))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int logfileindext)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int logfileindext)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq8 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq3 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (bool_eq2 (rec__auditlog__logfilelistt__list (us_split_fields1 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields1 b)) 1 17) true) (= (to_rep2 (rec__auditlog__logfilelistt__head (us_split_fields1 a))) (to_rep2 (rec__auditlog__logfilelistt__head (us_split_fields1 b))))) (= (to_rep2 (rec__auditlog__logfilelistt__lasti (us_split_fields1 a))) (to_rep2 (rec__auditlog__logfilelistt__lasti (us_split_fields1 b))))) (= (to_rep4 (rec__auditlog__logfilelistt__length (us_split_fields1 a))) (to_rep4 (rec__auditlog__logfilelistt__length (us_split_fields1 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq9 (us_rep us_rep) Bool)
(declare-const dummy9 us_rep)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq10 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy10 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep5 (fileentrycountt) Int)
(declare-fun of_rep5 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range8 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first2 Int)) (! (= (slide2 a first2 first2) a) :pattern ((slide2 a first2 first2))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq4 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep5 (select a temp___idx_173)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_173))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep5 (select a temp___idx_173)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_173)))))))))))
(declare-const dummy11 (Array Int fileentrycountt))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq11 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields2)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields2)) us_rep (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields2)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___9__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq5 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 a))) (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 b)))) (= (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 a))) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 b))))) (= (bool_eq3 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 b))) true)) (= (bool_eq4 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 b)) 1 17) true)) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep1) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep1) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep1)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment4 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq12 (us_rep1 us_rep1) Bool)
(declare-const dummy12 us_rep1)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep1)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep1 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep (Array Int fileentrycountt)) Bool)
(declare-fun temp___1235 (Int) (Array Int logfileindext))
(declare-fun temp___1239 (Int) (Array Int fileentrycountt))
(define-fun dynamic_invariant1 ((temp___expr_1229 us_rep1) (temp___is_init_1225 Bool) (temp___skip_constant_1226 Bool) (temp___do_toplevel_1227 Bool) (temp___do_typ_inv_1228 Bool)) Bool (=> (= temp___do_typ_inv_1228 true) (= (valid_numberlogentries (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1229))) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1229))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1229)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1229))) true)))
(define-fun default_initial_assumption ((temp___expr_1233 us_rep1) (temp___skip_top_level_1234 Bool)) Bool (and (and (and (= (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1233))) 1) (= (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1233))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1233)) (mk___rep (mk___split_fields (temp___1235 1) (of_rep2 1) (of_rep2 1) (of_rep4 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1233)) (temp___1239 0))))
(define-fun type_invariant ((temp___1243 us_rep1)) Bool (= (valid_numberlogentries (to_rep2 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___1243))) (to_rep3 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___1243))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___1243)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___1243))) true))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep2 0)
(declare-fun bool_eq6 (us_rep2 us_rep2) Bool)
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep2) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep2) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))
(declare-fun user_eq13 (us_rep2 us_rep2) Bool)
(declare-const dummy13 us_rep2)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep2)))))
(define-fun t__ref___projection ((a t__ref)) us_rep2 (t__content a))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep2))))))
(declare-fun slide3 ((Array Int us_rep2) Int Int) (Array Int us_rep2))
(assert (forall ((a (Array Int us_rep2))) (forall ((first2 Int)) (! (= (slide3 a first2 first2) a) :pattern ((slide3 a first2 first2))))))
(assert (forall ((a (Array Int us_rep2))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq7 ((a (Array Int us_rep2)) (a__first Int) (a__last Int) (b (Array Int us_rep2)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (bool_eq6 (select a temp___idx_174) (select b (+ (- b__first a__first) temp___idx_174))) true)))) true false))
(assert (forall ((a (Array Int us_rep2)) (b (Array Int us_rep2))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq7 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (bool_eq6 (select a temp___idx_174) (select b (+ (- b__first a__first) temp___idx_174))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort filestatust 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq14 (filestatust filestatust) Bool)
(declare-const dummy14 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep6 (filestatust) Int)
(declare-fun of_rep6 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x filestatust)) (! (in_range9 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int filestatust))))))
(declare-fun slide4 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first2 Int)) (! (= (slide4 a first2 first2) a) :pattern ((slide4 a first2 first2))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(define-fun bool_eq8 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (to_rep6 (select a temp___idx_175)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_175))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq8 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (to_rep6 (select a temp___idx_175)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_175)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-sort t1 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq15 (t1 t1) Bool)
(declare-const dummy15 t1)
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 t1)))))
(define-fun t__ref___2__projection ((a t__ref1)) t1 (t__content1 a))
(define-fun dynamic_invariant2 ((temp___expr_1408 Int) (temp___is_init_1404 Bool) (temp___skip_constant_1405 Bool) (temp___do_toplevel_1406 Bool) (temp___do_typ_inv_1407 Bool)) Bool (=> (or (= temp___is_init_1404 true) (<= 0 1)) (in_range10 temp___expr_1408)))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun latchislocked (tuple0) Bool)
(declare-fun latchislocked__function_guard (Bool tuple0) Bool)
(declare-fun islocked (tuple0) Bool)
(declare-fun islocked__function_guard (Bool tuple0) Bool)
(assert (forall ((us_void_param tuple0)) (! (= (= (latchislocked us_void_param) true) (= (islocked Tuple0) true)) :pattern ((latchislocked us_void_param)))))
(declare-fun islocked1 (Int) Bool)
(declare-fun islocked__function_guard1 (Bool Int) Bool)
(assert true)
(assert (forall ((latch__currentlatch Int)) (! (= (= (islocked1 latch__currentlatch) true) (= latch__currentlatch 0)) :pattern ((islocked1 latch__currentlatch)))))
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-fun temp___String_Literal_1441 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1441 us_void_param) 1)) 76) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 2)) 65)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 3)) 84)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 4)) 67)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 5)) 72)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 6)) 32)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 7)) 83)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 8)) 84)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 9)) 65)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 10)) 84)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 11)) 69)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 13)) 67)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 14)) 65)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 15)) 78)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 16)) 78)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 17)) 79)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 18)) 84)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 20)) 66)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 21)) 69)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 23)) 68)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 24)) 69)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 25)) 84)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 26)) 69)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 27)) 82)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 28)) 77)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 29)) 73)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 30)) 78)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 31)) 69)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 32)) 68)) (= (to_rep (select (temp___String_Literal_1441 us_void_param) 33)) 46)) :pattern ((temp___String_Literal_1441 us_void_param)))))
(define-fun dynamic_invariant3 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant4 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant5 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant6 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant7 ((temp___expr_1167 Int) (temp___is_init_1163 Bool) (temp___skip_constant_1164 Bool) (temp___do_toplevel_1165 Bool) (temp___do_typ_inv_1166 Bool)) Bool (=> (or (= temp___is_init_1163 true) (<= 0 17)) (in_range7 temp___expr_1167)))
(define-fun dynamic_invariant8 ((temp___expr_1174 Int) (temp___is_init_1170 Bool) (temp___skip_constant_1171 Bool) (temp___do_toplevel_1172 Bool) (temp___do_typ_inv_1173 Bool)) Bool (=> (or (= temp___is_init_1170 true) (<= 1 17)) (in_range5 temp___expr_1174)))
(define-fun dynamic_invariant9 ((temp___expr_1300 Int) (temp___is_init_1296 Bool) (temp___skip_constant_1297 Bool) (temp___do_toplevel_1298 Bool) (temp___do_typ_inv_1299 Bool)) Bool (=> (or (= temp___is_init_1296 true) (<= 0 2)) (in_range9 temp___expr_1300)))
(define-fun dynamic_invariant10 ((temp___expr_1181 Int) (temp___is_init_1177 Bool) (temp___skip_constant_1178 Bool) (temp___do_toplevel_1179 Bool) (temp___do_typ_inv_1180 Bool)) Bool (=> (or (= temp___is_init_1177 true) (<= 0 17408)) (in_range6 temp___expr_1181)))
(define-fun dynamic_invariant11 ((temp___expr_1212 Int) (temp___is_init_1208 Bool) (temp___skip_constant_1209 Bool) (temp___do_toplevel_1210 Bool) (temp___do_typ_inv_1211 Bool)) Bool (=> (or (= temp___is_init_1208 true) (<= 0 1024)) (in_range8 temp___expr_1212)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep4 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep4 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles))) 1) 1024) (to_rep5 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(assert (forall ((temp___1241 Int)) (=> (dynamic_invariant11 temp___1241 true true true true) (forall ((temp___1242 Int)) (= (to_rep5 (select (temp___1239 temp___1241) temp___1242)) temp___1241)))))
(assert (= nouser (temp___String_Literal_158 Tuple0)))
(assert (forall ((temp___1237 Int)) (=> (dynamic_invariant8 temp___1237 true true true true) (forall ((temp___1238 Int)) (= (to_rep2 (select (temp___1235 temp___1237) temp___1238)) temp___1237)))))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const currentlatch Int)
(declare-const systemfault Bool)
(declare-const output us_private)
(declare-const systemfault1 Bool)
(declare-const output1 us_private)
(assert (= (temp___String_Literal_158 Tuple0) nouser))
(assert (in_range10 currentlatch))
(assert (= (valid_numberlogentries (to_rep2 logfilestate__split_fields) (to_rep3 logfilestate__split_fields1) (mk___rep (mk___split_fields logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range4 auditalarm))
(assert (=> (= currentlatch 0) (or (= (islocked Tuple0) true) (= systemfault true))))
(assert (=> (not (= currentlatch 0)) (or (not (= (islocked Tuple0) true)) (= systemfault1 true))))
(assert (=> (not (= currentlatch 0)) (= output output1)))
(assert (=> (not (= currentlatch 0)) (= systemfault systemfault1)))
(assert (= systemfault true))
(assert (not (= (to_rep1 (first (mk 1 33))) 1)))
(check-sat)
(exit)
