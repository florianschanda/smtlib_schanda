(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic comp_div: int, int -> int
axiom comp_div_def: forall x, y:int. x >= 0 and y > 0 -> comp_div(x,y) = x / y
logic comp_mod: int, int -> int
axiom comp_mod_def: forall x, y:int. x >= 0 and y > 0 -> comp_mod(x,y) = x % y
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

axiom Div_mod :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (x = ((y * comp_div(x,y)) + comp_mod(x,y)))))

axiom Div_bound :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  ((0 <= comp_div(x,y)) and (comp_div(x,y) <= x))))

axiom Mod_bound :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (((-abs_int(y)) <  comp_mod(x,y)) and (comp_mod(x,y) <  abs_int(y)))))

axiom Div_sign_pos :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  (0 <= comp_div(x,y))))

axiom Div_sign_neg :
  (forall x:int. forall y:int. (((x <= 0) and (0 <  y)) ->
  (comp_div(x,y) <= 0)))

axiom Mod_sign_pos :
  (forall x:int. forall y:int. (((0 <= x) and (not (y = 0))) ->
  (0 <= comp_mod(x,y))))

axiom Mod_sign_neg :
  (forall x:int. forall y:int. (((x <= 0) and (not (y = 0))) ->
  (comp_mod(x,y) <= 0)))

axiom Rounds_toward_zero :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (abs_int((comp_div(x,y) * y)) <= abs_int(x))))

axiom Div_1 : (forall x:int. (comp_div(x,1) = x))

axiom Mod_1 : (forall x:int. (comp_mod(x,1) = 0))

axiom Div_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) ->
  (comp_div(x,y) = 0)))

axiom Mod_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) ->
  (comp_mod(x,y) = x)))

axiom Div_mult :
  (forall x:int. forall y:int. forall z:int [comp_div(((x * y) + z),x)].
  (((0 <  x) and ((0 <= y) and (0 <= z))) ->
  (comp_div(((x * y) + z),x) = (y + comp_div(z,x)))))

axiom Mod_mult :
  (forall x:int. forall y:int. forall z:int [comp_mod(((x * y) + z),x)].
  (((0 <  x) and ((0 <= y) and (0 <= z))) ->
  (comp_mod(((x * y) + z),x) = comp_mod(z,x))))

axiom Div_mod1 :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (x = ((y * (x / y)) + (x % y)))))

axiom Mod_bound1 :
  (forall x:int. forall y:int. ((not (y = 0)) -> ((0 <= (x % y)) and
  ((x % y) <  abs_int(y)))))

axiom Div_unique :
  (forall x:int. forall y:int. forall q:int. ((0 <  y) ->
  ((((q * y) <= x) and (x <  ((q * y) + y))) -> ((x / y) = q))))

axiom Div_bound1 :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  ((0 <= (x / y)) and ((x / y) <= x))))

axiom Mod_11 : (forall x:int. ((x % 1) = 0))

axiom Div_11 : (forall x:int. ((x / 1) = x))

axiom Div_inf1 :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) -> ((x / y) = 0)))

axiom Div_inf_neg :
  (forall x:int. forall y:int. (((0 <  x) and (x <= y)) ->
  (((-x) / y) = (- 1))))

axiom Mod_0 : (forall y:int. ((not (y = 0)) -> ((0 % y) = 0)))

axiom Div_1_left : (forall y:int. ((1 <  y) -> ((1 / y) = 0)))

axiom Div_minus1_left : (forall y:int. ((1 <  y) -> (((- 1) / y) = (- 1))))

axiom Mod_1_left : (forall y:int. ((1 <  y) -> ((1 % y) = 1)))

axiom Mod_minus1_left :
  (forall y:int [((- 1) % y)]. ((1 <  y) -> (((- 1) % y) = (y - 1))))

axiom Div_mult1 :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) / x)].
  ((0 <  x) -> ((((x * y) + z) / x) = (y + (z / x)))))

axiom Mod_mult1 :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) % x)].
  ((0 <  x) -> ((((x * y) + z) % x) = (z % x))))

logic mod : int, int -> int

axiom mod_def :
  (forall x:int. forall y:int [mod(x, y)]. (((0 <  y) -> (mod(x,
  y) = (x % y))) and ((not (0 <  y)) -> (mod(x, y) = ((x % y) + y)))))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq5 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def4 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_78:int. ((((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) and
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))) or
  (not ((a__first <= temp___idx_78) and (temp___idx_78 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))))))))

logic compare : (int,character) farray, int, int, (int,character) farray,
  int, int -> int

axiom compare_def_eq :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq5(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq5(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq5(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,character) farray -> int

logic value__component__size : int

logic object__component__size : (int,character) farray -> int

logic value__alignment : int

logic object__alignment : (int,character) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,character) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,character) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,character) farray. (0 <= object__alignment(a)))

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : (int,character) farray

logic dummy4 : t

logic to_string : us_image -> us_t

logic from_string : us_t -> us_image

type string__ref = { string__content : us_t
}

function string__ref___projection(a: string__ref) : us_t =
  (a).string__content

type durationt

predicate in_range4(x: int) = ((0 <= x) and (x <= 864000))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : durationt, durationt -> bool

logic dummy5 : durationt

type durationt__ref = { durationt__content : durationt
}

function durationt__ref___projection(a: durationt__ref) : durationt =
  (a).durationt__content

type classt

predicate in_range5(x: int) = ((0 <= x) and (x <= 5))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : classt, classt -> bool

logic dummy6 : classt

type classt__ref = { classt__content : classt
}

function classt__ref___projection(a: classt__ref) : classt =
  (a).classt__content

type filesizet

predicate in_range6(x: int) = ((0 <= x) and (x <= 4194304))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : filesizet, filesizet -> bool

logic dummy7 : filesizet

type filesizet__ref = { filesizet__content : filesizet
}

function filesizet__ref___projection(a: filesizet__ref) : filesizet =
  (a).filesizet__content

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep

logic bool_eq10 : us_rep, us_rep -> bool

logic value__size1 : int

logic object__size1 : us_rep -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (forall a:us_rep. (0 <= object__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:us_rep. (0 <= object__alignment1(a)))

logic user_eq7 : us_rep, us_rep -> bool

logic dummy8 : us_rep

type t__ref = { t__content : us_rep
}

function t__ref___projection(a: t__ref) : us_rep = (a).t__content

logic exists__ : us_rep -> bool

logic exists____function_guard : bool, us_rep -> prop

type fart

predicate in_range7(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq8 : fart, fart -> bool

logic dummy9 : fart

type fart__ref = { fart__content : fart
}

function fart__ref___projection(a: fart__ref) : fart = (a).fart__content

type durationt1

predicate in_range8(x: int) = ((0 <= x) and (x <= 2000))

logic bool_eq12 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq9 : durationt1, durationt1 -> bool

logic dummy10 : durationt1

type durationt__ref1 = { durationt__content1 : durationt1
}

function durationt__ref___2__projection(a: durationt__ref1) : durationt1 =
  (a).durationt__content1

type accesspolicyt

predicate in_range9(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq13 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq10 : accesspolicyt, accesspolicyt -> bool

logic dummy11 : accesspolicyt

type accesspolicyt__ref = { accesspolicyt__content : accesspolicyt
}

function accesspolicyt__ref___projection(a: accesspolicyt__ref) : accesspolicyt =
  (a).accesspolicyt__content

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic thelatchunlockduration : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic thealarmsilentduration : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic thefingerwaitduration : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic thetokenremovalduration : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic theenclaveclearance : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic theworkinghoursstart : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic theworkinghoursend : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic themaxauthduration : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic theaccesspolicy : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic theminentryclass : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic theminpreservedlogsize : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic thealarmthresholdsize : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic thesystemmaxfar : int

logic attr__ATTRIBUTE_ADDRESS14 : int

type alarmsilenttexti

predicate in_range10(x: int) = ((1 <= x) and (x <= 20))

logic bool_eq14 : int, int -> bool

axiom bool_eq_def11 :
  (forall x:int. forall y:int [bool_eq14(x, y)]. (((x = y) -> (bool_eq14(x,
  y) = true)) and ((not (x = y)) -> (bool_eq14(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq11 : alarmsilenttexti, alarmsilenttexti -> bool

logic dummy12 : alarmsilenttexti

type alarmsilenttexti__ref = { alarmsilenttexti__content : alarmsilenttexti
}

function alarmsilenttexti__ref___projection(a: alarmsilenttexti__ref) : alarmsilenttexti =
  (a).alarmsilenttexti__content

type latchunlocktexti

predicate in_range11(x: int) = ((1 <= x) and (x <= 20))

logic bool_eq15 : int, int -> bool

axiom bool_eq_def12 :
  (forall x:int. forall y:int [bool_eq15(x, y)]. (((x = y) -> (bool_eq15(x,
  y) = true)) and ((not (x = y)) -> (bool_eq15(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq12 : latchunlocktexti, latchunlocktexti -> bool

logic dummy13 : latchunlocktexti

type latchunlocktexti__ref = { latchunlocktexti__content : latchunlocktexti
}

function latchunlocktexti__ref___projection(a: latchunlocktexti__ref) : latchunlocktexti =
  (a).latchunlocktexti__content

type tokenremovaltexti

predicate in_range12(x: int) = ((1 <= x) and (x <= 21))

logic bool_eq16 : int, int -> bool

axiom bool_eq_def13 :
  (forall x:int. forall y:int [bool_eq16(x, y)]. (((x = y) -> (bool_eq16(x,
  y) = true)) and ((not (x = y)) -> (bool_eq16(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq13 : tokenremovaltexti, tokenremovaltexti -> bool

logic dummy14 : tokenremovaltexti

type tokenremovaltexti__ref = { tokenremovaltexti__content :
tokenremovaltexti
}

function tokenremovaltexti__ref___projection(a: tokenremovaltexti__ref) : tokenremovaltexti =
  (a).tokenremovaltexti__content

type fingerwaittexti

predicate in_range13(x: int) = ((1 <= x) and (x <= 19))

logic bool_eq17 : int, int -> bool

axiom bool_eq_def14 :
  (forall x:int. forall y:int [bool_eq17(x, y)]. (((x = y) -> (bool_eq17(x,
  y) = true)) and ((not (x = y)) -> (bool_eq17(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE13 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check13 : us_image -> prop

logic attr__ATTRIBUTE_VALUE13 : us_image -> int

logic user_eq14 : fingerwaittexti, fingerwaittexti -> bool

logic dummy15 : fingerwaittexti

type fingerwaittexti__ref = { fingerwaittexti__content : fingerwaittexti
}

function fingerwaittexti__ref___projection(a: fingerwaittexti__ref) : fingerwaittexti =
  (a).fingerwaittexti__content

type clearancetexti

predicate in_range14(x: int) = ((1 <= x) and (x <= 17))

logic bool_eq18 : int, int -> bool

axiom bool_eq_def15 :
  (forall x:int. forall y:int [bool_eq18(x, y)]. (((x = y) -> (bool_eq18(x,
  y) = true)) and ((not (x = y)) -> (bool_eq18(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE14 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check14 : us_image -> prop

logic attr__ATTRIBUTE_VALUE14 : us_image -> int

logic user_eq15 : clearancetexti, clearancetexti -> bool

logic dummy16 : clearancetexti

type clearancetexti__ref = { clearancetexti__content : clearancetexti
}

function clearancetexti__ref___projection(a: clearancetexti__ref) : clearancetexti =
  (a).clearancetexti__content

type workingstarttexti

predicate in_range15(x: int) = ((1 <= x) and (x <= 18))

logic bool_eq19 : int, int -> bool

axiom bool_eq_def16 :
  (forall x:int. forall y:int [bool_eq19(x, y)]. (((x = y) -> (bool_eq19(x,
  y) = true)) and ((not (x = y)) -> (bool_eq19(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE15 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check15 : us_image -> prop

logic attr__ATTRIBUTE_VALUE15 : us_image -> int

logic user_eq16 : workingstarttexti, workingstarttexti -> bool

logic dummy17 : workingstarttexti

type workingstarttexti__ref = { workingstarttexti__content :
workingstarttexti
}

function workingstarttexti__ref___projection(a: workingstarttexti__ref) : workingstarttexti =
  (a).workingstarttexti__content

type workingendtexti

predicate in_range16(x: int) = ((1 <= x) and (x <= 16))

logic bool_eq20 : int, int -> bool

axiom bool_eq_def17 :
  (forall x:int. forall y:int [bool_eq20(x, y)]. (((x = y) -> (bool_eq20(x,
  y) = true)) and ((not (x = y)) -> (bool_eq20(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE16 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check16 : us_image -> prop

logic attr__ATTRIBUTE_VALUE16 : us_image -> int

logic user_eq17 : workingendtexti, workingendtexti -> bool

logic dummy18 : workingendtexti

type workingendtexti__ref = { workingendtexti__content : workingendtexti
}

function workingendtexti__ref___projection(a: workingendtexti__ref) : workingendtexti =
  (a).workingendtexti__content

type maxauthdurationtexti

predicate in_range17(x: int) = ((1 <= x) and (x <= 16))

logic bool_eq21 : int, int -> bool

axiom bool_eq_def18 :
  (forall x:int. forall y:int [bool_eq21(x, y)]. (((x = y) -> (bool_eq21(x,
  y) = true)) and ((not (x = y)) -> (bool_eq21(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE17 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check17 : us_image -> prop

logic attr__ATTRIBUTE_VALUE17 : us_image -> int

logic user_eq18 : maxauthdurationtexti, maxauthdurationtexti -> bool

logic dummy19 : maxauthdurationtexti

type maxauthdurationtexti__ref = { maxauthdurationtexti__content :
maxauthdurationtexti
}

function maxauthdurationtexti__ref___projection(a: maxauthdurationtexti__ref) : maxauthdurationtexti =
  (a).maxauthdurationtexti__content

type minentryclasstexti

predicate in_range18(x: int) = ((1 <= x) and (x <= 14))

logic bool_eq22 : int, int -> bool

axiom bool_eq_def19 :
  (forall x:int. forall y:int [bool_eq22(x, y)]. (((x = y) -> (bool_eq22(x,
  y) = true)) and ((not (x = y)) -> (bool_eq22(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE18 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check18 : us_image -> prop

logic attr__ATTRIBUTE_VALUE18 : us_image -> int

logic user_eq19 : minentryclasstexti, minentryclasstexti -> bool

logic dummy20 : minentryclasstexti

type minentryclasstexti__ref = { minentryclasstexti__content :
minentryclasstexti
}

function minentryclasstexti__ref___projection(a: minentryclasstexti__ref) : minentryclasstexti =
  (a).minentryclasstexti__content

type accesspolicytexti

predicate in_range19(x: int) = ((1 <= x) and (x <= 13))

logic bool_eq23 : int, int -> bool

axiom bool_eq_def20 :
  (forall x:int. forall y:int [bool_eq23(x, y)]. (((x = y) -> (bool_eq23(x,
  y) = true)) and ((not (x = y)) -> (bool_eq23(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE19 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check19 : us_image -> prop

logic attr__ATTRIBUTE_VALUE19 : us_image -> int

logic user_eq20 : accesspolicytexti, accesspolicytexti -> bool

logic dummy21 : accesspolicytexti

type accesspolicytexti__ref = { accesspolicytexti__content :
accesspolicytexti
}

function accesspolicytexti__ref___projection(a: accesspolicytexti__ref) : accesspolicytexti =
  (a).accesspolicytexti__content

type minpreservedlogsizetexti

predicate in_range20(x: int) = ((1 <= x) and (x <= 20))

logic bool_eq24 : int, int -> bool

axiom bool_eq_def21 :
  (forall x:int. forall y:int [bool_eq24(x, y)]. (((x = y) -> (bool_eq24(x,
  y) = true)) and ((not (x = y)) -> (bool_eq24(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE20 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check20 : us_image -> prop

logic attr__ATTRIBUTE_VALUE20 : us_image -> int

logic user_eq21 : minpreservedlogsizetexti, minpreservedlogsizetexti -> bool

logic dummy22 : minpreservedlogsizetexti

type minpreservedlogsizetexti__ref = { minpreservedlogsizetexti__content :
minpreservedlogsizetexti
}

function minpreservedlogsizetexti__ref___projection(a: minpreservedlogsizetexti__ref) : minpreservedlogsizetexti =
  (a).minpreservedlogsizetexti__content

type alarmthresholdtexti

predicate in_range21(x: int) = ((1 <= x) and (x <= 19))

logic bool_eq25 : int, int -> bool

axiom bool_eq_def22 :
  (forall x:int. forall y:int [bool_eq25(x, y)]. (((x = y) -> (bool_eq25(x,
  y) = true)) and ((not (x = y)) -> (bool_eq25(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE21 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check21 : us_image -> prop

logic attr__ATTRIBUTE_VALUE21 : us_image -> int

logic user_eq22 : alarmthresholdtexti, alarmthresholdtexti -> bool

logic dummy23 : alarmthresholdtexti

type alarmthresholdtexti__ref = { alarmthresholdtexti__content :
alarmthresholdtexti
}

function alarmthresholdtexti__ref___projection(a: alarmthresholdtexti__ref) : alarmthresholdtexti =
  (a).alarmthresholdtexti__content

type systemmaxfartexti

predicate in_range22(x: int) = ((1 <= x) and (x <= 13))

logic bool_eq26 : int, int -> bool

axiom bool_eq_def23 :
  (forall x:int. forall y:int [bool_eq26(x, y)]. (((x = y) -> (bool_eq26(x,
  y) = true)) and ((not (x = y)) -> (bool_eq26(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE22 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check22 : us_image -> prop

logic attr__ATTRIBUTE_VALUE22 : us_image -> int

logic user_eq23 : systemmaxfartexti, systemmaxfartexti -> bool

logic dummy24 : systemmaxfartexti

type systemmaxfartexti__ref = { systemmaxfartexti__content :
systemmaxfartexti
}

function systemmaxfartexti__ref___projection(a: systemmaxfartexti__ref) : systemmaxfartexti =
  (a).systemmaxfartexti__content

logic alarmsilenttitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS15 : int

logic temp___String_Literal_150 : unit -> (int,character) farray

axiom temp___String_Literal_150__def_axiom :
  ((((((((((((((((((((to_rep((temp___String_Literal_150(void)[1])) = 65) and
  (to_rep((temp___String_Literal_150(void)[2])) = 76)) and
  (to_rep((temp___String_Literal_150(void)[3])) = 65)) and
  (to_rep((temp___String_Literal_150(void)[4])) = 82)) and
  (to_rep((temp___String_Literal_150(void)[5])) = 77)) and
  (to_rep((temp___String_Literal_150(void)[6])) = 83)) and
  (to_rep((temp___String_Literal_150(void)[7])) = 73)) and
  (to_rep((temp___String_Literal_150(void)[8])) = 76)) and
  (to_rep((temp___String_Literal_150(void)[9])) = 69)) and
  (to_rep((temp___String_Literal_150(void)[10])) = 78)) and
  (to_rep((temp___String_Literal_150(void)[11])) = 84)) and
  (to_rep((temp___String_Literal_150(void)[12])) = 68)) and
  (to_rep((temp___String_Literal_150(void)[13])) = 85)) and
  (to_rep((temp___String_Literal_150(void)[14])) = 82)) and
  (to_rep((temp___String_Literal_150(void)[15])) = 65)) and
  (to_rep((temp___String_Literal_150(void)[16])) = 84)) and
  (to_rep((temp___String_Literal_150(void)[17])) = 73)) and
  (to_rep((temp___String_Literal_150(void)[18])) = 79)) and
  (to_rep((temp___String_Literal_150(void)[19])) = 78)) and
  (to_rep((temp___String_Literal_150(void)[20])) = 32))

logic latchunlocktitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS16 : int

logic temp___String_Literal_151 : unit -> (int,character) farray

axiom temp___String_Literal_151__def_axiom :
  ((((((((((((((((((((to_rep((temp___String_Literal_151(void)[1])) = 76) and
  (to_rep((temp___String_Literal_151(void)[2])) = 65)) and
  (to_rep((temp___String_Literal_151(void)[3])) = 84)) and
  (to_rep((temp___String_Literal_151(void)[4])) = 67)) and
  (to_rep((temp___String_Literal_151(void)[5])) = 72)) and
  (to_rep((temp___String_Literal_151(void)[6])) = 85)) and
  (to_rep((temp___String_Literal_151(void)[7])) = 78)) and
  (to_rep((temp___String_Literal_151(void)[8])) = 76)) and
  (to_rep((temp___String_Literal_151(void)[9])) = 79)) and
  (to_rep((temp___String_Literal_151(void)[10])) = 67)) and
  (to_rep((temp___String_Literal_151(void)[11])) = 75)) and
  (to_rep((temp___String_Literal_151(void)[12])) = 68)) and
  (to_rep((temp___String_Literal_151(void)[13])) = 85)) and
  (to_rep((temp___String_Literal_151(void)[14])) = 82)) and
  (to_rep((temp___String_Literal_151(void)[15])) = 65)) and
  (to_rep((temp___String_Literal_151(void)[16])) = 84)) and
  (to_rep((temp___String_Literal_151(void)[17])) = 73)) and
  (to_rep((temp___String_Literal_151(void)[18])) = 79)) and
  (to_rep((temp___String_Literal_151(void)[19])) = 78)) and
  (to_rep((temp___String_Literal_151(void)[20])) = 32))

logic tokenremovaltitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS17 : int

logic temp___String_Literal_152 : unit -> (int,character) farray

axiom temp___String_Literal_152__def_axiom :
  (((((((((((((((((((((to_rep((temp___String_Literal_152(void)[1])) = 84) and
  (to_rep((temp___String_Literal_152(void)[2])) = 79)) and
  (to_rep((temp___String_Literal_152(void)[3])) = 75)) and
  (to_rep((temp___String_Literal_152(void)[4])) = 69)) and
  (to_rep((temp___String_Literal_152(void)[5])) = 78)) and
  (to_rep((temp___String_Literal_152(void)[6])) = 82)) and
  (to_rep((temp___String_Literal_152(void)[7])) = 69)) and
  (to_rep((temp___String_Literal_152(void)[8])) = 77)) and
  (to_rep((temp___String_Literal_152(void)[9])) = 79)) and
  (to_rep((temp___String_Literal_152(void)[10])) = 86)) and
  (to_rep((temp___String_Literal_152(void)[11])) = 65)) and
  (to_rep((temp___String_Literal_152(void)[12])) = 76)) and
  (to_rep((temp___String_Literal_152(void)[13])) = 68)) and
  (to_rep((temp___String_Literal_152(void)[14])) = 85)) and
  (to_rep((temp___String_Literal_152(void)[15])) = 82)) and
  (to_rep((temp___String_Literal_152(void)[16])) = 65)) and
  (to_rep((temp___String_Literal_152(void)[17])) = 84)) and
  (to_rep((temp___String_Literal_152(void)[18])) = 73)) and
  (to_rep((temp___String_Literal_152(void)[19])) = 79)) and
  (to_rep((temp___String_Literal_152(void)[20])) = 78)) and
  (to_rep((temp___String_Literal_152(void)[21])) = 32))

logic fingerwaittitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS18 : int

logic temp___String_Literal_153 : unit -> (int,character) farray

axiom temp___String_Literal_153__def_axiom :
  (((((((((((((((((((to_rep((temp___String_Literal_153(void)[1])) = 70) and
  (to_rep((temp___String_Literal_153(void)[2])) = 73)) and
  (to_rep((temp___String_Literal_153(void)[3])) = 78)) and
  (to_rep((temp___String_Literal_153(void)[4])) = 71)) and
  (to_rep((temp___String_Literal_153(void)[5])) = 69)) and
  (to_rep((temp___String_Literal_153(void)[6])) = 82)) and
  (to_rep((temp___String_Literal_153(void)[7])) = 87)) and
  (to_rep((temp___String_Literal_153(void)[8])) = 65)) and
  (to_rep((temp___String_Literal_153(void)[9])) = 73)) and
  (to_rep((temp___String_Literal_153(void)[10])) = 84)) and
  (to_rep((temp___String_Literal_153(void)[11])) = 68)) and
  (to_rep((temp___String_Literal_153(void)[12])) = 85)) and
  (to_rep((temp___String_Literal_153(void)[13])) = 82)) and
  (to_rep((temp___String_Literal_153(void)[14])) = 65)) and
  (to_rep((temp___String_Literal_153(void)[15])) = 84)) and
  (to_rep((temp___String_Literal_153(void)[16])) = 73)) and
  (to_rep((temp___String_Literal_153(void)[17])) = 79)) and
  (to_rep((temp___String_Literal_153(void)[18])) = 78)) and
  (to_rep((temp___String_Literal_153(void)[19])) = 32))

logic clearancetitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS19 : int

logic temp___String_Literal_154 : unit -> (int,character) farray

axiom temp___String_Literal_154__def_axiom :
  (((((((((((((((((to_rep((temp___String_Literal_154(void)[1])) = 69) and
  (to_rep((temp___String_Literal_154(void)[2])) = 78)) and
  (to_rep((temp___String_Literal_154(void)[3])) = 67)) and
  (to_rep((temp___String_Literal_154(void)[4])) = 76)) and
  (to_rep((temp___String_Literal_154(void)[5])) = 65)) and
  (to_rep((temp___String_Literal_154(void)[6])) = 86)) and
  (to_rep((temp___String_Literal_154(void)[7])) = 69)) and
  (to_rep((temp___String_Literal_154(void)[8])) = 67)) and
  (to_rep((temp___String_Literal_154(void)[9])) = 76)) and
  (to_rep((temp___String_Literal_154(void)[10])) = 69)) and
  (to_rep((temp___String_Literal_154(void)[11])) = 65)) and
  (to_rep((temp___String_Literal_154(void)[12])) = 82)) and
  (to_rep((temp___String_Literal_154(void)[13])) = 65)) and
  (to_rep((temp___String_Literal_154(void)[14])) = 78)) and
  (to_rep((temp___String_Literal_154(void)[15])) = 67)) and
  (to_rep((temp___String_Literal_154(void)[16])) = 69)) and
  (to_rep((temp___String_Literal_154(void)[17])) = 32))

logic workingstarttitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS20 : int

logic temp___String_Literal_155 : unit -> (int,character) farray

axiom temp___String_Literal_155__def_axiom :
  ((((((((((((((((((to_rep((temp___String_Literal_155(void)[1])) = 87) and
  (to_rep((temp___String_Literal_155(void)[2])) = 79)) and
  (to_rep((temp___String_Literal_155(void)[3])) = 82)) and
  (to_rep((temp___String_Literal_155(void)[4])) = 75)) and
  (to_rep((temp___String_Literal_155(void)[5])) = 73)) and
  (to_rep((temp___String_Literal_155(void)[6])) = 78)) and
  (to_rep((temp___String_Literal_155(void)[7])) = 71)) and
  (to_rep((temp___String_Literal_155(void)[8])) = 72)) and
  (to_rep((temp___String_Literal_155(void)[9])) = 79)) and
  (to_rep((temp___String_Literal_155(void)[10])) = 85)) and
  (to_rep((temp___String_Literal_155(void)[11])) = 82)) and
  (to_rep((temp___String_Literal_155(void)[12])) = 83)) and
  (to_rep((temp___String_Literal_155(void)[13])) = 83)) and
  (to_rep((temp___String_Literal_155(void)[14])) = 84)) and
  (to_rep((temp___String_Literal_155(void)[15])) = 65)) and
  (to_rep((temp___String_Literal_155(void)[16])) = 82)) and
  (to_rep((temp___String_Literal_155(void)[17])) = 84)) and
  (to_rep((temp___String_Literal_155(void)[18])) = 32))

logic workingendtitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS21 : int

logic temp___String_Literal_156 : unit -> (int,character) farray

axiom temp___String_Literal_156__def_axiom :
  ((((((((((((((((to_rep((temp___String_Literal_156(void)[1])) = 87) and
  (to_rep((temp___String_Literal_156(void)[2])) = 79)) and
  (to_rep((temp___String_Literal_156(void)[3])) = 82)) and
  (to_rep((temp___String_Literal_156(void)[4])) = 75)) and
  (to_rep((temp___String_Literal_156(void)[5])) = 73)) and
  (to_rep((temp___String_Literal_156(void)[6])) = 78)) and
  (to_rep((temp___String_Literal_156(void)[7])) = 71)) and
  (to_rep((temp___String_Literal_156(void)[8])) = 72)) and
  (to_rep((temp___String_Literal_156(void)[9])) = 79)) and
  (to_rep((temp___String_Literal_156(void)[10])) = 85)) and
  (to_rep((temp___String_Literal_156(void)[11])) = 82)) and
  (to_rep((temp___String_Literal_156(void)[12])) = 83)) and
  (to_rep((temp___String_Literal_156(void)[13])) = 69)) and
  (to_rep((temp___String_Literal_156(void)[14])) = 78)) and
  (to_rep((temp___String_Literal_156(void)[15])) = 68)) and
  (to_rep((temp___String_Literal_156(void)[16])) = 32))

logic maxauthdurationtitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS22 : int

logic temp___String_Literal_157 : unit -> (int,character) farray

axiom temp___String_Literal_157__def_axiom :
  ((((((((((((((((to_rep((temp___String_Literal_157(void)[1])) = 77) and
  (to_rep((temp___String_Literal_157(void)[2])) = 65)) and
  (to_rep((temp___String_Literal_157(void)[3])) = 88)) and
  (to_rep((temp___String_Literal_157(void)[4])) = 65)) and
  (to_rep((temp___String_Literal_157(void)[5])) = 85)) and
  (to_rep((temp___String_Literal_157(void)[6])) = 84)) and
  (to_rep((temp___String_Literal_157(void)[7])) = 72)) and
  (to_rep((temp___String_Literal_157(void)[8])) = 68)) and
  (to_rep((temp___String_Literal_157(void)[9])) = 85)) and
  (to_rep((temp___String_Literal_157(void)[10])) = 82)) and
  (to_rep((temp___String_Literal_157(void)[11])) = 65)) and
  (to_rep((temp___String_Literal_157(void)[12])) = 84)) and
  (to_rep((temp___String_Literal_157(void)[13])) = 73)) and
  (to_rep((temp___String_Literal_157(void)[14])) = 79)) and
  (to_rep((temp___String_Literal_157(void)[15])) = 78)) and
  (to_rep((temp___String_Literal_157(void)[16])) = 32))

logic accesspolicytitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS23 : int

logic temp___String_Literal_158 : unit -> (int,character) farray

axiom temp___String_Literal_158__def_axiom :
  (((((((((((((to_rep((temp___String_Literal_158(void)[1])) = 65) and
  (to_rep((temp___String_Literal_158(void)[2])) = 67)) and
  (to_rep((temp___String_Literal_158(void)[3])) = 67)) and
  (to_rep((temp___String_Literal_158(void)[4])) = 69)) and
  (to_rep((temp___String_Literal_158(void)[5])) = 83)) and
  (to_rep((temp___String_Literal_158(void)[6])) = 83)) and
  (to_rep((temp___String_Literal_158(void)[7])) = 80)) and
  (to_rep((temp___String_Literal_158(void)[8])) = 79)) and
  (to_rep((temp___String_Literal_158(void)[9])) = 76)) and
  (to_rep((temp___String_Literal_158(void)[10])) = 73)) and
  (to_rep((temp___String_Literal_158(void)[11])) = 67)) and
  (to_rep((temp___String_Literal_158(void)[12])) = 89)) and
  (to_rep((temp___String_Literal_158(void)[13])) = 32))

logic minentryclasstitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS24 : int

logic temp___String_Literal_159 : unit -> (int,character) farray

axiom temp___String_Literal_159__def_axiom :
  ((((((((((((((to_rep((temp___String_Literal_159(void)[1])) = 77) and
  (to_rep((temp___String_Literal_159(void)[2])) = 73)) and
  (to_rep((temp___String_Literal_159(void)[3])) = 78)) and
  (to_rep((temp___String_Literal_159(void)[4])) = 69)) and
  (to_rep((temp___String_Literal_159(void)[5])) = 78)) and
  (to_rep((temp___String_Literal_159(void)[6])) = 84)) and
  (to_rep((temp___String_Literal_159(void)[7])) = 82)) and
  (to_rep((temp___String_Literal_159(void)[8])) = 89)) and
  (to_rep((temp___String_Literal_159(void)[9])) = 67)) and
  (to_rep((temp___String_Literal_159(void)[10])) = 76)) and
  (to_rep((temp___String_Literal_159(void)[11])) = 65)) and
  (to_rep((temp___String_Literal_159(void)[12])) = 83)) and
  (to_rep((temp___String_Literal_159(void)[13])) = 83)) and
  (to_rep((temp___String_Literal_159(void)[14])) = 32))

logic minpreservedlogsizetitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS25 : int

logic temp___String_Literal_160 : unit -> (int,character) farray

axiom temp___String_Literal_160__def_axiom :
  ((((((((((((((((((((to_rep((temp___String_Literal_160(void)[1])) = 77) and
  (to_rep((temp___String_Literal_160(void)[2])) = 73)) and
  (to_rep((temp___String_Literal_160(void)[3])) = 78)) and
  (to_rep((temp___String_Literal_160(void)[4])) = 80)) and
  (to_rep((temp___String_Literal_160(void)[5])) = 82)) and
  (to_rep((temp___String_Literal_160(void)[6])) = 69)) and
  (to_rep((temp___String_Literal_160(void)[7])) = 83)) and
  (to_rep((temp___String_Literal_160(void)[8])) = 69)) and
  (to_rep((temp___String_Literal_160(void)[9])) = 82)) and
  (to_rep((temp___String_Literal_160(void)[10])) = 86)) and
  (to_rep((temp___String_Literal_160(void)[11])) = 69)) and
  (to_rep((temp___String_Literal_160(void)[12])) = 68)) and
  (to_rep((temp___String_Literal_160(void)[13])) = 76)) and
  (to_rep((temp___String_Literal_160(void)[14])) = 79)) and
  (to_rep((temp___String_Literal_160(void)[15])) = 71)) and
  (to_rep((temp___String_Literal_160(void)[16])) = 83)) and
  (to_rep((temp___String_Literal_160(void)[17])) = 73)) and
  (to_rep((temp___String_Literal_160(void)[18])) = 90)) and
  (to_rep((temp___String_Literal_160(void)[19])) = 69)) and
  (to_rep((temp___String_Literal_160(void)[20])) = 32))

logic alarmthresholdtitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS26 : int

logic temp___String_Literal_161 : unit -> (int,character) farray

axiom temp___String_Literal_161__def_axiom :
  (((((((((((((((((((to_rep((temp___String_Literal_161(void)[1])) = 65) and
  (to_rep((temp___String_Literal_161(void)[2])) = 76)) and
  (to_rep((temp___String_Literal_161(void)[3])) = 65)) and
  (to_rep((temp___String_Literal_161(void)[4])) = 82)) and
  (to_rep((temp___String_Literal_161(void)[5])) = 77)) and
  (to_rep((temp___String_Literal_161(void)[6])) = 84)) and
  (to_rep((temp___String_Literal_161(void)[7])) = 72)) and
  (to_rep((temp___String_Literal_161(void)[8])) = 82)) and
  (to_rep((temp___String_Literal_161(void)[9])) = 69)) and
  (to_rep((temp___String_Literal_161(void)[10])) = 83)) and
  (to_rep((temp___String_Literal_161(void)[11])) = 72)) and
  (to_rep((temp___String_Literal_161(void)[12])) = 79)) and
  (to_rep((temp___String_Literal_161(void)[13])) = 76)) and
  (to_rep((temp___String_Literal_161(void)[14])) = 68)) and
  (to_rep((temp___String_Literal_161(void)[15])) = 83)) and
  (to_rep((temp___String_Literal_161(void)[16])) = 73)) and
  (to_rep((temp___String_Literal_161(void)[17])) = 90)) and
  (to_rep((temp___String_Literal_161(void)[18])) = 69)) and
  (to_rep((temp___String_Literal_161(void)[19])) = 32))

logic systemmaxfartitle : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS27 : int

logic temp___String_Literal_162 : unit -> (int,character) farray

axiom temp___String_Literal_162__def_axiom :
  (((((((((((((to_rep((temp___String_Literal_162(void)[1])) = 83) and
  (to_rep((temp___String_Literal_162(void)[2])) = 89)) and
  (to_rep((temp___String_Literal_162(void)[3])) = 83)) and
  (to_rep((temp___String_Literal_162(void)[4])) = 84)) and
  (to_rep((temp___String_Literal_162(void)[5])) = 69)) and
  (to_rep((temp___String_Literal_162(void)[6])) = 77)) and
  (to_rep((temp___String_Literal_162(void)[7])) = 77)) and
  (to_rep((temp___String_Literal_162(void)[8])) = 65)) and
  (to_rep((temp___String_Literal_162(void)[9])) = 88)) and
  (to_rep((temp___String_Literal_162(void)[10])) = 70)) and
  (to_rep((temp___String_Literal_162(void)[11])) = 65)) and
  (to_rep((temp___String_Literal_162(void)[12])) = 82)) and
  (to_rep((temp___String_Literal_162(void)[13])) = 32))

type classtexti

predicate in_range23(x: int) = ((1 <= x) and (x <= 12))

logic bool_eq27 : int, int -> bool

axiom bool_eq_def24 :
  (forall x:int. forall y:int [bool_eq27(x, y)]. (((x = y) -> (bool_eq27(x,
  y) = true)) and ((not (x = y)) -> (bool_eq27(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE23 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check23 : us_image -> prop

logic attr__ATTRIBUTE_VALUE23 : us_image -> int

logic user_eq24 : classtexti, classtexti -> bool

logic dummy25 : classtexti

type classtexti__ref = { classtexti__content : classtexti
}

function classtexti__ref___projection(a: classtexti__ref) : classtexti =
  (a).classtexti__content

logic to_rep2 : classtexti -> int

logic of_rep2 : int -> classtexti

axiom inversion_axiom2 :
  (forall x:classtexti [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:classtexti [to_rep2(x)]. in_range23(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range23(x) ->
  (to_rep2(of_rep2(x)) = x)))

logic dummy26 : (int,character) farray

logic value__size2 : int

logic object__size2 : (int,character) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,character) farray -> int

logic value__alignment2 : int

logic object__alignment2 : (int,character) farray -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:(int,character) farray. (0 <= object__size2(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,character) farray. (0 <= object__component__size1(a)))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:(int,character) farray. (0 <= object__alignment2(a)))

logic user_eq25 : (int,character) farray, (int,character) farray -> bool

type us_split_fields = { rec__configdata__classstringt__text :
(int,character) farray; rec__configdata__classstringt__length : classtexti
}

function us_split_fields_Text__projection(a: us_split_fields) : (int,character) farray =
  (a).rec__configdata__classstringt__text

function us_split_fields_Length__2__projection(a: us_split_fields) : classtexti =
  (a).rec__configdata__classstringt__length

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___7__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep1 = { us_split_fields1 : us_split_fields
}

function us_rep___8__projection(a: us_rep1) : us_split_fields =
  (a).us_split_fields1

logic bool_eq28 : us_rep1, us_rep1 -> bool

axiom bool_eq_def25 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq28(a, b)].
  ((((bool_eq5(((a).us_split_fields1).rec__configdata__classstringt__text, 1,
  12, ((b).us_split_fields1).rec__configdata__classstringt__text, 1,
  12) = true) and
  (to_rep2(((a).us_split_fields1).rec__configdata__classstringt__length) = to_rep2(((b).us_split_fields1).rec__configdata__classstringt__length))) ->
  (bool_eq28(a, b) = true)) and
  ((not ((bool_eq5(((a).us_split_fields1).rec__configdata__classstringt__text,
  1, 12, ((b).us_split_fields1).rec__configdata__classstringt__text, 1,
  12) = true) and
  (to_rep2(((a).us_split_fields1).rec__configdata__classstringt__length) = to_rep2(((b).us_split_fields1).rec__configdata__classstringt__length)))) ->
  (bool_eq28(a, b) = false))))

logic value__size3 : int

logic object__size3 : us_rep1 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep1 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:(int,character) farray. forall a1:classtexti.
  (0 <= object__size3({ us_split_fields1 = {
  rec__configdata__classstringt__text = a;
  rec__configdata__classstringt__length = a1 } })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:(int,character) farray. forall a1:classtexti.
  (0 <= object__alignment3({ us_split_fields1 = {
  rec__configdata__classstringt__text = a;
  rec__configdata__classstringt__length = a1 } })))

logic configdata__classstringt__text__first__bit : int

logic configdata__classstringt__text__last__bit : int

logic configdata__classstringt__text__position : int

axiom configdata__classstringt__text__first__bit_axiom :
  (0 <= configdata__classstringt__text__first__bit)

axiom configdata__classstringt__text__last__bit_axiom :
  (configdata__classstringt__text__first__bit <  configdata__classstringt__text__last__bit)

axiom configdata__classstringt__text__position_axiom :
  (0 <= configdata__classstringt__text__position)

logic configdata__classstringt__length__first__bit : int

logic configdata__classstringt__length__last__bit : int

logic configdata__classstringt__length__position : int

axiom configdata__classstringt__length__first__bit_axiom :
  (0 <= configdata__classstringt__length__first__bit)

axiom configdata__classstringt__length__last__bit_axiom :
  (configdata__classstringt__length__first__bit <  configdata__classstringt__length__last__bit)

axiom configdata__classstringt__length__position_axiom :
  (0 <= configdata__classstringt__length__position)

logic user_eq26 : us_rep1, us_rep1 -> bool

logic dummy27 : (int,character) farray

logic dummy28 : classtexti

type classstringt__ref = { classstringt__content : us_rep1
}

function classstringt__ref___projection(a: classstringt__ref) : us_rep1 =
  (a).classstringt__content

type map__ref1 = { map__content1 : (int,us_rep1) farray
}

logic slide1 : (int,us_rep1) farray, int, int -> (int,us_rep1) farray

axiom slide_eq1 :
  (forall a:(int,us_rep1) farray.
  (forall first2:int [slide1(a, first2, first2)]. (slide1(a, first2,
  first2) = a)))

axiom slide_def1 :
  (forall a:(int,us_rep1) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat1 : (int,us_rep1) farray, int, int, (int,us_rep1) farray, int,
  int -> (int,us_rep1) farray

axiom concat_def1 :
  (forall a:(int,us_rep1) farray. forall b:(int,us_rep1) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat1(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat1(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat1(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton1 : us_rep1, int -> (int,us_rep1) farray

axiom singleton_def1 :
  (forall v:(int,character) farray. forall v1:classtexti.
  (forall i:int [(singleton1({ us_split_fields1 = {
  rec__configdata__classstringt__text = v;
  rec__configdata__classstringt__length = v1 } }, i)[i])]. ((singleton1({
  us_split_fields1 = { rec__configdata__classstringt__text = v;
  rec__configdata__classstringt__length = v1 } }, i)[i]) = {
  us_split_fields1 = { rec__configdata__classstringt__text = v;
  rec__configdata__classstringt__length = v1 } })))

logic bool_eq29 : (int,us_rep1) farray, int, int, (int,us_rep1) farray, int,
  int -> bool

axiom bool_eq_def26 :
  (forall a:(int,us_rep1) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep1) farray. forall b__first:int. forall b__last:int
  [bool_eq29(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_163:int. ((((a__first <= temp___idx_163) and
  (temp___idx_163 <= a__last)) and (bool_eq28((a[temp___idx_163]),
  (b[((b__first - a__first) + temp___idx_163)])) = true)) or
  (not ((a__first <= temp___idx_163) and (temp___idx_163 <= a__last)))))) ->
  (bool_eq29(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_163:int. (((a__first <= temp___idx_163) and
  (temp___idx_163 <= a__last)) -> (bool_eq28((a[temp___idx_163]),
  (b[((b__first - a__first) + temp___idx_163)])) = true))))) -> (bool_eq29(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,us_rep1) farray. forall b:(int,us_rep1) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq29(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_163:int. (((a__first <= temp___idx_163) and
  (temp___idx_163 <= a__last)) -> (bool_eq28((a[temp___idx_163]),
  (b[((b__first - a__first) + temp___idx_163)])) = true)))))))

logic classstringlookup : (int,us_rep1) farray

logic attr__ATTRIBUTE_ADDRESS28 : int

logic configdata__classstringlookup__aggregate_def : us_rep1, us_rep1,
  us_rep1, us_rep1, us_rep1, us_rep1 -> (int,us_rep1) farray

axiom def_axiom :
  (forall temp___165:(int,character) farray. forall temp___1651:classtexti.
  forall temp___166:(int,character) farray. forall temp___1661:classtexti.
  forall temp___167:(int,character) farray. forall temp___1671:classtexti.
  forall temp___168:(int,character) farray. forall temp___1681:classtexti.
  forall temp___169:(int,character) farray. forall temp___1691:classtexti.
  forall temp___170:(int,character) farray. forall temp___1701:classtexti.
  (((((((configdata__classstringlookup__aggregate_def({ us_split_fields1 = {
  rec__configdata__classstringt__text = temp___165;
  rec__configdata__classstringt__length = temp___1651 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___166;
  rec__configdata__classstringt__length = temp___1661 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___167;
  rec__configdata__classstringt__length = temp___1671 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___168;
  rec__configdata__classstringt__length = temp___1681 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___169;
  rec__configdata__classstringt__length = temp___1691 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___170;
  rec__configdata__classstringt__length = temp___1701 } })[0]) = {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___165;
  rec__configdata__classstringt__length = temp___1651 } }) and
  ((configdata__classstringlookup__aggregate_def({ us_split_fields1 = {
  rec__configdata__classstringt__text = temp___165;
  rec__configdata__classstringt__length = temp___1651 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___166;
  rec__configdata__classstringt__length = temp___1661 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___167;
  rec__configdata__classstringt__length = temp___1671 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___168;
  rec__configdata__classstringt__length = temp___1681 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___169;
  rec__configdata__classstringt__length = temp___1691 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___170;
  rec__configdata__classstringt__length = temp___1701 } })[1]) = {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___166;
  rec__configdata__classstringt__length = temp___1661 } })) and
  ((configdata__classstringlookup__aggregate_def({ us_split_fields1 = {
  rec__configdata__classstringt__text = temp___165;
  rec__configdata__classstringt__length = temp___1651 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___166;
  rec__configdata__classstringt__length = temp___1661 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___167;
  rec__configdata__classstringt__length = temp___1671 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___168;
  rec__configdata__classstringt__length = temp___1681 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___169;
  rec__configdata__classstringt__length = temp___1691 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___170;
  rec__configdata__classstringt__length = temp___1701 } })[2]) = {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___167;
  rec__configdata__classstringt__length = temp___1671 } })) and
  ((configdata__classstringlookup__aggregate_def({ us_split_fields1 = {
  rec__configdata__classstringt__text = temp___165;
  rec__configdata__classstringt__length = temp___1651 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___166;
  rec__configdata__classstringt__length = temp___1661 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___167;
  rec__configdata__classstringt__length = temp___1671 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___168;
  rec__configdata__classstringt__length = temp___1681 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___169;
  rec__configdata__classstringt__length = temp___1691 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___170;
  rec__configdata__classstringt__length = temp___1701 } })[3]) = {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___168;
  rec__configdata__classstringt__length = temp___1681 } })) and
  ((configdata__classstringlookup__aggregate_def({ us_split_fields1 = {
  rec__configdata__classstringt__text = temp___165;
  rec__configdata__classstringt__length = temp___1651 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___166;
  rec__configdata__classstringt__length = temp___1661 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___167;
  rec__configdata__classstringt__length = temp___1671 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___168;
  rec__configdata__classstringt__length = temp___1681 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___169;
  rec__configdata__classstringt__length = temp___1691 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___170;
  rec__configdata__classstringt__length = temp___1701 } })[4]) = {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___169;
  rec__configdata__classstringt__length = temp___1691 } })) and
  ((configdata__classstringlookup__aggregate_def({ us_split_fields1 = {
  rec__configdata__classstringt__text = temp___165;
  rec__configdata__classstringt__length = temp___1651 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___166;
  rec__configdata__classstringt__length = temp___1661 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___167;
  rec__configdata__classstringt__length = temp___1671 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___168;
  rec__configdata__classstringt__length = temp___1681 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___169;
  rec__configdata__classstringt__length = temp___1691 } }, {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___170;
  rec__configdata__classstringt__length = temp___1701 } })[5]) = {
  us_split_fields1 = { rec__configdata__classstringt__text = temp___170;
  rec__configdata__classstringt__length = temp___1701 } })))

logic temp___String_Literal_172 : unit -> (int,character) farray

axiom temp___String_Literal_172__def_axiom :
  ((((((((((((to_rep((temp___String_Literal_172(void)[1])) = 117) and
  (to_rep((temp___String_Literal_172(void)[2])) = 110)) and
  (to_rep((temp___String_Literal_172(void)[3])) = 109)) and
  (to_rep((temp___String_Literal_172(void)[4])) = 97)) and
  (to_rep((temp___String_Literal_172(void)[5])) = 114)) and
  (to_rep((temp___String_Literal_172(void)[6])) = 107)) and
  (to_rep((temp___String_Literal_172(void)[7])) = 101)) and
  (to_rep((temp___String_Literal_172(void)[8])) = 100)) and
  (to_rep((temp___String_Literal_172(void)[9])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[10])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_172(void)[12])) = 32))

logic temp___String_Literal_173 : unit -> (int,character) farray

axiom temp___String_Literal_173__def_axiom :
  ((((((((((((to_rep((temp___String_Literal_173(void)[1])) = 117) and
  (to_rep((temp___String_Literal_173(void)[2])) = 110)) and
  (to_rep((temp___String_Literal_173(void)[3])) = 99)) and
  (to_rep((temp___String_Literal_173(void)[4])) = 108)) and
  (to_rep((temp___String_Literal_173(void)[5])) = 97)) and
  (to_rep((temp___String_Literal_173(void)[6])) = 115)) and
  (to_rep((temp___String_Literal_173(void)[7])) = 115)) and
  (to_rep((temp___String_Literal_173(void)[8])) = 105)) and
  (to_rep((temp___String_Literal_173(void)[9])) = 102)) and
  (to_rep((temp___String_Literal_173(void)[10])) = 105)) and
  (to_rep((temp___String_Literal_173(void)[11])) = 101)) and
  (to_rep((temp___String_Literal_173(void)[12])) = 100))

logic temp___String_Literal_174 : unit -> (int,character) farray

axiom temp___String_Literal_174__def_axiom :
  ((((((((((((to_rep((temp___String_Literal_174(void)[1])) = 114) and
  (to_rep((temp___String_Literal_174(void)[2])) = 101)) and
  (to_rep((temp___String_Literal_174(void)[3])) = 115)) and
  (to_rep((temp___String_Literal_174(void)[4])) = 116)) and
  (to_rep((temp___String_Literal_174(void)[5])) = 114)) and
  (to_rep((temp___String_Literal_174(void)[6])) = 105)) and
  (to_rep((temp___String_Literal_174(void)[7])) = 99)) and
  (to_rep((temp___String_Literal_174(void)[8])) = 116)) and
  (to_rep((temp___String_Literal_174(void)[9])) = 101)) and
  (to_rep((temp___String_Literal_174(void)[10])) = 100)) and
  (to_rep((temp___String_Literal_174(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_174(void)[12])) = 32))

logic temp___String_Literal_175 : unit -> (int,character) farray

axiom temp___String_Literal_175__def_axiom :
  ((((((((((((to_rep((temp___String_Literal_175(void)[1])) = 99) and
  (to_rep((temp___String_Literal_175(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_175(void)[3])) = 110)) and
  (to_rep((temp___String_Literal_175(void)[4])) = 102)) and
  (to_rep((temp___String_Literal_175(void)[5])) = 105)) and
  (to_rep((temp___String_Literal_175(void)[6])) = 100)) and
  (to_rep((temp___String_Literal_175(void)[7])) = 101)) and
  (to_rep((temp___String_Literal_175(void)[8])) = 110)) and
  (to_rep((temp___String_Literal_175(void)[9])) = 116)) and
  (to_rep((temp___String_Literal_175(void)[10])) = 105)) and
  (to_rep((temp___String_Literal_175(void)[11])) = 97)) and
  (to_rep((temp___String_Literal_175(void)[12])) = 108))

logic temp___String_Literal_176 : unit -> (int,character) farray

axiom temp___String_Literal_176__def_axiom :
  ((((((((((((to_rep((temp___String_Literal_176(void)[1])) = 115) and
  (to_rep((temp___String_Literal_176(void)[2])) = 101)) and
  (to_rep((temp___String_Literal_176(void)[3])) = 99)) and
  (to_rep((temp___String_Literal_176(void)[4])) = 114)) and
  (to_rep((temp___String_Literal_176(void)[5])) = 101)) and
  (to_rep((temp___String_Literal_176(void)[6])) = 116)) and
  (to_rep((temp___String_Literal_176(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_176(void)[8])) = 32)) and
  (to_rep((temp___String_Literal_176(void)[9])) = 32)) and
  (to_rep((temp___String_Literal_176(void)[10])) = 32)) and
  (to_rep((temp___String_Literal_176(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_176(void)[12])) = 32))

logic temp___String_Literal_177 : unit -> (int,character) farray

axiom temp___String_Literal_177__def_axiom :
  ((((((((((((to_rep((temp___String_Literal_177(void)[1])) = 116) and
  (to_rep((temp___String_Literal_177(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_177(void)[3])) = 112)) and
  (to_rep((temp___String_Literal_177(void)[4])) = 115)) and
  (to_rep((temp___String_Literal_177(void)[5])) = 101)) and
  (to_rep((temp___String_Literal_177(void)[6])) = 99)) and
  (to_rep((temp___String_Literal_177(void)[7])) = 114)) and
  (to_rep((temp___String_Literal_177(void)[8])) = 101)) and
  (to_rep((temp___String_Literal_177(void)[9])) = 116)) and
  (to_rep((temp___String_Literal_177(void)[10])) = 32)) and
  (to_rep((temp___String_Literal_177(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_177(void)[12])) = 32))

type accesstexti

predicate in_range24(x: int) = ((1 <= x) and (x <= 12))

logic bool_eq30 : int, int -> bool

axiom bool_eq_def27 :
  (forall x:int. forall y:int [bool_eq30(x, y)]. (((x = y) -> (bool_eq30(x,
  y) = true)) and ((not (x = y)) -> (bool_eq30(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE24 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check24 : us_image -> prop

logic attr__ATTRIBUTE_VALUE24 : us_image -> int

logic user_eq27 : accesstexti, accesstexti -> bool

logic dummy29 : accesstexti

type accesstexti__ref = { accesstexti__content : accesstexti
}

function accesstexti__ref___projection(a: accesstexti__ref) : accesstexti =
  (a).accesstexti__content

logic to_rep3 : accesstexti -> int

logic of_rep3 : int -> accesstexti

axiom inversion_axiom3 :
  (forall x:accesstexti [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:accesstexti [to_rep3(x)]. in_range24(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range24(x) ->
  (to_rep3(of_rep3(x)) = x)))

logic dummy30 : (int,character) farray

logic value__size4 : int

logic object__size4 : (int,character) farray -> int

logic value__component__size2 : int

logic object__component__size2 : (int,character) farray -> int

logic value__alignment4 : int

logic object__alignment4 : (int,character) farray -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:(int,character) farray. (0 <= object__size4(a)))

axiom value__component__size_axiom2 : (0 <= value__component__size2)

axiom object__component__size_axiom2 :
  (forall a:(int,character) farray. (0 <= object__component__size2(a)))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:(int,character) farray. (0 <= object__alignment4(a)))

logic user_eq28 : (int,character) farray, (int,character) farray -> bool

type us_split_fields2 = { rec__configdata__accessstringt__text :
(int,character) farray; rec__configdata__accessstringt__length : accesstexti
}

function us_split_fields_Text__2__projection(a: us_split_fields2) : (int,character) farray =
  (a).rec__configdata__accessstringt__text

function us_split_fields_Length__3__projection(a: us_split_fields2) : accesstexti =
  (a).rec__configdata__accessstringt__length

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___8__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep2 = { us_split_fields3 : us_split_fields2
}

function us_rep___9__projection(a: us_rep2) : us_split_fields2 =
  (a).us_split_fields3

logic bool_eq31 : us_rep2, us_rep2 -> bool

axiom bool_eq_def28 :
  (forall a:us_rep2. forall b:us_rep2 [bool_eq31(a, b)].
  ((((bool_eq5(((a).us_split_fields3).rec__configdata__accessstringt__text,
  1, 12, ((b).us_split_fields3).rec__configdata__accessstringt__text, 1,
  12) = true) and
  (to_rep3(((a).us_split_fields3).rec__configdata__accessstringt__length) = to_rep3(((b).us_split_fields3).rec__configdata__accessstringt__length))) ->
  (bool_eq31(a, b) = true)) and
  ((not ((bool_eq5(((a).us_split_fields3).rec__configdata__accessstringt__text,
  1, 12, ((b).us_split_fields3).rec__configdata__accessstringt__text, 1,
  12) = true) and
  (to_rep3(((a).us_split_fields3).rec__configdata__accessstringt__length) = to_rep3(((b).us_split_fields3).rec__configdata__accessstringt__length)))) ->
  (bool_eq31(a, b) = false))))

logic value__size5 : int

logic object__size5 : us_rep2 -> int

logic value__alignment5 : int

logic object__alignment5 : us_rep2 -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 :
  (forall a:(int,character) farray. forall a1:accesstexti.
  (0 <= object__size5({ us_split_fields3 = {
  rec__configdata__accessstringt__text = a;
  rec__configdata__accessstringt__length = a1 } })))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:(int,character) farray. forall a1:accesstexti.
  (0 <= object__alignment5({ us_split_fields3 = {
  rec__configdata__accessstringt__text = a;
  rec__configdata__accessstringt__length = a1 } })))

logic configdata__accessstringt__text__first__bit : int

logic configdata__accessstringt__text__last__bit : int

logic configdata__accessstringt__text__position : int

axiom configdata__accessstringt__text__first__bit_axiom :
  (0 <= configdata__accessstringt__text__first__bit)

axiom configdata__accessstringt__text__last__bit_axiom :
  (configdata__accessstringt__text__first__bit <  configdata__accessstringt__text__last__bit)

axiom configdata__accessstringt__text__position_axiom :
  (0 <= configdata__accessstringt__text__position)

logic configdata__accessstringt__length__first__bit : int

logic configdata__accessstringt__length__last__bit : int

logic configdata__accessstringt__length__position : int

axiom configdata__accessstringt__length__first__bit_axiom :
  (0 <= configdata__accessstringt__length__first__bit)

axiom configdata__accessstringt__length__last__bit_axiom :
  (configdata__accessstringt__length__first__bit <  configdata__accessstringt__length__last__bit)

axiom configdata__accessstringt__length__position_axiom :
  (0 <= configdata__accessstringt__length__position)

logic user_eq29 : us_rep2, us_rep2 -> bool

logic dummy31 : (int,character) farray

logic dummy32 : accesstexti

type accessstringt__ref = { accessstringt__content : us_rep2
}

function accessstringt__ref___projection(a: accessstringt__ref) : us_rep2 =
  (a).accessstringt__content

type map__ref2 = { map__content2 : (int,us_rep2) farray
}

logic slide2 : (int,us_rep2) farray, int, int -> (int,us_rep2) farray

axiom slide_eq2 :
  (forall a:(int,us_rep2) farray.
  (forall first2:int [slide2(a, first2, first2)]. (slide2(a, first2,
  first2) = a)))

axiom slide_def2 :
  (forall a:(int,us_rep2) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat2 : (int,us_rep2) farray, int, int, (int,us_rep2) farray, int,
  int -> (int,us_rep2) farray

axiom concat_def2 :
  (forall a:(int,us_rep2) farray. forall b:(int,us_rep2) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat2(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat2(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat2(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton2 : us_rep2, int -> (int,us_rep2) farray

axiom singleton_def2 :
  (forall v:(int,character) farray. forall v1:accesstexti.
  (forall i:int [(singleton2({ us_split_fields3 = {
  rec__configdata__accessstringt__text = v;
  rec__configdata__accessstringt__length = v1 } }, i)[i])]. ((singleton2({
  us_split_fields3 = { rec__configdata__accessstringt__text = v;
  rec__configdata__accessstringt__length = v1 } }, i)[i]) = {
  us_split_fields3 = { rec__configdata__accessstringt__text = v;
  rec__configdata__accessstringt__length = v1 } })))

logic bool_eq32 : (int,us_rep2) farray, int, int, (int,us_rep2) farray, int,
  int -> bool

axiom bool_eq_def29 :
  (forall a:(int,us_rep2) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep2) farray. forall b__first:int. forall b__last:int
  [bool_eq32(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_178:int. ((((a__first <= temp___idx_178) and
  (temp___idx_178 <= a__last)) and (bool_eq31((a[temp___idx_178]),
  (b[((b__first - a__first) + temp___idx_178)])) = true)) or
  (not ((a__first <= temp___idx_178) and (temp___idx_178 <= a__last)))))) ->
  (bool_eq32(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_178:int. (((a__first <= temp___idx_178) and
  (temp___idx_178 <= a__last)) -> (bool_eq31((a[temp___idx_178]),
  (b[((b__first - a__first) + temp___idx_178)])) = true))))) -> (bool_eq32(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev2 :
  (forall a:(int,us_rep2) farray. forall b:(int,us_rep2) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq32(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_178:int. (((a__first <= temp___idx_178) and
  (temp___idx_178 <= a__last)) -> (bool_eq31((a[temp___idx_178]),
  (b[((b__first - a__first) + temp___idx_178)])) = true)))))))

logic accessstringlookup : (int,us_rep2) farray

logic attr__ATTRIBUTE_ADDRESS29 : int

logic configdata__accessstringlookup__aggregate_def : us_rep2,
  us_rep2 -> (int,us_rep2) farray

axiom def_axiom1 :
  (forall temp___180:(int,character) farray. forall temp___1801:accesstexti.
  forall temp___181:(int,character) farray. forall temp___1811:accesstexti.
  (((configdata__accessstringlookup__aggregate_def({ us_split_fields3 = {
  rec__configdata__accessstringt__text = temp___180;
  rec__configdata__accessstringt__length = temp___1801 } }, {
  us_split_fields3 = { rec__configdata__accessstringt__text = temp___181;
  rec__configdata__accessstringt__length = temp___1811 } })[1]) = {
  us_split_fields3 = { rec__configdata__accessstringt__text = temp___180;
  rec__configdata__accessstringt__length = temp___1801 } }) and
  ((configdata__accessstringlookup__aggregate_def({ us_split_fields3 = {
  rec__configdata__accessstringt__text = temp___180;
  rec__configdata__accessstringt__length = temp___1801 } }, {
  us_split_fields3 = { rec__configdata__accessstringt__text = temp___181;
  rec__configdata__accessstringt__length = temp___1811 } })[0]) = {
  us_split_fields3 = { rec__configdata__accessstringt__text = temp___181;
  rec__configdata__accessstringt__length = temp___1811 } })))

logic temp___String_Literal_183 : unit -> (int,character) farray

axiom temp___String_Literal_183__def_axiom :
  ((((((((((((to_rep((temp___String_Literal_183(void)[1])) = 97) and
  (to_rep((temp___String_Literal_183(void)[2])) = 108)) and
  (to_rep((temp___String_Literal_183(void)[3])) = 108)) and
  (to_rep((temp___String_Literal_183(void)[4])) = 104)) and
  (to_rep((temp___String_Literal_183(void)[5])) = 111)) and
  (to_rep((temp___String_Literal_183(void)[6])) = 117)) and
  (to_rep((temp___String_Literal_183(void)[7])) = 114)) and
  (to_rep((temp___String_Literal_183(void)[8])) = 115)) and
  (to_rep((temp___String_Literal_183(void)[9])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[10])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_183(void)[12])) = 32))

logic temp___String_Literal_184 : unit -> (int,character) farray

axiom temp___String_Literal_184__def_axiom :
  ((((((((((((to_rep((temp___String_Literal_184(void)[1])) = 119) and
  (to_rep((temp___String_Literal_184(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_184(void)[3])) = 114)) and
  (to_rep((temp___String_Literal_184(void)[4])) = 107)) and
  (to_rep((temp___String_Literal_184(void)[5])) = 105)) and
  (to_rep((temp___String_Literal_184(void)[6])) = 110)) and
  (to_rep((temp___String_Literal_184(void)[7])) = 103)) and
  (to_rep((temp___String_Literal_184(void)[8])) = 104)) and
  (to_rep((temp___String_Literal_184(void)[9])) = 111)) and
  (to_rep((temp___String_Literal_184(void)[10])) = 117)) and
  (to_rep((temp___String_Literal_184(void)[11])) = 114)) and
  (to_rep((temp___String_Literal_184(void)[12])) = 115))

logic attr__ATTRIBUTE_ADDRESS30 : int

type string5i

predicate in_range25(x: int) = ((1 <= x) and (x <= 5))

logic bool_eq33 : int, int -> bool

axiom bool_eq_def30 :
  (forall x:int. forall y:int [bool_eq33(x, y)]. (((x = y) -> (bool_eq33(x,
  y) = true)) and ((not (x = y)) -> (bool_eq33(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE25 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check25 : us_image -> prop

logic attr__ATTRIBUTE_VALUE25 : us_image -> int

logic user_eq30 : string5i, string5i -> bool

logic dummy33 : string5i

type string5i__ref = { string5i__content : string5i
}

function string5i__ref___projection(a: string5i__ref) : string5i =
  (a).string5i__content

logic c38b : int

logic attr__ATTRIBUTE_ADDRESS31 : int

logic attr__ATTRIBUTE_ADDRESS32 : int

logic attr__ATTRIBUTE_ADDRESS33 : int

logic attr__ATTRIBUTE_ADDRESS34 : int

logic c43b : int

logic attr__ATTRIBUTE_ADDRESS35 : int

logic attr__ATTRIBUTE_ADDRESS36 : int

logic attr__ATTRIBUTE_ADDRESS37 : int

logic attr__ATTRIBUTE_ADDRESS38 : int

logic c48b : int

logic attr__ATTRIBUTE_ADDRESS39 : int

logic attr__ATTRIBUTE_ADDRESS40 : int

logic attr__ATTRIBUTE_ADDRESS41 : int

logic attr__ATTRIBUTE_ADDRESS42 : int

logic temp___String_Literal_1287 : unit -> (int,character) farray

axiom temp___String_Literal_1287__def_axiom :
  (((((to_rep((temp___String_Literal_1287(void)[1])) = 48) and
  (to_rep((temp___String_Literal_1287(void)[2])) = 48)) and
  (to_rep((temp___String_Literal_1287(void)[3])) = 58)) and
  (to_rep((temp___String_Literal_1287(void)[4])) = 48)) and
  (to_rep((temp___String_Literal_1287(void)[5])) = 48))

logic temp___String_Literal_1288 : unit -> (int,character) farray

axiom temp___String_Literal_1288__def_axiom :
  (((((to_rep((temp___String_Literal_1288(void)[1])) = 48) and
  (to_rep((temp___String_Literal_1288(void)[2])) = 48)) and
  (to_rep((temp___String_Literal_1288(void)[3])) = 58)) and
  (to_rep((temp___String_Literal_1288(void)[4])) = 48)) and
  (to_rep((temp___String_Literal_1288(void)[5])) = 48))

logic temp___String_Literal_1289 : unit -> (int,character) farray

axiom temp___String_Literal_1289__def_axiom :
  (((((to_rep((temp___String_Literal_1289(void)[1])) = 48) and
  (to_rep((temp___String_Literal_1289(void)[2])) = 48)) and
  (to_rep((temp___String_Literal_1289(void)[3])) = 58)) and
  (to_rep((temp___String_Literal_1289(void)[4])) = 48)) and
  (to_rep((temp___String_Literal_1289(void)[5])) = 48))

axiom alarmsilenttitle__def_axiom :
  (alarmsilenttitle = temp___String_Literal_150(void))

axiom latchunlocktitle__def_axiom :
  (latchunlocktitle = temp___String_Literal_151(void))

axiom tokenremovaltitle__def_axiom :
  (tokenremovaltitle = temp___String_Literal_152(void))

axiom fingerwaittitle__def_axiom :
  (fingerwaittitle = temp___String_Literal_153(void))

axiom clearancetitle__def_axiom :
  (clearancetitle = temp___String_Literal_154(void))

axiom workingstarttitle__def_axiom :
  (workingstarttitle = temp___String_Literal_155(void))

axiom workingendtitle__def_axiom :
  (workingendtitle = temp___String_Literal_156(void))

axiom maxauthdurationtitle__def_axiom :
  (maxauthdurationtitle = temp___String_Literal_157(void))

axiom accesspolicytitle__def_axiom :
  (accesspolicytitle = temp___String_Literal_158(void))

axiom minentryclasstitle__def_axiom :
  (minentryclasstitle = temp___String_Literal_159(void))

axiom minpreservedlogsizetitle__def_axiom :
  (minpreservedlogsizetitle = temp___String_Literal_160(void))

axiom alarmthresholdtitle__def_axiom :
  (alarmthresholdtitle = temp___String_Literal_161(void))

axiom systemmaxfartitle__def_axiom :
  (systemmaxfartitle = temp___String_Literal_162(void))

axiom classstringlookup__def_axiom :
  (classstringlookup = configdata__classstringlookup__aggregate_def({
  us_split_fields1 = { rec__configdata__classstringt__text =
  temp___String_Literal_172(void); rec__configdata__classstringt__length =
  of_rep2(8) } }, { us_split_fields1 = {
  rec__configdata__classstringt__text = temp___String_Literal_173(void);
  rec__configdata__classstringt__length = of_rep2(12) } }, {
  us_split_fields1 = { rec__configdata__classstringt__text =
  temp___String_Literal_174(void); rec__configdata__classstringt__length =
  of_rep2(10) } }, { us_split_fields1 = {
  rec__configdata__classstringt__text = temp___String_Literal_175(void);
  rec__configdata__classstringt__length = of_rep2(12) } }, {
  us_split_fields1 = { rec__configdata__classstringt__text =
  temp___String_Literal_176(void); rec__configdata__classstringt__length =
  of_rep2(6) } }, { us_split_fields1 = {
  rec__configdata__classstringt__text = temp___String_Literal_177(void);
  rec__configdata__classstringt__length = of_rep2(9) } }))

axiom accessstringlookup__def_axiom :
  (accessstringlookup = configdata__accessstringlookup__aggregate_def({
  us_split_fields3 = { rec__configdata__accessstringt__text =
  temp___String_Literal_183(void); rec__configdata__accessstringt__length =
  of_rep3(8) } }, { us_split_fields3 = {
  rec__configdata__accessstringt__text = temp___String_Literal_184(void);
  rec__configdata__accessstringt__length = of_rep3(12) } }))

logic configfile : us_rep

logic c39b : (int,character) farray

logic localtext : (int,character) farray

logic localvalue : int

logic c44b : (int,character) farray

logic localtext1 : (int,character) farray

logic localvalue1 : int

logic c49b : (int,character) farray

logic localtext2 : (int,character) farray

logic localvalue2 : int

logic o : classtexti

logic o1 : (int,character) farray

logic o2 : classtexti

logic o3 : classtexti

logic o4 : (int,character) farray

logic o5 : classtexti

logic o6 : classtexti

logic o7 : (int,character) farray

logic o8 : classtexti

logic o9 : classtexti

logic o10 : (int,character) farray

logic o11 : classtexti

logic o12 : classtexti

logic o13 : (int,character) farray

logic o14 : classtexti

logic o15 : classtexti

logic o16 : (int,character) farray

logic o17 : classtexti

logic o18 : (int,character) farray

logic o19 : classtexti

logic o20 : (int,character) farray

logic o21 : classtexti

logic o22 : (int,character) farray

logic o23 : classtexti

logic o24 : (int,character) farray

logic o25 : classtexti

logic o26 : (int,character) farray

logic o27 : classtexti

logic o28 : (int,character) farray

logic o29 : classtexti

logic temp___1303 : (int,us_rep1) farray

logic o30 : accesstexti

logic o31 : (int,character) farray

logic o32 : accesstexti

logic o33 : accesstexti

logic o34 : (int,character) farray

logic o35 : accesstexti

logic o36 : (int,character) farray

logic o37 : accesstexti

logic o38 : (int,character) farray

logic o39 : accesstexti

logic temp___1304 : (int,us_rep2) farray

logic o40 : int

logic o41 : character

logic o42 : (int,character) farray

logic o43 : character

logic o44 : (int,character) farray

logic o45 : int

logic o46 : character

logic o47 : (int,character) farray

logic o48 : character

logic o49 : (int,character) farray

logic o50 : int

logic o51 : character

logic o52 : (int,character) farray

logic o53 : character

logic o54 : (int,character) farray

logic o55 : int

logic o56 : character

logic o57 : (int,character) farray

logic o58 : character

logic o59 : (int,character) farray

logic o60 : int

logic o61 : character

logic o62 : (int,character) farray

logic o63 : character

logic o64 : (int,character) farray

logic o65 : int

logic o66 : character

logic o67 : (int,character) farray

logic o68 : character

logic o69 : (int,character) farray

logic result : bool

logic success : bool

logic configfile1 : us_rep

logic success1 : bool

logic configfile2 : us_rep

logic result1 : (int,character) farray

logic localtext3 : (int,character) farray

logic result2 : int

logic localvalue3 : int

logic result3 : (int,character) farray

logic localtext4 : (int,character) farray

logic result4 : (int,character) farray

logic localtext5 : (int,character) farray

logic result5 : int

logic localvalue4 : int

logic result6 : (int,character) farray

logic localtext6 : (int,character) farray

logic result7 : (int,character) farray

logic localtext7 : (int,character) farray

logic result8 : (int,character) farray

logic c39b1 : (int,character) farray

logic result9 : (int,character) farray

logic localtext8 : (int,character) farray

logic result10 : int

logic localvalue5 : int

logic result11 : (int,character) farray

logic localtext9 : (int,character) farray

logic result12 : (int,character) farray

logic localtext10 : (int,character) farray

logic result13 : int

logic localvalue6 : int

logic result14 : (int,character) farray

logic localtext11 : (int,character) farray

logic result15 : (int,character) farray

logic localtext12 : (int,character) farray

logic result16 : (int,character) farray

logic c44b1 : (int,character) farray

logic result17 : (int,character) farray

logic localtext13 : (int,character) farray

logic result18 : int

logic localvalue7 : int

logic result19 : (int,character) farray

logic localtext14 : (int,character) farray

logic result20 : (int,character) farray

logic localtext15 : (int,character) farray

logic result21 : int

logic localvalue8 : int

logic result22 : (int,character) farray

logic localtext16 : (int,character) farray

logic result23 : (int,character) farray

logic localtext17 : (int,character) farray

logic result24 : (int,character) farray

logic c49b1 : (int,character) farray

axiom H : (temp___String_Literal_150(void) = alarmsilenttitle)

axiom H1 : (temp___String_Literal_151(void) = latchunlocktitle)

axiom H2 : (temp___String_Literal_152(void) = tokenremovaltitle)

axiom H3 : (temp___String_Literal_153(void) = fingerwaittitle)

axiom H4 : (temp___String_Literal_154(void) = clearancetitle)

axiom H5 : (temp___String_Literal_155(void) = workingstarttitle)

axiom H6 : (temp___String_Literal_156(void) = workingendtitle)

axiom H7 : (temp___String_Literal_157(void) = maxauthdurationtitle)

axiom H8 : (temp___String_Literal_158(void) = accesspolicytitle)

axiom H9 : (temp___String_Literal_159(void) = minentryclasstitle)

axiom H10 : (temp___String_Literal_160(void) = minpreservedlogsizetitle)

axiom H11 : (temp___String_Literal_161(void) = alarmthresholdtitle)

axiom H12 : (temp___String_Literal_162(void) = systemmaxfartitle)

axiom H13 : (to_rep2(o15) = 9)

axiom H14 : (temp___String_Literal_177(void) = o16)

axiom H15 : (o15 = o17)

axiom H16 : (o18 = o16)

axiom H17 : (o19 = o17)

axiom H18 : (to_rep2(o12) = 6)

axiom H19 : (temp___String_Literal_176(void) = o13)

axiom H20 : (o12 = o14)

axiom H21 : (o20 = o13)

axiom H22 : (o21 = o14)

axiom H23 : (to_rep2(o9) = 12)

axiom H24 : (temp___String_Literal_175(void) = o10)

axiom H25 : (o9 = o11)

axiom H26 : ((o22 = o10) and (o23 = o11))

axiom H27 : (to_rep2(o6) = 10)

axiom H28 : (temp___String_Literal_174(void) = o7)

axiom H29 : (o6 = o8)

axiom H30 : ((o24 = o7) and (o25 = o8))

axiom H31 : (to_rep2(o3) = 12)

axiom H32 : (temp___String_Literal_173(void) = o4)

axiom H33 : (o3 = o5)

axiom H34 : ((o26 = o4) and (o27 = o5))

axiom H35 : (to_rep2(o) = 8)

axiom H36 : (temp___String_Literal_172(void) = o1)

axiom H37 : (o = o2)

axiom H38 : ((o28 = o1) and (o29 = o2))

axiom H39 : (temp___1303 = configdata__classstringlookup__aggregate_def({
  us_split_fields1 = { rec__configdata__classstringt__text = o28;
  rec__configdata__classstringt__length = o29 } }, { us_split_fields1 = {
  rec__configdata__classstringt__text = o26;
  rec__configdata__classstringt__length = o27 } }, { us_split_fields1 = {
  rec__configdata__classstringt__text = o24;
  rec__configdata__classstringt__length = o25 } }, { us_split_fields1 = {
  rec__configdata__classstringt__text = o22;
  rec__configdata__classstringt__length = o23 } }, { us_split_fields1 = {
  rec__configdata__classstringt__text = o20;
  rec__configdata__classstringt__length = o21 } }, { us_split_fields1 = {
  rec__configdata__classstringt__text = o18;
  rec__configdata__classstringt__length = o19 } }))

axiom H40 : (temp___1303 = classstringlookup)

axiom H41 : (to_rep3(o33) = 12)

axiom H42 : ((o34 = temp___String_Literal_184(void)) and (o35 = o33))

axiom H43 : ((o36 = o34) and (o37 = o35))

axiom H44 : (to_rep3(o30) = 8)

axiom H45 : ((o31 = temp___String_Literal_183(void)) and (o32 = o30))

axiom H46 : ((o38 = o31) and (o39 = o32))

axiom H47 : (temp___1304 = configdata__accessstringlookup__aggregate_def({
  us_split_fields3 = { rec__configdata__accessstringt__text = o38;
  rec__configdata__accessstringt__length = o39 } }, { us_split_fields3 = {
  rec__configdata__accessstringt__text = o36;
  rec__configdata__accessstringt__length = o37 } }))

axiom H48 : (temp___1304 = accessstringlookup)

axiom H49 : in_range8(thelatchunlockduration)

axiom H50 : in_range8(thealarmsilentduration)

axiom H51 : in_range8(thefingerwaitduration)

axiom H52 : in_range8(thetokenremovalduration)

axiom H53 : in_range5(theenclaveclearance)

axiom H54 : in_range4(theworkinghoursstart)

axiom H55 : in_range4(theworkinghoursend)

axiom H56 : in_range4(themaxauthduration)

axiom H57 : in_range9(theaccesspolicy)

axiom H58 : in_range5(theminentryclass)

axiom H59 : in_range6(theminpreservedlogsize)

axiom H60 : in_range6(thealarmthresholdsize)

axiom H61 : in_range7(thesystemmaxfar)

axiom H62 : (result = exists__(configfile))

axiom H63 : ((not (result = true)) -> (configfile1 = configfile2))

axiom H64 : ((not (result = true)) -> (success = success1))

axiom H65 : (success = true)

axiom H66 : (theworkinghoursstart = c38b)

axiom H67 : in_range4(c38b)

axiom H68 : (result1 = localtext)

axiom H69 : (localtext3 = temp___String_Literal_1287(void))

axiom H70 : ((0 <= 864000) -> in_range4(localvalue))

axiom H71 : (result2 = localvalue)

axiom H72 : (localvalue3 = comp_div(c38b,36000))

 (* File "configdata.adb", line 1359, characters 0-0 *)
goal WP_parameter_def : in_range3((48 + comp_div(localvalue3,10)))
