(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort statust 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (statust statust) Bool)
(declare-const dummy statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant ((temp___expr_504 Int) (temp___is_init_501 Bool) (temp___skip_constant_502 Bool) (temp___do_toplevel_503 Bool)) Bool (=> (or (= temp___is_init_501 true) (<= 0 1)) (in_range1 temp___expr_504)))
(declare-sort yearst 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1901 x) (<= x 2099)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (yearst yearst) Bool)
(declare-const dummy1 yearst)
(declare-datatypes () ((yearst__ref (mk_yearst__ref (yearst__content yearst)))))
(define-fun yearst__ref___projection ((a yearst__ref)) yearst (yearst__content a))
(declare-fun to_rep (yearst) Int)
(declare-fun of_rep (Int) yearst)
(assert (forall ((x yearst)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x yearst)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort monthst 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (monthst monthst) Bool)
(declare-const dummy2 monthst)
(declare-datatypes () ((monthst__ref (mk_monthst__ref (monthst__content monthst)))))
(define-fun monthst__ref___projection ((a monthst__ref)) monthst (monthst__content a))
(declare-fun to_rep1 (monthst) Int)
(declare-fun of_rep1 (Int) monthst)
(assert (forall ((x monthst)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x monthst)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort dayst 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (dayst dayst) Bool)
(declare-const dummy3 dayst)
(declare-datatypes () ((dayst__ref (mk_dayst__ref (dayst__content dayst)))))
(define-fun dayst__ref___projection ((a dayst__ref)) dayst (dayst__content a))
(declare-fun to_rep2 (dayst) Int)
(declare-fun of_rep2 (Int) dayst)
(assert (forall ((x dayst)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x dayst)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort millisecst 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 86399999)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (millisecst millisecst) Bool)
(declare-const dummy4 millisecst)
(declare-datatypes () ((millisecst__ref (mk_millisecst__ref (millisecst__content millisecst)))))
(define-fun millisecst__ref___projection ((a millisecst__ref)) millisecst (millisecst__content a))
(declare-fun to_rep3 (millisecst) Int)
(declare-fun of_rep3 (Int) millisecst)
(assert (forall ((x millisecst)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x millisecst)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__clock__timet__year yearst) (rec__clock__timet__month monthst) (rec__clock__timet__day dayst) (rec__clock__timet__millisec millisecst)))))
(define-fun us_split_fields_Year__projection ((a us_split_fields)) yearst (rec__clock__timet__year a))
(define-fun us_split_fields_Month__projection ((a us_split_fields)) monthst (rec__clock__timet__month a))
(define-fun us_split_fields_Day__projection ((a us_split_fields)) dayst (rec__clock__timet__day a))
(define-fun us_split_fields_MilliSec__projection ((a us_split_fields)) millisecst (rec__clock__timet__millisec a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___4__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (to_rep (rec__clock__timet__year (us_split_fields1 a))) (to_rep (rec__clock__timet__year (us_split_fields1 b)))) (= (to_rep1 (rec__clock__timet__month (us_split_fields1 a))) (to_rep1 (rec__clock__timet__month (us_split_fields1 b))))) (= (to_rep2 (rec__clock__timet__day (us_split_fields1 a))) (to_rep2 (rec__clock__timet__day (us_split_fields1 b))))) (= (to_rep3 (rec__clock__timet__millisec (us_split_fields1 a))) (to_rep3 (rec__clock__timet__millisec (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const clock__timet__year__first__bit Int)
(declare-const clock__timet__year__last__bit Int)
(declare-const clock__timet__year__position Int)
(assert (<= 0 clock__timet__year__first__bit))
(assert (< clock__timet__year__first__bit clock__timet__year__last__bit))
(assert (<= 0 clock__timet__year__position))
(declare-const clock__timet__month__first__bit Int)
(declare-const clock__timet__month__last__bit Int)
(declare-const clock__timet__month__position Int)
(assert (<= 0 clock__timet__month__first__bit))
(assert (< clock__timet__month__first__bit clock__timet__month__last__bit))
(assert (<= 0 clock__timet__month__position))
(declare-const clock__timet__day__first__bit Int)
(declare-const clock__timet__day__last__bit Int)
(declare-const clock__timet__day__position Int)
(assert (<= 0 clock__timet__day__first__bit))
(assert (< clock__timet__day__first__bit clock__timet__day__last__bit))
(assert (<= 0 clock__timet__day__position))
(declare-const clock__timet__millisec__first__bit Int)
(declare-const clock__timet__millisec__last__bit Int)
(declare-const clock__timet__millisec__position Int)
(assert (<= 0 clock__timet__millisec__first__bit))
(assert (< clock__timet__millisec__first__bit clock__timet__millisec__last__bit))
(assert (<= 0 clock__timet__millisec__position))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((timet__ref (mk_timet__ref (timet__content us_rep)))))
(define-fun timet__ref___projection ((a timet__ref)) us_rep (timet__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun thecurrenttime (us_split_fields us_private) us_rep)
(declare-fun thecurrenttime__function_guard (us_rep us_split_fields us_private) Bool)
(assert true)
(assert (forall ((clock__currenttimevar__fields us_split_fields)) (forall ((clock__currenttime us_private)) (! (= (thecurrenttime clock__currenttimevar__fields clock__currenttime) (mk___rep clock__currenttimevar__fields)) :pattern ((thecurrenttime clock__currenttimevar__fields clock__currenttime))))))
(declare-fun greaterthanorequal (us_rep us_rep) Bool)
(declare-fun greaterthanorequal__function_guard (Bool us_rep us_rep) Bool)
(declare-fun greaterthan (us_rep us_rep) Bool)
(declare-fun greaterthan__function_guard (Bool us_rep us_rep) Bool)
(assert true)
(assert (forall ((left us_rep) (right us_rep)) (! (= (= (greaterthanorequal left right) true) (or (= (greaterthan left right) true) (= (bool_eq left right) true))) :pattern ((greaterthanorequal left right)))))
(declare-sort logfileindext 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (logfileindext logfileindext) Bool)
(declare-const dummy6 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep4 (logfileindext) Int)
(declare-fun of_rep4 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x logfileindext)) (! (in_range6 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq7 (logentrycountt logentrycountt) Bool)
(declare-const dummy7 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep5 (logentrycountt) Int)
(declare-fun of_rep5 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x logentrycountt)) (! (in_range7 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int logfileindext))))))
(declare-fun slide ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (logfileindext Int) (Array Int logfileindext))
(assert (forall ((v logfileindext)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq1 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep4 (select a temp___idx_150)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_150))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep4 (select a temp___idx_150)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_150)))))))))))
(declare-fun compare ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) Int)
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq1 a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq1 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep4 (select a (+ i 1))) (to_rep4 (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq1 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep4 (select b (+ i 1))) (to_rep4 (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-const dummy8 (Array Int logfileindext))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int logfileindext)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int logfileindext)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq8 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-sort logfilecountt 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq9 (logfilecountt logfilecountt) Bool)
(declare-const dummy9 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep6 (logfilecountt) Int)
(declare-fun of_rep6 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x logfilecountt)) (! (in_range8 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields2)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields2)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___8__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq2 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (bool_eq1 (rec__auditlog__logfilelistt__list (us_split_fields3 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields3 b)) 1 17) true) (= (to_rep4 (rec__auditlog__logfilelistt__head (us_split_fields3 a))) (to_rep4 (rec__auditlog__logfilelistt__head (us_split_fields3 b))))) (= (to_rep4 (rec__auditlog__logfilelistt__lasti (us_split_fields3 a))) (to_rep4 (rec__auditlog__logfilelistt__lasti (us_split_fields3 b))))) (= (to_rep6 (rec__auditlog__logfilelistt__length (us_split_fields3 a))) (to_rep6 (rec__auditlog__logfilelistt__length (us_split_fields3 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq10 (us_rep1 us_rep1) Bool)
(declare-const dummy10 us_rep1)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep1)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep1 (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq11 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy11 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep7 (fileentrycountt) Int)
(declare-fun of_rep7 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range9 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int fileentrycountt))))))
(declare-fun slide1 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (fileentrycountt Int) (Array Int fileentrycountt))
(assert (forall ((v fileentrycountt)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq3 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep7 (select a temp___idx_151)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_151))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep7 (select a temp___idx_151)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_151)))))))))))
(declare-fun compare1 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) Int)
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq3 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep7 (select a (+ i 1))) (to_rep7 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq3 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep7 (select b (+ i 1))) (to_rep7 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const dummy12 (Array Int fileentrycountt))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq12 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep1) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields4)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields4)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields4)) us_rep1 (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields4)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___9__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq4 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (to_rep4 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 a))) (to_rep4 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 b)))) (= (to_rep5 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 a))) (to_rep5 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 b))))) (= (bool_eq2 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 b))) true)) (= (bool_eq3 (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 b)) 1 17) true)) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep2) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep2) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq13 (us_rep2 us_rep2) Bool)
(declare-const dummy13 us_rep2)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep2)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep2 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun temp___1100 (Int) (Array Int logfileindext))
(assert (forall ((temp___1102 Int)) (forall ((temp___1103 Int)) (= (select (temp___1100 temp___1102) temp___1103) (of_rep4 temp___1102)))))
(declare-fun temp___1104 (Int) (Array Int fileentrycountt))
(assert (forall ((temp___1106 Int)) (forall ((temp___1107 Int)) (= (select (temp___1104 temp___1106) temp___1107) (of_rep7 temp___1106)))))
(define-fun dynamic_invariant1 ((temp___expr_1094 us_rep2) (temp___is_init_1091 Bool) (temp___skip_constant_1092 Bool) (temp___do_toplevel_1093 Bool)) Bool (= (valid_numberlogentries (to_rep4 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___expr_1094))) (to_rep5 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___expr_1094))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___expr_1094)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___expr_1094))) true))
(define-fun default_initial_assumption ((temp___expr_1098 us_rep2) (temp___skip_top_level_1099 Bool)) Bool (and (and (and (= (to_rep4 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___expr_1098))) 1) (= (to_rep5 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___expr_1098))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___expr_1098)) (mk___rep1 (mk___split_fields1 (temp___1100 1) (of_rep4 1) (of_rep4 1) (of_rep6 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___expr_1098)) (temp___1104 0))))
(define-fun type_invariant ((temp___1108 us_rep2)) Bool (= (valid_numberlogentries (to_rep4 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___1108))) (to_rep5 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___1108))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___1108)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___1108))) true))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep3 0)
(declare-fun bool_eq5 (us_rep3 us_rep3) Bool)
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep3) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep3) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep3)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment5 a))))
(declare-fun user_eq14 (us_rep3 us_rep3) Bool)
(declare-const dummy14 us_rep3)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep3)))))
(define-fun t__ref___projection ((a t__ref)) us_rep3 (t__content a))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int us_rep3))))))
(declare-fun slide2 ((Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int us_rep3))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int us_rep3) Int Int (Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (us_rep3 Int) (Array Int us_rep3))
(assert (forall ((v us_rep3)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq6 ((a (Array Int us_rep3)) (a__first Int) (a__last Int) (b (Array Int us_rep3)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq5 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true)))) true false))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq5 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort filestatust 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq15 (filestatust filestatust) Bool)
(declare-const dummy15 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep8 (filestatust) Int)
(declare-fun of_rep8 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x filestatust)) (! (in_range10 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int filestatust))))))
(declare-fun slide3 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first Int)) (! (= (slide3 a first first) a) :pattern ((slide3 a first first))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(declare-fun concat4 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat4 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton4 (filestatust Int) (Array Int filestatust))
(assert (forall ((v filestatust)) (forall ((i Int)) (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i))))))
(define-fun bool_eq7 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep8 (select a temp___idx_153)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_153))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq7 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep8 (select a temp___idx_153)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_153)))))))))))
(declare-fun compare2 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) Int)
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare2 a a_first a_last b b_first b_last) 0) (= (bool_eq7 a a_first a_last b b_first b_last) true)) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare2 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq7 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep8 (select a (+ i 1))) (to_rep8 (select b (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare2 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq7 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep8 (select b (+ i 1))) (to_rep8 (select a (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort t 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq16 (t t) Bool)
(declare-const dummy16 t)
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 t)))))
(define-fun t__ref___2__projection ((a t__ref1)) t (t__content1 a))
(define-fun dynamic_invariant2 ((temp___expr_1260 Int) (temp___is_init_1257 Bool) (temp___skip_constant_1258 Bool) (temp___do_toplevel_1259 Bool)) Bool (=> (or (= temp___is_init_1257 true) (<= 0 1)) (in_range11 temp___expr_1260)))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun islocked (Int us_private us_split_fields) Bool)
(declare-fun islocked__function_guard (Bool Int us_private us_split_fields) Bool)
(assert true)
(assert (forall ((latch__currentlatch Int)) (forall ((latch__state us_private)) (forall ((latch__latchtimeout__fields us_split_fields)) (! (= (= (islocked latch__currentlatch latch__state latch__latchtimeout__fields) true) (= latch__currentlatch 0)) :pattern ((islocked latch__currentlatch latch__state latch__latchtimeout__fields)))))))
(declare-fun alarm_timeout (us_private) us_rep)
(declare-fun alarm_timeout__function_guard (us_rep us_private) Bool)
(assert true)
(declare-fun thecurrentdoor (us_private) Int)
(declare-fun thecurrentdoor__function_guard (Int us_private) Bool)
(declare-sort t1 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq17 (t1 t1) Bool)
(declare-const dummy17 t1)
(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 t1)))))
(define-fun t__ref___3__projection ((a t__ref2)) t1 (t__content2 a))
(define-fun dynamic_invariant3 ((temp___expr_1282 Int) (temp___is_init_1279 Bool) (temp___skip_constant_1280 Bool) (temp___do_toplevel_1281 Bool)) Bool (=> (or (= temp___is_init_1279 true) (<= 0 1)) (in_range12 temp___expr_1282)))
(assert (forall ((door__state us_private)) (! (dynamic_invariant3 (thecurrentdoor door__state) true false true) :pattern ((thecurrentdoor door__state)))))
(declare-fun thedooralarm (us_private) Int)
(declare-fun thedooralarm__function_guard (Int us_private) Bool)
(assert (forall ((door__state us_private)) (! (dynamic_invariant (thedooralarm door__state) true false true) :pattern ((thedooralarm door__state)))))
(declare-sort namecountt 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 40)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq18 (namecountt namecountt) Bool)
(declare-const dummy18 namecountt)
(declare-datatypes () ((namecountt__ref (mk_namecountt__ref (namecountt__content namecountt)))))
(define-fun namecountt__ref___projection ((a namecountt__ref)) namecountt (namecountt__content a))
(declare-fun to_rep9 (namecountt) Int)
(declare-fun of_rep9 (Int) namecountt)
(assert (forall ((x namecountt)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x namecountt)) (! (in_range13 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-sort character 0)
(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq19 (character character) Bool)
(declare-const dummy19 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep10 (character) Int)
(declare-fun of_rep10 (Int) character)
(assert (forall ((x character)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x character)) (! (in_range14 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x Int)) (! (=> (in_range14 x) (= (to_rep10 (of_rep10 x)) x)) :pattern ((to_rep10 (of_rep10 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int character))))))
(declare-fun slide4 ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide4 a first first) a) :pattern ((slide4 a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(declare-fun concat5 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat5 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat5 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat5 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton5 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton5 v i) i) v) :pattern ((select (singleton5 v i) i))))))
(define-fun bool_eq8 ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep10 (select a temp___idx_78)) (to_rep10 (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq8 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep10 (select a temp___idx_78)) (to_rep10 (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare3 ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare3 a a_first a_last b b_first b_last) 0) (= (bool_eq8 a a_first a_last b b_first b_last) true)) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare3 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq8 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep10 (select a (+ i 1))) (to_rep10 (select b (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare3 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq8 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep10 (select b (+ i 1))) (to_rep10 (select a (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(declare-const dummy20 (Array Int character))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int character)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int character))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment6 a))))
(declare-fun user_eq20 ((Array Int character) (Array Int character)) Bool)
(declare-sort issueridt 0)
(define-fun in_range15 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq21 (issueridt issueridt) Bool)
(declare-const dummy21 issueridt)
(declare-datatypes () ((issueridt__ref (mk_issueridt__ref (issueridt__content issueridt)))))
(define-fun issueridt__ref___projection ((a issueridt__ref)) issueridt (issueridt__content a))
(declare-fun to_rep11 (issueridt) Int)
(declare-fun of_rep11 (Int) issueridt)
(assert (forall ((x issueridt)) (! (= (of_rep11 (to_rep11 x)) x) :pattern ((to_rep11 x)))))
(assert (forall ((x issueridt)) (! (in_range15 (to_rep11 x)) :pattern ((to_rep11 x)))))
(assert (forall ((x Int)) (! (=> (in_range15 x) (= (to_rep11 (of_rep11 x)) x)) :pattern ((to_rep11 (of_rep11 x))))))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__cryptotypes__issuert__id issueridt) (rec__cryptotypes__issuert__namelength namecountt) (rec__cryptotypes__issuert__name (Array Int character))))))
(define-fun us_split_fields_ID__projection ((a us_split_fields6)) issueridt (rec__cryptotypes__issuert__id a))
(define-fun us_split_fields_NameLength__projection ((a us_split_fields6)) namecountt (rec__cryptotypes__issuert__namelength a))
(define-fun us_split_fields_Name__projection ((a us_split_fields6)) (Array Int character) (rec__cryptotypes__issuert__name a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep4 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___projection ((a us_rep4)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq9 ((a us_rep4) (b us_rep4)) Bool (ite (and (and (= (to_rep11 (rec__cryptotypes__issuert__id (us_split_fields7 a))) (to_rep11 (rec__cryptotypes__issuert__id (us_split_fields7 b)))) (= (to_rep9 (rec__cryptotypes__issuert__namelength (us_split_fields7 a))) (to_rep9 (rec__cryptotypes__issuert__namelength (us_split_fields7 b))))) (= (bool_eq8 (rec__cryptotypes__issuert__name (us_split_fields7 a)) 1 40 (rec__cryptotypes__issuert__name (us_split_fields7 b)) 1 40) true)) true false))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep4) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep4) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep4)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment7 a))))
(declare-const cryptotypes__issuert__id__first__bit Int)
(declare-const cryptotypes__issuert__id__last__bit Int)
(declare-const cryptotypes__issuert__id__position Int)
(assert (<= 0 cryptotypes__issuert__id__first__bit))
(assert (< cryptotypes__issuert__id__first__bit cryptotypes__issuert__id__last__bit))
(assert (<= 0 cryptotypes__issuert__id__position))
(declare-const cryptotypes__issuert__namelength__first__bit Int)
(declare-const cryptotypes__issuert__namelength__last__bit Int)
(declare-const cryptotypes__issuert__namelength__position Int)
(assert (<= 0 cryptotypes__issuert__namelength__first__bit))
(assert (< cryptotypes__issuert__namelength__first__bit cryptotypes__issuert__namelength__last__bit))
(assert (<= 0 cryptotypes__issuert__namelength__position))
(declare-const cryptotypes__issuert__name__first__bit Int)
(declare-const cryptotypes__issuert__name__last__bit Int)
(declare-const cryptotypes__issuert__name__position Int)
(assert (<= 0 cryptotypes__issuert__name__first__bit))
(assert (< cryptotypes__issuert__name__first__bit cryptotypes__issuert__name__last__bit))
(assert (<= 0 cryptotypes__issuert__name__position))
(declare-fun user_eq22 (us_rep4 us_rep4) Bool)
(declare-const dummy22 us_rep4)
(declare-datatypes () ((issuert__ref (mk_issuert__ref (issuert__content us_rep4)))))
(define-fun issuert__ref___projection ((a issuert__ref)) us_rep4 (issuert__content a))
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__keystore__optionalprivatekeyt__ispresent Bool) (rec__keystore__optionalprivatekeyt__owner us_rep4)))))
(define-fun us_split_fields_IsPresent__projection ((a us_split_fields8)) Bool (rec__keystore__optionalprivatekeyt__ispresent a))
(define-fun us_split_fields_Owner__projection ((a us_split_fields8)) us_rep4 (rec__keystore__optionalprivatekeyt__owner a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___15__projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep5 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___16__projection ((a us_rep5)) us_split_fields8 (us_split_fields9 a))
(define-fun bool_eq10 ((a us_rep5) (b us_rep5)) Bool (ite (and (= (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields9 a)) (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields9 b))) (= (bool_eq9 (rec__keystore__optionalprivatekeyt__owner (us_split_fields9 a)) (rec__keystore__optionalprivatekeyt__owner (us_split_fields9 b))) true)) true false))
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep5) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep5) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep5)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment8 a))))
(declare-const keystore__optionalprivatekeyt__ispresent__first__bit Int)
(declare-const keystore__optionalprivatekeyt__ispresent__last__bit Int)
(declare-const keystore__optionalprivatekeyt__ispresent__position Int)
(assert (<= 0 keystore__optionalprivatekeyt__ispresent__first__bit))
(assert (< keystore__optionalprivatekeyt__ispresent__first__bit keystore__optionalprivatekeyt__ispresent__last__bit))
(assert (<= 0 keystore__optionalprivatekeyt__ispresent__position))
(declare-const keystore__optionalprivatekeyt__owner__first__bit Int)
(declare-const keystore__optionalprivatekeyt__owner__last__bit Int)
(declare-const keystore__optionalprivatekeyt__owner__position Int)
(assert (<= 0 keystore__optionalprivatekeyt__owner__first__bit))
(assert (< keystore__optionalprivatekeyt__owner__first__bit keystore__optionalprivatekeyt__owner__last__bit))
(assert (<= 0 keystore__optionalprivatekeyt__owner__position))
(declare-fun user_eq23 (us_rep5 us_rep5) Bool)
(declare-const dummy23 us_rep5)
(declare-datatypes () ((optionalprivatekeyt__ref (mk_optionalprivatekeyt__ref (optionalprivatekeyt__content us_rep5)))))
(define-fun optionalprivatekeyt__ref___projection ((a optionalprivatekeyt__ref)) us_rep5 (optionalprivatekeyt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-fun privatekeypresent (us_split_fields8 us_private) Bool)
(declare-fun privatekeypresent__function_guard (Bool us_split_fields8 us_private) Bool)
(assert true)
(assert (forall ((keystore__thistisinfo__fields us_split_fields8)) (forall ((keystore__state us_private)) (! (= (= (privatekeypresent keystore__thistisinfo__fields keystore__state) true) (= (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields9 (mk___rep4 keystore__thistisinfo__fields))) true)) :pattern ((privatekeypresent keystore__thistisinfo__fields keystore__state))))))
(declare-sort statscount 0)
(define-fun in_range16 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq24 (statscount statscount) Bool)
(declare-const dummy24 statscount)
(declare-datatypes () ((statscount__ref (mk_statscount__ref (statscount__content statscount)))))
(define-fun statscount__ref___projection ((a statscount__ref)) statscount (statscount__content a))
(declare-fun to_rep12 (statscount) Int)
(declare-fun of_rep12 (Int) statscount)
(assert (forall ((x statscount)) (! (= (of_rep12 (to_rep12 x)) x) :pattern ((to_rep12 x)))))
(assert (forall ((x statscount)) (! (in_range16 (to_rep12 x)) :pattern ((to_rep12 x)))))
(assert (forall ((x Int)) (! (=> (in_range16 x) (= (to_rep12 (of_rep12 x)) x)) :pattern ((to_rep12 (of_rep12 x))))))
(declare-datatypes () ((us_split_fields10 (mk___split_fields5 (rec__stats__t__successentry statscount) (rec__stats__t__failentry statscount) (rec__stats__t__successbio statscount) (rec__stats__t__failbio statscount)))))
(define-fun us_split_fields_SuccessEntry__projection ((a us_split_fields10)) statscount (rec__stats__t__successentry a))
(define-fun us_split_fields_FailEntry__projection ((a us_split_fields10)) statscount (rec__stats__t__failentry a))
(define-fun us_split_fields_SuccessBio__projection ((a us_split_fields10)) statscount (rec__stats__t__successbio a))
(define-fun us_split_fields_FailBio__projection ((a us_split_fields10)) statscount (rec__stats__t__failbio a))
(declare-datatypes () ((us_split_fields__ref5 (mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___16__projection ((a us_split_fields__ref5)) us_split_fields10 (us_split_fields__content5 a))
(declare-datatypes () ((us_rep6 (mk___rep5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___17__projection ((a us_rep6)) us_split_fields10 (us_split_fields11 a))
(define-fun bool_eq11 ((a us_rep6) (b us_rep6)) Bool (ite (and (and (and (= (to_rep12 (rec__stats__t__successentry (us_split_fields11 a))) (to_rep12 (rec__stats__t__successentry (us_split_fields11 b)))) (= (to_rep12 (rec__stats__t__failentry (us_split_fields11 a))) (to_rep12 (rec__stats__t__failentry (us_split_fields11 b))))) (= (to_rep12 (rec__stats__t__successbio (us_split_fields11 a))) (to_rep12 (rec__stats__t__successbio (us_split_fields11 b))))) (= (to_rep12 (rec__stats__t__failbio (us_split_fields11 a))) (to_rep12 (rec__stats__t__failbio (us_split_fields11 b))))) true false))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep6) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep6) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep6)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep6)) (<= 0 (object__alignment9 a))))
(declare-const stats__t__successentry__first__bit Int)
(declare-const stats__t__successentry__last__bit Int)
(declare-const stats__t__successentry__position Int)
(assert (<= 0 stats__t__successentry__first__bit))
(assert (< stats__t__successentry__first__bit stats__t__successentry__last__bit))
(assert (<= 0 stats__t__successentry__position))
(declare-const stats__t__failentry__first__bit Int)
(declare-const stats__t__failentry__last__bit Int)
(declare-const stats__t__failentry__position Int)
(assert (<= 0 stats__t__failentry__first__bit))
(assert (< stats__t__failentry__first__bit stats__t__failentry__last__bit))
(assert (<= 0 stats__t__failentry__position))
(declare-const stats__t__successbio__first__bit Int)
(declare-const stats__t__successbio__last__bit Int)
(declare-const stats__t__successbio__position Int)
(assert (<= 0 stats__t__successbio__first__bit))
(assert (< stats__t__successbio__first__bit stats__t__successbio__last__bit))
(assert (<= 0 stats__t__successbio__position))
(declare-const stats__t__failbio__first__bit Int)
(declare-const stats__t__failbio__last__bit Int)
(declare-const stats__t__failbio__position Int)
(assert (<= 0 stats__t__failbio__first__bit))
(assert (< stats__t__failbio__first__bit stats__t__failbio__last__bit))
(assert (<= 0 stats__t__failbio__position))
(declare-fun user_eq25 (us_rep6 us_rep6) Bool)
(declare-const dummy25 us_rep6)
(declare-datatypes () ((t__ref3 (mk_t__ref3 (t__content3 us_rep6)))))
(define-fun t__ref___4__projection ((a t__ref3)) us_rep6 (t__content3 a))
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-fun currentactivitypossible (Int us_private) Bool)
(declare-fun currentactivitypossible__function_guard (Bool Int us_private) Bool)
(declare-fun inprogress (Int) Bool)
(declare-fun inprogress__function_guard (Bool Int) Bool)
(declare-sort statust1 0)
(define-fun in_range17 ((x Int)) Bool (and (<= 0 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)
(declare-fun user_eq26 (statust1 statust1) Bool)
(declare-const dummy26 statust1)
(declare-datatypes () ((statust__ref1 (mk_statust__ref1 (statust__content1 statust1)))))
(define-fun statust__ref___2__projection ((a statust__ref1)) statust1 (statust__content1 a))
(define-fun dynamic_invariant4 ((temp___expr_2366 Int) (temp___is_init_2363 Bool) (temp___skip_constant_2364 Bool) (temp___do_toplevel_2365 Bool)) Bool (=> (or (= temp___is_init_2363 true) (<= 0 7)) (in_range17 temp___expr_2366)))
(declare-fun userhasdeparted (Int us_private) Bool)
(declare-fun userhasdeparted__function_guard (Bool Int us_private) Bool)
(assert true)
(assert (forall ((userentry__status Int)) (forall ((usertoken__state us_private)) (! (= (= (currentactivitypossible userentry__status usertoken__state) true) (or (= (inprogress userentry__status) true) (= (userhasdeparted userentry__status usertoken__state) true))) :pattern ((currentactivitypossible userentry__status usertoken__state))))))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-sort activestatust 0)
(define-fun in_range18 ((x Int)) Bool (and (<= 1 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)
(declare-fun user_eq27 (activestatust activestatust) Bool)
(declare-const dummy27 activestatust)
(declare-datatypes () ((activestatust__ref (mk_activestatust__ref (activestatust__content activestatust)))))
(define-fun activestatust__ref___projection ((a activestatust__ref)) activestatust (activestatust__content a))
(define-fun dynamic_invariant5 ((temp___expr_2440 Int) (temp___is_init_2437 Bool) (temp___skip_constant_2438 Bool) (temp___do_toplevel_2439 Bool)) Bool (=> (or (= temp___is_init_2437 true) (<= 1 7)) (in_range18 temp___expr_2440)))
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(define-fun dynamic_invariant6 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range14 temp___expr_63)))
(declare-fun ispresent (us_private) Bool)
(declare-fun ispresent__function_guard (Bool us_private) Bool)
(assert true)
(assert (forall ((userentry__status Int)) (forall ((usertoken__state us_private)) (! (= (= (userhasdeparted userentry__status usertoken__state) true) (and (< 0 userentry__status) (not (= (ispresent usertoken__state) true)))) :pattern ((userhasdeparted userentry__status usertoken__state))))))
(assert true)
(assert (forall ((userentry__status Int)) (! (= (= (inprogress userentry__status) true) (and (< 0 userentry__status) (< userentry__status 7))) :pattern ((inprogress userentry__status)))))
(define-fun dynamic_invariant7 ((temp___expr_1060 Int) (temp___is_init_1057 Bool) (temp___skip_constant_1058 Bool) (temp___do_toplevel_1059 Bool)) Bool (=> (or (= temp___is_init_1057 true) (<= 0 17)) (in_range8 temp___expr_1060)))
(define-fun dynamic_invariant8 ((temp___expr_1039 Int) (temp___is_init_1036 Bool) (temp___skip_constant_1037 Bool) (temp___do_toplevel_1038 Bool)) Bool (=> (or (= temp___is_init_1036 true) (<= 1 17)) (in_range6 temp___expr_1039)))
(define-fun dynamic_invariant9 ((temp___expr_1164 Int) (temp___is_init_1161 Bool) (temp___skip_constant_1162 Bool) (temp___do_toplevel_1163 Bool)) Bool (=> (or (= temp___is_init_1161 true) (<= 0 2)) (in_range10 temp___expr_1164)))
(define-fun dynamic_invariant10 ((temp___expr_1045 Int) (temp___is_init_1042 Bool) (temp___skip_constant_1043 Bool) (temp___do_toplevel_1044 Bool)) Bool (=> (or (= temp___is_init_1042 true) (<= 0 17408)) (in_range7 temp___expr_1045)))
(define-fun dynamic_invariant11 ((temp___expr_1079 Int) (temp___is_init_1076 Bool) (temp___skip_constant_1077 Bool) (temp___do_toplevel_1078 Bool)) Bool (=> (or (= temp___is_init_1076 true) (<= 0 1024)) (in_range9 temp___expr_1079)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep1)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep6 (rec__auditlog__logfilelistt__length (us_split_fields3 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep6 (rec__auditlog__logfilelistt__length (us_split_fields3 usedlogfiles))) 1) 1024) (to_rep7 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(define-fun dynamic_invariant12 ((temp___expr_572 Int) (temp___is_init_569 Bool) (temp___skip_constant_570 Bool) (temp___do_toplevel_571 Bool)) Bool (=> (or (= temp___is_init_569 true) (<= 1901 2099)) (in_range2 temp___expr_572)))
(define-fun dynamic_invariant13 ((temp___expr_578 Int) (temp___is_init_575 Bool) (temp___skip_constant_576 Bool) (temp___do_toplevel_577 Bool)) Bool (=> (or (= temp___is_init_575 true) (<= 1 12)) (in_range3 temp___expr_578)))
(define-fun dynamic_invariant14 ((temp___expr_584 Int) (temp___is_init_581 Bool) (temp___skip_constant_582 Bool) (temp___do_toplevel_583 Bool)) Bool (=> (or (= temp___is_init_581 true) (<= 1 31)) (in_range4 temp___expr_584)))
(define-fun dynamic_invariant15 ((temp___expr_612 Int) (temp___is_init_609 Bool) (temp___skip_constant_610 Bool) (temp___do_toplevel_611 Bool)) Bool (=> (or (= temp___is_init_609 true) (<= 0 86399999)) (in_range5 temp___expr_612)))
(assert true)
(assert (forall ((left us_rep) (right us_rep)) (! (= (= (greaterthan left right) true) (or (or (or (< (to_rep (rec__clock__timet__year (us_split_fields1 right))) (to_rep (rec__clock__timet__year (us_split_fields1 left)))) (and (= (to_rep (rec__clock__timet__year (us_split_fields1 left))) (to_rep (rec__clock__timet__year (us_split_fields1 right)))) (< (to_rep1 (rec__clock__timet__month (us_split_fields1 right))) (to_rep1 (rec__clock__timet__month (us_split_fields1 left)))))) (and (and (= (to_rep (rec__clock__timet__year (us_split_fields1 left))) (to_rep (rec__clock__timet__year (us_split_fields1 right)))) (= (to_rep1 (rec__clock__timet__month (us_split_fields1 left))) (to_rep1 (rec__clock__timet__month (us_split_fields1 right))))) (< (to_rep2 (rec__clock__timet__day (us_split_fields1 right))) (to_rep2 (rec__clock__timet__day (us_split_fields1 left)))))) (and (and (and (= (to_rep (rec__clock__timet__year (us_split_fields1 left))) (to_rep (rec__clock__timet__year (us_split_fields1 right)))) (= (to_rep1 (rec__clock__timet__month (us_split_fields1 left))) (to_rep1 (rec__clock__timet__month (us_split_fields1 right))))) (= (to_rep2 (rec__clock__timet__day (us_split_fields1 left))) (to_rep2 (rec__clock__timet__day (us_split_fields1 right))))) (< (to_rep3 (rec__clock__timet__millisec (us_split_fields1 right))) (to_rep3 (rec__clock__timet__millisec (us_split_fields1 left))))))) :pattern ((greaterthan left right)))))
(define-fun dynamic_invariant16 ((temp___expr_360 Int) (temp___is_init_357 Bool) (temp___skip_constant_358 Bool) (temp___do_toplevel_359 Bool)) Bool (=> (or (= temp___is_init_357 true) (<= 0 40)) (in_range13 temp___expr_360)))
(define-fun dynamic_invariant17 ((temp___expr_381 Int) (temp___is_init_378 Bool) (temp___skip_constant_379 Bool) (temp___do_toplevel_380 Bool)) Bool (=> (or (= temp___is_init_378 true) (<= 0 4294967295)) (in_range15 temp___expr_381)))
(define-fun dynamic_invariant18 ((temp___expr_1607 Int) (temp___is_init_1604 Bool) (temp___skip_constant_1605 Bool) (temp___do_toplevel_1606 Bool)) Bool (=> (or (= temp___is_init_1604 true) (<= 0 2147483647)) (in_range16 temp___expr_1607)))
(assert true)
(declare-const currenttimevar__split_fields yearst)
(declare-const currenttimevar__split_fields1 monthst)
(declare-const currenttimevar__split_fields2 dayst)
(declare-const currenttimevar__split_fields3 millisecst)
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const currentlatch Int)
(declare-const latchtimeout__split_fields yearst)
(declare-const latchtimeout__split_fields1 monthst)
(declare-const latchtimeout__split_fields2 dayst)
(declare-const latchtimeout__split_fields3 millisecst)
(declare-const thistisinfo__split_fields Bool)
(declare-const thistisinfo__split_fields1 issueridt)
(declare-const thistisinfo__split_fields2 namecountt)
(declare-const thistisinfo__split_fields3 (Array Int character))
(declare-const status Int)
(declare-const fingertimeout__split_fields yearst)
(declare-const fingertimeout__split_fields1 monthst)
(declare-const fingertimeout__split_fields2 dayst)
(declare-const fingertimeout__split_fields3 millisecst)
(declare-const tokenremovaltimeout__split_fields us_split_fields__ref)
(declare-const localstatus int__ref)
(declare-const currenttime us_private__ref)
(declare-const state us_private__ref)
(declare-const filestate us_private__ref)
(declare-const state1 us_private__ref)
(declare-const state2 us_private__ref)
(declare-const filestate1 us_private__ref)
(declare-const state3 us_private__ref)
(declare-const state4 us_private__ref)
(declare-const state5 us_private__ref)
(declare-const state6 us_private__ref)
(declare-const status1 us_private__ref)
(declare-const output us_private__ref)
(declare-const o Int)
(declare-const currentlatch1 Int)
(declare-const latchtimeout__split_fields4 us_split_fields)
(declare-const fingertimeout__split_fields4 us_split_fields)
(declare-const tokenremovaltimeout__split_fields1 us_split_fields)
(declare-const state7 us_private)
(declare-const state8 us_private)
(declare-const filestate2 us_private)
(declare-const state9 us_private)
(declare-const status2 us_private)
(declare-const output1 us_private)
(declare-const result int__ref)
(declare-const localstatus1 Int)
(declare-const logfiles (Array Int us_rep3))
(declare-const logfilesstatus (Array Int filestatust))
(declare-const logfilestate__split_fields7 us_split_fields4)
(declare-const auditalarm1 Int)
(declare-const auditsystemfault Bool)
(declare-const thestats__split_fields us_split_fields10)
(declare-const status3 Int)
(declare-const fingertimeout__split_fields5 us_split_fields)
(declare-const state10 us_private)
(declare-const filestate3 us_private)
(declare-const state11 us_private)
(declare-const state12 us_private)
(declare-const status4 us_private)
(declare-const logfiles1 (Array Int us_rep3))
(declare-const logfilesstatus1 (Array Int filestatust))
(declare-const logfilestate__split_fields8 us_split_fields4)
(declare-const auditalarm2 Int)
(declare-const auditsystemfault1 Bool)
(declare-const thestats__split_fields1 us_split_fields10)
(declare-const status5 Int)
(declare-const state13 us_private)
(declare-const filestate4 us_private)
(declare-const state14 us_private)
(declare-const state15 us_private)
(declare-const logfiles2 (Array Int us_rep3))
(declare-const logfilesstatus2 (Array Int filestatust))
(declare-const logfilestate__split_fields9 us_split_fields4)
(declare-const auditalarm3 Int)
(declare-const auditsystemfault2 Bool)
(declare-const thestats__split_fields2 us_split_fields10)
(declare-const status6 Int)
(declare-const state16 us_private)
(declare-const filestate5 us_private)
(declare-const state17 us_private)
(declare-const state18 us_private)
(declare-const logfiles3 (Array Int us_rep3))
(declare-const logfilesstatus3 (Array Int filestatust))
(declare-const logfilestate__split_fields10 us_split_fields4)
(declare-const auditalarm4 Int)
(declare-const auditsystemfault3 Bool)
(declare-const thestats__split_fields3 us_split_fields10)
(declare-const status7 Int)
(declare-const state19 us_private)
(declare-const filestate6 us_private)
(declare-const filestate7 us_private)
(declare-const state20 us_private)
(declare-const state21 us_private)
(declare-const state22 us_private)
(declare-const status8 us_private)
(declare-const output2 us_private)
(declare-const logfiles4 (Array Int us_rep3))
(declare-const logfilesstatus4 (Array Int filestatust))
(declare-const logfilestate__split_fields11 us_split_fields4)
(declare-const auditalarm5 Int)
(declare-const auditsystemfault4 Bool)
(declare-const thestats__split_fields4 us_split_fields10)
(declare-const status9 Int)
(declare-const tokenremovaltimeout__split_fields2 us_split_fields)
(declare-const state23 us_private)
(declare-const filestate8 us_private)
(declare-const state24 us_private)
(declare-const state25 us_private)
(declare-const logfiles5 (Array Int us_rep3))
(declare-const logfilesstatus5 (Array Int filestatust))
(declare-const logfilestate__split_fields12 us_split_fields4)
(declare-const auditalarm6 Int)
(declare-const auditsystemfault5 Bool)
(declare-const currentlatch2 Int)
(declare-const latchtimeout__split_fields5 us_split_fields)
(declare-const thestats__split_fields5 us_split_fields10)
(declare-const status10 Int)
(declare-const state26 us_private)
(declare-const filestate9 us_private)
(declare-const state27 us_private)
(declare-const state28 us_private)
(declare-const state29 us_private)
(declare-const state30 us_private)
(declare-const logfiles6 (Array Int us_rep3))
(declare-const logfilesstatus6 (Array Int filestatust))
(declare-const logfilestate__split_fields13 us_split_fields4)
(declare-const auditalarm7 Int)
(declare-const auditsystemfault6 Bool)
(declare-const thestats__split_fields6 us_split_fields10)
(declare-const status11 Int)
(declare-const state31 us_private)
(declare-const filestate10 us_private)
(declare-const state32 us_private)
(declare-const state33 us_private)
(declare-const logfiles7 map__ref2)
(declare-const logfilesstatus7 map__ref3)
(declare-const logfilestate__split_fields14 us_split_fields__ref2)
(declare-const auditalarm8 int__ref)
(declare-const auditsystemfault7 bool__ref)
(declare-const currentlatch3 int__ref)
(declare-const latchtimeout__split_fields6 us_split_fields__ref)
(declare-const thestats__split_fields7 us_split_fields__ref5)
(declare-const status12 int__ref)
(declare-const fingertimeout__split_fields6 us_split_fields__ref)
(declare-const tokenremovaltimeout__split_fields3 us_split_fields__ref)
(declare-const localstatus2 int__ref)
(declare-const state34 us_private__ref)
(declare-const filestate11 us_private__ref)
(declare-const state35 us_private__ref)
(declare-const state36 us_private__ref)
(declare-const filestate12 us_private__ref)
(declare-const state37 us_private__ref)
(declare-const state38 us_private__ref)
(declare-const state39 us_private__ref)
(declare-const status13 us_private__ref)
(declare-const output3 us_private__ref)
(declare-const logfiles8 (Array Int us_rep3))
(declare-const logfilesstatus8 (Array Int filestatust))
(declare-const logfilestate__split_fields15 us_split_fields4)
(declare-const auditalarm9 Int)
(declare-const auditsystemfault8 Bool)
(declare-const currentlatch4 Int)
(declare-const latchtimeout__split_fields7 us_split_fields)
(declare-const thestats__split_fields8 us_split_fields10)
(declare-const status14 Int)
(declare-const fingertimeout__split_fields7 us_split_fields)
(declare-const tokenremovaltimeout__split_fields4 us_split_fields)
(declare-const localstatus3 Int)
(declare-const state40 us_private)
(declare-const filestate13 us_private)
(declare-const state41 us_private)
(declare-const state42 us_private)
(declare-const filestate14 us_private)
(declare-const state43 us_private)
(declare-const state44 us_private)
(declare-const state45 us_private)
(declare-const status15 us_private)
(declare-const output4 us_private)
(assert (in_range17 status))
(assert (= (valid_numberlogentries (to_rep4 logfilestate__split_fields) (to_rep5 logfilestate__split_fields1) (mk___rep1 (mk___split_fields1 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range1 auditalarm))
(assert (in_range11 currentlatch))
(assert (and (and (= (currentactivitypossible status (us_private__content state6)) true) (= (privatekeypresent (mk___split_fields4 thistisinfo__split_fields (mk___rep3 (mk___split_fields3 thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3))) (us_private__content state5)) true)) (= (and (and (= (islocked currentlatch (us_private__content state1) (mk___split_fields latchtimeout__split_fields latchtimeout__split_fields1 latchtimeout__split_fields2 latchtimeout__split_fields3)) true) (= (thecurrentdoor (us_private__content state2)) 0)) (= (greaterthanorequal (thecurrenttime (mk___split_fields currenttimevar__split_fields currenttimevar__split_fields1 currenttimevar__split_fields2 currenttimevar__split_fields3) (us_private__content currenttime)) (alarm_timeout (us_private__content state2))) true)) (= (thedooralarm (us_private__content state2)) 0))))
(assert (= (and (and (= (islocked (int__content currentlatch3) (us_private__content state35) (us_split_fields__content latchtimeout__split_fields6)) true) (= (thecurrentdoor (us_private__content state36)) 0)) (= (greaterthanorequal (thecurrenttime (mk___split_fields currenttimevar__split_fields currenttimevar__split_fields1 currenttimevar__split_fields2 currenttimevar__split_fields3) (us_private__content currenttime)) (alarm_timeout (us_private__content state36))) true)) (= (thedooralarm (us_private__content state36)) 0)))
(assert (and (and (and (= (valid_numberlogentries (to_rep4 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields__content2 logfilestate__split_fields14))) (to_rep5 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields__content2 logfilestate__split_fields14))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields__content2 logfilestate__split_fields14)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields__content2 logfilestate__split_fields14))) true) (in_range1 (int__content auditalarm8))) (in_range17 (int__content status12))) (in_range11 (int__content currentlatch3))))
(assert (= (islocked (int__content currentlatch3) (us_private__content state35) (us_split_fields__content latchtimeout__split_fields6)) true))
(assert (= (thecurrentdoor (us_private__content state36)) 0))
(assert (= (greaterthanorequal (thecurrenttime (mk___split_fields currenttimevar__split_fields currenttimevar__split_fields1 currenttimevar__split_fields2 currenttimevar__split_fields3) (us_private__content currenttime)) (alarm_timeout (us_private__content state36))) true))
(assert (not (= (thedooralarm (us_private__content state36)) 0)))
(check-sat)
(exit)
