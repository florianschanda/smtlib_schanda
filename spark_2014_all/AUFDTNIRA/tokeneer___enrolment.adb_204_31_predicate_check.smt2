(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort natural 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (natural natural) Bool)
(declare-const dummy4 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range4 temp___expr_33)))
(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(declare-sort statust 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (statust statust) Bool)
(declare-const dummy5 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant2 ((temp___expr_177 Int) (temp___is_init_174 Bool) (temp___skip_constant_175 Bool) (temp___do_toplevel_176 Bool)) Bool (=> (or (= temp___is_init_174 true) (<= 0 1)) (in_range5 temp___expr_177)))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq6 (us_t1 us_t1) Bool)
(declare-const dummy6 us_t1)
(declare-datatypes () ((stringf1l1000__ref (mk_stringf1l1000__ref (stringf1l1000__content us_t1)))))
(define-fun stringf1l1000__ref___projection ((a stringf1l1000__ref)) us_t1 (stringf1l1000__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int character)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))
(define-fun of_array2 ((a (Array Int character)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((stringf1__ref (mk_stringf1__ref (stringf1__content us_t2)))))
(define-fun stringf1__ref___projection ((a stringf1__ref)) us_t2 (stringf1__content a))
(define-fun dynamic_invariant3 ((temp___expr_298 us_t1) (temp___is_init_295 Bool) (temp___skip_constant_296 Bool) (temp___do_toplevel_297 Bool)) Bool (and (=> (not (= temp___skip_constant_296 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_298) (last3 temp___expr_298))) (=> (= temp___do_toplevel_297 true) (=> (= temp___is_init_295 true) (and (= (first5 (of_array2 (to_array1 temp___expr_298) (first3 temp___expr_298) (last3 temp___expr_298))) 1) (<= (last3 temp___expr_298) 1000))))))
(define-fun dynamic_predicate ((temp___302 us_t1)) Bool (and (= (first5 (of_array2 (to_array1 temp___302) (first3 temp___302) (last3 temp___302))) 1) (<= (last3 temp___302) 1000)))
(declare-const nodescription (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun audittypes__nodescription__aggregate_def (Int) (Array Int character))
(assert (forall ((temp___134 Int)) (forall ((temp___135 Int)) (= (select (audittypes__nodescription__aggregate_def temp___134) temp___135) (of_rep temp___134)))))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep 0)
(declare-fun bool_eq4 (us_rep us_rep) Bool)
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-fun user_eq8 (us_rep us_rep) Bool)
(declare-const dummy8 us_rep)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))
(declare-fun endoffile (us_rep) Bool)
(declare-fun endoffile__function_guard (Bool us_rep) Bool)
(declare-sort issueridt 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq9 (issueridt issueridt) Bool)
(declare-const dummy9 issueridt)
(declare-datatypes () ((issueridt__ref (mk_issueridt__ref (issueridt__content issueridt)))))
(define-fun issueridt__ref___projection ((a issueridt__ref)) issueridt (issueridt__content a))
(declare-fun to_rep2 (issueridt) Int)
(declare-fun of_rep2 (Int) issueridt)
(assert (forall ((x issueridt)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x issueridt)) (! (in_range6 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort namecountt 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 40)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq10 (namecountt namecountt) Bool)
(declare-const dummy10 namecountt)
(declare-datatypes () ((namecountt__ref (mk_namecountt__ref (namecountt__content namecountt)))))
(define-fun namecountt__ref___projection ((a namecountt__ref)) namecountt (namecountt__content a))
(declare-fun to_rep3 (namecountt) Int)
(declare-fun of_rep3 (Int) namecountt)
(assert (forall ((x namecountt)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x namecountt)) (! (in_range7 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-const dummy11 (Array Int character))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int character)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int character)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int character)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment4 a))))
(declare-fun user_eq11 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__cryptotypes__issuert__id issueridt) (rec__cryptotypes__issuert__namelength namecountt) (rec__cryptotypes__issuert__name (Array Int character))))))
(define-fun us_split_fields_ID__projection ((a us_split_fields)) issueridt (rec__cryptotypes__issuert__id a))
(define-fun us_split_fields_NameLength__projection ((a us_split_fields)) namecountt (rec__cryptotypes__issuert__namelength a))
(define-fun us_split_fields_Name__projection ((a us_split_fields)) (Array Int character) (rec__cryptotypes__issuert__name a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep1 (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq5 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (= (to_rep2 (rec__cryptotypes__issuert__id (us_split_fields1 a))) (to_rep2 (rec__cryptotypes__issuert__id (us_split_fields1 b)))) (= (to_rep3 (rec__cryptotypes__issuert__namelength (us_split_fields1 a))) (to_rep3 (rec__cryptotypes__issuert__namelength (us_split_fields1 b))))) (= (bool_eq (rec__cryptotypes__issuert__name (us_split_fields1 a)) 1 40 (rec__cryptotypes__issuert__name (us_split_fields1 b)) 1 40) true)) true false))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep1) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep1) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep1)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment5 a))))
(declare-const cryptotypes__issuert__id__first__bit Int)
(declare-const cryptotypes__issuert__id__last__bit Int)
(declare-const cryptotypes__issuert__id__position Int)
(assert (<= 0 cryptotypes__issuert__id__first__bit))
(assert (< cryptotypes__issuert__id__first__bit cryptotypes__issuert__id__last__bit))
(assert (<= 0 cryptotypes__issuert__id__position))
(declare-const cryptotypes__issuert__namelength__first__bit Int)
(declare-const cryptotypes__issuert__namelength__last__bit Int)
(declare-const cryptotypes__issuert__namelength__position Int)
(assert (<= 0 cryptotypes__issuert__namelength__first__bit))
(assert (< cryptotypes__issuert__namelength__first__bit cryptotypes__issuert__namelength__last__bit))
(assert (<= 0 cryptotypes__issuert__namelength__position))
(declare-const cryptotypes__issuert__name__first__bit Int)
(declare-const cryptotypes__issuert__name__last__bit Int)
(declare-const cryptotypes__issuert__name__position Int)
(assert (<= 0 cryptotypes__issuert__name__first__bit))
(assert (< cryptotypes__issuert__name__first__bit cryptotypes__issuert__name__last__bit))
(assert (<= 0 cryptotypes__issuert__name__position))
(declare-fun user_eq12 (us_rep1 us_rep1) Bool)
(declare-const dummy12 us_rep1)
(declare-datatypes () ((issuert__ref (mk_issuert__ref (issuert__content us_rep1)))))
(define-fun issuert__ref___projection ((a issuert__ref)) us_rep1 (issuert__content a))
(declare-sort algorithmt 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq13 (algorithmt algorithmt) Bool)
(declare-const dummy13 algorithmt)
(declare-datatypes () ((algorithmt__ref (mk_algorithmt__ref (algorithmt__content algorithmt)))))
(define-fun algorithmt__ref___projection ((a algorithmt__ref)) algorithmt (algorithmt__content a))
(declare-fun to_rep4 (algorithmt) Int)
(declare-fun of_rep4 (Int) algorithmt)
(assert (forall ((x algorithmt)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x algorithmt)) (! (in_range8 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-sort keyidt 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq14 (keyidt keyidt) Bool)
(declare-const dummy14 keyidt)
(declare-datatypes () ((keyidt__ref (mk_keyidt__ref (keyidt__content keyidt)))))
(define-fun keyidt__ref___projection ((a keyidt__ref)) keyidt (keyidt__content a))
(declare-fun to_rep5 (keyidt) Int)
(declare-fun of_rep5 (Int) keyidt)
(assert (forall ((x keyidt)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x keyidt)) (! (in_range9 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-sort keylengtht 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq15 (keylengtht keylengtht) Bool)
(declare-const dummy15 keylengtht)
(declare-datatypes () ((keylengtht__ref (mk_keylengtht__ref (keylengtht__content keylengtht)))))
(define-fun keylengtht__ref___projection ((a keylengtht__ref)) keylengtht (keylengtht__content a))
(declare-fun to_rep6 (keylengtht) Int)
(declare-fun of_rep6 (Int) keylengtht)
(assert (forall ((x keylengtht)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x keylengtht)) (! (in_range10 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__cryptotypes__keypartt__algorithmid algorithmt) (rec__cryptotypes__keypartt__keyid keyidt) (rec__cryptotypes__keypartt__keylength keylengtht)))))
(define-fun us_split_fields_AlgorithmID__projection ((a us_split_fields2)) algorithmt (rec__cryptotypes__keypartt__algorithmid a))
(define-fun us_split_fields_KeyID__projection ((a us_split_fields2)) keyidt (rec__cryptotypes__keypartt__keyid a))
(define-fun us_split_fields_KeyLength__projection ((a us_split_fields2)) keylengtht (rec__cryptotypes__keypartt__keylength a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep2 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___5__projection ((a us_rep2)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq6 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (= (to_rep4 (rec__cryptotypes__keypartt__algorithmid (us_split_fields3 a))) (to_rep4 (rec__cryptotypes__keypartt__algorithmid (us_split_fields3 b)))) (= (to_rep5 (rec__cryptotypes__keypartt__keyid (us_split_fields3 a))) (to_rep5 (rec__cryptotypes__keypartt__keyid (us_split_fields3 b))))) (= (to_rep6 (rec__cryptotypes__keypartt__keylength (us_split_fields3 a))) (to_rep6 (rec__cryptotypes__keypartt__keylength (us_split_fields3 b))))) true false))
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep2) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep2) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep2)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment6 a))))
(declare-const cryptotypes__keypartt__algorithmid__first__bit Int)
(declare-const cryptotypes__keypartt__algorithmid__last__bit Int)
(declare-const cryptotypes__keypartt__algorithmid__position Int)
(assert (<= 0 cryptotypes__keypartt__algorithmid__first__bit))
(assert (< cryptotypes__keypartt__algorithmid__first__bit cryptotypes__keypartt__algorithmid__last__bit))
(assert (<= 0 cryptotypes__keypartt__algorithmid__position))
(declare-const cryptotypes__keypartt__keyid__first__bit Int)
(declare-const cryptotypes__keypartt__keyid__last__bit Int)
(declare-const cryptotypes__keypartt__keyid__position Int)
(assert (<= 0 cryptotypes__keypartt__keyid__first__bit))
(assert (< cryptotypes__keypartt__keyid__first__bit cryptotypes__keypartt__keyid__last__bit))
(assert (<= 0 cryptotypes__keypartt__keyid__position))
(declare-const cryptotypes__keypartt__keylength__first__bit Int)
(declare-const cryptotypes__keypartt__keylength__last__bit Int)
(declare-const cryptotypes__keypartt__keylength__position Int)
(assert (<= 0 cryptotypes__keypartt__keylength__first__bit))
(assert (< cryptotypes__keypartt__keylength__first__bit cryptotypes__keypartt__keylength__last__bit))
(assert (<= 0 cryptotypes__keypartt__keylength__position))
(declare-fun user_eq16 (us_rep2 us_rep2) Bool)
(declare-const dummy16 us_rep2)
(declare-datatypes () ((keypartt__ref (mk_keypartt__ref (keypartt__content us_rep2)))))
(define-fun keypartt__ref___projection ((a keypartt__ref)) us_rep2 (keypartt__content a))
(declare-sort logfileindext 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq17 (logfileindext logfileindext) Bool)
(declare-const dummy17 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep7 (logfileindext) Int)
(declare-fun of_rep7 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x logfileindext)) (! (in_range11 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq18 (logentrycountt logentrycountt) Bool)
(declare-const dummy18 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep8 (logentrycountt) Int)
(declare-fun of_rep8 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x logentrycountt)) (! (in_range12 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first6 Int)) (! (= (slide1 a first6 first6) a) :pattern ((slide1 a first6 first6))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (logfileindext Int) (Array Int logfileindext))
(assert (forall ((v logfileindext)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq7 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep7 (select a temp___idx_150)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_150))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq7 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep7 (select a temp___idx_150)) (to_rep7 (select b (+ (- b__first a__first) temp___idx_150)))))))))))
(declare-fun compare1 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) Int)
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq7 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq7 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep7 (select a (+ i 1))) (to_rep7 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq7 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep7 (select b (+ i 1))) (to_rep7 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const dummy19 (Array Int logfileindext))
(declare-const value__size7 Int)
(declare-fun object__size7 ((Array Int logfileindext)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int logfileindext)) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size7))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size7 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment7 a))))
(declare-fun user_eq19 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-sort logfilecountt 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq20 (logfilecountt logfilecountt) Bool)
(declare-const dummy20 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep9 (logfilecountt) Int)
(declare-fun of_rep9 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x logfilecountt)) (! (in_range13 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields4)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields4)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields4)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields4)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep3 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___8__projection ((a us_rep3)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq8 ((a us_rep3) (b us_rep3)) Bool (ite (and (and (and (= (bool_eq7 (rec__auditlog__logfilelistt__list (us_split_fields5 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields5 b)) 1 17) true) (= (to_rep7 (rec__auditlog__logfilelistt__head (us_split_fields5 a))) (to_rep7 (rec__auditlog__logfilelistt__head (us_split_fields5 b))))) (= (to_rep7 (rec__auditlog__logfilelistt__lasti (us_split_fields5 a))) (to_rep7 (rec__auditlog__logfilelistt__lasti (us_split_fields5 b))))) (= (to_rep9 (rec__auditlog__logfilelistt__length (us_split_fields5 a))) (to_rep9 (rec__auditlog__logfilelistt__length (us_split_fields5 b))))) true false))
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep3) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep3) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep3)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment8 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq21 (us_rep3 us_rep3) Bool)
(declare-const dummy21 us_rep3)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep3)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep3 (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq22 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy22 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep10 (fileentrycountt) Int)
(declare-fun of_rep10 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range14 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x Int)) (! (=> (in_range14 x) (= (to_rep10 (of_rep10 x)) x)) :pattern ((to_rep10 (of_rep10 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first6 Int)) (! (= (slide2 a first6 first6) a) :pattern ((slide2 a first6 first6))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (fileentrycountt Int) (Array Int fileentrycountt))
(assert (forall ((v fileentrycountt)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq9 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep10 (select a temp___idx_151)) (to_rep10 (select b (+ (- b__first a__first) temp___idx_151))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq9 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep10 (select a temp___idx_151)) (to_rep10 (select b (+ (- b__first a__first) temp___idx_151)))))))))))
(declare-fun compare2 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) Int)
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare2 a a_first a_last b b_first b_last) 0) (= (bool_eq9 a a_first a_last b b_first b_last) true)) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare2 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq9 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep10 (select a (+ i 1))) (to_rep10 (select b (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare2 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq9 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep10 (select b (+ i 1))) (to_rep10 (select a (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(declare-const dummy23 (Array Int fileentrycountt))
(declare-const value__size9 Int)
(declare-fun object__size9 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size9))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size9 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment9 a))))
(declare-fun user_eq23 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep3) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields6)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields6)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields6)) us_rep3 (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields6)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep4 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___9__projection ((a us_rep4)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq10 ((a us_rep4) (b us_rep4)) Bool (ite (and (and (and (= (to_rep7 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 a))) (to_rep7 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 b)))) (= (to_rep8 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 a))) (to_rep8 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 b))))) (= (bool_eq8 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 b))) true)) (= (bool_eq9 (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 b)) 1 17) true)) true false))
(declare-const value__size10 Int)
(declare-fun object__size10 (us_rep4) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 (us_rep4) Int)
(assert (<= 0 value__size10))
(assert (forall ((a us_rep4)) (<= 0 (object__size10 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment10 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq24 (us_rep4 us_rep4) Bool)
(declare-const dummy24 us_rep4)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep4)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep4 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep3 (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep3 (Array Int fileentrycountt)) Bool)
(declare-fun temp___1050 (Int) (Array Int logfileindext))
(assert (forall ((temp___1052 Int)) (forall ((temp___1053 Int)) (= (select (temp___1050 temp___1052) temp___1053) (of_rep7 temp___1052)))))
(declare-fun temp___1054 (Int) (Array Int fileentrycountt))
(assert (forall ((temp___1056 Int)) (forall ((temp___1057 Int)) (= (select (temp___1054 temp___1056) temp___1057) (of_rep10 temp___1056)))))
(define-fun dynamic_invariant4 ((temp___expr_1044 us_rep4) (temp___is_init_1041 Bool) (temp___skip_constant_1042 Bool) (temp___do_toplevel_1043 Bool)) Bool (= (valid_numberlogentries (to_rep7 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 temp___expr_1044))) (to_rep8 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 temp___expr_1044))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 temp___expr_1044)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 temp___expr_1044))) true))
(define-fun default_initial_assumption ((temp___expr_1048 us_rep4) (temp___skip_top_level_1049 Bool)) Bool (and (and (and (= (to_rep7 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 temp___expr_1048))) 1) (= (to_rep8 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 temp___expr_1048))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 temp___expr_1048)) (mk___rep2 (mk___split_fields2 (temp___1050 1) (of_rep7 1) (of_rep7 1) (of_rep9 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 temp___expr_1048)) (temp___1054 0))))
(define-fun type_invariant ((temp___1058 us_rep4)) Bool (= (valid_numberlogentries (to_rep7 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 temp___1058))) (to_rep8 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 temp___1058))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 temp___1058)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 temp___1058))) true))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep))))))
(declare-fun slide3 ((Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep))) (forall ((first6 Int)) (! (= (slide3 a first6 first6) a) :pattern ((slide3 a first6 first6))))))
(assert (forall ((a (Array Int us_rep))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(declare-fun concat4 ((Array Int us_rep) Int Int (Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat4 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton4 (us_rep Int) (Array Int us_rep))
(assert (forall ((v us_rep)) (forall ((i Int)) (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i))))))
(define-fun bool_eq11 ((a (Array Int us_rep)) (a__first Int) (a__last Int) (b (Array Int us_rep)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq4 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true)))) true false))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq11 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq4 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort filestatust 0)
(define-fun in_range15 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq25 (filestatust filestatust) Bool)
(declare-const dummy25 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep11 (filestatust) Int)
(declare-fun of_rep11 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep11 (to_rep11 x)) x) :pattern ((to_rep11 x)))))
(assert (forall ((x filestatust)) (! (in_range15 (to_rep11 x)) :pattern ((to_rep11 x)))))
(assert (forall ((x Int)) (! (=> (in_range15 x) (= (to_rep11 (of_rep11 x)) x)) :pattern ((to_rep11 (of_rep11 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int filestatust))))))
(declare-fun slide4 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first6 Int)) (! (= (slide4 a first6 first6) a) :pattern ((slide4 a first6 first6))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(declare-fun concat5 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat5 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat5 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat5 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton5 (filestatust Int) (Array Int filestatust))
(assert (forall ((v filestatust)) (forall ((i Int)) (! (= (select (singleton5 v i) i) v) :pattern ((select (singleton5 v i) i))))))
(define-fun bool_eq12 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep11 (select a temp___idx_153)) (to_rep11 (select b (+ (- b__first a__first) temp___idx_153))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq12 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep11 (select a temp___idx_153)) (to_rep11 (select b (+ (- b__first a__first) temp___idx_153)))))))))))
(declare-fun compare3 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) Int)
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare3 a a_first a_last b b_first b_last) 0) (= (bool_eq12 a a_first a_last b b_first b_last) true)) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare3 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq12 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep11 (select a (+ i 1))) (to_rep11 (select b (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare3 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq12 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep11 (select b (+ i 1))) (to_rep11 (select a (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort rawcertificatei 0)
(define-fun in_range16 ((x Int)) Bool (and (<= 1 x) (<= x 4096)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq26 (rawcertificatei rawcertificatei) Bool)
(declare-const dummy26 rawcertificatei)
(declare-datatypes () ((rawcertificatei__ref (mk_rawcertificatei__ref (rawcertificatei__content rawcertificatei)))))
(define-fun rawcertificatei__ref___projection ((a rawcertificatei__ref)) rawcertificatei (rawcertificatei__content a))
(declare-const nullrawcertificate (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-fun certtypes__nullrawcertificate__aggregate_def (Int) (Array Int character))
(assert (forall ((temp___165 Int)) (forall ((temp___166 Int)) (= (select (certtypes__nullrawcertificate__aggregate_def temp___165) temp___166) (of_rep temp___165)))))
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__keystore__optionalprivatekeyt__ispresent Bool) (rec__keystore__optionalprivatekeyt__owner us_rep1)))))
(define-fun us_split_fields_IsPresent__projection ((a us_split_fields8)) Bool (rec__keystore__optionalprivatekeyt__ispresent a))
(define-fun us_split_fields_Owner__projection ((a us_split_fields8)) us_rep1 (rec__keystore__optionalprivatekeyt__owner a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___12__projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep5 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___13__projection ((a us_rep5)) us_split_fields8 (us_split_fields9 a))
(define-fun bool_eq13 ((a us_rep5) (b us_rep5)) Bool (ite (and (= (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields9 a)) (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields9 b))) (= (bool_eq5 (rec__keystore__optionalprivatekeyt__owner (us_split_fields9 a)) (rec__keystore__optionalprivatekeyt__owner (us_split_fields9 b))) true)) true false))
(declare-const value__size11 Int)
(declare-fun object__size11 (us_rep5) Int)
(declare-const value__alignment11 Int)
(declare-fun object__alignment11 (us_rep5) Int)
(assert (<= 0 value__size11))
(assert (forall ((a us_rep5)) (<= 0 (object__size11 a))))
(assert (<= 0 value__alignment11))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment11 a))))
(declare-const keystore__optionalprivatekeyt__ispresent__first__bit Int)
(declare-const keystore__optionalprivatekeyt__ispresent__last__bit Int)
(declare-const keystore__optionalprivatekeyt__ispresent__position Int)
(assert (<= 0 keystore__optionalprivatekeyt__ispresent__first__bit))
(assert (< keystore__optionalprivatekeyt__ispresent__first__bit keystore__optionalprivatekeyt__ispresent__last__bit))
(assert (<= 0 keystore__optionalprivatekeyt__ispresent__position))
(declare-const keystore__optionalprivatekeyt__owner__first__bit Int)
(declare-const keystore__optionalprivatekeyt__owner__last__bit Int)
(declare-const keystore__optionalprivatekeyt__owner__position Int)
(assert (<= 0 keystore__optionalprivatekeyt__owner__first__bit))
(assert (< keystore__optionalprivatekeyt__owner__first__bit keystore__optionalprivatekeyt__owner__last__bit))
(assert (<= 0 keystore__optionalprivatekeyt__owner__position))
(declare-fun user_eq27 (us_rep5 us_rep5) Bool)
(declare-const dummy27 us_rep5)
(declare-datatypes () ((optionalprivatekeyt__ref (mk_optionalprivatekeyt__ref (optionalprivatekeyt__content us_rep5)))))
(define-fun optionalprivatekeyt__ref___projection ((a optionalprivatekeyt__ref)) us_rep5 (optionalprivatekeyt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun privatekeypresent (us_split_fields8 us_private) Bool)
(declare-fun privatekeypresent__function_guard (Bool us_split_fields8 us_private) Bool)
(assert true)
(assert (forall ((keystore__thistisinfo__fields us_split_fields8)) (forall ((keystore__state us_private)) (! (= (= (privatekeypresent keystore__thistisinfo__fields keystore__state) true) (= (rec__keystore__optionalprivatekeyt__ispresent (us_split_fields9 (mk___rep4 keystore__thistisinfo__fields))) true)) :pattern ((privatekeypresent keystore__thistisinfo__fields keystore__state))))))
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-sort yearst 0)
(define-fun in_range17 ((x Int)) Bool (and (<= 1901 x) (<= x 2099)))
(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)
(declare-fun user_eq28 (yearst yearst) Bool)
(declare-const dummy28 yearst)
(declare-datatypes () ((yearst__ref (mk_yearst__ref (yearst__content yearst)))))
(define-fun yearst__ref___projection ((a yearst__ref)) yearst (yearst__content a))
(declare-fun to_rep12 (yearst) Int)
(declare-fun of_rep12 (Int) yearst)
(assert (forall ((x yearst)) (! (= (of_rep12 (to_rep12 x)) x) :pattern ((to_rep12 x)))))
(assert (forall ((x yearst)) (! (in_range17 (to_rep12 x)) :pattern ((to_rep12 x)))))
(assert (forall ((x Int)) (! (=> (in_range17 x) (= (to_rep12 (of_rep12 x)) x)) :pattern ((to_rep12 (of_rep12 x))))))
(declare-sort monthst 0)
(define-fun in_range18 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)
(declare-fun user_eq29 (monthst monthst) Bool)
(declare-const dummy29 monthst)
(declare-datatypes () ((monthst__ref (mk_monthst__ref (monthst__content monthst)))))
(define-fun monthst__ref___projection ((a monthst__ref)) monthst (monthst__content a))
(declare-fun to_rep13 (monthst) Int)
(declare-fun of_rep13 (Int) monthst)
(assert (forall ((x monthst)) (! (= (of_rep13 (to_rep13 x)) x) :pattern ((to_rep13 x)))))
(assert (forall ((x monthst)) (! (in_range18 (to_rep13 x)) :pattern ((to_rep13 x)))))
(assert (forall ((x Int)) (! (=> (in_range18 x) (= (to_rep13 (of_rep13 x)) x)) :pattern ((to_rep13 (of_rep13 x))))))
(declare-sort dayst 0)
(define-fun in_range19 ((x Int)) Bool (and (<= 1 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE19 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check19 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE19 (us_image) Int)
(declare-fun user_eq30 (dayst dayst) Bool)
(declare-const dummy30 dayst)
(declare-datatypes () ((dayst__ref (mk_dayst__ref (dayst__content dayst)))))
(define-fun dayst__ref___projection ((a dayst__ref)) dayst (dayst__content a))
(declare-fun to_rep14 (dayst) Int)
(declare-fun of_rep14 (Int) dayst)
(assert (forall ((x dayst)) (! (= (of_rep14 (to_rep14 x)) x) :pattern ((to_rep14 x)))))
(assert (forall ((x dayst)) (! (in_range19 (to_rep14 x)) :pattern ((to_rep14 x)))))
(assert (forall ((x Int)) (! (=> (in_range19 x) (= (to_rep14 (of_rep14 x)) x)) :pattern ((to_rep14 (of_rep14 x))))))
(declare-sort millisecst 0)
(define-fun in_range20 ((x Int)) Bool (and (<= 0 x) (<= x 86399999)))
(declare-fun attr__ATTRIBUTE_IMAGE20 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check20 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE20 (us_image) Int)
(declare-fun user_eq31 (millisecst millisecst) Bool)
(declare-const dummy31 millisecst)
(declare-datatypes () ((millisecst__ref (mk_millisecst__ref (millisecst__content millisecst)))))
(define-fun millisecst__ref___projection ((a millisecst__ref)) millisecst (millisecst__content a))
(declare-fun to_rep15 (millisecst) Int)
(declare-fun of_rep15 (Int) millisecst)
(assert (forall ((x millisecst)) (! (= (of_rep15 (to_rep15 x)) x) :pattern ((to_rep15 x)))))
(assert (forall ((x millisecst)) (! (in_range20 (to_rep15 x)) :pattern ((to_rep15 x)))))
(assert (forall ((x Int)) (! (=> (in_range20 x) (= (to_rep15 (of_rep15 x)) x)) :pattern ((to_rep15 (of_rep15 x))))))
(declare-datatypes () ((us_split_fields10 (mk___split_fields5 (rec__clock__timet__year yearst) (rec__clock__timet__month monthst) (rec__clock__timet__day dayst) (rec__clock__timet__millisec millisecst)))))
(define-fun us_split_fields_Year__projection ((a us_split_fields10)) yearst (rec__clock__timet__year a))
(define-fun us_split_fields_Month__projection ((a us_split_fields10)) monthst (rec__clock__timet__month a))
(define-fun us_split_fields_Day__projection ((a us_split_fields10)) dayst (rec__clock__timet__day a))
(define-fun us_split_fields_MilliSec__projection ((a us_split_fields10)) millisecst (rec__clock__timet__millisec a))
(declare-datatypes () ((us_split_fields__ref5 (mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref5)) us_split_fields10 (us_split_fields__content5 a))
(declare-datatypes () ((us_rep6 (mk___rep5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___projection ((a us_rep6)) us_split_fields10 (us_split_fields11 a))
(define-fun bool_eq14 ((a us_rep6) (b us_rep6)) Bool (ite (and (and (and (= (to_rep12 (rec__clock__timet__year (us_split_fields11 a))) (to_rep12 (rec__clock__timet__year (us_split_fields11 b)))) (= (to_rep13 (rec__clock__timet__month (us_split_fields11 a))) (to_rep13 (rec__clock__timet__month (us_split_fields11 b))))) (= (to_rep14 (rec__clock__timet__day (us_split_fields11 a))) (to_rep14 (rec__clock__timet__day (us_split_fields11 b))))) (= (to_rep15 (rec__clock__timet__millisec (us_split_fields11 a))) (to_rep15 (rec__clock__timet__millisec (us_split_fields11 b))))) true false))
(declare-const value__size12 Int)
(declare-fun object__size12 (us_rep6) Int)
(declare-const value__alignment12 Int)
(declare-fun object__alignment12 (us_rep6) Int)
(assert (<= 0 value__size12))
(assert (forall ((a us_rep6)) (<= 0 (object__size12 a))))
(assert (<= 0 value__alignment12))
(assert (forall ((a us_rep6)) (<= 0 (object__alignment12 a))))
(declare-const clock__timet__year__first__bit Int)
(declare-const clock__timet__year__last__bit Int)
(declare-const clock__timet__year__position Int)
(assert (<= 0 clock__timet__year__first__bit))
(assert (< clock__timet__year__first__bit clock__timet__year__last__bit))
(assert (<= 0 clock__timet__year__position))
(declare-const clock__timet__month__first__bit Int)
(declare-const clock__timet__month__last__bit Int)
(declare-const clock__timet__month__position Int)
(assert (<= 0 clock__timet__month__first__bit))
(assert (< clock__timet__month__first__bit clock__timet__month__last__bit))
(assert (<= 0 clock__timet__month__position))
(declare-const clock__timet__day__first__bit Int)
(declare-const clock__timet__day__last__bit Int)
(declare-const clock__timet__day__position Int)
(assert (<= 0 clock__timet__day__first__bit))
(assert (< clock__timet__day__first__bit clock__timet__day__last__bit))
(assert (<= 0 clock__timet__day__position))
(declare-const clock__timet__millisec__first__bit Int)
(declare-const clock__timet__millisec__last__bit Int)
(declare-const clock__timet__millisec__position Int)
(assert (<= 0 clock__timet__millisec__first__bit))
(assert (< clock__timet__millisec__first__bit clock__timet__millisec__last__bit))
(assert (<= 0 clock__timet__millisec__position))
(declare-fun user_eq32 (us_rep6 us_rep6) Bool)
(declare-const dummy32 us_rep6)
(declare-datatypes () ((timet__ref (mk_timet__ref (timet__content us_rep6)))))
(define-fun timet__ref___projection ((a timet__ref)) us_rep6 (timet__content a))
(declare-sort serialnumbert 0)
(define-fun in_range21 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE21 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check21 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE21 (us_image) Int)
(declare-fun user_eq33 (serialnumbert serialnumbert) Bool)
(declare-const dummy33 serialnumbert)
(declare-datatypes () ((serialnumbert__ref (mk_serialnumbert__ref (serialnumbert__content serialnumbert)))))
(define-fun serialnumbert__ref___projection ((a serialnumbert__ref)) serialnumbert (serialnumbert__content a))
(declare-fun to_rep16 (serialnumbert) Int)
(declare-fun of_rep16 (Int) serialnumbert)
(assert (forall ((x serialnumbert)) (! (= (of_rep16 (to_rep16 x)) x) :pattern ((to_rep16 x)))))
(assert (forall ((x serialnumbert)) (! (in_range21 (to_rep16 x)) :pattern ((to_rep16 x)))))
(assert (forall ((x Int)) (! (=> (in_range21 x) (= (to_rep16 (of_rep16 x)) x)) :pattern ((to_rep16 (of_rep16 x))))))
(declare-datatypes () ((us_split_fields12 (mk___split_fields6 (rec__certtypes__idt__issuer us_rep1) (rec__certtypes__idt__serialnumber serialnumbert)))))
(define-fun us_split_fields_Issuer__projection ((a us_split_fields12)) us_rep1 (rec__certtypes__idt__issuer a))
(define-fun us_split_fields_SerialNumber__projection ((a us_split_fields12)) serialnumbert (rec__certtypes__idt__serialnumber a))
(declare-datatypes () ((us_split_fields__ref6 (mk___split_fields__ref6 (us_split_fields__content6 us_split_fields12)))))
(define-fun us_split_fields__ref___11__projection ((a us_split_fields__ref6)) us_split_fields12 (us_split_fields__content6 a))
(declare-datatypes () ((us_rep7 (mk___rep6 (us_split_fields13 us_split_fields12)))))
(define-fun us_rep___12__projection ((a us_rep7)) us_split_fields12 (us_split_fields13 a))
(define-fun bool_eq15 ((a us_rep7) (b us_rep7)) Bool (ite (and (= (bool_eq5 (rec__certtypes__idt__issuer (us_split_fields13 a)) (rec__certtypes__idt__issuer (us_split_fields13 b))) true) (= (to_rep16 (rec__certtypes__idt__serialnumber (us_split_fields13 a))) (to_rep16 (rec__certtypes__idt__serialnumber (us_split_fields13 b))))) true false))
(declare-const value__size13 Int)
(declare-fun object__size13 (us_rep7) Int)
(declare-const value__alignment13 Int)
(declare-fun object__alignment13 (us_rep7) Int)
(assert (<= 0 value__size13))
(assert (forall ((a us_rep7)) (<= 0 (object__size13 a))))
(assert (<= 0 value__alignment13))
(assert (forall ((a us_rep7)) (<= 0 (object__alignment13 a))))
(declare-const certtypes__idt__issuer__first__bit Int)
(declare-const certtypes__idt__issuer__last__bit Int)
(declare-const certtypes__idt__issuer__position Int)
(assert (<= 0 certtypes__idt__issuer__first__bit))
(assert (< certtypes__idt__issuer__first__bit certtypes__idt__issuer__last__bit))
(assert (<= 0 certtypes__idt__issuer__position))
(declare-const certtypes__idt__serialnumber__first__bit Int)
(declare-const certtypes__idt__serialnumber__last__bit Int)
(declare-const certtypes__idt__serialnumber__position Int)
(assert (<= 0 certtypes__idt__serialnumber__first__bit))
(assert (< certtypes__idt__serialnumber__first__bit certtypes__idt__serialnumber__last__bit))
(assert (<= 0 certtypes__idt__serialnumber__position))
(declare-fun user_eq34 (us_rep7 us_rep7) Bool)
(declare-const dummy34 us_rep7)
(declare-datatypes () ((idt__ref (mk_idt__ref (idt__content us_rep7)))))
(define-fun idt__ref___projection ((a idt__ref)) us_rep7 (idt__content a))
(declare-datatypes () ((us_split_fields14 (mk___split_fields7 (rec__cert__contentst__id us_rep7) (rec__cert__contentst__notbefore us_rep6) (rec__cert__contentst__notafter us_rep6) (rec__cert__contentst__mechanism algorithmt)))))
(define-fun us_split_fields_ID__3__projection ((a us_split_fields14)) us_rep7 (rec__cert__contentst__id a))
(define-fun us_split_fields_NotBefore__projection ((a us_split_fields14)) us_rep6 (rec__cert__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__projection ((a us_split_fields14)) us_rep6 (rec__cert__contentst__notafter a))
(define-fun us_split_fields_Mechanism__projection ((a us_split_fields14)) algorithmt (rec__cert__contentst__mechanism a))
(declare-datatypes () ((us_split_fields__ref7 (mk___split_fields__ref7 (us_split_fields__content7 us_split_fields14)))))
(define-fun us_split_fields__ref___13__projection ((a us_split_fields__ref7)) us_split_fields14 (us_split_fields__content7 a))
(declare-datatypes () ((us_rep8 (mk___rep7 (us_split_fields15 us_split_fields14)))))
(define-fun us_rep___14__projection ((a us_rep8)) us_split_fields14 (us_split_fields15 a))
(define-fun bool_eq16 ((a us_rep8) (b us_rep8)) Bool (ite (and (and (and (= (bool_eq15 (rec__cert__contentst__id (us_split_fields15 a)) (rec__cert__contentst__id (us_split_fields15 b))) true) (= (bool_eq14 (rec__cert__contentst__notbefore (us_split_fields15 a)) (rec__cert__contentst__notbefore (us_split_fields15 b))) true)) (= (bool_eq14 (rec__cert__contentst__notafter (us_split_fields15 a)) (rec__cert__contentst__notafter (us_split_fields15 b))) true)) (= (to_rep4 (rec__cert__contentst__mechanism (us_split_fields15 a))) (to_rep4 (rec__cert__contentst__mechanism (us_split_fields15 b))))) true false))
(declare-const value__size14 Int)
(declare-fun object__size14 (us_rep8) Int)
(declare-const value__alignment14 Int)
(declare-fun object__alignment14 (us_rep8) Int)
(assert (<= 0 value__size14))
(assert (forall ((a us_rep8)) (<= 0 (object__size14 a))))
(assert (<= 0 value__alignment14))
(assert (forall ((a us_rep8)) (<= 0 (object__alignment14 a))))
(declare-const cert__contentst__id__first__bit Int)
(declare-const cert__contentst__id__last__bit Int)
(declare-const cert__contentst__id__position Int)
(assert (<= 0 cert__contentst__id__first__bit))
(assert (< cert__contentst__id__first__bit cert__contentst__id__last__bit))
(assert (<= 0 cert__contentst__id__position))
(declare-const cert__contentst__notbefore__first__bit Int)
(declare-const cert__contentst__notbefore__last__bit Int)
(declare-const cert__contentst__notbefore__position Int)
(assert (<= 0 cert__contentst__notbefore__first__bit))
(assert (< cert__contentst__notbefore__first__bit cert__contentst__notbefore__last__bit))
(assert (<= 0 cert__contentst__notbefore__position))
(declare-const cert__contentst__notafter__first__bit Int)
(declare-const cert__contentst__notafter__last__bit Int)
(declare-const cert__contentst__notafter__position Int)
(assert (<= 0 cert__contentst__notafter__first__bit))
(assert (< cert__contentst__notafter__first__bit cert__contentst__notafter__last__bit))
(assert (<= 0 cert__contentst__notafter__position))
(declare-const cert__contentst__mechanism__first__bit Int)
(declare-const cert__contentst__mechanism__last__bit Int)
(declare-const cert__contentst__mechanism__position Int)
(assert (<= 0 cert__contentst__mechanism__first__bit))
(assert (< cert__contentst__mechanism__first__bit cert__contentst__mechanism__last__bit))
(assert (<= 0 cert__contentst__mechanism__position))
(declare-fun user_eq35 (us_rep8 us_rep8) Bool)
(declare-const dummy35 us_rep8)
(declare-datatypes () ((contentst__ref (mk_contentst__ref (contentst__content us_rep8)))))
(define-fun contentst__ref___projection ((a contentst__ref)) us_rep8 (contentst__content a))
(declare-fun theissuer (us_rep8) us_rep1)
(declare-fun theissuer__function_guard (us_rep1 us_rep8) Bool)
(assert true)
(declare-datatypes () ((us_split_fields16 (mk___split_fields8 (rec__cert__id__contentst__id us_rep7) (rec__cert__id__contentst__notbefore us_rep6) (rec__cert__id__contentst__notafter us_rep6) (rec__cert__id__contentst__mechanism algorithmt) (rec__cert__id__contentst__subject us_rep1) (rec__cert__id__contentst__subjectpublickey us_rep2)))))
(define-fun us_split_fields_ID__4__projection ((a us_split_fields16)) us_rep7 (rec__cert__id__contentst__id a))
(define-fun us_split_fields_NotBefore__2__projection ((a us_split_fields16)) us_rep6 (rec__cert__id__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__2__projection ((a us_split_fields16)) us_rep6 (rec__cert__id__contentst__notafter a))
(define-fun us_split_fields_Mechanism__2__projection ((a us_split_fields16)) algorithmt (rec__cert__id__contentst__mechanism a))
(define-fun us_split_fields_Subject__projection ((a us_split_fields16)) us_rep1 (rec__cert__id__contentst__subject a))
(define-fun us_split_fields_SubjectPublicKey__projection ((a us_split_fields16)) us_rep2 (rec__cert__id__contentst__subjectpublickey a))
(declare-datatypes () ((us_split_fields__ref8 (mk___split_fields__ref8 (us_split_fields__content8 us_split_fields16)))))
(define-fun us_split_fields__ref___14__projection ((a us_split_fields__ref8)) us_split_fields16 (us_split_fields__content8 a))
(declare-datatypes () ((us_rep9 (mk___rep8 (us_split_fields17 us_split_fields16)))))
(define-fun us_rep___15__projection ((a us_rep9)) us_split_fields16 (us_split_fields17 a))
(define-fun bool_eq17 ((a us_rep9) (b us_rep9)) Bool (ite (and (and (and (and (and (= (bool_eq15 (rec__cert__id__contentst__id (us_split_fields17 a)) (rec__cert__id__contentst__id (us_split_fields17 b))) true) (= (bool_eq14 (rec__cert__id__contentst__notbefore (us_split_fields17 a)) (rec__cert__id__contentst__notbefore (us_split_fields17 b))) true)) (= (bool_eq14 (rec__cert__id__contentst__notafter (us_split_fields17 a)) (rec__cert__id__contentst__notafter (us_split_fields17 b))) true)) (= (to_rep4 (rec__cert__id__contentst__mechanism (us_split_fields17 a))) (to_rep4 (rec__cert__id__contentst__mechanism (us_split_fields17 b))))) (= (bool_eq5 (rec__cert__id__contentst__subject (us_split_fields17 a)) (rec__cert__id__contentst__subject (us_split_fields17 b))) true)) (= (bool_eq6 (rec__cert__id__contentst__subjectpublickey (us_split_fields17 a)) (rec__cert__id__contentst__subjectpublickey (us_split_fields17 b))) true)) true false))
(declare-const value__size15 Int)
(declare-fun object__size15 (us_rep9) Int)
(declare-const value__alignment15 Int)
(declare-fun object__alignment15 (us_rep9) Int)
(assert (<= 0 value__size15))
(assert (forall ((a us_rep9)) (<= 0 (object__size15 a))))
(assert (<= 0 value__alignment15))
(assert (forall ((a us_rep9)) (<= 0 (object__alignment15 a))))
(declare-const cert__id__contentst__id__first__bit Int)
(declare-const cert__id__contentst__id__last__bit Int)
(declare-const cert__id__contentst__id__position Int)
(assert (<= 0 cert__id__contentst__id__first__bit))
(assert (< cert__id__contentst__id__first__bit cert__id__contentst__id__last__bit))
(assert (<= 0 cert__id__contentst__id__position))
(declare-const cert__id__contentst__notbefore__first__bit Int)
(declare-const cert__id__contentst__notbefore__last__bit Int)
(declare-const cert__id__contentst__notbefore__position Int)
(assert (<= 0 cert__id__contentst__notbefore__first__bit))
(assert (< cert__id__contentst__notbefore__first__bit cert__id__contentst__notbefore__last__bit))
(assert (<= 0 cert__id__contentst__notbefore__position))
(declare-const cert__id__contentst__notafter__first__bit Int)
(declare-const cert__id__contentst__notafter__last__bit Int)
(declare-const cert__id__contentst__notafter__position Int)
(assert (<= 0 cert__id__contentst__notafter__first__bit))
(assert (< cert__id__contentst__notafter__first__bit cert__id__contentst__notafter__last__bit))
(assert (<= 0 cert__id__contentst__notafter__position))
(declare-const cert__id__contentst__mechanism__first__bit Int)
(declare-const cert__id__contentst__mechanism__last__bit Int)
(declare-const cert__id__contentst__mechanism__position Int)
(assert (<= 0 cert__id__contentst__mechanism__first__bit))
(assert (< cert__id__contentst__mechanism__first__bit cert__id__contentst__mechanism__last__bit))
(assert (<= 0 cert__id__contentst__mechanism__position))
(declare-const cert__id__contentst__subject__first__bit Int)
(declare-const cert__id__contentst__subject__last__bit Int)
(declare-const cert__id__contentst__subject__position Int)
(assert (<= 0 cert__id__contentst__subject__first__bit))
(assert (< cert__id__contentst__subject__first__bit cert__id__contentst__subject__last__bit))
(assert (<= 0 cert__id__contentst__subject__position))
(declare-const cert__id__contentst__subjectpublickey__first__bit Int)
(declare-const cert__id__contentst__subjectpublickey__last__bit Int)
(declare-const cert__id__contentst__subjectpublickey__position Int)
(assert (<= 0 cert__id__contentst__subjectpublickey__first__bit))
(assert (< cert__id__contentst__subjectpublickey__first__bit cert__id__contentst__subjectpublickey__last__bit))
(assert (<= 0 cert__id__contentst__subjectpublickey__position))
(declare-fun user_eq36 (us_rep9 us_rep9) Bool)
(declare-const dummy36 us_rep9)
(declare-datatypes () ((contentst__ref1 (mk_contentst__ref1 (contentst__content1 us_rep9)))))
(define-fun contentst__ref___2__projection ((a contentst__ref1)) us_rep9 (contentst__content1 a))
(declare-fun thesubject (us_rep9) us_rep1)
(declare-fun thesubject__function_guard (us_rep1 us_rep9) Bool)
(assert true)
(declare-fun thepublickey (us_rep9) us_rep2)
(declare-fun thepublickey__function_guard (us_rep2 us_rep9) Bool)
(assert true)
(declare-fun cert_id_to_cert (us_rep9) us_rep8)
(declare-fun cert_id_to_cert__function_guard (us_rep8 us_rep9) Bool)
(assert true)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-fun makedescription (us_t1 Int) (Array Int character))
(declare-fun makedescription__function_guard ((Array Int character) us_t1 Int) Bool)
(assert true)
(declare-const istis Bool)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(declare-const attr__ATTRIBUTE_ADDRESS20 Int)
(declare-const attr__ATTRIBUTE_ADDRESS21 Int)
(declare-fun temp___String_Literal_1577 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1577 us_void_param) 1)) 67) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 2)) 101)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 3)) 114)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 4)) 116)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 5)) 105)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 6)) 102)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 7)) 105)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 8)) 99)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 9)) 97)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 10)) 116)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 11)) 101)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 13)) 99)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 14)) 111)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 15)) 117)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 16)) 108)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 17)) 100)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 19)) 110)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 20)) 111)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 21)) 116)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 23)) 98)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 24)) 101)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 26)) 118)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 27)) 101)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 28)) 114)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 29)) 105)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 30)) 102)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 31)) 105)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 32)) 101)) (= (to_rep (select (temp___String_Literal_1577 us_void_param) 33)) 100)) :pattern ((temp___String_Literal_1577 us_void_param)))))
(declare-fun temp___String_Literal_1579 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1579 us_void_param) 1)) 75) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 2)) 101)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 3)) 121)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 4)) 32)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 5)) 99)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 6)) 111)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 7)) 117)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 8)) 108)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 9)) 100)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 11)) 110)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 12)) 111)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 15)) 98)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 16)) 101)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 18)) 97)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 19)) 100)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 20)) 100)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 21)) 101)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 22)) 100)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 24)) 116)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 25)) 111)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 27)) 116)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 28)) 104)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 29)) 101)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 31)) 75)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 32)) 101)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 33)) 121)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 35)) 83)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 36)) 116)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 37)) 111)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 38)) 114)) (= (to_rep (select (temp___String_Literal_1579 us_void_param) 39)) 101)) :pattern ((temp___String_Literal_1579 us_void_param)))))
(declare-fun temp___String_Literal_1581 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1581 us_void_param) 1)) 67) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 2)) 101)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 3)) 114)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 4)) 116)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 5)) 105)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 6)) 102)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 7)) 105)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 8)) 99)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 9)) 97)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 10)) 116)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 11)) 101)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 13)) 99)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 14)) 111)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 15)) 110)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 16)) 116)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 17)) 101)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 18)) 110)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 19)) 116)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 20)) 115)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 22)) 99)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 23)) 111)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 24)) 117)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 25)) 108)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 26)) 100)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 28)) 110)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 29)) 111)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 30)) 116)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 32)) 98)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 33)) 101)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 35)) 101)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 36)) 120)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 37)) 116)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 38)) 114)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 39)) 97)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 40)) 99)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 41)) 116)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 42)) 101)) (= (to_rep (select (temp___String_Literal_1581 us_void_param) 43)) 100)) :pattern ((temp___String_Literal_1581 us_void_param)))))
(define-fun dynamic_invariant5 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant6 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant7 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant8 ((temp___expr_276 us_t2) (temp___is_init_273 Bool) (temp___skip_constant_274 Bool) (temp___do_toplevel_275 Bool)) Bool (and (=> (not (= temp___skip_constant_274 true)) (dynamic_property2 1 2147483647 (first5 temp___expr_276) (last5 temp___expr_276))) (=> (= temp___do_toplevel_275 true) (=> (= temp___is_init_273 true) (= (first5 temp___expr_276) 1)))))
(define-fun dynamic_predicate1 ((temp___279 us_t2)) Bool (= (first5 temp___279) 1))
(define-fun dynamic_invariant9 ((temp___expr_1010 Int) (temp___is_init_1007 Bool) (temp___skip_constant_1008 Bool) (temp___do_toplevel_1009 Bool)) Bool (=> (or (= temp___is_init_1007 true) (<= 0 17)) (in_range13 temp___expr_1010)))
(define-fun dynamic_invariant10 ((temp___expr_989 Int) (temp___is_init_986 Bool) (temp___skip_constant_987 Bool) (temp___do_toplevel_988 Bool)) Bool (=> (or (= temp___is_init_986 true) (<= 1 17)) (in_range11 temp___expr_989)))
(define-fun dynamic_invariant11 ((temp___expr_1114 Int) (temp___is_init_1111 Bool) (temp___skip_constant_1112 Bool) (temp___do_toplevel_1113 Bool)) Bool (=> (or (= temp___is_init_1111 true) (<= 0 2)) (in_range15 temp___expr_1114)))
(define-fun dynamic_invariant12 ((temp___expr_995 Int) (temp___is_init_992 Bool) (temp___skip_constant_993 Bool) (temp___do_toplevel_994 Bool)) Bool (=> (or (= temp___is_init_992 true) (<= 0 17408)) (in_range12 temp___expr_995)))
(define-fun dynamic_invariant13 ((temp___expr_1029 Int) (temp___is_init_1026 Bool) (temp___skip_constant_1027 Bool) (temp___do_toplevel_1028 Bool)) Bool (=> (or (= temp___is_init_1026 true) (<= 0 1024)) (in_range14 temp___expr_1029)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep3)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep9 (rec__auditlog__logfilelistt__length (us_split_fields5 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep9 (rec__auditlog__logfilelistt__length (us_split_fields5 usedlogfiles))) 1) 1024) (to_rep10 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(assert (= nodescription (audittypes__nodescription__aggregate_def 32)))
(define-fun dynamic_invariant14 ((temp___expr_390 Int) (temp___is_init_387 Bool) (temp___skip_constant_388 Bool) (temp___do_toplevel_389 Bool)) Bool (=> (or (= temp___is_init_387 true) (<= 1901 2099)) (in_range17 temp___expr_390)))
(define-fun dynamic_invariant15 ((temp___expr_396 Int) (temp___is_init_393 Bool) (temp___skip_constant_394 Bool) (temp___do_toplevel_395 Bool)) Bool (=> (or (= temp___is_init_393 true) (<= 1 12)) (in_range18 temp___expr_396)))
(define-fun dynamic_invariant16 ((temp___expr_402 Int) (temp___is_init_399 Bool) (temp___skip_constant_400 Bool) (temp___do_toplevel_401 Bool)) Bool (=> (or (= temp___is_init_399 true) (<= 1 31)) (in_range19 temp___expr_402)))
(define-fun dynamic_invariant17 ((temp___expr_426 Int) (temp___is_init_423 Bool) (temp___skip_constant_424 Bool) (temp___do_toplevel_425 Bool)) Bool (=> (or (= temp___is_init_423 true) (<= 0 86399999)) (in_range20 temp___expr_426)))
(define-fun dynamic_invariant18 ((temp___expr_804 Int) (temp___is_init_801 Bool) (temp___skip_constant_802 Bool) (temp___do_toplevel_803 Bool)) Bool (=> (or (= temp___is_init_801 true) (<= 0 40)) (in_range7 temp___expr_804)))
(define-fun dynamic_invariant19 ((temp___expr_825 Int) (temp___is_init_822 Bool) (temp___skip_constant_823 Bool) (temp___do_toplevel_824 Bool)) Bool (=> (or (= temp___is_init_822 true) (<= 0 4294967295)) (in_range6 temp___expr_825)))
(define-fun dynamic_invariant20 ((temp___expr_847 Int) (temp___is_init_844 Bool) (temp___skip_constant_845 Bool) (temp___do_toplevel_846 Bool)) Bool (=> (or (= temp___is_init_844 true) (<= 0 10)) (in_range8 temp___expr_847)))
(define-fun dynamic_invariant21 ((temp___expr_859 Int) (temp___is_init_856 Bool) (temp___skip_constant_857 Bool) (temp___do_toplevel_858 Bool)) Bool (=> (or (= temp___is_init_856 true) (<= 0 4294967295)) (in_range9 temp___expr_859)))
(define-fun dynamic_invariant22 ((temp___expr_865 Int) (temp___is_init_862 Bool) (temp___skip_constant_863 Bool) (temp___do_toplevel_864 Bool)) Bool (=> (or (= temp___is_init_862 true) (<= 0 128)) (in_range10 temp___expr_865)))
(define-fun dynamic_invariant23 ((temp___expr_1210 Int) (temp___is_init_1207 Bool) (temp___skip_constant_1208 Bool) (temp___do_toplevel_1209 Bool)) Bool (=> (or (= temp___is_init_1207 true) (<= 1 4096)) (in_range16 temp___expr_1210)))
(assert (= nullrawcertificate (certtypes__nullrawcertificate__aggregate_def 32)))
(define-fun dynamic_invariant24 ((temp___expr_1268 Int) (temp___is_init_1265 Bool) (temp___skip_constant_1266 Bool) (temp___do_toplevel_1267 Bool)) Bool (=> (or (= temp___is_init_1265 true) (<= 0 4294967295)) (in_range21 temp___expr_1268)))
(declare-const logfiles (Array Int us_rep))
(declare-const logfilesstatus (Array Int filestatust))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const auditsystemfault Bool)
(declare-const thistisinfo__split_fields Bool)
(declare-const thistisinfo__split_fields1 issueridt)
(declare-const thistisinfo__split_fields2 namecountt)
(declare-const thistisinfo__split_fields3 (Array Int character))
(declare-const thefile us_rep)
(declare-const certno Int)
(declare-const keyadded Bool)
(declare-const description (Array Int character))
(declare-const thecert (Array Int character))
(declare-const thecontents__split_fields us_split_fields__ref8)
(declare-const thesubject__split_fields issueridt)
(declare-const thesubject__split_fields1 namecountt)
(declare-const thesubject__split_fields2 (Array Int character))
(declare-const theissuer__split_fields issueridt)
(declare-const theissuer__split_fields1 namecountt)
(declare-const theissuer__split_fields2 (Array Int character))
(declare-const thepublickey__split_fields us_split_fields__ref1)
(declare-const extracted bool__ref)
(declare-const addedok bool__ref)
(declare-const verifiedok bool__ref)
(declare-const stop int__ref)
(declare-const filestate us_private__ref)
(declare-const state us_private__ref)
(declare-const state1 us_private__ref)
(declare-const store1 us_private__ref)
(declare-const o Bool)
(declare-const o1 Bool)
(declare-const temp___1573 us_rep)
(declare-const temp___1572 (Array Int character))
(declare-const temp___1571 Int)
(declare-const o2 integer)
(declare-const o3 integer)
(declare-const o4 Bool)
(declare-const o5 Bool)
(declare-const o6 Bool)
(declare-const temp___1574 us_rep1)
(declare-const o7 us_rep8)
(declare-const temp___1575 us_rep1)
(declare-const temp___1576 us_rep2)
(declare-const o8 us_rep8)
(declare-const temp___1582 us_t1)
(declare-const o9 us_t1)
(declare-const o10 (Array Int character))
(declare-const temp___1580 us_t1)
(declare-const o11 us_t1)
(declare-const o12 (Array Int character))
(declare-const temp___1578 us_t1)
(declare-const o13 us_t1)
(declare-const o14 (Array Int character))
(declare-const logfiles1 (Array Int us_rep))
(declare-const logfilesstatus1 (Array Int filestatust))
(declare-const logfilestate__split_fields7 us_split_fields6)
(declare-const auditalarm1 Int)
(declare-const auditsystemfault1 Bool)
(declare-const thistisinfo__split_fields4 us_split_fields8)
(declare-const thefile1 us_rep)
(declare-const filestate1 us_private)
(declare-const state2 us_private)
(declare-const state3 us_private)
(declare-const store2 us_private)
(declare-const result map__ref)
(declare-const thecert1 (Array Int character))
(declare-const result1 bool__ref)
(declare-const addedok1 Bool)
(declare-const result2 bool__ref)
(declare-const verifiedok1 Bool)
(declare-const result3 int__ref)
(declare-const stop1 Int)
(declare-const result4 map__ref)
(declare-const description1 (Array Int character))
(declare-const result5 Bool)
(declare-const thefile2 us_rep)
(declare-const thecert2 (Array Int character))
(declare-const stop2 Int)
(declare-const thefile3 us_rep)
(declare-const stop3 Int)
(declare-const file__getline__item (Array Int character))
(declare-const result6 map__ref)
(declare-const thecert3 (Array Int character))
(declare-const result7 Bool)
(declare-const thefile4 t__ref)
(declare-const thecert4 map__ref)
(declare-const stop4 int__ref)
(declare-const thefile5 us_rep)
(declare-const thecert5 (Array Int character))
(declare-const stop5 Int)
(declare-const thefile6 t__ref)
(declare-const thecert6 map__ref)
(declare-const stop6 int__ref)
(declare-const thefile7 us_rep)
(declare-const thecert7 (Array Int character))
(declare-const stop7 Int)
(declare-const thecontents__split_fields1 us_split_fields16)
(declare-const extracted1 Bool)
(declare-const result8 us_split_fields__ref)
(declare-const thesubject__split_fields3 us_split_fields)
(declare-const result9 us_split_fields__ref)
(declare-const theissuer__split_fields3 us_split_fields)
(declare-const result10 us_split_fields__ref1)
(declare-const thepublickey__split_fields1 us_split_fields2)
(declare-const logfiles2 (Array Int us_rep))
(declare-const logfilesstatus2 (Array Int filestatust))
(declare-const logfilestate__split_fields8 us_split_fields6)
(declare-const auditalarm2 Int)
(declare-const auditsystemfault2 Bool)
(declare-const thistisinfo__split_fields5 us_split_fields8)
(declare-const addedok2 Bool)
(declare-const filestate2 us_private)
(declare-const state4 us_private)
(declare-const state5 us_private)
(declare-const store3 us_private)
(declare-const logfiles3 map__ref3)
(declare-const logfilesstatus3 map__ref4)
(declare-const logfilestate__split_fields9 us_split_fields__ref3)
(declare-const auditalarm3 int__ref)
(declare-const auditsystemfault3 bool__ref)
(declare-const thistisinfo__split_fields6 us_split_fields__ref4)
(declare-const addedok3 bool__ref)
(declare-const filestate3 us_private__ref)
(declare-const state6 us_private__ref)
(declare-const state7 us_private__ref)
(declare-const store4 us_private__ref)
(declare-const logfiles4 (Array Int us_rep))
(declare-const logfilesstatus4 (Array Int filestatust))
(declare-const logfilestate__split_fields10 us_split_fields6)
(declare-const auditalarm4 Int)
(declare-const auditsystemfault4 Bool)
(declare-const thistisinfo__split_fields7 us_split_fields8)
(declare-const addedok4 Bool)
(declare-const filestate4 us_private)
(declare-const state8 us_private)
(declare-const state9 us_private)
(declare-const store5 us_private)
(declare-const logfiles5 map__ref3)
(declare-const logfilesstatus5 map__ref4)
(declare-const logfilestate__split_fields11 us_split_fields__ref3)
(declare-const auditalarm5 int__ref)
(declare-const auditsystemfault5 bool__ref)
(declare-const thistisinfo__split_fields8 us_split_fields__ref4)
(declare-const addedok5 bool__ref)
(declare-const filestate5 us_private__ref)
(declare-const state10 us_private__ref)
(declare-const state11 us_private__ref)
(declare-const store6 us_private__ref)
(declare-const logfiles6 (Array Int us_rep))
(declare-const logfilesstatus6 (Array Int filestatust))
(declare-const logfilestate__split_fields12 us_split_fields6)
(declare-const auditalarm6 Int)
(declare-const auditsystemfault6 Bool)
(declare-const thistisinfo__split_fields9 us_split_fields8)
(declare-const addedok6 Bool)
(declare-const filestate6 us_private)
(declare-const state12 us_private)
(declare-const state13 us_private)
(declare-const store7 us_private)
(declare-const logfiles7 (Array Int us_rep))
(declare-const logfilesstatus7 (Array Int filestatust))
(declare-const logfilestate__split_fields13 us_split_fields6)
(declare-const auditalarm7 Int)
(declare-const auditsystemfault7 Bool)
(declare-const verifiedok2 Bool)
(declare-const filestate7 us_private)
(declare-const state14 us_private)
(declare-const logfiles8 map__ref3)
(declare-const logfilesstatus8 map__ref4)
(declare-const logfilestate__split_fields14 us_split_fields__ref3)
(declare-const auditalarm8 int__ref)
(declare-const auditsystemfault8 bool__ref)
(declare-const verifiedok3 bool__ref)
(declare-const filestate8 us_private__ref)
(declare-const state15 us_private__ref)
(declare-const logfiles9 (Array Int us_rep))
(declare-const logfilesstatus9 (Array Int filestatust))
(declare-const logfilestate__split_fields15 us_split_fields6)
(declare-const auditalarm9 Int)
(declare-const auditsystemfault9 Bool)
(declare-const verifiedok4 Bool)
(declare-const filestate9 us_private)
(declare-const state16 us_private)
(declare-const logfiles10 (Array Int us_rep))
(declare-const logfilesstatus10 (Array Int filestatust))
(declare-const logfilestate__split_fields16 us_split_fields6)
(declare-const auditalarm10 Int)
(declare-const auditsystemfault10 Bool)
(declare-const thistisinfo__split_fields10 us_split_fields8)
(declare-const addedok7 Bool)
(declare-const filestate10 us_private)
(declare-const state17 us_private)
(declare-const state18 us_private)
(declare-const store8 us_private)
(declare-const logfiles11 map__ref3)
(declare-const logfilesstatus11 map__ref4)
(declare-const logfilestate__split_fields17 us_split_fields__ref3)
(declare-const auditalarm11 int__ref)
(declare-const auditsystemfault11 bool__ref)
(declare-const thistisinfo__split_fields11 us_split_fields__ref4)
(declare-const addedok8 bool__ref)
(declare-const filestate11 us_private__ref)
(declare-const state19 us_private__ref)
(declare-const state20 us_private__ref)
(declare-const store9 us_private__ref)
(declare-const logfiles12 (Array Int us_rep))
(declare-const logfilesstatus12 (Array Int filestatust))
(declare-const logfilestate__split_fields18 us_split_fields6)
(declare-const auditalarm12 Int)
(declare-const auditsystemfault12 Bool)
(declare-const thistisinfo__split_fields12 us_split_fields8)
(declare-const addedok9 Bool)
(declare-const filestate12 us_private)
(declare-const state21 us_private)
(declare-const state22 us_private)
(declare-const store10 us_private)
(declare-const logfiles13 (Array Int us_rep))
(declare-const logfilesstatus13 (Array Int filestatust))
(declare-const logfilestate__split_fields19 us_split_fields6)
(declare-const auditalarm13 Int)
(declare-const auditsystemfault13 Bool)
(declare-const thistisinfo__split_fields13 us_split_fields8)
(declare-const addedok10 Bool)
(declare-const filestate13 us_private)
(declare-const state23 us_private)
(declare-const state24 us_private)
(declare-const store11 us_private)
(declare-const logfiles14 map__ref3)
(declare-const logfilesstatus14 map__ref4)
(declare-const logfilestate__split_fields20 us_split_fields__ref3)
(declare-const auditalarm14 int__ref)
(declare-const auditsystemfault14 bool__ref)
(declare-const thistisinfo__split_fields14 us_split_fields__ref4)
(declare-const addedok11 bool__ref)
(declare-const filestate14 us_private__ref)
(declare-const state25 us_private__ref)
(declare-const state26 us_private__ref)
(declare-const store12 us_private__ref)
(declare-const logfiles15 (Array Int us_rep))
(declare-const logfilesstatus15 (Array Int filestatust))
(declare-const logfilestate__split_fields21 us_split_fields6)
(declare-const auditalarm15 Int)
(declare-const auditsystemfault15 Bool)
(declare-const thistisinfo__split_fields15 us_split_fields8)
(declare-const addedok12 Bool)
(declare-const filestate15 us_private)
(declare-const state27 us_private)
(declare-const state28 us_private)
(declare-const store13 us_private)
(declare-const result11 map__ref)
(declare-const description2 (Array Int character))
(declare-const result12 map__ref)
(declare-const description3 (Array Int character))
(declare-const result13 map__ref)
(declare-const description4 (Array Int character))
(declare-const description5 map__ref)
(declare-const description6 (Array Int character))
(declare-const description7 map__ref)
(declare-const description8 (Array Int character))
(declare-const description9 map__ref)
(declare-const description10 (Array Int character))
(declare-const result14 bool__ref)
(declare-const keyadded1 Bool)
(declare-const logfiles16 map__ref3)
(declare-const logfilesstatus16 map__ref4)
(declare-const logfilestate__split_fields22 us_split_fields__ref3)
(declare-const auditalarm16 int__ref)
(declare-const auditsystemfault16 bool__ref)
(declare-const thistisinfo__split_fields16 us_split_fields__ref4)
(declare-const thefile8 t__ref)
(declare-const keyadded2 bool__ref)
(declare-const description11 map__ref)
(declare-const thecert8 map__ref)
(declare-const thecontents__split_fields2 us_split_fields__ref8)
(declare-const thesubject__split_fields4 us_split_fields__ref)
(declare-const theissuer__split_fields4 us_split_fields__ref)
(declare-const thepublickey__split_fields2 us_split_fields__ref1)
(declare-const extracted2 bool__ref)
(declare-const addedok13 bool__ref)
(declare-const verifiedok5 bool__ref)
(declare-const stop8 int__ref)
(declare-const filestate16 us_private__ref)
(declare-const state29 us_private__ref)
(declare-const state30 us_private__ref)
(declare-const store14 us_private__ref)
(declare-const logfiles17 (Array Int us_rep))
(declare-const logfilesstatus17 (Array Int filestatust))
(declare-const logfilestate__split_fields23 us_split_fields6)
(declare-const auditalarm17 Int)
(declare-const auditsystemfault17 Bool)
(declare-const thistisinfo__split_fields17 us_split_fields8)
(declare-const thefile9 us_rep)
(declare-const keyadded3 Bool)
(declare-const description12 (Array Int character))
(declare-const thecert9 (Array Int character))
(declare-const thecontents__split_fields3 us_split_fields16)
(declare-const thesubject__split_fields5 us_split_fields)
(declare-const theissuer__split_fields5 us_split_fields)
(declare-const thepublickey__split_fields3 us_split_fields2)
(declare-const extracted3 Bool)
(declare-const addedok14 Bool)
(declare-const verifiedok6 Bool)
(declare-const stop9 Int)
(declare-const filestate17 us_private)
(declare-const state31 us_private)
(declare-const state32 us_private)
(declare-const store15 us_private)
(assert (= (audittypes__nodescription__aggregate_def 32) nodescription))
(assert (= (certtypes__nullrawcertificate__aggregate_def 32) nullrawcertificate))
(assert (in_range2 certno))
(assert (= (valid_numberlogentries (to_rep7 logfilestate__split_fields) (to_rep8 logfilestate__split_fields1) (mk___rep2 (mk___split_fields2 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range5 auditalarm))
(assert (= result (mk_map__ref thecert)))
(assert (= thecert1 nullrawcertificate))
(assert (= result1 addedok))
(assert (= (let ((subject addedok)) addedok1) (of_int 1)))
(assert (= result2 verifiedok))
(assert (= (let ((subject verifiedok)) verifiedok1) (of_int 0)))
(assert (= result3 stop))
(assert (= (let ((subject stop)) stop1) 0))
(assert (in_range4 (let ((subject stop)) stop1)))
(assert (= result4 (mk_map__ref description)))
(assert (= description1 nodescription))
(assert (= o (endoffile thefile)))
(assert (= o1 (ite (not (= o true)) true false)))
(assert (= result5 (ite (= (let ((subject stop)) stop1) 0) o1 false)))
(assert (=> (= result5 true) (= temp___1573 thefile)))
(assert (=> (= result5 true) (= temp___1572 thecert1)))
(assert (=> (= result5 true) (= temp___1571 (let ((subject stop)) stop1))))
(assert (=> (= result5 true) (and (=> (<= 0 2147483647) (in_range4 (let ((subject stop)) stop2))) (and (= (let ((subject stop)) stop2) 0) (not (= (endoffile thefile2) true))))))
(assert (=> (= result5 true) (= (to_rep1 o3) 4096)))
(assert (=> (= result5 true) (= (to_rep1 o2) 1)))
(assert (=> (= result5 true) (in_range4 (let ((subject stop)) stop3))))
(assert (=> (= result5 true) (= result6 (mk_map__ref thecert2))))
(assert (=> (= result5 true) (= thecert3 (slide file__getline__item (to_rep1 (first (mk 1 4096))) 1))))
(assert (=> (= result5 true) (= o4 (endoffile thefile3))))
(assert (=> (= result5 true) (= o5 (ite (not (= o4 true)) true false))))
(assert (=> (= result5 true) (= o6 (ite (= (let ((subject stop)) stop3) 0) o5 false))))
(assert (=> (= result5 true) (= result7 (ite (not (= o6 true)) true false))))
(assert (=> (= result5 true) (= result7 true)))
(assert (=> (= result5 true) (= stop4 (let ((subject stop)) (mk_int__ref stop3)))))
(assert (=> (= result5 true) (= thecert4 (mk_map__ref thecert3))))
(assert (=> (= result5 true) (= thefile4 (mk_t__ref thefile3))))
(assert (=> (= result5 true) (= stop5 stop3)))
(assert (=> (= result5 true) (= thecert5 thecert3)))
(assert (=> (= result5 true) (= thefile5 thefile3)))
(assert (=> (= result5 true) (= stop6 stop4)))
(assert (=> (= result5 true) (= thecert6 thecert4)))
(assert (=> (= result5 true) (= thefile6 thefile4)))
(assert (=> (= result5 true) (= stop7 stop5)))
(assert (=> (= result5 true) (= thecert7 thecert5)))
(assert (=> (= result5 true) (= thefile7 thefile5)))
(assert (=> (not (= result5 true)) (= stop6 (let ((subject stop)) (mk_int__ref stop1)))))
(assert (=> (not (= result5 true)) (= thecert6 (mk_map__ref thecert1))))
(assert (=> (not (= result5 true)) (= thefile6 (mk_t__ref thefile))))
(assert (=> (not (= result5 true)) (= stop7 stop1)))
(assert (=> (not (= result5 true)) (= thecert7 thecert1)))
(assert (=> (not (= result5 true)) (= thefile7 thefile1)))
(assert (= temp___1574 (thesubject (mk___rep8 (let ((subject thecontents__split_fields)) thecontents__split_fields1)))))
(assert (= result8 (mk___split_fields__ref (mk___split_fields thesubject__split_fields thesubject__split_fields1 thesubject__split_fields2))))
(assert (= thesubject__split_fields3 (us_split_fields1 temp___1574)))
(assert (= o7 (cert_id_to_cert (mk___rep8 (let ((subject thecontents__split_fields)) thecontents__split_fields1)))))
(assert (= temp___1575 (theissuer o7)))
(assert (= result9 (mk___split_fields__ref (mk___split_fields theissuer__split_fields theissuer__split_fields1 theissuer__split_fields2))))
(assert (= theissuer__split_fields3 (us_split_fields1 temp___1575)))
(assert (= temp___1576 (thepublickey (mk___rep8 (let ((subject thecontents__split_fields)) thecontents__split_fields1)))))
(assert (= result10 thepublickey__split_fields))
(assert (= (let ((subject thepublickey__split_fields)) thepublickey__split_fields1) (us_split_fields3 temp___1576)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (and (ite (= (ite (= (ite (= (let ((subject addedok)) addedok2) true) (ite (= (of_int 1) false) (privatekeypresent thistisinfo__split_fields5 (let ((subject state1)) state5)) false) false) false) (ite (= (let ((subject addedok)) addedok2) true) (ite (= (of_int 1) false) false (= (to_int1 (privatekeypresent thistisinfo__split_fields5 (let ((subject state1)) state5))) (to_int1 (privatekeypresent (mk___split_fields4 thistisinfo__split_fields (mk___rep (mk___split_fields thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3))) (us_private__content state1))))) (= (to_int1 (privatekeypresent thistisinfo__split_fields5 (let ((subject state1)) state5))) (to_int1 (privatekeypresent (mk___split_fields4 thistisinfo__split_fields (mk___rep (mk___split_fields thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3))) (us_private__content state1))))) true) true) (ite (= (ite (= (ite (= (let ((subject addedok)) addedok2) true) (ite (= (of_int 1) false) (privatekeypresent thistisinfo__split_fields5 (let ((subject state1)) state5)) false) false) true) (ite (= (let ((subject addedok)) addedok2) true) (ite (= (of_int 1) false) false (= (to_int1 (privatekeypresent thistisinfo__split_fields5 (let ((subject state1)) state5))) (to_int1 (privatekeypresent (mk___split_fields4 thistisinfo__split_fields (mk___rep (mk___split_fields thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3))) (us_private__content state1))))) (= (to_int1 (privatekeypresent thistisinfo__split_fields5 (let ((subject state1)) state5))) (to_int1 (privatekeypresent (mk___split_fields4 thistisinfo__split_fields (mk___rep (mk___split_fields thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3))) (us_private__content state1))))) false) false) true false) false) (and (= (valid_numberlogentries (to_rep7 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields8)) (to_rep8 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields8)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields8) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields8)) true) (in_range5 auditalarm2))))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= store4 (let ((subject store1)) (mk___private__ref store3))))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= state7 (let ((subject state1)) (mk___private__ref state5))))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= state6 (let ((subject state)) (mk___private__ref state4))))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= filestate3 (let ((subject filestate)) (mk___private__ref filestate2))))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= addedok3 (let ((subject addedok)) (mk_bool__ref addedok2))))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= thistisinfo__split_fields6 (mk___split_fields__ref4 thistisinfo__split_fields5)))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= auditsystemfault3 (mk_bool__ref auditsystemfault2)))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= auditalarm3 (mk_int__ref auditalarm2)))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= logfilestate__split_fields9 (mk___split_fields__ref3 logfilestate__split_fields8)))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= logfilesstatus3 (mk_map__ref4 logfilesstatus2)))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= logfiles3 (mk_map__ref3 logfiles2)))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= store5 store3))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= state9 state5))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= state8 state4))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= filestate4 filestate2))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= addedok4 addedok2))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= thistisinfo__split_fields7 thistisinfo__split_fields5))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= auditsystemfault4 auditsystemfault2))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= auditalarm4 auditalarm2))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= logfilestate__split_fields10 logfilestate__split_fields8))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= logfilesstatus4 logfilesstatus2))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3))) (= logfiles4 logfiles2))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= store4 store1))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= state7 state1))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= state6 state))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= filestate3 filestate))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= addedok3 (let ((subject addedok)) (mk_bool__ref addedok1))))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= thistisinfo__split_fields6 (mk___split_fields__ref4 (mk___split_fields4 thistisinfo__split_fields (mk___rep (mk___split_fields thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3))))))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= auditsystemfault3 (mk_bool__ref auditsystemfault)))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= auditalarm3 (mk_int__ref auditalarm)))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= logfilestate__split_fields9 (mk___split_fields__ref3 (mk___split_fields3 logfilestate__split_fields logfilestate__split_fields1 (mk___rep2 (mk___split_fields2 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6))))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= logfilesstatus3 (mk_map__ref4 logfilesstatus)))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= logfiles3 (mk_map__ref3 logfiles)))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= store5 store2))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= state9 state3))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= state8 state2))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= filestate4 filestate1))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= addedok4 addedok1))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= thistisinfo__split_fields7 thistisinfo__split_fields4))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= auditsystemfault4 auditsystemfault1))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= auditalarm4 auditalarm1))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= logfilestate__split_fields10 logfilestate__split_fields7))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= logfilesstatus4 logfilesstatus1))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (=> (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) (= logfiles4 logfiles1))))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= store6 store4)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= state11 state7)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= state10 state6)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= filestate5 filestate3)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= addedok5 addedok3)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= thistisinfo__split_fields8 thistisinfo__split_fields6)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= auditsystemfault5 auditsystemfault3)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= auditalarm5 auditalarm3)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= logfilestate__split_fields11 logfilestate__split_fields9)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= logfilesstatus5 logfilesstatus3)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= logfiles5 logfiles3)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= store7 store5)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= state13 state9)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= state12 state8)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= filestate6 filestate4)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= addedok6 addedok4)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= thistisinfo__split_fields9 thistisinfo__split_fields7)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= auditsystemfault6 auditsystemfault4)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= auditalarm6 auditalarm4)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= logfilestate__split_fields12 logfilestate__split_fields10)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= logfilesstatus6 logfilesstatus4)))
(assert (=> (= (let ((subject extracted)) extracted1) true) (= logfiles6 logfiles4)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= store6 store1)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= state11 state1)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= state10 state)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= filestate5 filestate)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= addedok5 (let ((subject addedok)) (mk_bool__ref addedok1)))))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= thistisinfo__split_fields8 (mk___split_fields__ref4 (mk___split_fields4 thistisinfo__split_fields (mk___rep (mk___split_fields thistisinfo__split_fields1 thistisinfo__split_fields2 thistisinfo__split_fields3)))))))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= auditsystemfault5 (mk_bool__ref auditsystemfault))))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= auditalarm5 (mk_int__ref auditalarm))))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= logfilestate__split_fields11 (mk___split_fields__ref3 (mk___split_fields3 logfilestate__split_fields logfilestate__split_fields1 (mk___rep2 (mk___split_fields2 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6)))))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= logfilesstatus5 (mk_map__ref4 logfilesstatus))))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= logfiles5 (mk_map__ref3 logfiles))))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= store7 store2)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= state13 state3)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= state12 state2)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= filestate6 filestate1)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= addedok6 addedok1)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= thistisinfo__split_fields9 thistisinfo__split_fields4)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= auditsystemfault6 auditsystemfault1)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= auditalarm6 auditalarm1)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= logfilestate__split_fields12 logfilestate__split_fields7)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= logfilesstatus6 logfilesstatus1)))
(assert (=> (not (= (let ((subject extracted)) extracted1) true)) (= logfiles6 logfiles1)))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= o8 (cert_id_to_cert (mk___rep8 (let ((subject thecontents__split_fields)) thecontents__split_fields1))))))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (and (= (valid_numberlogentries (to_rep7 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields13)) (to_rep8 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields13)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields13) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields13)) true) (in_range5 auditalarm7))))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= state15 (let ((subject state)) (mk___private__ref state14)))))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= filestate8 (let ((subject filestate)) (mk___private__ref filestate7)))))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= verifiedok3 (let ((subject verifiedok)) (mk_bool__ref verifiedok2)))))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= auditsystemfault8 (mk_bool__ref auditsystemfault7))))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= auditalarm8 (mk_int__ref auditalarm7))))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= logfilestate__split_fields14 (mk___split_fields__ref3 logfilestate__split_fields13))))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= logfilesstatus8 (mk_map__ref4 logfilesstatus7))))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= logfiles8 (mk_map__ref3 logfiles7))))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= state16 state14)))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= filestate9 filestate7)))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= verifiedok4 verifiedok2)))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= auditsystemfault9 auditsystemfault7)))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= auditalarm9 auditalarm7)))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= logfilestate__split_fields15 logfilestate__split_fields13)))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= logfilesstatus9 logfilesstatus7)))
(assert (=> (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true) (= logfiles9 logfiles7)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= state15 state10)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= filestate8 filestate5)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= verifiedok3 (let ((subject verifiedok)) (mk_bool__ref verifiedok1)))))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= auditsystemfault8 auditsystemfault5)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= auditalarm8 auditalarm5)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= logfilestate__split_fields14 logfilestate__split_fields11)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= logfilesstatus8 logfilesstatus5)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= logfiles8 logfiles5)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= state16 state12)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= filestate9 filestate6)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= verifiedok4 verifiedok1)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= auditsystemfault9 auditsystemfault6)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= auditalarm9 auditalarm6)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= logfilestate__split_fields15 logfilestate__split_fields12)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= logfilesstatus9 logfilesstatus6)))
(assert (=> (not (= (ite (= (let ((subject extracted)) extracted1) true) (bool__content addedok5) false) true)) (= logfiles9 logfiles6)))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (and (ite (= (ite (= (ite (= (let ((subject addedok)) addedok7) true) (ite (= (of_int 1) false) (privatekeypresent thistisinfo__split_fields10 (let ((subject state1)) state18)) false) false) false) (ite (= (let ((subject addedok)) addedok7) true) (ite (= (of_int 1) false) false (= (to_int1 (privatekeypresent thistisinfo__split_fields10 (let ((subject state1)) state18))) (to_int1 (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields8) (us_private__content state11))))) (= (to_int1 (privatekeypresent thistisinfo__split_fields10 (let ((subject state1)) state18))) (to_int1 (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields8) (us_private__content state11))))) true) true) (ite (= (ite (= (ite (= (let ((subject addedok)) addedok7) true) (ite (= (of_int 1) false) (privatekeypresent thistisinfo__split_fields10 (let ((subject state1)) state18)) false) false) true) (ite (= (let ((subject addedok)) addedok7) true) (ite (= (of_int 1) false) false (= (to_int1 (privatekeypresent thistisinfo__split_fields10 (let ((subject state1)) state18))) (to_int1 (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields8) (us_private__content state11))))) (= (to_int1 (privatekeypresent thistisinfo__split_fields10 (let ((subject state1)) state18))) (to_int1 (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields8) (us_private__content state11))))) false) false) true false) false) (and (= (valid_numberlogentries (to_rep7 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields16)) (to_rep8 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields16)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields16) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields16)) true) (in_range5 auditalarm10)))))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= store9 (let ((subject store1)) (mk___private__ref store8)))))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= state20 (let ((subject state1)) (mk___private__ref state18)))))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= state19 (let ((subject state)) (mk___private__ref state17)))))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= filestate11 (let ((subject filestate)) (mk___private__ref filestate10)))))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= addedok8 (let ((subject addedok)) (mk_bool__ref addedok7)))))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= thistisinfo__split_fields11 (mk___split_fields__ref4 thistisinfo__split_fields10))))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= auditsystemfault11 (mk_bool__ref auditsystemfault10))))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= auditalarm11 (mk_int__ref auditalarm10))))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= logfilestate__split_fields17 (mk___split_fields__ref3 logfilestate__split_fields16))))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= logfilesstatus11 (mk_map__ref4 logfilesstatus10))))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= logfiles11 (mk_map__ref3 logfiles10))))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= store10 store8)))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= state22 state18)))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= state21 state17)))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= filestate12 filestate10)))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= addedok9 addedok7)))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= thistisinfo__split_fields12 thistisinfo__split_fields10)))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= auditsystemfault12 auditsystemfault10)))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= auditalarm12 auditalarm10)))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= logfilestate__split_fields18 logfilestate__split_fields16)))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= logfilesstatus12 logfilesstatus10)))
(assert (=> (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false) (= logfiles12 logfiles10)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= store9 store6)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= state20 state11)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= state19 state15)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= filestate11 filestate8)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= addedok8 addedok5)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= thistisinfo__split_fields11 thistisinfo__split_fields8)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= auditsystemfault11 auditsystemfault8)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= auditalarm11 auditalarm8)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= logfilestate__split_fields17 logfilestate__split_fields14)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= logfilesstatus11 logfilesstatus8)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= logfiles11 logfiles8)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= store10 store7)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= state22 state13)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= state21 state16)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= filestate12 filestate9)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= addedok9 addedok6)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= thistisinfo__split_fields12 thistisinfo__split_fields9)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= auditsystemfault12 auditsystemfault9)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= auditalarm12 auditalarm9)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= logfilestate__split_fields18 logfilestate__split_fields15)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= logfilesstatus12 logfilesstatus9)))
(assert (=> (not (ite (= (bool__content verifiedok3) true) (not (= (to_rep2 (rec__cryptotypes__issuert__id thesubject__split_fields3)) (to_rep2 (rec__cryptotypes__issuert__id theissuer__split_fields3)))) false)) (= logfiles12 logfiles9)))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (and (ite (= (ite (= (ite (= (let ((subject addedok)) addedok10) true) (ite (= (of_int 0) false) (privatekeypresent thistisinfo__split_fields13 (let ((subject state1)) state24)) false) false) false) (ite (= (let ((subject addedok)) addedok10) true) (ite (= (of_int 0) false) false (= (to_int1 (privatekeypresent thistisinfo__split_fields13 (let ((subject state1)) state24))) (to_int1 (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields11) (us_private__content state20))))) (= (to_int1 (privatekeypresent thistisinfo__split_fields13 (let ((subject state1)) state24))) (to_int1 (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields11) (us_private__content state20))))) true) true) (ite (= (ite (= (ite (= (let ((subject addedok)) addedok10) true) (ite (= (of_int 0) false) (privatekeypresent thistisinfo__split_fields13 (let ((subject state1)) state24)) false) false) true) (ite (= (let ((subject addedok)) addedok10) true) (ite (= (of_int 0) false) false (= (to_int1 (privatekeypresent thistisinfo__split_fields13 (let ((subject state1)) state24))) (to_int1 (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields11) (us_private__content state20))))) (= (to_int1 (privatekeypresent thistisinfo__split_fields13 (let ((subject state1)) state24))) (to_int1 (privatekeypresent (us_split_fields__content4 thistisinfo__split_fields11) (us_private__content state20))))) false) false) true false) false) (and (= (valid_numberlogentries (to_rep7 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields19)) (to_rep8 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields19)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields19) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields19)) true) (in_range5 auditalarm13)))))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= store12 (let ((subject store1)) (mk___private__ref store11)))))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= state26 (let ((subject state1)) (mk___private__ref state24)))))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= state25 (let ((subject state)) (mk___private__ref state23)))))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= filestate14 (let ((subject filestate)) (mk___private__ref filestate13)))))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= addedok11 (let ((subject addedok)) (mk_bool__ref addedok10)))))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= thistisinfo__split_fields14 (mk___split_fields__ref4 thistisinfo__split_fields13))))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= auditsystemfault14 (mk_bool__ref auditsystemfault13))))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= auditalarm14 (mk_int__ref auditalarm13))))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= logfilestate__split_fields20 (mk___split_fields__ref3 logfilestate__split_fields19))))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= logfilesstatus14 (mk_map__ref4 logfilesstatus13))))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= logfiles14 (mk_map__ref3 logfiles13))))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= store13 store11)))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= state28 state24)))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= state27 state23)))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= filestate15 filestate13)))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= addedok12 addedok10)))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= thistisinfo__split_fields15 thistisinfo__split_fields13)))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= auditsystemfault15 auditsystemfault13)))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= auditalarm15 auditalarm13)))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= logfilestate__split_fields21 logfilestate__split_fields19)))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= logfilesstatus15 logfilesstatus13)))
(assert (=> (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true) (= logfiles15 logfiles13)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= store12 store9)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= state26 state20)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= state25 state19)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= filestate14 filestate11)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= addedok11 addedok8)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= thistisinfo__split_fields14 thistisinfo__split_fields11)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= auditsystemfault14 auditsystemfault11)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= auditalarm14 auditalarm11)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= logfilestate__split_fields20 logfilestate__split_fields17)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= logfilesstatus14 logfilesstatus11)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= logfiles14 logfiles11)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= store13 store10)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= state28 state22)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= state27 state21)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= filestate15 filestate12)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= addedok12 addedok9)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= thistisinfo__split_fields15 thistisinfo__split_fields12)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= auditsystemfault15 auditsystemfault12)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= auditalarm15 auditalarm12)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= logfilestate__split_fields21 logfilestate__split_fields18)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= logfilesstatus15 logfilesstatus12)))
(assert (=> (not (= (ite (= (ite (= (bool__content verifiedok3) true) (bool__content addedok8) false) true) istis false) true)) (= logfiles15 logfiles12)))
(assert (= (let ((subject extracted)) extracted1) true))
(assert (not (= (bool__content addedok11) true)))
(assert (dynamic_property1 1 2147483647 1 39))
(assert (= temp___1580 (mk___t1 (temp___String_Literal_1579 Tuple0) (mk1 1 39))))
(assert (not (dynamic_predicate temp___1580)))
(check-sat)
(exit)
