(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic comp_div: int, int -> int
axiom comp_div_def: forall x, y:int. x >= 0 and y > 0 -> comp_div(x,y) = x / y
logic comp_mod: int, int -> int
axiom comp_mod_def: forall x, y:int. x >= 0 and y > 0 -> comp_mod(x,y) = x % y
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

axiom Div_mod :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (x = ((y * comp_div(x,y)) + comp_mod(x,y)))))

axiom Div_bound :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  ((0 <= comp_div(x,y)) and (comp_div(x,y) <= x))))

axiom Mod_bound :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (((-abs_int(y)) <  comp_mod(x,y)) and (comp_mod(x,y) <  abs_int(y)))))

axiom Div_sign_pos :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  (0 <= comp_div(x,y))))

axiom Div_sign_neg :
  (forall x:int. forall y:int. (((x <= 0) and (0 <  y)) ->
  (comp_div(x,y) <= 0)))

axiom Mod_sign_pos :
  (forall x:int. forall y:int. (((0 <= x) and (not (y = 0))) ->
  (0 <= comp_mod(x,y))))

axiom Mod_sign_neg :
  (forall x:int. forall y:int. (((x <= 0) and (not (y = 0))) ->
  (comp_mod(x,y) <= 0)))

axiom Rounds_toward_zero :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (abs_int((comp_div(x,y) * y)) <= abs_int(x))))

axiom Div_1 : (forall x:int. (comp_div(x,1) = x))

axiom Mod_1 : (forall x:int. (comp_mod(x,1) = 0))

axiom Div_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) ->
  (comp_div(x,y) = 0)))

axiom Mod_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) ->
  (comp_mod(x,y) = x)))

axiom Div_mult :
  (forall x:int. forall y:int. forall z:int [comp_div(((x * y) + z),x)].
  (((0 <  x) and ((0 <= y) and (0 <= z))) ->
  (comp_div(((x * y) + z),x) = (y + comp_div(z,x)))))

axiom Mod_mult :
  (forall x:int. forall y:int. forall z:int [comp_mod(((x * y) + z),x)].
  (((0 <  x) and ((0 <= y) and (0 <= z))) ->
  (comp_mod(((x * y) + z),x) = comp_mod(z,x))))

axiom Div_mod1 :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (x = ((y * (x / y)) + (x % y)))))

axiom Mod_bound1 :
  (forall x:int. forall y:int. ((not (y = 0)) -> ((0 <= (x % y)) and
  ((x % y) <  abs_int(y)))))

axiom Div_unique :
  (forall x:int. forall y:int. forall q:int. ((0 <  y) ->
  ((((q * y) <= x) and (x <  ((q * y) + y))) -> ((x / y) = q))))

axiom Div_bound1 :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  ((0 <= (x / y)) and ((x / y) <= x))))

axiom Mod_11 : (forall x:int. ((x % 1) = 0))

axiom Div_11 : (forall x:int. ((x / 1) = x))

axiom Div_inf1 :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) -> ((x / y) = 0)))

axiom Div_inf_neg :
  (forall x:int. forall y:int. (((0 <  x) and (x <= y)) ->
  (((-x) / y) = (- 1))))

axiom Mod_0 : (forall y:int. ((not (y = 0)) -> ((0 % y) = 0)))

axiom Div_1_left : (forall y:int. ((1 <  y) -> ((1 / y) = 0)))

axiom Div_minus1_left : (forall y:int. ((1 <  y) -> (((- 1) / y) = (- 1))))

axiom Mod_1_left : (forall y:int. ((1 <  y) -> ((1 % y) = 1)))

axiom Mod_minus1_left :
  (forall y:int [((- 1) % y)]. ((1 <  y) -> (((- 1) % y) = (y - 1))))

axiom Div_mult1 :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) / x)].
  ((0 <  x) -> ((((x * y) + z) / x) = (y + (z / x)))))

axiom Mod_mult1 :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) % x)].
  ((0 <  x) -> ((((x * y) + z) % x) = (z % x))))

logic mod : int, int -> int

axiom mod_def :
  (forall x:int. forall y:int [mod(x, y)]. (((0 <  y) -> (mod(x,
  y) = (x % y))) and ((not (0 <  y)) -> (mod(x, y) = ((x % y) + y)))))

type integer

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq1 : int, int -> bool

axiom bool_eq_def :
  (forall x:int. forall y:int [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range1(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range2(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq4 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def3 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq4(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_78:int. ((((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) and
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))) or
  (not ((a__first <= temp___idx_78) and (temp___idx_78 <= a__last)))))) ->
  (bool_eq4(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)]))))))) ->
  (bool_eq4(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))))))))

logic compare : (int,character) farray, int, int, (int,character) farray,
  int, int -> int

axiom compare_def_eq :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq4(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq4(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq4(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range(f) -> (in_range(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range(low) and (in_range(high) and ((low <= high) ->
  (in_range1(low) and in_range1(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,character) farray -> int

logic value__component__size : int

logic object__component__size : (int,character) farray -> int

logic value__alignment : int

logic object__alignment : (int,character) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,character) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,character) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,character) farray. (0 <= object__alignment(a)))

function bool_eq5(x: us_t, y: us_t) : bool = bool_eq4((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : (int,character) farray

logic dummy4 : t

logic to_string : us_image -> us_t

logic from_string : us_t -> us_image

type string__ref = { string__content : us_t
}

function string__ref___projection(a: string__ref) : us_t =
  (a).string__content

type descriptioni

predicate in_range3(x: int) = ((1 <= x) and (x <= 150))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq4 : descriptioni, descriptioni -> bool

logic dummy5 : descriptioni

type descriptioni__ref = { descriptioni__content : descriptioni
}

function descriptioni__ref___projection(a: descriptioni__ref) : descriptioni =
  (a).descriptioni__content

logic nodescription : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS : int

logic audittypes__nodescription__aggregate_def : int -> (int,character) farray

axiom def_axiom :
  (forall temp___134:int.
  (forall temp___135:int.
  ((audittypes__nodescription__aggregate_def(temp___134)[temp___135]) = of_rep(temp___134))))

type filesizet

predicate in_range4(x: int) = ((0 <= x) and (x <= 4194304))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq5 : filesizet, filesizet -> bool

logic dummy6 : filesizet

type filesizet__ref = { filesizet__content : filesizet
}

function filesizet__ref___projection(a: filesizet__ref) : filesizet =
  (a).filesizet__content

type durationt

predicate in_range5(x: int) = ((0 <= x) and (x <= 864000))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq6 : durationt, durationt -> bool

logic dummy7 : durationt

type durationt__ref = { durationt__content : durationt
}

function durationt__ref___projection(a: durationt__ref) : durationt =
  (a).durationt__content

type durationtexti

predicate in_range6(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq7 : durationtexti, durationtexti -> bool

logic dummy8 : durationtexti

type durationtexti__ref = { durationtexti__content : durationtexti
}

function durationtexti__ref___projection(a: durationtexti__ref) : durationtexti =
  (a).durationtexti__content

logic printduration : int -> (int,character) farray

logic printduration__function_guard : (int,character) farray, int -> prop

axiom printduration__post_axiom : true

type fart

predicate in_range7(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq8 : fart, fart -> bool

logic dummy9 : fart

type fart__ref = { fart__content : fart
}

function fart__ref___projection(a: fart__ref) : fart = (a).fart__content

type classt

predicate in_range8(x: int) = ((0 <= x) and (x <= 5))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq9 : classt, classt -> bool

logic dummy10 : classt

type classt__ref = { classt__content : classt
}

function classt__ref___projection(a: classt__ref) : classt =
  (a).classt__content

type durationt1

predicate in_range9(x: int) = ((0 <= x) and (x <= 2000))

logic bool_eq12 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq10 : durationt1, durationt1 -> bool

logic dummy11 : durationt1

type durationt__ref1 = { durationt__content1 : durationt1
}

function durationt__ref___2__projection(a: durationt__ref1) : durationt1 =
  (a).durationt__content1

type accesspolicyt

predicate in_range10(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq13 : int, int -> bool

axiom bool_eq_def11 :
  (forall x:int. forall y:int [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq11 : accesspolicyt, accesspolicyt -> bool

logic dummy12 : accesspolicyt

type accesspolicyt__ref = { accesspolicyt__content : accesspolicyt
}

function accesspolicyt__ref___projection(a: accesspolicyt__ref) : accesspolicyt =
  (a).accesspolicyt__content

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

type t6b

predicate in_range11(x: int) = ((1 <= x) and (x <= 5))

logic bool_eq14 : int, int -> bool

axiom bool_eq_def12 :
  (forall x:int. forall y:int [bool_eq14(x, y)]. (((x = y) -> (bool_eq14(x,
  y) = true)) and ((not (x = y)) -> (bool_eq14(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq12 : t6b, t6b -> bool

logic dummy13 : t6b

type t6b__ref = { t6b__content : t6b
}

function t6b__ref___projection(a: t6b__ref) : t6b = (a).t6b__content

type t9b

predicate in_range12(x: int) = ((1 <= x) and (x <= 5))

logic bool_eq15 : int, int -> bool

axiom bool_eq_def13 :
  (forall x:int. forall y:int [bool_eq15(x, y)]. (((x = y) -> (bool_eq15(x,
  y) = true)) and ((not (x = y)) -> (bool_eq15(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq13 : t9b, t9b -> bool

logic dummy14 : t9b

type t9b__ref = { t9b__content : t9b
}

function t9b__ref___projection(a: t9b__ref) : t9b = (a).t9b__content

type t12b

predicate in_range13(x: int) = ((1 <= x) and (x <= 5))

logic bool_eq16 : int, int -> bool

axiom bool_eq_def14 :
  (forall x:int. forall y:int [bool_eq16(x, y)]. (((x = y) -> (bool_eq16(x,
  y) = true)) and ((not (x = y)) -> (bool_eq16(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE13 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check13 : us_image -> prop

logic attr__ATTRIBUTE_VALUE13 : us_image -> int

logic user_eq14 : t12b, t12b -> bool

logic dummy15 : t12b

type t12b__ref = { t12b__content : t12b
}

function t12b__ref___projection(a: t12b__ref) : t12b = (a).t12b__content

logic str__first : integer

logic str__last : integer

logic attr__ATTRIBUTE_ADDRESS15 : int

predicate dynamic_property1(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq17 : int, int -> bool

axiom bool_eq_def15 :
  (forall x:int. forall y:int [bool_eq17(x, y)]. (((x = y) -> (bool_eq17(x,
  y) = true)) and ((not (x = y)) -> (bool_eq17(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE14 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check14 : us_image -> prop

logic attr__ATTRIBUTE_VALUE14 : us_image -> int

logic user_eq15 : integer, integer -> bool

logic dummy16 : integer

type t22b__ref = { t22b__content : integer
}

function t22b__ref___projection(a: t22b__ref) : integer = (a).t22b__content

type t1

logic first2 : t1 -> integer

logic last2 : t1 -> integer

logic mk1 : int, int -> t1

axiom mk_def1 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range(f) -> (in_range(l) ->
  ((to_rep1(first2(mk1(f, l))) = f) and (to_rep1(last2(mk1(f, l))) = l)))))

predicate dynamic_property2(range_first: int, range_last: int, low: int,
  high: int) = (in_range(low) and (in_range(high) and ((low <= high) ->
  (dynamic_property1(range_first, range_last, low) and
  dynamic_property1(range_first, range_last, high)))))

type us_t1 = { elts1 : (int,character) farray; rt1 : t1
}

function to_array1(a: us_t1) : (int,character) farray = (a).elts1

function of_array1(a: (int,character) farray, f: int, l: int) : us_t1 = {
  elts1 = a; rt1 = mk1(f, l) }

function first3(a: us_t1) : int = to_rep1(first2((a).rt1))

function last3(a: us_t1) : int = to_rep1(last2((a).rt1))

logic length1 : us_t1 -> int

axiom length_def1 :
  (forall a:us_t1 [length1(a)]. (((first3(a) <= last3(a)) ->
  (length1(a) = ((last3(a) - first3(a)) + 1))) and
  ((not (first3(a) <= last3(a))) -> (length1(a) = 0))))

logic value__size1 : int

logic object__size1 : (int,character) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,character) farray -> int

logic value__alignment1 : int

logic object__alignment1 : (int,character) farray -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:(int,character) farray. (0 <= object__size1(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,character) farray. (0 <= object__component__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:(int,character) farray. (0 <= object__alignment1(a)))

function bool_eq18(x: us_t1, y: us_t1) : bool = bool_eq4((x).elts1,
  to_rep1(first2((x).rt1)), to_rep1(last2((x).rt1)), (y).elts1,
  to_rep1(first2((y).rt1)), to_rep1(last2((y).rt1)))

logic user_eq16 : us_t1, us_t1 -> bool

logic dummy17 : (int,character) farray

logic dummy18 : t1

type t23b__ref = { t23b__content : us_t1
}

function t23b__ref___projection(a: t23b__ref) : us_t1 = (a).t23b__content

logic temp___String_Literal_1833 : unit -> (int,character) farray

axiom temp___String_Literal_1833__def_axiom :
  ((to_rep((temp___String_Literal_1833(void)[1])) = 59) and
  (to_rep((temp___String_Literal_1833(void)[2])) = 32))

logic temp___String_Literal_1838 : unit -> (int,character) farray

axiom temp___String_Literal_1838__def_axiom :
  ((to_rep((temp___String_Literal_1838(void)[1])) = 59) and
  (to_rep((temp___String_Literal_1838(void)[2])) = 32))

logic temp___String_Literal_1843 : unit -> (int,character) farray

axiom temp___String_Literal_1843__def_axiom :
  ((to_rep((temp___String_Literal_1843(void)[1])) = 59) and
  (to_rep((temp___String_Literal_1843(void)[2])) = 32))

logic temp___String_Literal_1848 : unit -> (int,character) farray

axiom temp___String_Literal_1848__def_axiom :
  ((to_rep((temp___String_Literal_1848(void)[1])) = 59) and
  (to_rep((temp___String_Literal_1848(void)[2])) = 32))

logic temp___String_Literal_1853 : unit -> (int,character) farray

axiom temp___String_Literal_1853__def_axiom :
  ((to_rep((temp___String_Literal_1853(void)[1])) = 59) and
  (to_rep((temp___String_Literal_1853(void)[2])) = 32))

logic temp___String_Literal_1861 : unit -> (int,character) farray

axiom temp___String_Literal_1861__def_axiom :
  ((to_rep((temp___String_Literal_1861(void)[1])) = 59) and
  (to_rep((temp___String_Literal_1861(void)[2])) = 32))

logic temp___String_Literal_1869 : unit -> (int,character) farray

axiom temp___String_Literal_1869__def_axiom :
  ((to_rep((temp___String_Literal_1869(void)[1])) = 59) and
  (to_rep((temp___String_Literal_1869(void)[2])) = 32))

logic temp___String_Literal_1877 : unit -> (int,character) farray

axiom temp___String_Literal_1877__def_axiom :
  ((to_rep((temp___String_Literal_1877(void)[1])) = 59) and
  (to_rep((temp___String_Literal_1877(void)[2])) = 32))

logic temp___String_Literal_1882 : unit -> (int,character) farray

axiom temp___String_Literal_1882__def_axiom :
  ((to_rep((temp___String_Literal_1882(void)[1])) = 59) and
  (to_rep((temp___String_Literal_1882(void)[2])) = 32))

logic temp___String_Literal_1887 : unit -> (int,character) farray

axiom temp___String_Literal_1887__def_axiom :
  ((to_rep((temp___String_Literal_1887(void)[1])) = 59) and
  (to_rep((temp___String_Literal_1887(void)[2])) = 32))

logic temp___String_Literal_1892 : unit -> (int,character) farray

axiom temp___String_Literal_1892__def_axiom :
  ((to_rep((temp___String_Literal_1892(void)[1])) = 59) and
  (to_rep((temp___String_Literal_1892(void)[2])) = 32))

logic temp___String_Literal_1897 : unit -> (int,character) farray

axiom temp___String_Literal_1897__def_axiom :
  ((to_rep((temp___String_Literal_1897(void)[1])) = 59) and
  (to_rep((temp___String_Literal_1897(void)[2])) = 32))

axiom nodescription__def_axiom :
  (nodescription = audittypes__nodescription__aggregate_def(32))

logic thelatchunlockduration : int

logic thealarmsilentduration : int

logic thefingerwaitduration : int

logic thetokenremovalduration : int

logic theenclaveclearance : int

logic theworkinghoursstart : int

logic theworkinghoursend : int

logic themaxauthduration : int

logic theaccesspolicy : int

logic theminentryclass : int

logic theminpreservedlogsize : int

logic thealarmthresholdsize : int

logic thesystemmaxfar : int

logic localtext : (int,character) farray

logic str : (int,character) farray

logic temp___1874 : (int,character) farray

logic temp___1876 : (int,character) farray

logic temp___1866 : (int,character) farray

logic temp___1868 : (int,character) farray

logic temp___1858 : (int,character) farray

logic temp___1860 : (int,character) farray

logic o : int

logic o1 : int

logic o2 : int

logic o3 : int

logic o4 : int

logic o5 : int

logic temp___1836 : (int,character) farray

logic temp___18361 : t

logic o6 : int

logic o7 : int

logic o8 : int

logic o9 : int

logic o10 : int

logic o11 : int

logic temp___1839 : (int,character) farray

logic temp___18391 : t

logic o12 : int

logic o13 : int

logic o14 : int

logic o15 : int

logic o16 : int

logic o17 : int

logic temp___1841 : (int,character) farray

logic temp___18411 : t

logic o18 : int

logic o19 : int

logic o20 : int

logic o21 : int

logic o22 : int

logic o23 : int

logic temp___1844 : (int,character) farray

logic temp___18441 : t

logic o24 : int

logic o25 : int

logic o26 : int

logic o27 : int

logic o28 : int

logic o29 : int

logic temp___1846 : (int,character) farray

logic temp___18461 : t

logic o30 : int

logic o31 : int

logic o32 : int

logic o33 : int

logic o34 : int

logic o35 : int

logic temp___1849 : (int,character) farray

logic temp___18491 : t

logic o36 : int

logic o37 : int

logic o38 : int

logic o39 : int

logic o40 : int

logic o41 : int

logic temp___1851 : (int,character) farray

logic temp___18511 : t

logic o42 : int

logic o43 : int

logic o44 : int

logic o45 : int

logic o46 : int

logic o47 : int

logic temp___1854 : (int,character) farray

logic temp___18541 : t

logic o48 : int

logic o49 : int

logic o50 : int

logic o51 : int

logic o52 : int

logic o53 : int

logic temp___1859 : (int,character) farray

logic temp___18591 : t

logic o54 : int

logic o55 : int

logic o56 : int

logic o57 : int

logic o58 : int

logic o59 : int

logic temp___1862 : (int,character) farray

logic temp___18621 : t

logic o60 : int

logic o61 : int

logic o62 : int

logic o63 : int

logic o64 : int

logic o65 : int

logic temp___1867 : (int,character) farray

logic temp___18671 : t

logic o66 : int

logic o67 : int

logic o68 : int

logic o69 : int

logic o70 : int

logic o71 : int

logic temp___1870 : (int,character) farray

logic temp___18701 : t

logic o72 : int

logic o73 : int

logic o74 : int

logic o75 : int

logic o76 : int

logic o77 : int

logic temp___1875 : (int,character) farray

logic temp___18751 : t

logic o78 : int

logic o79 : int

logic o80 : int

logic o81 : int

logic o82 : int

logic o83 : int

logic temp___1878 : (int,character) farray

logic temp___18781 : t

logic o84 : int

logic o85 : int

logic o86 : int

logic o87 : int

logic o88 : int

logic o89 : int

logic temp___1880 : (int,character) farray

logic temp___18801 : t

logic o90 : int

logic o91 : int

logic o92 : int

logic o93 : int

logic o94 : int

logic o95 : int

logic temp___1883 : (int,character) farray

logic temp___18831 : t

logic o96 : int

logic o97 : int

logic o98 : int

logic o99 : int

logic o100 : int

logic o101 : int

logic temp___1885 : (int,character) farray

logic temp___18851 : t

logic o102 : int

logic o103 : int

logic o104 : int

logic o105 : int

logic o106 : int

logic o107 : int

logic temp___1888 : (int,character) farray

logic temp___18881 : t

logic o108 : int

logic o109 : int

logic o110 : int

logic o111 : int

logic o112 : int

logic o113 : int

logic temp___1890 : (int,character) farray

logic temp___18901 : t

logic o114 : int

logic o115 : int

logic o116 : int

logic o117 : int

logic o118 : int

logic o119 : int

logic temp___1893 : (int,character) farray

logic temp___18931 : t

logic o120 : int

logic o121 : int

logic o122 : int

logic o123 : int

logic o124 : int

logic o125 : int

logic temp___1895 : (int,character) farray

logic temp___18951 : t

logic o126 : int

logic o127 : int

logic o128 : int

logic o129 : int

logic o130 : int

logic o131 : int

logic temp___1898 : (int,character) farray

logic temp___18981 : t

logic o132 : int

logic o133 : int

logic o134 : int

logic o135 : int

logic o136 : int

logic o137 : int

logic temp___1900 : (int,character) farray

logic temp___19001 : t

logic o138 : int

logic o139 : int

logic o140 : int

logic o141 : int

logic o142 : int

logic o143 : int

logic configuration__updatedata__makedescription__str__assume : (int,character) farray

logic configuration__updatedata__makedescription__str__assume1 : t

logic temp___1903 : (int,character) farray

logic temp___19031 : t1

logic o144 : (int,character) farray

logic temp___1906 : (int,character) farray

logic temp___19061 : t1

logic result : (int,character) farray

logic localtext1 : (int,character) farray

logic result1 : (int,character) farray

logic str1 : (int,character) farray

axiom H : (audittypes__nodescription__aggregate_def(32) = nodescription)

axiom H1 : in_range9(thelatchunlockduration)

axiom H2 : in_range9(thealarmsilentduration)

axiom H3 : in_range9(thefingerwaitduration)

axiom H4 : in_range9(thetokenremovalduration)

axiom H5 : in_range8(theenclaveclearance)

axiom H6 : in_range5(theworkinghoursstart)

axiom H7 : in_range5(theworkinghoursend)

axiom H8 : in_range5(themaxauthduration)

axiom H9 : in_range10(theaccesspolicy)

axiom H10 : in_range8(theminentryclass)

axiom H11 : in_range4(theminpreservedlogsize)

axiom H12 : in_range4(thealarmthresholdsize)

axiom H13 : in_range7(thesystemmaxfar)

axiom H14 : (result = localtext)

axiom H15 : (localtext1 = nodescription)

axiom H16 : (temp___1874 = printduration(themaxauthduration))

axiom H17 : ((1 <= 5) -> (((1 <= 1) and (1 <= 10)) and ((1 <= 5) and
  (5 <= 10))))

axiom H18 : (temp___1876 = temp___1874)

axiom H19 : (temp___1866 = printduration(theworkinghoursend))

axiom H20 : ((1 <= 5) -> (((1 <= 1) and (1 <= 10)) and ((1 <= 5) and
  (5 <= 10))))

axiom H21 : (temp___1868 = temp___1866)

axiom H22 : (temp___1858 = printduration(theworkinghoursstart))

axiom H23 : ((1 <= 5) -> (((1 <= 1) and (1 <= 10)) and ((1 <= 5) and
  (5 <= 10))))

axiom H24 : (temp___1860 = temp___1858)

axiom H25 :
  ((length(to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))) = 0) ->
  (temp___String_Literal_1833(void) = temp___1836))

axiom H26 :
  ((length(to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))) = 0) ->
  (mk(1, 2) = temp___18361))

axiom H27 :
  ((not (length(to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))) = 0)) ->
  ((1 <= 2) -> (o = ((2 - 1) + 1))))

axiom H28 :
  ((not (length(to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))) = 0)) ->
  ((not (1 <= 2)) -> (o = 0)))

axiom H29 :
  ((not (length(to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))) = 0)) ->
  ((to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))).rt)) <= to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))).rt))) ->
  (o1 = ((to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))).rt)) - to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))).rt))) + 1))))

axiom H30 :
  ((not (length(to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))) = 0)) ->
  ((not (to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))).rt)) <= to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))).rt)))) ->
  (o1 = 0)))

axiom H31 :
  ((not (length(to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))) = 0)) ->
  (o2 = (o1 + o)))

axiom H32 :
  ((not (length(to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))) = 0)) ->
  (o3 = (to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))).rt)) + o2)))

axiom H33 :
  ((not (length(to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))) = 0)) ->
  (o4 = (o3 - 1)))

axiom H34 :
  ((not (length(to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))) = 0)) ->
  ((o5 = o4) and in_range1(o4)))

axiom H35 :
  ((not (length(to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))) = 0)) ->
  (concat((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))).elts,
  to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))).rt)),
  to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))).rt)),
  temp___String_Literal_1833(void), 1, 2) = temp___1836))

axiom H36 :
  ((not (length(to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))) = 0)) ->
  (mk(to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thealarmsilentduration,10)))).rt)),
  o5) = temp___18361))

axiom H37 : ((length({ elts = temp___1836; rt = temp___18361 }) = 0) ->
  ((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thelatchunlockduration,10)))).elts = temp___1839))

axiom H38 : ((length({ elts = temp___1836; rt = temp___18361 }) = 0) ->
  (mk(to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thelatchunlockduration,10)))).rt)),
  to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thelatchunlockduration,10)))).rt))) = temp___18391))

axiom H39 : ((not (length({ elts = temp___1836; rt = temp___18361 }) = 0)) ->
  ((to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thelatchunlockduration,10)))).rt)) <= to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thelatchunlockduration,10)))).rt))) ->
  (o6 = ((to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thelatchunlockduration,10)))).rt)) - to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thelatchunlockduration,10)))).rt))) + 1))))

axiom H40 : ((not (length({ elts = temp___1836; rt = temp___18361 }) = 0)) ->
  ((not (to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thelatchunlockduration,10)))).rt)) <= to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thelatchunlockduration,10)))).rt)))) ->
  (o6 = 0)))

axiom H41 : ((not (length({ elts = temp___1836; rt = temp___18361 }) = 0)) ->
  ((to_rep1(first(temp___18361)) <= to_rep1(last(temp___18361))) ->
  (o7 = ((to_rep1(last(temp___18361)) - to_rep1(first(temp___18361))) + 1))))

axiom H42 : ((not (length({ elts = temp___1836; rt = temp___18361 }) = 0)) ->
  ((not (to_rep1(first(temp___18361)) <= to_rep1(last(temp___18361)))) ->
  (o7 = 0)))

axiom H43 : ((not (length({ elts = temp___1836; rt = temp___18361 }) = 0)) ->
  (o8 = (o7 + o6)))

axiom H44 : ((not (length({ elts = temp___1836; rt = temp___18361 }) = 0)) ->
  (o9 = (to_rep1(first(temp___18361)) + o8)))

axiom H45 : ((not (length({ elts = temp___1836; rt = temp___18361 }) = 0)) ->
  (o10 = (o9 - 1)))

axiom H46 : ((not (length({ elts = temp___1836; rt = temp___18361 }) = 0)) ->
  ((o11 = o10) and in_range1(o10)))

axiom H47 : ((not (length({ elts = temp___1836; rt = temp___18361 }) = 0)) ->
  (concat(temp___1836, to_rep1(first(temp___18361)),
  to_rep1(last(temp___18361)),
  (to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thelatchunlockduration,10)))).elts,
  to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thelatchunlockduration,10)))).rt)),
  to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thelatchunlockduration,10)))).rt))) = temp___1839))

axiom H48 : ((not (length({ elts = temp___1836; rt = temp___18361 }) = 0)) ->
  (mk(to_rep1(first(temp___18361)), o11) = temp___18391))

axiom H49 : ((length({ elts = temp___1839; rt = temp___18391 }) = 0) ->
  (temp___String_Literal_1838(void) = temp___1841))

axiom H50 : ((length({ elts = temp___1839; rt = temp___18391 }) = 0) ->
  (mk(1, 2) = temp___18411))

axiom H51 : ((not (length({ elts = temp___1839; rt = temp___18391 }) = 0)) ->
  ((1 <= 2) -> (o12 = ((2 - 1) + 1))))

axiom H52 : ((not (length({ elts = temp___1839; rt = temp___18391 }) = 0)) ->
  ((not (1 <= 2)) -> (o12 = 0)))

axiom H53 : ((not (length({ elts = temp___1839; rt = temp___18391 }) = 0)) ->
  ((to_rep1(first(temp___18391)) <= to_rep1(last(temp___18391))) ->
  (o13 = ((to_rep1(last(temp___18391)) - to_rep1(first(temp___18391))) + 1))))

axiom H54 : ((not (length({ elts = temp___1839; rt = temp___18391 }) = 0)) ->
  ((not (to_rep1(first(temp___18391)) <= to_rep1(last(temp___18391)))) ->
  (o13 = 0)))

axiom H55 : ((not (length({ elts = temp___1839; rt = temp___18391 }) = 0)) ->
  (o14 = (o13 + o12)))

axiom H56 : ((not (length({ elts = temp___1839; rt = temp___18391 }) = 0)) ->
  (o15 = (to_rep1(first(temp___18391)) + o14)))

axiom H57 : ((not (length({ elts = temp___1839; rt = temp___18391 }) = 0)) ->
  (o16 = (o15 - 1)))

axiom H58 : ((not (length({ elts = temp___1839; rt = temp___18391 }) = 0)) ->
  ((o17 = o16) and in_range1(o16)))

axiom H59 : ((not (length({ elts = temp___1839; rt = temp___18391 }) = 0)) ->
  (concat(temp___1839, to_rep1(first(temp___18391)),
  to_rep1(last(temp___18391)), temp___String_Literal_1838(void), 1,
  2) = temp___1841))

axiom H60 : ((not (length({ elts = temp___1839; rt = temp___18391 }) = 0)) ->
  (mk(to_rep1(first(temp___18391)), o17) = temp___18411))

axiom H61 : ((length({ elts = temp___1841; rt = temp___18411 }) = 0) ->
  ((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thetokenremovalduration,10)))).elts = temp___1844))

axiom H62 : ((length({ elts = temp___1841; rt = temp___18411 }) = 0) ->
  (mk(to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thetokenremovalduration,10)))).rt)),
  to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thetokenremovalduration,10)))).rt))) = temp___18441))

axiom H63 : ((not (length({ elts = temp___1841; rt = temp___18411 }) = 0)) ->
  ((to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thetokenremovalduration,10)))).rt)) <= to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thetokenremovalduration,10)))).rt))) ->
  (o18 = ((to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thetokenremovalduration,10)))).rt)) - to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thetokenremovalduration,10)))).rt))) + 1))))

axiom H64 : ((not (length({ elts = temp___1841; rt = temp___18411 }) = 0)) ->
  ((not (to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thetokenremovalduration,10)))).rt)) <= to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thetokenremovalduration,10)))).rt)))) ->
  (o18 = 0)))

axiom H65 : ((not (length({ elts = temp___1841; rt = temp___18411 }) = 0)) ->
  ((to_rep1(first(temp___18411)) <= to_rep1(last(temp___18411))) ->
  (o19 = ((to_rep1(last(temp___18411)) - to_rep1(first(temp___18411))) + 1))))

axiom H66 : ((not (length({ elts = temp___1841; rt = temp___18411 }) = 0)) ->
  ((not (to_rep1(first(temp___18411)) <= to_rep1(last(temp___18411)))) ->
  (o19 = 0)))

axiom H67 : ((not (length({ elts = temp___1841; rt = temp___18411 }) = 0)) ->
  (o20 = (o19 + o18)))

axiom H68 : ((not (length({ elts = temp___1841; rt = temp___18411 }) = 0)) ->
  (o21 = (to_rep1(first(temp___18411)) + o20)))

axiom H69 : ((not (length({ elts = temp___1841; rt = temp___18411 }) = 0)) ->
  (o22 = (o21 - 1)))

axiom H70 : ((not (length({ elts = temp___1841; rt = temp___18411 }) = 0)) ->
  ((o23 = o22) and in_range1(o22)))

axiom H71 : ((not (length({ elts = temp___1841; rt = temp___18411 }) = 0)) ->
  (concat(temp___1841, to_rep1(first(temp___18411)),
  to_rep1(last(temp___18411)),
  (to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thetokenremovalduration,10)))).elts,
  to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thetokenremovalduration,10)))).rt)),
  to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thetokenremovalduration,10)))).rt))) = temp___1844))

axiom H72 : ((not (length({ elts = temp___1841; rt = temp___18411 }) = 0)) ->
  (mk(to_rep1(first(temp___18411)), o23) = temp___18441))

axiom H73 : ((length({ elts = temp___1844; rt = temp___18441 }) = 0) ->
  (temp___String_Literal_1843(void) = temp___1846))

axiom H74 : ((length({ elts = temp___1844; rt = temp___18441 }) = 0) ->
  (mk(1, 2) = temp___18461))

axiom H75 : ((not (length({ elts = temp___1844; rt = temp___18441 }) = 0)) ->
  ((1 <= 2) -> (o24 = ((2 - 1) + 1))))

axiom H76 : ((not (length({ elts = temp___1844; rt = temp___18441 }) = 0)) ->
  ((not (1 <= 2)) -> (o24 = 0)))

axiom H77 : ((not (length({ elts = temp___1844; rt = temp___18441 }) = 0)) ->
  ((to_rep1(first(temp___18441)) <= to_rep1(last(temp___18441))) ->
  (o25 = ((to_rep1(last(temp___18441)) - to_rep1(first(temp___18441))) + 1))))

axiom H78 : ((not (length({ elts = temp___1844; rt = temp___18441 }) = 0)) ->
  ((not (to_rep1(first(temp___18441)) <= to_rep1(last(temp___18441)))) ->
  (o25 = 0)))

axiom H79 : ((not (length({ elts = temp___1844; rt = temp___18441 }) = 0)) ->
  (o26 = (o25 + o24)))

axiom H80 : ((not (length({ elts = temp___1844; rt = temp___18441 }) = 0)) ->
  (o27 = (to_rep1(first(temp___18441)) + o26)))

axiom H81 : ((not (length({ elts = temp___1844; rt = temp___18441 }) = 0)) ->
  (o28 = (o27 - 1)))

axiom H82 : ((not (length({ elts = temp___1844; rt = temp___18441 }) = 0)) ->
  ((o29 = o28) and in_range1(o28)))

axiom H83 : ((not (length({ elts = temp___1844; rt = temp___18441 }) = 0)) ->
  (concat(temp___1844, to_rep1(first(temp___18441)),
  to_rep1(last(temp___18441)), temp___String_Literal_1843(void), 1,
  2) = temp___1846))

axiom H84 : ((not (length({ elts = temp___1844; rt = temp___18441 }) = 0)) ->
  (mk(to_rep1(first(temp___18441)), o29) = temp___18461))

axiom H85 : (not (length({ elts = temp___1846; rt = temp___18461 }) = 0))

axiom H86 :
  ((to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thefingerwaitduration,10)))).rt)) <= to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thefingerwaitduration,10)))).rt))) ->
  (o30 = ((to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thefingerwaitduration,10)))).rt)) - to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thefingerwaitduration,10)))).rt))) + 1)))

axiom H87 :
  ((not (to_rep1(first((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thefingerwaitduration,10)))).rt)) <= to_rep1(last((to_string(attr__ATTRIBUTE_IMAGE5(comp_div(thefingerwaitduration,10)))).rt)))) ->
  (o30 = 0))

axiom H88 : ((to_rep1(first(temp___18461)) <= to_rep1(last(temp___18461))) ->
  (o31 = ((to_rep1(last(temp___18461)) - to_rep1(first(temp___18461))) + 1)))

axiom H89 :
  ((not (to_rep1(first(temp___18461)) <= to_rep1(last(temp___18461)))) ->
  (o31 = 0))

axiom H90 : (o32 = (o31 + o30))

axiom H91 : (o33 = (to_rep1(first(temp___18461)) + o32))

axiom H92 : (o34 = (o33 - 1))

 (* File "audittypes.ads", line 103, characters 0-0 *)
goal WP_parameter_def : in_range1(o34)
