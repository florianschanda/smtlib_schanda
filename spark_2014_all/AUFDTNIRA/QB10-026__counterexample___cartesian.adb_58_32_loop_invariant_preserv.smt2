(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range2 temp___expr_39)))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq2 (us_t us_t) Bool)
(declare-const dummy2 us_t)
(declare-datatypes () ((integer_array__ref (mk_integer_array__ref (integer_array__content us_t)))))
(define-fun integer_array__ref___projection ((a integer_array__ref)) us_t (integer_array__content a))
(define-fun dynamic_invariant1 ((temp___expr_160 us_t) (temp___is_init_156 Bool) (temp___skip_constant_157 Bool) (temp___do_toplevel_158 Bool) (temp___do_typ_inv_159 Bool)) Bool (=> (not (= temp___skip_constant_157 true)) (dynamic_property 0 2147483647 (first1 temp___expr_160) (last1 temp___expr_160))))
(declare-const dummy3 (Array Int integer))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int integer)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int integer)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int integer)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq3 ((Array Int integer) (Array Int integer)) Bool)
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int (Array Int integer)))))))
(declare-fun slide1 ((Array Int (Array Int integer)) Int Int) (Array Int (Array Int integer)))
(assert (forall ((a (Array Int (Array Int integer)))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int (Array Int integer)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int (Array Int integer))) (a__first Int) (a__last Int) (b (Array Int (Array Int integer))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq (select a temp___idx_155) 1 2 (select b (+ (- b__first a__first) temp___idx_155)) 1 2) true)))) true false))
(assert (forall ((a (Array Int (Array Int integer))) (b (Array Int (Array Int integer)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq (select a temp___idx_155) 1 2 (select b (+ (- b__first a__first) temp___idx_155)) 1 2) true))))))))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int (Array Int integer))) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int (Array Int integer)) (elts1 a))
(define-fun of_array1 ((a (Array Int (Array Int integer))) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int (Array Int integer))) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int (Array Int integer))) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int (Array Int integer))) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq2 (elts1 x) (to_rep (first2 (rt1 x))) (to_rep (last2 (rt1 x))) (elts1 y) (to_rep (first2 (rt1 y))) (to_rep (last2 (rt1 y)))))
(declare-fun user_eq4 (us_t1 us_t1) Bool)
(declare-const dummy4 us_t1)
(declare-datatypes () ((integer_product_type__ref (mk_integer_product_type__ref (integer_product_type__content us_t1)))))
(define-fun integer_product_type__ref___projection ((a integer_product_type__ref)) us_t1 (integer_product_type__content a))
(declare-fun in_array__2 ((Array Int integer) us_t1) Bool)
(declare-fun in_array__2__function_guard (Bool (Array Int integer) us_t1) Bool)
(declare-sort tpair_typeD1 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq5 (tpair_typeD1 tpair_typeD1) Bool)
(declare-const dummy5 tpair_typeD1)
(declare-datatypes () ((tpair_typeD1__ref (mk_tpair_typeD1__ref (tpair_typeD1__content tpair_typeD1)))))
(define-fun tpair_typeD1__ref___projection ((a tpair_typeD1__ref)) tpair_typeD1 (tpair_typeD1__content a))
(define-fun dynamic_invariant2 ((temp___expr_176 us_t1) (temp___is_init_172 Bool) (temp___skip_constant_173 Bool) (temp___do_toplevel_174 Bool) (temp___do_typ_inv_175 Bool)) Bool (=> (not (= temp___skip_constant_173 true)) (dynamic_property1 0 2147483647 (first3 temp___expr_176) (last3 temp___expr_176))))
(assert true)
(assert (forall ((element (Array Int integer))) (forall ((arr us_t1)) (! (= (= (in_array__2 element arr) true) (exists ((i Int)) (and (and (<= (first3 arr) i) (<= i (last3 arr))) (= (let ((temp___188 (select (to_array1 arr) i))) (bool_eq temp___188 1 2 element 1 2)) true)))) :pattern ((in_array__2 element arr))))))
(declare-const array1 us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const array2 us_t)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const result_length Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((tTresultSP1__ref (mk_tTresultSP1__ref (tTresultSP1__content integer)))))
(define-fun tTresultSP1__ref___projection ((a tTresultSP1__ref)) integer (tTresultSP1__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first4 (mk2 f l))) f) (= (to_rep (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int (Array Int integer))) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int (Array Int integer)) (elts2 a))
(define-fun of_array2 ((a (Array Int (Array Int integer))) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int (Array Int integer))) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int (Array Int integer))) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int (Array Int integer))) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq4 ((x us_t2) (y us_t2)) Bool (bool_eq2 (elts2 x) (to_rep (first4 (rt2 x))) (to_rep (last4 (rt2 x))) (elts2 y) (to_rep (first4 (rt2 y))) (to_rep (last4 (rt2 y)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((tresultS__ref (mk_tresultS__ref (tresultS__content us_t2)))))
(define-fun tresultS__ref___projection ((a tresultS__ref)) us_t2 (tresultS__content a))
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t5b__ref (mk_t5b__ref (t5b__content integer)))))
(define-fun t5b__ref___projection ((a t5b__ref)) integer (t5b__content a))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first6 (mk3 f l))) f) (= (to_rep (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property4 range_first range_last low) (dynamic_property4 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int (Array Int integer))) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int (Array Int integer)) (elts3 a))
(define-fun of_array3 ((a (Array Int (Array Int integer))) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int (Array Int integer))) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int (Array Int integer))) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int (Array Int integer))) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq5 ((x us_t3) (y us_t3)) Bool (bool_eq2 (elts3 x) (to_rep (first6 (rt3 x))) (to_rep (last6 (rt3 x))) (elts3 y) (to_rep (first6 (rt3 y))) (to_rep (last6 (rt3 y)))))
(declare-fun user_eq9 (us_t3 us_t3) Bool)
(declare-const dummy9 us_t3)
(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content us_t3)))))
(define-fun t6b__ref___projection ((a t6b__ref)) us_t3 (t6b__content a))
(declare-const result____first integer)
(declare-const result____last integer)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_property6 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t7b__ref (mk_t7b__ref (t7b__content integer)))))
(define-fun t7b__ref___projection ((a t7b__ref)) integer (t7b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_property7 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq11 (integer integer) Bool)
(declare-const dummy11 integer)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content integer)))))
(define-fun t8b__ref___projection ((a t8b__ref)) integer (t8b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun temp___198 (Int Int) (Array Int integer))
(declare-fun cartesian__cartesian_product__result__aggregate_def ((Array Int integer) Int Int) us_t3)
(declare-fun temp___257 (Int Int) (Array Int integer))
(declare-fun temp___265 (Int Int) (Array Int integer))
(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(assert (= result_length (* (length array1) (length array2))))
(assert (forall ((temp___253 (Array Int integer))) (forall ((temp___254 Int) (temp___255 Int)) (let ((temp___252 (cartesian__cartesian_product__result__aggregate_def temp___253 temp___254 temp___255))) (and (=> (dynamic_property1 0 2147483647 temp___254 temp___255) (and (= (first7 temp___252) temp___254) (= (last7 temp___252) temp___255))) (forall ((temp___256 Int)) (= (select (to_array3 temp___252) temp___256) temp___253)))))))
(assert (forall ((temp___259 Int) (temp___260 Int)) (let ((temp___258 (temp___257 temp___259 temp___260))) (=> (and (dynamic_invariant3 temp___259 true true true true) (dynamic_invariant3 temp___260 true true true true)) (and (= (to_rep (select temp___258 1)) temp___259) (= (to_rep (select temp___258 2)) temp___260))))))
(assert (forall ((temp___267 Int) (temp___268 Int)) (let ((temp___266 (temp___265 temp___267 temp___268))) (=> (and (dynamic_invariant3 temp___267 true true true true) (dynamic_invariant3 temp___268 true true true true)) (and (= (to_rep (select temp___266 1)) temp___267) (= (to_rep (select temp___266 2)) temp___268))))))
(assert (forall ((temp___200 Int) (temp___201 Int)) (let ((temp___199 (temp___198 temp___200 temp___201))) (=> (and (dynamic_invariant3 temp___200 true true true true) (dynamic_invariant3 temp___201 true true true true)) (and (= (to_rep (select temp___199 1)) temp___200) (= (to_rep (select temp___199 2)) temp___201))))))
(define-fun dynamic_invariant4 ((temp___expr_235 us_t2) (temp___is_init_231 Bool) (temp___skip_constant_232 Bool) (temp___do_toplevel_233 Bool) (temp___do_typ_inv_234 Bool)) Bool (=> (not (= temp___skip_constant_232 true)) (and (dynamic_property3 1 result_length (first5 temp___expr_235) (last5 temp___expr_235)) (and (= (first5 temp___expr_235) 1) (= (last5 temp___expr_235) result_length)))))
(declare-const result__ (Array Int (Array Int integer)))
(declare-const result_index Int)
(declare-const index1 Int)
(declare-const index2 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const cartesian__cartesian_product__result_length__assume Int)
(declare-const temp___263 (Array Int (Array Int integer)))
(declare-const temp___2631 t3)
(declare-const cartesian__cartesian_product__result__assume (Array Int (Array Int integer)))
(declare-const cartesian__cartesian_product__result__assume1 t2)
(declare-const temp___273 (Array Int (Array Int integer)))
(declare-const temp___271 Int)
(declare-const temp___270 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 (Array Int (Array Int integer)))
(declare-const temp___2731 (Array Int (Array Int integer)))
(declare-const temp___2711 Int)
(declare-const temp___2701 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 (Array Int (Array Int integer)))
(declare-const result (Array Int (Array Int integer)))
(declare-const result__1 (Array Int (Array Int integer)))
(declare-const result1 Int)
(declare-const result_index1 Int)
(declare-const result2 Int)
(declare-const index11 Int)
(declare-const result3 Int)
(declare-const index21 Int)
(declare-const result4 Int)
(declare-const result_index2 Int)
(declare-const result5 (Array Int (Array Int integer)))
(declare-const result__2 (Array Int (Array Int integer)))
(declare-const result__3 (Array Int (Array Int integer)))
(declare-const result_index3 Int)
(declare-const index22 Int)
(declare-const result__4 (Array Int (Array Int integer)))
(declare-const result_index4 int__ref)
(declare-const index23 int__ref)
(declare-const result__5 (Array Int (Array Int integer)))
(declare-const result_index5 Int)
(declare-const index24 Int)
(declare-const result__6 map__ref1)
(declare-const result_index6 int__ref)
(declare-const index25 int__ref)
(declare-const result__7 (Array Int (Array Int integer)))
(declare-const result_index7 Int)
(declare-const index26 Int)
(declare-const result__8 (Array Int (Array Int integer)))
(declare-const result_index8 Int)
(declare-const index12 Int)
(declare-const index27 Int)
(declare-const result6 int__ref)
(declare-const index13 Int)
(declare-const result7 int__ref)
(declare-const index28 Int)
(declare-const result8 int__ref)
(declare-const result_index9 Int)
(declare-const result9 map__ref1)
(declare-const result__9 (Array Int (Array Int integer)))
(declare-const result__10 (Array Int (Array Int integer)))
(declare-const result_index10 Int)
(declare-const index29 Int)
(declare-const result__11 map__ref1)
(declare-const result_index11 int__ref)
(declare-const index210 int__ref)
(declare-const result__12 (Array Int (Array Int integer)))
(declare-const result_index12 Int)
(declare-const index211 Int)
(declare-const result__13 map__ref1)
(declare-const result_index13 int__ref)
(declare-const index212 int__ref)
(declare-const result__14 (Array Int (Array Int integer)))
(declare-const result_index14 Int)
(declare-const index213 Int)
(declare-const result__15 map__ref1)
(declare-const result_index15 int__ref)
(declare-const index14 int__ref)
(declare-const index214 int__ref)
(declare-const result__16 (Array Int (Array Int integer)))
(declare-const result_index16 Int)
(declare-const index15 Int)
(declare-const index215 Int)
(assert (dynamic_invariant1 array1 true false true true))
(assert (dynamic_invariant1 array2 true false true true))
(assert (and (< (length array1) 255) (< (length array2) 255)))
(assert (and (= o (length array2)) (in_range1 (length array2))))
(assert (and (= o1 (length array1)) (in_range1 (length array1))))
(assert (= o2 (* o1 o)))
(assert (and (= o3 o2) (in_range1 o2)))
(assert (and (= cartesian__cartesian_product__result_length__assume o3) (in_range2 o3)))
(assert (= cartesian__cartesian_product__result_length__assume result_length))
(assert (in_range2 result_length))
(assert (= (to_rep (first6 (rt3 (cartesian__cartesian_product__result__aggregate_def (temp___257 0 0) 1 result_length)))) 1))
(assert (= (to_rep (last6 (rt3 (cartesian__cartesian_product__result__aggregate_def (temp___257 0 0) 1 result_length)))) result_length))
(assert (= (mk___t3 temp___263 temp___2631) (cartesian__cartesian_product__result__aggregate_def (temp___257 0 0) 1 result_length)))
(assert (= (ite (<= (to_rep (first6 temp___2631)) (to_rep (last6 temp___2631))) (+ (- (to_rep (last6 temp___2631)) (to_rep (first6 temp___2631))) 1) 0) (ite (<= 1 result_length) (+ (- result_length 1) 1) 0)))
(assert (= temp___263 cartesian__cartesian_product__result__assume))
(assert (= (mk2 (to_rep (first6 temp___2631)) (to_rep (last6 temp___2631))) cartesian__cartesian_product__result__assume1))
(assert (= (mk_map__ref1 result) (mk_map__ref1 result__)))
(assert (= result__1 cartesian__cartesian_product__result__assume))
(assert (= (to_rep result____first) (to_rep (first4 cartesian__cartesian_product__result__assume1))))
(assert (= (to_rep result____last) (to_rep (last4 cartesian__cartesian_product__result__assume1))))
(assert (and (dynamic_property3 1 result_length (to_rep result____first) (to_rep result____last)) (and (= (to_rep result____first) 1) (= (to_rep result____last) result_length))))
(assert (= (mk_int__ref result1) (mk_int__ref result_index)))
(assert (= result_index1 0))
(assert (in_range2 result_index1))
(assert (= (mk_int__ref result2) (mk_int__ref index1)))
(assert (= index11 (to_rep (first (rt array1)))))
(assert (<= (to_rep (first (rt array1))) index11))
(assert (<= index11 (to_rep (last (rt array1)))))
(assert (= (mk_int__ref result3) (mk_int__ref index2)))
(assert (= index21 (to_rep (first (rt array2)))))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= temp___273 result__1)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= temp___271 index21)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= temp___270 result_index1)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (and (= o4 (+ result_index1 1)) (in_range1 (+ result_index1 1)))))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result_index1 result4)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result_index2 o4)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (and (<= (to_rep result____first) result_index2) (<= result_index2 (to_rep result____last)))))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= o5 result_index2)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= o6 (store result__1 o5 (temp___265 (to_rep (select (elts array1) index11)) (to_rep (select (elts array2) index21)))))))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result__1 result5)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result__2 o6)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result_index3 (+ (+ (* (- index11 (to_rep (first (rt array1)))) (length array2)) (- index22 (to_rep (first (rt array2))))) 1))))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (forall ((j Int)) (=> (and (<= (to_rep (first (rt array2))) j) (<= j index22)) (= (to_rep (select (select result__3 (+ (+ (* (- index11 (to_rep (first (rt array1)))) (length array2)) (- j (to_rep (first (rt array2))))) 1)) 1)) (to_rep (select (elts array1) index11)))))))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (forall ((j Int)) (=> (and (<= (to_rep (first (rt array2))) j) (<= j index22)) (= (to_rep (select (select result__3 (+ (+ (* (- index11 (to_rep (first (rt array1)))) (length array2)) (- j (to_rep (first (rt array2))))) 1)) 2)) (to_rep (select (elts array2) j)))))))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (and (and (=> (<= 0 2147483647) (in_range2 result_index3)) (=> (<= (to_rep (first (rt array2))) (to_rep (last (rt array2)))) (dynamic_property7 (to_rep (first (rt array2))) (to_rep (last (rt array2))) index22))) (and (<= (to_rep (first (rt array2))) index22) (<= index22 (to_rep (last (rt array2))))))))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= index22 (to_rep (last (rt array2))))))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= index23 (mk_int__ref index22))))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result_index4 (mk_int__ref result_index3))))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result__3 result__4)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= index24 index22)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result_index5 result_index3)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result__5 result__3)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= index25 index23)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result_index6 result_index4)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result__6 (mk_map__ref1 result__4))))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= index26 index24)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result_index7 result_index5)))
(assert (=> (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2))))) (= result__7 result__5)))
(assert (=> (not (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2)))))) (= index25 (mk_int__ref index21))))
(assert (=> (not (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2)))))) (= result_index6 (mk_int__ref result_index1))))
(assert (=> (not (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2)))))) (= result__6 (mk_map__ref1 result__1))))
(assert (=> (not (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2)))))) (= index26 index21)))
(assert (=> (not (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2)))))) (= result_index7 result_index1)))
(assert (=> (not (and (<= (to_rep (first (rt array2))) index21) (<= index21 (to_rep (last (rt array2)))))) (= result__7 result__1)))
(assert (= result_index8 (* (+ (- index12 (to_rep (first (rt array1)))) 1) (length array2))))
(assert (forall ((i Int)) (=> (and (<= (to_rep (first (rt array1))) i) (<= i index12)) (forall ((j Int)) (=> (and (<= (to_rep (first (rt array2))) j) (<= j (to_rep (last (rt array2))))) (= (to_rep (select (select result__8 (+ (+ (* (- i (to_rep (first (rt array1)))) (length array2)) (- j (to_rep (first (rt array2))))) 1)) 1)) (to_rep (select (elts array1) i))))))))
(assert (forall ((i Int)) (=> (and (<= (to_rep (first (rt array1))) i) (<= i index12)) (forall ((j Int)) (=> (and (<= (to_rep (first (rt array2))) j) (<= j (to_rep (last (rt array2))))) (= (to_rep (select (select result__8 (+ (+ (* (- i (to_rep (first (rt array1)))) (length array2)) (- j (to_rep (first (rt array2))))) 1)) 2)) (to_rep (select (elts array2) j))))))))
(assert (and (and (=> (<= 0 2147483647) (in_range2 result_index8)) (=> (<= (to_rep (first (rt array1))) (to_rep (last (rt array1)))) (dynamic_property6 (to_rep (first (rt array1))) (to_rep (last (rt array1))) index12))) (and (<= (to_rep (first (rt array1))) index12) (<= index12 (to_rep (last (rt array1)))))))
(assert (not (= index12 (to_rep (last (rt array1))))))
(assert (= result6 (mk_int__ref index12)))
(assert (= index13 (+ index12 1)))
(assert (= result7 (mk_int__ref index27)))
(assert (= index28 (to_rep (first (rt array2)))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= temp___2731 result__8)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= temp___2711 index28)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= temp___2701 result_index8)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (and (= o7 (+ result_index8 1)) (in_range1 (+ result_index8 1)))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result8 (mk_int__ref result_index8))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result_index9 o7)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (and (<= (to_rep result____first) result_index9) (<= result_index9 (to_rep result____last)))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= o8 result_index9)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= o9 (store result__8 o8 (temp___265 (to_rep (select (elts array1) index13)) (to_rep (select (elts array2) index28)))))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result9 (mk_map__ref1 result__8))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result__9 o9)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result_index10 (+ (+ (* (- index13 (to_rep (first (rt array1)))) (length array2)) (- index29 (to_rep (first (rt array2))))) 1))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (forall ((j Int)) (=> (and (<= (to_rep (first (rt array2))) j) (<= j index29)) (= (to_rep (select (select result__10 (+ (+ (* (- index13 (to_rep (first (rt array1)))) (length array2)) (- j (to_rep (first (rt array2))))) 1)) 1)) (to_rep (select (elts array1) index13)))))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (forall ((j Int)) (=> (and (<= (to_rep (first (rt array2))) j) (<= j index29)) (= (to_rep (select (select result__10 (+ (+ (* (- index13 (to_rep (first (rt array1)))) (length array2)) (- j (to_rep (first (rt array2))))) 1)) 2)) (to_rep (select (elts array2) j)))))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (and (and (=> (<= 0 2147483647) (in_range2 result_index10)) (=> (<= (to_rep (first (rt array2))) (to_rep (last (rt array2)))) (dynamic_property7 (to_rep (first (rt array2))) (to_rep (last (rt array2))) index29))) (and (<= (to_rep (first (rt array2))) index29) (<= index29 (to_rep (last (rt array2))))))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= index29 (to_rep (last (rt array2))))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= index210 (mk_int__ref index29))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result_index11 (mk_int__ref result_index10))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result__11 (mk_map__ref1 result__10))))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= index211 index29)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result_index12 result_index10)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result__12 result__10)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= index212 index210)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result_index13 result_index11)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result__13 result__11)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= index213 index211)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result_index14 result_index12)))
(assert (=> (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2))))) (= result__14 result__12)))
(assert (=> (not (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2)))))) (= index212 (mk_int__ref index28))))
(assert (=> (not (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2)))))) (= result_index13 (mk_int__ref result_index8))))
(assert (=> (not (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2)))))) (= result__13 (mk_map__ref1 result__8))))
(assert (=> (not (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2)))))) (= index213 index28)))
(assert (=> (not (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2)))))) (= result_index14 result_index8)))
(assert (=> (not (and (<= (to_rep (first (rt array2))) index28) (<= index28 (to_rep (last (rt array2)))))) (= result__14 result__8)))
(assert (= index214 index212))
(assert (= index14 (mk_int__ref index13)))
(assert (= result_index15 result_index13))
(assert (= result__15 result__13))
(assert (= index215 index213))
(assert (= index15 index13))
(assert (= result_index16 result_index14))
(assert (= result__16 result__14))
(declare-const i Int)
(assert (<= (to_rep (first (rt array1))) i))
(assert (<= i (int__content index14)))
(declare-const j Int)
(assert (<= (to_rep (first (rt array2))) j))
(assert (<= j (to_rep (last (rt array2)))))
(assert (not (= (to_rep (select (select (map__content1 result__15) (+ (+ (* (- i (to_rep (first (rt array1)))) (length array2)) (- j (to_rep (first (rt array2))))) 1)) 1)) (to_rep (select (elts array1) i)))))
(check-sat)
(exit)
