(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant1 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(declare-fun is_digit (Int) Bool)
(declare-fun is_digit__function_guard (Bool Int) Bool)
(define-fun dynamic_invariant2 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(assert (forall ((c Int)) (! (=> (dynamic_invariant2 c true true true) (let ((result (is_digit c))) (ite (= c 48) (= result true) (ite (= c 49) (= result true) (ite (= c 50) (= result true) (ite (= c 51) (= result true) (ite (= c 52) (= result true) (ite (= c 53) (= result true) (ite (= c 54) (= result true) (ite (= c 55) (= result true) (ite (= c 56) (= result true) (ite (= c 57) (= result true) (ite (< 57 c) (not (= result true)) (=> (< c 48) (not (= result true)))))))))))))))) :pattern ((is_digit c)))))
(declare-fun convert_character_digit_to_integer (Int) Int)
(declare-fun convert_character_digit_to_integer__function_guard (Int Int) Bool)
(assert (forall ((source Int)) (! (=> (and (dynamic_invariant2 source true true true) (= (is_digit source) true)) (let ((result (convert_character_digit_to_integer source))) (and (and (and (<= 0 result) (<= result 9)) (ite (= source 48) (= result 0) (ite (= source 49) (= result 1) (ite (= source 50) (= result 2) (ite (= source 51) (= result 3) (ite (= source 52) (= result 4) (ite (= source 53) (= result 5) (ite (= source 54) (= result 6) (ite (= source 55) (= result 7) (ite (= source 56) (= result 8) (=> (= source 57) (= result 9)))))))))))) (dynamic_invariant result true false true)))) :pattern ((convert_character_digit_to_integer source)))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int integer))))))
(declare-fun slide1 ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int integer) Int Int (Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (integer Int) (Array Int integer))
(assert (forall ((v integer)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq2 ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep1 (select a temp___idx_132)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep1 (select a temp___idx_132)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare1 ((Array Int integer) Int Int (Array Int integer) Int Int) Int)
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq2 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq2 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq2 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const source us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((tnumber_array_typeD1__ref (mk_tnumber_array_typeD1__ref (tnumber_array_typeD1__content integer)))))
(define-fun tnumber_array_typeD1__ref___12__projection ((a tnumber_array_typeD1__ref)) integer (tnumber_array_typeD1__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int integer)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int integer) (elts1 a))
(define-fun of_array1 ((a (Array Int integer)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int integer)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int integer)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int integer)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq2 (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq5 (us_t1 us_t1) Bool)
(declare-const dummy5 us_t1)
(declare-datatypes () ((number_array_type__ref (mk_number_array_type__ref (number_array_type__content us_t1)))))
(define-fun number_array_type__ref___12__projection ((a number_array_type__ref)) us_t1 (number_array_type__content a))
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t276b__ref (mk_t276b__ref (t276b__content integer)))))
(define-fun t276b__ref___projection ((a t276b__ref)) integer (t276b__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int integer)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int integer) (elts2 a))
(define-fun of_array2 ((a (Array Int integer)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int integer)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int integer)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int integer)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq4 ((x us_t2) (y us_t2)) Bool (bool_eq2 (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((t277b__ref (mk_t277b__ref (t277b__content us_t2)))))
(define-fun t277b__ref___projection ((a t277b__ref)) us_t2 (t277b__content a))
(declare-const n__first integer)
(declare-const n__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_property5 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t278b__ref (mk_t278b__ref (t278b__content integer)))))
(define-fun t278b__ref___projection ((a t278b__ref)) integer (t278b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first6 (mk3 f l))) f) (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int integer)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int integer) (elts3 a))
(define-fun of_array3 ((a (Array Int integer)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int integer)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int integer)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int integer)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq5 ((x us_t3) (y us_t3)) Bool (bool_eq2 (elts3 x) (to_rep1 (first6 (rt3 x))) (to_rep1 (last6 (rt3 x))) (elts3 y) (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))
(declare-fun user_eq9 (us_t3 us_t3) Bool)
(declare-const dummy9 us_t3)
(declare-datatypes () ((tnumber_array_typeB__ref (mk_tnumber_array_typeB__ref (tnumber_array_typeB__content us_t3)))))
(define-fun tnumber_array_typeB__ref___12__projection ((a tnumber_array_typeB__ref)) us_t3 (tnumber_array_typeB__content a))
(declare-fun aida__conversion__calculate_positive_target_length_8__n__aggregate_def (Int Int Int) us_t2)
(assert (forall ((temp___1591 Int) (temp___1592 Int) (temp___1593 Int)) (let ((temp___1590 (aida__conversion__calculate_positive_target_length_8__n__aggregate_def temp___1591 temp___1592 temp___1593))) (and (=> (dynamic_property6 (first1 source) (+ (first1 source) 7) temp___1592 temp___1593) (and (= (first5 temp___1590) temp___1592) (= (last5 temp___1590) temp___1593))) (forall ((temp___1594 Int)) (= (select (to_array2 temp___1590) temp___1594) (of_rep1 temp___1591)))))))
(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant4 ((temp___expr_365 us_t1) (temp___is_init_362 Bool) (temp___skip_constant_363 Bool) (temp___do_toplevel_364 Bool)) Bool (=> (not (= temp___skip_constant_363 true)) (and (dynamic_property2 (first1 source) (+ (first1 source) 7) (first3 temp___expr_365) (last3 temp___expr_365)) (and (= (first3 temp___expr_365) (first1 source)) (= (last3 temp___expr_365) (+ (first1 source) 7))))))
(declare-const target Int)
(declare-const has_failed Bool)
(declare-const n (Array Int integer))
(declare-const index Int)
(declare-const temp___1596 (Array Int integer))
(declare-const temp___15961 t2)
(declare-const aida__conversion__calculate_positive_target_length_8__n__assume (Array Int integer))
(declare-const aida__conversion__calculate_positive_target_length_8__n__assume1 t1)
(declare-const temp___1603 Int)
(declare-const temp___1601 Int)
(declare-const temp___1599 (Array Int integer))
(declare-const o Int)
(declare-const o1 integer)
(declare-const o2 Int)
(declare-const aida__conversion__convert_character_digit_to_integer__2__target Int)
(declare-const o3 Int)
(declare-const o4 character)
(declare-const o5 Int)
(declare-const o6 integer)
(declare-const o7 Int)
(declare-const o8 (Array Int integer))
(declare-const temp___1604 Int)
(declare-const o9 Int)
(declare-const o10 integer)
(declare-const o11 Int)
(declare-const temp___1605 Int)
(declare-const o12 Int)
(declare-const o13 integer)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 Int)
(declare-const o17 Int)
(declare-const o18 Int)
(declare-const temp___1606 Int)
(declare-const o19 Int)
(declare-const o20 integer)
(declare-const o21 Int)
(declare-const o22 Int)
(declare-const o23 Int)
(declare-const o24 Int)
(declare-const o25 Int)
(declare-const temp___1607 Int)
(declare-const o26 Int)
(declare-const o27 integer)
(declare-const o28 Int)
(declare-const o29 Int)
(declare-const o30 Int)
(declare-const o31 Int)
(declare-const o32 Int)
(declare-const temp___1608 Int)
(declare-const o33 Int)
(declare-const o34 integer)
(declare-const o35 Int)
(declare-const o36 Int)
(declare-const o37 Int)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const temp___1609 Int)
(declare-const o40 Int)
(declare-const o41 integer)
(declare-const o42 Int)
(declare-const o43 Int)
(declare-const o44 Int)
(declare-const o45 Int)
(declare-const o46 Int)
(declare-const temp___1610 Int)
(declare-const o47 Int)
(declare-const o48 integer)
(declare-const o49 Int)
(declare-const o50 Int)
(declare-const o51 Int)
(declare-const o52 Int)
(declare-const o53 Int)
(declare-const temp___1611 Int)
(declare-const o54 Int)
(declare-const o55 integer)
(declare-const o56 Int)
(declare-const o57 Int)
(declare-const o58 Int)
(declare-const o59 Int)
(declare-const o60 Int)
(declare-const temp___1613 Int)
(declare-const o61 Int)
(declare-const o62 character)
(declare-const o63 Int)
(declare-const o64 Int)
(declare-const o65 Int)
(declare-const o66 Int)
(declare-const temp___1614 Int)
(declare-const o67 Int)
(declare-const o68 character)
(declare-const o69 Int)
(declare-const o70 Int)
(declare-const o71 Int)
(declare-const o72 Int)
(declare-const temp___1615 Int)
(declare-const o73 Int)
(declare-const o74 character)
(declare-const o75 Int)
(declare-const o76 Int)
(declare-const o77 Int)
(declare-const o78 Int)
(declare-const temp___1616 Int)
(declare-const o79 Int)
(declare-const o80 character)
(declare-const o81 Int)
(declare-const o82 Int)
(declare-const o83 Int)
(declare-const o84 Int)
(declare-const temp___1617 Int)
(declare-const o85 Int)
(declare-const o86 character)
(declare-const o87 Int)
(declare-const o88 Int)
(declare-const o89 Int)
(declare-const o90 Int)
(declare-const temp___1618 Int)
(declare-const o91 Int)
(declare-const o92 character)
(declare-const o93 Int)
(declare-const o94 Int)
(declare-const o95 Int)
(declare-const o96 Int)
(declare-const temp___1619 Int)
(declare-const o97 Int)
(declare-const o98 character)
(declare-const o99 Int)
(declare-const o100 Int)
(declare-const o101 Int)
(declare-const o102 Int)
(declare-const result (Array Int integer))
(declare-const n1 (Array Int integer))
(declare-const result1 Int)
(declare-const index1 Int)
(declare-const aida__conversion__convert_character_digit_to_integer__2__target1 Int)
(declare-const result2 (Array Int integer))
(declare-const n2 (Array Int integer))
(declare-const n3 (Array Int integer))
(declare-const index2 Int)
(declare-const n4 (Array Int integer))
(declare-const index3 Int)
(declare-const n5 (Array Int integer))
(declare-const index4 Int)
(declare-const n6 (Array Int integer))
(declare-const index5 Int)
(declare-const n7 (Array Int integer))
(declare-const index6 Int)
(declare-const result3 Int)
(declare-const target1 Int)
(declare-const result4 Int)
(declare-const target2 Int)
(declare-const result5 int__ref)
(declare-const target3 Int)
(declare-const result6 int__ref)
(declare-const target4 Int)
(declare-const result7 int__ref)
(declare-const target5 Int)
(declare-const result8 int__ref)
(declare-const target6 Int)
(declare-const result9 int__ref)
(declare-const target7 Int)
(declare-const result10 int__ref)
(declare-const target8 Int)
(declare-const result11 bool__ref)
(declare-const has_failed1 Bool)
(declare-const target9 int__ref)
(declare-const has_failed2 bool__ref)
(declare-const n8 map__ref1)
(declare-const index7 int__ref)
(declare-const target10 Int)
(declare-const has_failed3 Bool)
(declare-const n9 (Array Int integer))
(declare-const index8 Int)
(define-fun index9 () int__ref (mk_int__ref index5))
(define-fun n10 () map__ref1 (mk_map__ref1 n6))
(assert (dynamic_invariant1 source true false true))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 target)))
(assert (and (= (length source) 8) (forall ((index10 Int)) (=> (and (<= (to_rep1 (first (rt source))) index10) (<= index10 (to_rep1 (last (rt source))))) (= (is_digit (to_rep (select (elts source) index10))) true)))))
(assert (= (to_rep1 (first4 (rt2 (aida__conversion__calculate_positive_target_length_8__n__aggregate_def 0 (to_rep1 (first (rt source))) (+ (to_rep1 (first (rt source))) 7))))) (to_rep1 (first (rt source)))))
(assert (= (to_rep1 (last4 (rt2 (aida__conversion__calculate_positive_target_length_8__n__aggregate_def 0 (to_rep1 (first (rt source))) (+ (to_rep1 (first (rt source))) 7))))) (+ (to_rep1 (first (rt source))) 7)))
(assert (= (mk___t2 temp___1596 temp___15961) (aida__conversion__calculate_positive_target_length_8__n__aggregate_def 0 (to_rep1 (first (rt source))) (+ (to_rep1 (first (rt source))) 7))))
(assert (= (ite (<= (to_rep1 (first4 temp___15961)) (to_rep1 (last4 temp___15961))) (+ (- (to_rep1 (last4 temp___15961)) (to_rep1 (first4 temp___15961))) 1) 0) (ite (<= (to_rep1 (first (rt source))) (+ (to_rep1 (first (rt source))) 7)) (+ (- (+ (to_rep1 (first (rt source))) 7) (to_rep1 (first (rt source)))) 1) 0)))
(assert (= (slide1 temp___1596 (to_rep1 (first4 temp___15961)) (to_rep1 (first (rt source)))) aida__conversion__calculate_positive_target_length_8__n__assume))
(assert (= (mk1 (to_rep1 (first (rt source))) (+ (to_rep1 (first (rt source))) 7)) aida__conversion__calculate_positive_target_length_8__n__assume1))
(assert (= (mk_map__ref1 result) (mk_map__ref1 n)))
(assert (= n1 aida__conversion__calculate_positive_target_length_8__n__assume))
(assert (= (to_rep1 n__first) (to_rep1 (first2 aida__conversion__calculate_positive_target_length_8__n__assume1))))
(assert (= (to_rep1 n__last) (to_rep1 (last2 aida__conversion__calculate_positive_target_length_8__n__assume1))))
(assert (and (dynamic_property2 (to_rep1 (first (rt source))) (+ (to_rep1 (first (rt source))) 7) (to_rep1 n__first) (to_rep1 n__last)) (and (= (to_rep1 n__first) (to_rep1 (first (rt source)))) (= (to_rep1 n__last) (+ (to_rep1 (first (rt source))) 7)))))
(assert (and (= temp___1603 (+ (to_rep1 (first (rt source))) 7)) (in_range1 (+ (to_rep1 (first (rt source))) 7))))
(assert (= (mk_int__ref result1) (mk_int__ref index)))
(assert (= index1 (to_rep1 (first (rt source)))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= temp___1601 index1)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= temp___1599 n1)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (and (<= (to_rep1 n__first) index1) (<= index1 (to_rep1 n__last)))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= o index1)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= o1 (select n1 o))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= o2 (to_rep1 o1))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= o2 aida__conversion__convert_character_digit_to_integer__2__target)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (and (<= (to_rep1 (first (rt source))) index1) (<= index1 (to_rep1 (last (rt source)))))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= o3 index1)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= o4 (select (elts source) o3))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= o5 (to_rep o4))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (and (and (and (and (<= 0 aida__conversion__convert_character_digit_to_integer__2__target1) (<= aida__conversion__convert_character_digit_to_integer__2__target1 9)) (= aida__conversion__convert_character_digit_to_integer__2__target1 (convert_character_digit_to_integer o5))) (ite (= (= o5 48) true) (= aida__conversion__convert_character_digit_to_integer__2__target1 0) (ite (= (= o5 49) true) (= aida__conversion__convert_character_digit_to_integer__2__target1 1) (ite (= (= o5 50) true) (= aida__conversion__convert_character_digit_to_integer__2__target1 2) (ite (= (= o5 51) true) (= aida__conversion__convert_character_digit_to_integer__2__target1 3) (ite (= (= o5 52) true) (= aida__conversion__convert_character_digit_to_integer__2__target1 4) (ite (= (= o5 53) true) (= aida__conversion__convert_character_digit_to_integer__2__target1 5) (ite (= (= o5 54) true) (= aida__conversion__convert_character_digit_to_integer__2__target1 6) (ite (= (= o5 55) true) (= aida__conversion__convert_character_digit_to_integer__2__target1 7) (ite (= (= o5 56) true) (= aida__conversion__convert_character_digit_to_integer__2__target1 8) (=> (= (= o5 57) true) (= aida__conversion__convert_character_digit_to_integer__2__target1 9)))))))))))) (in_range1 aida__conversion__convert_character_digit_to_integer__2__target1))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= (to_rep1 o6) aida__conversion__convert_character_digit_to_integer__2__target1)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (and (<= (to_rep1 n__first) index1) (<= index1 (to_rep1 n__last)))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= o7 index1)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= o8 (store n1 o7 o6))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= n1 result2)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= n2 o8)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (forall ((j Int)) (=> (and (<= (to_rep1 (first (rt source))) j) (<= j index2)) (= (to_rep1 (select n3 j)) (convert_character_digit_to_integer (to_rep (select (elts source) j))))))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (and (and (forall ((temp___1600 Int)) (=> (and (<= (to_rep1 n__first) temp___1600) (<= temp___1600 (to_rep1 n__last))) (=> (< index2 temp___1600) (= (select n3 temp___1600) (select temp___1599 temp___1600))))) (=> (<= (to_rep1 (first (rt source))) (+ (to_rep1 (first (rt source))) 7)) (dynamic_property5 (to_rep1 (first (rt source))) (+ (to_rep1 (first (rt source))) 7) index2))) (and (<= (to_rep1 (first (rt source))) index2) (<= index2 (+ (to_rep1 (first (rt source))) 7))))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= index2 temp___1603)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= index2 index3)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= n3 n4)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= index4 index2)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= n5 n3)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= index9 (mk_int__ref index3))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= n10 (mk_map__ref1 n4))))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= index6 index4)))
(assert (=> (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603)) (= n7 n5)))
(assert (=> (not (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603))) (= index1 index5)))
(assert (=> (not (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603))) (= n1 n6)))
(assert (=> (not (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603))) (= index6 index1)))
(assert (=> (not (and (<= (to_rep1 (first (rt source))) index1) (<= index1 temp___1603))) (= n7 n1)))
(assert (and (= temp___1604 (+ (to_rep1 (first (rt source))) 7)) (in_range1 (+ (to_rep1 (first (rt source))) 7))))
(assert (and (<= (to_rep1 n__first) temp___1604) (<= temp___1604 (to_rep1 n__last))))
(assert (= o9 temp___1604))
(assert (= o10 (select n6 o9)))
(assert (= o11 (to_rep1 o10)))
(assert (= (mk_int__ref result3) (mk_int__ref target)))
(assert (= target1 o11))
(assert (<= target1 9))
(assert (and (= temp___1605 (+ (to_rep1 (first (rt source))) 6)) (in_range1 (+ (to_rep1 (first (rt source))) 6))))
(assert (and (<= (to_rep1 n__first) temp___1605) (<= temp___1605 (to_rep1 n__last))))
(assert (= o12 temp___1605))
(assert (= o13 (select n6 o12)))
(assert (= o14 (to_rep1 o13)))
(assert (= o15 (* o14 10)))
(assert (and (= o16 o15) (in_range1 o15)))
(assert (= o17 (+ target1 o16)))
(assert (and (= o18 o17) (in_range1 o17)))
(assert (= target1 result4))
(assert (= target2 o18))
(assert (<= target2 99))
(assert (and (= temp___1606 (+ (to_rep1 (first (rt source))) 5)) (in_range1 (+ (to_rep1 (first (rt source))) 5))))
(assert (and (<= (to_rep1 n__first) temp___1606) (<= temp___1606 (to_rep1 n__last))))
(assert (= o19 temp___1606))
(assert (= o20 (select n6 o19)))
(assert (= o21 (to_rep1 o20)))
(assert (= o22 (* o21 100)))
(assert (and (= o23 o22) (in_range1 o22)))
(assert (= o24 (+ target2 o23)))
(assert (and (= o25 o24) (in_range1 o24)))
(assert (= result5 (mk_int__ref target2)))
(assert (= target3 o25))
(assert (<= target3 999))
(assert (and (= temp___1607 (+ (to_rep1 (first (rt source))) 4)) (in_range1 (+ (to_rep1 (first (rt source))) 4))))
(assert (and (<= (to_rep1 n__first) temp___1607) (<= temp___1607 (to_rep1 n__last))))
(assert (= o26 temp___1607))
(assert (= o27 (select n6 o26)))
(assert (= o28 (to_rep1 o27)))
(assert (= o29 (* o28 1000)))
(assert (and (= o30 o29) (in_range1 o29)))
(assert (= o31 (+ target3 o30)))
(assert (and (= o32 o31) (in_range1 o31)))
(assert (= result6 (mk_int__ref target3)))
(assert (= target4 o32))
(assert (<= target4 9999))
(assert (and (= temp___1608 (+ (to_rep1 (first (rt source))) 3)) (in_range1 (+ (to_rep1 (first (rt source))) 3))))
(assert (and (<= (to_rep1 n__first) temp___1608) (<= temp___1608 (to_rep1 n__last))))
(assert (= o33 temp___1608))
(assert (= o34 (select n6 o33)))
(assert (= o35 (to_rep1 o34)))
(assert (= o36 (* o35 10000)))
(assert (and (= o37 o36) (in_range1 o36)))
(assert (= o38 (+ target4 o37)))
(assert (and (= o39 o38) (in_range1 o38)))
(assert (= result7 (mk_int__ref target4)))
(assert (= target5 o39))
(assert (<= target5 99999))
(assert (and (= temp___1609 (+ (to_rep1 (first (rt source))) 2)) (in_range1 (+ (to_rep1 (first (rt source))) 2))))
(assert (and (<= (to_rep1 n__first) temp___1609) (<= temp___1609 (to_rep1 n__last))))
(assert (= o40 temp___1609))
(assert (= o41 (select n6 o40)))
(assert (= o42 (to_rep1 o41)))
(assert (= o43 (* o42 100000)))
(assert (and (= o44 o43) (in_range1 o43)))
(assert (= o45 (+ target5 o44)))
(assert (and (= o46 o45) (in_range1 o45)))
(assert (= result8 (mk_int__ref target5)))
(assert (= target6 o46))
(assert (<= target6 999999))
(assert (and (= temp___1610 (+ (to_rep1 (first (rt source))) 1)) (in_range1 (+ (to_rep1 (first (rt source))) 1))))
(assert (and (<= (to_rep1 n__first) temp___1610) (<= temp___1610 (to_rep1 n__last))))
(assert (= o47 temp___1610))
(assert (= o48 (select n6 o47)))
(assert (= o49 (to_rep1 o48)))
(assert (= o50 (* o49 1000000)))
(assert (and (= o51 o50) (in_range1 o50)))
(assert (= o52 (+ target6 o51)))
(assert (and (= o53 o52) (in_range1 o52)))
(assert (= result9 (mk_int__ref target6)))
(assert (= target7 o53))
(assert (<= target7 9999999))
(assert (and (= temp___1611 (+ (to_rep1 (first (rt source))) 0)) (in_range1 (+ (to_rep1 (first (rt source))) 0))))
(assert (and (<= (to_rep1 n__first) temp___1611) (<= temp___1611 (to_rep1 n__last))))
(assert (= o54 temp___1611))
(assert (= o55 (select n6 o54)))
(assert (= o56 (to_rep1 o55)))
(assert (= o57 (* o56 10000000)))
(assert (and (= o58 o57) (in_range1 o57)))
(assert (= o59 (+ target7 o58)))
(assert (and (= o60 o59) (in_range1 o59)))
(assert (= result10 (mk_int__ref target7)))
(assert (= target8 o60))
(assert (<= target8 99999999))
(assert (= result11 (mk_bool__ref has_failed)))
(assert (= has_failed1 (of_int 0)))
(assert (= index7 index9))
(assert (= n8 n10))
(assert (= has_failed2 (mk_bool__ref has_failed1)))
(assert (= target9 (mk_int__ref target8)))
(assert (= index8 index6))
(assert (= n9 n7))
(assert (= has_failed3 has_failed1))
(assert (= target10 target8))
(assert (and (= temp___1619 (+ (to_rep1 (first (rt source))) 7)) (in_range1 (+ (to_rep1 (first (rt source))) 7))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1619) (<= temp___1619 (to_rep1 (last (rt source))))))
(assert (= o97 temp___1619))
(assert (= o98 (select (elts source) o97)))
(assert (= o99 (to_rep o98)))
(assert (and (= o100 (convert_character_digit_to_integer o99)) (and (in_range1 o100) (and (and (<= 0 o100) (<= o100 9)) (ite (= (= o99 48) true) (= o100 0) (ite (= (= o99 49) true) (= o100 1) (ite (= (= o99 50) true) (= o100 2) (ite (= (= o99 51) true) (= o100 3) (ite (= (= o99 52) true) (= o100 4) (ite (= (= o99 53) true) (= o100 5) (ite (= (= o99 54) true) (= o100 6) (ite (= (= o99 55) true) (= o100 7) (ite (= (= o99 56) true) (= o100 8) (=> (= (= o99 57) true) (= o100 9)))))))))))))))
(assert (= o101 (* o100 1)))
(assert (and (= o102 o101) (in_range1 o101)))
(assert (and (= temp___1618 (+ (to_rep1 (first (rt source))) 6)) (in_range1 (+ (to_rep1 (first (rt source))) 6))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1618) (<= temp___1618 (to_rep1 (last (rt source))))))
(assert (= o91 temp___1618))
(assert (= o92 (select (elts source) o91)))
(assert (= o93 (to_rep o92)))
(assert (and (= o94 (convert_character_digit_to_integer o93)) (and (in_range1 o94) (and (and (<= 0 o94) (<= o94 9)) (ite (= (= o93 48) true) (= o94 0) (ite (= (= o93 49) true) (= o94 1) (ite (= (= o93 50) true) (= o94 2) (ite (= (= o93 51) true) (= o94 3) (ite (= (= o93 52) true) (= o94 4) (ite (= (= o93 53) true) (= o94 5) (ite (= (= o93 54) true) (= o94 6) (ite (= (= o93 55) true) (= o94 7) (ite (= (= o93 56) true) (= o94 8) (=> (= (= o93 57) true) (= o94 9)))))))))))))))
(assert (= o95 (* o94 10)))
(assert (and (= o96 o95) (in_range1 o95)))
(assert (and (= temp___1617 (+ (to_rep1 (first (rt source))) 5)) (in_range1 (+ (to_rep1 (first (rt source))) 5))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1617) (<= temp___1617 (to_rep1 (last (rt source))))))
(assert (= o85 temp___1617))
(assert (= o86 (select (elts source) o85)))
(assert (= o87 (to_rep o86)))
(assert (and (= o88 (convert_character_digit_to_integer o87)) (and (in_range1 o88) (and (and (<= 0 o88) (<= o88 9)) (ite (= (= o87 48) true) (= o88 0) (ite (= (= o87 49) true) (= o88 1) (ite (= (= o87 50) true) (= o88 2) (ite (= (= o87 51) true) (= o88 3) (ite (= (= o87 52) true) (= o88 4) (ite (= (= o87 53) true) (= o88 5) (ite (= (= o87 54) true) (= o88 6) (ite (= (= o87 55) true) (= o88 7) (ite (= (= o87 56) true) (= o88 8) (=> (= (= o87 57) true) (= o88 9)))))))))))))))
(assert (= o89 (* o88 100)))
(assert (and (= o90 o89) (in_range1 o89)))
(assert (and (= temp___1616 (+ (to_rep1 (first (rt source))) 4)) (in_range1 (+ (to_rep1 (first (rt source))) 4))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1616) (<= temp___1616 (to_rep1 (last (rt source))))))
(assert (= o79 temp___1616))
(assert (= o80 (select (elts source) o79)))
(assert (= o81 (to_rep o80)))
(assert (and (= o82 (convert_character_digit_to_integer o81)) (and (in_range1 o82) (and (and (<= 0 o82) (<= o82 9)) (ite (= (= o81 48) true) (= o82 0) (ite (= (= o81 49) true) (= o82 1) (ite (= (= o81 50) true) (= o82 2) (ite (= (= o81 51) true) (= o82 3) (ite (= (= o81 52) true) (= o82 4) (ite (= (= o81 53) true) (= o82 5) (ite (= (= o81 54) true) (= o82 6) (ite (= (= o81 55) true) (= o82 7) (ite (= (= o81 56) true) (= o82 8) (=> (= (= o81 57) true) (= o82 9)))))))))))))))
(assert (= o83 (* o82 1000)))
(assert (and (= o84 o83) (in_range1 o83)))
(assert (and (= temp___1615 (+ (to_rep1 (first (rt source))) 3)) (in_range1 (+ (to_rep1 (first (rt source))) 3))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1615) (<= temp___1615 (to_rep1 (last (rt source))))))
(assert (= o73 temp___1615))
(assert (= o74 (select (elts source) o73)))
(assert (= o75 (to_rep o74)))
(assert (and (= o76 (convert_character_digit_to_integer o75)) (and (in_range1 o76) (and (and (<= 0 o76) (<= o76 9)) (ite (= (= o75 48) true) (= o76 0) (ite (= (= o75 49) true) (= o76 1) (ite (= (= o75 50) true) (= o76 2) (ite (= (= o75 51) true) (= o76 3) (ite (= (= o75 52) true) (= o76 4) (ite (= (= o75 53) true) (= o76 5) (ite (= (= o75 54) true) (= o76 6) (ite (= (= o75 55) true) (= o76 7) (ite (= (= o75 56) true) (= o76 8) (=> (= (= o75 57) true) (= o76 9)))))))))))))))
(assert (= o77 (* o76 10000)))
(assert (and (= o78 o77) (in_range1 o77)))
(assert (and (= temp___1614 (+ (to_rep1 (first (rt source))) 2)) (in_range1 (+ (to_rep1 (first (rt source))) 2))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1614) (<= temp___1614 (to_rep1 (last (rt source))))))
(assert (= o67 temp___1614))
(assert (= o68 (select (elts source) o67)))
(assert (= o69 (to_rep o68)))
(assert (and (= o70 (convert_character_digit_to_integer o69)) (and (in_range1 o70) (and (and (<= 0 o70) (<= o70 9)) (ite (= (= o69 48) true) (= o70 0) (ite (= (= o69 49) true) (= o70 1) (ite (= (= o69 50) true) (= o70 2) (ite (= (= o69 51) true) (= o70 3) (ite (= (= o69 52) true) (= o70 4) (ite (= (= o69 53) true) (= o70 5) (ite (= (= o69 54) true) (= o70 6) (ite (= (= o69 55) true) (= o70 7) (ite (= (= o69 56) true) (= o70 8) (=> (= (= o69 57) true) (= o70 9)))))))))))))))
(assert (= o71 (* o70 100000)))
(assert (and (= o72 o71) (in_range1 o71)))
(assert (and (= temp___1613 (+ (to_rep1 (first (rt source))) 1)) (in_range1 (+ (to_rep1 (first (rt source))) 1))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1613) (<= temp___1613 (to_rep1 (last (rt source))))))
(assert (= o61 temp___1613))
(assert (= o62 (select (elts source) o61)))
(assert (= o63 (to_rep o62)))
(assert (and (= o64 (convert_character_digit_to_integer o63)) (and (in_range1 o64) (and (and (<= 0 o64) (<= o64 9)) (ite (= (= o63 48) true) (= o64 0) (ite (= (= o63 49) true) (= o64 1) (ite (= (= o63 50) true) (= o64 2) (ite (= (= o63 51) true) (= o64 3) (ite (= (= o63 52) true) (= o64 4) (ite (= (= o63 53) true) (= o64 5) (ite (= (= o63 54) true) (= o64 6) (ite (= (= o63 55) true) (= o64 7) (ite (= (= o63 56) true) (= o64 8) (=> (= (= o63 57) true) (= o64 9)))))))))))))))
(assert (= o65 (* o64 1000000)))
(assert (and (= o66 o65) (in_range1 o65)))
(assert (not (in_range1 (+ (to_rep1 (first (rt source))) 0))))
(check-sat)
(exit)
