(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort character 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (character character) Bool)
(declare-const dummy character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-sort namecountt 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 40)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (namecountt namecountt) Bool)
(declare-const dummy1 namecountt)
(declare-datatypes () ((namecountt__ref (mk_namecountt__ref (namecountt__content namecountt)))))
(define-fun namecountt__ref___projection ((a namecountt__ref)) namecountt (namecountt__content a))
(declare-fun to_rep1 (namecountt) Int)
(declare-fun of_rep1 (Int) namecountt)
(assert (forall ((x namecountt)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x namecountt)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-const dummy2 (Array Int character))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(declare-fun user_eq2 ((Array Int character) (Array Int character)) Bool)
(declare-sort issueridt 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (issueridt issueridt) Bool)
(declare-const dummy3 issueridt)
(declare-datatypes () ((issueridt__ref (mk_issueridt__ref (issueridt__content issueridt)))))
(define-fun issueridt__ref___projection ((a issueridt__ref)) issueridt (issueridt__content a))
(declare-fun to_rep2 (issueridt) Int)
(declare-fun of_rep2 (Int) issueridt)
(assert (forall ((x issueridt)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x issueridt)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__cryptotypes__issuert__id issueridt) (rec__cryptotypes__issuert__namelength namecountt) (rec__cryptotypes__issuert__name (Array Int character))))))
(define-fun us_split_fields_ID__projection ((a us_split_fields)) issueridt (rec__cryptotypes__issuert__id a))
(define-fun us_split_fields_NameLength__projection ((a us_split_fields)) namecountt (rec__cryptotypes__issuert__namelength a))
(define-fun us_split_fields_Name__projection ((a us_split_fields)) (Array Int character) (rec__cryptotypes__issuert__name a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq1 ((a us_rep) (b us_rep)) Bool (ite (and (and (= (to_rep2 (rec__cryptotypes__issuert__id (us_split_fields1 a))) (to_rep2 (rec__cryptotypes__issuert__id (us_split_fields1 b)))) (= (to_rep1 (rec__cryptotypes__issuert__namelength (us_split_fields1 a))) (to_rep1 (rec__cryptotypes__issuert__namelength (us_split_fields1 b))))) (= (bool_eq (rec__cryptotypes__issuert__name (us_split_fields1 a)) 1 40 (rec__cryptotypes__issuert__name (us_split_fields1 b)) 1 40) true)) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const cryptotypes__issuert__id__first__bit Int)
(declare-const cryptotypes__issuert__id__last__bit Int)
(declare-const cryptotypes__issuert__id__position Int)
(assert (<= 0 cryptotypes__issuert__id__first__bit))
(assert (< cryptotypes__issuert__id__first__bit cryptotypes__issuert__id__last__bit))
(assert (<= 0 cryptotypes__issuert__id__position))
(declare-const cryptotypes__issuert__namelength__first__bit Int)
(declare-const cryptotypes__issuert__namelength__last__bit Int)
(declare-const cryptotypes__issuert__namelength__position Int)
(assert (<= 0 cryptotypes__issuert__namelength__first__bit))
(assert (< cryptotypes__issuert__namelength__first__bit cryptotypes__issuert__namelength__last__bit))
(assert (<= 0 cryptotypes__issuert__namelength__position))
(declare-const cryptotypes__issuert__name__first__bit Int)
(declare-const cryptotypes__issuert__name__last__bit Int)
(declare-const cryptotypes__issuert__name__position Int)
(assert (<= 0 cryptotypes__issuert__name__first__bit))
(assert (< cryptotypes__issuert__name__first__bit cryptotypes__issuert__name__last__bit))
(assert (<= 0 cryptotypes__issuert__name__position))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((issuert__ref (mk_issuert__ref (issuert__content us_rep)))))
(define-fun issuert__ref___projection ((a issuert__ref)) us_rep (issuert__content a))
(declare-sort serialnumbert 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (serialnumbert serialnumbert) Bool)
(declare-const dummy5 serialnumbert)
(declare-datatypes () ((serialnumbert__ref (mk_serialnumbert__ref (serialnumbert__content serialnumbert)))))
(define-fun serialnumbert__ref___projection ((a serialnumbert__ref)) serialnumbert (serialnumbert__content a))
(declare-fun to_rep3 (serialnumbert) Int)
(declare-fun of_rep3 (Int) serialnumbert)
(assert (forall ((x serialnumbert)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x serialnumbert)) (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__certtypes__idt__issuer us_rep) (rec__certtypes__idt__serialnumber serialnumbert)))))
(define-fun us_split_fields_Issuer__projection ((a us_split_fields2)) us_rep (rec__certtypes__idt__issuer a))
(define-fun us_split_fields_SerialNumber__projection ((a us_split_fields2)) serialnumbert (rec__certtypes__idt__serialnumber a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___5__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___5__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq2 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (bool_eq1 (rec__certtypes__idt__issuer (us_split_fields3 a)) (rec__certtypes__idt__issuer (us_split_fields3 b))) true) (= (to_rep3 (rec__certtypes__idt__serialnumber (us_split_fields3 a))) (to_rep3 (rec__certtypes__idt__serialnumber (us_split_fields3 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const certtypes__idt__issuer__first__bit Int)
(declare-const certtypes__idt__issuer__last__bit Int)
(declare-const certtypes__idt__issuer__position Int)
(assert (<= 0 certtypes__idt__issuer__first__bit))
(assert (< certtypes__idt__issuer__first__bit certtypes__idt__issuer__last__bit))
(assert (<= 0 certtypes__idt__issuer__position))
(declare-const certtypes__idt__serialnumber__first__bit Int)
(declare-const certtypes__idt__serialnumber__last__bit Int)
(declare-const certtypes__idt__serialnumber__position Int)
(assert (<= 0 certtypes__idt__serialnumber__first__bit))
(assert (< certtypes__idt__serialnumber__first__bit certtypes__idt__serialnumber__last__bit))
(assert (<= 0 certtypes__idt__serialnumber__position))
(declare-fun user_eq6 (us_rep1 us_rep1) Bool)
(declare-const dummy6 us_rep1)
(declare-datatypes () ((idt__ref (mk_idt__ref (idt__content us_rep1)))))
(define-fun idt__ref___projection ((a idt__ref)) us_rep1 (idt__content a))
(declare-sort statust 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq7 (statust statust) Bool)
(declare-const dummy7 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant ((temp___expr_558 Int) (temp___is_init_555 Bool) (temp___skip_constant_556 Bool) (temp___do_toplevel_557 Bool)) Bool (=> (or (= temp___is_init_555 true) (<= 0 1)) (in_range5 temp___expr_558)))
(declare-sort descriptioni 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 150)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (descriptioni descriptioni) Bool)
(declare-const dummy8 descriptioni)
(declare-datatypes () ((descriptioni__ref (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni (descriptioni__content a))
(declare-const nodescription (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun audittypes__nodescription__aggregate_def (Int) (Array Int character))
(assert (forall ((temp___140 Int)) (forall ((temp___141 Int)) (= (select (audittypes__nodescription__aggregate_def temp___140) temp___141) (of_rep temp___140)))))
(declare-sort yearst 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1901 x) (<= x 2099)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (yearst yearst) Bool)
(declare-const dummy9 yearst)
(declare-datatypes () ((yearst__ref (mk_yearst__ref (yearst__content yearst)))))
(define-fun yearst__ref___projection ((a yearst__ref)) yearst (yearst__content a))
(declare-fun to_rep4 (yearst) Int)
(declare-fun of_rep4 (Int) yearst)
(assert (forall ((x yearst)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x yearst)) (! (in_range7 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-sort monthst 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq10 (monthst monthst) Bool)
(declare-const dummy10 monthst)
(declare-datatypes () ((monthst__ref (mk_monthst__ref (monthst__content monthst)))))
(define-fun monthst__ref___projection ((a monthst__ref)) monthst (monthst__content a))
(declare-fun to_rep5 (monthst) Int)
(declare-fun of_rep5 (Int) monthst)
(assert (forall ((x monthst)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x monthst)) (! (in_range8 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-sort dayst 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq11 (dayst dayst) Bool)
(declare-const dummy11 dayst)
(declare-datatypes () ((dayst__ref (mk_dayst__ref (dayst__content dayst)))))
(define-fun dayst__ref___projection ((a dayst__ref)) dayst (dayst__content a))
(declare-fun to_rep6 (dayst) Int)
(declare-fun of_rep6 (Int) dayst)
(assert (forall ((x dayst)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x dayst)) (! (in_range9 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-sort millisecst 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 86399999)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq12 (millisecst millisecst) Bool)
(declare-const dummy12 millisecst)
(declare-datatypes () ((millisecst__ref (mk_millisecst__ref (millisecst__content millisecst)))))
(define-fun millisecst__ref___projection ((a millisecst__ref)) millisecst (millisecst__content a))
(declare-fun to_rep7 (millisecst) Int)
(declare-fun of_rep7 (Int) millisecst)
(assert (forall ((x millisecst)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x millisecst)) (! (in_range10 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__clock__timet__year yearst) (rec__clock__timet__month monthst) (rec__clock__timet__day dayst) (rec__clock__timet__millisec millisecst)))))
(define-fun us_split_fields_Year__projection ((a us_split_fields4)) yearst (rec__clock__timet__year a))
(define-fun us_split_fields_Month__projection ((a us_split_fields4)) monthst (rec__clock__timet__month a))
(define-fun us_split_fields_Day__projection ((a us_split_fields4)) dayst (rec__clock__timet__day a))
(define-fun us_split_fields_MilliSec__projection ((a us_split_fields4)) millisecst (rec__clock__timet__millisec a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___7__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq3 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (to_rep4 (rec__clock__timet__year (us_split_fields5 a))) (to_rep4 (rec__clock__timet__year (us_split_fields5 b)))) (= (to_rep5 (rec__clock__timet__month (us_split_fields5 a))) (to_rep5 (rec__clock__timet__month (us_split_fields5 b))))) (= (to_rep6 (rec__clock__timet__day (us_split_fields5 a))) (to_rep6 (rec__clock__timet__day (us_split_fields5 b))))) (= (to_rep7 (rec__clock__timet__millisec (us_split_fields5 a))) (to_rep7 (rec__clock__timet__millisec (us_split_fields5 b))))) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep2) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep2) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep2)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment3 a))))
(declare-const clock__timet__year__first__bit Int)
(declare-const clock__timet__year__last__bit Int)
(declare-const clock__timet__year__position Int)
(assert (<= 0 clock__timet__year__first__bit))
(assert (< clock__timet__year__first__bit clock__timet__year__last__bit))
(assert (<= 0 clock__timet__year__position))
(declare-const clock__timet__month__first__bit Int)
(declare-const clock__timet__month__last__bit Int)
(declare-const clock__timet__month__position Int)
(assert (<= 0 clock__timet__month__first__bit))
(assert (< clock__timet__month__first__bit clock__timet__month__last__bit))
(assert (<= 0 clock__timet__month__position))
(declare-const clock__timet__day__first__bit Int)
(declare-const clock__timet__day__last__bit Int)
(declare-const clock__timet__day__position Int)
(assert (<= 0 clock__timet__day__first__bit))
(assert (< clock__timet__day__first__bit clock__timet__day__last__bit))
(assert (<= 0 clock__timet__day__position))
(declare-const clock__timet__millisec__first__bit Int)
(declare-const clock__timet__millisec__last__bit Int)
(declare-const clock__timet__millisec__position Int)
(assert (<= 0 clock__timet__millisec__first__bit))
(assert (< clock__timet__millisec__first__bit clock__timet__millisec__last__bit))
(assert (<= 0 clock__timet__millisec__position))
(declare-fun user_eq13 (us_rep2 us_rep2) Bool)
(declare-const dummy13 us_rep2)
(declare-datatypes () ((timet__ref (mk_timet__ref (timet__content us_rep2)))))
(define-fun timet__ref___projection ((a timet__ref)) us_rep2 (timet__content a))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort logfileindext 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq14 (logfileindext logfileindext) Bool)
(declare-const dummy14 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep8 (logfileindext) Int)
(declare-fun of_rep8 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x logfileindext)) (! (in_range11 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq15 (logentrycountt logentrycountt) Bool)
(declare-const dummy15 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep9 (logentrycountt) Int)
(declare-fun of_rep9 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x logentrycountt)) (! (in_range12 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (logfileindext Int) (Array Int logfileindext))
(assert (forall ((v logfileindext)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq4 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep8 (select a temp___idx_153)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_153))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep8 (select a temp___idx_153)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_153)))))))))))
(declare-fun compare1 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) Int)
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq4 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq4 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep8 (select a (+ i 1))) (to_rep8 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq4 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep8 (select b (+ i 1))) (to_rep8 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const dummy16 (Array Int logfileindext))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int logfileindext)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int logfileindext)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment4 a))))
(declare-fun user_eq16 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-sort logfilecountt 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq17 (logfilecountt logfilecountt) Bool)
(declare-const dummy17 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep10 (logfilecountt) Int)
(declare-fun of_rep10 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x logfilecountt)) (! (in_range13 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep10 (of_rep10 x)) x)) :pattern ((to_rep10 (of_rep10 x))))))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields6)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields6)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields6)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields6)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___10__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep3 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___11__projection ((a us_rep3)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq5 ((a us_rep3) (b us_rep3)) Bool (ite (and (and (and (= (bool_eq4 (rec__auditlog__logfilelistt__list (us_split_fields7 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields7 b)) 1 17) true) (= (to_rep8 (rec__auditlog__logfilelistt__head (us_split_fields7 a))) (to_rep8 (rec__auditlog__logfilelistt__head (us_split_fields7 b))))) (= (to_rep8 (rec__auditlog__logfilelistt__lasti (us_split_fields7 a))) (to_rep8 (rec__auditlog__logfilelistt__lasti (us_split_fields7 b))))) (= (to_rep10 (rec__auditlog__logfilelistt__length (us_split_fields7 a))) (to_rep10 (rec__auditlog__logfilelistt__length (us_split_fields7 b))))) true false))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep3) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep3) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep3)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment5 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq18 (us_rep3 us_rep3) Bool)
(declare-const dummy18 us_rep3)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep3)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep3 (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq19 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy19 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep11 (fileentrycountt) Int)
(declare-fun of_rep11 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep11 (to_rep11 x)) x) :pattern ((to_rep11 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range14 (to_rep11 x)) :pattern ((to_rep11 x)))))
(assert (forall ((x Int)) (! (=> (in_range14 x) (= (to_rep11 (of_rep11 x)) x)) :pattern ((to_rep11 (of_rep11 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (fileentrycountt Int) (Array Int fileentrycountt))
(assert (forall ((v fileentrycountt)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq6 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep11 (select a temp___idx_154)) (to_rep11 (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep11 (select a temp___idx_154)) (to_rep11 (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-fun compare2 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) Int)
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare2 a a_first a_last b b_first b_last) 0) (= (bool_eq6 a a_first a_last b b_first b_last) true)) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare2 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq6 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep11 (select a (+ i 1))) (to_rep11 (select b (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare2 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq6 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep11 (select b (+ i 1))) (to_rep11 (select a (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(declare-const dummy20 (Array Int fileentrycountt))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment6 a))))
(declare-fun user_eq20 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep3) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields8)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields8)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields8)) us_rep3 (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields8)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___11__projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep4 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___12__projection ((a us_rep4)) us_split_fields8 (us_split_fields9 a))
(define-fun bool_eq7 ((a us_rep4) (b us_rep4)) Bool (ite (and (and (and (= (to_rep8 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields9 a))) (to_rep8 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields9 b)))) (= (to_rep9 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields9 a))) (to_rep9 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields9 b))))) (= (bool_eq5 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields9 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields9 b))) true)) (= (bool_eq6 (rec__auditlog__logfilestatet__logfileentries (us_split_fields9 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields9 b)) 1 17) true)) true false))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep4) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep4) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep4)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment7 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq21 (us_rep4 us_rep4) Bool)
(declare-const dummy21 us_rep4)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep4)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep4 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep3 (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep3 (Array Int fileentrycountt)) Bool)
(declare-fun temp___1193 (Int) (Array Int logfileindext))
(assert (forall ((temp___1195 Int)) (forall ((temp___1196 Int)) (= (select (temp___1193 temp___1195) temp___1196) (of_rep8 temp___1195)))))
(declare-fun temp___1197 (Int) (Array Int fileentrycountt))
(assert (forall ((temp___1199 Int)) (forall ((temp___1200 Int)) (= (select (temp___1197 temp___1199) temp___1200) (of_rep11 temp___1199)))))
(define-fun dynamic_invariant1 ((temp___expr_1187 us_rep4) (temp___is_init_1184 Bool) (temp___skip_constant_1185 Bool) (temp___do_toplevel_1186 Bool)) Bool (= (valid_numberlogentries (to_rep8 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields9 temp___expr_1187))) (to_rep9 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields9 temp___expr_1187))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields9 temp___expr_1187)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields9 temp___expr_1187))) true))
(define-fun default_initial_assumption ((temp___expr_1191 us_rep4) (temp___skip_top_level_1192 Bool)) Bool (and (and (and (= (to_rep8 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields9 temp___expr_1191))) 1) (= (to_rep9 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields9 temp___expr_1191))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields9 temp___expr_1191)) (mk___rep3 (mk___split_fields3 (temp___1193 1) (of_rep8 1) (of_rep8 1) (of_rep10 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields9 temp___expr_1191)) (temp___1197 0))))
(define-fun type_invariant ((temp___1201 us_rep4)) Bool (= (valid_numberlogentries (to_rep8 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields9 temp___1201))) (to_rep9 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields9 temp___1201))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields9 temp___1201)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields9 temp___1201))) true))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep5 0)
(declare-fun bool_eq8 (us_rep5 us_rep5) Bool)
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep5) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep5) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep5)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment8 a))))
(declare-fun user_eq22 (us_rep5 us_rep5) Bool)
(declare-const dummy22 us_rep5)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep5)))))
(define-fun t__ref___projection ((a t__ref)) us_rep5 (t__content a))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep5))))))
(declare-fun slide3 ((Array Int us_rep5) Int Int) (Array Int us_rep5))
(assert (forall ((a (Array Int us_rep5))) (forall ((first Int)) (! (= (slide3 a first first) a) :pattern ((slide3 a first first))))))
(assert (forall ((a (Array Int us_rep5))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(declare-fun concat4 ((Array Int us_rep5) Int Int (Array Int us_rep5) Int Int) (Array Int us_rep5))
(assert (forall ((a (Array Int us_rep5)) (b (Array Int us_rep5))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat4 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton4 (us_rep5 Int) (Array Int us_rep5))
(assert (forall ((v us_rep5)) (forall ((i Int)) (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i))))))
(define-fun bool_eq9 ((a (Array Int us_rep5)) (a__first Int) (a__last Int) (b (Array Int us_rep5)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq8 (select a temp___idx_155) (select b (+ (- b__first a__first) temp___idx_155))) true)))) true false))
(assert (forall ((a (Array Int us_rep5)) (b (Array Int us_rep5))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq9 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq8 (select a temp___idx_155) (select b (+ (- b__first a__first) temp___idx_155))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort filestatust 0)
(define-fun in_range15 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq23 (filestatust filestatust) Bool)
(declare-const dummy23 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep12 (filestatust) Int)
(declare-fun of_rep12 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep12 (to_rep12 x)) x) :pattern ((to_rep12 x)))))
(assert (forall ((x filestatust)) (! (in_range15 (to_rep12 x)) :pattern ((to_rep12 x)))))
(assert (forall ((x Int)) (! (=> (in_range15 x) (= (to_rep12 (of_rep12 x)) x)) :pattern ((to_rep12 (of_rep12 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int filestatust))))))
(declare-fun slide4 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first Int)) (! (= (slide4 a first first) a) :pattern ((slide4 a first first))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(declare-fun concat5 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat5 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat5 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat5 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton5 (filestatust Int) (Array Int filestatust))
(assert (forall ((v filestatust)) (forall ((i Int)) (! (= (select (singleton5 v i) i) v) :pattern ((select (singleton5 v i) i))))))
(define-fun bool_eq10 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (to_rep12 (select a temp___idx_156)) (to_rep12 (select b (+ (- b__first a__first) temp___idx_156))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq10 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (to_rep12 (select a temp___idx_156)) (to_rep12 (select b (+ (- b__first a__first) temp___idx_156)))))))))))
(declare-fun compare3 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) Int)
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare3 a a_first a_last b b_first b_last) 0) (= (bool_eq10 a a_first a_last b b_first b_last) true)) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare3 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq10 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep12 (select a (+ i 1))) (to_rep12 (select b (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare3 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq10 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep12 (select b (+ i 1))) (to_rep12 (select a (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-sort algorithmt 0)
(define-fun in_range16 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq24 (algorithmt algorithmt) Bool)
(declare-const dummy24 algorithmt)
(declare-datatypes () ((algorithmt__ref (mk_algorithmt__ref (algorithmt__content algorithmt)))))
(define-fun algorithmt__ref___projection ((a algorithmt__ref)) algorithmt (algorithmt__content a))
(declare-fun to_rep13 (algorithmt) Int)
(declare-fun of_rep13 (Int) algorithmt)
(assert (forall ((x algorithmt)) (! (= (of_rep13 (to_rep13 x)) x) :pattern ((to_rep13 x)))))
(assert (forall ((x algorithmt)) (! (in_range16 (to_rep13 x)) :pattern ((to_rep13 x)))))
(assert (forall ((x Int)) (! (=> (in_range16 x) (= (to_rep13 (of_rep13 x)) x)) :pattern ((to_rep13 (of_rep13 x))))))
(declare-datatypes () ((us_split_fields10 (mk___split_fields5 (rec__cert__contentst__id us_rep1) (rec__cert__contentst__notbefore us_rep2) (rec__cert__contentst__notafter us_rep2) (rec__cert__contentst__mechanism algorithmt)))))
(define-fun us_split_fields_ID__3__projection ((a us_split_fields10)) us_rep1 (rec__cert__contentst__id a))
(define-fun us_split_fields_NotBefore__projection ((a us_split_fields10)) us_rep2 (rec__cert__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__projection ((a us_split_fields10)) us_rep2 (rec__cert__contentst__notafter a))
(define-fun us_split_fields_Mechanism__projection ((a us_split_fields10)) algorithmt (rec__cert__contentst__mechanism a))
(declare-datatypes () ((us_split_fields__ref5 (mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___13__projection ((a us_split_fields__ref5)) us_split_fields10 (us_split_fields__content5 a))
(declare-datatypes () ((us_rep6 (mk___rep5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___14__projection ((a us_rep6)) us_split_fields10 (us_split_fields11 a))
(define-fun bool_eq11 ((a us_rep6) (b us_rep6)) Bool (ite (and (and (and (= (bool_eq2 (rec__cert__contentst__id (us_split_fields11 a)) (rec__cert__contentst__id (us_split_fields11 b))) true) (= (bool_eq3 (rec__cert__contentst__notbefore (us_split_fields11 a)) (rec__cert__contentst__notbefore (us_split_fields11 b))) true)) (= (bool_eq3 (rec__cert__contentst__notafter (us_split_fields11 a)) (rec__cert__contentst__notafter (us_split_fields11 b))) true)) (= (to_rep13 (rec__cert__contentst__mechanism (us_split_fields11 a))) (to_rep13 (rec__cert__contentst__mechanism (us_split_fields11 b))))) true false))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep6) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep6) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep6)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep6)) (<= 0 (object__alignment9 a))))
(declare-const cert__contentst__id__first__bit Int)
(declare-const cert__contentst__id__last__bit Int)
(declare-const cert__contentst__id__position Int)
(assert (<= 0 cert__contentst__id__first__bit))
(assert (< cert__contentst__id__first__bit cert__contentst__id__last__bit))
(assert (<= 0 cert__contentst__id__position))
(declare-const cert__contentst__notbefore__first__bit Int)
(declare-const cert__contentst__notbefore__last__bit Int)
(declare-const cert__contentst__notbefore__position Int)
(assert (<= 0 cert__contentst__notbefore__first__bit))
(assert (< cert__contentst__notbefore__first__bit cert__contentst__notbefore__last__bit))
(assert (<= 0 cert__contentst__notbefore__position))
(declare-const cert__contentst__notafter__first__bit Int)
(declare-const cert__contentst__notafter__last__bit Int)
(declare-const cert__contentst__notafter__position Int)
(assert (<= 0 cert__contentst__notafter__first__bit))
(assert (< cert__contentst__notafter__first__bit cert__contentst__notafter__last__bit))
(assert (<= 0 cert__contentst__notafter__position))
(declare-const cert__contentst__mechanism__first__bit Int)
(declare-const cert__contentst__mechanism__last__bit Int)
(declare-const cert__contentst__mechanism__position Int)
(assert (<= 0 cert__contentst__mechanism__first__bit))
(assert (< cert__contentst__mechanism__first__bit cert__contentst__mechanism__last__bit))
(assert (<= 0 cert__contentst__mechanism__position))
(declare-fun user_eq25 (us_rep6 us_rep6) Bool)
(declare-const dummy25 us_rep6)
(declare-datatypes () ((contentst__ref (mk_contentst__ref (contentst__content us_rep6)))))
(define-fun contentst__ref___projection ((a contentst__ref)) us_rep6 (contentst__content a))
(declare-fun theid (us_rep6) us_rep1)
(declare-fun theid__function_guard (us_rep1 us_rep6) Bool)
(assert true)
(declare-fun iscurrent (us_rep6 us_split_fields4 us_private) Bool)
(declare-fun iscurrent__function_guard (Bool us_rep6 us_split_fields4 us_private) Bool)
(assert true)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-sort keyidt 0)
(define-fun in_range17 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)
(declare-fun user_eq26 (keyidt keyidt) Bool)
(declare-const dummy26 keyidt)
(declare-datatypes () ((keyidt__ref (mk_keyidt__ref (keyidt__content keyidt)))))
(define-fun keyidt__ref___projection ((a keyidt__ref)) keyidt (keyidt__content a))
(declare-fun to_rep14 (keyidt) Int)
(declare-fun of_rep14 (Int) keyidt)
(assert (forall ((x keyidt)) (! (= (of_rep14 (to_rep14 x)) x) :pattern ((to_rep14 x)))))
(assert (forall ((x keyidt)) (! (in_range17 (to_rep14 x)) :pattern ((to_rep14 x)))))
(assert (forall ((x Int)) (! (=> (in_range17 x) (= (to_rep14 (of_rep14 x)) x)) :pattern ((to_rep14 (of_rep14 x))))))
(declare-sort keylengtht 0)
(define-fun in_range18 ((x Int)) Bool (and (<= 0 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)
(declare-fun user_eq27 (keylengtht keylengtht) Bool)
(declare-const dummy27 keylengtht)
(declare-datatypes () ((keylengtht__ref (mk_keylengtht__ref (keylengtht__content keylengtht)))))
(define-fun keylengtht__ref___projection ((a keylengtht__ref)) keylengtht (keylengtht__content a))
(declare-fun to_rep15 (keylengtht) Int)
(declare-fun of_rep15 (Int) keylengtht)
(assert (forall ((x keylengtht)) (! (= (of_rep15 (to_rep15 x)) x) :pattern ((to_rep15 x)))))
(assert (forall ((x keylengtht)) (! (in_range18 (to_rep15 x)) :pattern ((to_rep15 x)))))
(assert (forall ((x Int)) (! (=> (in_range18 x) (= (to_rep15 (of_rep15 x)) x)) :pattern ((to_rep15 (of_rep15 x))))))
(declare-datatypes () ((us_split_fields12 (mk___split_fields6 (rec__cryptotypes__keypartt__algorithmid algorithmt) (rec__cryptotypes__keypartt__keyid keyidt) (rec__cryptotypes__keypartt__keylength keylengtht)))))
(define-fun us_split_fields_AlgorithmID__projection ((a us_split_fields12)) algorithmt (rec__cryptotypes__keypartt__algorithmid a))
(define-fun us_split_fields_KeyID__projection ((a us_split_fields12)) keyidt (rec__cryptotypes__keypartt__keyid a))
(define-fun us_split_fields_KeyLength__projection ((a us_split_fields12)) keylengtht (rec__cryptotypes__keypartt__keylength a))
(declare-datatypes () ((us_split_fields__ref6 (mk___split_fields__ref6 (us_split_fields__content6 us_split_fields12)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref6)) us_split_fields12 (us_split_fields__content6 a))
(declare-datatypes () ((us_rep7 (mk___rep6 (us_split_fields13 us_split_fields12)))))
(define-fun us_rep___2__projection ((a us_rep7)) us_split_fields12 (us_split_fields13 a))
(define-fun bool_eq12 ((a us_rep7) (b us_rep7)) Bool (ite (and (and (= (to_rep13 (rec__cryptotypes__keypartt__algorithmid (us_split_fields13 a))) (to_rep13 (rec__cryptotypes__keypartt__algorithmid (us_split_fields13 b)))) (= (to_rep14 (rec__cryptotypes__keypartt__keyid (us_split_fields13 a))) (to_rep14 (rec__cryptotypes__keypartt__keyid (us_split_fields13 b))))) (= (to_rep15 (rec__cryptotypes__keypartt__keylength (us_split_fields13 a))) (to_rep15 (rec__cryptotypes__keypartt__keylength (us_split_fields13 b))))) true false))
(declare-const value__size10 Int)
(declare-fun object__size10 (us_rep7) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 (us_rep7) Int)
(assert (<= 0 value__size10))
(assert (forall ((a us_rep7)) (<= 0 (object__size10 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a us_rep7)) (<= 0 (object__alignment10 a))))
(declare-const cryptotypes__keypartt__algorithmid__first__bit Int)
(declare-const cryptotypes__keypartt__algorithmid__last__bit Int)
(declare-const cryptotypes__keypartt__algorithmid__position Int)
(assert (<= 0 cryptotypes__keypartt__algorithmid__first__bit))
(assert (< cryptotypes__keypartt__algorithmid__first__bit cryptotypes__keypartt__algorithmid__last__bit))
(assert (<= 0 cryptotypes__keypartt__algorithmid__position))
(declare-const cryptotypes__keypartt__keyid__first__bit Int)
(declare-const cryptotypes__keypartt__keyid__last__bit Int)
(declare-const cryptotypes__keypartt__keyid__position Int)
(assert (<= 0 cryptotypes__keypartt__keyid__first__bit))
(assert (< cryptotypes__keypartt__keyid__first__bit cryptotypes__keypartt__keyid__last__bit))
(assert (<= 0 cryptotypes__keypartt__keyid__position))
(declare-const cryptotypes__keypartt__keylength__first__bit Int)
(declare-const cryptotypes__keypartt__keylength__last__bit Int)
(declare-const cryptotypes__keypartt__keylength__position Int)
(assert (<= 0 cryptotypes__keypartt__keylength__first__bit))
(assert (< cryptotypes__keypartt__keylength__first__bit cryptotypes__keypartt__keylength__last__bit))
(assert (<= 0 cryptotypes__keypartt__keylength__position))
(declare-fun user_eq28 (us_rep7 us_rep7) Bool)
(declare-const dummy28 us_rep7)
(declare-datatypes () ((keypartt__ref (mk_keypartt__ref (keypartt__content us_rep7)))))
(define-fun keypartt__ref___projection ((a keypartt__ref)) us_rep7 (keypartt__content a))
(declare-datatypes () ((us_split_fields14 (mk___split_fields7 (rec__cert__id__contentst__id us_rep1) (rec__cert__id__contentst__notbefore us_rep2) (rec__cert__id__contentst__notafter us_rep2) (rec__cert__id__contentst__mechanism algorithmt) (rec__cert__id__contentst__subject us_rep) (rec__cert__id__contentst__subjectpublickey us_rep7)))))
(define-fun us_split_fields_ID__4__projection ((a us_split_fields14)) us_rep1 (rec__cert__id__contentst__id a))
(define-fun us_split_fields_NotBefore__2__projection ((a us_split_fields14)) us_rep2 (rec__cert__id__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__2__projection ((a us_split_fields14)) us_rep2 (rec__cert__id__contentst__notafter a))
(define-fun us_split_fields_Mechanism__2__projection ((a us_split_fields14)) algorithmt (rec__cert__id__contentst__mechanism a))
(define-fun us_split_fields_Subject__projection ((a us_split_fields14)) us_rep (rec__cert__id__contentst__subject a))
(define-fun us_split_fields_SubjectPublicKey__projection ((a us_split_fields14)) us_rep7 (rec__cert__id__contentst__subjectpublickey a))
(declare-datatypes () ((us_split_fields__ref7 (mk___split_fields__ref7 (us_split_fields__content7 us_split_fields14)))))
(define-fun us_split_fields__ref___14__projection ((a us_split_fields__ref7)) us_split_fields14 (us_split_fields__content7 a))
(declare-datatypes () ((us_rep8 (mk___rep7 (us_split_fields15 us_split_fields14)))))
(define-fun us_rep___15__projection ((a us_rep8)) us_split_fields14 (us_split_fields15 a))
(define-fun bool_eq13 ((a us_rep8) (b us_rep8)) Bool (ite (and (and (and (and (and (= (bool_eq2 (rec__cert__id__contentst__id (us_split_fields15 a)) (rec__cert__id__contentst__id (us_split_fields15 b))) true) (= (bool_eq3 (rec__cert__id__contentst__notbefore (us_split_fields15 a)) (rec__cert__id__contentst__notbefore (us_split_fields15 b))) true)) (= (bool_eq3 (rec__cert__id__contentst__notafter (us_split_fields15 a)) (rec__cert__id__contentst__notafter (us_split_fields15 b))) true)) (= (to_rep13 (rec__cert__id__contentst__mechanism (us_split_fields15 a))) (to_rep13 (rec__cert__id__contentst__mechanism (us_split_fields15 b))))) (= (bool_eq1 (rec__cert__id__contentst__subject (us_split_fields15 a)) (rec__cert__id__contentst__subject (us_split_fields15 b))) true)) (= (bool_eq12 (rec__cert__id__contentst__subjectpublickey (us_split_fields15 a)) (rec__cert__id__contentst__subjectpublickey (us_split_fields15 b))) true)) true false))
(declare-const value__size11 Int)
(declare-fun object__size11 (us_rep8) Int)
(declare-const value__alignment11 Int)
(declare-fun object__alignment11 (us_rep8) Int)
(assert (<= 0 value__size11))
(assert (forall ((a us_rep8)) (<= 0 (object__size11 a))))
(assert (<= 0 value__alignment11))
(assert (forall ((a us_rep8)) (<= 0 (object__alignment11 a))))
(declare-const cert__id__contentst__id__first__bit Int)
(declare-const cert__id__contentst__id__last__bit Int)
(declare-const cert__id__contentst__id__position Int)
(assert (<= 0 cert__id__contentst__id__first__bit))
(assert (< cert__id__contentst__id__first__bit cert__id__contentst__id__last__bit))
(assert (<= 0 cert__id__contentst__id__position))
(declare-const cert__id__contentst__notbefore__first__bit Int)
(declare-const cert__id__contentst__notbefore__last__bit Int)
(declare-const cert__id__contentst__notbefore__position Int)
(assert (<= 0 cert__id__contentst__notbefore__first__bit))
(assert (< cert__id__contentst__notbefore__first__bit cert__id__contentst__notbefore__last__bit))
(assert (<= 0 cert__id__contentst__notbefore__position))
(declare-const cert__id__contentst__notafter__first__bit Int)
(declare-const cert__id__contentst__notafter__last__bit Int)
(declare-const cert__id__contentst__notafter__position Int)
(assert (<= 0 cert__id__contentst__notafter__first__bit))
(assert (< cert__id__contentst__notafter__first__bit cert__id__contentst__notafter__last__bit))
(assert (<= 0 cert__id__contentst__notafter__position))
(declare-const cert__id__contentst__mechanism__first__bit Int)
(declare-const cert__id__contentst__mechanism__last__bit Int)
(declare-const cert__id__contentst__mechanism__position Int)
(assert (<= 0 cert__id__contentst__mechanism__first__bit))
(assert (< cert__id__contentst__mechanism__first__bit cert__id__contentst__mechanism__last__bit))
(assert (<= 0 cert__id__contentst__mechanism__position))
(declare-const cert__id__contentst__subject__first__bit Int)
(declare-const cert__id__contentst__subject__last__bit Int)
(declare-const cert__id__contentst__subject__position Int)
(assert (<= 0 cert__id__contentst__subject__first__bit))
(assert (< cert__id__contentst__subject__first__bit cert__id__contentst__subject__last__bit))
(assert (<= 0 cert__id__contentst__subject__position))
(declare-const cert__id__contentst__subjectpublickey__first__bit Int)
(declare-const cert__id__contentst__subjectpublickey__last__bit Int)
(declare-const cert__id__contentst__subjectpublickey__position Int)
(assert (<= 0 cert__id__contentst__subjectpublickey__first__bit))
(assert (< cert__id__contentst__subjectpublickey__first__bit cert__id__contentst__subjectpublickey__last__bit))
(assert (<= 0 cert__id__contentst__subjectpublickey__position))
(declare-fun user_eq29 (us_rep8 us_rep8) Bool)
(declare-const dummy29 us_rep8)
(declare-datatypes () ((contentst__ref1 (mk_contentst__ref1 (contentst__content1 us_rep8)))))
(define-fun contentst__ref___2__projection ((a contentst__ref1)) us_rep8 (contentst__content1 a))
(declare-fun cert_id_to_cert (us_rep8) us_rep6)
(declare-fun cert_id_to_cert__function_guard (us_rep6 us_rep8) Bool)
(assert true)
(declare-datatypes () ((us_split_fields16 (mk___split_fields8 (rec__cert__attr__contentst__id us_rep1) (rec__cert__attr__contentst__notbefore us_rep2) (rec__cert__attr__contentst__notafter us_rep2) (rec__cert__attr__contentst__mechanism algorithmt) (rec__cert__attr__contentst__basecertid us_rep1)))))
(define-fun us_split_fields_ID__5__projection ((a us_split_fields16)) us_rep1 (rec__cert__attr__contentst__id a))
(define-fun us_split_fields_NotBefore__3__projection ((a us_split_fields16)) us_rep2 (rec__cert__attr__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__3__projection ((a us_split_fields16)) us_rep2 (rec__cert__attr__contentst__notafter a))
(define-fun us_split_fields_Mechanism__3__projection ((a us_split_fields16)) algorithmt (rec__cert__attr__contentst__mechanism a))
(define-fun us_split_fields_BaseCertID__projection ((a us_split_fields16)) us_rep1 (rec__cert__attr__contentst__basecertid a))
(declare-datatypes () ((us_split_fields__ref8 (mk___split_fields__ref8 (us_split_fields__content8 us_split_fields16)))))
(define-fun us_split_fields__ref___15__projection ((a us_split_fields__ref8)) us_split_fields16 (us_split_fields__content8 a))
(declare-datatypes () ((us_rep9 (mk___rep8 (us_split_fields17 us_split_fields16)))))
(define-fun us_rep___16__projection ((a us_rep9)) us_split_fields16 (us_split_fields17 a))
(define-fun bool_eq14 ((a us_rep9) (b us_rep9)) Bool (ite (and (and (and (and (= (bool_eq2 (rec__cert__attr__contentst__id (us_split_fields17 a)) (rec__cert__attr__contentst__id (us_split_fields17 b))) true) (= (bool_eq3 (rec__cert__attr__contentst__notbefore (us_split_fields17 a)) (rec__cert__attr__contentst__notbefore (us_split_fields17 b))) true)) (= (bool_eq3 (rec__cert__attr__contentst__notafter (us_split_fields17 a)) (rec__cert__attr__contentst__notafter (us_split_fields17 b))) true)) (= (to_rep13 (rec__cert__attr__contentst__mechanism (us_split_fields17 a))) (to_rep13 (rec__cert__attr__contentst__mechanism (us_split_fields17 b))))) (= (bool_eq2 (rec__cert__attr__contentst__basecertid (us_split_fields17 a)) (rec__cert__attr__contentst__basecertid (us_split_fields17 b))) true)) true false))
(declare-const value__size12 Int)
(declare-fun object__size12 (us_rep9) Int)
(declare-const value__alignment12 Int)
(declare-fun object__alignment12 (us_rep9) Int)
(assert (<= 0 value__size12))
(assert (forall ((a us_rep9)) (<= 0 (object__size12 a))))
(assert (<= 0 value__alignment12))
(assert (forall ((a us_rep9)) (<= 0 (object__alignment12 a))))
(declare-const cert__attr__contentst__id__first__bit Int)
(declare-const cert__attr__contentst__id__last__bit Int)
(declare-const cert__attr__contentst__id__position Int)
(assert (<= 0 cert__attr__contentst__id__first__bit))
(assert (< cert__attr__contentst__id__first__bit cert__attr__contentst__id__last__bit))
(assert (<= 0 cert__attr__contentst__id__position))
(declare-const cert__attr__contentst__notbefore__first__bit Int)
(declare-const cert__attr__contentst__notbefore__last__bit Int)
(declare-const cert__attr__contentst__notbefore__position Int)
(assert (<= 0 cert__attr__contentst__notbefore__first__bit))
(assert (< cert__attr__contentst__notbefore__first__bit cert__attr__contentst__notbefore__last__bit))
(assert (<= 0 cert__attr__contentst__notbefore__position))
(declare-const cert__attr__contentst__notafter__first__bit Int)
(declare-const cert__attr__contentst__notafter__last__bit Int)
(declare-const cert__attr__contentst__notafter__position Int)
(assert (<= 0 cert__attr__contentst__notafter__first__bit))
(assert (< cert__attr__contentst__notafter__first__bit cert__attr__contentst__notafter__last__bit))
(assert (<= 0 cert__attr__contentst__notafter__position))
(declare-const cert__attr__contentst__mechanism__first__bit Int)
(declare-const cert__attr__contentst__mechanism__last__bit Int)
(declare-const cert__attr__contentst__mechanism__position Int)
(assert (<= 0 cert__attr__contentst__mechanism__first__bit))
(assert (< cert__attr__contentst__mechanism__first__bit cert__attr__contentst__mechanism__last__bit))
(assert (<= 0 cert__attr__contentst__mechanism__position))
(declare-const cert__attr__contentst__basecertid__first__bit Int)
(declare-const cert__attr__contentst__basecertid__last__bit Int)
(declare-const cert__attr__contentst__basecertid__position Int)
(assert (<= 0 cert__attr__contentst__basecertid__first__bit))
(assert (< cert__attr__contentst__basecertid__first__bit cert__attr__contentst__basecertid__last__bit))
(assert (<= 0 cert__attr__contentst__basecertid__position))
(declare-fun user_eq30 (us_rep9 us_rep9) Bool)
(declare-const dummy30 us_rep9)
(declare-datatypes () ((contentst__ref2 (mk_contentst__ref2 (contentst__content2 us_rep9)))))
(define-fun contentst__ref___3__projection ((a contentst__ref2)) us_rep9 (contentst__content2 a))
(declare-fun thebasecert (us_rep9) us_rep1)
(declare-fun thebasecert__function_guard (us_rep1 us_rep9) Bool)
(assert true)
(declare-sort fart 0)
(define-fun in_range19 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE19 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check19 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE19 (us_image) Int)
(declare-fun user_eq31 (fart fart) Bool)
(declare-const dummy31 fart)
(declare-datatypes () ((fart__ref (mk_fart__ref (fart__content fart)))))
(define-fun fart__ref___projection ((a fart__ref)) fart (fart__content a))
(declare-fun to_rep16 (fart) Int)
(declare-fun of_rep16 (Int) fart)
(assert (forall ((x fart)) (! (= (of_rep16 (to_rep16 x)) x) :pattern ((to_rep16 x)))))
(assert (forall ((x fart)) (! (in_range19 (to_rep16 x)) :pattern ((to_rep16 x)))))
(assert (forall ((x Int)) (! (=> (in_range19 x) (= (to_rep16 (of_rep16 x)) x)) :pattern ((to_rep16 (of_rep16 x))))))
(declare-sort bytet 0)
(define-fun in_range20 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE20 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check20 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE20 (us_image) Int)
(declare-fun user_eq32 (bytet bytet) Bool)
(declare-const dummy32 bytet)
(declare-datatypes () ((bytet__ref (mk_bytet__ref (bytet__content bytet)))))
(define-fun bytet__ref___projection ((a bytet__ref)) bytet (bytet__content a))
(declare-fun to_rep17 (bytet) Int)
(declare-fun of_rep17 (Int) bytet)
(assert (forall ((x bytet)) (! (= (of_rep17 (to_rep17 x)) x) :pattern ((to_rep17 x)))))
(assert (forall ((x bytet)) (! (in_range20 (to_rep17 x)) :pattern ((to_rep17 x)))))
(assert (forall ((x Int)) (! (=> (in_range20 x) (= (to_rep17 (of_rep17 x)) x)) :pattern ((to_rep17 (of_rep17 x))))))
(declare-datatypes () ((map__ref5 (mk_map__ref5 (map__content5 (Array Int bytet))))))
(declare-fun slide5 ((Array Int bytet) Int Int) (Array Int bytet))
(assert (forall ((a (Array Int bytet))) (forall ((first Int)) (! (= (slide5 a first first) a) :pattern ((slide5 a first first))))))
(assert (forall ((a (Array Int bytet))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide5 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide5 a old_first new_first) i))))))))
(declare-fun concat6 ((Array Int bytet) Int Int (Array Int bytet) Int Int) (Array Int bytet))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat6 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat6 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat6 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton6 (bytet Int) (Array Int bytet))
(assert (forall ((v bytet)) (forall ((i Int)) (! (= (select (singleton6 v i) i) v) :pattern ((select (singleton6 v i) i))))))
(define-fun bool_eq15 ((a (Array Int bytet)) (a__first Int) (a__last Int) (b (Array Int bytet)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_145 Int)) (=> (and (<= a__first temp___idx_145) (<= temp___idx_145 a__last)) (= (to_rep17 (select a temp___idx_145)) (to_rep17 (select b (+ (- b__first a__first) temp___idx_145))))))) true false))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq15 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_145 Int)) (=> (and (<= a__first temp___idx_145) (<= temp___idx_145 a__last)) (= (to_rep17 (select a temp___idx_145)) (to_rep17 (select b (+ (- b__first a__first) temp___idx_145)))))))))))
(declare-fun compare4 ((Array Int bytet) Int Int (Array Int bytet) Int Int) Int)
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare4 a a_first a_last b b_first b_last) 0) (= (bool_eq15 a a_first a_last b b_first b_last) true)) :pattern ((compare4 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare4 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq15 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep17 (select a (+ i 1))) (to_rep17 (select b (+ j 1))))))))))) :pattern ((compare4 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare4 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq15 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep17 (select b (+ i 1))) (to_rep17 (select a (+ j 1))))))))))) :pattern ((compare4 a a_first a_last b b_first b_last))))))
(declare-const dummy33 (Array Int bytet))
(declare-const value__size13 Int)
(declare-fun object__size13 ((Array Int bytet)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int bytet)) Int)
(declare-const value__alignment13 Int)
(declare-fun object__alignment13 ((Array Int bytet)) Int)
(assert (<= 0 value__size13))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__size13 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment13))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__alignment13 a))))
(declare-fun user_eq33 ((Array Int bytet) (Array Int bytet)) Bool)
(declare-sort templatelengtht 0)
(define-fun in_range21 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE21 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check21 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE21 (us_image) Int)
(declare-fun user_eq34 (templatelengtht templatelengtht) Bool)
(declare-const dummy34 templatelengtht)
(declare-datatypes () ((templatelengtht__ref (mk_templatelengtht__ref (templatelengtht__content templatelengtht)))))
(define-fun templatelengtht__ref___projection ((a templatelengtht__ref)) templatelengtht (templatelengtht__content a))
(declare-fun to_rep18 (templatelengtht) Int)
(declare-fun of_rep18 (Int) templatelengtht)
(assert (forall ((x templatelengtht)) (! (= (of_rep18 (to_rep18 x)) x) :pattern ((to_rep18 x)))))
(assert (forall ((x templatelengtht)) (! (in_range21 (to_rep18 x)) :pattern ((to_rep18 x)))))
(assert (forall ((x Int)) (! (=> (in_range21 x) (= (to_rep18 (of_rep18 x)) x)) :pattern ((to_rep18 (of_rep18 x))))))
(declare-const dummy35 (Array Int character))
(declare-const value__size14 Int)
(declare-fun object__size14 ((Array Int character)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int character)) Int)
(declare-const value__alignment14 Int)
(declare-fun object__alignment14 ((Array Int character)) Int)
(assert (<= 0 value__size14))
(assert (forall ((a (Array Int character))) (<= 0 (object__size14 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment14))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment14 a))))
(declare-fun user_eq35 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields18 (mk___split_fields9 (rec__iandatypes__templatet__length templatelengtht) (rec__iandatypes__templatet__requiredmaxfar fart) (rec__iandatypes__templatet__id (Array Int character)) (rec__iandatypes__templatet__pad (Array Int bytet))))))
(define-fun us_split_fields_Length__projection ((a us_split_fields18)) templatelengtht (rec__iandatypes__templatet__length a))
(define-fun us_split_fields_RequiredMaxFAR__projection ((a us_split_fields18)) fart (rec__iandatypes__templatet__requiredmaxfar a))
(define-fun us_split_fields_ID__2__projection ((a us_split_fields18)) (Array Int character) (rec__iandatypes__templatet__id a))
(define-fun us_split_fields_Pad__projection ((a us_split_fields18)) (Array Int bytet) (rec__iandatypes__templatet__pad a))
(declare-datatypes () ((us_split_fields__ref9 (mk___split_fields__ref9 (us_split_fields__content9 us_split_fields18)))))
(define-fun us_split_fields__ref___9__projection ((a us_split_fields__ref9)) us_split_fields18 (us_split_fields__content9 a))
(declare-datatypes () ((us_rep10 (mk___rep9 (us_split_fields19 us_split_fields18)))))
(define-fun us_rep___10__projection ((a us_rep10)) us_split_fields18 (us_split_fields19 a))
(define-fun bool_eq16 ((a us_rep10) (b us_rep10)) Bool (ite (and (and (and (= (to_rep18 (rec__iandatypes__templatet__length (us_split_fields19 a))) (to_rep18 (rec__iandatypes__templatet__length (us_split_fields19 b)))) (= (to_rep16 (rec__iandatypes__templatet__requiredmaxfar (us_split_fields19 a))) (to_rep16 (rec__iandatypes__templatet__requiredmaxfar (us_split_fields19 b))))) (= (bool_eq (rec__iandatypes__templatet__id (us_split_fields19 a)) 1 40 (rec__iandatypes__templatet__id (us_split_fields19 b)) 1 40) true)) (= (bool_eq15 (rec__iandatypes__templatet__pad (us_split_fields19 a)) 1 452 (rec__iandatypes__templatet__pad (us_split_fields19 b)) 1 452) true)) true false))
(declare-const value__size15 Int)
(declare-fun object__size15 (us_rep10) Int)
(declare-const value__alignment15 Int)
(declare-fun object__alignment15 (us_rep10) Int)
(assert (<= 0 value__size15))
(assert (forall ((a us_rep10)) (<= 0 (object__size15 a))))
(assert (<= 0 value__alignment15))
(assert (forall ((a us_rep10)) (<= 0 (object__alignment15 a))))
(declare-const iandatypes__templatet__length__first__bit Int)
(declare-const iandatypes__templatet__length__last__bit Int)
(declare-const iandatypes__templatet__length__position Int)
(assert (<= 0 iandatypes__templatet__length__first__bit))
(assert (< iandatypes__templatet__length__first__bit iandatypes__templatet__length__last__bit))
(assert (<= 0 iandatypes__templatet__length__position))
(declare-const iandatypes__templatet__requiredmaxfar__first__bit Int)
(declare-const iandatypes__templatet__requiredmaxfar__last__bit Int)
(declare-const iandatypes__templatet__requiredmaxfar__position Int)
(assert (<= 0 iandatypes__templatet__requiredmaxfar__first__bit))
(assert (< iandatypes__templatet__requiredmaxfar__first__bit iandatypes__templatet__requiredmaxfar__last__bit))
(assert (<= 0 iandatypes__templatet__requiredmaxfar__position))
(declare-const iandatypes__templatet__id__first__bit Int)
(declare-const iandatypes__templatet__id__last__bit Int)
(declare-const iandatypes__templatet__id__position Int)
(assert (<= 0 iandatypes__templatet__id__first__bit))
(assert (< iandatypes__templatet__id__first__bit iandatypes__templatet__id__last__bit))
(assert (<= 0 iandatypes__templatet__id__position))
(declare-const iandatypes__templatet__pad__first__bit Int)
(declare-const iandatypes__templatet__pad__last__bit Int)
(declare-const iandatypes__templatet__pad__position Int)
(assert (<= 0 iandatypes__templatet__pad__first__bit))
(assert (< iandatypes__templatet__pad__first__bit iandatypes__templatet__pad__last__bit))
(assert (<= 0 iandatypes__templatet__pad__position))
(declare-fun user_eq36 (us_rep10 us_rep10) Bool)
(declare-const dummy36 us_rep10)
(declare-datatypes () ((templatet__ref (mk_templatet__ref (templatet__content us_rep10)))))
(define-fun templatet__ref___projection ((a templatet__ref)) us_rep10 (templatet__content a))
(declare-datatypes () ((us_split_fields20 (mk___split_fields10 (rec__cert__attr__ianda__contentst__id us_rep1) (rec__cert__attr__ianda__contentst__notbefore us_rep2) (rec__cert__attr__ianda__contentst__notafter us_rep2) (rec__cert__attr__ianda__contentst__mechanism algorithmt) (rec__cert__attr__ianda__contentst__basecertid us_rep1) (rec__cert__attr__ianda__contentst__template us_rep10)))))
(define-fun us_split_fields_ID__8__projection ((a us_split_fields20)) us_rep1 (rec__cert__attr__ianda__contentst__id a))
(define-fun us_split_fields_NotBefore__6__projection ((a us_split_fields20)) us_rep2 (rec__cert__attr__ianda__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__6__projection ((a us_split_fields20)) us_rep2 (rec__cert__attr__ianda__contentst__notafter a))
(define-fun us_split_fields_Mechanism__6__projection ((a us_split_fields20)) algorithmt (rec__cert__attr__ianda__contentst__mechanism a))
(define-fun us_split_fields_BaseCertID__4__projection ((a us_split_fields20)) us_rep1 (rec__cert__attr__ianda__contentst__basecertid a))
(define-fun us_split_fields_Template__projection ((a us_split_fields20)) us_rep10 (rec__cert__attr__ianda__contentst__template a))
(declare-datatypes () ((us_split_fields__ref10 (mk___split_fields__ref10 (us_split_fields__content10 us_split_fields20)))))
(define-fun us_split_fields__ref___18__projection ((a us_split_fields__ref10)) us_split_fields20 (us_split_fields__content10 a))
(declare-datatypes () ((us_rep11 (mk___rep10 (us_split_fields21 us_split_fields20)))))
(define-fun us_rep___19__projection ((a us_rep11)) us_split_fields20 (us_split_fields21 a))
(define-fun bool_eq17 ((a us_rep11) (b us_rep11)) Bool (ite (and (and (and (and (and (= (bool_eq2 (rec__cert__attr__ianda__contentst__id (us_split_fields21 a)) (rec__cert__attr__ianda__contentst__id (us_split_fields21 b))) true) (= (bool_eq3 (rec__cert__attr__ianda__contentst__notbefore (us_split_fields21 a)) (rec__cert__attr__ianda__contentst__notbefore (us_split_fields21 b))) true)) (= (bool_eq3 (rec__cert__attr__ianda__contentst__notafter (us_split_fields21 a)) (rec__cert__attr__ianda__contentst__notafter (us_split_fields21 b))) true)) (= (to_rep13 (rec__cert__attr__ianda__contentst__mechanism (us_split_fields21 a))) (to_rep13 (rec__cert__attr__ianda__contentst__mechanism (us_split_fields21 b))))) (= (bool_eq2 (rec__cert__attr__ianda__contentst__basecertid (us_split_fields21 a)) (rec__cert__attr__ianda__contentst__basecertid (us_split_fields21 b))) true)) (= (bool_eq16 (rec__cert__attr__ianda__contentst__template (us_split_fields21 a)) (rec__cert__attr__ianda__contentst__template (us_split_fields21 b))) true)) true false))
(declare-const value__size16 Int)
(declare-fun object__size16 (us_rep11) Int)
(declare-const value__alignment16 Int)
(declare-fun object__alignment16 (us_rep11) Int)
(assert (<= 0 value__size16))
(assert (forall ((a us_rep11)) (<= 0 (object__size16 a))))
(assert (<= 0 value__alignment16))
(assert (forall ((a us_rep11)) (<= 0 (object__alignment16 a))))
(declare-const cert__attr__ianda__contentst__id__first__bit Int)
(declare-const cert__attr__ianda__contentst__id__last__bit Int)
(declare-const cert__attr__ianda__contentst__id__position Int)
(assert (<= 0 cert__attr__ianda__contentst__id__first__bit))
(assert (< cert__attr__ianda__contentst__id__first__bit cert__attr__ianda__contentst__id__last__bit))
(assert (<= 0 cert__attr__ianda__contentst__id__position))
(declare-const cert__attr__ianda__contentst__notbefore__first__bit Int)
(declare-const cert__attr__ianda__contentst__notbefore__last__bit Int)
(declare-const cert__attr__ianda__contentst__notbefore__position Int)
(assert (<= 0 cert__attr__ianda__contentst__notbefore__first__bit))
(assert (< cert__attr__ianda__contentst__notbefore__first__bit cert__attr__ianda__contentst__notbefore__last__bit))
(assert (<= 0 cert__attr__ianda__contentst__notbefore__position))
(declare-const cert__attr__ianda__contentst__notafter__first__bit Int)
(declare-const cert__attr__ianda__contentst__notafter__last__bit Int)
(declare-const cert__attr__ianda__contentst__notafter__position Int)
(assert (<= 0 cert__attr__ianda__contentst__notafter__first__bit))
(assert (< cert__attr__ianda__contentst__notafter__first__bit cert__attr__ianda__contentst__notafter__last__bit))
(assert (<= 0 cert__attr__ianda__contentst__notafter__position))
(declare-const cert__attr__ianda__contentst__mechanism__first__bit Int)
(declare-const cert__attr__ianda__contentst__mechanism__last__bit Int)
(declare-const cert__attr__ianda__contentst__mechanism__position Int)
(assert (<= 0 cert__attr__ianda__contentst__mechanism__first__bit))
(assert (< cert__attr__ianda__contentst__mechanism__first__bit cert__attr__ianda__contentst__mechanism__last__bit))
(assert (<= 0 cert__attr__ianda__contentst__mechanism__position))
(declare-const cert__attr__ianda__contentst__basecertid__first__bit Int)
(declare-const cert__attr__ianda__contentst__basecertid__last__bit Int)
(declare-const cert__attr__ianda__contentst__basecertid__position Int)
(assert (<= 0 cert__attr__ianda__contentst__basecertid__first__bit))
(assert (< cert__attr__ianda__contentst__basecertid__first__bit cert__attr__ianda__contentst__basecertid__last__bit))
(assert (<= 0 cert__attr__ianda__contentst__basecertid__position))
(declare-const cert__attr__ianda__contentst__template__first__bit Int)
(declare-const cert__attr__ianda__contentst__template__last__bit Int)
(declare-const cert__attr__ianda__contentst__template__position Int)
(assert (<= 0 cert__attr__ianda__contentst__template__first__bit))
(assert (< cert__attr__ianda__contentst__template__first__bit cert__attr__ianda__contentst__template__last__bit))
(assert (<= 0 cert__attr__ianda__contentst__template__position))
(declare-fun user_eq37 (us_rep11 us_rep11) Bool)
(declare-const dummy37 us_rep11)
(declare-datatypes () ((contentst__ref3 (mk_contentst__ref3 (contentst__content3 us_rep11)))))
(define-fun contentst__ref___6__projection ((a contentst__ref3)) us_rep11 (contentst__content3 a))
(declare-fun cert_attr_ianda_to_cert (us_rep11) us_rep6)
(declare-fun cert_attr_ianda_to_cert__function_guard (us_rep6 us_rep11) Bool)
(assert true)
(declare-fun cert_attr_ianda_to_cert_attr (us_rep11) us_rep9)
(declare-fun cert_attr_ianda_to_cert_attr__function_guard (us_rep9 us_rep11) Bool)
(assert true)
(declare-sort certificatestatus 0)
(define-fun in_range22 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE22 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check22 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE22 (us_image) Int)
(declare-fun user_eq38 (certificatestatus certificatestatus) Bool)
(declare-const dummy38 certificatestatus)
(declare-datatypes () ((certificatestatus__ref (mk_certificatestatus__ref (certificatestatus__content certificatestatus)))))
(define-fun certificatestatus__ref___projection ((a certificatestatus__ref)) certificatestatus (certificatestatus__content a))
(declare-fun to_rep19 (certificatestatus) Int)
(declare-fun of_rep19 (Int) certificatestatus)
(assert (forall ((x certificatestatus)) (! (= (of_rep19 (to_rep19 x)) x) :pattern ((to_rep19 x)))))
(assert (forall ((x certificatestatus)) (! (in_range22 (to_rep19 x)) :pattern ((to_rep19 x)))))
(assert (forall ((x Int)) (! (=> (in_range22 x) (= (to_rep19 (of_rep19 x)) x)) :pattern ((to_rep19 (of_rep19 x))))))
(declare-datatypes () ((us_split_fields22 (mk___split_fields11 (rec__usertoken__valididcertt__valid Bool) (rec__usertoken__valididcertt__idstatus certificatestatus) (rec__usertoken__valididcertt__contents us_rep8)))))
(define-fun us_split_fields_Valid__projection ((a us_split_fields22)) Bool (rec__usertoken__valididcertt__valid a))
(define-fun us_split_fields_IDStatus__projection ((a us_split_fields22)) certificatestatus (rec__usertoken__valididcertt__idstatus a))
(define-fun us_split_fields_Contents__projection ((a us_split_fields22)) us_rep8 (rec__usertoken__valididcertt__contents a))
(declare-datatypes () ((us_split_fields__ref11 (mk___split_fields__ref11 (us_split_fields__content11 us_split_fields22)))))
(define-fun us_split_fields__ref___27__projection ((a us_split_fields__ref11)) us_split_fields22 (us_split_fields__content11 a))
(declare-datatypes () ((us_rep12 (mk___rep11 (us_split_fields23 us_split_fields22)))))
(define-fun us_rep___28__projection ((a us_rep12)) us_split_fields22 (us_split_fields23 a))
(define-fun bool_eq18 ((a us_rep12) (b us_rep12)) Bool (ite (and (and (= (rec__usertoken__valididcertt__valid (us_split_fields23 a)) (rec__usertoken__valididcertt__valid (us_split_fields23 b))) (= (to_rep19 (rec__usertoken__valididcertt__idstatus (us_split_fields23 a))) (to_rep19 (rec__usertoken__valididcertt__idstatus (us_split_fields23 b))))) (= (bool_eq13 (rec__usertoken__valididcertt__contents (us_split_fields23 a)) (rec__usertoken__valididcertt__contents (us_split_fields23 b))) true)) true false))
(declare-const value__size17 Int)
(declare-fun object__size17 (us_rep12) Int)
(declare-const value__alignment17 Int)
(declare-fun object__alignment17 (us_rep12) Int)
(assert (<= 0 value__size17))
(assert (forall ((a us_rep12)) (<= 0 (object__size17 a))))
(assert (<= 0 value__alignment17))
(assert (forall ((a us_rep12)) (<= 0 (object__alignment17 a))))
(declare-const usertoken__valididcertt__valid__first__bit Int)
(declare-const usertoken__valididcertt__valid__last__bit Int)
(declare-const usertoken__valididcertt__valid__position Int)
(assert (<= 0 usertoken__valididcertt__valid__first__bit))
(assert (< usertoken__valididcertt__valid__first__bit usertoken__valididcertt__valid__last__bit))
(assert (<= 0 usertoken__valididcertt__valid__position))
(declare-const usertoken__valididcertt__idstatus__first__bit Int)
(declare-const usertoken__valididcertt__idstatus__last__bit Int)
(declare-const usertoken__valididcertt__idstatus__position Int)
(assert (<= 0 usertoken__valididcertt__idstatus__first__bit))
(assert (< usertoken__valididcertt__idstatus__first__bit usertoken__valididcertt__idstatus__last__bit))
(assert (<= 0 usertoken__valididcertt__idstatus__position))
(declare-const usertoken__valididcertt__contents__first__bit Int)
(declare-const usertoken__valididcertt__contents__last__bit Int)
(declare-const usertoken__valididcertt__contents__position Int)
(assert (<= 0 usertoken__valididcertt__contents__first__bit))
(assert (< usertoken__valididcertt__contents__first__bit usertoken__valididcertt__contents__last__bit))
(assert (<= 0 usertoken__valididcertt__contents__position))
(declare-fun user_eq39 (us_rep12 us_rep12) Bool)
(declare-const dummy39 us_rep12)
(declare-datatypes () ((valididcertt__ref (mk_valididcertt__ref (valididcertt__content us_rep12)))))
(define-fun valididcertt__ref___projection ((a valididcertt__ref)) us_rep12 (valididcertt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const c64b (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(declare-const c72b (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS20 Int)
(declare-const attr__ATTRIBUTE_ADDRESS21 Int)
(declare-const c80b (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS22 Int)
(declare-const attr__ATTRIBUTE_ADDRESS23 Int)
(declare-fun temp___String_Literal_2766 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_2766 us_void_param) 1)) 73) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 2)) 38)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 3)) 65)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 4)) 32)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 5)) 67)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 6)) 101)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 7)) 114)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 8)) 116)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 9)) 105)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 10)) 102)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 11)) 105)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 12)) 99)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 13)) 97)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 14)) 116)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 15)) 101)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 17)) 78)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 18)) 111)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 19)) 116)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 21)) 67)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 22)) 117)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 23)) 114)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 24)) 114)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 25)) 101)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 26)) 110)) (= (to_rep (select (temp___String_Literal_2766 us_void_param) 27)) 116)) :pattern ((temp___String_Literal_2766 us_void_param)))))
(declare-fun temp___String_Literal_2771 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_2771 us_void_param) 1)) 73) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 2)) 38)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 3)) 65)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 4)) 32)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 5)) 67)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 6)) 101)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 7)) 114)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 8)) 116)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 9)) 105)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 10)) 102)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 11)) 105)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 12)) 99)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 13)) 97)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 14)) 116)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 15)) 101)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 17)) 78)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 18)) 111)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 19)) 116)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 21)) 86)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 22)) 101)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 23)) 114)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 24)) 105)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 25)) 102)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 26)) 105)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 27)) 97)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 28)) 98)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 29)) 108)) (= (to_rep (select (temp___String_Literal_2771 us_void_param) 30)) 101)) :pattern ((temp___String_Literal_2771 us_void_param)))))
(declare-fun temp___String_Literal_2776 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_2776 us_void_param) 1)) 73) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 2)) 38)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 3)) 65)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 4)) 32)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 5)) 67)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 6)) 101)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 7)) 114)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 8)) 116)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 9)) 105)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 10)) 102)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 11)) 105)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 12)) 99)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 13)) 97)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 14)) 116)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 15)) 101)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 17)) 66)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 18)) 97)) (= (to_rep (select (temp___String_Literal_2776 us_void_param) 19)) 100)) :pattern ((temp___String_Literal_2776 us_void_param)))))
(define-fun dynamic_invariant2 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range1 temp___expr_63)))
(define-fun dynamic_invariant3 ((temp___expr_2236 Int) (temp___is_init_2233 Bool) (temp___skip_constant_2234 Bool) (temp___do_toplevel_2235 Bool)) Bool (=> (or (= temp___is_init_2233 true) (<= 0 3)) (in_range22 temp___expr_2236)))
(define-fun dynamic_invariant4 ((temp___expr_1153 Int) (temp___is_init_1150 Bool) (temp___skip_constant_1151 Bool) (temp___do_toplevel_1152 Bool)) Bool (=> (or (= temp___is_init_1150 true) (<= 0 17)) (in_range13 temp___expr_1153)))
(define-fun dynamic_invariant5 ((temp___expr_1132 Int) (temp___is_init_1129 Bool) (temp___skip_constant_1130 Bool) (temp___do_toplevel_1131 Bool)) Bool (=> (or (= temp___is_init_1129 true) (<= 1 17)) (in_range11 temp___expr_1132)))
(define-fun dynamic_invariant6 ((temp___expr_1257 Int) (temp___is_init_1254 Bool) (temp___skip_constant_1255 Bool) (temp___do_toplevel_1256 Bool)) Bool (=> (or (= temp___is_init_1254 true) (<= 0 2)) (in_range15 temp___expr_1257)))
(define-fun dynamic_invariant7 ((temp___expr_1138 Int) (temp___is_init_1135 Bool) (temp___skip_constant_1136 Bool) (temp___do_toplevel_1137 Bool)) Bool (=> (or (= temp___is_init_1135 true) (<= 0 17408)) (in_range12 temp___expr_1138)))
(define-fun dynamic_invariant8 ((temp___expr_1172 Int) (temp___is_init_1169 Bool) (temp___skip_constant_1170 Bool) (temp___do_toplevel_1171 Bool)) Bool (=> (or (= temp___is_init_1169 true) (<= 0 1024)) (in_range14 temp___expr_1172)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep3)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep10 (rec__auditlog__logfilelistt__length (us_split_fields7 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep10 (rec__auditlog__logfilelistt__length (us_split_fields7 usedlogfiles))) 1) 1024) (to_rep11 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(define-fun dynamic_invariant9 ((temp___expr_580 Int) (temp___is_init_577 Bool) (temp___skip_constant_578 Bool) (temp___do_toplevel_579 Bool)) Bool (=> (or (= temp___is_init_577 true) (<= 1 150)) (in_range6 temp___expr_580)))
(assert (= nodescription (audittypes__nodescription__aggregate_def 32)))
(define-fun dynamic_invariant10 ((temp___expr_188 Int) (temp___is_init_185 Bool) (temp___skip_constant_186 Bool) (temp___do_toplevel_187 Bool)) Bool (=> (or (= temp___is_init_185 true) (<= 0 255)) (in_range20 temp___expr_188)))
(define-fun dynamic_invariant11 ((temp___expr_626 Int) (temp___is_init_623 Bool) (temp___skip_constant_624 Bool) (temp___do_toplevel_625 Bool)) Bool (=> (or (= temp___is_init_623 true) (<= 1901 2099)) (in_range7 temp___expr_626)))
(define-fun dynamic_invariant12 ((temp___expr_632 Int) (temp___is_init_629 Bool) (temp___skip_constant_630 Bool) (temp___do_toplevel_631 Bool)) Bool (=> (or (= temp___is_init_629 true) (<= 1 12)) (in_range8 temp___expr_632)))
(define-fun dynamic_invariant13 ((temp___expr_638 Int) (temp___is_init_635 Bool) (temp___skip_constant_636 Bool) (temp___do_toplevel_637 Bool)) Bool (=> (or (= temp___is_init_635 true) (<= 1 31)) (in_range9 temp___expr_638)))
(define-fun dynamic_invariant14 ((temp___expr_666 Int) (temp___is_init_663 Bool) (temp___skip_constant_664 Bool) (temp___do_toplevel_665 Bool)) Bool (=> (or (= temp___is_init_663 true) (<= 0 86399999)) (in_range10 temp___expr_666)))
(define-fun dynamic_invariant15 ((temp___expr_1044 Int) (temp___is_init_1041 Bool) (temp___skip_constant_1042 Bool) (temp___do_toplevel_1043 Bool)) Bool (=> (or (= temp___is_init_1041 true) (<= 0 2147483647)) (in_range19 temp___expr_1044)))
(define-fun dynamic_invariant16 ((temp___expr_1075 Int) (temp___is_init_1072 Bool) (temp___skip_constant_1073 Bool) (temp___do_toplevel_1074 Bool)) Bool (=> (or (= temp___is_init_1072 true) (<= 0 4294967295)) (in_range21 temp___expr_1075)))
(define-fun dynamic_invariant17 ((temp___expr_359 Int) (temp___is_init_356 Bool) (temp___skip_constant_357 Bool) (temp___do_toplevel_358 Bool)) Bool (=> (or (= temp___is_init_356 true) (<= 0 40)) (in_range2 temp___expr_359)))
(define-fun dynamic_invariant18 ((temp___expr_380 Int) (temp___is_init_377 Bool) (temp___skip_constant_378 Bool) (temp___do_toplevel_379 Bool)) Bool (=> (or (= temp___is_init_377 true) (<= 0 4294967295)) (in_range3 temp___expr_380)))
(define-fun dynamic_invariant19 ((temp___expr_402 Int) (temp___is_init_399 Bool) (temp___skip_constant_400 Bool) (temp___do_toplevel_401 Bool)) Bool (=> (or (= temp___is_init_399 true) (<= 0 10)) (in_range16 temp___expr_402)))
(define-fun dynamic_invariant20 ((temp___expr_414 Int) (temp___is_init_411 Bool) (temp___skip_constant_412 Bool) (temp___do_toplevel_413 Bool)) Bool (=> (or (= temp___is_init_411 true) (<= 0 4294967295)) (in_range17 temp___expr_414)))
(define-fun dynamic_invariant21 ((temp___expr_420 Int) (temp___is_init_417 Bool) (temp___skip_constant_418 Bool) (temp___do_toplevel_419 Bool)) Bool (=> (or (= temp___is_init_417 true) (<= 0 128)) (in_range18 temp___expr_420)))
(define-fun dynamic_invariant22 ((temp___expr_505 Int) (temp___is_init_502 Bool) (temp___skip_constant_503 Bool) (temp___do_toplevel_504 Bool)) Bool (=> (or (= temp___is_init_502 true) (<= 0 4294967295)) (in_range4 temp___expr_505)))
(declare-const currenttimevar__split_fields yearst)
(declare-const currenttimevar__split_fields1 monthst)
(declare-const currenttimevar__split_fields2 dayst)
(declare-const currenttimevar__split_fields3 millisecst)
(declare-const logfiles (Array Int us_rep5))
(declare-const logfilesstatus (Array Int filestatust))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const auditsystemfault Bool)
(declare-const description (Array Int character))
(declare-const idcert__split_fields us_split_fields__ref11)
(declare-const iandacertcontents__split_fields us_split_fields__ref10)
(declare-const iandavalid Bool)
(declare-const idcertcontents__split_fields us_split_fields__ref7)
(declare-const extractok Bool)
(declare-const verified Bool)
(declare-const current Bool)
(declare-const baseidmatches Bool)
(declare-const result__ (Array Int character))
(declare-const result__1 (Array Int character))
(declare-const result__2 (Array Int character))
(declare-const currenttime us_private__ref)
(declare-const filestate us_private__ref)
(declare-const state us_private__ref)
(declare-const o us_rep6)
(declare-const o1 us_rep9)
(declare-const o2 us_rep1)
(declare-const o3 us_rep1)
(declare-const o4 Bool)
(declare-const o5 us_rep6)
(declare-const o6 us_rep6)
(declare-const o7 Bool)
(declare-const logfiles1 (Array Int us_rep5))
(declare-const logfilesstatus1 (Array Int filestatust))
(declare-const logfilestate__split_fields7 us_split_fields8)
(declare-const auditalarm1 Int)
(declare-const auditsystemfault1 Bool)
(declare-const iandacertcontents__split_fields1 us_split_fields20)
(declare-const idcertcontents__split_fields1 us_split_fields14)
(declare-const filestate1 us_private)
(declare-const state1 us_private)
(declare-const result bool__ref)
(declare-const extractok1 Bool)
(declare-const result1 bool__ref)
(declare-const verified1 Bool)
(declare-const result2 bool__ref)
(declare-const current1 Bool)
(declare-const result3 bool__ref)
(declare-const baseidmatches1 Bool)
(declare-const certfound Bool)
(declare-const iandacertcontents__split_fields2 us_split_fields20)
(declare-const extractok2 Bool)
(declare-const result4 us_split_fields__ref7)
(declare-const idcertcontents__split_fields2 us_split_fields14)
(declare-const result5 bool__ref)
(declare-const baseidmatches2 Bool)
(declare-const logfiles2 (Array Int us_rep5))
(declare-const logfilesstatus2 (Array Int filestatust))
(declare-const logfilestate__split_fields8 us_split_fields8)
(declare-const auditalarm2 Int)
(declare-const auditsystemfault2 Bool)
(declare-const verified2 Bool)
(declare-const filestate2 us_private)
(declare-const state2 us_private)
(declare-const result6 bool__ref)
(declare-const current2 Bool)
(declare-const result7 bool__ref)
(declare-const iandavalid1 Bool)
(declare-const result8 map__ref)
(declare-const result__3 (Array Int character))
(declare-const result9 map__ref)
(declare-const result__4 (Array Int character))
(declare-const result10 map__ref)
(declare-const result__5 (Array Int character))
(assert (= (audittypes__nodescription__aggregate_def 32) nodescription))
(assert (= (valid_numberlogentries (to_rep8 logfilestate__split_fields) (to_rep9 logfilestate__split_fields1) (mk___rep3 (mk___split_fields3 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range5 auditalarm))
(assert (= result (mk_bool__ref extractok)))
(assert (= extractok1 (of_int 0)))
(assert (= result1 (mk_bool__ref verified)))
(assert (= verified1 (of_int 0)))
(assert (= result2 (mk_bool__ref current)))
(assert (= current1 (of_int 0)))
(assert (= result3 (mk_bool__ref baseidmatches)))
(assert (= baseidmatches1 (of_int 0)))
(assert (=> (= certfound true) (=> (= extractok2 true) (= result4 idcertcontents__split_fields))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= (let ((subject idcertcontents__split_fields)) idcertcontents__split_fields2) (us_split_fields15 (rec__usertoken__valididcertt__contents (us_split_fields__content11 idcert__split_fields)))))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= o1 (cert_attr_ianda_to_cert_attr (mk___rep10 (let ((subject iandacertcontents__split_fields)) iandacertcontents__split_fields2)))))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= o2 (thebasecert o1)))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= o (cert_id_to_cert (mk___rep7 (let ((subject idcertcontents__split_fields)) idcertcontents__split_fields2)))))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= o3 (theid o)))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= o4 (bool_eq2 o3 o2)))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= result5 (mk_bool__ref baseidmatches1)))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= baseidmatches2 o4))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= o5 (cert_attr_ianda_to_cert (mk___rep10 (let ((subject iandacertcontents__split_fields)) iandacertcontents__split_fields2)))))))
(assert (=> (= certfound true) (=> (= extractok2 true) (and (= (valid_numberlogentries (to_rep8 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields8)) (to_rep9 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields8)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields8) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields8)) true) (in_range5 auditalarm2)))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= o6 (cert_attr_ianda_to_cert (mk___rep10 (let ((subject iandacertcontents__split_fields)) iandacertcontents__split_fields2)))))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= o7 (iscurrent o6 (mk___split_fields2 currenttimevar__split_fields currenttimevar__split_fields1 currenttimevar__split_fields2 currenttimevar__split_fields3) (us_private__content currenttime))))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= result6 (mk_bool__ref current1)))))
(assert (=> (= certfound true) (=> (= extractok2 true) (= current2 o7))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= (let ((subject state)) (mk___private__ref state2)) state))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= (let ((subject filestate)) (mk___private__ref filestate2)) filestate))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= baseidmatches2 baseidmatches1))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= current2 current1))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= verified2 verified1))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= (let ((subject idcertcontents__split_fields)) (mk___split_fields__ref7 idcertcontents__split_fields2)) idcertcontents__split_fields))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= auditsystemfault2 auditsystemfault))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= auditalarm2 auditalarm))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= logfilestate__split_fields8 (mk___split_fields4 logfilestate__split_fields logfilestate__split_fields1 (mk___rep3 (mk___split_fields3 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6)))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= logfilesstatus2 logfilesstatus))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= logfiles2 logfiles))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= state2 state1))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= filestate2 filestate1))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= baseidmatches2 baseidmatches1))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= current2 current1))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= verified2 verified1))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= idcertcontents__split_fields2 idcertcontents__split_fields1))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= auditsystemfault2 auditsystemfault1))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= auditalarm2 auditalarm1))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= logfilestate__split_fields8 logfilestate__split_fields7))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= logfilesstatus2 logfilesstatus1))))
(assert (=> (= certfound true) (=> (not (= extractok2 true)) (= logfiles2 logfiles1))))
(assert (=> (not (= certfound true)) (= (let ((subject state)) (mk___private__ref state2)) state)))
(assert (=> (not (= certfound true)) (= (let ((subject filestate)) (mk___private__ref filestate2)) filestate)))
(assert (=> (not (= certfound true)) (= baseidmatches2 baseidmatches1)))
(assert (=> (not (= certfound true)) (= current2 current1)))
(assert (=> (not (= certfound true)) (= verified2 verified1)))
(assert (=> (not (= certfound true)) (= extractok2 extractok1)))
(assert (=> (not (= certfound true)) (= (let ((subject idcertcontents__split_fields)) (mk___split_fields__ref7 idcertcontents__split_fields2)) idcertcontents__split_fields)))
(assert (=> (not (= certfound true)) (= (let ((subject iandacertcontents__split_fields)) (mk___split_fields__ref10 iandacertcontents__split_fields2)) iandacertcontents__split_fields)))
(assert (=> (not (= certfound true)) (= auditsystemfault2 auditsystemfault)))
(assert (=> (not (= certfound true)) (= auditalarm2 auditalarm)))
(assert (=> (not (= certfound true)) (= logfilestate__split_fields8 (mk___split_fields4 logfilestate__split_fields logfilestate__split_fields1 (mk___rep3 (mk___split_fields3 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6))))
(assert (=> (not (= certfound true)) (= logfilesstatus2 logfilesstatus)))
(assert (=> (not (= certfound true)) (= logfiles2 logfiles)))
(assert (=> (not (= certfound true)) (= state2 state1)))
(assert (=> (not (= certfound true)) (= filestate2 filestate1)))
(assert (=> (not (= certfound true)) (= baseidmatches2 baseidmatches1)))
(assert (=> (not (= certfound true)) (= current2 current1)))
(assert (=> (not (= certfound true)) (= verified2 verified1)))
(assert (=> (not (= certfound true)) (= extractok2 extractok1)))
(assert (=> (not (= certfound true)) (= idcertcontents__split_fields2 idcertcontents__split_fields1)))
(assert (=> (not (= certfound true)) (= iandacertcontents__split_fields2 iandacertcontents__split_fields1)))
(assert (=> (not (= certfound true)) (= auditsystemfault2 auditsystemfault1)))
(assert (=> (not (= certfound true)) (= auditalarm2 auditalarm1)))
(assert (=> (not (= certfound true)) (= logfilestate__split_fields8 logfilestate__split_fields7)))
(assert (=> (not (= certfound true)) (= logfilesstatus2 logfilesstatus1)))
(assert (=> (not (= certfound true)) (= logfiles2 logfiles1)))
(assert (= result7 (mk_bool__ref iandavalid)))
(assert (= iandavalid1 (ite (= (ite (= (ite (= (ite (= certfound true) extractok2 false) true) baseidmatches2 false) true) verified2 false) true) current2 false)))
(assert (= (bool_eq description 1 150 nodescription 1 150) true))
(assert (= certfound true))
(assert (= extractok2 true))
(assert (= baseidmatches2 true))
(assert (not (= verified2 true)))
(assert (= result9 (mk_map__ref result__1)))
(assert (= result__4 nodescription))
(assert (not (= (of_int 1) true)))
(assert (<= 1 150))
(assert (not (<= 1 1)))
(check-sat)
(exit)
