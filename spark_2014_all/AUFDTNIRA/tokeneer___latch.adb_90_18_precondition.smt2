(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort statust 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (statust statust) Bool)
(declare-const dummy4 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant ((temp___expr_167 Int) (temp___is_init_164 Bool) (temp___skip_constant_165 Bool) (temp___do_toplevel_166 Bool)) Bool (=> (or (= temp___is_init_164 true) (<= 0 1)) (in_range4 temp___expr_167)))
(declare-sort elementt 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 43)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (elementt elementt) Bool)
(declare-const dummy5 elementt)
(declare-datatypes () ((elementt__ref (mk_elementt__ref (elementt__content elementt)))))
(define-fun elementt__ref___projection ((a elementt__ref)) elementt (elementt__content a))
(define-fun dynamic_invariant1 ((temp___expr_322 Int) (temp___is_init_319 Bool) (temp___skip_constant_320 Bool) (temp___do_toplevel_321 Bool)) Bool (=> (or (= temp___is_init_319 true) (<= 0 43)) (in_range5 temp___expr_322)))
(declare-sort descriptioni 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 150)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (descriptioni descriptioni) Bool)
(declare-const dummy6 descriptioni)
(declare-datatypes () ((descriptioni__ref (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni (descriptioni__content a))
(declare-const nodescription (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun audittypes__nodescription__aggregate_def (Int) (Array Int character))
(assert (forall ((temp___134 Int)) (forall ((temp___135 Int)) (= (select (audittypes__nodescription__aggregate_def temp___134) temp___135) (of_rep temp___134)))))
(declare-const nouser (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-fun temp___String_Literal_136 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_136 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_136 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 3)) 85)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 32)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 33)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 36)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 38)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 41)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 43)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 44)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 46)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 48)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 49)) 32)) (= (to_rep (select (temp___String_Literal_136 us_void_param) 50)) 32)) :pattern ((temp___String_Literal_136 us_void_param)))))
(declare-sort yearst 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1901 x) (<= x 2099)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq7 (yearst yearst) Bool)
(declare-const dummy7 yearst)
(declare-datatypes () ((yearst__ref (mk_yearst__ref (yearst__content yearst)))))
(define-fun yearst__ref___projection ((a yearst__ref)) yearst (yearst__content a))
(declare-fun to_rep2 (yearst) Int)
(declare-fun of_rep2 (Int) yearst)
(assert (forall ((x yearst)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x yearst)) (! (in_range7 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort monthst 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq8 (monthst monthst) Bool)
(declare-const dummy8 monthst)
(declare-datatypes () ((monthst__ref (mk_monthst__ref (monthst__content monthst)))))
(define-fun monthst__ref___projection ((a monthst__ref)) monthst (monthst__content a))
(declare-fun to_rep3 (monthst) Int)
(declare-fun of_rep3 (Int) monthst)
(assert (forall ((x monthst)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x monthst)) (! (in_range8 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort dayst 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq9 (dayst dayst) Bool)
(declare-const dummy9 dayst)
(declare-datatypes () ((dayst__ref (mk_dayst__ref (dayst__content dayst)))))
(define-fun dayst__ref___projection ((a dayst__ref)) dayst (dayst__content a))
(declare-fun to_rep4 (dayst) Int)
(declare-fun of_rep4 (Int) dayst)
(assert (forall ((x dayst)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x dayst)) (! (in_range9 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-sort millisecst 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 86399999)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq10 (millisecst millisecst) Bool)
(declare-const dummy10 millisecst)
(declare-datatypes () ((millisecst__ref (mk_millisecst__ref (millisecst__content millisecst)))))
(define-fun millisecst__ref___projection ((a millisecst__ref)) millisecst (millisecst__content a))
(declare-fun to_rep5 (millisecst) Int)
(declare-fun of_rep5 (Int) millisecst)
(assert (forall ((x millisecst)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x millisecst)) (! (in_range10 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__clock__timet__year yearst) (rec__clock__timet__month monthst) (rec__clock__timet__day dayst) (rec__clock__timet__millisec millisecst)))))
(define-fun us_split_fields_Year__projection ((a us_split_fields)) yearst (rec__clock__timet__year a))
(define-fun us_split_fields_Month__projection ((a us_split_fields)) monthst (rec__clock__timet__month a))
(define-fun us_split_fields_Day__projection ((a us_split_fields)) dayst (rec__clock__timet__day a))
(define-fun us_split_fields_MilliSec__projection ((a us_split_fields)) millisecst (rec__clock__timet__millisec a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (to_rep2 (rec__clock__timet__year (us_split_fields1 a))) (to_rep2 (rec__clock__timet__year (us_split_fields1 b)))) (= (to_rep3 (rec__clock__timet__month (us_split_fields1 a))) (to_rep3 (rec__clock__timet__month (us_split_fields1 b))))) (= (to_rep4 (rec__clock__timet__day (us_split_fields1 a))) (to_rep4 (rec__clock__timet__day (us_split_fields1 b))))) (= (to_rep5 (rec__clock__timet__millisec (us_split_fields1 a))) (to_rep5 (rec__clock__timet__millisec (us_split_fields1 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const clock__timet__year__first__bit Int)
(declare-const clock__timet__year__last__bit Int)
(declare-const clock__timet__year__position Int)
(assert (<= 0 clock__timet__year__first__bit))
(assert (< clock__timet__year__first__bit clock__timet__year__last__bit))
(assert (<= 0 clock__timet__year__position))
(declare-const clock__timet__month__first__bit Int)
(declare-const clock__timet__month__last__bit Int)
(declare-const clock__timet__month__position Int)
(assert (<= 0 clock__timet__month__first__bit))
(assert (< clock__timet__month__first__bit clock__timet__month__last__bit))
(assert (<= 0 clock__timet__month__position))
(declare-const clock__timet__day__first__bit Int)
(declare-const clock__timet__day__last__bit Int)
(declare-const clock__timet__day__position Int)
(assert (<= 0 clock__timet__day__first__bit))
(assert (< clock__timet__day__first__bit clock__timet__day__last__bit))
(assert (<= 0 clock__timet__day__position))
(declare-const clock__timet__millisec__first__bit Int)
(declare-const clock__timet__millisec__last__bit Int)
(declare-const clock__timet__millisec__position Int)
(assert (<= 0 clock__timet__millisec__first__bit))
(assert (< clock__timet__millisec__first__bit clock__timet__millisec__last__bit))
(assert (<= 0 clock__timet__millisec__position))
(declare-fun user_eq11 (us_rep us_rep) Bool)
(declare-const dummy11 us_rep)
(declare-datatypes () ((timet__ref (mk_timet__ref (timet__content us_rep)))))
(define-fun timet__ref___projection ((a timet__ref)) us_rep (timet__content a))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-fun thecurrenttime (us_split_fields us_private) us_rep)
(declare-fun thecurrenttime__function_guard (us_rep us_split_fields us_private) Bool)
(assert true)
(assert (forall ((clock__currenttimevar__fields us_split_fields)) (forall ((clock__currenttime us_private)) (! (= (thecurrenttime clock__currenttimevar__fields clock__currenttime) (mk___rep clock__currenttimevar__fields)) :pattern ((thecurrenttime clock__currenttimevar__fields clock__currenttime))))))
(declare-fun greaterthanorequal (us_rep us_rep) Bool)
(declare-fun greaterthanorequal__function_guard (Bool us_rep us_rep) Bool)
(declare-fun greaterthan (us_rep us_rep) Bool)
(declare-fun greaterthan__function_guard (Bool us_rep us_rep) Bool)
(assert true)
(assert (forall ((left us_rep) (right us_rep)) (! (= (= (greaterthanorequal left right) true) (or (= (greaterthan left right) true) (= (bool_eq2 left right) true))) :pattern ((greaterthanorequal left right)))))
(declare-sort logfileindext 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq12 (logfileindext logfileindext) Bool)
(declare-const dummy12 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep6 (logfileindext) Int)
(declare-fun of_rep6 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x logfileindext)) (! (in_range11 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq13 (logentrycountt logentrycountt) Bool)
(declare-const dummy13 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep7 (logentrycountt) Int)
(declare-fun of_rep7 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x logentrycountt)) (! (in_range12 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (logfileindext Int) (Array Int logfileindext))
(assert (forall ((v logfileindext)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq3 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep6 (select a temp___idx_150)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_150))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep6 (select a temp___idx_150)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_150)))))))))))
(declare-fun compare1 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) Int)
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq3 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep6 (select a (+ i 1))) (to_rep6 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq3 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep6 (select b (+ i 1))) (to_rep6 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const dummy14 (Array Int logfileindext))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int logfileindext)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int logfileindext)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq14 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-sort logfilecountt 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq15 (logfilecountt logfilecountt) Bool)
(declare-const dummy15 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep8 (logfilecountt) Int)
(declare-fun of_rep8 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x logfilecountt)) (! (in_range13 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields2)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields2)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___8__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq4 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (bool_eq3 (rec__auditlog__logfilelistt__list (us_split_fields3 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields3 b)) 1 17) true) (= (to_rep6 (rec__auditlog__logfilelistt__head (us_split_fields3 a))) (to_rep6 (rec__auditlog__logfilelistt__head (us_split_fields3 b))))) (= (to_rep6 (rec__auditlog__logfilelistt__lasti (us_split_fields3 a))) (to_rep6 (rec__auditlog__logfilelistt__lasti (us_split_fields3 b))))) (= (to_rep8 (rec__auditlog__logfilelistt__length (us_split_fields3 a))) (to_rep8 (rec__auditlog__logfilelistt__length (us_split_fields3 b))))) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq16 (us_rep1 us_rep1) Bool)
(declare-const dummy16 us_rep1)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep1)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep1 (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq17 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy17 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep9 (fileentrycountt) Int)
(declare-fun of_rep9 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range14 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range14 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first2 Int)) (! (= (slide2 a first2 first2) a) :pattern ((slide2 a first2 first2))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (fileentrycountt Int) (Array Int fileentrycountt))
(assert (forall ((v fileentrycountt)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq5 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep9 (select a temp___idx_151)) (to_rep9 (select b (+ (- b__first a__first) temp___idx_151))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq5 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep9 (select a temp___idx_151)) (to_rep9 (select b (+ (- b__first a__first) temp___idx_151)))))))))))
(declare-fun compare2 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) Int)
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare2 a a_first a_last b b_first b_last) 0) (= (bool_eq5 a a_first a_last b b_first b_last) true)) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare2 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq5 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep9 (select a (+ i 1))) (to_rep9 (select b (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare2 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq5 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep9 (select b (+ i 1))) (to_rep9 (select a (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(declare-const dummy18 (Array Int fileentrycountt))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment4 a))))
(declare-fun user_eq18 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep1) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields4)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields4)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields4)) us_rep1 (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields4)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___9__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq6 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (to_rep6 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 a))) (to_rep6 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 b)))) (= (to_rep7 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 a))) (to_rep7 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 b))))) (= (bool_eq4 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 b))) true)) (= (bool_eq5 (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 b)) 1 17) true)) true false))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep2) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep2) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq19 (us_rep2 us_rep2) Bool)
(declare-const dummy19 us_rep2)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep2)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep2 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun temp___1040 (Int) (Array Int logfileindext))
(assert (forall ((temp___1042 Int)) (forall ((temp___1043 Int)) (= (select (temp___1040 temp___1042) temp___1043) (of_rep6 temp___1042)))))
(declare-fun temp___1044 (Int) (Array Int fileentrycountt))
(assert (forall ((temp___1046 Int)) (forall ((temp___1047 Int)) (= (select (temp___1044 temp___1046) temp___1047) (of_rep9 temp___1046)))))
(define-fun dynamic_invariant2 ((temp___expr_1034 us_rep2) (temp___is_init_1031 Bool) (temp___skip_constant_1032 Bool) (temp___do_toplevel_1033 Bool)) Bool (= (valid_numberlogentries (to_rep6 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___expr_1034))) (to_rep7 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___expr_1034))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___expr_1034)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___expr_1034))) true))
(define-fun default_initial_assumption ((temp___expr_1038 us_rep2) (temp___skip_top_level_1039 Bool)) Bool (and (and (and (= (to_rep6 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___expr_1038))) 1) (= (to_rep7 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___expr_1038))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___expr_1038)) (mk___rep1 (mk___split_fields1 (temp___1040 1) (of_rep6 1) (of_rep6 1) (of_rep8 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___expr_1038)) (temp___1044 0))))
(define-fun type_invariant ((temp___1048 us_rep2)) Bool (= (valid_numberlogentries (to_rep6 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields5 temp___1048))) (to_rep7 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields5 temp___1048))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields5 temp___1048)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields5 temp___1048))) true))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep3 0)
(declare-fun bool_eq7 (us_rep3 us_rep3) Bool)
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep3) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep3) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep3)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment6 a))))
(declare-fun user_eq20 (us_rep3 us_rep3) Bool)
(declare-const dummy20 us_rep3)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep3)))))
(define-fun t__ref___projection ((a t__ref)) us_rep3 (t__content a))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep3))))))
(declare-fun slide3 ((Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3))) (forall ((first2 Int)) (! (= (slide3 a first2 first2) a) :pattern ((slide3 a first2 first2))))))
(assert (forall ((a (Array Int us_rep3))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(declare-fun concat4 ((Array Int us_rep3) Int Int (Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat4 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton4 (us_rep3 Int) (Array Int us_rep3))
(assert (forall ((v us_rep3)) (forall ((i Int)) (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i))))))
(define-fun bool_eq8 ((a (Array Int us_rep3)) (a__first Int) (a__last Int) (b (Array Int us_rep3)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq7 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true)))) true false))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq8 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq7 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-sort filestatust 0)
(define-fun in_range15 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq21 (filestatust filestatust) Bool)
(declare-const dummy21 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep10 (filestatust) Int)
(declare-fun of_rep10 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x filestatust)) (! (in_range15 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x Int)) (! (=> (in_range15 x) (= (to_rep10 (of_rep10 x)) x)) :pattern ((to_rep10 (of_rep10 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int filestatust))))))
(declare-fun slide4 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first2 Int)) (! (= (slide4 a first2 first2) a) :pattern ((slide4 a first2 first2))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(declare-fun concat5 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat5 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat5 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat5 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton5 (filestatust Int) (Array Int filestatust))
(assert (forall ((v filestatust)) (forall ((i Int)) (! (= (select (singleton5 v i) i) v) :pattern ((select (singleton5 v i) i))))))
(define-fun bool_eq9 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep10 (select a temp___idx_153)) (to_rep10 (select b (+ (- b__first a__first) temp___idx_153))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq9 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep10 (select a temp___idx_153)) (to_rep10 (select b (+ (- b__first a__first) temp___idx_153)))))))))))
(declare-fun compare3 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) Int)
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare3 a a_first a_last b b_first b_last) 0) (= (bool_eq9 a a_first a_last b b_first b_last) true)) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare3 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq9 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep10 (select a (+ i 1))) (to_rep10 (select b (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare3 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq9 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep10 (select b (+ i 1))) (to_rep10 (select a (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-sort t1 0)
(define-fun in_range16 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq22 (t1 t1) Bool)
(declare-const dummy22 t1)
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 t1)))))
(define-fun t__ref___2__projection ((a t__ref1)) t1 (t__content1 a))
(define-fun dynamic_invariant3 ((temp___expr_1200 Int) (temp___is_init_1197 Bool) (temp___skip_constant_1198 Bool) (temp___do_toplevel_1199 Bool)) Bool (=> (or (= temp___is_init_1197 true) (<= 0 1)) (in_range16 temp___expr_1200)))
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-fun latch_timeout (us_split_fields) us_rep)
(declare-fun latch_timeout__function_guard (us_rep us_split_fields) Bool)
(assert true)
(assert (forall ((latch__latchtimeout__fields us_split_fields)) (! (= (latch_timeout latch__latchtimeout__fields) (mk___rep latch__latchtimeout__fields)) :pattern ((latch_timeout latch__latchtimeout__fields)))))
(declare-fun islocked (Int) Bool)
(declare-fun islocked__function_guard (Bool Int) Bool)
(assert true)
(assert (forall ((latch__currentlatch Int)) (! (= (= (islocked latch__currentlatch) true) (= latch__currentlatch 0)) :pattern ((islocked latch__currentlatch)))))
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(define-fun dynamic_invariant4 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant5 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant6 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant7 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant8 ((temp___expr_1000 Int) (temp___is_init_997 Bool) (temp___skip_constant_998 Bool) (temp___do_toplevel_999 Bool)) Bool (=> (or (= temp___is_init_997 true) (<= 0 17)) (in_range13 temp___expr_1000)))
(define-fun dynamic_invariant9 ((temp___expr_979 Int) (temp___is_init_976 Bool) (temp___skip_constant_977 Bool) (temp___do_toplevel_978 Bool)) Bool (=> (or (= temp___is_init_976 true) (<= 1 17)) (in_range11 temp___expr_979)))
(define-fun dynamic_invariant10 ((temp___expr_1104 Int) (temp___is_init_1101 Bool) (temp___skip_constant_1102 Bool) (temp___do_toplevel_1103 Bool)) Bool (=> (or (= temp___is_init_1101 true) (<= 0 2)) (in_range15 temp___expr_1104)))
(define-fun dynamic_invariant11 ((temp___expr_985 Int) (temp___is_init_982 Bool) (temp___skip_constant_983 Bool) (temp___do_toplevel_984 Bool)) Bool (=> (or (= temp___is_init_982 true) (<= 0 17408)) (in_range12 temp___expr_985)))
(define-fun dynamic_invariant12 ((temp___expr_1019 Int) (temp___is_init_1016 Bool) (temp___skip_constant_1017 Bool) (temp___do_toplevel_1018 Bool)) Bool (=> (or (= temp___is_init_1016 true) (<= 0 1024)) (in_range14 temp___expr_1019)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep1)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep8 (rec__auditlog__logfilelistt__length (us_split_fields3 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep8 (rec__auditlog__logfilelistt__length (us_split_fields3 usedlogfiles))) 1) 1024) (to_rep9 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(define-fun dynamic_invariant13 ((temp___expr_338 Int) (temp___is_init_335 Bool) (temp___skip_constant_336 Bool) (temp___do_toplevel_337 Bool)) Bool (=> (or (= temp___is_init_335 true) (<= 1 150)) (in_range6 temp___expr_338)))
(assert (= nodescription (audittypes__nodescription__aggregate_def 32)))
(assert (= nouser (temp___String_Literal_136 Tuple0)))
(define-fun dynamic_invariant14 ((temp___expr_380 Int) (temp___is_init_377 Bool) (temp___skip_constant_378 Bool) (temp___do_toplevel_379 Bool)) Bool (=> (or (= temp___is_init_377 true) (<= 1901 2099)) (in_range7 temp___expr_380)))
(define-fun dynamic_invariant15 ((temp___expr_386 Int) (temp___is_init_383 Bool) (temp___skip_constant_384 Bool) (temp___do_toplevel_385 Bool)) Bool (=> (or (= temp___is_init_383 true) (<= 1 12)) (in_range8 temp___expr_386)))
(define-fun dynamic_invariant16 ((temp___expr_392 Int) (temp___is_init_389 Bool) (temp___skip_constant_390 Bool) (temp___do_toplevel_391 Bool)) Bool (=> (or (= temp___is_init_389 true) (<= 1 31)) (in_range9 temp___expr_392)))
(define-fun dynamic_invariant17 ((temp___expr_416 Int) (temp___is_init_413 Bool) (temp___skip_constant_414 Bool) (temp___do_toplevel_415 Bool)) Bool (=> (or (= temp___is_init_413 true) (<= 0 86399999)) (in_range10 temp___expr_416)))
(assert true)
(assert (forall ((left us_rep) (right us_rep)) (! (= (= (greaterthan left right) true) (or (or (or (< (to_rep2 (rec__clock__timet__year (us_split_fields1 right))) (to_rep2 (rec__clock__timet__year (us_split_fields1 left)))) (and (= (to_rep2 (rec__clock__timet__year (us_split_fields1 left))) (to_rep2 (rec__clock__timet__year (us_split_fields1 right)))) (< (to_rep3 (rec__clock__timet__month (us_split_fields1 right))) (to_rep3 (rec__clock__timet__month (us_split_fields1 left)))))) (and (and (= (to_rep2 (rec__clock__timet__year (us_split_fields1 left))) (to_rep2 (rec__clock__timet__year (us_split_fields1 right)))) (= (to_rep3 (rec__clock__timet__month (us_split_fields1 left))) (to_rep3 (rec__clock__timet__month (us_split_fields1 right))))) (< (to_rep4 (rec__clock__timet__day (us_split_fields1 right))) (to_rep4 (rec__clock__timet__day (us_split_fields1 left)))))) (and (and (and (= (to_rep2 (rec__clock__timet__year (us_split_fields1 left))) (to_rep2 (rec__clock__timet__year (us_split_fields1 right)))) (= (to_rep3 (rec__clock__timet__month (us_split_fields1 left))) (to_rep3 (rec__clock__timet__month (us_split_fields1 right))))) (= (to_rep4 (rec__clock__timet__day (us_split_fields1 left))) (to_rep4 (rec__clock__timet__day (us_split_fields1 right))))) (< (to_rep5 (rec__clock__timet__millisec (us_split_fields1 right))) (to_rep5 (rec__clock__timet__millisec (us_split_fields1 left))))))) :pattern ((greaterthan left right)))))
(declare-const currenttimevar__split_fields yearst)
(declare-const currenttimevar__split_fields1 monthst)
(declare-const currenttimevar__split_fields2 dayst)
(declare-const currenttimevar__split_fields3 millisecst)
(declare-const logfiles (Array Int us_rep3))
(declare-const logfilesstatus (Array Int filestatust))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const auditsystemfault Bool)
(declare-const currentlatch Int)
(declare-const latchtimeout__split_fields yearst)
(declare-const latchtimeout__split_fields1 monthst)
(declare-const latchtimeout__split_fields2 dayst)
(declare-const latchtimeout__split_fields3 millisecst)
(declare-const locallatch Int)
(declare-const id Int)
(declare-const currenttime us_private)
(declare-const filestate us_private)
(declare-const state us_private)
(declare-const o yearst)
(declare-const o1 monthst)
(declare-const o2 dayst)
(declare-const o3 millisecst)
(declare-const logfiles1 (Array Int us_rep3))
(declare-const logfilesstatus1 (Array Int filestatust))
(declare-const logfilestate__split_fields7 logfileindext)
(declare-const logfilestate__split_fields8 logentrycountt)
(declare-const logfilestate__split_fields9 (Array Int logfileindext))
(declare-const logfilestate__split_fields10 logfileindext)
(declare-const logfilestate__split_fields11 logfileindext)
(declare-const logfilestate__split_fields12 logfilecountt)
(declare-const logfilestate__split_fields13 (Array Int fileentrycountt))
(declare-const auditalarm1 Int)
(declare-const auditsystemfault1 Bool)
(declare-const filestate1 us_private)
(declare-const state1 us_private)
(declare-const result Bool)
(declare-const result1 int__ref)
(declare-const locallatch1 Int)
(declare-const result2 int__ref)
(declare-const id1 Int)
(declare-const result3 int__ref)
(declare-const locallatch2 Int)
(declare-const result4 int__ref)
(declare-const id2 Int)
(declare-const logfiles2 (Array Int us_rep3))
(declare-const logfilesstatus2 (Array Int filestatust))
(declare-const logfilestate__split_fields14 us_split_fields4)
(declare-const auditalarm2 Int)
(declare-const auditsystemfault2 Bool)
(declare-const filestate2 us_private)
(declare-const state2 us_private)
(declare-const result5 int__ref)
(declare-const currentlatch1 Int)
(declare-const logfiles3 map__ref3)
(declare-const logfilesstatus3 map__ref4)
(declare-const logfilestate__split_fields15 us_split_fields__ref2)
(declare-const auditalarm3 int__ref)
(declare-const auditsystemfault3 bool__ref)
(declare-const currentlatch2 int__ref)
(declare-const locallatch3 int__ref)
(declare-const id3 int__ref)
(declare-const filestate3 us_private__ref)
(declare-const state3 us_private__ref)
(declare-const logfiles4 (Array Int us_rep3))
(declare-const logfilesstatus4 (Array Int filestatust))
(declare-const logfilestate__split_fields16 us_split_fields4)
(declare-const auditalarm4 Int)
(declare-const auditsystemfault4 Bool)
(declare-const currentlatch3 Int)
(declare-const locallatch4 Int)
(declare-const id4 Int)
(declare-const filestate4 us_private)
(declare-const state4 us_private)
(assert (= (audittypes__nodescription__aggregate_def 32) nodescription))
(assert (= (temp___String_Literal_136 Tuple0) nouser))
(assert (in_range16 currentlatch))
(assert (= (valid_numberlogentries (to_rep6 logfilestate__split_fields) (to_rep7 logfilestate__split_fields1) (mk___rep1 (mk___split_fields1 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range4 auditalarm))
(assert (=> (<= 0 1) (in_range16 locallatch)))
(assert (=> (<= 0 43) (in_range5 id)))
(assert (and (= (mk___rep (mk___split_fields o o1 o2 o3)) (thecurrenttime (mk___split_fields currenttimevar__split_fields currenttimevar__split_fields1 currenttimevar__split_fields2 currenttimevar__split_fields3) currenttime)) (and (= currenttimevar__split_fields o) (and (= currenttimevar__split_fields1 o1) (and (= currenttimevar__split_fields2 o2) (= currenttimevar__split_fields3 o3))))))
(assert (and (= result (greaterthanorequal (mk___rep (mk___split_fields o o1 o2 o3)) (mk___rep (mk___split_fields latchtimeout__split_fields latchtimeout__split_fields1 latchtimeout__split_fields2 latchtimeout__split_fields3)))) (= (= result true) (or (= (greaterthan (mk___rep (mk___split_fields o o1 o2 o3)) (mk___rep (mk___split_fields latchtimeout__split_fields latchtimeout__split_fields1 latchtimeout__split_fields2 latchtimeout__split_fields3))) true) (= (bool_eq2 (mk___rep (mk___split_fields o o1 o2 o3)) (mk___rep (mk___split_fields latchtimeout__split_fields latchtimeout__split_fields1 latchtimeout__split_fields2 latchtimeout__split_fields3))) true)))))
(assert (=> (= result true) (= result1 (mk_int__ref locallatch))))
(assert (=> (= result true) (= locallatch1 0)))
(assert (=> (= result true) (= result2 (mk_int__ref id))))
(assert (=> (= result true) (= id1 8)))
(assert (=> (not (= result true)) (= result3 (mk_int__ref locallatch))))
(assert (=> (not (= result true)) (= locallatch2 1)))
(assert (=> (not (= result true)) (= result4 (mk_int__ref id))))
(assert (=> (not (= result true)) (= id2 9)))
(assert (=> (not (= result true)) (= id1 id2)))
(assert (=> (not (= result true)) (= locallatch1 locallatch2)))
(assert (not (= currentlatch locallatch1)))
(assert (not (= (to_rep1 (first (mk 1 150))) 1)))
(check-sat)
(exit)
