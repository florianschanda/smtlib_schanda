(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort presencet 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (presencet presencet) Bool)
(declare-const dummy4 presencet)
(declare-datatypes () ((presencet__ref (mk_presencet__ref (presencet__content presencet)))))
(define-fun presencet__ref___projection ((a presencet__ref)) presencet (presencet__content a))
(define-fun dynamic_invariant ((temp___expr_243 Int) (temp___is_init_240 Bool) (temp___skip_constant_241 Bool) (temp___do_toplevel_242 Bool)) Bool (=> (or (= temp___is_init_240 true) (<= 0 1)) (in_range4 temp___expr_243)))
(declare-sort datai 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 78)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (datai datai) Bool)
(declare-const dummy5 datai)
(declare-datatypes () ((datai__ref (mk_datai__ref (datai__content datai)))))
(define-fun datai__ref___projection ((a datai__ref)) datai (datai__content a))
(declare-sort datalengtht 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 78)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (datalengtht datalengtht) Bool)
(declare-const dummy6 datalengtht)
(declare-datatypes () ((datalengtht__ref (mk_datalengtht__ref (datalengtht__content datalengtht)))))
(define-fun datalengtht__ref___projection ((a datalengtht__ref)) datalengtht (datalengtht__content a))
(declare-fun to_rep2 (datalengtht) Int)
(declare-fun of_rep2 (Int) datalengtht)
(assert (forall ((x datalengtht)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x datalengtht)) (! (in_range6 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-const dummy7 (Array Int character))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq7 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__keyboard__datat__length datalengtht) (rec__keyboard__datat__text (Array Int character))))))
(define-fun us_split_fields_Length__projection ((a us_split_fields)) datalengtht (rec__keyboard__datat__length a))
(define-fun us_split_fields_Text__projection ((a us_split_fields)) (Array Int character) (rec__keyboard__datat__text a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep2 (rec__keyboard__datat__length (us_split_fields1 a))) (to_rep2 (rec__keyboard__datat__length (us_split_fields1 b)))) (= (bool_eq (rec__keyboard__datat__text (us_split_fields1 a)) 1 78 (rec__keyboard__datat__text (us_split_fields1 b)) 1 78) true)) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const keyboard__datat__length__first__bit Int)
(declare-const keyboard__datat__length__last__bit Int)
(declare-const keyboard__datat__length__position Int)
(assert (<= 0 keyboard__datat__length__first__bit))
(assert (< keyboard__datat__length__first__bit keyboard__datat__length__last__bit))
(assert (<= 0 keyboard__datat__length__position))
(declare-const keyboard__datat__text__first__bit Int)
(declare-const keyboard__datat__text__last__bit Int)
(declare-const keyboard__datat__text__position Int)
(assert (<= 0 keyboard__datat__text__first__bit))
(assert (< keyboard__datat__text__first__bit keyboard__datat__text__last__bit))
(assert (<= 0 keyboard__datat__text__position))
(declare-fun user_eq8 (us_rep us_rep) Bool)
(declare-const dummy8 us_rep)
(declare-datatypes () ((datat__ref (mk_datat__ref (datat__content us_rep)))))
(define-fun datat__ref___projection ((a datat__ref)) us_rep (datat__content a))
(declare-sort opandnullt 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 4)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (opandnullt opandnullt) Bool)
(declare-const dummy9 opandnullt)
(declare-datatypes () ((opandnullt__ref (mk_opandnullt__ref (opandnullt__content opandnullt)))))
(define-fun opandnullt__ref___projection ((a opandnullt__ref)) opandnullt (opandnullt__content a))
(define-fun dynamic_invariant1 ((temp___expr_401 Int) (temp___is_init_398 Bool) (temp___skip_constant_399 Bool) (temp___do_toplevel_400 Bool)) Bool (=> (or (= temp___is_init_398 true) (<= 0 4)) (in_range7 temp___expr_401)))
(declare-sort opt 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 4)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq10 (opt opt) Bool)
(declare-const dummy10 opt)
(declare-datatypes () ((opt__ref (mk_opt__ref (opt__content opt)))))
(define-fun opt__ref___projection ((a opt__ref)) opt (opt__content a))
(declare-sort privileget 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq11 (privileget privileget) Bool)
(declare-const dummy11 privileget)
(declare-datatypes () ((privileget__ref (mk_privileget__ref (privileget__content privileget)))))
(define-fun privileget__ref___projection ((a privileget__ref)) privileget (privileget__content a))
(declare-fun to_rep3 (privileget) Int)
(declare-fun of_rep3 (Int) privileget)
(assert (forall ((x privileget)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x privileget)) (! (in_range9 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-fun to_rep4 (opandnullt) Int)
(declare-fun of_rep4 (Int) opandnullt)
(assert (forall ((x opandnullt)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x opandnullt)) (! (in_range7 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__admin__t__rolepresent privileget) (rec__admin__t__currentop opandnullt)))))
(define-fun us_split_fields_RolePresent__projection ((a us_split_fields2)) privileget (rec__admin__t__rolepresent a))
(define-fun us_split_fields_CurrentOp__projection ((a us_split_fields2)) opandnullt (rec__admin__t__currentop a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep3 (rec__admin__t__rolepresent (us_split_fields3 a))) (to_rep3 (rec__admin__t__rolepresent (us_split_fields3 b)))) (= (to_rep4 (rec__admin__t__currentop (us_split_fields3 a))) (to_rep4 (rec__admin__t__currentop (us_split_fields3 b))))) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const admin__t__rolepresent__first__bit Int)
(declare-const admin__t__rolepresent__last__bit Int)
(declare-const admin__t__rolepresent__position Int)
(assert (<= 0 admin__t__rolepresent__first__bit))
(assert (< admin__t__rolepresent__first__bit admin__t__rolepresent__last__bit))
(assert (<= 0 admin__t__rolepresent__position))
(declare-const admin__t__currentop__first__bit Int)
(declare-const admin__t__currentop__last__bit Int)
(declare-const admin__t__currentop__position Int)
(assert (<= 0 admin__t__currentop__first__bit))
(assert (< admin__t__currentop__first__bit admin__t__currentop__last__bit))
(assert (<= 0 admin__t__currentop__position))
(declare-fun user_eq12 (us_rep1 us_rep1) Bool)
(declare-const dummy12 us_rep1)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep1)))))
(define-fun t__ref___projection ((a t__ref)) us_rep1 (t__content a))
(declare-fun rolepresent (us_rep1) Int)
(declare-fun rolepresent__function_guard (Int us_rep1) Bool)
(define-fun dynamic_invariant2 ((temp___expr_194 Int) (temp___is_init_191 Bool) (temp___skip_constant_192 Bool) (temp___do_toplevel_193 Bool)) Bool (=> (or (= temp___is_init_191 true) (<= 0 3)) (in_range9 temp___expr_194)))
(assert (forall ((theadmin us_rep1)) (! (dynamic_invariant2 (rolepresent theadmin) true false true) :pattern ((rolepresent theadmin)))))
(assert (forall ((theadmin us_rep1)) (! (= (rolepresent theadmin) (to_rep3 (rec__admin__t__rolepresent (us_split_fields3 theadmin)))) :pattern ((rolepresent theadmin)))))
(declare-fun isdoingop (us_rep1) Bool)
(declare-fun isdoingop__function_guard (Bool us_rep1) Bool)
(assert true)
(assert (forall ((theadmin us_rep1)) (! (= (= (isdoingop theadmin) true) (in_range8 (to_rep4 (rec__admin__t__currentop (us_split_fields3 theadmin))))) :pattern ((isdoingop theadmin)))))
(declare-fun thecurrentop (us_rep1) Int)
(declare-fun thecurrentop__function_guard (Int us_rep1) Bool)
(define-fun dynamic_invariant3 ((temp___expr_407 Int) (temp___is_init_404 Bool) (temp___skip_constant_405 Bool) (temp___do_toplevel_406 Bool)) Bool (=> (or (= temp___is_init_404 true) (<= 1 4)) (in_range8 temp___expr_407)))
(assert (forall ((theadmin us_rep1)) (! (=> (= (isdoingop theadmin) true) (dynamic_invariant3 (thecurrentop theadmin) true false true)) :pattern ((thecurrentop theadmin)))))
(declare-fun ispresent (us_rep1) Bool)
(declare-fun ispresent__function_guard (Bool us_rep1) Bool)
(declare-sort adminprivileget 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq13 (adminprivileget adminprivileget) Bool)
(declare-const dummy13 adminprivileget)
(declare-datatypes () ((adminprivileget__ref (mk_adminprivileget__ref (adminprivileget__content adminprivileget)))))
(define-fun adminprivileget__ref___projection ((a adminprivileget__ref)) adminprivileget (adminprivileget__content a))
(assert true)
(assert (forall ((theadmin us_rep1)) (! (= (= (ispresent theadmin) true) (in_range10 (to_rep3 (rec__admin__t__rolepresent (us_split_fields3 theadmin))))) :pattern ((ispresent theadmin)))))
(declare-fun str_comp (us_rep Int) Bool)
(declare-fun str_comp__function_guard (Bool us_rep Int) Bool)
(declare-fun allowedop (us_rep1 Int) Bool)
(declare-fun allowedop__function_guard (Bool us_rep1 Int) Bool)
(declare-fun opisavailable (us_rep1 us_rep) Int)
(declare-fun opisavailable__function_guard (Int us_rep1 us_rep) Bool)
(assert (forall ((theadmin us_rep1)) (forall ((keyedop us_rep)) (! (=> (= (ispresent theadmin) true) (let ((result (opisavailable theadmin keyedop))) (and (= (and (or (ite (exists ((op Int)) (and (and (<= 1 op) (<= op 4)) (and (and (= (str_comp keyedop op) true) (= (allowedop theadmin op) true)) (= result op)))) true false) (= result 0)) (not (and (ite (exists ((op Int)) (and (and (<= 1 op) (<= op 4)) (and (and (= (str_comp keyedop op) true) (= (allowedop theadmin op) true)) (= result op)))) true false) (= result 0)))) true) (dynamic_invariant1 result true false true)))) :pattern ((opisavailable theadmin keyedop))))))
(declare-sort statust 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq14 (statust statust) Bool)
(declare-const dummy14 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant4 ((temp___expr_446 Int) (temp___is_init_443 Bool) (temp___skip_constant_444 Bool) (temp___do_toplevel_445 Bool)) Bool (=> (or (= temp___is_init_443 true) (<= 0 1)) (in_range11 temp___expr_446)))
(declare-sort logfileindext 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq15 (logfileindext logfileindext) Bool)
(declare-const dummy15 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep5 (logfileindext) Int)
(declare-fun of_rep5 (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x logfileindext)) (! (in_range12 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-sort logentrycountt 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq16 (logentrycountt logentrycountt) Bool)
(declare-const dummy16 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep6 (logentrycountt) Int)
(declare-fun of_rep6 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x logentrycountt)) (! (in_range13 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int logfileindext))))))
(declare-fun slide1 ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (logfileindext Int) (Array Int logfileindext))
(assert (forall ((v logfileindext)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq4 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep5 (select a temp___idx_173)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_173))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep5 (select a temp___idx_173)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_173)))))))))))
(declare-fun compare1 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) Int)
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq4 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq4 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep5 (select a (+ i 1))) (to_rep5 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq4 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep5 (select b (+ i 1))) (to_rep5 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const dummy17 (Array Int logfileindext))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int logfileindext)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int logfileindext)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment4 a))))
(declare-fun user_eq17 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-sort logfilecountt 0)
(define-fun in_range14 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq18 (logfilecountt logfilecountt) Bool)
(declare-const dummy18 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep7 (logfilecountt) Int)
(declare-fun of_rep7 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x logfilecountt)) (! (in_range14 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range14 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields4)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields4)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields4)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__3__projection ((a us_split_fields4)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___9__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___10__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq5 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (bool_eq4 (rec__auditlog__logfilelistt__list (us_split_fields5 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields5 b)) 1 17) true) (= (to_rep5 (rec__auditlog__logfilelistt__head (us_split_fields5 a))) (to_rep5 (rec__auditlog__logfilelistt__head (us_split_fields5 b))))) (= (to_rep5 (rec__auditlog__logfilelistt__lasti (us_split_fields5 a))) (to_rep5 (rec__auditlog__logfilelistt__lasti (us_split_fields5 b))))) (= (to_rep7 (rec__auditlog__logfilelistt__length (us_split_fields5 a))) (to_rep7 (rec__auditlog__logfilelistt__length (us_split_fields5 b))))) true false))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep2) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep2) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq19 (us_rep2 us_rep2) Bool)
(declare-const dummy19 us_rep2)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep2)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep2 (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range15 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq20 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy20 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep8 (fileentrycountt) Int)
(declare-fun of_rep8 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range15 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range15 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int fileentrycountt))))))
(declare-fun slide2 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first2 Int)) (! (= (slide2 a first2 first2) a) :pattern ((slide2 a first2 first2))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (fileentrycountt Int) (Array Int fileentrycountt))
(assert (forall ((v fileentrycountt)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq6 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (to_rep8 (select a temp___idx_174)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_174))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (to_rep8 (select a temp___idx_174)) (to_rep8 (select b (+ (- b__first a__first) temp___idx_174)))))))))))
(declare-fun compare2 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) Int)
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare2 a a_first a_last b b_first b_last) 0) (= (bool_eq6 a a_first a_last b b_first b_last) true)) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare2 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq6 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep8 (select a (+ i 1))) (to_rep8 (select b (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare2 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq6 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep8 (select b (+ i 1))) (to_rep8 (select a (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(declare-const dummy21 (Array Int fileentrycountt))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment6 a))))
(declare-fun user_eq21 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep2) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields6)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields6)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields6)) us_rep2 (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields6)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___10__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep3 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___11__projection ((a us_rep3)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq7 ((a us_rep3) (b us_rep3)) Bool (ite (and (and (and (= (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 a))) (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 b)))) (= (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 a))) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 b))))) (= (bool_eq5 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 b))) true)) (= (bool_eq6 (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 b)) 1 17) true)) true false))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep3) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep3) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep3)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment7 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq22 (us_rep3 us_rep3) Bool)
(declare-const dummy22 us_rep3)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep3)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep3 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep2 (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep2 (Array Int fileentrycountt)) Bool)
(declare-fun temp___1145 (Int) (Array Int logfileindext))
(assert (forall ((temp___1147 Int)) (forall ((temp___1148 Int)) (= (select (temp___1145 temp___1147) temp___1148) (of_rep5 temp___1147)))))
(declare-fun temp___1149 (Int) (Array Int fileentrycountt))
(assert (forall ((temp___1151 Int)) (forall ((temp___1152 Int)) (= (select (temp___1149 temp___1151) temp___1152) (of_rep8 temp___1151)))))
(define-fun dynamic_invariant5 ((temp___expr_1139 us_rep3) (temp___is_init_1136 Bool) (temp___skip_constant_1137 Bool) (temp___do_toplevel_1138 Bool)) Bool (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 temp___expr_1139))) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 temp___expr_1139))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 temp___expr_1139)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 temp___expr_1139))) true))
(define-fun default_initial_assumption ((temp___expr_1143 us_rep3) (temp___skip_top_level_1144 Bool)) Bool (and (and (and (= (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 temp___expr_1143))) 1) (= (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 temp___expr_1143))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 temp___expr_1143)) (mk___rep2 (mk___split_fields2 (temp___1145 1) (of_rep5 1) (of_rep5 1) (of_rep7 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 temp___expr_1143)) (temp___1149 0))))
(define-fun type_invariant ((temp___1153 us_rep3)) Bool (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile (us_split_fields7 temp___1153))) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields7 temp___1153))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields7 temp___1153)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields7 temp___1153))) true))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep4 0)
(declare-fun bool_eq8 (us_rep4 us_rep4) Bool)
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep4) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep4) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep4)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment8 a))))
(declare-fun user_eq23 (us_rep4 us_rep4) Bool)
(declare-const dummy23 us_rep4)
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 us_rep4)))))
(define-fun t__ref___2__projection ((a t__ref1)) us_rep4 (t__content1 a))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int us_rep4))))))
(declare-fun slide3 ((Array Int us_rep4) Int Int) (Array Int us_rep4))
(assert (forall ((a (Array Int us_rep4))) (forall ((first2 Int)) (! (= (slide3 a first2 first2) a) :pattern ((slide3 a first2 first2))))))
(assert (forall ((a (Array Int us_rep4))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(declare-fun concat4 ((Array Int us_rep4) Int Int (Array Int us_rep4) Int Int) (Array Int us_rep4))
(assert (forall ((a (Array Int us_rep4)) (b (Array Int us_rep4))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat4 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton4 (us_rep4 Int) (Array Int us_rep4))
(assert (forall ((v us_rep4)) (forall ((i Int)) (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i))))))
(define-fun bool_eq9 ((a (Array Int us_rep4)) (a__first Int) (a__last Int) (b (Array Int us_rep4)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (bool_eq8 (select a temp___idx_175) (select b (+ (- b__first a__first) temp___idx_175))) true)))) true false))
(assert (forall ((a (Array Int us_rep4)) (b (Array Int us_rep4))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq9 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (bool_eq8 (select a temp___idx_175) (select b (+ (- b__first a__first) temp___idx_175))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort filestatust 0)
(define-fun in_range16 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq24 (filestatust filestatust) Bool)
(declare-const dummy24 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep9 (filestatust) Int)
(declare-fun of_rep9 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x filestatust)) (! (in_range16 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range16 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int filestatust))))))
(declare-fun slide4 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first2 Int)) (! (= (slide4 a first2 first2) a) :pattern ((slide4 a first2 first2))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(declare-fun concat5 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat5 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat5 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat5 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton5 (filestatust Int) (Array Int filestatust))
(assert (forall ((v filestatust)) (forall ((i Int)) (! (= (select (singleton5 v i) i) v) :pattern ((select (singleton5 v i) i))))))
(define-fun bool_eq10 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_176 Int)) (=> (and (<= a__first temp___idx_176) (<= temp___idx_176 a__last)) (= (to_rep9 (select a temp___idx_176)) (to_rep9 (select b (+ (- b__first a__first) temp___idx_176))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq10 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_176 Int)) (=> (and (<= a__first temp___idx_176) (<= temp___idx_176 a__last)) (= (to_rep9 (select a temp___idx_176)) (to_rep9 (select b (+ (- b__first a__first) temp___idx_176)))))))))))
(declare-fun compare3 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) Int)
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare3 a a_first a_last b b_first b_last) 0) (= (bool_eq10 a a_first a_last b b_first b_last) true)) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare3 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq10 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep9 (select a (+ i 1))) (to_rep9 (select b (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare3 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq10 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep9 (select b (+ i 1))) (to_rep9 (select a (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort tokenidt 0)
(define-fun in_range17 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)
(declare-fun user_eq25 (tokenidt tokenidt) Bool)
(declare-const dummy25 tokenidt)
(declare-datatypes () ((tokenidt__ref (mk_tokenidt__ref (tokenidt__content tokenidt)))))
(define-fun tokenidt__ref___projection ((a tokenidt__ref)) tokenidt (tokenidt__content a))
(define-fun dynamic_invariant6 ((temp___expr_1305 Int) (temp___is_init_1302 Bool) (temp___skip_constant_1303 Bool) (temp___do_toplevel_1304 Bool)) Bool (=> (or (= temp___is_init_1302 true) (<= 0 4294967295)) (in_range17 temp___expr_1305)))
(declare-sort tryt 0)
(define-fun in_range18 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)
(declare-fun user_eq26 (tryt tryt) Bool)
(declare-const dummy26 tryt)
(declare-datatypes () ((tryt__ref (mk_tryt__ref (tryt__content tryt)))))
(define-fun tryt__ref___projection ((a tryt__ref)) tryt (tryt__content a))
(define-fun dynamic_invariant7 ((temp___expr_1311 Int) (temp___is_init_1308 Bool) (temp___skip_constant_1309 Bool) (temp___do_toplevel_1310 Bool)) Bool (=> (or (= temp___is_init_1308 true) (<= 0 2)) (in_range18 temp___expr_1311)))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-sort classt 0)
(define-fun in_range19 ((x Int)) Bool (and (<= 0 x) (<= x 5)))
(declare-fun attr__ATTRIBUTE_IMAGE19 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check19 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE19 (us_image) Int)
(declare-fun user_eq27 (classt classt) Bool)
(declare-const dummy27 classt)
(declare-datatypes () ((classt__ref (mk_classt__ref (classt__content classt)))))
(define-fun classt__ref___projection ((a classt__ref)) classt (classt__content a))
(declare-fun to_rep10 (classt) Int)
(declare-fun of_rep10 (Int) classt)
(assert (forall ((x classt)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x classt)) (! (in_range19 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x Int)) (! (=> (in_range19 x) (= (to_rep10 (of_rep10 x)) x)) :pattern ((to_rep10 (of_rep10 x))))))
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__privtypes__clearancet__class classt)))))
(define-fun us_split_fields_Class__projection ((a us_split_fields8)) classt (rec__privtypes__clearancet__class a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep5 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___projection ((a us_rep5)) us_split_fields8 (us_split_fields9 a))
(define-fun bool_eq11 ((a us_rep5) (b us_rep5)) Bool (ite (= (to_rep10 (rec__privtypes__clearancet__class (us_split_fields9 a))) (to_rep10 (rec__privtypes__clearancet__class (us_split_fields9 b)))) true false))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep5) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep5) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep5)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment9 a))))
(declare-const privtypes__clearancet__class__first__bit Int)
(declare-const privtypes__clearancet__class__last__bit Int)
(declare-const privtypes__clearancet__class__position Int)
(assert (<= 0 privtypes__clearancet__class__first__bit))
(assert (< privtypes__clearancet__class__first__bit privtypes__clearancet__class__last__bit))
(assert (<= 0 privtypes__clearancet__class__position))
(declare-fun user_eq28 (us_rep5 us_rep5) Bool)
(declare-const dummy28 us_rep5)
(declare-datatypes () ((clearancet__ref (mk_clearancet__ref (clearancet__content us_rep5)))))
(define-fun clearancet__ref___projection ((a clearancet__ref)) us_rep5 (clearancet__content a))
(declare-sort yearst 0)
(define-fun in_range20 ((x Int)) Bool (and (<= 1901 x) (<= x 2099)))
(declare-fun attr__ATTRIBUTE_IMAGE20 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check20 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE20 (us_image) Int)
(declare-fun user_eq29 (yearst yearst) Bool)
(declare-const dummy29 yearst)
(declare-datatypes () ((yearst__ref (mk_yearst__ref (yearst__content yearst)))))
(define-fun yearst__ref___projection ((a yearst__ref)) yearst (yearst__content a))
(declare-fun to_rep11 (yearst) Int)
(declare-fun of_rep11 (Int) yearst)
(assert (forall ((x yearst)) (! (= (of_rep11 (to_rep11 x)) x) :pattern ((to_rep11 x)))))
(assert (forall ((x yearst)) (! (in_range20 (to_rep11 x)) :pattern ((to_rep11 x)))))
(assert (forall ((x Int)) (! (=> (in_range20 x) (= (to_rep11 (of_rep11 x)) x)) :pattern ((to_rep11 (of_rep11 x))))))
(declare-sort monthst 0)
(define-fun in_range21 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE21 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check21 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE21 (us_image) Int)
(declare-fun user_eq30 (monthst monthst) Bool)
(declare-const dummy30 monthst)
(declare-datatypes () ((monthst__ref (mk_monthst__ref (monthst__content monthst)))))
(define-fun monthst__ref___projection ((a monthst__ref)) monthst (monthst__content a))
(declare-fun to_rep12 (monthst) Int)
(declare-fun of_rep12 (Int) monthst)
(assert (forall ((x monthst)) (! (= (of_rep12 (to_rep12 x)) x) :pattern ((to_rep12 x)))))
(assert (forall ((x monthst)) (! (in_range21 (to_rep12 x)) :pattern ((to_rep12 x)))))
(assert (forall ((x Int)) (! (=> (in_range21 x) (= (to_rep12 (of_rep12 x)) x)) :pattern ((to_rep12 (of_rep12 x))))))
(declare-sort dayst 0)
(define-fun in_range22 ((x Int)) Bool (and (<= 1 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE22 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check22 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE22 (us_image) Int)
(declare-fun user_eq31 (dayst dayst) Bool)
(declare-const dummy31 dayst)
(declare-datatypes () ((dayst__ref (mk_dayst__ref (dayst__content dayst)))))
(define-fun dayst__ref___projection ((a dayst__ref)) dayst (dayst__content a))
(declare-fun to_rep13 (dayst) Int)
(declare-fun of_rep13 (Int) dayst)
(assert (forall ((x dayst)) (! (= (of_rep13 (to_rep13 x)) x) :pattern ((to_rep13 x)))))
(assert (forall ((x dayst)) (! (in_range22 (to_rep13 x)) :pattern ((to_rep13 x)))))
(assert (forall ((x Int)) (! (=> (in_range22 x) (= (to_rep13 (of_rep13 x)) x)) :pattern ((to_rep13 (of_rep13 x))))))
(declare-sort millisecst 0)
(define-fun in_range23 ((x Int)) Bool (and (<= 0 x) (<= x 86399999)))
(declare-fun attr__ATTRIBUTE_IMAGE23 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check23 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE23 (us_image) Int)
(declare-fun user_eq32 (millisecst millisecst) Bool)
(declare-const dummy32 millisecst)
(declare-datatypes () ((millisecst__ref (mk_millisecst__ref (millisecst__content millisecst)))))
(define-fun millisecst__ref___projection ((a millisecst__ref)) millisecst (millisecst__content a))
(declare-fun to_rep14 (millisecst) Int)
(declare-fun of_rep14 (Int) millisecst)
(assert (forall ((x millisecst)) (! (= (of_rep14 (to_rep14 x)) x) :pattern ((to_rep14 x)))))
(assert (forall ((x millisecst)) (! (in_range23 (to_rep14 x)) :pattern ((to_rep14 x)))))
(assert (forall ((x Int)) (! (=> (in_range23 x) (= (to_rep14 (of_rep14 x)) x)) :pattern ((to_rep14 (of_rep14 x))))))
(declare-datatypes () ((us_split_fields10 (mk___split_fields5 (rec__clock__timet__year yearst) (rec__clock__timet__month monthst) (rec__clock__timet__day dayst) (rec__clock__timet__millisec millisecst)))))
(define-fun us_split_fields_Year__projection ((a us_split_fields10)) yearst (rec__clock__timet__year a))
(define-fun us_split_fields_Month__projection ((a us_split_fields10)) monthst (rec__clock__timet__month a))
(define-fun us_split_fields_Day__projection ((a us_split_fields10)) dayst (rec__clock__timet__day a))
(define-fun us_split_fields_MilliSec__projection ((a us_split_fields10)) millisecst (rec__clock__timet__millisec a))
(declare-datatypes () ((us_split_fields__ref5 (mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref5)) us_split_fields10 (us_split_fields__content5 a))
(declare-datatypes () ((us_rep6 (mk___rep5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___4__projection ((a us_rep6)) us_split_fields10 (us_split_fields11 a))
(define-fun bool_eq12 ((a us_rep6) (b us_rep6)) Bool (ite (and (and (and (= (to_rep11 (rec__clock__timet__year (us_split_fields11 a))) (to_rep11 (rec__clock__timet__year (us_split_fields11 b)))) (= (to_rep12 (rec__clock__timet__month (us_split_fields11 a))) (to_rep12 (rec__clock__timet__month (us_split_fields11 b))))) (= (to_rep13 (rec__clock__timet__day (us_split_fields11 a))) (to_rep13 (rec__clock__timet__day (us_split_fields11 b))))) (= (to_rep14 (rec__clock__timet__millisec (us_split_fields11 a))) (to_rep14 (rec__clock__timet__millisec (us_split_fields11 b))))) true false))
(declare-const value__size10 Int)
(declare-fun object__size10 (us_rep6) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 (us_rep6) Int)
(assert (<= 0 value__size10))
(assert (forall ((a us_rep6)) (<= 0 (object__size10 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a us_rep6)) (<= 0 (object__alignment10 a))))
(declare-const clock__timet__year__first__bit Int)
(declare-const clock__timet__year__last__bit Int)
(declare-const clock__timet__year__position Int)
(assert (<= 0 clock__timet__year__first__bit))
(assert (< clock__timet__year__first__bit clock__timet__year__last__bit))
(assert (<= 0 clock__timet__year__position))
(declare-const clock__timet__month__first__bit Int)
(declare-const clock__timet__month__last__bit Int)
(declare-const clock__timet__month__position Int)
(assert (<= 0 clock__timet__month__first__bit))
(assert (< clock__timet__month__first__bit clock__timet__month__last__bit))
(assert (<= 0 clock__timet__month__position))
(declare-const clock__timet__day__first__bit Int)
(declare-const clock__timet__day__last__bit Int)
(declare-const clock__timet__day__position Int)
(assert (<= 0 clock__timet__day__first__bit))
(assert (< clock__timet__day__first__bit clock__timet__day__last__bit))
(assert (<= 0 clock__timet__day__position))
(declare-const clock__timet__millisec__first__bit Int)
(declare-const clock__timet__millisec__last__bit Int)
(declare-const clock__timet__millisec__position Int)
(assert (<= 0 clock__timet__millisec__first__bit))
(assert (< clock__timet__millisec__first__bit clock__timet__millisec__last__bit))
(assert (<= 0 clock__timet__millisec__position))
(declare-fun user_eq33 (us_rep6 us_rep6) Bool)
(declare-const dummy33 us_rep6)
(declare-datatypes () ((timet__ref (mk_timet__ref (timet__content us_rep6)))))
(define-fun timet__ref___projection ((a timet__ref)) us_rep6 (timet__content a))
(declare-sort algorithmt 0)
(define-fun in_range24 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE24 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check24 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE24 (us_image) Int)
(declare-fun user_eq34 (algorithmt algorithmt) Bool)
(declare-const dummy34 algorithmt)
(declare-datatypes () ((algorithmt__ref (mk_algorithmt__ref (algorithmt__content algorithmt)))))
(define-fun algorithmt__ref___projection ((a algorithmt__ref)) algorithmt (algorithmt__content a))
(declare-fun to_rep15 (algorithmt) Int)
(declare-fun of_rep15 (Int) algorithmt)
(assert (forall ((x algorithmt)) (! (= (of_rep15 (to_rep15 x)) x) :pattern ((to_rep15 x)))))
(assert (forall ((x algorithmt)) (! (in_range24 (to_rep15 x)) :pattern ((to_rep15 x)))))
(assert (forall ((x Int)) (! (=> (in_range24 x) (= (to_rep15 (of_rep15 x)) x)) :pattern ((to_rep15 (of_rep15 x))))))
(declare-sort namecountt 0)
(define-fun in_range25 ((x Int)) Bool (and (<= 0 x) (<= x 40)))
(declare-fun attr__ATTRIBUTE_IMAGE25 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check25 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE25 (us_image) Int)
(declare-fun user_eq35 (namecountt namecountt) Bool)
(declare-const dummy35 namecountt)
(declare-datatypes () ((namecountt__ref (mk_namecountt__ref (namecountt__content namecountt)))))
(define-fun namecountt__ref___projection ((a namecountt__ref)) namecountt (namecountt__content a))
(declare-fun to_rep16 (namecountt) Int)
(declare-fun of_rep16 (Int) namecountt)
(assert (forall ((x namecountt)) (! (= (of_rep16 (to_rep16 x)) x) :pattern ((to_rep16 x)))))
(assert (forall ((x namecountt)) (! (in_range25 (to_rep16 x)) :pattern ((to_rep16 x)))))
(assert (forall ((x Int)) (! (=> (in_range25 x) (= (to_rep16 (of_rep16 x)) x)) :pattern ((to_rep16 (of_rep16 x))))))
(declare-const dummy36 (Array Int character))
(declare-const value__size11 Int)
(declare-fun object__size11 ((Array Int character)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int character)) Int)
(declare-const value__alignment11 Int)
(declare-fun object__alignment11 ((Array Int character)) Int)
(assert (<= 0 value__size11))
(assert (forall ((a (Array Int character))) (<= 0 (object__size11 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment11))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment11 a))))
(declare-fun user_eq36 ((Array Int character) (Array Int character)) Bool)
(declare-sort issueridt 0)
(define-fun in_range26 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE26 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check26 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE26 (us_image) Int)
(declare-fun user_eq37 (issueridt issueridt) Bool)
(declare-const dummy37 issueridt)
(declare-datatypes () ((issueridt__ref (mk_issueridt__ref (issueridt__content issueridt)))))
(define-fun issueridt__ref___projection ((a issueridt__ref)) issueridt (issueridt__content a))
(declare-fun to_rep17 (issueridt) Int)
(declare-fun of_rep17 (Int) issueridt)
(assert (forall ((x issueridt)) (! (= (of_rep17 (to_rep17 x)) x) :pattern ((to_rep17 x)))))
(assert (forall ((x issueridt)) (! (in_range26 (to_rep17 x)) :pattern ((to_rep17 x)))))
(assert (forall ((x Int)) (! (=> (in_range26 x) (= (to_rep17 (of_rep17 x)) x)) :pattern ((to_rep17 (of_rep17 x))))))
(declare-datatypes () ((us_split_fields12 (mk___split_fields6 (rec__cryptotypes__issuert__id issueridt) (rec__cryptotypes__issuert__namelength namecountt) (rec__cryptotypes__issuert__name (Array Int character))))))
(define-fun us_split_fields_ID__projection ((a us_split_fields12)) issueridt (rec__cryptotypes__issuert__id a))
(define-fun us_split_fields_NameLength__projection ((a us_split_fields12)) namecountt (rec__cryptotypes__issuert__namelength a))
(define-fun us_split_fields_Name__projection ((a us_split_fields12)) (Array Int character) (rec__cryptotypes__issuert__name a))
(declare-datatypes () ((us_split_fields__ref6 (mk___split_fields__ref6 (us_split_fields__content6 us_split_fields12)))))
(define-fun us_split_fields__ref___6__projection ((a us_split_fields__ref6)) us_split_fields12 (us_split_fields__content6 a))
(declare-datatypes () ((us_rep7 (mk___rep6 (us_split_fields13 us_split_fields12)))))
(define-fun us_rep___7__projection ((a us_rep7)) us_split_fields12 (us_split_fields13 a))
(define-fun bool_eq13 ((a us_rep7) (b us_rep7)) Bool (ite (and (and (= (to_rep17 (rec__cryptotypes__issuert__id (us_split_fields13 a))) (to_rep17 (rec__cryptotypes__issuert__id (us_split_fields13 b)))) (= (to_rep16 (rec__cryptotypes__issuert__namelength (us_split_fields13 a))) (to_rep16 (rec__cryptotypes__issuert__namelength (us_split_fields13 b))))) (= (bool_eq (rec__cryptotypes__issuert__name (us_split_fields13 a)) 1 40 (rec__cryptotypes__issuert__name (us_split_fields13 b)) 1 40) true)) true false))
(declare-const value__size12 Int)
(declare-fun object__size12 (us_rep7) Int)
(declare-const value__alignment12 Int)
(declare-fun object__alignment12 (us_rep7) Int)
(assert (<= 0 value__size12))
(assert (forall ((a us_rep7)) (<= 0 (object__size12 a))))
(assert (<= 0 value__alignment12))
(assert (forall ((a us_rep7)) (<= 0 (object__alignment12 a))))
(declare-const cryptotypes__issuert__id__first__bit Int)
(declare-const cryptotypes__issuert__id__last__bit Int)
(declare-const cryptotypes__issuert__id__position Int)
(assert (<= 0 cryptotypes__issuert__id__first__bit))
(assert (< cryptotypes__issuert__id__first__bit cryptotypes__issuert__id__last__bit))
(assert (<= 0 cryptotypes__issuert__id__position))
(declare-const cryptotypes__issuert__namelength__first__bit Int)
(declare-const cryptotypes__issuert__namelength__last__bit Int)
(declare-const cryptotypes__issuert__namelength__position Int)
(assert (<= 0 cryptotypes__issuert__namelength__first__bit))
(assert (< cryptotypes__issuert__namelength__first__bit cryptotypes__issuert__namelength__last__bit))
(assert (<= 0 cryptotypes__issuert__namelength__position))
(declare-const cryptotypes__issuert__name__first__bit Int)
(declare-const cryptotypes__issuert__name__last__bit Int)
(declare-const cryptotypes__issuert__name__position Int)
(assert (<= 0 cryptotypes__issuert__name__first__bit))
(assert (< cryptotypes__issuert__name__first__bit cryptotypes__issuert__name__last__bit))
(assert (<= 0 cryptotypes__issuert__name__position))
(declare-fun user_eq38 (us_rep7 us_rep7) Bool)
(declare-const dummy38 us_rep7)
(declare-datatypes () ((issuert__ref (mk_issuert__ref (issuert__content us_rep7)))))
(define-fun issuert__ref___projection ((a issuert__ref)) us_rep7 (issuert__content a))
(declare-sort serialnumbert 0)
(define-fun in_range27 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE27 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check27 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE27 (us_image) Int)
(declare-fun user_eq39 (serialnumbert serialnumbert) Bool)
(declare-const dummy39 serialnumbert)
(declare-datatypes () ((serialnumbert__ref (mk_serialnumbert__ref (serialnumbert__content serialnumbert)))))
(define-fun serialnumbert__ref___projection ((a serialnumbert__ref)) serialnumbert (serialnumbert__content a))
(declare-fun to_rep18 (serialnumbert) Int)
(declare-fun of_rep18 (Int) serialnumbert)
(assert (forall ((x serialnumbert)) (! (= (of_rep18 (to_rep18 x)) x) :pattern ((to_rep18 x)))))
(assert (forall ((x serialnumbert)) (! (in_range27 (to_rep18 x)) :pattern ((to_rep18 x)))))
(assert (forall ((x Int)) (! (=> (in_range27 x) (= (to_rep18 (of_rep18 x)) x)) :pattern ((to_rep18 (of_rep18 x))))))
(declare-datatypes () ((us_split_fields14 (mk___split_fields7 (rec__certtypes__idt__issuer us_rep7) (rec__certtypes__idt__serialnumber serialnumbert)))))
(define-fun us_split_fields_Issuer__projection ((a us_split_fields14)) us_rep7 (rec__certtypes__idt__issuer a))
(define-fun us_split_fields_SerialNumber__projection ((a us_split_fields14)) serialnumbert (rec__certtypes__idt__serialnumber a))
(declare-datatypes () ((us_split_fields__ref7 (mk___split_fields__ref7 (us_split_fields__content7 us_split_fields14)))))
(define-fun us_split_fields__ref___13__projection ((a us_split_fields__ref7)) us_split_fields14 (us_split_fields__content7 a))
(declare-datatypes () ((us_rep8 (mk___rep7 (us_split_fields15 us_split_fields14)))))
(define-fun us_rep___14__projection ((a us_rep8)) us_split_fields14 (us_split_fields15 a))
(define-fun bool_eq14 ((a us_rep8) (b us_rep8)) Bool (ite (and (= (bool_eq13 (rec__certtypes__idt__issuer (us_split_fields15 a)) (rec__certtypes__idt__issuer (us_split_fields15 b))) true) (= (to_rep18 (rec__certtypes__idt__serialnumber (us_split_fields15 a))) (to_rep18 (rec__certtypes__idt__serialnumber (us_split_fields15 b))))) true false))
(declare-const value__size13 Int)
(declare-fun object__size13 (us_rep8) Int)
(declare-const value__alignment13 Int)
(declare-fun object__alignment13 (us_rep8) Int)
(assert (<= 0 value__size13))
(assert (forall ((a us_rep8)) (<= 0 (object__size13 a))))
(assert (<= 0 value__alignment13))
(assert (forall ((a us_rep8)) (<= 0 (object__alignment13 a))))
(declare-const certtypes__idt__issuer__first__bit Int)
(declare-const certtypes__idt__issuer__last__bit Int)
(declare-const certtypes__idt__issuer__position Int)
(assert (<= 0 certtypes__idt__issuer__first__bit))
(assert (< certtypes__idt__issuer__first__bit certtypes__idt__issuer__last__bit))
(assert (<= 0 certtypes__idt__issuer__position))
(declare-const certtypes__idt__serialnumber__first__bit Int)
(declare-const certtypes__idt__serialnumber__last__bit Int)
(declare-const certtypes__idt__serialnumber__position Int)
(assert (<= 0 certtypes__idt__serialnumber__first__bit))
(assert (< certtypes__idt__serialnumber__first__bit certtypes__idt__serialnumber__last__bit))
(assert (<= 0 certtypes__idt__serialnumber__position))
(declare-fun user_eq40 (us_rep8 us_rep8) Bool)
(declare-const dummy40 us_rep8)
(declare-datatypes () ((idt__ref (mk_idt__ref (idt__content us_rep8)))))
(define-fun idt__ref___projection ((a idt__ref)) us_rep8 (idt__content a))
(declare-datatypes () ((us_split_fields16 (mk___split_fields8 (rec__cert__attr__auth__contentst__id us_rep8) (rec__cert__attr__auth__contentst__notbefore us_rep6) (rec__cert__attr__auth__contentst__notafter us_rep6) (rec__cert__attr__auth__contentst__mechanism algorithmt) (rec__cert__attr__auth__contentst__basecertid us_rep8) (rec__cert__attr__auth__contentst__role privileget) (rec__cert__attr__auth__contentst__clearance us_rep5)))))
(define-fun us_split_fields_ID__5__projection ((a us_split_fields16)) us_rep8 (rec__cert__attr__auth__contentst__id a))
(define-fun us_split_fields_NotBefore__3__projection ((a us_split_fields16)) us_rep6 (rec__cert__attr__auth__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__3__projection ((a us_split_fields16)) us_rep6 (rec__cert__attr__auth__contentst__notafter a))
(define-fun us_split_fields_Mechanism__3__projection ((a us_split_fields16)) algorithmt (rec__cert__attr__auth__contentst__mechanism a))
(define-fun us_split_fields_BaseCertID__2__projection ((a us_split_fields16)) us_rep8 (rec__cert__attr__auth__contentst__basecertid a))
(define-fun us_split_fields_Role__projection ((a us_split_fields16)) privileget (rec__cert__attr__auth__contentst__role a))
(define-fun us_split_fields_Clearance__projection ((a us_split_fields16)) us_rep5 (rec__cert__attr__auth__contentst__clearance a))
(declare-datatypes () ((us_split_fields__ref8 (mk___split_fields__ref8 (us_split_fields__content8 us_split_fields16)))))
(define-fun us_split_fields__ref___17__projection ((a us_split_fields__ref8)) us_split_fields16 (us_split_fields__content8 a))
(declare-datatypes () ((us_rep9 (mk___rep8 (us_split_fields17 us_split_fields16)))))
(define-fun us_rep___18__projection ((a us_rep9)) us_split_fields16 (us_split_fields17 a))
(define-fun bool_eq15 ((a us_rep9) (b us_rep9)) Bool (ite (and (and (and (and (and (and (= (bool_eq14 (rec__cert__attr__auth__contentst__id (us_split_fields17 a)) (rec__cert__attr__auth__contentst__id (us_split_fields17 b))) true) (= (bool_eq12 (rec__cert__attr__auth__contentst__notbefore (us_split_fields17 a)) (rec__cert__attr__auth__contentst__notbefore (us_split_fields17 b))) true)) (= (bool_eq12 (rec__cert__attr__auth__contentst__notafter (us_split_fields17 a)) (rec__cert__attr__auth__contentst__notafter (us_split_fields17 b))) true)) (= (to_rep15 (rec__cert__attr__auth__contentst__mechanism (us_split_fields17 a))) (to_rep15 (rec__cert__attr__auth__contentst__mechanism (us_split_fields17 b))))) (= (bool_eq14 (rec__cert__attr__auth__contentst__basecertid (us_split_fields17 a)) (rec__cert__attr__auth__contentst__basecertid (us_split_fields17 b))) true)) (= (to_rep3 (rec__cert__attr__auth__contentst__role (us_split_fields17 a))) (to_rep3 (rec__cert__attr__auth__contentst__role (us_split_fields17 b))))) (= (bool_eq11 (rec__cert__attr__auth__contentst__clearance (us_split_fields17 a)) (rec__cert__attr__auth__contentst__clearance (us_split_fields17 b))) true)) true false))
(declare-const value__size14 Int)
(declare-fun object__size14 (us_rep9) Int)
(declare-const value__alignment14 Int)
(declare-fun object__alignment14 (us_rep9) Int)
(assert (<= 0 value__size14))
(assert (forall ((a us_rep9)) (<= 0 (object__size14 a))))
(assert (<= 0 value__alignment14))
(assert (forall ((a us_rep9)) (<= 0 (object__alignment14 a))))
(declare-const cert__attr__auth__contentst__id__first__bit Int)
(declare-const cert__attr__auth__contentst__id__last__bit Int)
(declare-const cert__attr__auth__contentst__id__position Int)
(assert (<= 0 cert__attr__auth__contentst__id__first__bit))
(assert (< cert__attr__auth__contentst__id__first__bit cert__attr__auth__contentst__id__last__bit))
(assert (<= 0 cert__attr__auth__contentst__id__position))
(declare-const cert__attr__auth__contentst__notbefore__first__bit Int)
(declare-const cert__attr__auth__contentst__notbefore__last__bit Int)
(declare-const cert__attr__auth__contentst__notbefore__position Int)
(assert (<= 0 cert__attr__auth__contentst__notbefore__first__bit))
(assert (< cert__attr__auth__contentst__notbefore__first__bit cert__attr__auth__contentst__notbefore__last__bit))
(assert (<= 0 cert__attr__auth__contentst__notbefore__position))
(declare-const cert__attr__auth__contentst__notafter__first__bit Int)
(declare-const cert__attr__auth__contentst__notafter__last__bit Int)
(declare-const cert__attr__auth__contentst__notafter__position Int)
(assert (<= 0 cert__attr__auth__contentst__notafter__first__bit))
(assert (< cert__attr__auth__contentst__notafter__first__bit cert__attr__auth__contentst__notafter__last__bit))
(assert (<= 0 cert__attr__auth__contentst__notafter__position))
(declare-const cert__attr__auth__contentst__mechanism__first__bit Int)
(declare-const cert__attr__auth__contentst__mechanism__last__bit Int)
(declare-const cert__attr__auth__contentst__mechanism__position Int)
(assert (<= 0 cert__attr__auth__contentst__mechanism__first__bit))
(assert (< cert__attr__auth__contentst__mechanism__first__bit cert__attr__auth__contentst__mechanism__last__bit))
(assert (<= 0 cert__attr__auth__contentst__mechanism__position))
(declare-const cert__attr__auth__contentst__basecertid__first__bit Int)
(declare-const cert__attr__auth__contentst__basecertid__last__bit Int)
(declare-const cert__attr__auth__contentst__basecertid__position Int)
(assert (<= 0 cert__attr__auth__contentst__basecertid__first__bit))
(assert (< cert__attr__auth__contentst__basecertid__first__bit cert__attr__auth__contentst__basecertid__last__bit))
(assert (<= 0 cert__attr__auth__contentst__basecertid__position))
(declare-const cert__attr__auth__contentst__role__first__bit Int)
(declare-const cert__attr__auth__contentst__role__last__bit Int)
(declare-const cert__attr__auth__contentst__role__position Int)
(assert (<= 0 cert__attr__auth__contentst__role__first__bit))
(assert (< cert__attr__auth__contentst__role__first__bit cert__attr__auth__contentst__role__last__bit))
(assert (<= 0 cert__attr__auth__contentst__role__position))
(declare-const cert__attr__auth__contentst__clearance__first__bit Int)
(declare-const cert__attr__auth__contentst__clearance__last__bit Int)
(declare-const cert__attr__auth__contentst__clearance__position Int)
(assert (<= 0 cert__attr__auth__contentst__clearance__first__bit))
(assert (< cert__attr__auth__contentst__clearance__first__bit cert__attr__auth__contentst__clearance__last__bit))
(assert (<= 0 cert__attr__auth__contentst__clearance__position))
(declare-fun user_eq41 (us_rep9 us_rep9) Bool)
(declare-const dummy41 us_rep9)
(declare-datatypes () ((contentst__ref (mk_contentst__ref (contentst__content us_rep9)))))
(define-fun contentst__ref___3__projection ((a contentst__ref)) us_rep9 (contentst__content a))
(declare-datatypes () ((us_split_fields18 (mk___split_fields9 (rec__admintoken__validauthcertt__valid Bool) (rec__admintoken__validauthcertt__contents us_rep9)))))
(define-fun us_split_fields_Valid__projection ((a us_split_fields18)) Bool (rec__admintoken__validauthcertt__valid a))
(define-fun us_split_fields_Contents__projection ((a us_split_fields18)) us_rep9 (rec__admintoken__validauthcertt__contents a))
(declare-datatypes () ((us_split_fields__ref9 (mk___split_fields__ref9 (us_split_fields__content9 us_split_fields18)))))
(define-fun us_split_fields__ref___19__projection ((a us_split_fields__ref9)) us_split_fields18 (us_split_fields__content9 a))
(declare-datatypes () ((us_rep10 (mk___rep9 (us_split_fields19 us_split_fields18)))))
(define-fun us_rep___20__projection ((a us_rep10)) us_split_fields18 (us_split_fields19 a))
(define-fun bool_eq16 ((a us_rep10) (b us_rep10)) Bool (ite (and (= (rec__admintoken__validauthcertt__valid (us_split_fields19 a)) (rec__admintoken__validauthcertt__valid (us_split_fields19 b))) (= (bool_eq15 (rec__admintoken__validauthcertt__contents (us_split_fields19 a)) (rec__admintoken__validauthcertt__contents (us_split_fields19 b))) true)) true false))
(declare-const value__size15 Int)
(declare-fun object__size15 (us_rep10) Int)
(declare-const value__alignment15 Int)
(declare-fun object__alignment15 (us_rep10) Int)
(assert (<= 0 value__size15))
(assert (forall ((a us_rep10)) (<= 0 (object__size15 a))))
(assert (<= 0 value__alignment15))
(assert (forall ((a us_rep10)) (<= 0 (object__alignment15 a))))
(declare-const admintoken__validauthcertt__valid__first__bit Int)
(declare-const admintoken__validauthcertt__valid__last__bit Int)
(declare-const admintoken__validauthcertt__valid__position Int)
(assert (<= 0 admintoken__validauthcertt__valid__first__bit))
(assert (< admintoken__validauthcertt__valid__first__bit admintoken__validauthcertt__valid__last__bit))
(assert (<= 0 admintoken__validauthcertt__valid__position))
(declare-const admintoken__validauthcertt__contents__first__bit Int)
(declare-const admintoken__validauthcertt__contents__last__bit Int)
(declare-const admintoken__validauthcertt__contents__position Int)
(assert (<= 0 admintoken__validauthcertt__contents__first__bit))
(assert (< admintoken__validauthcertt__contents__first__bit admintoken__validauthcertt__contents__last__bit))
(assert (<= 0 admintoken__validauthcertt__contents__position))
(declare-fun user_eq42 (us_rep10 us_rep10) Bool)
(declare-const dummy42 us_rep10)
(declare-datatypes () ((validauthcertt__ref (mk_validauthcertt__ref (validauthcertt__content us_rep10)))))
(define-fun validauthcertt__ref___projection ((a validauthcertt__ref)) us_rep10 (validauthcertt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-sort keyidt 0)
(define-fun in_range28 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE28 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check28 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE28 (us_image) Int)
(declare-fun user_eq43 (keyidt keyidt) Bool)
(declare-const dummy43 keyidt)
(declare-datatypes () ((keyidt__ref (mk_keyidt__ref (keyidt__content keyidt)))))
(define-fun keyidt__ref___projection ((a keyidt__ref)) keyidt (keyidt__content a))
(declare-fun to_rep19 (keyidt) Int)
(declare-fun of_rep19 (Int) keyidt)
(assert (forall ((x keyidt)) (! (= (of_rep19 (to_rep19 x)) x) :pattern ((to_rep19 x)))))
(assert (forall ((x keyidt)) (! (in_range28 (to_rep19 x)) :pattern ((to_rep19 x)))))
(assert (forall ((x Int)) (! (=> (in_range28 x) (= (to_rep19 (of_rep19 x)) x)) :pattern ((to_rep19 (of_rep19 x))))))
(declare-sort keylengtht 0)
(define-fun in_range29 ((x Int)) Bool (and (<= 0 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE29 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check29 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE29 (us_image) Int)
(declare-fun user_eq44 (keylengtht keylengtht) Bool)
(declare-const dummy44 keylengtht)
(declare-datatypes () ((keylengtht__ref (mk_keylengtht__ref (keylengtht__content keylengtht)))))
(define-fun keylengtht__ref___projection ((a keylengtht__ref)) keylengtht (keylengtht__content a))
(declare-fun to_rep20 (keylengtht) Int)
(declare-fun of_rep20 (Int) keylengtht)
(assert (forall ((x keylengtht)) (! (= (of_rep20 (to_rep20 x)) x) :pattern ((to_rep20 x)))))
(assert (forall ((x keylengtht)) (! (in_range29 (to_rep20 x)) :pattern ((to_rep20 x)))))
(assert (forall ((x Int)) (! (=> (in_range29 x) (= (to_rep20 (of_rep20 x)) x)) :pattern ((to_rep20 (of_rep20 x))))))
(declare-datatypes () ((us_split_fields20 (mk___split_fields10 (rec__cryptotypes__keypartt__algorithmid algorithmt) (rec__cryptotypes__keypartt__keyid keyidt) (rec__cryptotypes__keypartt__keylength keylengtht)))))
(define-fun us_split_fields_AlgorithmID__projection ((a us_split_fields20)) algorithmt (rec__cryptotypes__keypartt__algorithmid a))
(define-fun us_split_fields_KeyID__projection ((a us_split_fields20)) keyidt (rec__cryptotypes__keypartt__keyid a))
(define-fun us_split_fields_KeyLength__projection ((a us_split_fields20)) keylengtht (rec__cryptotypes__keypartt__keylength a))
(declare-datatypes () ((us_split_fields__ref10 (mk___split_fields__ref10 (us_split_fields__content10 us_split_fields20)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref10)) us_split_fields20 (us_split_fields__content10 a))
(declare-datatypes () ((us_rep11 (mk___rep10 (us_split_fields21 us_split_fields20)))))
(define-fun us_rep___8__projection ((a us_rep11)) us_split_fields20 (us_split_fields21 a))
(define-fun bool_eq17 ((a us_rep11) (b us_rep11)) Bool (ite (and (and (= (to_rep15 (rec__cryptotypes__keypartt__algorithmid (us_split_fields21 a))) (to_rep15 (rec__cryptotypes__keypartt__algorithmid (us_split_fields21 b)))) (= (to_rep19 (rec__cryptotypes__keypartt__keyid (us_split_fields21 a))) (to_rep19 (rec__cryptotypes__keypartt__keyid (us_split_fields21 b))))) (= (to_rep20 (rec__cryptotypes__keypartt__keylength (us_split_fields21 a))) (to_rep20 (rec__cryptotypes__keypartt__keylength (us_split_fields21 b))))) true false))
(declare-const value__size16 Int)
(declare-fun object__size16 (us_rep11) Int)
(declare-const value__alignment16 Int)
(declare-fun object__alignment16 (us_rep11) Int)
(assert (<= 0 value__size16))
(assert (forall ((a us_rep11)) (<= 0 (object__size16 a))))
(assert (<= 0 value__alignment16))
(assert (forall ((a us_rep11)) (<= 0 (object__alignment16 a))))
(declare-const cryptotypes__keypartt__algorithmid__first__bit Int)
(declare-const cryptotypes__keypartt__algorithmid__last__bit Int)
(declare-const cryptotypes__keypartt__algorithmid__position Int)
(assert (<= 0 cryptotypes__keypartt__algorithmid__first__bit))
(assert (< cryptotypes__keypartt__algorithmid__first__bit cryptotypes__keypartt__algorithmid__last__bit))
(assert (<= 0 cryptotypes__keypartt__algorithmid__position))
(declare-const cryptotypes__keypartt__keyid__first__bit Int)
(declare-const cryptotypes__keypartt__keyid__last__bit Int)
(declare-const cryptotypes__keypartt__keyid__position Int)
(assert (<= 0 cryptotypes__keypartt__keyid__first__bit))
(assert (< cryptotypes__keypartt__keyid__first__bit cryptotypes__keypartt__keyid__last__bit))
(assert (<= 0 cryptotypes__keypartt__keyid__position))
(declare-const cryptotypes__keypartt__keylength__first__bit Int)
(declare-const cryptotypes__keypartt__keylength__last__bit Int)
(declare-const cryptotypes__keypartt__keylength__position Int)
(assert (<= 0 cryptotypes__keypartt__keylength__first__bit))
(assert (< cryptotypes__keypartt__keylength__first__bit cryptotypes__keypartt__keylength__last__bit))
(assert (<= 0 cryptotypes__keypartt__keylength__position))
(declare-fun user_eq45 (us_rep11 us_rep11) Bool)
(declare-const dummy45 us_rep11)
(declare-datatypes () ((keypartt__ref (mk_keypartt__ref (keypartt__content us_rep11)))))
(define-fun keypartt__ref___projection ((a keypartt__ref)) us_rep11 (keypartt__content a))
(declare-datatypes () ((us_split_fields22 (mk___split_fields11 (rec__cert__id__contentst__id us_rep8) (rec__cert__id__contentst__notbefore us_rep6) (rec__cert__id__contentst__notafter us_rep6) (rec__cert__id__contentst__mechanism algorithmt) (rec__cert__id__contentst__subject us_rep7) (rec__cert__id__contentst__subjectpublickey us_rep11)))))
(define-fun us_split_fields_ID__6__projection ((a us_split_fields22)) us_rep8 (rec__cert__id__contentst__id a))
(define-fun us_split_fields_NotBefore__4__projection ((a us_split_fields22)) us_rep6 (rec__cert__id__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__4__projection ((a us_split_fields22)) us_rep6 (rec__cert__id__contentst__notafter a))
(define-fun us_split_fields_Mechanism__4__projection ((a us_split_fields22)) algorithmt (rec__cert__id__contentst__mechanism a))
(define-fun us_split_fields_Subject__projection ((a us_split_fields22)) us_rep7 (rec__cert__id__contentst__subject a))
(define-fun us_split_fields_SubjectPublicKey__projection ((a us_split_fields22)) us_rep11 (rec__cert__id__contentst__subjectpublickey a))
(declare-datatypes () ((us_split_fields__ref11 (mk___split_fields__ref11 (us_split_fields__content11 us_split_fields22)))))
(define-fun us_split_fields__ref___18__projection ((a us_split_fields__ref11)) us_split_fields22 (us_split_fields__content11 a))
(declare-datatypes () ((us_rep12 (mk___rep11 (us_split_fields23 us_split_fields22)))))
(define-fun us_rep___19__projection ((a us_rep12)) us_split_fields22 (us_split_fields23 a))
(define-fun bool_eq18 ((a us_rep12) (b us_rep12)) Bool (ite (and (and (and (and (and (= (bool_eq14 (rec__cert__id__contentst__id (us_split_fields23 a)) (rec__cert__id__contentst__id (us_split_fields23 b))) true) (= (bool_eq12 (rec__cert__id__contentst__notbefore (us_split_fields23 a)) (rec__cert__id__contentst__notbefore (us_split_fields23 b))) true)) (= (bool_eq12 (rec__cert__id__contentst__notafter (us_split_fields23 a)) (rec__cert__id__contentst__notafter (us_split_fields23 b))) true)) (= (to_rep15 (rec__cert__id__contentst__mechanism (us_split_fields23 a))) (to_rep15 (rec__cert__id__contentst__mechanism (us_split_fields23 b))))) (= (bool_eq13 (rec__cert__id__contentst__subject (us_split_fields23 a)) (rec__cert__id__contentst__subject (us_split_fields23 b))) true)) (= (bool_eq17 (rec__cert__id__contentst__subjectpublickey (us_split_fields23 a)) (rec__cert__id__contentst__subjectpublickey (us_split_fields23 b))) true)) true false))
(declare-const value__size17 Int)
(declare-fun object__size17 (us_rep12) Int)
(declare-const value__alignment17 Int)
(declare-fun object__alignment17 (us_rep12) Int)
(assert (<= 0 value__size17))
(assert (forall ((a us_rep12)) (<= 0 (object__size17 a))))
(assert (<= 0 value__alignment17))
(assert (forall ((a us_rep12)) (<= 0 (object__alignment17 a))))
(declare-const cert__id__contentst__id__first__bit Int)
(declare-const cert__id__contentst__id__last__bit Int)
(declare-const cert__id__contentst__id__position Int)
(assert (<= 0 cert__id__contentst__id__first__bit))
(assert (< cert__id__contentst__id__first__bit cert__id__contentst__id__last__bit))
(assert (<= 0 cert__id__contentst__id__position))
(declare-const cert__id__contentst__notbefore__first__bit Int)
(declare-const cert__id__contentst__notbefore__last__bit Int)
(declare-const cert__id__contentst__notbefore__position Int)
(assert (<= 0 cert__id__contentst__notbefore__first__bit))
(assert (< cert__id__contentst__notbefore__first__bit cert__id__contentst__notbefore__last__bit))
(assert (<= 0 cert__id__contentst__notbefore__position))
(declare-const cert__id__contentst__notafter__first__bit Int)
(declare-const cert__id__contentst__notafter__last__bit Int)
(declare-const cert__id__contentst__notafter__position Int)
(assert (<= 0 cert__id__contentst__notafter__first__bit))
(assert (< cert__id__contentst__notafter__first__bit cert__id__contentst__notafter__last__bit))
(assert (<= 0 cert__id__contentst__notafter__position))
(declare-const cert__id__contentst__mechanism__first__bit Int)
(declare-const cert__id__contentst__mechanism__last__bit Int)
(declare-const cert__id__contentst__mechanism__position Int)
(assert (<= 0 cert__id__contentst__mechanism__first__bit))
(assert (< cert__id__contentst__mechanism__first__bit cert__id__contentst__mechanism__last__bit))
(assert (<= 0 cert__id__contentst__mechanism__position))
(declare-const cert__id__contentst__subject__first__bit Int)
(declare-const cert__id__contentst__subject__last__bit Int)
(declare-const cert__id__contentst__subject__position Int)
(assert (<= 0 cert__id__contentst__subject__first__bit))
(assert (< cert__id__contentst__subject__first__bit cert__id__contentst__subject__last__bit))
(assert (<= 0 cert__id__contentst__subject__position))
(declare-const cert__id__contentst__subjectpublickey__first__bit Int)
(declare-const cert__id__contentst__subjectpublickey__last__bit Int)
(declare-const cert__id__contentst__subjectpublickey__position Int)
(assert (<= 0 cert__id__contentst__subjectpublickey__first__bit))
(assert (< cert__id__contentst__subjectpublickey__first__bit cert__id__contentst__subjectpublickey__last__bit))
(assert (<= 0 cert__id__contentst__subjectpublickey__position))
(declare-fun user_eq46 (us_rep12 us_rep12) Bool)
(declare-const dummy46 us_rep12)
(declare-datatypes () ((contentst__ref1 (mk_contentst__ref1 (contentst__content1 us_rep12)))))
(define-fun contentst__ref___4__projection ((a contentst__ref1)) us_rep12 (contentst__content1 a))
(declare-datatypes () ((us_split_fields24 (mk___split_fields12 (rec__admintoken__valididcertt__valid Bool) (rec__admintoken__valididcertt__contents us_rep12)))))
(define-fun us_split_fields_Valid__2__projection ((a us_split_fields24)) Bool (rec__admintoken__valididcertt__valid a))
(define-fun us_split_fields_Contents__2__projection ((a us_split_fields24)) us_rep12 (rec__admintoken__valididcertt__contents a))
(declare-datatypes () ((us_split_fields__ref12 (mk___split_fields__ref12 (us_split_fields__content12 us_split_fields24)))))
(define-fun us_split_fields__ref___20__projection ((a us_split_fields__ref12)) us_split_fields24 (us_split_fields__content12 a))
(declare-datatypes () ((us_rep13 (mk___rep12 (us_split_fields25 us_split_fields24)))))
(define-fun us_rep___21__projection ((a us_rep13)) us_split_fields24 (us_split_fields25 a))
(define-fun bool_eq19 ((a us_rep13) (b us_rep13)) Bool (ite (and (= (rec__admintoken__valididcertt__valid (us_split_fields25 a)) (rec__admintoken__valididcertt__valid (us_split_fields25 b))) (= (bool_eq18 (rec__admintoken__valididcertt__contents (us_split_fields25 a)) (rec__admintoken__valididcertt__contents (us_split_fields25 b))) true)) true false))
(declare-const value__size18 Int)
(declare-fun object__size18 (us_rep13) Int)
(declare-const value__alignment18 Int)
(declare-fun object__alignment18 (us_rep13) Int)
(assert (<= 0 value__size18))
(assert (forall ((a us_rep13)) (<= 0 (object__size18 a))))
(assert (<= 0 value__alignment18))
(assert (forall ((a us_rep13)) (<= 0 (object__alignment18 a))))
(declare-const admintoken__valididcertt__valid__first__bit Int)
(declare-const admintoken__valididcertt__valid__last__bit Int)
(declare-const admintoken__valididcertt__valid__position Int)
(assert (<= 0 admintoken__valididcertt__valid__first__bit))
(assert (< admintoken__valididcertt__valid__first__bit admintoken__valididcertt__valid__last__bit))
(assert (<= 0 admintoken__valididcertt__valid__position))
(declare-const admintoken__valididcertt__contents__first__bit Int)
(declare-const admintoken__valididcertt__contents__last__bit Int)
(declare-const admintoken__valididcertt__contents__position Int)
(assert (<= 0 admintoken__valididcertt__contents__first__bit))
(assert (< admintoken__valididcertt__contents__first__bit admintoken__valididcertt__contents__last__bit))
(assert (<= 0 admintoken__valididcertt__contents__position))
(declare-fun user_eq47 (us_rep13 us_rep13) Bool)
(declare-const dummy47 us_rep13)
(declare-datatypes () ((valididcertt__ref (mk_valididcertt__ref (valididcertt__content us_rep13)))))
(define-fun valididcertt__ref___projection ((a valididcertt__ref)) us_rep13 (valididcertt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-fun theauthcertrole (Int us_private Int Int us_split_fields18 us_split_fields24) Int)
(declare-fun theauthcertrole__function_guard (Int Int us_private Int Int us_split_fields18 us_split_fields24) Bool)
(declare-fun therole (us_rep9) Int)
(declare-fun therole__function_guard (Int us_rep9) Bool)
(assert (forall ((admintoken__tokenpresence Int) (admintoken__tokentry Int) (admintoken__tokenid Int)) (forall ((admintoken__state us_private)) (forall ((admintoken__authcert__fields us_split_fields18)) (forall ((admintoken__idcert__fields us_split_fields24)) (! (=> (and (and (dynamic_invariant admintoken__tokenpresence true true true) (dynamic_invariant7 admintoken__tokentry true true true)) (dynamic_invariant6 admintoken__tokenid true true true)) (dynamic_invariant2 (theauthcertrole admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields) true false true)) :pattern ((theauthcertrole admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields))))))))
(assert (forall ((admintoken__tokenpresence Int) (admintoken__tokentry Int) (admintoken__tokenid Int)) (forall ((admintoken__state us_private)) (forall ((admintoken__authcert__fields us_split_fields18)) (forall ((admintoken__idcert__fields us_split_fields24)) (! (=> (and (and (dynamic_invariant admintoken__tokenpresence true true true) (dynamic_invariant7 admintoken__tokentry true true true)) (dynamic_invariant6 admintoken__tokenid true true true)) (= (theauthcertrole admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields) (therole (rec__admintoken__validauthcertt__contents (us_split_fields19 (mk___rep9 admintoken__authcert__fields)))))) :pattern ((theauthcertrole admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields))))))))
(declare-fun isgood (Int us_private Int Int us_split_fields18 us_split_fields24) Bool)
(declare-fun isgood__function_guard (Bool Int us_private Int Int us_split_fields18 us_split_fields24) Bool)
(assert true)
(assert (forall ((admintoken__tokenpresence Int) (admintoken__tokentry Int) (admintoken__tokenid Int)) (forall ((admintoken__state us_private)) (forall ((admintoken__authcert__fields us_split_fields18)) (forall ((admintoken__idcert__fields us_split_fields24)) (! (= (= (isgood admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields) true) (= (rec__admintoken__valididcertt__valid (us_split_fields25 (mk___rep12 admintoken__idcert__fields))) true)) :pattern ((isgood admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields))))))))
(declare-fun authcertvalid (Int us_private Int Int us_split_fields18 us_split_fields24) Bool)
(declare-fun authcertvalid__function_guard (Bool Int us_private Int Int us_split_fields18 us_split_fields24) Bool)
(assert true)
(assert (forall ((admintoken__tokenpresence Int) (admintoken__tokentry Int) (admintoken__tokenid Int)) (forall ((admintoken__state us_private)) (forall ((admintoken__authcert__fields us_split_fields18)) (forall ((admintoken__idcert__fields us_split_fields24)) (! (= (= (authcertvalid admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields) true) (= (rec__admintoken__validauthcertt__valid (us_split_fields19 (mk___rep9 admintoken__authcert__fields))) true)) :pattern ((authcertvalid admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields))))))))
(declare-fun extractuser (Int us_private Int Int us_split_fields18 us_split_fields24) (Array Int character))
(declare-fun extractuser__function_guard ((Array Int character) Int us_private Int Int us_split_fields18 us_split_fields24) Bool)
(assert true)
(declare-sort statust1 0)
(define-fun in_range30 ((x Int)) Bool (and (<= 0 x) (<= x 8)))
(declare-fun attr__ATTRIBUTE_IMAGE30 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check30 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE30 (us_image) Int)
(declare-fun user_eq48 (statust1 statust1) Bool)
(declare-const dummy48 statust1)
(declare-datatypes () ((statust__ref1 (mk_statust__ref1 (statust__content1 statust1)))))
(define-fun statust__ref___2__projection ((a statust__ref1)) statust1 (statust__content1 a))
(define-fun dynamic_invariant8 ((temp___expr_2612 Int) (temp___is_init_2609 Bool) (temp___skip_constant_2610 Bool) (temp___do_toplevel_2611 Bool)) Bool (=> (or (= temp___is_init_2609 true) (<= 0 8)) (in_range30 temp___expr_2612)))
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-fun adminopcanstart (Int us_split_fields2 Int us_private Int Int us_split_fields18 us_split_fields24) Bool)
(declare-fun adminopcanstart__function_guard (Bool Int us_split_fields2 Int us_private Int Int us_split_fields18 us_split_fields24) Bool)
(declare-fun ispresent1 (Int us_private Int Int us_split_fields18 us_split_fields24) Bool)
(declare-fun ispresent__function_guard1 (Bool Int us_private Int Int us_split_fields18 us_split_fields24) Bool)
(assert true)
(assert (forall ((enclave__status Int) (admintoken__tokenpresence Int) (admintoken__tokentry Int) (admintoken__tokenid Int)) (forall ((enclave__startadminactivity__theadmin__fields us_split_fields2)) (forall ((admintoken__state us_private)) (forall ((admintoken__authcert__fields us_split_fields18)) (forall ((admintoken__idcert__fields us_split_fields24)) (! (= (= (adminopcanstart enclave__status enclave__startadminactivity__theadmin__fields admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields) true) (and (and (= (ispresent (mk___rep1 enclave__startadminactivity__theadmin__fields)) true) (= enclave__status 3)) (= (ispresent1 admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields) true))) :pattern ((adminopcanstart enclave__status enclave__startadminactivity__theadmin__fields admintoken__tokenpresence admintoken__state admintoken__tokentry admintoken__tokenid admintoken__authcert__fields admintoken__idcert__fields)))))))))
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(define-fun dynamic_invariant9 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant10 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant11 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant12 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(assert true)
(assert true)
(define-fun dynamic_invariant13 ((temp___expr_200 Int) (temp___is_init_197 Bool) (temp___skip_constant_198 Bool) (temp___do_toplevel_199 Bool)) Bool (=> (or (= temp___is_init_197 true) (<= 1 3)) (in_range10 temp___expr_200)))
(define-fun dynamic_invariant14 ((temp___expr_206 Int) (temp___is_init_203 Bool) (temp___skip_constant_204 Bool) (temp___do_toplevel_205 Bool)) Bool (=> (or (= temp___is_init_203 true) (<= 0 5)) (in_range19 temp___expr_206)))
(define-fun dynamic_invariant15 ((temp___expr_368 Int) (temp___is_init_365 Bool) (temp___skip_constant_366 Bool) (temp___do_toplevel_367 Bool)) Bool (=> (or (= temp___is_init_365 true) (<= 0 78)) (in_range6 temp___expr_368)))
(define-fun dynamic_invariant16 ((temp___expr_374 Int) (temp___is_init_371 Bool) (temp___skip_constant_372 Bool) (temp___do_toplevel_373 Bool)) Bool (=> (or (= temp___is_init_371 true) (<= 1 78)) (in_range5 temp___expr_374)))
(assert true)
(define-fun dynamic_invariant17 ((temp___expr_924 Int) (temp___is_init_921 Bool) (temp___skip_constant_922 Bool) (temp___do_toplevel_923 Bool)) Bool (=> (or (= temp___is_init_921 true) (<= 0 40)) (in_range25 temp___expr_924)))
(define-fun dynamic_invariant18 ((temp___expr_945 Int) (temp___is_init_942 Bool) (temp___skip_constant_943 Bool) (temp___do_toplevel_944 Bool)) Bool (=> (or (= temp___is_init_942 true) (<= 0 4294967295)) (in_range26 temp___expr_945)))
(define-fun dynamic_invariant19 ((temp___expr_967 Int) (temp___is_init_964 Bool) (temp___skip_constant_965 Bool) (temp___do_toplevel_966 Bool)) Bool (=> (or (= temp___is_init_964 true) (<= 0 10)) (in_range24 temp___expr_967)))
(define-fun dynamic_invariant20 ((temp___expr_979 Int) (temp___is_init_976 Bool) (temp___skip_constant_977 Bool) (temp___do_toplevel_978 Bool)) Bool (=> (or (= temp___is_init_976 true) (<= 0 4294967295)) (in_range28 temp___expr_979)))
(define-fun dynamic_invariant21 ((temp___expr_985 Int) (temp___is_init_982 Bool) (temp___skip_constant_983 Bool) (temp___do_toplevel_984 Bool)) Bool (=> (or (= temp___is_init_982 true) (<= 0 128)) (in_range29 temp___expr_985)))
(define-fun dynamic_invariant22 ((temp___expr_1105 Int) (temp___is_init_1102 Bool) (temp___skip_constant_1103 Bool) (temp___do_toplevel_1104 Bool)) Bool (=> (or (= temp___is_init_1102 true) (<= 0 17)) (in_range14 temp___expr_1105)))
(define-fun dynamic_invariant23 ((temp___expr_1084 Int) (temp___is_init_1081 Bool) (temp___skip_constant_1082 Bool) (temp___do_toplevel_1083 Bool)) Bool (=> (or (= temp___is_init_1081 true) (<= 1 17)) (in_range12 temp___expr_1084)))
(define-fun dynamic_invariant24 ((temp___expr_1209 Int) (temp___is_init_1206 Bool) (temp___skip_constant_1207 Bool) (temp___do_toplevel_1208 Bool)) Bool (=> (or (= temp___is_init_1206 true) (<= 0 2)) (in_range16 temp___expr_1209)))
(define-fun dynamic_invariant25 ((temp___expr_1090 Int) (temp___is_init_1087 Bool) (temp___skip_constant_1088 Bool) (temp___do_toplevel_1089 Bool)) Bool (=> (or (= temp___is_init_1087 true) (<= 0 17408)) (in_range13 temp___expr_1090)))
(define-fun dynamic_invariant26 ((temp___expr_1124 Int) (temp___is_init_1121 Bool) (temp___skip_constant_1122 Bool) (temp___do_toplevel_1123 Bool)) Bool (=> (or (= temp___is_init_1121 true) (<= 0 1024)) (in_range15 temp___expr_1124)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep2)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep7 (rec__auditlog__logfilelistt__length (us_split_fields5 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep7 (rec__auditlog__logfilelistt__length (us_split_fields5 usedlogfiles))) 1) 1024) (to_rep8 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(define-fun dynamic_invariant27 ((temp___expr_510 Int) (temp___is_init_507 Bool) (temp___skip_constant_508 Bool) (temp___do_toplevel_509 Bool)) Bool (=> (or (= temp___is_init_507 true) (<= 1901 2099)) (in_range20 temp___expr_510)))
(define-fun dynamic_invariant28 ((temp___expr_516 Int) (temp___is_init_513 Bool) (temp___skip_constant_514 Bool) (temp___do_toplevel_515 Bool)) Bool (=> (or (= temp___is_init_513 true) (<= 1 12)) (in_range21 temp___expr_516)))
(define-fun dynamic_invariant29 ((temp___expr_522 Int) (temp___is_init_519 Bool) (temp___skip_constant_520 Bool) (temp___do_toplevel_521 Bool)) Bool (=> (or (= temp___is_init_519 true) (<= 1 31)) (in_range22 temp___expr_522)))
(define-fun dynamic_invariant30 ((temp___expr_546 Int) (temp___is_init_543 Bool) (temp___skip_constant_544 Bool) (temp___do_toplevel_545 Bool)) Bool (=> (or (= temp___is_init_543 true) (<= 0 86399999)) (in_range23 temp___expr_546)))
(define-fun dynamic_invariant31 ((temp___expr_1375 Int) (temp___is_init_1372 Bool) (temp___skip_constant_1373 Bool) (temp___do_toplevel_1374 Bool)) Bool (=> (or (= temp___is_init_1372 true) (<= 0 4294967295)) (in_range27 temp___expr_1375)))
(assert (forall ((contents us_rep9)) (! (dynamic_invariant2 (therole contents) true false true) :pattern ((therole contents)))))
(assert (forall ((contents us_rep9)) (! (= (therole contents) (to_rep3 (rec__cert__attr__auth__contentst__role (us_split_fields17 contents)))) :pattern ((therole contents)))))
(declare-const logfiles (Array Int us_rep4))
(declare-const logfilesstatus (Array Int filestatust))
(declare-const logfilestate__split_fields logfileindext)
(declare-const logfilestate__split_fields1 logentrycountt)
(declare-const logfilestate__split_fields2 (Array Int logfileindext))
(declare-const logfilestate__split_fields3 logfileindext)
(declare-const logfilestate__split_fields4 logfileindext)
(declare-const logfilestate__split_fields5 logfilecountt)
(declare-const logfilestate__split_fields6 (Array Int fileentrycountt))
(declare-const auditalarm Int)
(declare-const auditsystemfault Bool)
(declare-const tokenpresence Int)
(declare-const tokentry Int)
(declare-const tokenid Int)
(declare-const authcert__split_fields us_split_fields__ref9)
(declare-const idcert__split_fields us_split_fields__ref12)
(declare-const theadmin__split_fields privileget)
(declare-const theadmin__split_fields1 opandnullt)
(declare-const status Int)
(declare-const keyeddatapresence Int)
(declare-const theop Int)
(declare-const filestate us_private)
(declare-const state us_private)
(declare-const state1 us_private)
(declare-const state2 us_private__ref)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Bool)
(declare-const o4 Bool)
(declare-const o5 Bool)
(declare-const o6 Bool)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 (Array Int character))
(declare-const o10 (Array Int character))
(declare-const o11 Int)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Bool)
(declare-const o15 Bool)
(declare-const o16 Bool)
(declare-const o17 Bool)
(declare-const o18 Int)
(declare-const o19 Bool)
(declare-const o20 Bool)
(declare-const o21 Bool)
(declare-const o22 Bool)
(declare-const o23 Bool)
(declare-const o24 Int)
(declare-const o25 Int)
(declare-const o26 Bool)
(declare-const o27 Bool)
(declare-const o28 Bool)
(declare-const o29 Bool)
(declare-const o30 Int)
(declare-const o31 Int)
(declare-const o32 Bool)
(declare-const o33 Bool)
(declare-const o34 Bool)
(declare-const o35 Bool)
(declare-const o36 Int)
(declare-const o37 Bool)
(declare-const o38 Bool)
(declare-const o39 Bool)
(declare-const logfiles1 (Array Int us_rep4))
(declare-const logfilesstatus1 (Array Int filestatust))
(declare-const logfilestate__split_fields7 us_split_fields6)
(declare-const auditalarm1 Int)
(declare-const auditsystemfault1 Bool)
(declare-const theadmin__split_fields2 us_split_fields2)
(declare-const status1 Int)
(declare-const theop1 Int)
(declare-const filestate1 us_private)
(declare-const state3 us_private)
(declare-const state4 us_private)
(declare-const result Bool)
(declare-const result1 Bool)
(declare-const result2 Bool)
(declare-const keyeddatapresence1 Int)
(declare-const keyeddata__split_fields us_split_fields)
(declare-const result3 int__ref)
(declare-const theop2 Int)
(declare-const result4 int__ref)
(declare-const status2 Int)
(declare-const logfilestate__split_fields8 us_split_fields6)
(declare-const auditalarm2 Int)
(declare-const state5 us_private)
(declare-const theadmin__split_fields3 us_split_fields2)
(declare-const logfiles2 (Array Int us_rep4))
(declare-const logfilesstatus2 (Array Int filestatust))
(declare-const logfilestate__split_fields9 us_split_fields6)
(declare-const auditalarm3 Int)
(declare-const auditsystemfault2 Bool)
(declare-const filestate2 us_private)
(declare-const state6 us_private)
(declare-const logfilestate__split_fields10 us_split_fields6)
(declare-const auditalarm4 Int)
(declare-const state7 us_private)
(declare-const logfiles3 (Array Int us_rep4))
(declare-const logfilesstatus3 (Array Int filestatust))
(declare-const logfilestate__split_fields11 us_split_fields6)
(declare-const auditalarm5 Int)
(declare-const auditsystemfault3 Bool)
(declare-const filestate3 us_private)
(declare-const state8 us_private)
(declare-const logfiles4 map__ref3)
(declare-const logfilesstatus4 map__ref4)
(declare-const logfilestate__split_fields12 us_split_fields__ref3)
(declare-const auditalarm6 int__ref)
(declare-const auditsystemfault4 bool__ref)
(declare-const theadmin__split_fields4 us_split_fields__ref1)
(declare-const status3 int__ref)
(declare-const keyeddatapresence2 int__ref)
(declare-const keyeddata__split_fields1 us_split_fields__ref)
(declare-const theop3 int__ref)
(declare-const filestate4 us_private__ref)
(declare-const state9 us_private__ref)
(declare-const state10 us_private__ref)
(declare-const logfiles5 (Array Int us_rep4))
(declare-const logfilesstatus5 (Array Int filestatust))
(declare-const logfilestate__split_fields13 us_split_fields6)
(declare-const auditalarm7 Int)
(declare-const auditsystemfault5 Bool)
(declare-const theadmin__split_fields5 us_split_fields2)
(declare-const status4 Int)
(declare-const keyeddatapresence3 Int)
(declare-const keyeddata__split_fields2 us_split_fields)
(declare-const theop4 Int)
(declare-const filestate5 us_private)
(declare-const state11 us_private)
(declare-const state12 us_private)
(declare-const result5 Bool)
(declare-const result6 Bool)
(declare-const result7 Bool)
(declare-const result8 Bool)
(assert (in_range30 status))
(assert (in_range4 tokenpresence))
(assert (in_range18 tokentry))
(assert (in_range17 tokenid))
(assert (= (valid_numberlogentries (to_rep5 logfilestate__split_fields) (to_rep6 logfilestate__split_fields1) (mk___rep2 (mk___split_fields2 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6) true))
(assert (in_range11 auditalarm))
(assert (and (and (and (and (and (and (= (adminopcanstart status (mk___split_fields1 theadmin__split_fields theadmin__split_fields1) tokenpresence state1 tokentry tokenid (us_split_fields__content9 authcert__split_fields) (us_split_fields__content12 idcert__split_fields)) true) (= status 3)) (= (ispresent (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1))) true)) (not (= (isdoingop (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1))) true))) (=> (= (rolepresent (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1))) 1) (and (and (= (isgood tokenpresence state1 tokentry tokenid (us_split_fields__content9 authcert__split_fields) (us_split_fields__content12 idcert__split_fields)) true) (= (authcertvalid tokenpresence state1 tokentry tokenid (us_split_fields__content9 authcert__split_fields) (us_split_fields__content12 idcert__split_fields)) true)) (= (theauthcertrole tokenpresence state1 tokentry tokenid (us_split_fields__content9 authcert__split_fields) (us_split_fields__content12 idcert__split_fields)) 1)))) (=> (and (= (isdoingop (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1))) true) (= (thecurrentop (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1))) 3)) (= (rolepresent (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1))) 1))) (=> (= (rolepresent (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1))) 1) (or (and (= (isdoingop (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1))) true) (= (thecurrentop (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1))) 3)) (not (= (isdoingop (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1))) true))))))
(assert (=> (<= 0 1) (in_range4 keyeddatapresence)))
(assert (=> (<= 0 4) (in_range7 theop)))
(assert (in_range4 keyeddatapresence1))
(assert (=> (= keyeddatapresence1 0) (and (= o7 (opisavailable (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1)) (mk___rep keyeddata__split_fields))) (and (in_range7 o7) (ite (= (ite (exists ((op Int)) (and (and (<= 1 op) (<= op 4)) (and (and (= (str_comp (mk___rep keyeddata__split_fields) op) true) (= (allowedop (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1)) op) true)) (= o7 op)))) true (= o7 0)) true) (ite (= (ite (exists ((op Int)) (and (and (<= 1 op) (<= op 4)) (and (and (= (str_comp (mk___rep keyeddata__split_fields) op) true) (= (allowedop (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1)) op) true)) (= o7 op)))) (= o7 0) false) false) true false) false)))))
(assert (=> (= keyeddatapresence1 0) (= result3 (mk_int__ref theop))))
(assert (=> (= keyeddatapresence1 0) (= theop2 o7)))
(assert (=> (= keyeddatapresence1 0) (=> (not (= theop2 0)) (= result4 (mk_int__ref status)))))
(assert (=> (= keyeddatapresence1 0) (=> (not (= theop2 0)) (= status2 6))))
(assert (=> (= keyeddatapresence1 0) (=> (not (= theop2 0)) (and (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields8)) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields8)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields8) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields8)) true) (in_range11 auditalarm2)))))
(assert (=> (= keyeddatapresence1 0) (=> (not (= theop2 0)) (and (= o8 theop2) (in_range8 theop2)))))
(assert (=> (= keyeddatapresence1 0) (=> (not (= theop2 0)) (and (and (and (= (rolepresent (mk___rep1 theadmin__split_fields3)) (rolepresent (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1)))) (= (ispresent (mk___rep1 theadmin__split_fields3)) true)) (= (isdoingop (mk___rep1 theadmin__split_fields3)) true)) (= (thecurrentop (mk___rep1 theadmin__split_fields3)) o8)))))
(assert (=> (= keyeddatapresence1 0) (=> (not (= theop2 0)) (= o9 (extractuser tokenpresence state1 tokentry tokenid (us_split_fields__content9 authcert__split_fields) (us_split_fields__content12 idcert__split_fields))))))
(assert (=> (= keyeddatapresence1 0) (=> (not (= theop2 0)) (and (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields9)) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields9)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields9) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields9)) true) (in_range11 auditalarm3)))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (and (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields10)) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields10)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields10) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields10)) true) (in_range11 auditalarm4)))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= o10 (extractuser tokenpresence state1 tokentry tokenid (us_split_fields__content9 authcert__split_fields) (us_split_fields__content12 idcert__split_fields))))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (and (= (valid_numberlogentries (to_rep5 (rec__auditlog__logfilestatet__currentlogfile logfilestate__split_fields11)) (to_rep6 (rec__auditlog__logfilestatet__numberlogentries logfilestate__split_fields11)) (rec__auditlog__logfilestatet__usedlogfiles logfilestate__split_fields11) (rec__auditlog__logfilestatet__logfileentries logfilestate__split_fields11)) true) (in_range11 auditalarm5)))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= (let ((subject state2)) (mk___private__ref state5)) (let ((subject state2)) (mk___private__ref state7))))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= state6 state8))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= filestate2 filestate3))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= status2 status))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= theadmin__split_fields3 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1)))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= auditsystemfault2 auditsystemfault3))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= auditalarm3 auditalarm5))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= logfilestate__split_fields9 logfilestate__split_fields11))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= logfilesstatus2 logfilesstatus3))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= logfiles2 logfiles3))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= state5 state7))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= state6 state8))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= filestate2 filestate3))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= status2 status1))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= theadmin__split_fields3 theadmin__split_fields2))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= auditsystemfault2 auditsystemfault3))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= auditalarm3 auditalarm5))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= logfilestate__split_fields9 logfilestate__split_fields11))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= logfilesstatus2 logfilesstatus3))))
(assert (=> (= keyeddatapresence1 0) (=> (= theop2 0) (= logfiles2 logfiles3))))
(assert (=> (not (= keyeddatapresence1 0)) (= (let ((subject state2)) (mk___private__ref state5)) state2)))
(assert (=> (not (= keyeddatapresence1 0)) (= state6 state)))
(assert (=> (not (= keyeddatapresence1 0)) (= filestate2 filestate)))
(assert (=> (not (= keyeddatapresence1 0)) (= theop2 theop)))
(assert (=> (not (= keyeddatapresence1 0)) (= status2 status)))
(assert (=> (not (= keyeddatapresence1 0)) (= theadmin__split_fields3 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1))))
(assert (=> (not (= keyeddatapresence1 0)) (= auditsystemfault2 auditsystemfault)))
(assert (=> (not (= keyeddatapresence1 0)) (= auditalarm3 auditalarm)))
(assert (=> (not (= keyeddatapresence1 0)) (= logfilestate__split_fields9 (mk___split_fields3 logfilestate__split_fields logfilestate__split_fields1 (mk___rep2 (mk___split_fields2 logfilestate__split_fields2 logfilestate__split_fields3 logfilestate__split_fields4 logfilestate__split_fields5)) logfilestate__split_fields6))))
(assert (=> (not (= keyeddatapresence1 0)) (= logfilesstatus2 logfilesstatus)))
(assert (=> (not (= keyeddatapresence1 0)) (= logfiles2 logfiles)))
(assert (=> (not (= keyeddatapresence1 0)) (= state5 state4)))
(assert (=> (not (= keyeddatapresence1 0)) (= state6 state3)))
(assert (=> (not (= keyeddatapresence1 0)) (= filestate2 filestate1)))
(assert (=> (not (= keyeddatapresence1 0)) (= theop2 theop1)))
(assert (=> (not (= keyeddatapresence1 0)) (= status2 status1)))
(assert (=> (not (= keyeddatapresence1 0)) (= theadmin__split_fields3 theadmin__split_fields2)))
(assert (=> (not (= keyeddatapresence1 0)) (= auditsystemfault2 auditsystemfault1)))
(assert (=> (not (= keyeddatapresence1 0)) (= auditalarm3 auditalarm1)))
(assert (=> (not (= keyeddatapresence1 0)) (= logfilestate__split_fields9 logfilestate__split_fields7)))
(assert (=> (not (= keyeddatapresence1 0)) (= logfilesstatus2 logfilesstatus1)))
(assert (=> (not (= keyeddatapresence1 0)) (= logfiles2 logfiles1)))
(assert (= state10 (let ((subject state2)) (mk___private__ref state5))))
(assert (= state9 (mk___private__ref state6)))
(assert (= filestate4 (mk___private__ref filestate2)))
(assert (= theop3 (mk_int__ref theop2)))
(assert (= keyeddata__split_fields1 (mk___split_fields__ref keyeddata__split_fields)))
(assert (= keyeddatapresence2 (mk_int__ref keyeddatapresence1)))
(assert (= status3 (mk_int__ref status2)))
(assert (= theadmin__split_fields4 (mk___split_fields__ref1 theadmin__split_fields3)))
(assert (= auditsystemfault4 (mk_bool__ref auditsystemfault2)))
(assert (= auditalarm6 (mk_int__ref auditalarm3)))
(assert (= logfilestate__split_fields12 (mk___split_fields__ref3 logfilestate__split_fields9)))
(assert (= logfilesstatus4 (mk_map__ref4 logfilesstatus2)))
(assert (= logfiles4 (mk_map__ref3 logfiles2)))
(assert (= state12 state5))
(assert (= state11 state6))
(assert (= filestate5 filestate2))
(assert (= theop4 theop2))
(assert (= keyeddata__split_fields2 keyeddata__split_fields))
(assert (= keyeddatapresence3 keyeddatapresence1))
(assert (= status4 status2))
(assert (= theadmin__split_fields5 theadmin__split_fields3))
(assert (= auditsystemfault5 auditsystemfault2))
(assert (= auditalarm7 auditalarm3))
(assert (= logfilestate__split_fields13 logfilestate__split_fields9))
(assert (= logfilesstatus5 logfilesstatus2))
(assert (= logfiles5 logfiles2))
(assert (=> (= (int__content status3) 8) (and (= o36 (rolepresent (mk___rep1 (us_split_fields__content1 theadmin__split_fields4)))) (and (in_range9 o36) (= o36 (to_rep3 (rec__admin__t__rolepresent (us_split_fields__content1 theadmin__split_fields4))))))))
(assert (=> (= (int__content status3) 8) (= o37 (ite (= o36 0) true false))))
(assert (=> (= (int__content status3) 8) (and (= o35 (isdoingop (mk___rep1 (us_split_fields__content1 theadmin__split_fields4)))) (= (= o35 true) (in_range8 (to_rep4 (rec__admin__t__currentop (us_split_fields__content1 theadmin__split_fields4))))))))
(assert (=> (= (int__content status3) 8) (= o38 (ite (not (= o35 true)) true false))))
(assert (=> (= (int__content status3) 8) (= o39 (ite (= o38 true) o37 false))))
(assert (=> (not (= (int__content status3) 8)) (= o39 (of_int 1))))
(assert (=> (= (int__content status3) 3) (and (= o30 (rolepresent (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1)))) (and (in_range9 o30) (= o30 (to_rep3 theadmin__split_fields))))))
(assert (=> (= (int__content status3) 3) (and (= o31 (rolepresent (mk___rep1 (us_split_fields__content1 theadmin__split_fields4)))) (and (in_range9 o31) (= o31 (to_rep3 (rec__admin__t__rolepresent (us_split_fields__content1 theadmin__split_fields4))))))))
(assert (=> (= (int__content status3) 3) (= o32 (ite (= o31 o30) true false))))
(assert (=> (= (int__content status3) 3) (and (= o29 (isdoingop (mk___rep1 (us_split_fields__content1 theadmin__split_fields4)))) (= (= o29 true) (in_range8 (to_rep4 (rec__admin__t__currentop (us_split_fields__content1 theadmin__split_fields4))))))))
(assert (=> (= (int__content status3) 3) (= o33 (ite (not (= o29 true)) true false))))
(assert (=> (= (int__content status3) 3) (= o34 (ite (= o33 true) o32 false))))
(assert (=> (not (= (int__content status3) 3)) (= o34 (of_int 1))))
(assert (=> (=> (not (= (int__content status3) 6)) (= (int__content status3) 7)) (and (= o24 (rolepresent (mk___rep1 (mk___split_fields1 theadmin__split_fields theadmin__split_fields1)))) (and (in_range9 o24) (= o24 (to_rep3 theadmin__split_fields))))))
(assert (=> (=> (not (= (int__content status3) 6)) (= (int__content status3) 7)) (and (= o25 (rolepresent (mk___rep1 (us_split_fields__content1 theadmin__split_fields4)))) (and (in_range9 o25) (= o25 (to_rep3 (rec__admin__t__rolepresent (us_split_fields__content1 theadmin__split_fields4))))))))
(assert (=> (=> (not (= (int__content status3) 6)) (= (int__content status3) 7)) (= o26 (ite (= o25 o24) true false))))
(assert (=> (=> (not (= (int__content status3) 6)) (= (int__content status3) 7)) (and (= o22 (ispresent (mk___rep1 (us_split_fields__content1 theadmin__split_fields4)))) (= (= o22 true) (in_range10 (to_rep3 (rec__admin__t__rolepresent (us_split_fields__content1 theadmin__split_fields4))))))))
(assert (=> (=> (not (= (int__content status3) 6)) (= (int__content status3) 7)) (and (= o23 (isdoingop (mk___rep1 (us_split_fields__content1 theadmin__split_fields4)))) (= (= o23 true) (in_range8 (to_rep4 (rec__admin__t__currentop (us_split_fields__content1 theadmin__split_fields4))))))))
(assert (=> (=> (not (= (int__content status3) 6)) (= (int__content status3) 7)) (= o27 (ite (= o23 true) o22 false))))
(assert (=> (=> (not (= (int__content status3) 6)) (= (int__content status3) 7)) (= o28 (ite (= o27 true) o26 false))))
(assert (=> (not (=> (not (= (int__content status3) 6)) (= (int__content status3) 7))) (= o28 (of_int 1))))
(assert (not (= (isdoingop (mk___rep1 (us_split_fields__content1 theadmin__split_fields4))) true)))
(check-sat)
(exit)
