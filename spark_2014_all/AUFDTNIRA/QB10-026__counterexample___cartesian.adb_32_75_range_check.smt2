(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range2 temp___expr_33)))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (integer Int) (Array Int integer))
(assert (forall ((v integer)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int Int) Int)
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq2 (us_t us_t) Bool)
(declare-const dummy2 us_t)
(declare-datatypes () ((integer_array__ref (mk_integer_array__ref (integer_array__content us_t)))))
(define-fun integer_array__ref___projection ((a integer_array__ref)) us_t (integer_array__content a))
(define-fun dynamic_invariant1 ((temp___expr_137 us_t) (temp___is_init_134 Bool) (temp___skip_constant_135 Bool) (temp___do_toplevel_136 Bool)) Bool (=> (not (= temp___skip_constant_135 true)) (dynamic_property 0 2147483647 (first1 temp___expr_137) (last1 temp___expr_137))))
(declare-const dummy3 (Array Int integer))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int integer)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int integer)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int integer)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq3 ((Array Int integer) (Array Int integer)) Bool)
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int (Array Int integer)))))))
(declare-fun slide1 ((Array Int (Array Int integer)) Int Int) (Array Int (Array Int integer)))
(assert (forall ((a (Array Int (Array Int integer)))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int (Array Int integer)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int (Array Int integer)) Int Int (Array Int (Array Int integer)) Int Int) (Array Int (Array Int integer)))
(assert (forall ((a (Array Int (Array Int integer))) (b (Array Int (Array Int integer)))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 ((Array Int integer) Int) (Array Int (Array Int integer)))
(assert (forall ((v (Array Int integer))) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq2 ((a (Array Int (Array Int integer))) (a__first Int) (a__last Int) (b (Array Int (Array Int integer))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_133 Int)) (=> (and (<= a__first temp___idx_133) (<= temp___idx_133 a__last)) (= (bool_eq (select a temp___idx_133) 1 2 (select b (+ (- b__first a__first) temp___idx_133)) 1 2) true)))) true false))
(assert (forall ((a (Array Int (Array Int integer))) (b (Array Int (Array Int integer)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_133 Int)) (=> (and (<= a__first temp___idx_133) (<= temp___idx_133 a__last)) (= (bool_eq (select a temp___idx_133) 1 2 (select b (+ (- b__first a__first) temp___idx_133)) 1 2) true))))))))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int (Array Int integer))) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int (Array Int integer)) (elts1 a))
(define-fun of_array1 ((a (Array Int (Array Int integer))) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int (Array Int integer))) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int (Array Int integer))) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int (Array Int integer))) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq2 (elts1 x) (to_rep (first2 (rt1 x))) (to_rep (last2 (rt1 x))) (elts1 y) (to_rep (first2 (rt1 y))) (to_rep (last2 (rt1 y)))))
(declare-fun user_eq4 (us_t1 us_t1) Bool)
(declare-const dummy4 us_t1)
(declare-datatypes () ((integer_product_type__ref (mk_integer_product_type__ref (integer_product_type__content us_t1)))))
(define-fun integer_product_type__ref___projection ((a integer_product_type__ref)) us_t1 (integer_product_type__content a))
(declare-fun in_array__2 ((Array Int integer) us_t1) Bool)
(declare-fun in_array__2__function_guard (Bool (Array Int integer) us_t1) Bool)
(declare-sort tpair_typeD1 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq5 (tpair_typeD1 tpair_typeD1) Bool)
(declare-const dummy5 tpair_typeD1)
(declare-datatypes () ((tpair_typeD1__ref (mk_tpair_typeD1__ref (tpair_typeD1__content tpair_typeD1)))))
(define-fun tpair_typeD1__ref___projection ((a tpair_typeD1__ref)) tpair_typeD1 (tpair_typeD1__content a))
(define-fun dynamic_invariant2 ((temp___expr_151 us_t1) (temp___is_init_148 Bool) (temp___skip_constant_149 Bool) (temp___do_toplevel_150 Bool)) Bool (=> (not (= temp___skip_constant_149 true)) (dynamic_property1 0 2147483647 (first3 temp___expr_151) (last3 temp___expr_151))))
(assert true)
(assert (forall ((element (Array Int integer))) (forall ((arr us_t1)) (! (= (= (in_array__2 element arr) true) (exists ((i Int)) (and (and (<= (first3 arr) i) (<= i (last3 arr))) (= (let ((temp___163 (select (to_array1 arr) i))) (bool_eq temp___163 1 2 element 1 2)) true)))) :pattern ((in_array__2 element arr))))))
(declare-const array1 us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const array2 us_t)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const result_length Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((tTresultSP1__ref (mk_tTresultSP1__ref (tTresultSP1__content integer)))))
(define-fun tTresultSP1__ref___projection ((a tTresultSP1__ref)) integer (tTresultSP1__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first4 (mk2 f l))) f) (= (to_rep (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int (Array Int integer))) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int (Array Int integer)) (elts2 a))
(define-fun of_array2 ((a (Array Int (Array Int integer))) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int (Array Int integer))) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int (Array Int integer))) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int (Array Int integer))) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq4 ((x us_t2) (y us_t2)) Bool (bool_eq2 (elts2 x) (to_rep (first4 (rt2 x))) (to_rep (last4 (rt2 x))) (elts2 y) (to_rep (first4 (rt2 y))) (to_rep (last4 (rt2 y)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((tresultS__ref (mk_tresultS__ref (tresultS__content us_t2)))))
(define-fun tresultS__ref___projection ((a tresultS__ref)) us_t2 (tresultS__content a))
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t5b__ref (mk_t5b__ref (t5b__content integer)))))
(define-fun t5b__ref___projection ((a t5b__ref)) integer (t5b__content a))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first6 (mk3 f l))) f) (= (to_rep (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property4 range_first range_last low) (dynamic_property4 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int (Array Int integer))) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int (Array Int integer)) (elts3 a))
(define-fun of_array3 ((a (Array Int (Array Int integer))) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int (Array Int integer))) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int (Array Int integer))) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int (Array Int integer))) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int (Array Int integer)))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq5 ((x us_t3) (y us_t3)) Bool (bool_eq2 (elts3 x) (to_rep (first6 (rt3 x))) (to_rep (last6 (rt3 x))) (elts3 y) (to_rep (first6 (rt3 y))) (to_rep (last6 (rt3 y)))))
(declare-fun user_eq9 (us_t3 us_t3) Bool)
(declare-const dummy9 us_t3)
(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content us_t3)))))
(define-fun t6b__ref___projection ((a t6b__ref)) us_t3 (t6b__content a))
(declare-const result____first integer)
(declare-const result____last integer)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_property6 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t7b__ref (mk_t7b__ref (t7b__content integer)))))
(define-fun t7b__ref___projection ((a t7b__ref)) integer (t7b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_property7 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq11 (integer integer) Bool)
(declare-const dummy11 integer)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content integer)))))
(define-fun t8b__ref___projection ((a t8b__ref)) integer (t8b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun temp___173 (Int Int) (Array Int integer))
(assert (forall ((temp___175 Int) (temp___176 Int)) (let ((temp___174 (temp___173 temp___175 temp___176))) (and (= (select temp___174 1) (of_rep temp___175)) (= (select temp___174 2) (of_rep temp___176))))))
(declare-fun cartesian__cartesian_product__result__aggregate_def ((Array Int integer) Int Int) us_t3)
(assert (forall ((temp___225 (Array Int integer))) (forall ((temp___226 Int) (temp___227 Int)) (let ((temp___224 (cartesian__cartesian_product__result__aggregate_def temp___225 temp___226 temp___227))) (and (=> (dynamic_property1 0 2147483647 temp___226 temp___227) (and (= (first7 temp___224) temp___226) (= (last7 temp___224) temp___227))) (forall ((temp___228 Int)) (= (select (to_array3 temp___224) temp___228) temp___225)))))))
(declare-fun temp___229 (Int Int) (Array Int integer))
(assert (forall ((temp___231 Int) (temp___232 Int)) (let ((temp___230 (temp___229 temp___231 temp___232))) (and (= (select temp___230 1) (of_rep temp___231)) (= (select temp___230 2) (of_rep temp___232))))))
(declare-fun temp___237 (Int Int) (Array Int integer))
(assert (forall ((temp___239 Int) (temp___240 Int)) (let ((temp___238 (temp___237 temp___239 temp___240))) (and (= (select temp___238 1) (of_rep temp___239)) (= (select temp___238 2) (of_rep temp___240))))))
(define-fun dynamic_invariant3 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(assert (= result_length (* (length array1) (length array2))))
(define-fun dynamic_invariant4 ((temp___expr_207 us_t2) (temp___is_init_204 Bool) (temp___skip_constant_205 Bool) (temp___do_toplevel_206 Bool)) Bool (=> (not (= temp___skip_constant_205 true)) (and (dynamic_property3 1 result_length (first5 temp___expr_207) (last5 temp___expr_207)) (and (= (first5 temp___expr_207) 1) (= (last5 temp___expr_207) result_length)))))
(declare-const result__ (Array Int (Array Int integer)))
(declare-const result_index Int)
(declare-const index1 Int)
(declare-const index2 Int)
(declare-const cartesian__cartesian_product__result (Array Int (Array Int integer)))
(declare-const cartesian__cartesian_product__result1 t1)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const cartesian__cartesian_product__result_length__assume Int)
(declare-const temp___235 (Array Int (Array Int integer)))
(declare-const temp___2351 t3)
(declare-const cartesian__cartesian_product__result__assume (Array Int (Array Int integer)))
(declare-const cartesian__cartesian_product__result__assume1 t2)
(declare-const temp___260 (Array Int (Array Int integer)))
(declare-const temp___258 Int)
(declare-const temp___257 Int)
(declare-const temp___245 (Array Int (Array Int integer)))
(declare-const temp___243 Int)
(declare-const temp___242 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 (Array Int (Array Int integer)))
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const j Int)
(declare-const o16 Int)
(declare-const o17 Int)
(declare-const o18 Int)
(declare-const o19 Int)
(declare-const o20 Int)
(declare-const o21 Int)
(declare-const o22 Int)
(declare-const o23 Int)
(declare-const temp___247 Int)
(declare-const o24 Int)
(declare-const o25 integer)
(declare-const o26 Int)
(declare-const j1 Int)
(declare-const o27 Int)
(declare-const o28 Int)
(declare-const o29 Int)
(declare-const o30 Int)
(declare-const o31 Int)
(declare-const o32 Int)
(declare-const o33 Int)
(declare-const o34 Int)
(declare-const temp___251 Int)
(declare-const o35 Int)
(declare-const o36 integer)
(declare-const o37 Int)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const o40 (Array Int (Array Int integer)))
(declare-const o41 Int)
(declare-const o42 Int)
(declare-const o43 Int)
(declare-const o44 Int)
(declare-const o45 Int)
(declare-const o46 Int)
(declare-const i Int)
(declare-const j2 Int)
(declare-const o47 Int)
(declare-const o48 Int)
(declare-const o49 Int)
(declare-const o50 Int)
(declare-const o51 Int)
(declare-const o52 Int)
(declare-const o53 Int)
(declare-const o54 Int)
(declare-const temp___262 Int)
(declare-const o55 Int)
(declare-const o56 integer)
(declare-const o57 Int)
(declare-const i1 Int)
(declare-const j3 Int)
(declare-const o58 Int)
(declare-const o59 Int)
(declare-const o60 Int)
(declare-const o61 Int)
(declare-const o62 Int)
(declare-const o63 Int)
(declare-const o64 Int)
(declare-const o65 Int)
(declare-const temp___267 Int)
(declare-const o66 Int)
(declare-const o67 integer)
(declare-const o68 Int)
(declare-const temp___2451 (Array Int (Array Int integer)))
(declare-const temp___2431 Int)
(declare-const temp___2421 Int)
(declare-const o69 Int)
(declare-const o70 Int)
(declare-const o71 (Array Int (Array Int integer)))
(declare-const o72 Int)
(declare-const o73 Int)
(declare-const o74 Int)
(declare-const o75 Int)
(declare-const o76 Int)
(declare-const o77 Int)
(declare-const o78 Int)
(declare-const o79 Int)
(declare-const o80 Int)
(declare-const j4 Int)
(declare-const o81 Int)
(declare-const o82 Int)
(declare-const o83 Int)
(declare-const o84 Int)
(declare-const o85 Int)
(declare-const o86 Int)
(declare-const o87 Int)
(declare-const o88 Int)
(declare-const temp___2471 Int)
(declare-const o89 Int)
(declare-const o90 integer)
(declare-const o91 Int)
(declare-const j5 Int)
(declare-const o92 Int)
(declare-const o93 Int)
(declare-const o94 Int)
(declare-const o95 Int)
(declare-const o96 Int)
(declare-const o97 Int)
(declare-const o98 Int)
(declare-const o99 Int)
(declare-const temp___2511 Int)
(declare-const o100 Int)
(declare-const o101 integer)
(declare-const o102 Int)
(declare-const o103 Int)
(declare-const o104 Int)
(declare-const o105 (Array Int (Array Int integer)))
(declare-const i2 Int)
(declare-const j6 Int)
(declare-const o106 Int)
(declare-const o107 Int)
(declare-const o108 Int)
(declare-const o109 Int)
(declare-const o110 Int)
(declare-const o111 Int)
(declare-const o112 Int)
(declare-const o113 Int)
(declare-const temp___274 Int)
(declare-const o114 Int)
(declare-const o115 integer)
(declare-const o116 Int)
(declare-const i3 Int)
(declare-const j7 Int)
(declare-const o117 Int)
(declare-const o118 Int)
(declare-const o119 Int)
(declare-const o120 Int)
(declare-const o121 Int)
(declare-const o122 Int)
(declare-const o123 Int)
(declare-const o124 Int)
(declare-const temp___279 Int)
(declare-const o125 Int)
(declare-const o126 integer)
(declare-const o127 Int)
(declare-const i4 Int)
(declare-const j8 Int)
(declare-const o128 Int)
(declare-const o129 integer)
(declare-const o130 Int)
(declare-const index21 Int)
(declare-const result (Array Int (Array Int integer)))
(declare-const result__1 (Array Int (Array Int integer)))
(declare-const result1 Int)
(declare-const result_index1 Int)
(declare-const result2 Int)
(declare-const index11 Int)
(declare-const result3 Int)
(declare-const index22 Int)
(declare-const result4 Int)
(declare-const result_index2 Int)
(declare-const result5 (Array Int (Array Int integer)))
(declare-const result__2 (Array Int (Array Int integer)))
(declare-const result__3 (Array Int (Array Int integer)))
(declare-const result_index3 Int)
(declare-const index23 Int)
(declare-const result6 Int)
(declare-const index24 Int)
(declare-const result7 Int)
(declare-const result_index4 Int)
(declare-const result8 (Array Int (Array Int integer)))
(declare-const result__4 (Array Int (Array Int integer)))
(declare-const result__5 (Array Int (Array Int integer)))
(declare-const result_index5 int__ref)
(declare-const index25 int__ref)
(declare-const result__6 (Array Int (Array Int integer)))
(declare-const result_index6 Int)
(declare-const index26 Int)
(declare-const result__7 map__ref1)
(declare-const result_index7 int__ref)
(declare-const index27 int__ref)
(declare-const result__8 (Array Int (Array Int integer)))
(declare-const result_index8 Int)
(declare-const index28 Int)
(declare-const result__9 (Array Int (Array Int integer)))
(declare-const result_index9 Int)
(declare-const index12 Int)
(declare-const index29 Int)
(declare-const result9 int__ref)
(declare-const index13 Int)
(declare-const result10 int__ref)
(declare-const index210 Int)
(declare-const result11 int__ref)
(declare-const result_index10 Int)
(declare-const result12 map__ref1)
(declare-const result__10 (Array Int (Array Int integer)))
(declare-const result__11 (Array Int (Array Int integer)))
(declare-const result_index11 Int)
(declare-const index211 Int)
(declare-const result13 int__ref)
(declare-const index212 Int)
(declare-const result14 int__ref)
(declare-const result_index12 Int)
(declare-const result15 map__ref1)
(declare-const result__12 (Array Int (Array Int integer)))
(declare-const result__13 map__ref1)
(declare-const result_index13 int__ref)
(declare-const index213 int__ref)
(declare-const result__14 (Array Int (Array Int integer)))
(declare-const result_index14 Int)
(declare-const index214 Int)
(declare-const result__15 map__ref1)
(declare-const result_index15 int__ref)
(declare-const index215 int__ref)
(declare-const result__16 (Array Int (Array Int integer)))
(declare-const result_index16 Int)
(declare-const index216 Int)
(declare-const result__17 map__ref1)
(declare-const result_index17 int__ref)
(declare-const index217 int__ref)
(declare-const result__18 (Array Int (Array Int integer)))
(declare-const result_index18 Int)
(declare-const index218 Int)
(declare-const result__19 map__ref1)
(declare-const result_index19 int__ref)
(declare-const index14 int__ref)
(declare-const index219 int__ref)
(declare-const result__20 (Array Int (Array Int integer)))
(declare-const result_index20 Int)
(declare-const index15 Int)
(declare-const index220 Int)
(declare-const result__21 map__ref1)
(declare-const result_index21 int__ref)
(declare-const index16 int__ref)
(declare-const index221 int__ref)
(declare-const result__22 (Array Int (Array Int integer)))
(declare-const result_index22 Int)
(declare-const index17 Int)
(declare-const index222 Int)
(declare-const result__23 map__ref1)
(declare-const result_index23 int__ref)
(declare-const index18 int__ref)
(declare-const index223 int__ref)
(declare-const result__24 (Array Int (Array Int integer)))
(declare-const result_index24 Int)
(declare-const index19 Int)
(declare-const index224 Int)
(declare-const result16 integer_product_type__ref)
(declare-const cartesian__cartesian_product__result2 us_t1)
(declare-const cartesian__cartesian_product__result3 integer_product_type__ref)
(declare-const cartesian__cartesian_product__result4 us_t1)
(declare-const result__25 map__ref1)
(declare-const result_index25 int__ref)
(declare-const index110 int__ref)
(declare-const index225 int__ref)
(declare-const cartesian__cartesian_product__result5 integer_product_type__ref)
(declare-const result__26 (Array Int (Array Int integer)))
(declare-const result_index26 Int)
(declare-const index111 Int)
(declare-const index226 Int)
(declare-const cartesian__cartesian_product__result6 us_t1)
(assert (dynamic_invariant1 array1 true false true))
(assert (dynamic_invariant1 array2 true false true))
(assert (and (< (length array1) 255) (< (length array2) 255)))
(assert (and (= o (length array2)) (in_range1 (length array2))))
(assert (and (= o1 (length array1)) (in_range1 (length array1))))
(assert (= o2 (* o1 o)))
(assert (and (= o3 o2) (in_range1 o2)))
(assert (and (= cartesian__cartesian_product__result_length__assume o3) (in_range2 o3)))
(assert (= cartesian__cartesian_product__result_length__assume result_length))
(assert (in_range2 result_length))
(assert (= (to_rep (first6 (rt3 (cartesian__cartesian_product__result__aggregate_def (temp___229 0 0) 1 result_length)))) 1))
(assert (= (to_rep (last6 (rt3 (cartesian__cartesian_product__result__aggregate_def (temp___229 0 0) 1 result_length)))) result_length))
(assert (= (mk___t3 temp___235 temp___2351) (cartesian__cartesian_product__result__aggregate_def (temp___229 0 0) 1 result_length)))
(assert (= (ite (<= (to_rep (first6 temp___2351)) (to_rep (last6 temp___2351))) (+ (- (to_rep (last6 temp___2351)) (to_rep (first6 temp___2351))) 1) 0) (ite (<= 1 result_length) (+ (- result_length 1) 1) 0)))
(assert (= temp___235 cartesian__cartesian_product__result__assume))
(assert (= (mk2 (to_rep (first6 temp___2351)) (to_rep (last6 temp___2351))) cartesian__cartesian_product__result__assume1))
(assert (= (mk_map__ref1 result) (mk_map__ref1 result__)))
(assert (= result__1 cartesian__cartesian_product__result__assume))
(assert (= (to_rep result____first) (to_rep (first4 cartesian__cartesian_product__result__assume1))))
(assert (= (to_rep result____last) (to_rep (last4 cartesian__cartesian_product__result__assume1))))
(assert (and (dynamic_property3 1 result_length (to_rep result____first) (to_rep result____last)) (and (= (to_rep result____first) 1) (= (to_rep result____last) result_length))))
(assert (= (mk_int__ref result1) (mk_int__ref result_index)))
(assert (= result_index1 0))
(assert (in_range2 result_index1))
(assert (= (mk_int__ref result2) (mk_int__ref index1)))
(assert (= index11 (to_rep (first (rt array1)))))
(assert (<= (to_rep (first (rt array1))) index11))
(assert (<= index11 (to_rep (last (rt array1)))))
(assert (= (mk_int__ref result3) (mk_int__ref index2)))
(assert (= index22 (to_rep (first (rt array2)))))
(assert (<= (to_rep (first (rt array2))) index22))
(assert (<= index22 (to_rep (last (rt array2)))))
(assert (and (= o4 (+ result_index1 1)) (in_range1 (+ result_index1 1))))
(assert (= result_index1 result4))
(assert (= result_index2 o4))
(assert (and (<= (to_rep result____first) result_index2) (<= result_index2 (to_rep result____last))))
(assert (= o5 result_index2))
(assert (= o6 (store result__1 o5 (temp___237 (to_rep (select (elts array1) index11)) (to_rep (select (elts array2) index22))))))
(assert (= result__1 result5))
(assert (= result__2 o6))
(assert (= result_index3 (+ (+ (* (- index11 (to_rep (first (rt array1)))) (length array2)) (- index23 (to_rep (first (rt array2))))) 1)))
(assert (forall ((j9 Int)) (=> (and (<= (to_rep (first (rt array2))) j9) (<= j9 index23)) (= (to_rep (select (select result__3 (+ (+ (* (- index11 (to_rep (first (rt array1)))) (length array2)) (- j9 (to_rep (first (rt array2))))) 1)) 1)) (to_rep (select (elts array1) index11))))))
(assert (forall ((j9 Int)) (=> (and (<= (to_rep (first (rt array2))) j9) (<= j9 index23)) (= (to_rep (select (select result__3 (+ (+ (* (- index11 (to_rep (first (rt array1)))) (length array2)) (- j9 (to_rep (first (rt array2))))) 1)) 2)) (to_rep (select (elts array2) j9))))))
(assert (and (and (=> (<= 0 2147483647) (in_range2 result_index3)) (=> (<= (to_rep (first (rt array2))) (to_rep (last (rt array2)))) (dynamic_property7 (to_rep (first (rt array2))) (to_rep (last (rt array2))) index23))) (and (<= (to_rep (first (rt array2))) index23) (<= index23 (to_rep (last (rt array2)))))))
(assert (<= (to_rep (first (rt array2))) j))
(assert (<= j index23))
(assert (and (<= (to_rep (first (rt array1))) index11) (<= index11 (to_rep (last (rt array1))))))
(assert (= o24 index11))
(assert (= o25 (select (elts array1) o24)))
(assert (= o26 (to_rep o25)))
(assert (and (= o19 (- j (to_rep (first (rt array2))))) (in_range1 (- j (to_rep (first (rt array2)))))))
(assert (not (in_range1 (length array2))))
(check-sat)
(exit)
