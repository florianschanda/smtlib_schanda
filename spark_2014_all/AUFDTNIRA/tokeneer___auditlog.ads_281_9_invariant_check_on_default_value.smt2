(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTNIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep 0)
(declare-fun bool_eq (us_rep us_rep) Bool)
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-fun user_eq (us_rep us_rep) Bool)
(declare-const dummy us_rep)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))
(declare-const nullfile us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort statust 0)
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq1 (statust statust) Bool)
(declare-const dummy1 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant ((temp___expr_1066 Int) (temp___is_init_1063 Bool) (temp___skip_constant_1064 Bool) (temp___do_toplevel_1065 Bool)) Bool (=> (or (= temp___is_init_1063 true) (<= 0 1)) (in_range temp___expr_1066)))
(declare-sort logfileindext 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq2 (logfileindext logfileindext) Bool)
(declare-const dummy2 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(declare-fun to_rep (logfileindext) Int)
(declare-fun of_rep (Int) logfileindext)
(assert (forall ((x logfileindext)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x logfileindext)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort logentrycountt 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 17408)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq3 (logentrycountt logentrycountt) Bool)
(declare-const dummy3 logentrycountt)
(declare-datatypes () ((logentrycountt__ref (mk_logentrycountt__ref (logentrycountt__content logentrycountt)))))
(define-fun logentrycountt__ref___projection ((a logentrycountt__ref)) logentrycountt (logentrycountt__content a))
(declare-fun to_rep1 (logentrycountt) Int)
(declare-fun of_rep1 (Int) logentrycountt)
(assert (forall ((x logentrycountt)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x logentrycountt)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort logfilecountt 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq4 (logfilecountt logfilecountt) Bool)
(declare-const dummy4 logfilecountt)
(declare-datatypes () ((logfilecountt__ref (mk_logfilecountt__ref (logfilecountt__content logfilecountt)))))
(define-fun logfilecountt__ref___projection ((a logfilecountt__ref)) logfilecountt (logfilecountt__content a))
(declare-fun to_rep2 (logfilecountt) Int)
(declare-fun of_rep2 (Int) logfilecountt)
(assert (forall ((x logfilecountt)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x logfilecountt)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int logfileindext))))))
(declare-fun slide ((Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int logfileindext))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) (Array Int logfileindext))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (logfileindext Int) (Array Int logfileindext))
(assert (forall ((v logfileindext)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq1 ((a (Array Int logfileindext)) (a__first Int) (a__last Int) (b (Array Int logfileindext)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep (select a temp___idx_150)) (to_rep (select b (+ (- b__first a__first) temp___idx_150))))))) true false))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_150 Int)) (=> (and (<= a__first temp___idx_150) (<= temp___idx_150 a__last)) (= (to_rep (select a temp___idx_150)) (to_rep (select b (+ (- b__first a__first) temp___idx_150)))))))))))
(declare-fun compare ((Array Int logfileindext) Int Int (Array Int logfileindext) Int Int) Int)
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq1 a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq1 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int logfileindext)) (b (Array Int logfileindext))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq1 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-const dummy5 (Array Int logfileindext))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int logfileindext)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int logfileindext)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int logfileindext)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int logfileindext))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq5 ((Array Int logfileindext) (Array Int logfileindext)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__auditlog__logfilelistt__list (Array Int logfileindext)) (rec__auditlog__logfilelistt__head logfileindext) (rec__auditlog__logfilelistt__lasti logfileindext) (rec__auditlog__logfilelistt__length logfilecountt)))))
(define-fun us_split_fields_List__projection ((a us_split_fields)) (Array Int logfileindext) (rec__auditlog__logfilelistt__list a))
(define-fun us_split_fields_Head__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__head a))
(define-fun us_split_fields_LastI__projection ((a us_split_fields)) logfileindext (rec__auditlog__logfilelistt__lasti a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields)) logfilecountt (rec__auditlog__logfilelistt__length a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep1 (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep1)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (bool_eq1 (rec__auditlog__logfilelistt__list (us_split_fields1 a)) 1 17 (rec__auditlog__logfilelistt__list (us_split_fields1 b)) 1 17) true) (= (to_rep (rec__auditlog__logfilelistt__head (us_split_fields1 a))) (to_rep (rec__auditlog__logfilelistt__head (us_split_fields1 b))))) (= (to_rep (rec__auditlog__logfilelistt__lasti (us_split_fields1 a))) (to_rep (rec__auditlog__logfilelistt__lasti (us_split_fields1 b))))) (= (to_rep2 (rec__auditlog__logfilelistt__length (us_split_fields1 a))) (to_rep2 (rec__auditlog__logfilelistt__length (us_split_fields1 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const auditlog__logfilelistt__list__first__bit Int)
(declare-const auditlog__logfilelistt__list__last__bit Int)
(declare-const auditlog__logfilelistt__list__position Int)
(assert (<= 0 auditlog__logfilelistt__list__first__bit))
(assert (< auditlog__logfilelistt__list__first__bit auditlog__logfilelistt__list__last__bit))
(assert (<= 0 auditlog__logfilelistt__list__position))
(declare-const auditlog__logfilelistt__head__first__bit Int)
(declare-const auditlog__logfilelistt__head__last__bit Int)
(declare-const auditlog__logfilelistt__head__position Int)
(assert (<= 0 auditlog__logfilelistt__head__first__bit))
(assert (< auditlog__logfilelistt__head__first__bit auditlog__logfilelistt__head__last__bit))
(assert (<= 0 auditlog__logfilelistt__head__position))
(declare-const auditlog__logfilelistt__lasti__first__bit Int)
(declare-const auditlog__logfilelistt__lasti__last__bit Int)
(declare-const auditlog__logfilelistt__lasti__position Int)
(assert (<= 0 auditlog__logfilelistt__lasti__first__bit))
(assert (< auditlog__logfilelistt__lasti__first__bit auditlog__logfilelistt__lasti__last__bit))
(assert (<= 0 auditlog__logfilelistt__lasti__position))
(declare-const auditlog__logfilelistt__length__first__bit Int)
(declare-const auditlog__logfilelistt__length__last__bit Int)
(declare-const auditlog__logfilelistt__length__position Int)
(assert (<= 0 auditlog__logfilelistt__length__first__bit))
(assert (< auditlog__logfilelistt__length__first__bit auditlog__logfilelistt__length__last__bit))
(assert (<= 0 auditlog__logfilelistt__length__position))
(declare-fun user_eq6 (us_rep1 us_rep1) Bool)
(declare-const dummy6 us_rep1)
(declare-datatypes () ((logfilelistt__ref (mk_logfilelistt__ref (logfilelistt__content us_rep1)))))
(define-fun logfilelistt__ref___projection ((a logfilelistt__ref)) us_rep1 (logfilelistt__content a))
(declare-sort fileentrycountt 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq7 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy7 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(declare-fun to_rep3 (fileentrycountt) Int)
(declare-fun of_rep3 (Int) fileentrycountt)
(assert (forall ((x fileentrycountt)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x fileentrycountt)) (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int fileentrycountt))))))
(declare-fun slide1 ((Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int fileentrycountt))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) (Array Int fileentrycountt))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (fileentrycountt Int) (Array Int fileentrycountt))
(assert (forall ((v fileentrycountt)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq3 ((a (Array Int fileentrycountt)) (a__first Int) (a__last Int) (b (Array Int fileentrycountt)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep3 (select a temp___idx_151)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_151))))))) true false))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep3 (select a temp___idx_151)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_151)))))))))))
(declare-fun compare1 ((Array Int fileentrycountt) Int Int (Array Int fileentrycountt) Int Int) Int)
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq3 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq3 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep3 (select a (+ i 1))) (to_rep3 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int fileentrycountt)) (b (Array Int fileentrycountt))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq3 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep3 (select b (+ i 1))) (to_rep3 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const dummy8 (Array Int fileentrycountt))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int fileentrycountt)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int fileentrycountt)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int fileentrycountt)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int fileentrycountt))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq8 ((Array Int fileentrycountt) (Array Int fileentrycountt)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__auditlog__logfilestatet__currentlogfile logfileindext) (rec__auditlog__logfilestatet__numberlogentries logentrycountt) (rec__auditlog__logfilestatet__usedlogfiles us_rep1) (rec__auditlog__logfilestatet__logfileentries (Array Int fileentrycountt))))))
(define-fun us_split_fields_CurrentLogFile__projection ((a us_split_fields2)) logfileindext (rec__auditlog__logfilestatet__currentlogfile a))
(define-fun us_split_fields_NumberLogEntries__projection ((a us_split_fields2)) logentrycountt (rec__auditlog__logfilestatet__numberlogentries a))
(define-fun us_split_fields_UsedLogFiles__projection ((a us_split_fields2)) us_rep1 (rec__auditlog__logfilestatet__usedlogfiles a))
(define-fun us_split_fields_LogFileEntries__projection ((a us_split_fields2)) (Array Int fileentrycountt) (rec__auditlog__logfilestatet__logfileentries a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep2 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___9__projection ((a us_rep2)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq4 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (to_rep (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 a))) (to_rep (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 b)))) (= (to_rep1 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 a))) (to_rep1 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 b))))) (= (bool_eq2 (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 a)) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 b))) true)) (= (bool_eq3 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 a)) 1 17 (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 b)) 1 17) true)) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep2) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep2) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))
(declare-const auditlog__logfilestatet__currentlogfile__first__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__last__bit Int)
(declare-const auditlog__logfilestatet__currentlogfile__position Int)
(assert (<= 0 auditlog__logfilestatet__currentlogfile__first__bit))
(assert (< auditlog__logfilestatet__currentlogfile__first__bit auditlog__logfilestatet__currentlogfile__last__bit))
(assert (<= 0 auditlog__logfilestatet__currentlogfile__position))
(declare-const auditlog__logfilestatet__numberlogentries__first__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__last__bit Int)
(declare-const auditlog__logfilestatet__numberlogentries__position Int)
(assert (<= 0 auditlog__logfilestatet__numberlogentries__first__bit))
(assert (< auditlog__logfilestatet__numberlogentries__first__bit auditlog__logfilestatet__numberlogentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__numberlogentries__position))
(declare-const auditlog__logfilestatet__usedlogfiles__first__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__last__bit Int)
(declare-const auditlog__logfilestatet__usedlogfiles__position Int)
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__first__bit))
(assert (< auditlog__logfilestatet__usedlogfiles__first__bit auditlog__logfilestatet__usedlogfiles__last__bit))
(assert (<= 0 auditlog__logfilestatet__usedlogfiles__position))
(declare-const auditlog__logfilestatet__logfileentries__first__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__last__bit Int)
(declare-const auditlog__logfilestatet__logfileentries__position Int)
(assert (<= 0 auditlog__logfilestatet__logfileentries__first__bit))
(assert (< auditlog__logfilestatet__logfileentries__first__bit auditlog__logfilestatet__logfileentries__last__bit))
(assert (<= 0 auditlog__logfilestatet__logfileentries__position))
(declare-fun user_eq9 (us_rep2 us_rep2) Bool)
(declare-const dummy9 us_rep2)
(declare-datatypes () ((logfilestatet__ref (mk_logfilestatet__ref (logfilestatet__content us_rep2)))))
(define-fun logfilestatet__ref___projection ((a logfilestatet__ref)) us_rep2 (logfilestatet__content a))
(declare-fun valid_numberlogentries (Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool Int Int us_rep1 (Array Int fileentrycountt)) Bool)
(declare-fun temp___1132 (Int) (Array Int logfileindext))
(assert (forall ((temp___1134 Int)) (forall ((temp___1135 Int)) (= (select (temp___1132 temp___1134) temp___1135) (of_rep temp___1134)))))
(declare-fun temp___1136 (Int) (Array Int fileentrycountt))
(assert (forall ((temp___1138 Int)) (forall ((temp___1139 Int)) (= (select (temp___1136 temp___1138) temp___1139) (of_rep3 temp___1138)))))
(define-fun default_initial_assumption ((temp___expr_1130 us_rep2) (temp___skip_top_level_1131 Bool)) Bool (and (and (and (= (to_rep (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___expr_1130))) 1) (= (to_rep1 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___expr_1130))) 0)) (= (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___expr_1130)) (mk___rep (mk___split_fields (temp___1132 1) (of_rep 1) (of_rep 1) (of_rep2 1))))) (= (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___expr_1130)) (temp___1136 0))))
(define-fun type_invariant ((temp___1140 us_rep2)) Bool (= (valid_numberlogentries (to_rep (rec__auditlog__logfilestatet__currentlogfile (us_split_fields3 temp___1140))) (to_rep1 (rec__auditlog__logfilestatet__numberlogentries (us_split_fields3 temp___1140))) (rec__auditlog__logfilestatet__usedlogfiles (us_split_fields3 temp___1140)) (rec__auditlog__logfilestatet__logfileentries (us_split_fields3 temp___1140))) true))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int us_rep))))))
(declare-fun slide2 ((Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int us_rep))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int us_rep) Int Int (Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (us_rep Int) (Array Int us_rep))
(assert (forall ((v us_rep)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq5 ((a (Array Int us_rep)) (a__first Int) (a__last Int) (b (Array Int us_rep)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true)))) true false))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq5 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort filestatust 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq10 (filestatust filestatust) Bool)
(declare-const dummy10 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(declare-fun to_rep4 (filestatust) Int)
(declare-fun of_rep4 (Int) filestatust)
(assert (forall ((x filestatust)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x filestatust)) (! (in_range5 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int filestatust))))))
(declare-fun slide3 ((Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust))) (forall ((first Int)) (! (= (slide3 a first first) a) :pattern ((slide3 a first first))))))
(assert (forall ((a (Array Int filestatust))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(declare-fun concat4 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) (Array Int filestatust))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat4 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton4 (filestatust Int) (Array Int filestatust))
(assert (forall ((v filestatust)) (forall ((i Int)) (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i))))))
(define-fun bool_eq6 ((a (Array Int filestatust)) (a__first Int) (a__last Int) (b (Array Int filestatust)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep4 (select a temp___idx_153)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_153))))))) true false))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (to_rep4 (select a temp___idx_153)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_153)))))))))))
(declare-fun compare2 ((Array Int filestatust) Int Int (Array Int filestatust) Int Int) Int)
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare2 a a_first a_last b b_first b_last) 0) (= (bool_eq6 a a_first a_last b b_first b_last) true)) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare2 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq6 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep4 (select a (+ i 1))) (to_rep4 (select b (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int filestatust)) (b (Array Int filestatust))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare2 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq6 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep4 (select b (+ i 1))) (to_rep4 (select a (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort character 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq11 (character character) Bool)
(declare-const dummy11 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep5 (character) Int)
(declare-fun of_rep5 (Int) character)
(assert (forall ((x character)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x character)) (! (in_range6 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int character))))))
(declare-fun slide4 ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide4 a first first) a) :pattern ((slide4 a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(declare-fun concat5 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat5 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat5 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat5 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton5 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton5 v i) i) v) :pattern ((select (singleton5 v i) i))))))
(define-fun bool_eq7 ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep5 (select a temp___idx_78)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq7 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep5 (select a temp___idx_78)) (to_rep5 (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare3 ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare3 a a_first a_last b b_first b_last) 0) (= (bool_eq7 a a_first a_last b b_first b_last) true)) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare3 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq7 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep5 (select a (+ i 1))) (to_rep5 (select b (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare3 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq7 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep5 (select b (+ i 1))) (to_rep5 (select a (+ j 1))))))))))) :pattern ((compare3 a a_first a_last b b_first b_last))))))
(declare-const dummy12 (Array Int character))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int character)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int character))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment5 a))))
(declare-fun user_eq12 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((map__ref5 (mk_map__ref5 (map__content5 (Array Int (Array Int character)))))))
(declare-fun slide5 ((Array Int (Array Int character)) Int Int) (Array Int (Array Int character)))
(assert (forall ((a (Array Int (Array Int character)))) (forall ((first Int)) (! (= (slide5 a first first) a) :pattern ((slide5 a first first))))))
(assert (forall ((a (Array Int (Array Int character)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide5 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide5 a old_first new_first) i))))))))
(declare-fun concat6 ((Array Int (Array Int character)) Int Int (Array Int (Array Int character)) Int Int) (Array Int (Array Int character)))
(assert (forall ((a (Array Int (Array Int character))) (b (Array Int (Array Int character)))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat6 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat6 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat6 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton6 ((Array Int character) Int) (Array Int (Array Int character)))
(assert (forall ((v (Array Int character))) (forall ((i Int)) (! (= (select (singleton6 v i) i) v) :pattern ((select (singleton6 v i) i))))))
(define-fun bool_eq8 ((a (Array Int (Array Int character))) (a__first Int) (a__last Int) (b (Array Int (Array Int character))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq7 (select a temp___idx_154) 1 16 (select b (+ (- b__first a__first) temp___idx_154)) 1 16) true)))) true false))
(assert (forall ((a (Array Int (Array Int character))) (b (Array Int (Array Int character)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq8 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq7 (select a temp___idx_154) 1 16 (select b (+ (- b__first a__first) temp___idx_154)) 1 16) true))))))))
(declare-const emptylist us_rep1)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-fun temp___155 (Int) (Array Int logfileindext))
(assert (forall ((temp___157 Int)) (forall ((temp___158 Int)) (= (select (temp___155 temp___157) temp___158) (of_rep temp___157)))))
(declare-const logdirectory (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-fun temp___String_Literal_159 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (= (to_rep5 (select (temp___String_Literal_159 us_void_param) 1)) 76) (= (to_rep5 (select (temp___String_Literal_159 us_void_param) 2)) 111)) (= (to_rep5 (select (temp___String_Literal_159 us_void_param) 3)) 103)) :pattern ((temp___String_Literal_159 us_void_param)))))
(declare-const archivefilename (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-fun temp___String_Literal_160 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 7)) 97)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 8)) 114)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 9)) 99)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 10)) 104)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 11)) 105)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 12)) 118)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 13)) 101)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 14)) 46)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 15)) 108)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 16)) 111)) (= (to_rep5 (select (temp___String_Literal_160 us_void_param) 17)) 103)) :pattern ((temp___String_Literal_160 us_void_param)))))
(declare-const noelement (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-fun auditlog__noelement__aggregate_def (Int) (Array Int character))
(assert (forall ((temp___162 Int)) (forall ((temp___163 Int)) (= (select (auditlog__noelement__aggregate_def temp___162) temp___163) (of_rep5 temp___162)))))
(define-fun dynamic_invariant1 ((temp___expr_1072 Int) (temp___is_init_1069 Bool) (temp___skip_constant_1070 Bool) (temp___do_toplevel_1071 Bool)) Bool (=> (or (= temp___is_init_1069 true) (<= 1 17)) (in_range1 temp___expr_1072)))
(define-fun dynamic_invariant2 ((temp___expr_1078 Int) (temp___is_init_1075 Bool) (temp___skip_constant_1076 Bool) (temp___do_toplevel_1077 Bool)) Bool (=> (or (= temp___is_init_1075 true) (<= 0 17408)) (in_range2 temp___expr_1078)))
(assert true)
(assert (forall ((currentlogfile Int) (numberlogentries Int)) (forall ((usedlogfiles us_rep1)) (forall ((logfileentries (Array Int fileentrycountt))) (! (= (= (valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries) true) (and (<= 1 (to_rep2 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles)))) (= numberlogentries (+ (* (- (to_rep2 (rec__auditlog__logfilelistt__length (us_split_fields1 usedlogfiles))) 1) 1024) (to_rep3 (select logfileentries currentlogfile)))))) :pattern ((valid_numberlogentries currentlogfile numberlogentries usedlogfiles logfileentries)))))))
(declare-const logfilenames (Array Int (Array Int character)))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-fun auditlog__logfilenames__aggregate_def ((Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character)) (Array Int (Array Int character)))
(assert (forall ((temp___165 (Array Int character)) (temp___166 (Array Int character)) (temp___167 (Array Int character)) (temp___168 (Array Int character)) (temp___169 (Array Int character)) (temp___170 (Array Int character)) (temp___171 (Array Int character)) (temp___172 (Array Int character)) (temp___173 (Array Int character)) (temp___174 (Array Int character)) (temp___175 (Array Int character)) (temp___176 (Array Int character)) (temp___177 (Array Int character)) (temp___178 (Array Int character)) (temp___179 (Array Int character)) (temp___180 (Array Int character)) (temp___181 (Array Int character))) (let ((temp___164 (auditlog__logfilenames__aggregate_def temp___165 temp___166 temp___167 temp___168 temp___169 temp___170 temp___171 temp___172 temp___173 temp___174 temp___175 temp___176 temp___177 temp___178 temp___179 temp___180 temp___181))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (select temp___164 1) temp___165) (= (select temp___164 2) temp___166)) (= (select temp___164 3) temp___167)) (= (select temp___164 4) temp___168)) (= (select temp___164 5) temp___169)) (= (select temp___164 6) temp___170)) (= (select temp___164 7) temp___171)) (= (select temp___164 8) temp___172)) (= (select temp___164 9) temp___173)) (= (select temp___164 10) temp___174)) (= (select temp___164 11) temp___175)) (= (select temp___164 12) temp___176)) (= (select temp___164 13) temp___177)) (= (select temp___164 14) temp___178)) (= (select temp___164 15) temp___179)) (= (select temp___164 16) temp___180)) (= (select temp___164 17) temp___181)))))
(declare-fun temp___String_Literal_183 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 11)) 48)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 12)) 49)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_183 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_183 us_void_param)))))
(declare-fun temp___String_Literal_184 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 11)) 48)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 12)) 50)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_184 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_184 us_void_param)))))
(declare-fun temp___String_Literal_185 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 11)) 48)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 12)) 51)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_185 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_185 us_void_param)))))
(declare-fun temp___String_Literal_186 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 11)) 48)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 12)) 52)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_186 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_186 us_void_param)))))
(declare-fun temp___String_Literal_187 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 11)) 48)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 12)) 53)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_187 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_187 us_void_param)))))
(declare-fun temp___String_Literal_188 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 11)) 48)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 12)) 54)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_188 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_188 us_void_param)))))
(declare-fun temp___String_Literal_189 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 11)) 48)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 12)) 55)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_189 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_189 us_void_param)))))
(declare-fun temp___String_Literal_190 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 11)) 48)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 12)) 56)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_190 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_190 us_void_param)))))
(declare-fun temp___String_Literal_191 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 11)) 48)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 12)) 57)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_191 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_191 us_void_param)))))
(declare-fun temp___String_Literal_192 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 11)) 49)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 12)) 48)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_192 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_192 us_void_param)))))
(declare-fun temp___String_Literal_193 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 11)) 49)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 12)) 49)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_193 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_193 us_void_param)))))
(declare-fun temp___String_Literal_194 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 11)) 49)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 12)) 50)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_194 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_194 us_void_param)))))
(declare-fun temp___String_Literal_195 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 11)) 49)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 12)) 51)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_195 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_195 us_void_param)))))
(declare-fun temp___String_Literal_196 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 11)) 49)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 12)) 52)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_196 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_196 us_void_param)))))
(declare-fun temp___String_Literal_197 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 11)) 49)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 12)) 53)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_197 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_197 us_void_param)))))
(declare-fun temp___String_Literal_198 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 11)) 49)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 12)) 54)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_198 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_198 us_void_param)))))
(declare-fun temp___String_Literal_199 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 1)) 46) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 2)) 47)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 3)) 76)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 4)) 111)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 5)) 103)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 6)) 47)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 7)) 70)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 8)) 105)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 9)) 108)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 10)) 101)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 11)) 49)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 12)) 55)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 13)) 46)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 14)) 108)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 15)) 111)) (= (to_rep5 (select (temp___String_Literal_199 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_199 us_void_param)))))
(declare-fun auditlog__logfiles__aggregate_def (us_rep) (Array Int us_rep))
(assert (forall ((temp___1383 us_rep)) (forall ((temp___1384 Int)) (= (select (auditlog__logfiles__aggregate_def temp___1383) temp___1384) temp___1383))))
(define-fun dynamic_invariant3 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range6 temp___expr_63)))
(assert (= logfilenames (auditlog__logfilenames__aggregate_def (temp___String_Literal_183 Tuple0) (temp___String_Literal_184 Tuple0) (temp___String_Literal_185 Tuple0) (temp___String_Literal_186 Tuple0) (temp___String_Literal_187 Tuple0) (temp___String_Literal_188 Tuple0) (temp___String_Literal_189 Tuple0) (temp___String_Literal_190 Tuple0) (temp___String_Literal_191 Tuple0) (temp___String_Literal_192 Tuple0) (temp___String_Literal_193 Tuple0) (temp___String_Literal_194 Tuple0) (temp___String_Literal_195 Tuple0) (temp___String_Literal_196 Tuple0) (temp___String_Literal_197 Tuple0) (temp___String_Literal_198 Tuple0) (temp___String_Literal_199 Tuple0))))
(define-fun dynamic_invariant4 ((temp___expr_1093 Int) (temp___is_init_1090 Bool) (temp___skip_constant_1091 Bool) (temp___do_toplevel_1092 Bool)) Bool (=> (or (= temp___is_init_1090 true) (<= 0 17)) (in_range3 temp___expr_1093)))
(define-fun dynamic_invariant5 ((temp___expr_1184 Int) (temp___is_init_1181 Bool) (temp___skip_constant_1182 Bool) (temp___do_toplevel_1183 Bool)) Bool (=> (or (= temp___is_init_1181 true) (<= 0 2)) (in_range5 temp___expr_1184)))
(assert (= emptylist (mk___rep (mk___split_fields (temp___155 1) (of_rep 17) (of_rep 1) (of_rep2 0)))))
(assert (= logdirectory (temp___String_Literal_159 Tuple0)))
(assert (= archivefilename (temp___String_Literal_160 Tuple0)))
(assert (= noelement (auditlog__noelement__aggregate_def 32)))
(define-fun dynamic_invariant6 ((temp___expr_1112 Int) (temp___is_init_1109 Bool) (temp___skip_constant_1110 Bool) (temp___do_toplevel_1111 Bool)) Bool (=> (or (= temp___is_init_1109 true) (<= 0 1024)) (in_range4 temp___expr_1112)))
(declare-const o logfilecountt)
(declare-const o1 logfileindext)
(declare-const o2 logfileindext)
(declare-const o3 (Array Int logfileindext))
(declare-const o4 logfileindext)
(declare-const o5 logfileindext)
(declare-const o6 logfilecountt)
(declare-const auditlog__emptylist__assume (Array Int logfileindext))
(declare-const auditlog__emptylist__assume1 logfileindext)
(declare-const auditlog__emptylist__assume2 logfileindext)
(declare-const auditlog__emptylist__assume3 logfilecountt)
(declare-const temp___1385 logfileindext)
(declare-const temp___13851 logentrycountt)
(declare-const temp___13852 (Array Int logfileindext))
(declare-const temp___13853 logfileindext)
(declare-const temp___13854 logfileindext)
(declare-const temp___13855 logfilecountt)
(declare-const temp___13856 (Array Int fileentrycountt))
(assert (= (to_rep2 o) 0))
(assert (= (to_rep o1) 1))
(assert (= (to_rep o2) 17))
(assert (= (temp___155 1) o3))
(assert (= o2 o4))
(assert (= o1 o5))
(assert (= o o6))
(assert (= auditlog__emptylist__assume o3))
(assert (= auditlog__emptylist__assume1 o4))
(assert (= auditlog__emptylist__assume2 o5))
(assert (= auditlog__emptylist__assume3 o6))
(assert (= (mk___rep (mk___split_fields auditlog__emptylist__assume auditlog__emptylist__assume1 auditlog__emptylist__assume2 auditlog__emptylist__assume3)) emptylist))
(assert (= (auditlog__noelement__aggregate_def 32) noelement))
(assert (and (and (and (= (to_rep temp___1385) 1) (= (to_rep1 temp___13851) 0)) (and (= temp___13852 (temp___1132 1)) (and (= temp___13853 (of_rep 1)) (and (= temp___13854 (of_rep 1)) (= temp___13855 (of_rep2 1)))))) (= temp___13856 (temp___1136 0))))
(assert (not (= (valid_numberlogentries (to_rep temp___1385) (to_rep1 temp___13851) (mk___rep (mk___split_fields temp___13852 temp___13853 temp___13854 temp___13855)) temp___13856) true)))
(check-sat)
(exit)
