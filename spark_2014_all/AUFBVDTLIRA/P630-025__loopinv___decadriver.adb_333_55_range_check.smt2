(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 8) Int) Bool)
(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 8)) (i Int)) (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun bv_min ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))
(declare-fun nth1 ((_ BitVec 16) Int) Bool)
(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))
(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvlshr x n) (lsr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvashr x n) (asr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvshl x n) (lsl1 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_left2 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_right2 v (bv2nat n)))))
(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (nth1 x (bv2nat i)) (nth_bv1 x i))))
(assert (forall ((x (_ BitVec 16)) (i Int)) (=> (and (<= 0 i) (< i 65536)) (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))
(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i))) (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun bv_min1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))
(define-fun bv_max1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort bits_1 0)
(define-fun in_range1 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x01)))
(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 8))
(declare-fun user_eq (bits_1 bits_1) Bool)
(declare-const dummy bits_1)
(declare-datatypes () ((bits_1__ref (mk_bits_1__ref (bits_1__content bits_1)))))
(define-fun bits_1__ref___projection ((a bits_1__ref)) bits_1 (bits_1__content a))
(declare-fun to_rep (bits_1) (_ BitVec 8))
(declare-fun of_rep ((_ BitVec 8)) bits_1)
(assert (forall ((x bits_1)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x bits_1)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x02))) (=> (in_range1 y) (= (to_rep (of_rep x)) y))) :pattern ((to_rep (of_rep x))))))
(define-fun to_int3 ((x bits_1)) Int (bv2nat (to_rep x)))
(assert (forall ((x bits_1)) (! (in_range_int (to_int3 x)) :pattern ((to_int3 x)))))
(declare-sort bits_2 0)
(define-fun in_range2 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x03)))
(define-fun in_range_int1 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 8))
(declare-fun user_eq1 (bits_2 bits_2) Bool)
(declare-const dummy1 bits_2)
(declare-datatypes () ((bits_2__ref (mk_bits_2__ref (bits_2__content bits_2)))))
(define-fun bits_2__ref___projection ((a bits_2__ref)) bits_2 (bits_2__content a))
(declare-fun to_rep1 (bits_2) (_ BitVec 8))
(declare-fun of_rep1 ((_ BitVec 8)) bits_2)
(assert (forall ((x bits_2)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x bits_2)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x04))) (=> (in_range2 y) (= (to_rep1 (of_rep1 x)) y))) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun to_int4 ((x bits_2)) Int (bv2nat (to_rep1 x)))
(assert (forall ((x bits_2)) (! (in_range_int1 (to_int4 x)) :pattern ((to_int4 x)))))
(declare-sort bits_3 0)
(define-fun in_range3 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x07)))
(define-fun in_range_int2 ((x Int)) Bool (and (<= 0 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))
(declare-fun user_eq2 (bits_3 bits_3) Bool)
(declare-const dummy2 bits_3)
(declare-datatypes () ((bits_3__ref (mk_bits_3__ref (bits_3__content bits_3)))))
(define-fun bits_3__ref___projection ((a bits_3__ref)) bits_3 (bits_3__content a))
(declare-fun to_rep2 (bits_3) (_ BitVec 8))
(declare-fun of_rep2 ((_ BitVec 8)) bits_3)
(assert (forall ((x bits_3)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x bits_3)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x08))) (=> (in_range3 y) (= (to_rep2 (of_rep2 x)) y))) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun to_int5 ((x bits_3)) Int (bv2nat (to_rep2 x)))
(assert (forall ((x bits_3)) (! (in_range_int2 (to_int5 x)) :pattern ((to_int5 x)))))
(declare-sort bits_4 0)
(define-fun in_range4 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x0F)))
(define-fun in_range_int3 ((x Int)) Bool (and (<= 0 x) (<= x 15)))
(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 8))
(declare-fun user_eq3 (bits_4 bits_4) Bool)
(declare-const dummy3 bits_4)
(declare-datatypes () ((bits_4__ref (mk_bits_4__ref (bits_4__content bits_4)))))
(define-fun bits_4__ref___projection ((a bits_4__ref)) bits_4 (bits_4__content a))
(declare-fun to_rep3 (bits_4) (_ BitVec 8))
(declare-fun of_rep3 ((_ BitVec 8)) bits_4)
(assert (forall ((x bits_4)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x bits_4)) (! (in_range4 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x10))) (=> (in_range4 y) (= (to_rep3 (of_rep3 x)) y))) :pattern ((to_rep3 (of_rep3 x))))))
(define-fun to_int6 ((x bits_4)) Int (bv2nat (to_rep3 x)))
(assert (forall ((x bits_4)) (! (in_range_int3 (to_int6 x)) :pattern ((to_int6 x)))))
(declare-sort bits_5 0)
(define-fun in_range5 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x1F)))
(define-fun in_range_int4 ((x Int)) Bool (and (<= 0 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 8))
(declare-fun user_eq4 (bits_5 bits_5) Bool)
(declare-const dummy4 bits_5)
(declare-datatypes () ((bits_5__ref (mk_bits_5__ref (bits_5__content bits_5)))))
(define-fun bits_5__ref___projection ((a bits_5__ref)) bits_5 (bits_5__content a))
(declare-fun to_rep4 (bits_5) (_ BitVec 8))
(declare-fun of_rep4 ((_ BitVec 8)) bits_5)
(assert (forall ((x bits_5)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x bits_5)) (! (in_range5 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x20))) (=> (in_range5 y) (= (to_rep4 (of_rep4 x)) y))) :pattern ((to_rep4 (of_rep4 x))))))
(define-fun to_int7 ((x bits_5)) Int (bv2nat (to_rep4 x)))
(assert (forall ((x bits_5)) (! (in_range_int4 (to_int7 x)) :pattern ((to_int7 x)))))
(declare-sort bits_7 0)
(define-fun in_range6 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x7F)))
(define-fun in_range_int5 ((x Int)) Bool (and (<= 0 x) (<= x 127)))
(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 8))
(declare-fun user_eq5 (bits_7 bits_7) Bool)
(declare-const dummy5 bits_7)
(declare-datatypes () ((bits_7__ref (mk_bits_7__ref (bits_7__content bits_7)))))
(define-fun bits_7__ref___projection ((a bits_7__ref)) bits_7 (bits_7__content a))
(declare-fun to_rep5 (bits_7) (_ BitVec 8))
(declare-fun of_rep5 ((_ BitVec 8)) bits_7)
(assert (forall ((x bits_7)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x bits_7)) (! (in_range6 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x80))) (=> (in_range6 y) (= (to_rep5 (of_rep5 x)) y))) :pattern ((to_rep5 (of_rep5 x))))))
(define-fun to_int8 ((x bits_7)) Int (bv2nat (to_rep5 x)))
(assert (forall ((x bits_7)) (! (in_range_int5 (to_int8 x)) :pattern ((to_int8 x)))))
(declare-sort bits_8 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE7 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) (_ BitVec 8))
(declare-fun user_eq6 (bits_8 bits_8) Bool)
(declare-const dummy6 bits_8)
(declare-datatypes () ((bits_8__ref (mk_bits_8__ref (bits_8__content bits_8)))))
(define-fun bits_8__ref___projection ((a bits_8__ref)) bits_8 (bits_8__content a))
(declare-fun to_rep6 (bits_8) (_ BitVec 8))
(declare-fun of_rep6 ((_ BitVec 8)) bits_8)
(assert (forall ((x bits_8)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep6 (of_rep6 x)) x) :pattern ((to_rep6 (of_rep6 x))))))
(define-fun to_int9 ((x bits_8)) Int (bv2nat (to_rep6 x)))
(assert (forall ((x bits_8)) (! (uint_in_range (to_int9 x)) :pattern ((to_int9 x)))))
(declare-sort bits_9 0)
(define-fun in_range7 ((x (_ BitVec 16))) Bool (and (bvule #x0000 x) (bvule x #x01FF)))
(define-fun in_range_int6 ((x Int)) Bool (and (<= 0 x) (<= x 511)))
(declare-fun attr__ATTRIBUTE_IMAGE8 ((_ BitVec 16)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) (_ BitVec 16))
(declare-fun user_eq7 (bits_9 bits_9) Bool)
(declare-const dummy7 bits_9)
(declare-datatypes () ((bits_9__ref (mk_bits_9__ref (bits_9__content bits_9)))))
(define-fun bits_9__ref___projection ((a bits_9__ref)) bits_9 (bits_9__content a))
(declare-fun to_rep7 (bits_9) (_ BitVec 16))
(declare-fun of_rep7 ((_ BitVec 16)) bits_9)
(assert (forall ((x bits_9)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x bits_9)) (! (in_range7 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x (_ BitVec 16))) (! (let ((y (bvurem x #x0200))) (=> (in_range7 y) (= (to_rep7 (of_rep7 x)) y))) :pattern ((to_rep7 (of_rep7 x))))))
(define-fun to_int10 ((x bits_9)) Int (bv2nat (to_rep7 x)))
(assert (forall ((x bits_9)) (! (in_range_int6 (to_int10 x)) :pattern ((to_int10 x)))))
(declare-sort bits_10 0)
(define-fun in_range8 ((x (_ BitVec 16))) Bool (and (bvule #x0000 x) (bvule x #x03FF)))
(define-fun in_range_int7 ((x Int)) Bool (and (<= 0 x) (<= x 1023)))
(declare-fun attr__ATTRIBUTE_IMAGE9 ((_ BitVec 16)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) (_ BitVec 16))
(declare-fun user_eq8 (bits_10 bits_10) Bool)
(declare-const dummy8 bits_10)
(declare-datatypes () ((bits_10__ref (mk_bits_10__ref (bits_10__content bits_10)))))
(define-fun bits_10__ref___projection ((a bits_10__ref)) bits_10 (bits_10__content a))
(declare-fun to_rep8 (bits_10) (_ BitVec 16))
(declare-fun of_rep8 ((_ BitVec 16)) bits_10)
(assert (forall ((x bits_10)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x bits_10)) (! (in_range8 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x (_ BitVec 16))) (! (let ((y (bvurem x #x0400))) (=> (in_range8 y) (= (to_rep8 (of_rep8 x)) y))) :pattern ((to_rep8 (of_rep8 x))))))
(define-fun to_int11 ((x bits_10)) Int (bv2nat (to_rep8 x)))
(assert (forall ((x bits_10)) (! (in_range_int7 (to_int11 x)) :pattern ((to_int11 x)))))
(declare-sort bits_16 0)
(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 16))
(declare-fun attr__ATTRIBUTE_IMAGE10 ((_ BitVec 16)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) (_ BitVec 16))
(declare-fun user_eq9 (bits_16 bits_16) Bool)
(declare-const dummy9 bits_16)
(declare-datatypes () ((bits_16__ref (mk_bits_16__ref (bits_16__content bits_16)))))
(define-fun bits_16__ref___projection ((a bits_16__ref)) bits_16 (bits_16__content a))
(declare-fun to_rep9 (bits_16) (_ BitVec 16))
(declare-fun of_rep9 ((_ BitVec 16)) bits_16)
(assert (forall ((x bits_16)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert true)
(assert (forall ((x (_ BitVec 16))) (! (= (to_rep9 (of_rep9 x)) x) :pattern ((to_rep9 (of_rep9 x))))))
(define-fun to_int12 ((x bits_16)) Int (bv2nat (to_rep9 x)))
(assert (forall ((x bits_16)) (! (uint_in_range1 (to_int12 x)) :pattern ((to_int12 x)))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__dw1000__register_types__sys_cfg_type__ffen bits_1) (rec__dw1000__register_types__sys_cfg_type__ffbc bits_1) (rec__dw1000__register_types__sys_cfg_type__ffab bits_1) (rec__dw1000__register_types__sys_cfg_type__ffad bits_1) (rec__dw1000__register_types__sys_cfg_type__ffaa bits_1) (rec__dw1000__register_types__sys_cfg_type__ffam bits_1) (rec__dw1000__register_types__sys_cfg_type__ffar bits_1) (rec__dw1000__register_types__sys_cfg_type__ffa4 bits_1) (rec__dw1000__register_types__sys_cfg_type__ffa5 bits_1) (rec__dw1000__register_types__sys_cfg_type__hirq_pol bits_1) (rec__dw1000__register_types__sys_cfg_type__spi_edge bits_1) (rec__dw1000__register_types__sys_cfg_type__dis_fce bits_1) (rec__dw1000__register_types__sys_cfg_type__dis_drxb bits_1) (rec__dw1000__register_types__sys_cfg_type__dis_phe bits_1) (rec__dw1000__register_types__sys_cfg_type__dis_rsde bits_1) (rec__dw1000__register_types__sys_cfg_type__fcs_int2f bits_1) (rec__dw1000__register_types__sys_cfg_type__phr_mode bits_2) (rec__dw1000__register_types__sys_cfg_type__dis_stxp bits_1) (rec__dw1000__register_types__sys_cfg_type__rxm110k bits_1) (rec__dw1000__register_types__sys_cfg_type__rxwtoe bits_1) (rec__dw1000__register_types__sys_cfg_type__rxautr bits_1) (rec__dw1000__register_types__sys_cfg_type__autoack bits_1) (rec__dw1000__register_types__sys_cfg_type__aackpend bits_1) (rec__dw1000__register_types__sys_cfg_type__reserved_1 bits_3) (rec__dw1000__register_types__sys_cfg_type__reserved_2 bits_5)))))
(define-fun us_split_fields_FFEN__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__ffen a))
(define-fun us_split_fields_FFBC__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__ffbc a))
(define-fun us_split_fields_FFAB__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__ffab a))
(define-fun us_split_fields_FFAD__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__ffad a))
(define-fun us_split_fields_FFAA__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__ffaa a))
(define-fun us_split_fields_FFAM__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__ffam a))
(define-fun us_split_fields_FFAR__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__ffar a))
(define-fun us_split_fields_FFA4__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__ffa4 a))
(define-fun us_split_fields_FFA5__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__ffa5 a))
(define-fun us_split_fields_HIRQ_POL__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__hirq_pol a))
(define-fun us_split_fields_SPI_EDGE__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__spi_edge a))
(define-fun us_split_fields_DIS_FCE__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__dis_fce a))
(define-fun us_split_fields_DIS_DRXB__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__dis_drxb a))
(define-fun us_split_fields_DIS_PHE__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__dis_phe a))
(define-fun us_split_fields_DIS_RSDE__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__dis_rsde a))
(define-fun us_split_fields_FCS_INT2F__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__fcs_int2f a))
(define-fun us_split_fields_PHR_MODE__projection ((a us_split_fields)) bits_2 (rec__dw1000__register_types__sys_cfg_type__phr_mode a))
(define-fun us_split_fields_DIS_STXP__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__dis_stxp a))
(define-fun us_split_fields_RXM110K__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__rxm110k a))
(define-fun us_split_fields_RXWTOE__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__rxwtoe a))
(define-fun us_split_fields_RXAUTR__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__rxautr a))
(define-fun us_split_fields_AUTOACK__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__autoack a))
(define-fun us_split_fields_AACKPEND__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_cfg_type__aackpend a))
(define-fun us_split_fields_Reserved_1__projection ((a us_split_fields)) bits_3 (rec__dw1000__register_types__sys_cfg_type__reserved_1 a))
(define-fun us_split_fields_Reserved_2__projection ((a us_split_fields)) bits_5 (rec__dw1000__register_types__sys_cfg_type__reserved_2 a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___4__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (rec__dw1000__register_types__sys_cfg_type__ffen (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__ffen (us_split_fields1 b)))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__ffbc (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__ffbc (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__ffab (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__ffab (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__ffad (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__ffad (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__ffaa (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__ffaa (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__ffam (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__ffam (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__ffar (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__ffar (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__ffa4 (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__ffa4 (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__ffa5 (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__ffa5 (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__hirq_pol (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__hirq_pol (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__spi_edge (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__spi_edge (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__dis_fce (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__dis_fce (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__dis_drxb (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__dis_drxb (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__dis_phe (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__dis_phe (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__dis_rsde (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__dis_rsde (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__fcs_int2f (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__fcs_int2f (us_split_fields1 b))))) (= (to_rep1 (rec__dw1000__register_types__sys_cfg_type__phr_mode (us_split_fields1 a))) (to_rep1 (rec__dw1000__register_types__sys_cfg_type__phr_mode (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__dis_stxp (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__dis_stxp (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__rxm110k (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__rxm110k (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__rxwtoe (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__rxwtoe (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__rxautr (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__rxautr (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__autoack (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__autoack (us_split_fields1 b))))) (= (to_rep (rec__dw1000__register_types__sys_cfg_type__aackpend (us_split_fields1 a))) (to_rep (rec__dw1000__register_types__sys_cfg_type__aackpend (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_cfg_type__reserved_1 (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_cfg_type__reserved_1 (us_split_fields1 b))))) (= (to_rep4 (rec__dw1000__register_types__sys_cfg_type__reserved_2 (us_split_fields1 a))) (to_rep4 (rec__dw1000__register_types__sys_cfg_type__reserved_2 (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const dw1000__register_types__sys_cfg_type__ffen__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffen__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffen__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffen__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__ffen__first__bit dw1000__register_types__sys_cfg_type__ffen__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffen__position))
(declare-const dw1000__register_types__sys_cfg_type__ffbc__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffbc__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffbc__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffbc__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__ffbc__first__bit dw1000__register_types__sys_cfg_type__ffbc__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffbc__position))
(declare-const dw1000__register_types__sys_cfg_type__ffab__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffab__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffab__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffab__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__ffab__first__bit dw1000__register_types__sys_cfg_type__ffab__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffab__position))
(declare-const dw1000__register_types__sys_cfg_type__ffad__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffad__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffad__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffad__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__ffad__first__bit dw1000__register_types__sys_cfg_type__ffad__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffad__position))
(declare-const dw1000__register_types__sys_cfg_type__ffaa__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffaa__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffaa__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffaa__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__ffaa__first__bit dw1000__register_types__sys_cfg_type__ffaa__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffaa__position))
(declare-const dw1000__register_types__sys_cfg_type__ffam__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffam__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffam__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffam__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__ffam__first__bit dw1000__register_types__sys_cfg_type__ffam__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffam__position))
(declare-const dw1000__register_types__sys_cfg_type__ffar__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffar__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffar__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffar__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__ffar__first__bit dw1000__register_types__sys_cfg_type__ffar__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffar__position))
(declare-const dw1000__register_types__sys_cfg_type__ffa4__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffa4__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffa4__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffa4__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__ffa4__first__bit dw1000__register_types__sys_cfg_type__ffa4__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffa4__position))
(declare-const dw1000__register_types__sys_cfg_type__ffa5__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffa5__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__ffa5__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffa5__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__ffa5__first__bit dw1000__register_types__sys_cfg_type__ffa5__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__ffa5__position))
(declare-const dw1000__register_types__sys_cfg_type__hirq_pol__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__hirq_pol__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__hirq_pol__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__hirq_pol__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__hirq_pol__first__bit dw1000__register_types__sys_cfg_type__hirq_pol__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__hirq_pol__position))
(declare-const dw1000__register_types__sys_cfg_type__spi_edge__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__spi_edge__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__spi_edge__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__spi_edge__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__spi_edge__first__bit dw1000__register_types__sys_cfg_type__spi_edge__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__spi_edge__position))
(declare-const dw1000__register_types__sys_cfg_type__dis_fce__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__dis_fce__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__dis_fce__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__dis_fce__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__dis_fce__first__bit dw1000__register_types__sys_cfg_type__dis_fce__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__dis_fce__position))
(declare-const dw1000__register_types__sys_cfg_type__dis_drxb__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__dis_drxb__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__dis_drxb__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__dis_drxb__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__dis_drxb__first__bit dw1000__register_types__sys_cfg_type__dis_drxb__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__dis_drxb__position))
(declare-const dw1000__register_types__sys_cfg_type__dis_phe__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__dis_phe__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__dis_phe__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__dis_phe__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__dis_phe__first__bit dw1000__register_types__sys_cfg_type__dis_phe__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__dis_phe__position))
(declare-const dw1000__register_types__sys_cfg_type__dis_rsde__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__dis_rsde__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__dis_rsde__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__dis_rsde__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__dis_rsde__first__bit dw1000__register_types__sys_cfg_type__dis_rsde__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__dis_rsde__position))
(declare-const dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__fcs_int2f__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__fcs_int2f__first__bit dw1000__register_types__sys_cfg_type__fcs_int2f__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__fcs_int2f__position))
(declare-const dw1000__register_types__sys_cfg_type__phr_mode__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__phr_mode__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__phr_mode__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__phr_mode__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__phr_mode__first__bit dw1000__register_types__sys_cfg_type__phr_mode__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__phr_mode__position))
(declare-const dw1000__register_types__sys_cfg_type__dis_stxp__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__dis_stxp__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__dis_stxp__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__dis_stxp__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__dis_stxp__first__bit dw1000__register_types__sys_cfg_type__dis_stxp__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__dis_stxp__position))
(declare-const dw1000__register_types__sys_cfg_type__rxm110k__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__rxm110k__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__rxm110k__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__rxm110k__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__rxm110k__first__bit dw1000__register_types__sys_cfg_type__rxm110k__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__rxm110k__position))
(declare-const dw1000__register_types__sys_cfg_type__rxwtoe__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__rxwtoe__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__rxwtoe__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__rxwtoe__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__rxwtoe__first__bit dw1000__register_types__sys_cfg_type__rxwtoe__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__rxwtoe__position))
(declare-const dw1000__register_types__sys_cfg_type__rxautr__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__rxautr__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__rxautr__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__rxautr__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__rxautr__first__bit dw1000__register_types__sys_cfg_type__rxautr__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__rxautr__position))
(declare-const dw1000__register_types__sys_cfg_type__autoack__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__autoack__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__autoack__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__autoack__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__autoack__first__bit dw1000__register_types__sys_cfg_type__autoack__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__autoack__position))
(declare-const dw1000__register_types__sys_cfg_type__aackpend__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__aackpend__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__aackpend__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__aackpend__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__aackpend__first__bit dw1000__register_types__sys_cfg_type__aackpend__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__aackpend__position))
(declare-const dw1000__register_types__sys_cfg_type__reserved_1__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__reserved_1__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__reserved_1__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__reserved_1__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__reserved_1__first__bit dw1000__register_types__sys_cfg_type__reserved_1__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__reserved_1__position))
(declare-const dw1000__register_types__sys_cfg_type__reserved_2__first__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__reserved_2__last__bit Int)
(declare-const dw1000__register_types__sys_cfg_type__reserved_2__position Int)
(assert (<= 0 dw1000__register_types__sys_cfg_type__reserved_2__first__bit))
(assert (< dw1000__register_types__sys_cfg_type__reserved_2__first__bit dw1000__register_types__sys_cfg_type__reserved_2__last__bit))
(assert (<= 0 dw1000__register_types__sys_cfg_type__reserved_2__position))
(declare-fun user_eq10 (us_rep us_rep) Bool)
(declare-const dummy10 us_rep)
(declare-datatypes () ((sys_cfg_type__ref (mk_sys_cfg_type__ref (sys_cfg_type__content us_rep)))))
(define-fun sys_cfg_type__ref___projection ((a sys_cfg_type__ref)) us_rep (sys_cfg_type__content a))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__dw1000__register_types__tx_fctrl_type__tflen bits_7) (rec__dw1000__register_types__tx_fctrl_type__tfle bits_3) (rec__dw1000__register_types__tx_fctrl_type__r bits_3) (rec__dw1000__register_types__tx_fctrl_type__txbr bits_2) (rec__dw1000__register_types__tx_fctrl_type__tr bits_1) (rec__dw1000__register_types__tx_fctrl_type__txprf bits_2) (rec__dw1000__register_types__tx_fctrl_type__txpsr bits_2) (rec__dw1000__register_types__tx_fctrl_type__pe bits_2) (rec__dw1000__register_types__tx_fctrl_type__txboffs bits_10) (rec__dw1000__register_types__tx_fctrl_type__ifsdelay bits_8)))))
(define-fun us_split_fields_TFLEN__projection ((a us_split_fields2)) bits_7 (rec__dw1000__register_types__tx_fctrl_type__tflen a))
(define-fun us_split_fields_TFLE__projection ((a us_split_fields2)) bits_3 (rec__dw1000__register_types__tx_fctrl_type__tfle a))
(define-fun us_split_fields_R__projection ((a us_split_fields2)) bits_3 (rec__dw1000__register_types__tx_fctrl_type__r a))
(define-fun us_split_fields_TXBR__projection ((a us_split_fields2)) bits_2 (rec__dw1000__register_types__tx_fctrl_type__txbr a))
(define-fun us_split_fields_TR__projection ((a us_split_fields2)) bits_1 (rec__dw1000__register_types__tx_fctrl_type__tr a))
(define-fun us_split_fields_TXPRF__projection ((a us_split_fields2)) bits_2 (rec__dw1000__register_types__tx_fctrl_type__txprf a))
(define-fun us_split_fields_TXPSR__projection ((a us_split_fields2)) bits_2 (rec__dw1000__register_types__tx_fctrl_type__txpsr a))
(define-fun us_split_fields_PE__projection ((a us_split_fields2)) bits_2 (rec__dw1000__register_types__tx_fctrl_type__pe a))
(define-fun us_split_fields_TXBOFFS__projection ((a us_split_fields2)) bits_10 (rec__dw1000__register_types__tx_fctrl_type__txboffs a))
(define-fun us_split_fields_IFSDELAY__projection ((a us_split_fields2)) bits_8 (rec__dw1000__register_types__tx_fctrl_type__ifsdelay a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___6__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___6__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (and (and (and (and (and (and (= (to_rep5 (rec__dw1000__register_types__tx_fctrl_type__tflen (us_split_fields3 a))) (to_rep5 (rec__dw1000__register_types__tx_fctrl_type__tflen (us_split_fields3 b)))) (= (to_rep2 (rec__dw1000__register_types__tx_fctrl_type__tfle (us_split_fields3 a))) (to_rep2 (rec__dw1000__register_types__tx_fctrl_type__tfle (us_split_fields3 b))))) (= (to_rep2 (rec__dw1000__register_types__tx_fctrl_type__r (us_split_fields3 a))) (to_rep2 (rec__dw1000__register_types__tx_fctrl_type__r (us_split_fields3 b))))) (= (to_rep1 (rec__dw1000__register_types__tx_fctrl_type__txbr (us_split_fields3 a))) (to_rep1 (rec__dw1000__register_types__tx_fctrl_type__txbr (us_split_fields3 b))))) (= (to_rep (rec__dw1000__register_types__tx_fctrl_type__tr (us_split_fields3 a))) (to_rep (rec__dw1000__register_types__tx_fctrl_type__tr (us_split_fields3 b))))) (= (to_rep1 (rec__dw1000__register_types__tx_fctrl_type__txprf (us_split_fields3 a))) (to_rep1 (rec__dw1000__register_types__tx_fctrl_type__txprf (us_split_fields3 b))))) (= (to_rep1 (rec__dw1000__register_types__tx_fctrl_type__txpsr (us_split_fields3 a))) (to_rep1 (rec__dw1000__register_types__tx_fctrl_type__txpsr (us_split_fields3 b))))) (= (to_rep1 (rec__dw1000__register_types__tx_fctrl_type__pe (us_split_fields3 a))) (to_rep1 (rec__dw1000__register_types__tx_fctrl_type__pe (us_split_fields3 b))))) (= (to_rep8 (rec__dw1000__register_types__tx_fctrl_type__txboffs (us_split_fields3 a))) (to_rep8 (rec__dw1000__register_types__tx_fctrl_type__txboffs (us_split_fields3 b))))) (= (to_rep6 (rec__dw1000__register_types__tx_fctrl_type__ifsdelay (us_split_fields3 a))) (to_rep6 (rec__dw1000__register_types__tx_fctrl_type__ifsdelay (us_split_fields3 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const dw1000__register_types__tx_fctrl_type__tflen__first__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__tflen__last__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__tflen__position Int)
(assert (<= 0 dw1000__register_types__tx_fctrl_type__tflen__first__bit))
(assert (< dw1000__register_types__tx_fctrl_type__tflen__first__bit dw1000__register_types__tx_fctrl_type__tflen__last__bit))
(assert (<= 0 dw1000__register_types__tx_fctrl_type__tflen__position))
(declare-const dw1000__register_types__tx_fctrl_type__tfle__first__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__tfle__last__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__tfle__position Int)
(assert (<= 0 dw1000__register_types__tx_fctrl_type__tfle__first__bit))
(assert (< dw1000__register_types__tx_fctrl_type__tfle__first__bit dw1000__register_types__tx_fctrl_type__tfle__last__bit))
(assert (<= 0 dw1000__register_types__tx_fctrl_type__tfle__position))
(declare-const dw1000__register_types__tx_fctrl_type__r__first__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__r__last__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__r__position Int)
(assert (<= 0 dw1000__register_types__tx_fctrl_type__r__first__bit))
(assert (< dw1000__register_types__tx_fctrl_type__r__first__bit dw1000__register_types__tx_fctrl_type__r__last__bit))
(assert (<= 0 dw1000__register_types__tx_fctrl_type__r__position))
(declare-const dw1000__register_types__tx_fctrl_type__txbr__first__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__txbr__last__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__txbr__position Int)
(assert (<= 0 dw1000__register_types__tx_fctrl_type__txbr__first__bit))
(assert (< dw1000__register_types__tx_fctrl_type__txbr__first__bit dw1000__register_types__tx_fctrl_type__txbr__last__bit))
(assert (<= 0 dw1000__register_types__tx_fctrl_type__txbr__position))
(declare-const dw1000__register_types__tx_fctrl_type__tr__first__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__tr__last__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__tr__position Int)
(assert (<= 0 dw1000__register_types__tx_fctrl_type__tr__first__bit))
(assert (< dw1000__register_types__tx_fctrl_type__tr__first__bit dw1000__register_types__tx_fctrl_type__tr__last__bit))
(assert (<= 0 dw1000__register_types__tx_fctrl_type__tr__position))
(declare-const dw1000__register_types__tx_fctrl_type__txprf__first__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__txprf__last__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__txprf__position Int)
(assert (<= 0 dw1000__register_types__tx_fctrl_type__txprf__first__bit))
(assert (< dw1000__register_types__tx_fctrl_type__txprf__first__bit dw1000__register_types__tx_fctrl_type__txprf__last__bit))
(assert (<= 0 dw1000__register_types__tx_fctrl_type__txprf__position))
(declare-const dw1000__register_types__tx_fctrl_type__txpsr__first__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__txpsr__last__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__txpsr__position Int)
(assert (<= 0 dw1000__register_types__tx_fctrl_type__txpsr__first__bit))
(assert (< dw1000__register_types__tx_fctrl_type__txpsr__first__bit dw1000__register_types__tx_fctrl_type__txpsr__last__bit))
(assert (<= 0 dw1000__register_types__tx_fctrl_type__txpsr__position))
(declare-const dw1000__register_types__tx_fctrl_type__pe__first__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__pe__last__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__pe__position Int)
(assert (<= 0 dw1000__register_types__tx_fctrl_type__pe__first__bit))
(assert (< dw1000__register_types__tx_fctrl_type__pe__first__bit dw1000__register_types__tx_fctrl_type__pe__last__bit))
(assert (<= 0 dw1000__register_types__tx_fctrl_type__pe__position))
(declare-const dw1000__register_types__tx_fctrl_type__txboffs__first__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__txboffs__last__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__txboffs__position Int)
(assert (<= 0 dw1000__register_types__tx_fctrl_type__txboffs__first__bit))
(assert (< dw1000__register_types__tx_fctrl_type__txboffs__first__bit dw1000__register_types__tx_fctrl_type__txboffs__last__bit))
(assert (<= 0 dw1000__register_types__tx_fctrl_type__txboffs__position))
(declare-const dw1000__register_types__tx_fctrl_type__ifsdelay__first__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__ifsdelay__last__bit Int)
(declare-const dw1000__register_types__tx_fctrl_type__ifsdelay__position Int)
(assert (<= 0 dw1000__register_types__tx_fctrl_type__ifsdelay__first__bit))
(assert (< dw1000__register_types__tx_fctrl_type__ifsdelay__first__bit dw1000__register_types__tx_fctrl_type__ifsdelay__last__bit))
(assert (<= 0 dw1000__register_types__tx_fctrl_type__ifsdelay__position))
(declare-fun user_eq11 (us_rep1 us_rep1) Bool)
(declare-const dummy11 us_rep1)
(declare-datatypes () ((tx_fctrl_type__ref (mk_tx_fctrl_type__ref (tx_fctrl_type__content us_rep1)))))
(define-fun tx_fctrl_type__ref___projection ((a tx_fctrl_type__ref)) us_rep1 (tx_fctrl_type__content a))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__dw1000__register_types__chan_ctrl_type__tx_chan bits_4) (rec__dw1000__register_types__chan_ctrl_type__rx_chan bits_4) (rec__dw1000__register_types__chan_ctrl_type__dwsfd bits_1) (rec__dw1000__register_types__chan_ctrl_type__rxprf bits_2) (rec__dw1000__register_types__chan_ctrl_type__tnssfd bits_1) (rec__dw1000__register_types__chan_ctrl_type__rnssfd bits_1) (rec__dw1000__register_types__chan_ctrl_type__tx_pcode bits_5) (rec__dw1000__register_types__chan_ctrl_type__rx_pcode bits_5) (rec__dw1000__register_types__chan_ctrl_type__reserved bits_9)))))
(define-fun us_split_fields_TX_CHAN__projection ((a us_split_fields4)) bits_4 (rec__dw1000__register_types__chan_ctrl_type__tx_chan a))
(define-fun us_split_fields_RX_CHAN__projection ((a us_split_fields4)) bits_4 (rec__dw1000__register_types__chan_ctrl_type__rx_chan a))
(define-fun us_split_fields_DWSFD__projection ((a us_split_fields4)) bits_1 (rec__dw1000__register_types__chan_ctrl_type__dwsfd a))
(define-fun us_split_fields_RXPRF__2__projection ((a us_split_fields4)) bits_2 (rec__dw1000__register_types__chan_ctrl_type__rxprf a))
(define-fun us_split_fields_TNSSFD__projection ((a us_split_fields4)) bits_1 (rec__dw1000__register_types__chan_ctrl_type__tnssfd a))
(define-fun us_split_fields_RNSSFD__projection ((a us_split_fields4)) bits_1 (rec__dw1000__register_types__chan_ctrl_type__rnssfd a))
(define-fun us_split_fields_TX_PCODE__projection ((a us_split_fields4)) bits_5 (rec__dw1000__register_types__chan_ctrl_type__tx_pcode a))
(define-fun us_split_fields_RX_PCODE__projection ((a us_split_fields4)) bits_5 (rec__dw1000__register_types__chan_ctrl_type__rx_pcode a))
(define-fun us_split_fields_Reserved__3__projection ((a us_split_fields4)) bits_9 (rec__dw1000__register_types__chan_ctrl_type__reserved a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___24__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___24__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq2 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (and (and (and (and (and (= (to_rep3 (rec__dw1000__register_types__chan_ctrl_type__tx_chan (us_split_fields5 a))) (to_rep3 (rec__dw1000__register_types__chan_ctrl_type__tx_chan (us_split_fields5 b)))) (= (to_rep3 (rec__dw1000__register_types__chan_ctrl_type__rx_chan (us_split_fields5 a))) (to_rep3 (rec__dw1000__register_types__chan_ctrl_type__rx_chan (us_split_fields5 b))))) (= (to_rep (rec__dw1000__register_types__chan_ctrl_type__dwsfd (us_split_fields5 a))) (to_rep (rec__dw1000__register_types__chan_ctrl_type__dwsfd (us_split_fields5 b))))) (= (to_rep1 (rec__dw1000__register_types__chan_ctrl_type__rxprf (us_split_fields5 a))) (to_rep1 (rec__dw1000__register_types__chan_ctrl_type__rxprf (us_split_fields5 b))))) (= (to_rep (rec__dw1000__register_types__chan_ctrl_type__tnssfd (us_split_fields5 a))) (to_rep (rec__dw1000__register_types__chan_ctrl_type__tnssfd (us_split_fields5 b))))) (= (to_rep (rec__dw1000__register_types__chan_ctrl_type__rnssfd (us_split_fields5 a))) (to_rep (rec__dw1000__register_types__chan_ctrl_type__rnssfd (us_split_fields5 b))))) (= (to_rep4 (rec__dw1000__register_types__chan_ctrl_type__tx_pcode (us_split_fields5 a))) (to_rep4 (rec__dw1000__register_types__chan_ctrl_type__tx_pcode (us_split_fields5 b))))) (= (to_rep4 (rec__dw1000__register_types__chan_ctrl_type__rx_pcode (us_split_fields5 a))) (to_rep4 (rec__dw1000__register_types__chan_ctrl_type__rx_pcode (us_split_fields5 b))))) (= (to_rep7 (rec__dw1000__register_types__chan_ctrl_type__reserved (us_split_fields5 a))) (to_rep7 (rec__dw1000__register_types__chan_ctrl_type__reserved (us_split_fields5 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep2) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep2) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep2)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment2 a))))
(declare-const dw1000__register_types__chan_ctrl_type__tx_chan__first__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__tx_chan__last__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__tx_chan__position Int)
(assert (<= 0 dw1000__register_types__chan_ctrl_type__tx_chan__first__bit))
(assert (< dw1000__register_types__chan_ctrl_type__tx_chan__first__bit dw1000__register_types__chan_ctrl_type__tx_chan__last__bit))
(assert (<= 0 dw1000__register_types__chan_ctrl_type__tx_chan__position))
(declare-const dw1000__register_types__chan_ctrl_type__rx_chan__first__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__rx_chan__last__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__rx_chan__position Int)
(assert (<= 0 dw1000__register_types__chan_ctrl_type__rx_chan__first__bit))
(assert (< dw1000__register_types__chan_ctrl_type__rx_chan__first__bit dw1000__register_types__chan_ctrl_type__rx_chan__last__bit))
(assert (<= 0 dw1000__register_types__chan_ctrl_type__rx_chan__position))
(declare-const dw1000__register_types__chan_ctrl_type__dwsfd__first__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__dwsfd__last__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__dwsfd__position Int)
(assert (<= 0 dw1000__register_types__chan_ctrl_type__dwsfd__first__bit))
(assert (< dw1000__register_types__chan_ctrl_type__dwsfd__first__bit dw1000__register_types__chan_ctrl_type__dwsfd__last__bit))
(assert (<= 0 dw1000__register_types__chan_ctrl_type__dwsfd__position))
(declare-const dw1000__register_types__chan_ctrl_type__rxprf__first__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__rxprf__last__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__rxprf__position Int)
(assert (<= 0 dw1000__register_types__chan_ctrl_type__rxprf__first__bit))
(assert (< dw1000__register_types__chan_ctrl_type__rxprf__first__bit dw1000__register_types__chan_ctrl_type__rxprf__last__bit))
(assert (<= 0 dw1000__register_types__chan_ctrl_type__rxprf__position))
(declare-const dw1000__register_types__chan_ctrl_type__tnssfd__first__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__tnssfd__last__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__tnssfd__position Int)
(assert (<= 0 dw1000__register_types__chan_ctrl_type__tnssfd__first__bit))
(assert (< dw1000__register_types__chan_ctrl_type__tnssfd__first__bit dw1000__register_types__chan_ctrl_type__tnssfd__last__bit))
(assert (<= 0 dw1000__register_types__chan_ctrl_type__tnssfd__position))
(declare-const dw1000__register_types__chan_ctrl_type__rnssfd__first__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__rnssfd__last__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__rnssfd__position Int)
(assert (<= 0 dw1000__register_types__chan_ctrl_type__rnssfd__first__bit))
(assert (< dw1000__register_types__chan_ctrl_type__rnssfd__first__bit dw1000__register_types__chan_ctrl_type__rnssfd__last__bit))
(assert (<= 0 dw1000__register_types__chan_ctrl_type__rnssfd__position))
(declare-const dw1000__register_types__chan_ctrl_type__tx_pcode__first__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__tx_pcode__last__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__tx_pcode__position Int)
(assert (<= 0 dw1000__register_types__chan_ctrl_type__tx_pcode__first__bit))
(assert (< dw1000__register_types__chan_ctrl_type__tx_pcode__first__bit dw1000__register_types__chan_ctrl_type__tx_pcode__last__bit))
(assert (<= 0 dw1000__register_types__chan_ctrl_type__tx_pcode__position))
(declare-const dw1000__register_types__chan_ctrl_type__rx_pcode__first__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__rx_pcode__last__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__rx_pcode__position Int)
(assert (<= 0 dw1000__register_types__chan_ctrl_type__rx_pcode__first__bit))
(assert (< dw1000__register_types__chan_ctrl_type__rx_pcode__first__bit dw1000__register_types__chan_ctrl_type__rx_pcode__last__bit))
(assert (<= 0 dw1000__register_types__chan_ctrl_type__rx_pcode__position))
(declare-const dw1000__register_types__chan_ctrl_type__reserved__first__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__reserved__last__bit Int)
(declare-const dw1000__register_types__chan_ctrl_type__reserved__position Int)
(assert (<= 0 dw1000__register_types__chan_ctrl_type__reserved__first__bit))
(assert (< dw1000__register_types__chan_ctrl_type__reserved__first__bit dw1000__register_types__chan_ctrl_type__reserved__last__bit))
(assert (<= 0 dw1000__register_types__chan_ctrl_type__reserved__position))
(declare-fun user_eq12 (us_rep2 us_rep2) Bool)
(declare-const dummy12 us_rep2)
(declare-datatypes () ((chan_ctrl_type__ref (mk_chan_ctrl_type__ref (chan_ctrl_type__content us_rep2)))))
(define-fun chan_ctrl_type__ref___projection ((a chan_ctrl_type__ref)) us_rep2 (chan_ctrl_type__content a))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__dw1000__register_types__lde_repc_type__lde_repc bits_16)))))
(define-fun us_split_fields_LDE_REPC__projection ((a us_split_fields6)) bits_16 (rec__dw1000__register_types__lde_repc_type__lde_repc a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___86__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep3 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___86__projection ((a us_rep3)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq3 ((a us_rep3) (b us_rep3)) Bool (ite (= (to_rep9 (rec__dw1000__register_types__lde_repc_type__lde_repc (us_split_fields7 a))) (to_rep9 (rec__dw1000__register_types__lde_repc_type__lde_repc (us_split_fields7 b)))) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep3) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep3) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep3)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment3 a))))
(declare-const dw1000__register_types__lde_repc_type__lde_repc__first__bit Int)
(declare-const dw1000__register_types__lde_repc_type__lde_repc__last__bit Int)
(declare-const dw1000__register_types__lde_repc_type__lde_repc__position Int)
(assert (<= 0 dw1000__register_types__lde_repc_type__lde_repc__first__bit))
(assert (< dw1000__register_types__lde_repc_type__lde_repc__first__bit dw1000__register_types__lde_repc_type__lde_repc__last__bit))
(assert (<= 0 dw1000__register_types__lde_repc_type__lde_repc__position))
(declare-fun user_eq13 (us_rep3 us_rep3) Bool)
(declare-const dummy13 us_rep3)
(declare-datatypes () ((lde_repc_type__ref (mk_lde_repc_type__ref (lde_repc_type__content us_rep3)))))
(define-fun lde_repc_type__ref___projection ((a lde_repc_type__ref)) us_rep3 (lde_repc_type__content a))
(declare-datatypes () ((register_type__ref (mk_register_type__ref (register_type__content us_rep)))))
(define-fun register_type__ref___4__projection ((a register_type__ref)) us_rep (register_type__content a))
(declare-datatypes () ((register_type__ref1 (mk_register_type__ref1 (register_type__content1 us_rep1)))))
(define-fun register_type__ref___6__projection ((a register_type__ref1)) us_rep1 (register_type__content1 a))
(declare-datatypes () ((register_type__ref2 (mk_register_type__ref2 (register_type__content2 us_rep2)))))
(define-fun register_type__ref___24__projection ((a register_type__ref2)) us_rep2 (register_type__content2 a))
(declare-datatypes () ((register_type__ref3 (mk_register_type__ref3 (register_type__content3 us_rep3)))))
(define-fun register_type__ref___85__projection ((a register_type__ref3)) us_rep3 (register_type__content3 a))
(declare-sort data_rates 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq14 (data_rates data_rates) Bool)
(declare-const dummy14 data_rates)
(declare-datatypes () ((data_rates__ref (mk_data_rates__ref (data_rates__content data_rates)))))
(define-fun data_rates__ref___projection ((a data_rates__ref)) data_rates (data_rates__content a))
(declare-fun to_rep10 (data_rates) Int)
(declare-fun of_rep10 (Int) data_rates)
(assert (forall ((x data_rates)) (! (= (of_rep10 (to_rep10 x)) x) :pattern ((to_rep10 x)))))
(assert (forall ((x data_rates)) (! (in_range9 (to_rep10 x)) :pattern ((to_rep10 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep10 (of_rep10 x)) x)) :pattern ((to_rep10 (of_rep10 x))))))
(declare-sort channel_number 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 1 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq15 (channel_number channel_number) Bool)
(declare-const dummy15 channel_number)
(declare-datatypes () ((channel_number__ref (mk_channel_number__ref (channel_number__content channel_number)))))
(define-fun channel_number__ref___projection ((a channel_number__ref)) channel_number (channel_number__content a))
(define-fun dynamic_invariant ((temp___expr_4793 Int) (temp___is_init_4789 Bool) (temp___skip_constant_4790 Bool) (temp___do_toplevel_4791 Bool) (temp___do_typ_inv_4792 Bool)) Bool (and (=> (or (= temp___is_init_4789 true) (<= 1 7)) (in_range10 temp___expr_4793)) (=> (= temp___do_toplevel_4791 true) (=> (= temp___is_init_4789 true) (or (and (<= 1 temp___expr_4793) (<= temp___expr_4793 5)) (and (<= 7 temp___expr_4793) (<= temp___expr_4793 7)))))))
(define-fun dynamic_predicate ((temp___4797 Int)) Bool (or (and (<= 1 temp___4797) (<= temp___4797 5)) (and (<= 7 temp___4797) (<= temp___4797 7))))
(declare-fun to_rep11 (channel_number) Int)
(declare-fun of_rep11 (Int) channel_number)
(assert (forall ((x channel_number)) (! (= (of_rep11 (to_rep11 x)) x) :pattern ((to_rep11 x)))))
(assert (forall ((x channel_number)) (! (in_range10 (to_rep11 x)) :pattern ((to_rep11 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep11 (of_rep11 x)) x)) :pattern ((to_rep11 (of_rep11 x))))))
(declare-const i17s Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort prf_type 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq16 (prf_type prf_type) Bool)
(declare-const dummy16 prf_type)
(declare-datatypes () ((prf_type__ref (mk_prf_type__ref (prf_type__content prf_type)))))
(define-fun prf_type__ref___projection ((a prf_type__ref)) prf_type (prf_type__content a))
(declare-fun to_rep12 (prf_type) Int)
(declare-fun of_rep12 (Int) prf_type)
(assert (forall ((x prf_type)) (! (= (of_rep12 (to_rep12 x)) x) :pattern ((to_rep12 x)))))
(assert (forall ((x prf_type)) (! (in_range11 (to_rep12 x)) :pattern ((to_rep12 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep12 (of_rep12 x)) x)) :pattern ((to_rep12 (of_rep12 x))))))
(declare-sort preamble_lengths 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq17 (preamble_lengths preamble_lengths) Bool)
(declare-const dummy17 preamble_lengths)
(declare-datatypes () ((preamble_lengths__ref (mk_preamble_lengths__ref (preamble_lengths__content preamble_lengths)))))
(define-fun preamble_lengths__ref___projection ((a preamble_lengths__ref)) preamble_lengths (preamble_lengths__content a))
(declare-fun to_rep13 (preamble_lengths) Int)
(declare-fun of_rep13 (Int) preamble_lengths)
(assert (forall ((x preamble_lengths)) (! (= (of_rep13 (to_rep13 x)) x) :pattern ((to_rep13 x)))))
(assert (forall ((x preamble_lengths)) (! (in_range12 (to_rep13 x)) :pattern ((to_rep13 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep13 (of_rep13 x)) x)) :pattern ((to_rep13 (of_rep13 x))))))
(declare-sort preamble_acq_chunk_length 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq18 (preamble_acq_chunk_length preamble_acq_chunk_length) Bool)
(declare-const dummy18 preamble_acq_chunk_length)
(declare-datatypes () ((preamble_acq_chunk_length__ref (mk_preamble_acq_chunk_length__ref (preamble_acq_chunk_length__content preamble_acq_chunk_length)))))
(define-fun preamble_acq_chunk_length__ref___projection ((a preamble_acq_chunk_length__ref)) preamble_acq_chunk_length (preamble_acq_chunk_length__content a))
(declare-fun to_rep14 (preamble_acq_chunk_length) Int)
(declare-fun of_rep14 (Int) preamble_acq_chunk_length)
(assert (forall ((x preamble_acq_chunk_length)) (! (= (of_rep14 (to_rep14 x)) x) :pattern ((to_rep14 x)))))
(assert (forall ((x preamble_acq_chunk_length)) (! (in_range13 (to_rep14 x)) :pattern ((to_rep14 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep14 (of_rep14 x)) x)) :pattern ((to_rep14 (of_rep14 x))))))
(declare-sort preamble_code_number 0)
(define-fun in_range14 ((x Int)) Bool (and (<= 1 x) (<= x 24)))
(declare-fun attr__ATTRIBUTE_IMAGE16 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) Int)
(declare-fun user_eq19 (preamble_code_number preamble_code_number) Bool)
(declare-const dummy19 preamble_code_number)
(declare-datatypes () ((preamble_code_number__ref (mk_preamble_code_number__ref (preamble_code_number__content preamble_code_number)))))
(define-fun preamble_code_number__ref___projection ((a preamble_code_number__ref)) preamble_code_number (preamble_code_number__content a))
(declare-fun to_rep15 (preamble_code_number) Int)
(declare-fun of_rep15 (Int) preamble_code_number)
(assert (forall ((x preamble_code_number)) (! (= (of_rep15 (to_rep15 x)) x) :pattern ((to_rep15 x)))))
(assert (forall ((x preamble_code_number)) (! (in_range14 (to_rep15 x)) :pattern ((to_rep15 x)))))
(assert (forall ((x Int)) (! (=> (in_range14 x) (= (to_rep15 (of_rep15 x)) x)) :pattern ((to_rep15 (of_rep15 x))))))
(declare-sort physical_header_modes 0)
(define-fun in_range15 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)
(declare-fun user_eq20 (physical_header_modes physical_header_modes) Bool)
(declare-const dummy20 physical_header_modes)
(declare-datatypes () ((physical_header_modes__ref (mk_physical_header_modes__ref (physical_header_modes__content physical_header_modes)))))
(define-fun physical_header_modes__ref___projection ((a physical_header_modes__ref)) physical_header_modes (physical_header_modes__content a))
(declare-fun to_rep16 (physical_header_modes) Int)
(declare-fun of_rep16 (Int) physical_header_modes)
(assert (forall ((x physical_header_modes)) (! (= (of_rep16 (to_rep16 x)) x) :pattern ((to_rep16 x)))))
(assert (forall ((x physical_header_modes)) (! (in_range15 (to_rep16 x)) :pattern ((to_rep16 x)))))
(assert (forall ((x Int)) (! (=> (in_range15 x) (= (to_rep16 (of_rep16 x)) x)) :pattern ((to_rep16 (of_rep16 x))))))
(declare-sort sfd_timeout_number 0)
(define-fun in_range16 ((x Int)) Bool (and (<= 0 x) (<= x 65535)))
(declare-fun attr__ATTRIBUTE_IMAGE18 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check18 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE18 (us_image) Int)
(declare-fun user_eq21 (sfd_timeout_number sfd_timeout_number) Bool)
(declare-const dummy21 sfd_timeout_number)
(declare-datatypes () ((sfd_timeout_number__ref (mk_sfd_timeout_number__ref (sfd_timeout_number__content sfd_timeout_number)))))
(define-fun sfd_timeout_number__ref___projection ((a sfd_timeout_number__ref)) sfd_timeout_number (sfd_timeout_number__content a))
(define-fun dynamic_invariant1 ((temp___expr_4838 Int) (temp___is_init_4834 Bool) (temp___skip_constant_4835 Bool) (temp___do_toplevel_4836 Bool) (temp___do_typ_inv_4837 Bool)) Bool (=> (or (= temp___is_init_4834 true) (<= 0 65535)) (in_range16 temp___expr_4838)))
(declare-fun to_rep17 (sfd_timeout_number) Int)
(declare-fun of_rep17 (Int) sfd_timeout_number)
(assert (forall ((x sfd_timeout_number)) (! (= (of_rep17 (to_rep17 x)) x) :pattern ((to_rep17 x)))))
(assert (forall ((x sfd_timeout_number)) (! (in_range16 (to_rep17 x)) :pattern ((to_rep17 x)))))
(assert (forall ((x Int)) (! (=> (in_range16 x) (= (to_rep17 (of_rep17 x)) x)) :pattern ((to_rep17 (of_rep17 x))))))
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__decadriver__configuration_type__channel channel_number) (rec__decadriver__configuration_type__prf prf_type) (rec__decadriver__configuration_type__tx_preamble_length preamble_lengths) (rec__decadriver__configuration_type__tx_pac preamble_acq_chunk_length) (rec__decadriver__configuration_type__tx_preamble_code preamble_code_number) (rec__decadriver__configuration_type__rx_preamble_code preamble_code_number) (rec__decadriver__configuration_type__use_nonstandard_sfd Bool) (rec__decadriver__configuration_type__data_rate data_rates) (rec__decadriver__configuration_type__phr_mode physical_header_modes) (rec__decadriver__configuration_type__sfd_timeout sfd_timeout_number) (rec__decadriver__configuration_type__enable_smart_power Bool)))))
(define-fun us_split_fields_Channel__projection ((a us_split_fields8)) channel_number (rec__decadriver__configuration_type__channel a))
(define-fun us_split_fields_PRF__projection ((a us_split_fields8)) prf_type (rec__decadriver__configuration_type__prf a))
(define-fun us_split_fields_Tx_Preamble_Length__projection ((a us_split_fields8)) preamble_lengths (rec__decadriver__configuration_type__tx_preamble_length a))
(define-fun us_split_fields_Tx_PAC__projection ((a us_split_fields8)) preamble_acq_chunk_length (rec__decadriver__configuration_type__tx_pac a))
(define-fun us_split_fields_Tx_Preamble_Code__projection ((a us_split_fields8)) preamble_code_number (rec__decadriver__configuration_type__tx_preamble_code a))
(define-fun us_split_fields_Rx_Preamble_Code__projection ((a us_split_fields8)) preamble_code_number (rec__decadriver__configuration_type__rx_preamble_code a))
(define-fun us_split_fields_Use_Nonstandard_SFD__projection ((a us_split_fields8)) Bool (rec__decadriver__configuration_type__use_nonstandard_sfd a))
(define-fun us_split_fields_Data_Rate__projection ((a us_split_fields8)) data_rates (rec__decadriver__configuration_type__data_rate a))
(define-fun us_split_fields_PHR_Mode__projection ((a us_split_fields8)) physical_header_modes (rec__decadriver__configuration_type__phr_mode a))
(define-fun us_split_fields_SFD_Timeout__projection ((a us_split_fields8)) sfd_timeout_number (rec__decadriver__configuration_type__sfd_timeout a))
(define-fun us_split_fields_Enable_Smart_Power__projection ((a us_split_fields8)) Bool (rec__decadriver__configuration_type__enable_smart_power a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___136__projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep4 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___138__projection ((a us_rep4)) us_split_fields8 (us_split_fields9 a))
(define-fun bool_eq4 ((a us_rep4) (b us_rep4)) Bool (ite (and (and (and (and (and (and (and (and (and (and (= (to_rep11 (rec__decadriver__configuration_type__channel (us_split_fields9 a))) (to_rep11 (rec__decadriver__configuration_type__channel (us_split_fields9 b)))) (= (to_rep12 (rec__decadriver__configuration_type__prf (us_split_fields9 a))) (to_rep12 (rec__decadriver__configuration_type__prf (us_split_fields9 b))))) (= (to_rep13 (rec__decadriver__configuration_type__tx_preamble_length (us_split_fields9 a))) (to_rep13 (rec__decadriver__configuration_type__tx_preamble_length (us_split_fields9 b))))) (= (to_rep14 (rec__decadriver__configuration_type__tx_pac (us_split_fields9 a))) (to_rep14 (rec__decadriver__configuration_type__tx_pac (us_split_fields9 b))))) (= (to_rep15 (rec__decadriver__configuration_type__tx_preamble_code (us_split_fields9 a))) (to_rep15 (rec__decadriver__configuration_type__tx_preamble_code (us_split_fields9 b))))) (= (to_rep15 (rec__decadriver__configuration_type__rx_preamble_code (us_split_fields9 a))) (to_rep15 (rec__decadriver__configuration_type__rx_preamble_code (us_split_fields9 b))))) (= (rec__decadriver__configuration_type__use_nonstandard_sfd (us_split_fields9 a)) (rec__decadriver__configuration_type__use_nonstandard_sfd (us_split_fields9 b)))) (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 a))) (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 b))))) (= (to_rep16 (rec__decadriver__configuration_type__phr_mode (us_split_fields9 a))) (to_rep16 (rec__decadriver__configuration_type__phr_mode (us_split_fields9 b))))) (= (to_rep17 (rec__decadriver__configuration_type__sfd_timeout (us_split_fields9 a))) (to_rep17 (rec__decadriver__configuration_type__sfd_timeout (us_split_fields9 b))))) (= (rec__decadriver__configuration_type__enable_smart_power (us_split_fields9 a)) (rec__decadriver__configuration_type__enable_smart_power (us_split_fields9 b)))) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep4) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep4) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep4)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment4 a))))
(declare-const decadriver__configuration_type__channel__first__bit Int)
(declare-const decadriver__configuration_type__channel__last__bit Int)
(declare-const decadriver__configuration_type__channel__position Int)
(assert (<= 0 decadriver__configuration_type__channel__first__bit))
(assert (< decadriver__configuration_type__channel__first__bit decadriver__configuration_type__channel__last__bit))
(assert (<= 0 decadriver__configuration_type__channel__position))
(declare-const decadriver__configuration_type__prf__first__bit Int)
(declare-const decadriver__configuration_type__prf__last__bit Int)
(declare-const decadriver__configuration_type__prf__position Int)
(assert (<= 0 decadriver__configuration_type__prf__first__bit))
(assert (< decadriver__configuration_type__prf__first__bit decadriver__configuration_type__prf__last__bit))
(assert (<= 0 decadriver__configuration_type__prf__position))
(declare-const decadriver__configuration_type__tx_preamble_length__first__bit Int)
(declare-const decadriver__configuration_type__tx_preamble_length__last__bit Int)
(declare-const decadriver__configuration_type__tx_preamble_length__position Int)
(assert (<= 0 decadriver__configuration_type__tx_preamble_length__first__bit))
(assert (< decadriver__configuration_type__tx_preamble_length__first__bit decadriver__configuration_type__tx_preamble_length__last__bit))
(assert (<= 0 decadriver__configuration_type__tx_preamble_length__position))
(declare-const decadriver__configuration_type__tx_pac__first__bit Int)
(declare-const decadriver__configuration_type__tx_pac__last__bit Int)
(declare-const decadriver__configuration_type__tx_pac__position Int)
(assert (<= 0 decadriver__configuration_type__tx_pac__first__bit))
(assert (< decadriver__configuration_type__tx_pac__first__bit decadriver__configuration_type__tx_pac__last__bit))
(assert (<= 0 decadriver__configuration_type__tx_pac__position))
(declare-const decadriver__configuration_type__tx_preamble_code__first__bit Int)
(declare-const decadriver__configuration_type__tx_preamble_code__last__bit Int)
(declare-const decadriver__configuration_type__tx_preamble_code__position Int)
(assert (<= 0 decadriver__configuration_type__tx_preamble_code__first__bit))
(assert (< decadriver__configuration_type__tx_preamble_code__first__bit decadriver__configuration_type__tx_preamble_code__last__bit))
(assert (<= 0 decadriver__configuration_type__tx_preamble_code__position))
(declare-const decadriver__configuration_type__rx_preamble_code__first__bit Int)
(declare-const decadriver__configuration_type__rx_preamble_code__last__bit Int)
(declare-const decadriver__configuration_type__rx_preamble_code__position Int)
(assert (<= 0 decadriver__configuration_type__rx_preamble_code__first__bit))
(assert (< decadriver__configuration_type__rx_preamble_code__first__bit decadriver__configuration_type__rx_preamble_code__last__bit))
(assert (<= 0 decadriver__configuration_type__rx_preamble_code__position))
(declare-const decadriver__configuration_type__use_nonstandard_sfd__first__bit Int)
(declare-const decadriver__configuration_type__use_nonstandard_sfd__last__bit Int)
(declare-const decadriver__configuration_type__use_nonstandard_sfd__position Int)
(assert (<= 0 decadriver__configuration_type__use_nonstandard_sfd__first__bit))
(assert (< decadriver__configuration_type__use_nonstandard_sfd__first__bit decadriver__configuration_type__use_nonstandard_sfd__last__bit))
(assert (<= 0 decadriver__configuration_type__use_nonstandard_sfd__position))
(declare-const decadriver__configuration_type__data_rate__first__bit Int)
(declare-const decadriver__configuration_type__data_rate__last__bit Int)
(declare-const decadriver__configuration_type__data_rate__position Int)
(assert (<= 0 decadriver__configuration_type__data_rate__first__bit))
(assert (< decadriver__configuration_type__data_rate__first__bit decadriver__configuration_type__data_rate__last__bit))
(assert (<= 0 decadriver__configuration_type__data_rate__position))
(declare-const decadriver__configuration_type__phr_mode__first__bit Int)
(declare-const decadriver__configuration_type__phr_mode__last__bit Int)
(declare-const decadriver__configuration_type__phr_mode__position Int)
(assert (<= 0 decadriver__configuration_type__phr_mode__first__bit))
(assert (< decadriver__configuration_type__phr_mode__first__bit decadriver__configuration_type__phr_mode__last__bit))
(assert (<= 0 decadriver__configuration_type__phr_mode__position))
(declare-const decadriver__configuration_type__sfd_timeout__first__bit Int)
(declare-const decadriver__configuration_type__sfd_timeout__last__bit Int)
(declare-const decadriver__configuration_type__sfd_timeout__position Int)
(assert (<= 0 decadriver__configuration_type__sfd_timeout__first__bit))
(assert (< decadriver__configuration_type__sfd_timeout__first__bit decadriver__configuration_type__sfd_timeout__last__bit))
(assert (<= 0 decadriver__configuration_type__sfd_timeout__position))
(declare-const decadriver__configuration_type__enable_smart_power__first__bit Int)
(declare-const decadriver__configuration_type__enable_smart_power__last__bit Int)
(declare-const decadriver__configuration_type__enable_smart_power__position Int)
(assert (<= 0 decadriver__configuration_type__enable_smart_power__first__bit))
(assert (< decadriver__configuration_type__enable_smart_power__first__bit decadriver__configuration_type__enable_smart_power__last__bit))
(assert (<= 0 decadriver__configuration_type__enable_smart_power__position))
(declare-fun user_eq22 (us_rep4 us_rep4) Bool)
(declare-const dummy22 us_rep4)
(declare-datatypes () ((configuration_type__ref (mk_configuration_type__ref (configuration_type__content us_rep4)))))
(define-fun configuration_type__ref___projection ((a configuration_type__ref)) us_rep4 (configuration_type__content a))
(define-fun dynamic_invariant2 ((temp___expr_4860 us_rep4) (temp___is_init_4856 Bool) (temp___skip_constant_4857 Bool) (temp___do_toplevel_4858 Bool) (temp___do_typ_inv_4859 Bool)) Bool (=> (= temp___is_init_4856 true) (let ((temp___4862 (to_rep11 (rec__decadriver__configuration_type__channel (us_split_fields9 temp___expr_4860))))) (or (and (<= 1 temp___4862) (<= temp___4862 5)) (and (<= 7 temp___4862) (<= temp___4862 7))))))
(declare-fun nth2 ((_ BitVec 32) Int) Bool)
(declare-fun lsr2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun asr2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun lsl2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_right3 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_left3 ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun to_int13 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32)) (bv2nat x) (- (- 4294967296 (bv2nat x)))))
(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvlshr x n) (lsr2 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvashr x n) (asr2 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvshl x n) (lsl2 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_left3 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_right3 v (bv2nat n)))))
(declare-fun nth_bv2 ((_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (= (nth_bv2 x i) true) (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (nth2 x (bv2nat i)) (nth_bv2 x i))))
(assert (forall ((x (_ BitVec 32)) (i Int)) (=> (and (<= 0 i) (< i 4294967296)) (= (nth_bv2 x ((_ int2bv 32) i)) (nth2 x i)))))
(declare-fun eq_sub_bv2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i))) (= (eq_sub_bv2 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub2 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (= (eq_sub2 a b (bv2nat i) (bv2nat n)) (eq_sub_bv2 a b i n))))
(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 (_ BitVec 32))))))
(declare-fun power2 ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun bv_min2 ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))
(define-fun bv_max2 ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))
(declare-sort bits_32 0)
(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 32))
(declare-fun attr__ATTRIBUTE_IMAGE19 ((_ BitVec 32)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check19 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE19 (us_image) (_ BitVec 32))
(declare-fun user_eq23 (bits_32 bits_32) Bool)
(declare-const dummy23 bits_32)
(declare-datatypes () ((bits_32__ref (mk_bits_32__ref (bits_32__content bits_32)))))
(define-fun bits_32__ref___projection ((a bits_32__ref)) bits_32 (bits_32__content a))
(declare-fun to_rep18 (bits_32) (_ BitVec 32))
(declare-fun of_rep18 ((_ BitVec 32)) bits_32)
(assert (forall ((x bits_32)) (! (= (of_rep18 (to_rep18 x)) x) :pattern ((to_rep18 x)))))
(assert true)
(assert (forall ((x (_ BitVec 32))) (! (= (to_rep18 (of_rep18 x)) x) :pattern ((to_rep18 (of_rep18 x))))))
(define-fun to_int14 ((x bits_32)) Int (bv2nat (to_rep18 x)))
(assert (forall ((x bits_32)) (! (uint_in_range2 (to_int14 x)) :pattern ((to_int14 x)))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int bits_32))))))
(declare-fun slide ((Array Int bits_32) Int Int) (Array Int bits_32))
(assert (forall ((a (Array Int bits_32))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int bits_32))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq5 ((a (Array Int bits_32)) (a__first Int) (a__last Int) (b (Array Int bits_32)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_206 Int)) (=> (and (<= a__first temp___idx_206) (<= temp___idx_206 a__last)) (= (to_rep18 (select a temp___idx_206)) (to_rep18 (select b (+ (- b__first a__first) temp___idx_206))))))) true false))
(assert (forall ((a (Array Int bits_32)) (b (Array Int bits_32))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq5 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_206 Int)) (=> (and (<= a__first temp___idx_206) (<= temp___idx_206 a__last)) (= (to_rep18 (select a temp___idx_206)) (to_rep18 (select b (+ (- b__first a__first) temp___idx_206)))))))))))
(declare-datatypes () ((us_split_fields10 (mk___split_fields5 (rec__decadriver__driver_type__part_id bits_32) (rec__decadriver__driver_type__lot_id bits_32) (rec__decadriver__driver_type__antenna_delay_prf_64 bits_16) (rec__decadriver__driver_type__antenna_delay_prf_16 bits_16) (rec__decadriver__driver_type__xtal_trim bits_5) (rec__decadriver__driver_type__otp_tx_power_levels (Array Int bits_32)) (rec__decadriver__driver_type__long_frames Bool) (rec__decadriver__driver_type__sys_cfg_reg us_rep) (rec__decadriver__driver_type__use_otp_xtal_trim Bool) (rec__decadriver__driver_type__use_otp_antenna_delay Bool) (rec__decadriver__driver_type__detect_frame_timeout Bool) (rec__decadriver__driver_type__detect_sfd_timeout Bool) (rec__decadriver__driver_type__detect_phr_error Bool) (rec__decadriver__driver_type__detect_rs_error Bool) (rec__decadriver__driver_type__detect_fcs_error Bool)))))
(define-fun us_split_fields_Part_ID__projection ((a us_split_fields10)) bits_32 (rec__decadriver__driver_type__part_id a))
(define-fun us_split_fields_Lot_ID__projection ((a us_split_fields10)) bits_32 (rec__decadriver__driver_type__lot_id a))
(define-fun us_split_fields_Antenna_Delay_PRF_64__projection ((a us_split_fields10)) bits_16 (rec__decadriver__driver_type__antenna_delay_prf_64 a))
(define-fun us_split_fields_Antenna_Delay_PRF_16__projection ((a us_split_fields10)) bits_16 (rec__decadriver__driver_type__antenna_delay_prf_16 a))
(define-fun us_split_fields_XTAL_Trim__projection ((a us_split_fields10)) bits_5 (rec__decadriver__driver_type__xtal_trim a))
(define-fun us_split_fields_OTP_Tx_Power_Levels__projection ((a us_split_fields10)) (Array Int bits_32) (rec__decadriver__driver_type__otp_tx_power_levels a))
(define-fun us_split_fields_Long_Frames__projection ((a us_split_fields10)) Bool (rec__decadriver__driver_type__long_frames a))
(define-fun us_split_fields_SYS_CFG_Reg__projection ((a us_split_fields10)) us_rep (rec__decadriver__driver_type__sys_cfg_reg a))
(define-fun us_split_fields_Use_OTP_XTAL_Trim__projection ((a us_split_fields10)) Bool (rec__decadriver__driver_type__use_otp_xtal_trim a))
(define-fun us_split_fields_Use_OTP_Antenna_Delay__projection ((a us_split_fields10)) Bool (rec__decadriver__driver_type__use_otp_antenna_delay a))
(define-fun us_split_fields_Detect_Frame_Timeout__projection ((a us_split_fields10)) Bool (rec__decadriver__driver_type__detect_frame_timeout a))
(define-fun us_split_fields_Detect_SFD_Timeout__projection ((a us_split_fields10)) Bool (rec__decadriver__driver_type__detect_sfd_timeout a))
(define-fun us_split_fields_Detect_PHR_Error__projection ((a us_split_fields10)) Bool (rec__decadriver__driver_type__detect_phr_error a))
(define-fun us_split_fields_Detect_RS_Error__projection ((a us_split_fields10)) Bool (rec__decadriver__driver_type__detect_rs_error a))
(define-fun us_split_fields_Detect_FCS_Error__projection ((a us_split_fields10)) Bool (rec__decadriver__driver_type__detect_fcs_error a))
(declare-datatypes () ((us_split_fields__ref5 (mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___140__projection ((a us_split_fields__ref5)) us_split_fields10 (us_split_fields__content5 a))
(declare-datatypes () ((us_rep5 (mk___rep5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___142__projection ((a us_rep5)) us_split_fields10 (us_split_fields11 a))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep5) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep5) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep5)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment5 a))))
(declare-const decadriver__driver_type__part_id__first__bit Int)
(declare-const decadriver__driver_type__part_id__last__bit Int)
(declare-const decadriver__driver_type__part_id__position Int)
(assert (<= 0 decadriver__driver_type__part_id__first__bit))
(assert (< decadriver__driver_type__part_id__first__bit decadriver__driver_type__part_id__last__bit))
(assert (<= 0 decadriver__driver_type__part_id__position))
(declare-const decadriver__driver_type__lot_id__first__bit Int)
(declare-const decadriver__driver_type__lot_id__last__bit Int)
(declare-const decadriver__driver_type__lot_id__position Int)
(assert (<= 0 decadriver__driver_type__lot_id__first__bit))
(assert (< decadriver__driver_type__lot_id__first__bit decadriver__driver_type__lot_id__last__bit))
(assert (<= 0 decadriver__driver_type__lot_id__position))
(declare-const decadriver__driver_type__antenna_delay_prf_64__first__bit Int)
(declare-const decadriver__driver_type__antenna_delay_prf_64__last__bit Int)
(declare-const decadriver__driver_type__antenna_delay_prf_64__position Int)
(assert (<= 0 decadriver__driver_type__antenna_delay_prf_64__first__bit))
(assert (< decadriver__driver_type__antenna_delay_prf_64__first__bit decadriver__driver_type__antenna_delay_prf_64__last__bit))
(assert (<= 0 decadriver__driver_type__antenna_delay_prf_64__position))
(declare-const decadriver__driver_type__antenna_delay_prf_16__first__bit Int)
(declare-const decadriver__driver_type__antenna_delay_prf_16__last__bit Int)
(declare-const decadriver__driver_type__antenna_delay_prf_16__position Int)
(assert (<= 0 decadriver__driver_type__antenna_delay_prf_16__first__bit))
(assert (< decadriver__driver_type__antenna_delay_prf_16__first__bit decadriver__driver_type__antenna_delay_prf_16__last__bit))
(assert (<= 0 decadriver__driver_type__antenna_delay_prf_16__position))
(declare-const decadriver__driver_type__xtal_trim__first__bit Int)
(declare-const decadriver__driver_type__xtal_trim__last__bit Int)
(declare-const decadriver__driver_type__xtal_trim__position Int)
(assert (<= 0 decadriver__driver_type__xtal_trim__first__bit))
(assert (< decadriver__driver_type__xtal_trim__first__bit decadriver__driver_type__xtal_trim__last__bit))
(assert (<= 0 decadriver__driver_type__xtal_trim__position))
(declare-const decadriver__driver_type__otp_tx_power_levels__first__bit Int)
(declare-const decadriver__driver_type__otp_tx_power_levels__last__bit Int)
(declare-const decadriver__driver_type__otp_tx_power_levels__position Int)
(assert (<= 0 decadriver__driver_type__otp_tx_power_levels__first__bit))
(assert (< decadriver__driver_type__otp_tx_power_levels__first__bit decadriver__driver_type__otp_tx_power_levels__last__bit))
(assert (<= 0 decadriver__driver_type__otp_tx_power_levels__position))
(declare-const decadriver__driver_type__long_frames__first__bit Int)
(declare-const decadriver__driver_type__long_frames__last__bit Int)
(declare-const decadriver__driver_type__long_frames__position Int)
(assert (<= 0 decadriver__driver_type__long_frames__first__bit))
(assert (< decadriver__driver_type__long_frames__first__bit decadriver__driver_type__long_frames__last__bit))
(assert (<= 0 decadriver__driver_type__long_frames__position))
(declare-const decadriver__driver_type__sys_cfg_reg__first__bit Int)
(declare-const decadriver__driver_type__sys_cfg_reg__last__bit Int)
(declare-const decadriver__driver_type__sys_cfg_reg__position Int)
(assert (<= 0 decadriver__driver_type__sys_cfg_reg__first__bit))
(assert (< decadriver__driver_type__sys_cfg_reg__first__bit decadriver__driver_type__sys_cfg_reg__last__bit))
(assert (<= 0 decadriver__driver_type__sys_cfg_reg__position))
(declare-const decadriver__driver_type__use_otp_xtal_trim__first__bit Int)
(declare-const decadriver__driver_type__use_otp_xtal_trim__last__bit Int)
(declare-const decadriver__driver_type__use_otp_xtal_trim__position Int)
(assert (<= 0 decadriver__driver_type__use_otp_xtal_trim__first__bit))
(assert (< decadriver__driver_type__use_otp_xtal_trim__first__bit decadriver__driver_type__use_otp_xtal_trim__last__bit))
(assert (<= 0 decadriver__driver_type__use_otp_xtal_trim__position))
(declare-const decadriver__driver_type__use_otp_antenna_delay__first__bit Int)
(declare-const decadriver__driver_type__use_otp_antenna_delay__last__bit Int)
(declare-const decadriver__driver_type__use_otp_antenna_delay__position Int)
(assert (<= 0 decadriver__driver_type__use_otp_antenna_delay__first__bit))
(assert (< decadriver__driver_type__use_otp_antenna_delay__first__bit decadriver__driver_type__use_otp_antenna_delay__last__bit))
(assert (<= 0 decadriver__driver_type__use_otp_antenna_delay__position))
(declare-const decadriver__driver_type__detect_frame_timeout__first__bit Int)
(declare-const decadriver__driver_type__detect_frame_timeout__last__bit Int)
(declare-const decadriver__driver_type__detect_frame_timeout__position Int)
(assert (<= 0 decadriver__driver_type__detect_frame_timeout__first__bit))
(assert (< decadriver__driver_type__detect_frame_timeout__first__bit decadriver__driver_type__detect_frame_timeout__last__bit))
(assert (<= 0 decadriver__driver_type__detect_frame_timeout__position))
(declare-const decadriver__driver_type__detect_sfd_timeout__first__bit Int)
(declare-const decadriver__driver_type__detect_sfd_timeout__last__bit Int)
(declare-const decadriver__driver_type__detect_sfd_timeout__position Int)
(assert (<= 0 decadriver__driver_type__detect_sfd_timeout__first__bit))
(assert (< decadriver__driver_type__detect_sfd_timeout__first__bit decadriver__driver_type__detect_sfd_timeout__last__bit))
(assert (<= 0 decadriver__driver_type__detect_sfd_timeout__position))
(declare-const decadriver__driver_type__detect_phr_error__first__bit Int)
(declare-const decadriver__driver_type__detect_phr_error__last__bit Int)
(declare-const decadriver__driver_type__detect_phr_error__position Int)
(assert (<= 0 decadriver__driver_type__detect_phr_error__first__bit))
(assert (< decadriver__driver_type__detect_phr_error__first__bit decadriver__driver_type__detect_phr_error__last__bit))
(assert (<= 0 decadriver__driver_type__detect_phr_error__position))
(declare-const decadriver__driver_type__detect_rs_error__first__bit Int)
(declare-const decadriver__driver_type__detect_rs_error__last__bit Int)
(declare-const decadriver__driver_type__detect_rs_error__position Int)
(assert (<= 0 decadriver__driver_type__detect_rs_error__first__bit))
(assert (< decadriver__driver_type__detect_rs_error__first__bit decadriver__driver_type__detect_rs_error__last__bit))
(assert (<= 0 decadriver__driver_type__detect_rs_error__position))
(declare-const decadriver__driver_type__detect_fcs_error__first__bit Int)
(declare-const decadriver__driver_type__detect_fcs_error__last__bit Int)
(declare-const decadriver__driver_type__detect_fcs_error__position Int)
(assert (<= 0 decadriver__driver_type__detect_fcs_error__first__bit))
(assert (< decadriver__driver_type__detect_fcs_error__first__bit decadriver__driver_type__detect_fcs_error__last__bit))
(assert (<= 0 decadriver__driver_type__detect_fcs_error__position))
(declare-fun user_eq24 (us_rep5 us_rep5) Bool)
(declare-datatypes () ((driver_type__ref (mk_driver_type__ref (driver_type__content us_rep5)))))
(define-fun driver_type__ref___projection ((a driver_type__ref)) us_rep5 (driver_type__content a))
(declare-fun temp___4981 ((_ BitVec 32)) (Array Int bits_32))
(define-fun default_initial_assumption ((temp___expr_4979 us_rep5) (temp___skip_top_level_4980 Bool)) Bool (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep18 (rec__decadriver__driver_type__part_id (us_split_fields11 temp___expr_4979))) #x00000000) (= (to_rep18 (rec__decadriver__driver_type__lot_id (us_split_fields11 temp___expr_4979))) #x00000000)) (= (to_rep9 (rec__decadriver__driver_type__antenna_delay_prf_64 (us_split_fields11 temp___expr_4979))) #x0000)) (= (to_rep9 (rec__decadriver__driver_type__antenna_delay_prf_16 (us_split_fields11 temp___expr_4979))) #x0000)) (= (to_rep4 (rec__decadriver__driver_type__xtal_trim (us_split_fields11 temp___expr_4979))) #x10)) (= (rec__decadriver__driver_type__otp_tx_power_levels (us_split_fields11 temp___expr_4979)) (temp___4981 #x00000000))) (= (rec__decadriver__driver_type__long_frames (us_split_fields11 temp___expr_4979)) (distinct 0 0))) (= (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 temp___expr_4979)) (mk___rep (mk___split_fields (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep1 #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep #x00) (of_rep2 #x00) (of_rep4 #x00))))) (= (rec__decadriver__driver_type__use_otp_xtal_trim (us_split_fields11 temp___expr_4979)) (distinct 0 0))) (= (rec__decadriver__driver_type__use_otp_antenna_delay (us_split_fields11 temp___expr_4979)) (distinct 0 0))) (= (rec__decadriver__driver_type__detect_frame_timeout (us_split_fields11 temp___expr_4979)) (distinct 0 0))) (= (rec__decadriver__driver_type__detect_sfd_timeout (us_split_fields11 temp___expr_4979)) (distinct 0 0))) (= (rec__decadriver__driver_type__detect_phr_error (us_split_fields11 temp___expr_4979)) (distinct 0 0))) (= (rec__decadriver__driver_type__detect_rs_error (us_split_fields11 temp___expr_4979)) (distinct 0 0))) (= (rec__decadriver__driver_type__detect_fcs_error (us_split_fields11 temp___expr_4979)) (distinct 0 0))))
(declare-const config us_rep4)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-fun phr_mode (us_rep5) Int)
(declare-fun phr_mode__function_guard (Int us_rep5) Bool)
(define-fun dynamic_invariant3 ((temp___expr_4831 Int) (temp___is_init_4827 Bool) (temp___skip_constant_4828 Bool) (temp___do_toplevel_4829 Bool) (temp___do_typ_inv_4830 Bool)) Bool (=> (or (= temp___is_init_4827 true) (<= 0 1)) (in_range15 temp___expr_4831)))
(assert (forall ((self__ us_rep5)) (! (dynamic_invariant3 (phr_mode self__) true false true true) :pattern ((phr_mode self__)))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int bits_16))))))
(declare-fun slide1 ((Array Int bits_16) Int Int) (Array Int bits_16))
(assert (forall ((a (Array Int bits_16))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int bits_16))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq6 ((a (Array Int bits_16)) (a__first Int) (a__last Int) (b (Array Int bits_16)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_207 Int)) (=> (and (<= a__first temp___idx_207) (<= temp___idx_207 a__last)) (= (to_rep9 (select a temp___idx_207)) (to_rep9 (select b (+ (- b__first a__first) temp___idx_207))))))) true false))
(assert (forall ((a (Array Int bits_16)) (b (Array Int bits_16))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_207 Int)) (=> (and (<= a__first temp___idx_207) (<= temp___idx_207 a__last)) (= (to_rep9 (select a temp___idx_207)) (to_rep9 (select b (+ (- b__first a__first) temp___idx_207)))))))))))
(declare-const lde_replica_coeffs (Array Int bits_16))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-fun decadriver__lde_replica_coeffs__aggregate_def ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) (Array Int bits_16))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(assert (= lde_replica_coeffs (decadriver__lde_replica_coeffs__aggregate_def #x599A #x599A #x51EC #x428F #x451F #x2E14 #x8000 #x51EC #x28F6 #x3333 #x3AE1 #x3D71 #x3AE1 #x35C3 #x451F #x35C3 #x3333 #x35C3 #x35C3 #x47AE #x3AE1 #x3852 #x30A4 #x3852)))
(define-fun dynamic_invariant4 ((temp___expr_420 (_ BitVec 16)) (temp___is_init_416 Bool) (temp___skip_constant_417 Bool) (temp___do_toplevel_418 Bool) (temp___do_typ_inv_419 Bool)) Bool true)
(assert (forall ((temp___209 (_ BitVec 16)) (temp___210 (_ BitVec 16)) (temp___211 (_ BitVec 16)) (temp___212 (_ BitVec 16)) (temp___213 (_ BitVec 16)) (temp___214 (_ BitVec 16)) (temp___215 (_ BitVec 16)) (temp___216 (_ BitVec 16)) (temp___217 (_ BitVec 16)) (temp___218 (_ BitVec 16)) (temp___219 (_ BitVec 16)) (temp___220 (_ BitVec 16)) (temp___221 (_ BitVec 16)) (temp___222 (_ BitVec 16)) (temp___223 (_ BitVec 16)) (temp___224 (_ BitVec 16)) (temp___225 (_ BitVec 16)) (temp___226 (_ BitVec 16)) (temp___227 (_ BitVec 16)) (temp___228 (_ BitVec 16)) (temp___229 (_ BitVec 16)) (temp___230 (_ BitVec 16)) (temp___231 (_ BitVec 16)) (temp___232 (_ BitVec 16))) (let ((temp___208 (decadriver__lde_replica_coeffs__aggregate_def temp___209 temp___210 temp___211 temp___212 temp___213 temp___214 temp___215 temp___216 temp___217 temp___218 temp___219 temp___220 temp___221 temp___222 temp___223 temp___224 temp___225 temp___226 temp___227 temp___228 temp___229 temp___230 temp___231 temp___232))) (=> (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (dynamic_invariant4 temp___209 true true true true) (dynamic_invariant4 temp___210 true true true true)) (dynamic_invariant4 temp___211 true true true true)) (dynamic_invariant4 temp___212 true true true true)) (dynamic_invariant4 temp___213 true true true true)) (dynamic_invariant4 temp___214 true true true true)) (dynamic_invariant4 temp___215 true true true true)) (dynamic_invariant4 temp___216 true true true true)) (dynamic_invariant4 temp___217 true true true true)) (dynamic_invariant4 temp___218 true true true true)) (dynamic_invariant4 temp___219 true true true true)) (dynamic_invariant4 temp___220 true true true true)) (dynamic_invariant4 temp___221 true true true true)) (dynamic_invariant4 temp___222 true true true true)) (dynamic_invariant4 temp___223 true true true true)) (dynamic_invariant4 temp___224 true true true true)) (dynamic_invariant4 temp___225 true true true true)) (dynamic_invariant4 temp___226 true true true true)) (dynamic_invariant4 temp___227 true true true true)) (dynamic_invariant4 temp___228 true true true true)) (dynamic_invariant4 temp___229 true true true true)) (dynamic_invariant4 temp___230 true true true true)) (dynamic_invariant4 temp___231 true true true true)) (dynamic_invariant4 temp___232 true true true true)) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep9 (select temp___208 1)) temp___209) (= (to_rep9 (select temp___208 2)) temp___210)) (= (to_rep9 (select temp___208 3)) temp___211)) (= (to_rep9 (select temp___208 4)) temp___212)) (= (to_rep9 (select temp___208 5)) temp___213)) (= (to_rep9 (select temp___208 6)) temp___214)) (= (to_rep9 (select temp___208 7)) temp___215)) (= (to_rep9 (select temp___208 8)) temp___216)) (= (to_rep9 (select temp___208 9)) temp___217)) (= (to_rep9 (select temp___208 10)) temp___218)) (= (to_rep9 (select temp___208 11)) temp___219)) (= (to_rep9 (select temp___208 12)) temp___220)) (= (to_rep9 (select temp___208 13)) temp___221)) (= (to_rep9 (select temp___208 14)) temp___222)) (= (to_rep9 (select temp___208 15)) temp___223)) (= (to_rep9 (select temp___208 16)) temp___224)) (= (to_rep9 (select temp___208 17)) temp___225)) (= (to_rep9 (select temp___208 18)) temp___226)) (= (to_rep9 (select temp___208 19)) temp___227)) (= (to_rep9 (select temp___208 20)) temp___228)) (= (to_rep9 (select temp___208 21)) temp___229)) (= (to_rep9 (select temp___208 22)) temp___230)) (= (to_rep9 (select temp___208 23)) temp___231)) (= (to_rep9 (select temp___208 24)) temp___232))))))
(define-fun dynamic_invariant5 ((temp___expr_532 (_ BitVec 32)) (temp___is_init_528 Bool) (temp___skip_constant_529 Bool) (temp___do_toplevel_530 Bool) (temp___do_typ_inv_531 Bool)) Bool true)
(assert (forall ((temp___4983 (_ BitVec 32))) (=> (dynamic_invariant5 temp___4983 true true true true) (forall ((temp___4984 Int)) (= (to_rep18 (select (temp___4981 temp___4983) temp___4984)) temp___4983)))))
(define-fun dynamic_invariant6 ((temp___expr_315 (_ BitVec 8)) (temp___is_init_311 Bool) (temp___skip_constant_312 Bool) (temp___do_toplevel_313 Bool) (temp___do_typ_inv_314 Bool)) Bool (=> (or (= temp___is_init_311 true) (bvule #x00 #x01)) (in_range1 temp___expr_315)))
(define-fun dynamic_invariant7 ((temp___expr_322 (_ BitVec 8)) (temp___is_init_318 Bool) (temp___skip_constant_319 Bool) (temp___do_toplevel_320 Bool) (temp___do_typ_inv_321 Bool)) Bool (=> (or (= temp___is_init_318 true) (bvule #x00 #x03)) (in_range2 temp___expr_322)))
(define-fun dynamic_invariant8 ((temp___expr_329 (_ BitVec 8)) (temp___is_init_325 Bool) (temp___skip_constant_326 Bool) (temp___do_toplevel_327 Bool) (temp___do_typ_inv_328 Bool)) Bool (=> (or (= temp___is_init_325 true) (bvule #x00 #x07)) (in_range3 temp___expr_329)))
(define-fun dynamic_invariant9 ((temp___expr_336 (_ BitVec 8)) (temp___is_init_332 Bool) (temp___skip_constant_333 Bool) (temp___do_toplevel_334 Bool) (temp___do_typ_inv_335 Bool)) Bool (=> (or (= temp___is_init_332 true) (bvule #x00 #x0F)) (in_range4 temp___expr_336)))
(define-fun dynamic_invariant10 ((temp___expr_343 (_ BitVec 8)) (temp___is_init_339 Bool) (temp___skip_constant_340 Bool) (temp___do_toplevel_341 Bool) (temp___do_typ_inv_342 Bool)) Bool (=> (or (= temp___is_init_339 true) (bvule #x00 #x1F)) (in_range5 temp___expr_343)))
(define-fun dynamic_invariant11 ((temp___expr_357 (_ BitVec 8)) (temp___is_init_353 Bool) (temp___skip_constant_354 Bool) (temp___do_toplevel_355 Bool) (temp___do_typ_inv_356 Bool)) Bool (=> (or (= temp___is_init_353 true) (bvule #x00 #x7F)) (in_range6 temp___expr_357)))
(define-fun dynamic_invariant12 ((temp___expr_364 (_ BitVec 8)) (temp___is_init_360 Bool) (temp___skip_constant_361 Bool) (temp___do_toplevel_362 Bool) (temp___do_typ_inv_363 Bool)) Bool true)
(define-fun dynamic_invariant13 ((temp___expr_371 (_ BitVec 16)) (temp___is_init_367 Bool) (temp___skip_constant_368 Bool) (temp___do_toplevel_369 Bool) (temp___do_typ_inv_370 Bool)) Bool (=> (or (= temp___is_init_367 true) (bvule #x0000 #x01FF)) (in_range7 temp___expr_371)))
(define-fun dynamic_invariant14 ((temp___expr_378 (_ BitVec 16)) (temp___is_init_374 Bool) (temp___skip_constant_375 Bool) (temp___do_toplevel_376 Bool) (temp___do_typ_inv_377 Bool)) Bool (=> (or (= temp___is_init_374 true) (bvule #x0000 #x03FF)) (in_range8 temp___expr_378)))
(define-fun dynamic_invariant15 ((temp___expr_4786 Int) (temp___is_init_4782 Bool) (temp___skip_constant_4783 Bool) (temp___do_toplevel_4784 Bool) (temp___do_typ_inv_4785 Bool)) Bool (=> (or (= temp___is_init_4782 true) (<= 0 2)) (in_range9 temp___expr_4786)))
(define-fun dynamic_invariant16 ((temp___expr_4803 Int) (temp___is_init_4799 Bool) (temp___skip_constant_4800 Bool) (temp___do_toplevel_4801 Bool) (temp___do_typ_inv_4802 Bool)) Bool (=> (or (= temp___is_init_4799 true) (<= 0 1)) (in_range11 temp___expr_4803)))
(define-fun dynamic_invariant17 ((temp___expr_4810 Int) (temp___is_init_4806 Bool) (temp___skip_constant_4807 Bool) (temp___do_toplevel_4808 Bool) (temp___do_typ_inv_4809 Bool)) Bool (=> (or (= temp___is_init_4806 true) (<= 0 7)) (in_range12 temp___expr_4810)))
(define-fun dynamic_invariant18 ((temp___expr_4817 Int) (temp___is_init_4813 Bool) (temp___skip_constant_4814 Bool) (temp___do_toplevel_4815 Bool) (temp___do_typ_inv_4816 Bool)) Bool (=> (or (= temp___is_init_4813 true) (<= 0 3)) (in_range13 temp___expr_4817)))
(define-fun dynamic_invariant19 ((temp___expr_4824 Int) (temp___is_init_4820 Bool) (temp___skip_constant_4821 Bool) (temp___do_toplevel_4822 Bool) (temp___do_typ_inv_4823 Bool)) Bool (=> (or (= temp___is_init_4820 true) (<= 1 24)) (in_range14 temp___expr_4824)))
(declare-const lde_repc_reg__split_fields bits_16)
(declare-const sfd_timeout Int)
(declare-const self__ driver_type__ref)
(declare-const o bits_16)
(declare-const o1 bits_16)
(declare-const temp___5136 bits_16)
(declare-const o2 bits_1)
(declare-const o3 us_split_fields)
(declare-const o4 us_rep)
(declare-const o5 us_split_fields10)
(declare-const o6 us_rep5)
(declare-const o7 bits_16)
(declare-const o8 bits_16)
(declare-const temp___5140 bits_16)
(declare-const o9 bits_1)
(declare-const o10 us_split_fields)
(declare-const o11 us_rep)
(declare-const o12 us_split_fields10)
(declare-const o13 us_rep5)
(declare-const result bits_16)
(declare-const lde_repc_reg__split_fields1 bits_16)
(declare-const result1 driver_type__ref)
(declare-const self__1 us_rep5)
(declare-const result2 bits_16)
(declare-const lde_repc_reg__split_fields2 us_split_fields6)
(declare-const result3 driver_type__ref)
(declare-const self__2 us_rep5)
(declare-const result4 driver_type__ref)
(declare-const self__3 us_rep5)
(define-fun lde_repc_reg__split_fields3 () us_split_fields6 (mk___split_fields3 lde_repc_reg__split_fields1))
(assert (= (decadriver__lde_replica_coeffs__aggregate_def #x599A #x599A #x51EC #x428F #x451F #x2E14 #x8000 #x51EC #x28F6 #x3333 #x3AE1 #x3D71 #x3AE1 #x35C3 #x451F #x35C3 #x3333 #x35C3 #x35C3 #x47AE #x3AE1 #x3852 #x30A4 #x3852) lde_replica_coeffs))
(assert (dynamic_invariant i17s true false true true))
(assert (dynamic_invariant2 config true false true true))
(assert (=> (<= 0 65535) (in_range16 sfd_timeout)))
(assert (= (to_rep9 o) (to_rep9 (select lde_replica_coeffs (to_rep15 (rec__decadriver__configuration_type__rx_preamble_code (us_split_fields9 config)))))))
(assert (= o o1))
(assert (= temp___5136 o1))
(assert (= (mk___split_fields__ref3 (mk___split_fields3 result)) (mk___split_fields__ref3 (mk___split_fields3 lde_repc_reg__split_fields))))
(assert (= temp___5136 lde_repc_reg__split_fields1))
(assert (=> (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0) (= (to_rep o2) #x01)))
(assert (=> (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0) (= o3 (mk___split_fields (rec__dw1000__register_types__sys_cfg_type__ffen (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffbc (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffab (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffad (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffaa (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffam (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffar (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffa4 (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffa5 (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__hirq_pol (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__spi_edge (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__dis_fce (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__dis_drxb (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__dis_phe (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__dis_rsde (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__fcs_int2f (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__phr_mode (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__dis_stxp (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) o2 (rec__dw1000__register_types__sys_cfg_type__rxwtoe (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__rxautr (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__autoack (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__aackpend (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__reserved_1 (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__reserved_2 (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__)))))))))
(assert (=> (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0) (= o4 (mk___rep o3))))
(assert (=> (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0) (= o5 (mk___split_fields5 (rec__decadriver__driver_type__part_id (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__lot_id (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__antenna_delay_prf_64 (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__antenna_delay_prf_16 (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__xtal_trim (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__otp_tx_power_levels (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__long_frames (us_split_fields11 (driver_type__content self__))) o4 (rec__decadriver__driver_type__use_otp_xtal_trim (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__use_otp_antenna_delay (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__detect_frame_timeout (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__detect_sfd_timeout (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__detect_phr_error (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__detect_rs_error (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__detect_fcs_error (us_split_fields11 (driver_type__content self__)))))))
(assert (=> (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0) (= o6 (mk___rep5 o5))))
(assert (=> (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0) (= result1 self__)))
(assert (=> (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0) (= (let ((subject self__)) self__1) o6)))
(assert (=> (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0) (= (to_rep9 o7) (bvudiv (to_rep9 lde_repc_reg__split_fields1) #x0008))))
(assert (=> (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0) (= o7 o8)))
(assert (=> (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0) (= temp___5140 o8)))
(assert (=> (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0) (= result2 lde_repc_reg__split_fields1)))
(assert (=> (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0) (= lde_repc_reg__split_fields2 (mk___split_fields3 temp___5140))))
(assert (=> (not (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0)) (= (to_rep o9) #x00)))
(assert (=> (not (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0)) (= o10 (mk___split_fields (rec__dw1000__register_types__sys_cfg_type__ffen (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffbc (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffab (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffad (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffaa (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffam (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffar (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffa4 (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__ffa5 (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__hirq_pol (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__spi_edge (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__dis_fce (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__dis_drxb (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__dis_phe (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__dis_rsde (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__fcs_int2f (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__phr_mode (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__dis_stxp (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) o9 (rec__dw1000__register_types__sys_cfg_type__rxwtoe (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__rxautr (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__autoack (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__aackpend (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__reserved_1 (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__))))) (rec__dw1000__register_types__sys_cfg_type__reserved_2 (us_split_fields1 (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (driver_type__content self__)))))))))
(assert (=> (not (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0)) (= o11 (mk___rep o10))))
(assert (=> (not (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0)) (= o12 (mk___split_fields5 (rec__decadriver__driver_type__part_id (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__lot_id (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__antenna_delay_prf_64 (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__antenna_delay_prf_16 (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__xtal_trim (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__otp_tx_power_levels (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__long_frames (us_split_fields11 (driver_type__content self__))) o11 (rec__decadriver__driver_type__use_otp_xtal_trim (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__use_otp_antenna_delay (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__detect_frame_timeout (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__detect_sfd_timeout (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__detect_phr_error (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__detect_rs_error (us_split_fields11 (driver_type__content self__))) (rec__decadriver__driver_type__detect_fcs_error (us_split_fields11 (driver_type__content self__)))))))
(assert (=> (not (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0)) (= o13 (mk___rep5 o12))))
(assert (=> (not (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0)) (= result3 self__)))
(assert (=> (not (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0)) (= (let ((subject self__)) self__2) o13)))
(assert (=> (not (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0)) (= (let ((subject self__)) (mk_driver_type__ref self__1)) (let ((subject self__)) (mk_driver_type__ref self__2)))))
(assert (=> (not (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0)) (= lde_repc_reg__split_fields2 lde_repc_reg__split_fields3)))
(assert (=> (not (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0)) (= self__1 self__2)))
(assert (=> (not (= (to_rep10 (rec__decadriver__configuration_type__data_rate (us_split_fields9 config))) 0)) (= lde_repc_reg__split_fields2 lde_repc_reg__split_fields3)))
(assert (= result4 (let ((subject self__)) (mk_driver_type__ref self__1))))
(assert (= (let ((subject self__)) self__3) (mk___rep5 (mk___split_fields5 (rec__decadriver__driver_type__part_id (us_split_fields11 (let ((subject self__)) self__1))) (rec__decadriver__driver_type__lot_id (us_split_fields11 (let ((subject self__)) self__1))) (rec__decadriver__driver_type__antenna_delay_prf_64 (us_split_fields11 (let ((subject self__)) self__1))) (rec__decadriver__driver_type__antenna_delay_prf_16 (us_split_fields11 (let ((subject self__)) self__1))) (rec__decadriver__driver_type__xtal_trim (us_split_fields11 (let ((subject self__)) self__1))) (rec__decadriver__driver_type__otp_tx_power_levels (us_split_fields11 (let ((subject self__)) self__1))) (ite (= (to_rep16 (rec__decadriver__configuration_type__phr_mode (us_split_fields9 config))) 1) true false) (rec__decadriver__driver_type__sys_cfg_reg (us_split_fields11 (let ((subject self__)) self__1))) (rec__decadriver__driver_type__use_otp_xtal_trim (us_split_fields11 (let ((subject self__)) self__1))) (rec__decadriver__driver_type__use_otp_antenna_delay (us_split_fields11 (let ((subject self__)) self__1))) (rec__decadriver__driver_type__detect_frame_timeout (us_split_fields11 (let ((subject self__)) self__1))) (rec__decadriver__driver_type__detect_sfd_timeout (us_split_fields11 (let ((subject self__)) self__1))) (rec__decadriver__driver_type__detect_phr_error (us_split_fields11 (let ((subject self__)) self__1))) (rec__decadriver__driver_type__detect_rs_error (us_split_fields11 (let ((subject self__)) self__1))) (rec__decadriver__driver_type__detect_fcs_error (us_split_fields11 (let ((subject self__)) self__1)))))))
(assert (not (in_range_int1 (to_rep16 (rec__decadriver__configuration_type__phr_mode (us_split_fields9 config))))))
(check-sat)
(exit)
