(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 32) Int) Bool)
(declare-fun lsr ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun asr ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun lsl ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_right1 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_left1 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32)) (bv2nat x) (- (- 4294967296 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 32)) (i Int)) (=> (and (<= 0 i) (< i 4294967296)) (= (nth_bv x ((_ int2bv 32) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 32))))))
(declare-fun power ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun bv_min ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(define-fun dynamic_invariant ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range2 temp___expr_74)))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-fun to_upper (Int) Int)
(declare-fun to_upper__function_guard (Int Int) Bool)
(assert (forall ((item Int)) (! (=> (dynamic_invariant item true true true true) (dynamic_invariant (to_upper item) true false true true)) :pattern ((to_upper item)))))
(declare-sort unsigned32 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 32))
(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 32)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 32))
(declare-fun user_eq2 (unsigned32 unsigned32) Bool)
(declare-const dummy2 unsigned32)
(declare-datatypes () ((unsigned32__ref (mk_unsigned32__ref (unsigned32__content unsigned32)))))
(define-fun unsigned32__ref___projection ((a unsigned32__ref)) unsigned32 (unsigned32__content a))
(define-fun dynamic_invariant1 ((temp___expr_284 (_ BitVec 32)) (temp___is_init_280 Bool) (temp___skip_constant_281 Bool) (temp___do_toplevel_282 Bool) (temp___do_typ_inv_283 Bool)) Bool true)
(declare-sort classtype 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (classtype classtype) Bool)
(declare-const dummy3 classtype)
(declare-datatypes () ((classtype__ref (mk_classtype__ref (classtype__content classtype)))))
(define-fun classtype__ref___projection ((a classtype__ref)) classtype (classtype__content a))
(define-fun dynamic_invariant2 ((temp___expr_291 Int) (temp___is_init_287 Bool) (temp___skip_constant_288 Bool) (temp___do_toplevel_289 Bool) (temp___do_typ_inv_290 Bool)) Bool (=> (or (= temp___is_init_287 true) (<= 0 3)) (in_range3 temp___expr_291)))
(declare-sort rritemtype 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (rritemtype rritemtype) Bool)
(declare-const dummy4 rritemtype)
(declare-datatypes () ((rritemtype__ref (mk_rritemtype__ref (rritemtype__content rritemtype)))))
(define-fun rritemtype__ref___projection ((a rritemtype__ref)) rritemtype (rritemtype__content a))
(define-fun dynamic_invariant3 ((temp___expr_298 Int) (temp___is_init_294 Bool) (temp___skip_constant_295 Bool) (temp___do_toplevel_296 Bool) (temp___do_typ_inv_297 Bool)) Bool (=> (or (= temp___is_init_294 true) (<= 0 10)) (in_range4 temp___expr_298)))
(declare-sort linelengthindex 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 256)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (linelengthindex linelengthindex) Bool)
(declare-const dummy5 linelengthindex)
(declare-datatypes () ((linelengthindex__ref (mk_linelengthindex__ref (linelengthindex__content linelengthindex)))))
(define-fun linelengthindex__ref___projection ((a linelengthindex__ref)) linelengthindex (linelengthindex__content a))
(define-fun dynamic_invariant4 ((temp___expr_305 Int) (temp___is_init_301 Bool) (temp___skip_constant_302 Bool) (temp___do_toplevel_303 Bool) (temp___do_typ_inv_304 Bool)) Bool (=> (or (= temp___is_init_301 true) (<= 1 256)) (in_range5 temp___expr_305)))
(declare-sort domainnamestringtypeindex 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq6 (domainnamestringtypeindex domainnamestringtypeindex) Bool)
(declare-const dummy6 domainnamestringtypeindex)
(declare-datatypes () ((domainnamestringtypeindex__ref (mk_domainnamestringtypeindex__ref (domainnamestringtypeindex__content domainnamestringtypeindex)))))
(define-fun domainnamestringtypeindex__ref___projection ((a domainnamestringtypeindex__ref)) domainnamestringtypeindex (domainnamestringtypeindex__content a))
(declare-const blankdomainname (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun rr_type__blankdomainname__aggregate_def (Int) (Array Int character))
(declare-sort query_type 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 18)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq7 (query_type query_type) Bool)
(declare-const dummy7 query_type)
(declare-datatypes () ((query_type__ref (mk_query_type__ref (query_type__content query_type)))))
(define-fun query_type__ref___projection ((a query_type__ref)) query_type (query_type__content a))
(define-fun dynamic_invariant5 ((temp___expr_561 Int) (temp___is_init_557 Bool) (temp___skip_constant_558 Bool) (temp___do_toplevel_559 Bool) (temp___do_typ_inv_560 Bool)) Bool (=> (or (= temp___is_init_557 true) (<= 0 18)) (in_range7 temp___expr_561)))
(declare-fun getrecordtype ((Array Int character) Int Int) Int)
(declare-fun getrecordtype__function_guard (Int (Array Int character) Int Int) Bool)
(assert (forall ((s (Array Int character))) (forall ((begidx Int) (endidx Int)) (! (=> (and (and (dynamic_invariant4 begidx true true true true) (dynamic_invariant4 endidx true true true true)) (<= begidx endidx)) (dynamic_invariant5 (getrecordtype s begidx endidx) true false true true)) :pattern ((getrecordtype s begidx endidx))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const zonefileline (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const zlength Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const r109b Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const r110b Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t111b__ref (mk_t111b__ref (t111b__content integer)))))
(define-fun t111b__ref___projection ((a t111b__ref)) integer (t111b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-const r112b Int)
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq9 (integer integer) Bool)
(declare-const dummy9 integer)
(declare-datatypes () ((t113b__ref (mk_t113b__ref (t113b__content integer)))))
(define-fun t113b__ref___projection ((a t113b__ref)) integer (t113b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS20 Int)
(declare-const r114b Int)
(declare-const attr__ATTRIBUTE_ADDRESS21 Int)
(declare-const r115b Int)
(declare-const attr__ATTRIBUTE_ADDRESS22 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t116b__ref (mk_t116b__ref (t116b__content integer)))))
(define-fun t116b__ref___projection ((a t116b__ref)) integer (t116b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS23 Int)
(declare-fun zone_file_parser__parseownerttlclassandrecordtype__token__aggregate_def (Int) (Array Int character))
(define-fun dynamic_invariant6 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(assert (forall ((temp___1827 Int)) (=> (dynamic_invariant temp___1827 true true true true) (forall ((temp___1828 Int)) (= (to_rep (select (zone_file_parser__parseownerttlclassandrecordtype__token__aggregate_def temp___1827) temp___1828)) temp___1827)))))
(define-fun dynamic_invariant7 ((temp___expr_322 Int) (temp___is_init_318 Bool) (temp___skip_constant_319 Bool) (temp___do_toplevel_320 Bool) (temp___do_typ_inv_321 Bool)) Bool (=> (or (= temp___is_init_318 true) (<= 1 128)) (in_range6 temp___expr_322)))
(assert (= blankdomainname (rr_type__blankdomainname__aggregate_def 32)))
(assert (forall ((temp___158 Int)) (=> (dynamic_invariant temp___158 true true true true) (forall ((temp___159 Int)) (= (to_rep (select (rr_type__blankdomainname__aggregate_def temp___158) temp___159)) temp___158)))))
(declare-const newowner (Array Int character))
(declare-const newclass Int)
(declare-const newtype Int)
(declare-const success Bool)
(declare-const begidx Int)
(declare-const endidx Int)
(declare-const token (Array Int character))
(declare-const lengthoftoken Int)
(declare-const tokentype Int)
(declare-const recordtypefound Bool)
(declare-const firstchar Int)
(declare-const lastchar Int)
(declare-const i Int)
(declare-const i1 Int)
(declare-const o Int)
(declare-const temp___1830 (Array Int character))
(declare-const temp___1832 Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const temp___1829 Int)
(declare-const o3 character)
(declare-const o4 Int)
(declare-const o5 (Array Int character))
(declare-const temp___1836 (Array Int character))
(declare-const temp___1835 Int)
(declare-const temp___1838 Int)
(declare-const o6 character)
(declare-const o7 Int)
(declare-const o8 (Array Int character))
(declare-const newowner1 (Array Int character))
(declare-const success1 Bool)
(declare-const i2 Int)
(declare-const result Int)
(declare-const begidx1 Int)
(declare-const result1 (Array Int character))
(declare-const token1 (Array Int character))
(declare-const result2 Bool)
(declare-const recordtypefound1 Bool)
(declare-const begidx2 Int)
(declare-const endidx1 Int)
(declare-const tokentype1 Int)
(declare-const result3 Int)
(declare-const lengthoftoken1 Int)
(declare-const result4 Int)
(declare-const i3 Int)
(declare-const token2 (Array Int character))
(declare-const i4 Int)
(declare-const result5 map__ref)
(declare-const token3 (Array Int character))
(declare-const token4 map__ref)
(declare-const i5 int__ref)
(declare-const token5 (Array Int character))
(declare-const i6 Int)
(declare-const token6 map__ref)
(declare-const i7 int__ref)
(declare-const token7 (Array Int character))
(declare-const i8 Int)
(declare-const result6 bool__ref)
(declare-const success2 Bool)
(declare-const result7 map__ref)
(declare-const newowner2 (Array Int character))
(declare-const result8 int__ref)
(declare-const i9 Int)
(declare-const newowner3 (Array Int character))
(declare-const i10 Int)
(declare-const result9 map__ref)
(declare-const newowner4 (Array Int character))
(declare-const newowner5 map__ref)
(declare-const i11 int__ref)
(declare-const newowner6 (Array Int character))
(declare-const i12 Int)
(declare-const newowner7 map__ref)
(declare-const i13 int__ref)
(declare-const newowner8 (Array Int character))
(declare-const i14 Int)
(declare-const newowner9 map__ref)
(declare-const success3 bool__ref)
(declare-const i15 int__ref)
(declare-const newowner10 (Array Int character))
(declare-const success4 Bool)
(declare-const i16 Int)
(define-fun i17 () int__ref (mk_int__ref i1))
(define-fun success5 () bool__ref (mk_bool__ref success))
(define-fun newowner11 () map__ref (mk_map__ref newowner))
(assert (= (rr_type__blankdomainname__aggregate_def 32) blankdomainname))
(assert (in_range3 newclass))
(assert (in_range7 newtype))
(assert (in_range5 zlength))
(assert (= result begidx))
(assert (= begidx1 1))
(assert (in_range5 begidx1))
(assert (=> (<= 1 256) (in_range5 endidx)))
(assert (= result1 token))
(assert (= token1 (zone_file_parser__parseownerttlclassandrecordtype__token__aggregate_def 32)))
(assert (=> (<= 1 256) (in_range5 lengthoftoken)))
(assert (=> (<= 0 10) (in_range4 tokentype)))
(assert (= result2 recordtypefound))
(assert (= recordtypefound1 (distinct 0 0)))
(assert (=> (<= 0 255) (in_range2 firstchar)))
(assert (=> (<= 0 255) (in_range2 lastchar)))
(assert (not (= (to_rep (select zonefileline 1)) 32)))
(assert (not (= (to_rep (select zonefileline 1)) 9)))
(assert (and (and (and (and (<= begidx2 endidx1) (<= begidx2 zlength)) (<= endidx1 zlength)) (=> (= tokentype1 1) (forall ((i18 Int)) (=> (and (<= begidx2 i18) (<= i18 endidx1)) (and (<= 48 (to_rep (select zonefileline i18))) (<= (to_rep (select zonefileline i18)) 57)))))) (and (and (in_range5 begidx2) (in_range5 endidx1)) (in_range4 tokentype1))))
(assert (and (= o (+ (- endidx1 begidx2) 1)) (in_range5 (+ (- endidx1 begidx2) 1))))
(assert (= (mk_int__ref result3) (mk_int__ref lengthoftoken)))
(assert (= lengthoftoken1 o))
(assert (= begidx2 r109b))
(assert (in_range5 r109b))
(assert (= endidx1 r110b))
(assert (in_range5 r110b))
(assert (= (mk_int__ref result4) (mk_int__ref i)))
(assert (= i3 r109b))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= temp___1830 token1)))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= temp___1832 i3)))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (and (<= 1 begidx2) (<= begidx2 endidx1))))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (and (=> (<= r109b r110b) (dynamic_property r109b r110b i4)) (and (<= r109b i4) (<= i4 r110b)))))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= (to_rep o3) (to_rep (select zonefileline i4)))))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (and (= o1 (+ i4 1)) (in_range1 (+ i4 1)))))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= o2 (- o1 begidx2))))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (and (= temp___1829 o2) (in_range1 o2))))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (and (<= 1 temp___1829) (<= temp___1829 256))))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= o4 temp___1829)))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= o5 (store token2 o4 o3))))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= result5 (mk_map__ref token2))))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= token3 o5)))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= i4 r110b)))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= i5 (mk_int__ref i4))))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= token4 (mk_map__ref token3))))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= i6 i4)))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= token5 token3)))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= i7 i5)))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= token6 token4)))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= i8 i6)))
(assert (=> (and (<= r109b i3) (<= i3 r110b)) (= token7 token5)))
(assert (=> (not (and (<= r109b i3) (<= i3 r110b))) (= i7 (mk_int__ref i3))))
(assert (=> (not (and (<= r109b i3) (<= i3 r110b))) (= token6 (mk_map__ref token1))))
(assert (=> (not (and (<= r109b i3) (<= i3 r110b))) (= i8 i3)))
(assert (=> (not (and (<= r109b i3) (<= i3 r110b))) (= token7 token1)))
(assert (=> (<= 128 lengthoftoken1) (= result6 success5)))
(assert (=> (<= 128 lengthoftoken1) (= success2 (distinct 0 0))))
(assert (=> (<= 128 lengthoftoken1) (= i15 i17)))
(assert (=> (<= 128 lengthoftoken1) (= success3 (mk_bool__ref success2))))
(assert (=> (<= 128 lengthoftoken1) (= newowner9 newowner11)))
(assert (=> (<= 128 lengthoftoken1) (= i16 i2)))
(assert (=> (<= 128 lengthoftoken1) (= success4 success2)))
(assert (=> (<= 128 lengthoftoken1) (= newowner10 newowner1)))
(assert (=> (not (<= 128 lengthoftoken1)) (= result7 newowner11)))
(assert (=> (not (<= 128 lengthoftoken1)) (= newowner2 blankdomainname)))
(assert (=> (not (<= 128 lengthoftoken1)) (= lengthoftoken1 r112b)))
(assert (=> (not (<= 128 lengthoftoken1)) (in_range5 r112b)))
(assert (=> (not (<= 128 lengthoftoken1)) (= result8 i17)))
(assert (=> (not (<= 128 lengthoftoken1)) (= i9 1)))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= temp___1836 newowner2))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= temp___1835 i9))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= temp___1838 lengthoftoken1))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (and (= lengthoftoken1 temp___1838) (< lengthoftoken1 128)))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (and (and (=> (<= 1 r112b) (dynamic_property1 1 r112b i10)) (forall ((temp___1837 Int)) (=> (and (<= 1 temp___1837) (<= temp___1837 128)) (=> (<= i10 temp___1837) (= (select newowner3 temp___1837) (select temp___1836 temp___1837)))))) (and (<= 1 i10) (<= i10 r112b))))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= (to_rep o6) (to_rep (select (map__content token6) i10))))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (and (<= 1 i10) (<= i10 128)))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= o7 i10))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= o8 (store newowner3 o7 o6)))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= result9 (mk_map__ref newowner3)))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= newowner4 o8))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= i10 r112b))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= i11 (mk_int__ref i10)))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= newowner5 (mk_map__ref newowner4)))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= i12 i10))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= newowner6 newowner4))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= i13 i11))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= newowner7 newowner5))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= i14 i12))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (and (<= 1 i9) (<= i9 r112b)) (= newowner8 newowner6))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (not (and (<= 1 i9) (<= i9 r112b))) (= i13 (mk_int__ref i9)))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (not (and (<= 1 i9) (<= i9 r112b))) (= newowner7 (mk_map__ref newowner2)))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (not (and (<= 1 i9) (<= i9 r112b))) (= i14 i9))))
(assert (=> (not (<= 128 lengthoftoken1)) (=> (not (and (<= 1 i9) (<= i9 r112b))) (= newowner8 newowner2))))
(assert (=> (not (<= 128 lengthoftoken1)) (= i15 i13)))
(assert (=> (not (<= 128 lengthoftoken1)) (= success3 success5)))
(assert (=> (not (<= 128 lengthoftoken1)) (= newowner9 newowner7)))
(assert (=> (not (<= 128 lengthoftoken1)) (= i16 i14)))
(assert (=> (not (<= 128 lengthoftoken1)) (= success4 success1)))
(assert (=> (not (<= 128 lengthoftoken1)) (= newowner10 newowner8)))
(assert (not (not (not (<= zlength endidx1)))))
(assert (not (= tokentype1 9)))
(assert (not (in_range5 (+ endidx1 1))))
(check-sat)
(exit)
