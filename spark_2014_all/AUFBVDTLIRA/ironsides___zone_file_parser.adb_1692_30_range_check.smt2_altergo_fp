(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type t

logic tqtint : t -> int

axiom tqtaxiom :
  (forall i:t. ((0 <= tqtint(i)) and (tqtint(i) <= 4294967295)))

logic nth : t, int -> bool

axiom nth_out_of_bound :
  (forall x:t. forall n:int. (((n <  0) or (32 <= n)) -> (nth(x,
  n) = false)))

logic zeros : t

axiom Nth_zeros : (forall n:int. (nth(zeros, n) = false))

logic one : t

logic ones : t

axiom Nth_ones :
  (forall n:int. (((0 <= n) and (n <  32)) -> (nth(ones, n) = true)))

logic bw_and : t, t -> t

axiom Nth_bw_and :
  (forall v1:t. forall v2:t. forall n:int. (((0 <= n) and (n <  32)) ->
  (nth(bw_and(v1, v2), n) = match_bool(nth(v1, n), nth(v2, n), false))))

logic bw_or : t, t -> t

axiom Nth_bw_or :
  (forall v1:t. forall v2:t. forall n:int. (((0 <= n) and (n <  32)) ->
  (nth(bw_or(v1, v2), n) = match_bool(nth(v1, n), true, nth(v2, n)))))

logic bw_xor : t, t -> t

axiom Nth_bw_xor :
  (forall v1:t. forall v2:t. forall n:int. (((0 <= n) and (n <  32)) ->
  (nth(bw_xor(v1, v2), n) = xorb(nth(v1, n), nth(v2, n)))))

logic bw_not : t -> t

axiom Nth_bw_not :
  (forall v:t. forall n:int. (((0 <= n) and (n <  32)) -> (nth(bw_not(v),
  n) = match_bool(nth(v, n), false, true))))

logic lsr : t, int -> t

axiom Lsr_nth_low :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  (((n + s) <  32) -> (nth(lsr(b, s), n) = nth(b, (n + s)))))))

axiom Lsr_nth_high :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  ((32 <= (n + s)) -> (nth(lsr(b, s), n) = false)))))

axiom lsr_zeros : (forall x:t. (lsr(x, 0) = x))

logic asr : t, int -> t

axiom Asr_nth_low :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  32)) -> (((n + s) <  32) -> (nth(asr(b, s), n) = nth(b, (n + s)))))))

axiom Asr_nth_high :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  32)) -> ((32 <= (n + s)) -> (nth(asr(b, s), n) = nth(b,
  (32 - 1)))))))

axiom asr_zeros : (forall x:t. (asr(x, 0) = x))

logic lsl : t, int -> t

axiom Lsl_nth_high :
  (forall b:t. forall n:int. forall s:int. (((0 <= s) and ((s <= n) and
  (n <  32))) -> (nth(lsl(b, s), n) = nth(b, (n - s)))))

axiom Lsl_nth_low :
  (forall b:t. forall n:int. forall s:int. (((0 <= n) and (n <  s)) ->
  (nth(lsl(b, s), n) = false)))

axiom lsl_zeros : (forall x:t. (lsl(x, 0) = x))

axiom Div_mod :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (x = ((y * (x / y)) + (x % y)))))

axiom Mod_bound :
  (forall x:int. forall y:int. ((not (y = 0)) -> ((0 <= (x % y)) and
  ((x % y) <  abs_int(y)))))

axiom Div_unique :
  (forall x:int. forall y:int. forall q:int. ((0 <  y) ->
  ((((q * y) <= x) and (x <  ((q * y) + y))) -> ((x / y) = q))))

axiom Div_bound :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  ((0 <= (x / y)) and ((x / y) <= x))))

axiom Mod_1 : (forall x:int. ((x % 1) = 0))

axiom Div_1 : (forall x:int. ((x / 1) = x))

axiom Div_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) -> ((x / y) = 0)))

axiom Div_inf_neg :
  (forall x:int. forall y:int. (((0 <  x) and (x <= y)) ->
  (((-x) / y) = (- 1))))

axiom Mod_0 : (forall y:int. ((not (y = 0)) -> ((0 % y) = 0)))

axiom Div_1_left : (forall y:int. ((1 <  y) -> ((1 / y) = 0)))

axiom Div_minus1_left : (forall y:int. ((1 <  y) -> (((- 1) / y) = (- 1))))

axiom Mod_1_left : (forall y:int. ((1 <  y) -> ((1 % y) = 1)))

axiom Mod_minus1_left :
  (forall y:int [((- 1) % y)]. ((1 <  y) -> (((- 1) % y) = (y - 1))))

axiom Div_mult :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) / x)].
  ((0 <  x) -> ((((x * y) + z) / x) = (y + (z / x)))))

axiom Mod_mult :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) % x)].
  ((0 <  x) -> ((((x * y) + z) % x) = (z % x))))

logic rotate_right : t, int -> t

axiom Nth_rotate_right :
  (forall v:t. forall n:int. forall i:int. (((0 <= i) and (i <  32)) ->
  ((0 <= n) -> (nth(rotate_right(v, n), i) = nth(v, ((i + n) % 32))))))

logic rotate_left : t, int -> t

axiom Nth_rotate_left :
  (forall v:t. forall n:int. forall i:int. (((0 <= i) and (i <  32)) ->
  ((0 <= n) -> (nth(rotate_left(v, n), i) = nth(v, ((i - n) % 32))))))

logic pow2 : int -> int

axiom Power_0 : (pow2(0) = 1)

axiom Power_s : (forall n:int. ((0 <= n) -> (pow2((n + 1)) = (2 * pow2(n)))))

axiom Power_1 : (pow2(1) = 2)

axiom Power_sum :
  (forall n:int. forall m:int. (((0 <= n) and (0 <= m)) ->
  (pow2((n + m)) = (pow2(n) * pow2(m)))))

axiom pow2pos : (forall i:int. ((0 <= i) -> (0 <  pow2(i))))

axiom pow2_0 : (pow2(0) = 1)

axiom pow2_1 : (pow2(1) = 2)

axiom pow2_2 : (pow2(2) = 4)

axiom pow2_3 : (pow2(3) = 8)

axiom pow2_4 : (pow2(4) = 16)

axiom pow2_5 : (pow2(5) = 32)

axiom pow2_6 : (pow2(6) = 64)

axiom pow2_7 : (pow2(7) = 128)

axiom pow2_8 : (pow2(8) = 256)

axiom pow2_9 : (pow2(9) = 512)

axiom pow2_10 : (pow2(10) = 1024)

axiom pow2_11 : (pow2(11) = 2048)

axiom pow2_12 : (pow2(12) = 4096)

axiom pow2_13 : (pow2(13) = 8192)

axiom pow2_14 : (pow2(14) = 16384)

axiom pow2_15 : (pow2(15) = 32768)

axiom pow2_16 : (pow2(16) = 65536)

axiom pow2_17 : (pow2(17) = 131072)

axiom pow2_18 : (pow2(18) = 262144)

axiom pow2_19 : (pow2(19) = 524288)

axiom pow2_20 : (pow2(20) = 1048576)

axiom pow2_21 : (pow2(21) = 2097152)

axiom pow2_22 : (pow2(22) = 4194304)

axiom pow2_23 : (pow2(23) = 8388608)

axiom pow2_24 : (pow2(24) = 16777216)

axiom pow2_25 : (pow2(25) = 33554432)

axiom pow2_26 : (pow2(26) = 67108864)

axiom pow2_27 : (pow2(27) = 134217728)

axiom pow2_28 : (pow2(28) = 268435456)

axiom pow2_29 : (pow2(29) = 536870912)

axiom pow2_30 : (pow2(30) = 1073741824)

axiom pow2_31 : (pow2(31) = 2147483648)

axiom pow2_32 : (pow2(32) = 4294967296)

axiom pow2_33 : (pow2(33) = 8589934592)

axiom pow2_34 : (pow2(34) = 17179869184)

axiom pow2_35 : (pow2(35) = 34359738368)

axiom pow2_36 : (pow2(36) = 68719476736)

axiom pow2_37 : (pow2(37) = 137438953472)

axiom pow2_38 : (pow2(38) = 274877906944)

axiom pow2_39 : (pow2(39) = 549755813888)

axiom pow2_40 : (pow2(40) = 1099511627776)

axiom pow2_41 : (pow2(41) = 2199023255552)

axiom pow2_42 : (pow2(42) = 4398046511104)

axiom pow2_43 : (pow2(43) = 8796093022208)

axiom pow2_44 : (pow2(44) = 17592186044416)

axiom pow2_45 : (pow2(45) = 35184372088832)

axiom pow2_46 : (pow2(46) = 70368744177664)

axiom pow2_47 : (pow2(47) = 140737488355328)

axiom pow2_48 : (pow2(48) = 281474976710656)

axiom pow2_49 : (pow2(49) = 562949953421312)

axiom pow2_50 : (pow2(50) = 1125899906842624)

axiom pow2_51 : (pow2(51) = 2251799813685248)

axiom pow2_52 : (pow2(52) = 4503599627370496)

axiom pow2_53 : (pow2(53) = 9007199254740992)

axiom pow2_54 : (pow2(54) = 18014398509481984)

axiom pow2_55 : (pow2(55) = 36028797018963968)

axiom pow2_56 : (pow2(56) = 72057594037927936)

axiom pow2_57 : (pow2(57) = 144115188075855872)

axiom pow2_58 : (pow2(58) = 288230376151711744)

axiom pow2_59 : (pow2(59) = 576460752303423488)

axiom pow2_60 : (pow2(60) = 1152921504606846976)

axiom pow2_61 : (pow2(61) = 2305843009213693952)

axiom pow2_62 : (pow2(62) = 4611686018427387904)

axiom pow2_63 : (pow2(63) = 9223372036854775808)

axiom pow2_64 : (pow2(64) = 18446744073709551616)

logic is_signed_positive : t -> prop

logic of_int : int -> t

logic to_int : t -> int

axiom to_int_def :
  (forall x:t [to_int(x)]. ((is_signed_positive(x) ->
  (to_int(x) = tqtint(x))) and ((not is_signed_positive(x)) ->
  (to_int(x) = (-(4294967296 - tqtint(x)))))))

axiom to_uint_extensionality :
  (forall v:t. forall vqt:t. ((tqtint(v) = tqtint(vqt)) -> (v = vqt)))

axiom to_int_extensionality :
  (forall v:t. forall vqt:t. ((to_int(v) = to_int(vqt)) -> (v = vqt)))

predicate uint_in_range(i: int) = ((0 <= i) and (i <= 4294967295))

axiom to_uint_bounds :
  (forall v:t. ((0 <= tqtint(v)) and (tqtint(v) <  4294967296)))

axiom to_uint_of_int :
  (forall i:int. (((0 <= i) and (i <  4294967296)) ->
  (tqtint(of_int(i)) = i)))

logic size_bv : t

axiom to_uint_size_bv : (tqtint(size_bv) = 32)

axiom to_uint_zeros : (tqtint(zeros) = 0)

axiom to_uint_one : (tqtint(one) = 1)

axiom to_uint_ones : (tqtint(ones) = 4294967295)

predicate ult(x: t, y: t) = (tqtint(x) <  tqtint(y))

predicate ule(x: t, y: t) = (tqtint(x) <= tqtint(y))

predicate ugt(x: t, y: t) = (tqtint(y) <  tqtint(x))

predicate uge(x: t, y: t) = (tqtint(y) <= tqtint(x))

predicate slt(v1: t, v2: t) = (to_int(v1) <  to_int(v2))

predicate sle(v1: t, v2: t) = (to_int(v1) <= to_int(v2))

predicate sgt(v1: t, v2: t) = (to_int(v2) <  to_int(v1))

predicate sge(v1: t, v2: t) = (to_int(v2) <= to_int(v1))

axiom positive_is_ge_zeros :
  (forall x:t. (is_signed_positive(x) <-> sge(x, zeros)))

logic add : t, t -> t

axiom to_uint_add_bounded :
  (forall v1:t. forall v2:t. (((tqtint(v1) + tqtint(v2)) <  4294967296) ->
  (tqtint(add(v1, v2)) = (tqtint(v1) + tqtint(v2)))))

logic sub : t, t -> t

axiom to_uint_sub_bounded :
  (forall v1:t. forall v2:t. (((0 <= (tqtint(v1) - tqtint(v2))) and
  ((tqtint(v1) - tqtint(v2)) <  4294967296)) -> (tqtint(sub(v1,
  v2)) = (tqtint(v1) - tqtint(v2)))))

logic neg : t -> t

axiom to_uint_neg :
  (forall v:t. (tqtint(neg(v)) = ((-tqtint(v)) % 4294967296)))

logic mul : t, t -> t

axiom to_uint_mul_bounded :
  (forall v1:t. forall v2:t. (((tqtint(v1) * tqtint(v2)) <  4294967296) ->
  (tqtint(mul(v1, v2)) = (tqtint(v1) * tqtint(v2)))))

logic udiv : t, t -> t

axiom to_uint_udiv :
  (forall v1:t. forall v2:t. (tqtint(udiv(v1,
  v2)) = (tqtint(v1) / tqtint(v2))))

logic urem : t, t -> t

axiom to_uint_urem :
  (forall v1:t. forall v2:t. (tqtint(urem(v1,
  v2)) = (tqtint(v1) % tqtint(v2))))

logic lsr_bv : t, t -> t

axiom lsr_bv_is_lsr :
  (forall x:t. forall n:t. (lsr_bv(x, n) = lsr(x, tqtint(n))))

axiom to_uint_lsr :
  (forall v:t. forall n:t. (tqtint(lsr_bv(v,
  n)) = (tqtint(v) / pow2(tqtint(n)))))

logic asr_bv : t, t -> t

axiom asr_bv_is_asr :
  (forall x:t. forall n:t. (asr_bv(x, n) = asr(x, tqtint(n))))

logic lsl_bv : t, t -> t

axiom lsl_bv_is_lsl :
  (forall x:t. forall n:t. (lsl_bv(x, n) = lsl(x, tqtint(n))))

axiom to_uint_lsl :
  (forall v:t. forall n:t. (tqtint(lsl_bv(v,
  n)) = ((tqtint(v) * pow2(tqtint(n))) % 4294967296)))

logic rotate_right_bv : t, t -> t

logic rotate_left_bv : t, t -> t

axiom rotate_left_bv_is_rotate_left :
  (forall v:t. forall n:t. (rotate_left_bv(v, n) = rotate_left(v,
  tqtint(n))))

axiom rotate_right_bv_is_rotate_right :
  (forall v:t. forall n:t. (rotate_right_bv(v, n) = rotate_right(v,
  tqtint(n))))

logic nth_bv : t, t -> bool

axiom Nth_bv_is_nth :
  (forall x:t. forall i:t. (nth(x, tqtint(i)) = nth_bv(x, i)))

axiom Nth_bv_is_nth2 :
  (forall x:t. forall i:int. (((0 <= i) and (i <  4294967296)) -> (nth_bv(x,
  of_int(i)) = nth(x, i))))

logic eq_sub_bv : t, t, t, t -> prop

predicate eq_sub(a: t, b: t, i: int, n: int) =
  (forall j:int. (((i <= j) and (j <  (i + n))) -> (nth(a, j) = nth(b, j))))

axiom eq_sub_equiv :
  (forall a:t. forall b:t. forall i:t. forall n:t. (eq_sub(a, b, tqtint(i),
  tqtint(n)) <-> eq_sub_bv(a, b, i, n)))

axiom Extensionality :
  (forall x:t. forall y:t [eq_sub(x, y, 0, 32)]. (eq_sub(x, y, 0, 32) ->
  (x = y)))

type t__ref = { t__content : t
}

logic bool_eq : t, t -> bool

axiom bool_eq_def :
  (forall x:t. forall y:t [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic bool_ne : t, t -> bool

axiom bool_ne_def :
  (forall x:t. forall y:t [bool_ne(x, y)]. (((not (x = y)) -> (bool_ne(x,
  y) = true)) and ((x = y) -> (bool_ne(x, y) = false))))

logic bool_lt : t, t -> bool

axiom bool_lt_def :
  (forall x:t. forall y:t [bool_lt(x, y)]. ((ult(x, y) -> (bool_lt(x,
  y) = true)) and ((not ult(x, y)) -> (bool_lt(x, y) = false))))

logic bool_le : t, t -> bool

axiom bool_le_def :
  (forall x:t. forall y:t [bool_le(x, y)]. ((ule(x, y) -> (bool_le(x,
  y) = true)) and ((not ule(x, y)) -> (bool_le(x, y) = false))))

logic bool_gt : t, t -> bool

axiom bool_gt_def :
  (forall x:t. forall y:t [bool_gt(x, y)]. ((ugt(x, y) -> (bool_gt(x,
  y) = true)) and ((not ugt(x, y)) -> (bool_gt(x, y) = false))))

logic bool_ge : t, t -> bool

axiom bool_ge_def :
  (forall x:t. forall y:t [bool_ge(x, y)]. ((uge(x, y) -> (bool_ge(x,
  y) = true)) and ((not uge(x, y)) -> (bool_ge(x, y) = false))))

logic power : t, int -> t

axiom Power_01 : (forall x:t. (power(x, 0) = one))

axiom Power_11 : (forall x:t. (power(x, 1) = x))

axiom Power_s1 :
  (forall x:t. forall n:int. ((0 <= n) -> (power(x, (n + 1)) = mul(x,
  power(x, n)))))

axiom Power_s_alt :
  (forall x:t. forall n:int. ((0 <  n) -> (power(x, n) = mul(x, power(x,
  (n - 1))))))

axiom Power_sum1 :
  (forall x:t. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power(x, (n + m)) = mul(power(x, n), power(x, m))))))

axiom Power_mult :
  (forall x:t. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power(x, (n * m)) = power(power(x, n), m)))))

axiom Power_mult2 :
  (forall x:t. forall y:t. forall n:int. ((0 <= n) -> (power(mul(x, y),
  n) = mul(power(x, n), power(y, n)))))

logic bv_min : t, t -> t

axiom bv_min_def :
  (forall x:t. forall y:t [bv_min(x, y)]. ((ule(x, y) -> (bv_min(x,
  y) = x)) and ((not ule(x, y)) -> (bv_min(x, y) = y))))

logic bv_max : t, t -> t

axiom bv_max_def :
  (forall x:t. forall y:t [bv_max(x, y)]. ((ule(x, y) -> (bv_max(x,
  y) = y)) and ((not ule(x, y)) -> (bv_max(x, y) = x))))

logic min : int, int -> int

axiom min_def :
  (forall x:int. forall y:int [min(x, y)]. (((x <= y) -> (min(x, y) = x)) and
  ((not (x <= y)) -> (min(x, y) = y))))

logic max : int, int -> int

axiom max_def :
  (forall x:int. forall y:int [max(x, y)]. (((x <= y) -> (max(x, y) = y)) and
  ((not (x <= y)) -> (max(x, y) = x))))

axiom Min_r : (forall x:int. forall y:int. ((y <= x) -> (min(x, y) = y)))

axiom Max_l : (forall x:int. forall y:int. ((y <= x) -> (max(x, y) = x)))

axiom Min_comm : (forall x:int. forall y:int. (min(x, y) = min(y, x)))

axiom Max_comm : (forall x:int. forall y:int. (max(x, y) = max(y, x)))

axiom Min_assoc :
  (forall x:int. forall y:int. forall z:int. (min(min(x, y), z) = min(x,
  min(y, z))))

axiom Max_assoc :
  (forall x:int. forall y:int. forall z:int. (max(max(x, y), z) = max(x,
  max(y, z))))

axiom bv_min_to_uint :
  (forall x:t. forall y:t. (tqtint(bv_min(x, y)) = min(tqtint(x),
  tqtint(y))))

axiom bv_max_to_uint :
  (forall x:t. forall y:t. (tqtint(bv_max(x, y)) = max(tqtint(x),
  tqtint(y))))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq1 : bool, bool -> bool

axiom bool_eq_def1 :
  (forall x:bool. forall y:bool [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic to_int1 : bool -> int

axiom to_int_def1 :
  (forall b:bool [to_int1(b)]. (((b = true) -> (to_int1(b) = 1)) and
  ((not (b = true)) -> (to_int1(b) = 0))))

logic of_int1 : int -> bool

axiom of_int_def :
  (forall i:int [of_int1(i)]. (((i = 0) -> (of_int1(i) = false)) and
  ((not (i = 0)) -> (of_int1(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq2 : int, int -> bool

logic bool_ne1 : int, int -> bool

logic bool_lt1 : int, int -> bool

logic bool_le1 : int, int -> bool

logic bool_gt1 : int, int -> bool

logic bool_ge1 : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq2(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne1(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt1(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le1(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt1(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge1(x, y) = true) <-> (y <= x))))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type character

predicate in_range2(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : character, character -> bool

logic dummy1 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq5 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def4 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_78:int. ((((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) and
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))) or
  (not ((a__first <= temp___idx_78) and (temp___idx_78 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))))))))

logic compare : (int,character) farray, int, int, (int,character) farray,
  int, int -> int

axiom compare_def_eq :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq5(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq5(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq5(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_upper : int -> int

logic to_upper__function_guard : int, int -> prop

axiom to_upper__post_axiom :
  (forall item:int [to_upper(item)]. (in_range2(item) ->
  in_range2(to_upper(item))))

type unsigned32

logic attr__ATTRIBUTE_MODULUS : t

logic bool_eq6 : t, t -> bool

axiom bool_eq_def5 :
  (forall x:t. forall y:t [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> t

logic user_eq2 : unsigned32, unsigned32 -> bool

logic dummy2 : unsigned32

type unsigned32__ref = { unsigned32__content : unsigned32
}

function unsigned32__ref___projection(a: unsigned32__ref) : unsigned32 =
  (a).unsigned32__content

type classtype

predicate in_range3(x: int) = ((0 <= x) and (x <= 3))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : classtype, classtype -> bool

logic dummy3 : classtype

type classtype__ref = { classtype__content : classtype
}

function classtype__ref___projection(a: classtype__ref) : classtype =
  (a).classtype__content

type rritemtype

predicate in_range4(x: int) = ((0 <= x) and (x <= 10))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq4 : rritemtype, rritemtype -> bool

logic dummy4 : rritemtype

type rritemtype__ref = { rritemtype__content : rritemtype
}

function rritemtype__ref___projection(a: rritemtype__ref) : rritemtype =
  (a).rritemtype__content

type linelengthindex

predicate in_range5(x: int) = ((1 <= x) and (x <= 256))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq5 : linelengthindex, linelengthindex -> bool

logic dummy5 : linelengthindex

type linelengthindex__ref = { linelengthindex__content : linelengthindex
}

function linelengthindex__ref___projection(a: linelengthindex__ref) : linelengthindex =
  (a).linelengthindex__content

type domainnamestringtypeindex

predicate in_range6(x: int) = ((1 <= x) and (x <= 128))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq6 : domainnamestringtypeindex, domainnamestringtypeindex -> bool

logic dummy6 : domainnamestringtypeindex

type domainnamestringtypeindex__ref = { domainnamestringtypeindex__content :
domainnamestringtypeindex
}

function domainnamestringtypeindex__ref___projection(a: domainnamestringtypeindex__ref) : domainnamestringtypeindex =
  (a).domainnamestringtypeindex__content

logic blankdomainname : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS : int

logic rr_type__blankdomainname__aggregate_def : int -> (int,character) farray

axiom def_axiom :
  (forall temp___136:int.
  (forall temp___137:int.
  ((rr_type__blankdomainname__aggregate_def(temp___136)[temp___137]) = of_rep(temp___136))))

type query_type

predicate in_range7(x: int) = ((0 <= x) and (x <= 18))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq7 : query_type, query_type -> bool

logic dummy7 : query_type

type query_type__ref = { query_type__content : query_type
}

function query_type__ref___projection(a: query_type__ref) : query_type =
  (a).query_type__content

logic getrecordtype : (int,character) farray, int, int -> int

logic getrecordtype__function_guard : int, (int,character) farray, int,
  int -> prop

axiom getrecordtype__post_axiom :
  (forall s:(int,character) farray.
  (forall begidx:int. forall endidx:int [getrecordtype(s, begidx, endidx)].
  (((in_range5(begidx) and in_range5(endidx)) and (begidx <= endidx)) ->
  in_range7(getrecordtype(s, begidx, endidx)))))

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic zonefileline : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS5 : int

logic zlength : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

logic attr__ATTRIBUTE_ADDRESS15 : int

logic r109b : int

logic attr__ATTRIBUTE_ADDRESS16 : int

logic r110b : int

logic attr__ATTRIBUTE_ADDRESS17 : int

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

predicate dynamic_property(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq12 : int, int -> bool

axiom bool_eq_def11 :
  (forall x:int. forall y:int [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq8 : integer, integer -> bool

logic dummy8 : integer

type t111b__ref = { t111b__content : integer
}

function t111b__ref___projection(a: t111b__ref) : integer =
  (a).t111b__content

logic attr__ATTRIBUTE_ADDRESS18 : int

logic r112b : int

logic attr__ATTRIBUTE_ADDRESS19 : int

predicate dynamic_property1(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq13 : int, int -> bool

axiom bool_eq_def12 :
  (forall x:int. forall y:int [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq9 : integer, integer -> bool

logic dummy9 : integer

type t113b__ref = { t113b__content : integer
}

function t113b__ref___projection(a: t113b__ref) : integer =
  (a).t113b__content

logic attr__ATTRIBUTE_ADDRESS20 : int

logic r114b : int

logic attr__ATTRIBUTE_ADDRESS21 : int

logic r115b : int

logic attr__ATTRIBUTE_ADDRESS22 : int

predicate dynamic_property2(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq14 : int, int -> bool

axiom bool_eq_def13 :
  (forall x:int. forall y:int [bool_eq14(x, y)]. (((x = y) -> (bool_eq14(x,
  y) = true)) and ((not (x = y)) -> (bool_eq14(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq10 : integer, integer -> bool

logic dummy10 : integer

type t116b__ref = { t116b__content : integer
}

function t116b__ref___projection(a: t116b__ref) : integer =
  (a).t116b__content

logic attr__ATTRIBUTE_ADDRESS23 : int

logic zone_file_parser__parseownerttlclassandrecordtype__token__aggregate_def : int -> (int,character) farray

axiom def_axiom1 :
  (forall temp___1768:int.
  (forall temp___1769:int.
  ((zone_file_parser__parseownerttlclassandrecordtype__token__aggregate_def(temp___1768)[temp___1769]) = of_rep(temp___1768))))

axiom blankdomainname__def_axiom :
  (blankdomainname = rr_type__blankdomainname__aggregate_def(32))

logic newowner : (int,character) farray

logic newttl : t

logic newclass : int

logic newtype : int

logic success : bool

logic begidx : int

logic endidx : int

logic token : (int,character) farray

logic lengthoftoken : int

logic tokentype : int

logic recordtypefound : bool

logic firstchar : int

logic lastchar : int

logic i : int

logic i1 : int

logic o : int

logic temp___1771 : (int,character) farray

logic temp___1773 : int

logic o1 : int

logic o2 : int

logic temp___1770 : int

logic o3 : character

logic o4 : int

logic o5 : (int,character) farray

logic temp___1777 : (int,character) farray

logic temp___1776 : int

logic temp___1779 : int

logic o6 : character

logic o7 : int

logic o8 : (int,character) farray

logic o9 : int

logic temp___1784 : (int,character) farray

logic temp___1783 : int

logic o10 : int

logic o11 : int

logic temp___1782 : int

logic o12 : character

logic o13 : int

logic o14 : (int,character) farray

logic o15 : int

logic o16 : int

logic o17 : int

logic o18 : int

logic newowner1 : (int,character) farray

logic success1 : bool

logic endidx1 : int

logic lengthoftoken1 : int

logic tokentype1 : int

logic i2 : int

logic i3 : int

logic result : int

logic begidx1 : int

logic result1 : (int,character) farray

logic token1 : (int,character) farray

logic result2 : bool

logic recordtypefound1 : bool

logic begidx2 : int

logic endidx2 : int

logic tokentype2 : int

logic result3 : int

logic lengthoftoken2 : int

logic result4 : int

logic i4 : int

logic token2 : (int,character) farray

logic i5 : int

logic result5 : (int,character) farray

logic token3 : (int,character) farray

logic result6 : int

logic i6 : int

logic token4 : (int,character) farray

logic i7 : int

logic token5 : (int,character) farray

logic i8 : int

logic token6 : (int,character) farray

logic i9 : int

logic token7 : (int,character) farray

logic i10 : int

logic token8 : (int,character) farray

logic i11 : int

logic token9 : (int,character) farray

logic i12 : int

logic result7 : bool

logic success2 : bool

logic result8 : (int,character) farray

logic newowner2 : (int,character) farray

logic result9 : int

logic i13 : int

logic newowner3 : (int,character) farray

logic i14 : int

logic result10 : (int,character) farray

logic newowner4 : (int,character) farray

logic result11 : int

logic i15 : int

logic newowner5 : (int,character) farray

logic i16 : int

logic newowner6 : (int,character) farray

logic i17 : int

logic newowner7 : (int,character) farray

logic i18 : int

logic newowner8 : (int,character) farray

logic i19 : int

logic newowner9 : (int,character) farray

logic i20 : int

logic newowner10 : (int,character) farray

logic i21 : int

logic newowner11 : (int,character) farray

logic i22 : int

logic newowner12 : (int,character) farray

logic i23 : int

logic newowner13 : (int,character) farray

logic success3 : bool

logic i24 : int

logic newowner14 : (int,character) farray

logic success4 : bool

logic i25 : int

logic result12 : bool

logic success5 : bool

logic result13 : int

logic begidx3 : int

logic success6 : bool

logic begidx4 : int

logic success7 : bool

logic begidx5 : int

logic newowner15 : (int,character) farray

logic success8 : bool

logic begidx6 : int

logic endidx3 : int

logic token10 : (int,character) farray

logic lengthoftoken3 : int

logic tokentype3 : int

logic i26 : int

logic i27 : int

logic newowner16 : (int,character) farray

logic success9 : bool

logic begidx7 : int

logic endidx4 : int

logic token11 : (int,character) farray

logic lengthoftoken4 : int

logic tokentype4 : int

logic i28 : int

logic i29 : int

logic begidx8 : int

logic endidx5 : int

logic tokentype5 : int

logic newttl1 : t

logic newclass1 : int

logic newtype1 : int

logic success10 : bool

logic begidx9 : int

logic endidx6 : int

logic token12 : (int,character) farray

logic tokentype6 : int

logic recordtypefound2 : bool

logic firstchar1 : int

logic lastchar1 : int

logic i30 : int

logic result14 : int

logic i31 : int

logic token13 : (int,character) farray

logic i32 : int

logic result15 : (int,character) farray

logic token14 : (int,character) farray

logic result16 : int

logic i33 : int

logic token15 : (int,character) farray

logic i34 : int

logic token16 : (int,character) farray

logic i35 : int

logic token17 : (int,character) farray

logic i36 : int

logic token18 : (int,character) farray

logic i37 : int

logic token19 : (int,character) farray

logic i38 : int

logic token20 : (int,character) farray

logic i39 : int

logic token21 : (int,character) farray

logic i40 : int

logic token22 : (int,character) farray

logic i41 : int

logic newttl2 : t

logic success11 : bool

logic result17 : int

logic firstchar2 : int

logic result18 : int

logic lastchar2 : int

logic result19 : int

logic newclass2 : int

logic result20 : int

logic newclass3 : int

logic result21 : int

logic newclass4 : int

logic result22 : int

logic newclass5 : int

logic newclass6 : int

logic newclass7 : int

logic newclass8 : int

logic newclass9 : int

logic newclass10 : int

logic newclass11 : int

logic newclass12 : int

logic newclass13 : int

logic result23 : bool

logic recordtypefound3 : bool

logic result24 : int

logic newtype2 : int

logic result25 : bool

logic success12 : bool

logic newtype3 : int

logic success13 : bool

logic recordtypefound4 : bool

logic newtype4 : int

logic success14 : bool

logic recordtypefound5 : bool

logic newclass14 : int

logic newtype5 : int

logic success15 : bool

logic recordtypefound6 : bool

logic firstchar3 : int

logic lastchar3 : int

logic newclass15 : int

logic newtype6 : int

logic success16 : bool

logic recordtypefound7 : bool

logic firstchar4 : int

logic lastchar4 : int

logic newttl3 : t

logic newclass16 : int

logic newtype7 : int

logic success17 : bool

logic recordtypefound8 : bool

logic firstchar5 : int

logic lastchar5 : int

logic newttl4 : t

logic newclass17 : int

logic newtype8 : int

logic success18 : bool

logic recordtypefound9 : bool

logic firstchar6 : int

logic lastchar6 : int

logic result26 : bool

logic success19 : bool

logic success20 : bool

logic success21 : bool

logic result27 : int

logic begidx10 : int

logic success22 : bool

logic begidx11 : int

logic success23 : bool

logic begidx12 : int

logic begidx13 : int

logic endidx7 : int

logic tokentype7 : int

logic newttl5 : t

logic newclass18 : int

logic newtype9 : int

logic success24 : bool

logic begidx14 : int

logic endidx8 : int

logic token23 : (int,character) farray

logic tokentype8 : int

logic recordtypefound10 : bool

logic firstchar7 : int

logic lastchar7 : int

logic i42 : int

logic newttl6 : t

logic newclass19 : int

logic newtype10 : int

logic success25 : bool

logic begidx15 : int

logic endidx9 : int

logic token24 : (int,character) farray

logic tokentype9 : int

logic recordtypefound11 : bool

logic firstchar8 : int

logic lastchar8 : int

logic i43 : int

axiom H : (rr_type__blankdomainname__aggregate_def(32) = blankdomainname)

axiom H1 : true

axiom H2 : in_range3(newclass)

axiom H3 : in_range7(newtype)

axiom H4 : in_range5(zlength)

axiom H5 : (result = begidx)

axiom H6 : (begidx1 = 1)

axiom H7 : in_range5(begidx1)

axiom H8 : ((1 <= 256) -> in_range5(endidx))

axiom H9 : (result1 = token)

axiom H10 :
  (token1 = zone_file_parser__parseownerttlclassandrecordtype__token__aggregate_def(32))

axiom H11 : ((1 <= 256) -> in_range5(lengthoftoken))

axiom H12 : ((0 <= 10) -> in_range4(tokentype))

axiom H13 : (result2 = recordtypefound)

axiom H14 : (recordtypefound1 = of_int1(0))

axiom H15 : ((0 <= 255) -> in_range2(firstchar))

axiom H16 : ((0 <= 255) -> in_range2(lastchar))

axiom H17 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (((((begidx2 <= endidx2) and
  (begidx2 <= zlength)) and (endidx2 <= zlength)) and ((tokentype2 = 1) ->
  (forall i44:int. (((begidx2 <= i44) and (i44 <= endidx2)) ->
  ((48 <= to_rep((zonefileline[i44]))) and
  (to_rep((zonefileline[i44])) <= 57)))))) and ((in_range5(begidx2) and
  in_range5(endidx2)) and in_range4(tokentype2))))

axiom H18 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) ->
  ((o = ((endidx2 - begidx2) + 1)) and in_range5(((endidx2 - begidx2) + 1))))

axiom H19 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (result3 = lengthoftoken))

axiom H20 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (lengthoftoken2 = o))

axiom H21 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (begidx2 = r109b))

axiom H22 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> in_range5(r109b))

axiom H23 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (endidx2 = r110b))

axiom H24 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> in_range5(r110b))

axiom H25 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (result4 = i))

axiom H26 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (i4 = r109b))

axiom H27 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (((r109b <= i4) and
  (i4 <= r110b)) -> (((temp___1771 = token1) and ((temp___1773 = i4) and
  (((1 <= begidx2) and (begidx2 <= endidx2)) and ((((r109b <= r110b) ->
  dynamic_property(r109b, r110b, i5)) and ((r109b <= i5) and
  (i5 <= r110b))) and ((((to_rep(o3) = to_rep((zonefileline[i5]))) and
  ((((((o1 = (i5 + 1)) and in_range1((i5 + 1))) and
  (o2 = (o1 - begidx2))) and ((temp___1770 = o2) and in_range1(o2))) and
  (((1 <= temp___1770) and (temp___1770 <= 256)) and (o4 = temp___1770))) and
  (o5 = (token2[o4 <- o3])))) and ((result5 = token2) and (token3 = o5))) and
  (i5 = r110b)))))) and (((i9 = i5) and (token6 = token3)) and
  ((i10 = i5) and (token7 = token3))))))

axiom H28 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (((r109b <= i4) and
  (i4 <= r110b)) -> (i11 = i9)))

axiom H29 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (((r109b <= i4) and
  (i4 <= r110b)) -> (token8 = token6)))

axiom H30 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (((r109b <= i4) and
  (i4 <= r110b)) -> (i12 = i10)))

axiom H31 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (((r109b <= i4) and
  (i4 <= r110b)) -> (token9 = token7)))

axiom H32 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not ((r109b <= i4) and
  (i4 <= r110b))) -> (i11 = i4)))

axiom H33 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not ((r109b <= i4) and
  (i4 <= r110b))) -> (token8 = token1)))

axiom H34 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not ((r109b <= i4) and
  (i4 <= r110b))) -> (i12 = i4)))

axiom H35 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not ((r109b <= i4) and
  (i4 <= r110b))) -> (token9 = token1)))

axiom H36 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((128 <= lengthoftoken2) ->
  (result7 = success)))

axiom H37 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((128 <= lengthoftoken2) ->
  (success2 = of_int1(0))))

axiom H38 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((128 <= lengthoftoken2) ->
  (i24 = i1)))

axiom H39 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((128 <= lengthoftoken2) ->
  (success3 = success2)))

axiom H40 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((128 <= lengthoftoken2) ->
  (newowner13 = newowner)))

axiom H41 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((128 <= lengthoftoken2) ->
  (i25 = i3)))

axiom H42 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((128 <= lengthoftoken2) ->
  (success4 = success2)))

axiom H43 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((128 <= lengthoftoken2) ->
  (newowner14 = newowner1)))

axiom H44 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (result8 = newowner)))

axiom H45 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (newowner2 = blankdomainname)))

axiom H46 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (lengthoftoken2 = r112b)))

axiom H47 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  in_range5(r112b)))

axiom H48 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (result9 = i1)))

axiom H49 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (i13 = 1)))

axiom H50 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (((1 <= i13) and (i13 <= r112b)) -> (((temp___1777 = newowner2) and
  ((temp___1776 = i13) and ((temp___1779 = lengthoftoken2) and
  (((lengthoftoken2 = temp___1779) and (lengthoftoken2 <  128)) and
  (((((1 <= r112b) -> dynamic_property1(1, r112b, i14)) and
  (forall temp___1778:int. (((1 <= temp___1778) and (temp___1778 <= 128)) ->
  ((i14 <= temp___1778) ->
  ((newowner3[temp___1778]) = (temp___1777[temp___1778])))))) and
  ((1 <= i14) and (i14 <= r112b))) and
  ((((to_rep(o6) = to_rep((token8[i14]))) and ((((1 <= i14) and
  (i14 <= 128)) and (o7 = i14)) and (o8 = (newowner3[o7 <- o6])))) and
  ((result10 = newowner3) and (newowner4 = o8))) and (i14 = r112b))))))) and
  (((i20 = i14) and (newowner9 = newowner4)) and ((i21 = i14) and
  (newowner10 = newowner4)))))))

axiom H51 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (((1 <= i13) and (i13 <= r112b)) -> (i22 = i20))))

axiom H52 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (((1 <= i13) and (i13 <= r112b)) -> (newowner11 = newowner9))))

axiom H53 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (((1 <= i13) and (i13 <= r112b)) -> (i23 = i21))))

axiom H54 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (((1 <= i13) and (i13 <= r112b)) -> (newowner12 = newowner10))))

axiom H55 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  ((not ((1 <= i13) and (i13 <= r112b))) -> (i22 = i13))))

axiom H56 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  ((not ((1 <= i13) and (i13 <= r112b))) -> (newowner11 = newowner2))))

axiom H57 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  ((not ((1 <= i13) and (i13 <= r112b))) -> (i23 = i13))))

axiom H58 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  ((not ((1 <= i13) and (i13 <= r112b))) -> (newowner12 = newowner2))))

axiom H59 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (i24 = i22)))

axiom H60 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (success3 = success)))

axiom H61 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (newowner13 = newowner11)))

axiom H62 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (i25 = i23)))

axiom H63 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (success4 = success1)))

axiom H64 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> ((not (128 <= lengthoftoken2)) ->
  (newowner14 = newowner12)))

axiom H65 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (((not (zlength <= endidx2)) ->
  (tokentype2 = 9)) -> (result12 = success3)))

axiom H66 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (((not (zlength <= endidx2)) ->
  (tokentype2 = 9)) -> (success5 = of_int1(0))))

axiom H67 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (((not (zlength <= endidx2)) ->
  (tokentype2 = 9)) -> (begidx4 = begidx2)))

axiom H68 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (((not (zlength <= endidx2)) ->
  (tokentype2 = 9)) -> (success6 = success5)))

axiom H69 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (((not (zlength <= endidx2)) ->
  (tokentype2 = 9)) -> (begidx5 = begidx2)))

axiom H70 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (((not (zlength <= endidx2)) ->
  (tokentype2 = 9)) -> (success7 = success5)))

axiom H71 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) ->
  ((not ((not (zlength <= endidx2)) -> (tokentype2 = 9))) ->
  ((o9 = (endidx2 + 1)) and in_range5((endidx2 + 1)))))

axiom H72 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) ->
  ((not ((not (zlength <= endidx2)) -> (tokentype2 = 9))) ->
  (result13 = begidx2)))

axiom H73 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) ->
  ((not ((not (zlength <= endidx2)) -> (tokentype2 = 9))) -> (begidx3 = o9)))

axiom H74 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) ->
  ((not ((not (zlength <= endidx2)) -> (tokentype2 = 9))) ->
  (begidx4 = begidx3)))

axiom H75 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) ->
  ((not ((not (zlength <= endidx2)) -> (tokentype2 = 9))) ->
  (success6 = success3)))

axiom H76 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) ->
  ((not ((not (zlength <= endidx2)) -> (tokentype2 = 9))) ->
  (begidx5 = begidx3)))

axiom H77 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) ->
  ((not ((not (zlength <= endidx2)) -> (tokentype2 = 9))) ->
  (success7 = success4)))

axiom H78 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (i27 = i24))

axiom H79 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (i26 = i11))

axiom H80 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (tokentype3 = tokentype2))

axiom H81 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) ->
  (lengthoftoken3 = lengthoftoken2))

axiom H82 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (token10 = token8))

axiom H83 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (endidx3 = endidx2))

axiom H84 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (begidx6 = begidx4))

axiom H85 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (success8 = success6))

axiom H86 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (newowner15 = newowner13))

axiom H87 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (i29 = i25))

axiom H88 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (i28 = i12))

axiom H89 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (tokentype4 = tokentype2))

axiom H90 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) ->
  (lengthoftoken4 = lengthoftoken2))

axiom H91 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (token11 = token9))

axiom H92 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (endidx4 = endidx2))

axiom H93 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (begidx7 = begidx5))

axiom H94 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (success9 = success7))

axiom H95 : (((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9))) -> (newowner16 = newowner14))

axiom H96 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (i27 = i1))

axiom H97 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (i26 = i))

axiom H98 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (tokentype3 = tokentype))

axiom H99 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) ->
  (lengthoftoken3 = lengthoftoken))

axiom H100 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (token10 = token1))

axiom H101 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (endidx3 = endidx))

axiom H102 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (begidx6 = begidx1))

axiom H103 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (success8 = success))

axiom H104 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (newowner15 = newowner))

axiom H105 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (i29 = i3))

axiom H106 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (i28 = i2))

axiom H107 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (tokentype4 = tokentype1))

axiom H108 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) ->
  (lengthoftoken4 = lengthoftoken1))

axiom H109 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (token11 = token1))

axiom H110 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (endidx4 = endidx1))

axiom H111 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (begidx7 = begidx1))

axiom H112 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (success9 = success1))

axiom H113 : ((not ((not (to_rep((zonefileline[1])) = 32)) and
  (not (to_rep((zonefileline[1])) = 9)))) -> (newowner16 = newowner1))

axiom H114 : (((not (recordtypefound1 = true)) -> (success8 = true)) and
  ((recordtypefound1 = true) -> (false = true)))

axiom H115 : (((((begidx8 <= endidx5) and (begidx8 <= zlength)) and
  (endidx5 <= zlength)) and ((tokentype5 = 1) ->
  (forall i44:int. (((begidx8 <= i44) and (i44 <= endidx5)) ->
  ((48 <= to_rep((zonefileline[i44]))) and
  (to_rep((zonefileline[i44])) <= 57)))))) and ((in_range5(begidx8) and
  in_range5(endidx5)) and in_range4(tokentype5)))

axiom H116 : (begidx9 <= endidx6)

axiom H117 : ((((((((0 <= 10) -> in_range4(tokentype6)) and ((1 <= 256) ->
  in_range5(begidx9))) and in_range3(newclass1)) and ((1 <= 256) ->
  in_range5(endidx6))) and ((0 <= 255) -> in_range2(firstchar1))) and
  in_range7(newtype1)) and ((0 <= 255) -> in_range2(lastchar1)))

axiom H118 : (begidx9 = r114b)

axiom H119 : in_range5(r114b)

axiom H120 : (endidx6 = r115b)

axiom H121 : in_range5(r115b)

axiom H122 : (result14 = i30)

axiom H123 : (i31 = r114b)

axiom H124 : (((r114b <= i31) and (i31 <= r115b)) ->
  (((temp___1784 = token12) and ((temp___1783 = i31) and (((1 <= begidx9) and
  (begidx9 <= endidx6)) and ((((r114b <= r115b) -> dynamic_property2(r114b,
  r115b, i32)) and ((r114b <= i32) and (i32 <= r115b))) and
  ((((to_rep(o12) = to_rep((zonefileline[i32]))) and
  ((((((o10 = (i32 + 1)) and in_range1((i32 + 1))) and
  (o11 = (o10 - begidx9))) and ((temp___1782 = o11) and in_range1(o11))) and
  (((1 <= temp___1782) and (temp___1782 <= 256)) and
  (o13 = temp___1782))) and (o14 = (token13[o13 <- o12])))) and
  ((result15 = token13) and (token14 = o14))) and (i32 = r115b)))))) and
  (((i38 = i32) and (token19 = token14)) and ((i39 = i32) and
  (token20 = token14)))))

axiom H125 : (((r114b <= i31) and (i31 <= r115b)) -> (i40 = i38))

axiom H126 : (((r114b <= i31) and (i31 <= r115b)) -> (token21 = token19))

axiom H127 : (((r114b <= i31) and (i31 <= r115b)) -> (i41 = i39))

axiom H128 : (((r114b <= i31) and (i31 <= r115b)) -> (token22 = token20))

axiom H129 : ((not ((r114b <= i31) and (i31 <= r115b))) -> (i40 = i31))

axiom H130 : ((not ((r114b <= i31) and (i31 <= r115b))) ->
  (token21 = token12))

axiom H131 : ((not ((r114b <= i31) and (i31 <= r115b))) -> (i41 = i31))

axiom H132 : ((not ((r114b <= i31) and (i31 <= r115b))) ->
  (token22 = token12))

axiom H133 : true

axiom H134 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (lastchar5 = lastchar1))

axiom H135 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (firstchar5 = firstchar1))

axiom H136 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (recordtypefound8 = recordtypefound2))

axiom H137 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (success17 = success11))

axiom H138 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (newtype7 = newtype1))

axiom H139 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (newclass16 = newclass1))

axiom H140 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (newttl3 = newttl2))

axiom H141 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (lastchar6 = lastchar1))

axiom H142 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (firstchar6 = firstchar1))

axiom H143 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (recordtypefound9 = recordtypefound2))

axiom H144 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (success18 = success11))

axiom H145 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (newtype8 = newtype1))

axiom H146 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (newclass17 = newclass1))

axiom H147 : (((not (tokentype6 = 1)) -> (tokentype6 = 0)) ->
  (newttl4 = newttl2))

axiom H148 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((o15 = to_upper(to_rep((token21[begidx9])))) and
  in_range2(o15))))

axiom H149 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (result17 = firstchar1)))

axiom H150 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (firstchar2 = o15)))

axiom H151 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((o16 = to_upper(to_rep((token21[endidx6])))) and
  in_range2(o16))))

axiom H152 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (result18 = lastchar1)))

axiom H153 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (lastchar2 = o16)))

axiom H154 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (((firstchar2 = 67) and (lastchar2 = 72)) ->
  (result19 = newclass1))))

axiom H155 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (((firstchar2 = 67) and (lastchar2 = 72)) ->
  (newclass2 = 2))))

axiom H156 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (((firstchar2 = 67) and (lastchar2 = 72)) ->
  (newclass12 = newclass2))))

axiom H157 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (((firstchar2 = 67) and (lastchar2 = 72)) ->
  (newclass13 = newclass2))))

axiom H158 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  (((firstchar2 = 67) and (lastchar2 = 83)) -> (result20 = newclass1)))))

axiom H159 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  (((firstchar2 = 67) and (lastchar2 = 83)) -> (newclass3 = 1)))))

axiom H160 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  (((firstchar2 = 67) and (lastchar2 = 83)) -> (newclass10 = newclass3)))))

axiom H161 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  (((firstchar2 = 67) and (lastchar2 = 83)) -> (newclass11 = newclass3)))))

axiom H162 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) -> (((firstchar2 = 72) and
  (lastchar2 = 83)) -> (result21 = newclass1))))))

axiom H163 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) -> (((firstchar2 = 72) and
  (lastchar2 = 83)) -> (newclass4 = 3))))))

axiom H164 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) -> (((firstchar2 = 72) and
  (lastchar2 = 83)) -> (newclass8 = newclass4))))))

axiom H165 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) -> (((firstchar2 = 72) and
  (lastchar2 = 83)) -> (newclass9 = newclass4))))))

axiom H166 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) ->
  ((not ((firstchar2 = 72) and (lastchar2 = 83))) -> (((firstchar2 = 73) and
  (lastchar2 = 78)) -> (result22 = newclass1)))))))

axiom H167 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) ->
  ((not ((firstchar2 = 72) and (lastchar2 = 83))) -> (((firstchar2 = 73) and
  (lastchar2 = 78)) -> (newclass5 = 0)))))))

axiom H168 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) ->
  ((not ((firstchar2 = 72) and (lastchar2 = 83))) -> (((firstchar2 = 73) and
  (lastchar2 = 78)) -> (newclass6 = newclass5)))))))

axiom H169 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) ->
  ((not ((firstchar2 = 72) and (lastchar2 = 83))) -> (((firstchar2 = 73) and
  (lastchar2 = 78)) -> (newclass7 = newclass5)))))))

axiom H170 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) ->
  ((not ((firstchar2 = 72) and (lastchar2 = 83))) ->
  ((not ((firstchar2 = 73) and (lastchar2 = 78))) ->
  (newclass6 = newclass1)))))))

axiom H171 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) ->
  ((not ((firstchar2 = 72) and (lastchar2 = 83))) ->
  ((not ((firstchar2 = 73) and (lastchar2 = 78))) ->
  (newclass7 = newclass1)))))))

axiom H172 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) ->
  ((not ((firstchar2 = 72) and (lastchar2 = 83))) ->
  (newclass8 = newclass6))))))

axiom H173 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) ->
  ((not ((firstchar2 = 72) and (lastchar2 = 83))) ->
  (newclass9 = newclass7))))))

axiom H174 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) ->
  (newclass10 = newclass8)))))

axiom H175 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  ((not ((firstchar2 = 67) and (lastchar2 = 83))) ->
  (newclass11 = newclass9)))))

axiom H176 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  (newclass12 = newclass10))))

axiom H177 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> ((not ((firstchar2 = 67) and (lastchar2 = 72))) ->
  (newclass13 = newclass11))))

axiom H178 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (lastchar3 = lastchar2)))

axiom H179 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (firstchar3 = firstchar2)))

axiom H180 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (recordtypefound6 = recordtypefound2)))

axiom H181 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (success15 = success10)))

axiom H182 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (newtype5 = newtype1)))

axiom H183 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (newclass14 = newclass12)))

axiom H184 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (lastchar4 = lastchar2)))

axiom H185 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (firstchar4 = firstchar2)))

axiom H186 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (recordtypefound7 = recordtypefound2)))

axiom H187 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (success16 = success10)))

axiom H188 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (newtype6 = newtype1)))

axiom H189 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((tokentype6 = 2) -> (newclass15 = newclass13)))

axiom H190 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((tokentype6 = 3) ->
  (result23 = recordtypefound2))))

axiom H191 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((tokentype6 = 3) ->
  (recordtypefound3 = of_int1(1)))))

axiom H192 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((tokentype6 = 3) ->
  ((o17 = getrecordtype(zonefileline, begidx9, endidx6)) and
  in_range7(o17)))))

axiom H193 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((tokentype6 = 3) -> (result24 = newtype1))))

axiom H194 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((tokentype6 = 3) -> (newtype2 = o17))))

axiom H195 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((tokentype6 = 3) ->
  (recordtypefound4 = recordtypefound3))))

axiom H196 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((tokentype6 = 3) -> (success13 = success10))))

axiom H197 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((tokentype6 = 3) -> (newtype3 = newtype2))))

axiom H198 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((tokentype6 = 3) ->
  (recordtypefound5 = recordtypefound3))))

axiom H199 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((tokentype6 = 3) -> (success14 = success10))))

axiom H200 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((tokentype6 = 3) -> (newtype4 = newtype2))))

axiom H201 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((not (tokentype6 = 3)) ->
  (result25 = success10))))

axiom H202 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((not (tokentype6 = 3)) ->
  (success12 = of_int1(0)))))

axiom H203 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((not (tokentype6 = 3)) ->
  (recordtypefound4 = recordtypefound2))))

axiom H204 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((not (tokentype6 = 3)) ->
  (success13 = success12))))

axiom H205 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((not (tokentype6 = 3)) ->
  (newtype3 = newtype1))))

axiom H206 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((not (tokentype6 = 3)) ->
  (recordtypefound5 = recordtypefound2))))

axiom H207 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((not (tokentype6 = 3)) ->
  (success14 = success12))))

axiom H208 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> ((not (tokentype6 = 3)) ->
  (newtype4 = newtype1))))

axiom H209 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> (lastchar3 = lastchar1)))

axiom H210 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> (firstchar3 = firstchar1)))

axiom H211 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> (recordtypefound6 = recordtypefound4)))

axiom H212 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> (success15 = success13)))

axiom H213 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> (newtype5 = newtype3)))

axiom H214 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> (newclass14 = newclass1)))

axiom H215 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> (lastchar4 = lastchar1)))

axiom H216 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> (firstchar4 = firstchar1)))

axiom H217 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> (recordtypefound7 = recordtypefound5)))

axiom H218 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> (success16 = success14)))

axiom H219 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> (newtype6 = newtype4)))

axiom H220 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  ((not (tokentype6 = 2)) -> (newclass15 = newclass1)))

axiom H221 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (lastchar5 = lastchar3))

axiom H222 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (firstchar5 = firstchar3))

axiom H223 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (recordtypefound8 = recordtypefound6))

axiom H224 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (success17 = success15))

axiom H225 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (newtype7 = newtype5))

axiom H226 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (newclass16 = newclass14))

axiom H227 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (newttl3 = newttl1))

axiom H228 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (lastchar6 = lastchar4))

axiom H229 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (firstchar6 = firstchar4))

axiom H230 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (recordtypefound9 = recordtypefound7))

axiom H231 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (success18 = success16))

axiom H232 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (newtype8 = newtype6))

axiom H233 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (newclass17 = newclass15))

axiom H234 : ((not ((not (tokentype6 = 1)) -> (tokentype6 = 0))) ->
  (newttl4 = newttl1))

axiom H235 : (not (zlength <= endidx6))

axiom H236 : (not (tokentype6 = 9))

 (* File "zone_file_parser.adb", line 896, characters 0-0 *)
goal WP_parameter_def : in_range5((endidx6 + 1))
