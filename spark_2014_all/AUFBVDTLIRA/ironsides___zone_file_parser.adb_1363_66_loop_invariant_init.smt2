(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 16) Int) Bool)
(declare-fun lsr ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun asr ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun lsl ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_right1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_left1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 65535)))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 16)) (i Int)) (=> (and (<= 0 i) (< i 65536)) (= (nth_bv x ((_ int2bv 16) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 16))))))
(declare-fun power ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun bv_min ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))
(define-fun to_int2 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-sort unsigned16 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 16))
(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 16)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 16))
(declare-fun user_eq2 (unsigned16 unsigned16) Bool)
(declare-const dummy2 unsigned16)
(declare-datatypes () ((unsigned16__ref (mk_unsigned16__ref (unsigned16__content unsigned16)))))
(define-fun unsigned16__ref___projection ((a unsigned16__ref)) unsigned16 (unsigned16__content a))
(define-fun dynamic_invariant1 ((temp___expr_252 (_ BitVec 16)) (temp___is_init_249 Bool) (temp___skip_constant_250 Bool) (temp___do_toplevel_251 Bool)) Bool true)
(declare-sort rritemtype 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (rritemtype rritemtype) Bool)
(declare-const dummy3 rritemtype)
(declare-datatypes () ((rritemtype__ref (mk_rritemtype__ref (rritemtype__content rritemtype)))))
(define-fun rritemtype__ref___projection ((a rritemtype__ref)) rritemtype (rritemtype__content a))
(define-fun dynamic_invariant2 ((temp___expr_270 Int) (temp___is_init_267 Bool) (temp___skip_constant_268 Bool) (temp___do_toplevel_269 Bool)) Bool (=> (or (= temp___is_init_267 true) (<= 0 10)) (in_range3 temp___expr_270)))
(declare-sort linelengthindex 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 256)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (linelengthindex linelengthindex) Bool)
(declare-const dummy4 linelengthindex)
(declare-datatypes () ((linelengthindex__ref (mk_linelengthindex__ref (linelengthindex__content linelengthindex)))))
(define-fun linelengthindex__ref___projection ((a linelengthindex__ref)) linelengthindex (linelengthindex__content a))
(define-fun dynamic_invariant3 ((temp___expr_276 Int) (temp___is_init_273 Bool) (temp___skip_constant_274 Bool) (temp___do_toplevel_275 Bool)) Bool (=> (or (= temp___is_init_273 true) (<= 1 256)) (in_range4 temp___expr_276)))
(declare-sort domainnamestringtypeindex 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (domainnamestringtypeindex domainnamestringtypeindex) Bool)
(declare-const dummy5 domainnamestringtypeindex)
(declare-datatypes () ((domainnamestringtypeindex__ref (mk_domainnamestringtypeindex__ref (domainnamestringtypeindex__content domainnamestringtypeindex)))))
(define-fun domainnamestringtypeindex__ref___projection ((a domainnamestringtypeindex__ref)) domainnamestringtypeindex (domainnamestringtypeindex__content a))
(declare-const blankdomainname (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun rr_type__blankdomainname__aggregate_def (Int) (Array Int character))
(assert (forall ((temp___136 Int)) (forall ((temp___137 Int)) (= (select (rr_type__blankdomainname__aggregate_def temp___136) temp___137) (of_rep temp___136)))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const zonefileline (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const zlength Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const r83b Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const r84b Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t85b__ref (mk_t85b__ref (t85b__content integer)))))
(define-fun t85b__ref___projection ((a t85b__ref)) integer (t85b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const r86b Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const r87b Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq7 (integer integer) Bool)
(declare-const dummy7 integer)
(declare-datatypes () ((t88b__ref (mk_t88b__ref (t88b__content integer)))))
(define-fun t88b__ref___projection ((a t88b__ref)) integer (t88b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(declare-const r89b Int)
(declare-const attr__ATTRIBUTE_ADDRESS20 Int)
(declare-const r90b Int)
(declare-const attr__ATTRIBUTE_ADDRESS21 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t91b__ref (mk_t91b__ref (t91b__content integer)))))
(define-fun t91b__ref___projection ((a t91b__ref)) integer (t91b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS22 Int)
(declare-const r92b Int)
(declare-const attr__ATTRIBUTE_ADDRESS23 Int)
(declare-const r93b Int)
(declare-const attr__ATTRIBUTE_ADDRESS24 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq9 (integer integer) Bool)
(declare-const dummy9 integer)
(declare-datatypes () ((t94b__ref (mk_t94b__ref (t94b__content integer)))))
(define-fun t94b__ref___projection ((a t94b__ref)) integer (t94b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS25 Int)
(declare-const r95b Int)
(declare-const attr__ATTRIBUTE_ADDRESS26 Int)
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t96b__ref (mk_t96b__ref (t96b__content integer)))))
(define-fun t96b__ref___projection ((a t96b__ref)) integer (t96b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS27 Int)
(define-fun dynamic_invariant4 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range2 temp___expr_63)))
(define-fun dynamic_invariant5 ((temp___expr_291 Int) (temp___is_init_288 Bool) (temp___skip_constant_289 Bool) (temp___do_toplevel_290 Bool)) Bool (=> (or (= temp___is_init_288 true) (<= 1 128)) (in_range5 temp___expr_291)))
(assert (= blankdomainname (rr_type__blankdomainname__aggregate_def 32)))
(declare-const newpref (_ BitVec 16))
(declare-const newweight (_ BitVec 16))
(declare-const newport (_ BitVec 16))
(declare-const newdomainname (Array Int character))
(declare-const begidx Int)
(declare-const endidx Int)
(declare-const foundtype Int)
(declare-const digitval (_ BitVec 16))
(declare-const tmpval (_ BitVec 16))
(declare-const lengthoftoken Int)
(declare-const i Int)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const i3 Int)
(declare-const i4 Int)
(declare-const temp___1698 Int)
(declare-const temp___1697 Int)
(declare-const temp___1696 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const temp___1701 Int)
(declare-const temp___1700 (_ BitVec 16))
(declare-const temp___1699 (_ BitVec 16))
(declare-const o2 Int)
(declare-const temp___1706 Int)
(declare-const temp___1705 (_ BitVec 16))
(declare-const temp___1704 (_ BitVec 16))
(declare-const o3 Int)
(declare-const temp___1711 Int)
(declare-const temp___1710 (_ BitVec 16))
(declare-const temp___1709 (_ BitVec 16))
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const temp___1718 Int)
(declare-const temp___1716 (Array Int character))
(declare-const temp___1715 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const temp___1714 Int)
(declare-const o8 character)
(declare-const o9 Int)
(declare-const o10 (Array Int character))
(declare-const o11 character)
(declare-const o12 (Array Int character))
(declare-const digitval1 (_ BitVec 16))
(declare-const result Int)
(declare-const begidx1 Int)
(declare-const result1 (_ BitVec 16))
(declare-const newpref1 (_ BitVec 16))
(declare-const result2 (_ BitVec 16))
(declare-const newweight1 (_ BitVec 16))
(declare-const result3 (_ BitVec 16))
(declare-const newport1 (_ BitVec 16))
(declare-const result4 (Array Int character))
(declare-const newdomainname1 (Array Int character))
(declare-const begidx2 Int)
(declare-const endidx1 Int)
(declare-const foundtype1 Int)
(declare-const begidx3 Int)
(declare-const endidx2 Int)
(declare-const foundtype2 Int)
(declare-const result5 Int)
(declare-const begidx4 Int)
(declare-const begidx5 Int)
(declare-const endidx3 Int)
(declare-const foundtype3 Int)
(declare-const begidx6 int__ref)
(declare-const endidx4 int__ref)
(declare-const foundtype4 int__ref)
(declare-const begidx7 Int)
(declare-const endidx5 Int)
(declare-const foundtype5 Int)
(declare-const begidx8 int__ref)
(declare-const endidx6 int__ref)
(declare-const foundtype6 int__ref)
(declare-const begidx9 Int)
(declare-const endidx7 Int)
(declare-const foundtype7 Int)
(declare-const begidx10 int__ref)
(declare-const endidx8 int__ref)
(declare-const foundtype8 int__ref)
(declare-const begidx11 Int)
(declare-const endidx9 Int)
(declare-const foundtype9 Int)
(declare-const result6 int__ref)
(declare-const begidx12 Int)
(declare-const begidx13 Int)
(declare-const endidx10 Int)
(declare-const foundtype10 Int)
(declare-const result7 t__ref)
(declare-const tmpval1 (_ BitVec 16))
(declare-const result8 int__ref)
(declare-const i5 Int)
(declare-const digitval2 (_ BitVec 16))
(declare-const tmpval2 (_ BitVec 16))
(declare-const i6 Int)
(declare-const result9 t__ref)
(declare-const digitval3 (_ BitVec 16))
(declare-const result10 t__ref)
(declare-const tmpval3 (_ BitVec 16))
(declare-const result11 int__ref)
(declare-const i7 Int)
(declare-const digitval4 t__ref)
(declare-const tmpval4 t__ref)
(declare-const i8 int__ref)
(declare-const digitval5 (_ BitVec 16))
(declare-const tmpval5 (_ BitVec 16))
(declare-const i9 Int)
(declare-const digitval6 t__ref)
(declare-const tmpval6 t__ref)
(declare-const i10 int__ref)
(declare-const digitval7 (_ BitVec 16))
(declare-const tmpval7 (_ BitVec 16))
(declare-const i11 Int)
(declare-const digitval8 t__ref)
(declare-const tmpval8 t__ref)
(declare-const i12 int__ref)
(declare-const digitval9 (_ BitVec 16))
(declare-const tmpval9 (_ BitVec 16))
(declare-const i13 Int)
(declare-const digitval10 t__ref)
(declare-const tmpval10 t__ref)
(declare-const i14 int__ref)
(declare-const digitval11 (_ BitVec 16))
(declare-const tmpval11 (_ BitVec 16))
(declare-const i15 Int)
(declare-const result12 t__ref)
(declare-const newpref2 (_ BitVec 16))
(declare-const result13 int__ref)
(declare-const begidx14 Int)
(declare-const begidx15 Int)
(declare-const endidx11 Int)
(declare-const foundtype11 Int)
(declare-const result14 t__ref)
(declare-const tmpval12 (_ BitVec 16))
(declare-const result15 int__ref)
(declare-const i16 Int)
(declare-const digitval12 (_ BitVec 16))
(declare-const tmpval13 (_ BitVec 16))
(declare-const i17 Int)
(declare-const result16 t__ref)
(declare-const digitval13 (_ BitVec 16))
(declare-const result17 t__ref)
(declare-const tmpval14 (_ BitVec 16))
(declare-const result18 int__ref)
(declare-const i18 Int)
(declare-const digitval14 t__ref)
(declare-const tmpval15 t__ref)
(declare-const i19 int__ref)
(declare-const digitval15 (_ BitVec 16))
(declare-const tmpval16 (_ BitVec 16))
(declare-const i20 Int)
(declare-const digitval16 t__ref)
(declare-const tmpval17 t__ref)
(declare-const i21 int__ref)
(declare-const digitval17 (_ BitVec 16))
(declare-const tmpval18 (_ BitVec 16))
(declare-const i22 Int)
(declare-const digitval18 t__ref)
(declare-const tmpval19 t__ref)
(declare-const i23 int__ref)
(declare-const digitval19 (_ BitVec 16))
(declare-const tmpval20 (_ BitVec 16))
(declare-const i24 Int)
(declare-const digitval20 t__ref)
(declare-const tmpval21 t__ref)
(declare-const i25 int__ref)
(declare-const digitval21 (_ BitVec 16))
(declare-const tmpval22 (_ BitVec 16))
(declare-const i26 Int)
(declare-const result19 t__ref)
(declare-const newweight2 (_ BitVec 16))
(declare-const result20 int__ref)
(declare-const begidx16 Int)
(declare-const begidx17 Int)
(declare-const endidx12 Int)
(declare-const foundtype12 Int)
(declare-const result21 t__ref)
(declare-const tmpval23 (_ BitVec 16))
(declare-const result22 int__ref)
(declare-const i27 Int)
(declare-const digitval22 (_ BitVec 16))
(declare-const tmpval24 (_ BitVec 16))
(declare-const i28 Int)
(declare-const result23 t__ref)
(declare-const digitval23 (_ BitVec 16))
(declare-const result24 t__ref)
(declare-const tmpval25 (_ BitVec 16))
(declare-const result25 int__ref)
(declare-const i29 Int)
(declare-const digitval24 t__ref)
(declare-const tmpval26 t__ref)
(declare-const i30 int__ref)
(declare-const digitval25 (_ BitVec 16))
(declare-const tmpval27 (_ BitVec 16))
(declare-const i31 Int)
(declare-const digitval26 t__ref)
(declare-const tmpval28 t__ref)
(declare-const i32 int__ref)
(declare-const digitval27 (_ BitVec 16))
(declare-const tmpval29 (_ BitVec 16))
(declare-const i33 Int)
(declare-const digitval28 t__ref)
(declare-const tmpval30 t__ref)
(declare-const i34 int__ref)
(declare-const digitval29 (_ BitVec 16))
(declare-const tmpval31 (_ BitVec 16))
(declare-const i35 Int)
(declare-const digitval30 t__ref)
(declare-const tmpval32 t__ref)
(declare-const i36 int__ref)
(declare-const digitval31 (_ BitVec 16))
(declare-const tmpval33 (_ BitVec 16))
(declare-const i37 Int)
(declare-const result26 t__ref)
(declare-const newport2 (_ BitVec 16))
(declare-const result27 int__ref)
(declare-const begidx18 Int)
(declare-const begidx19 Int)
(declare-const endidx13 Int)
(declare-const foundtype13 Int)
(declare-const result28 int__ref)
(declare-const lengthoftoken1 Int)
(declare-const result29 int__ref)
(declare-const i38 Int)
(declare-const newdomainname2 (Array Int character))
(declare-const i39 Int)
(declare-const result30 map__ref)
(declare-const newdomainname3 (Array Int character))
(declare-const result31 int__ref)
(declare-const i40 Int)
(declare-const newdomainname4 map__ref)
(declare-const i41 int__ref)
(declare-const newdomainname5 (Array Int character))
(declare-const i42 Int)
(declare-const newdomainname6 map__ref)
(declare-const i43 int__ref)
(declare-const newdomainname7 (Array Int character))
(declare-const i44 Int)
(declare-const newdomainname8 map__ref)
(declare-const i45 int__ref)
(declare-const newdomainname9 (Array Int character))
(declare-const i46 Int)
(declare-const newdomainname10 map__ref)
(declare-const i47 int__ref)
(declare-const newdomainname11 (Array Int character))
(declare-const i48 Int)
(declare-const result32 int__ref)
(declare-const i49 Int)
(declare-const newdomainname12 (Array Int character))
(declare-const i50 Int)
(declare-const result33 map__ref)
(declare-const newdomainname13 (Array Int character))
(declare-const result34 int__ref)
(declare-const i51 Int)
(declare-const newdomainname14 map__ref)
(declare-const i52 int__ref)
(declare-const newdomainname15 (Array Int character))
(declare-const i53 Int)
(assert (= (rr_type__blankdomainname__aggregate_def 32) blankdomainname))
(assert true)
(assert true)
(assert true)
(assert (in_range4 zlength))
(assert (= result begidx))
(assert (= begidx1 1))
(assert (in_range4 begidx1))
(assert (=> (<= 1 256) (in_range4 endidx)))
(assert (=> (<= 0 10) (in_range3 foundtype)))
(assert true)
(assert true)
(assert (=> (<= 1 256) (in_range4 lengthoftoken)))
(assert (= result1 newpref))
(assert (= newpref1 ((_ int2bv 16) 0)))
(assert (= result2 newweight))
(assert (= newweight1 ((_ int2bv 16) 0)))
(assert (= result3 newport))
(assert (= newport1 ((_ int2bv 16) 0)))
(assert (= result4 newdomainname))
(assert (= newdomainname1 blankdomainname))
(assert (and (and (and (and (<= begidx2 endidx1) (<= begidx2 zlength)) (<= endidx1 zlength)) (=> (= foundtype1 1) (forall ((i54 Int)) (=> (and (<= begidx2 i54) (<= i54 endidx1)) (and (<= 48 (to_rep (select zonefileline i54))) (<= (to_rep (select zonefileline i54)) 57)))))) (and (and (in_range4 begidx2) (in_range4 endidx1)) (in_range3 foundtype1))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (and (and (= temp___1698 endidx1) (and (= temp___1697 begidx2) (and (= temp___1696 foundtype1) (and (< endidx2 zlength) (and (and (and (and (=> (<= 0 10) (in_range3 foundtype2)) (=> (<= 1 256) (in_range4 begidx3))) (=> (<= 1 256) (in_range4 endidx2))) (and (not (= foundtype2 3)) (< endidx2 zlength))) (and (and (and (= o (+ endidx2 1)) (in_range4 (+ endidx2 1))) (and (= begidx3 result5) (= begidx4 o))) (and (and (and (and (and (<= begidx5 endidx3) (<= begidx5 zlength)) (<= endidx3 zlength)) (=> (= foundtype3 1) (forall ((i54 Int)) (=> (and (<= begidx5 i54) (<= i54 endidx3)) (and (<= 48 (to_rep (select zonefileline i54))) (<= (to_rep (select zonefileline i54)) 57)))))) (and (and (in_range4 begidx5) (in_range4 endidx3)) (in_range3 foundtype3))) (not (and (not (= foundtype3 3)) (< endidx3 zlength)))))))))) (and (and (= foundtype6 (mk_int__ref foundtype3)) (and (= endidx6 (mk_int__ref endidx3)) (= begidx8 (mk_int__ref begidx5)))) (and (= foundtype7 foundtype3) (and (= endidx7 endidx3) (= begidx9 begidx5)))))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= foundtype8 foundtype6)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= endidx8 endidx6)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx10 begidx8)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= foundtype9 foundtype7)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= endidx9 endidx7)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx11 begidx9)))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= foundtype8 (mk_int__ref foundtype1))))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= endidx8 (mk_int__ref endidx1))))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= begidx10 (mk_int__ref begidx2))))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= foundtype9 foundtype1)))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= endidx9 endidx1)))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= begidx11 begidx2)))
(assert (not (= (int__content endidx8) zlength)))
(assert (and (= o1 (+ (int__content endidx8) 1)) (in_range4 (+ (int__content endidx8) 1))))
(assert (= result6 begidx10))
(assert (= begidx12 o1))
(assert (and (and (and (and (<= begidx13 endidx10) (<= begidx13 zlength)) (<= endidx10 zlength)) (=> (= foundtype10 1) (forall ((i54 Int)) (=> (and (<= begidx13 i54) (<= i54 endidx10)) (and (<= 48 (to_rep (select zonefileline i54))) (<= (to_rep (select zonefileline i54)) 57)))))) (and (and (in_range4 begidx13) (in_range4 endidx10)) (in_range3 foundtype10))))
(assert (= foundtype10 1))
(assert (= result7 (mk_t__ref tmpval)))
(assert (= tmpval1 ((_ int2bv 16) 0)))
(assert (= begidx13 r83b))
(assert (in_range4 r83b))
(assert (= endidx10 r84b))
(assert (in_range4 r84b))
(assert (= result8 (mk_int__ref i)))
(assert (= i5 r83b))
(assert (=> (and (<= r83b i5) (<= i5 r84b)) (and (and (= temp___1701 i5) (and (= temp___1700 tmpval1) (and (= temp___1699 digitval) (and (and (<= 1 begidx13) (bvule tmpval2 ((_ int2bv 16) 32767))) (and (and (=> (<= r83b r84b) (dynamic_property r83b r84b i6)) (and (<= r83b i6) (<= i6 r84b))) (and (and (= result9 (mk_t__ref digitval2)) (= digitval3 (bvsub ((_ int2bv 16) (to_rep (select zonefileline i6))) ((_ int2bv 16) 48)))) (and (and (= result10 (mk_t__ref tmpval2)) (= tmpval3 (bvadd (bvmul ((_ int2bv 16) 10) tmpval2) digitval3))) (or (bvugt tmpval3 ((_ int2bv 16) 32767)) (and (not (bvugt tmpval3 ((_ int2bv 16) 32767))) (= i6 r84b)))))))))) (and (and (= i12 (mk_int__ref i6)) (and (= tmpval8 (mk_t__ref tmpval3)) (= digitval8 (mk_t__ref digitval3)))) (and (= i13 i6) (and (= tmpval9 tmpval3) (= digitval9 digitval3)))))))
(assert (=> (and (<= r83b i5) (<= i5 r84b)) (= i14 i12)))
(assert (=> (and (<= r83b i5) (<= i5 r84b)) (= tmpval10 tmpval8)))
(assert (=> (and (<= r83b i5) (<= i5 r84b)) (= digitval10 digitval8)))
(assert (=> (and (<= r83b i5) (<= i5 r84b)) (= i15 i13)))
(assert (=> (and (<= r83b i5) (<= i5 r84b)) (= tmpval11 tmpval9)))
(assert (=> (and (<= r83b i5) (<= i5 r84b)) (= digitval11 digitval9)))
(assert (=> (not (and (<= r83b i5) (<= i5 r84b))) (= i14 (mk_int__ref i5))))
(assert (=> (not (and (<= r83b i5) (<= i5 r84b))) (= tmpval10 (mk_t__ref tmpval1))))
(assert (=> (not (and (<= r83b i5) (<= i5 r84b))) (= digitval10 (mk_t__ref digitval))))
(assert (=> (not (and (<= r83b i5) (<= i5 r84b))) (= i15 i5)))
(assert (=> (not (and (<= r83b i5) (<= i5 r84b))) (= tmpval11 tmpval1)))
(assert (=> (not (and (<= r83b i5) (<= i5 r84b))) (= digitval11 digitval1)))
(assert (not (bvugt (t__content tmpval10) ((_ int2bv 16) 32767))))
(assert (= result12 (mk_t__ref newpref1)))
(assert (= newpref2 (t__content tmpval10)))
(assert (not (<= zlength endidx10)))
(assert (and (= o2 (+ endidx10 1)) (in_range4 (+ endidx10 1))))
(assert (= result13 (mk_int__ref begidx13)))
(assert (= begidx14 o2))
(assert (and (and (and (and (<= begidx15 endidx11) (<= begidx15 zlength)) (<= endidx11 zlength)) (=> (= foundtype11 1) (forall ((i54 Int)) (=> (and (<= begidx15 i54) (<= i54 endidx11)) (and (<= 48 (to_rep (select zonefileline i54))) (<= (to_rep (select zonefileline i54)) 57)))))) (and (and (in_range4 begidx15) (in_range4 endidx11)) (in_range3 foundtype11))))
(assert (= foundtype11 1))
(assert (= result14 tmpval10))
(assert (= tmpval12 ((_ int2bv 16) 0)))
(assert (= begidx15 r86b))
(assert (in_range4 r86b))
(assert (= endidx11 r87b))
(assert (in_range4 r87b))
(assert (= result15 (mk_int__ref i1)))
(assert (= i16 r86b))
(assert (=> (and (<= r86b i16) (<= i16 r87b)) (and (and (= temp___1706 i16) (and (= temp___1705 tmpval12) (and (= temp___1704 (t__content digitval10)) (and (and (<= 1 begidx15) (bvule tmpval13 ((_ int2bv 16) 32767))) (and (and (=> (<= r86b r87b) (dynamic_property1 r86b r87b i17)) (and (<= r86b i17) (<= i17 r87b))) (and (and (= result16 (mk_t__ref digitval12)) (= digitval13 (bvsub ((_ int2bv 16) (to_rep (select zonefileline i17))) ((_ int2bv 16) 48)))) (and (and (= result17 (mk_t__ref tmpval13)) (= tmpval14 (bvadd (bvmul ((_ int2bv 16) 10) tmpval13) digitval13))) (or (bvugt tmpval14 ((_ int2bv 16) 32767)) (and (not (bvugt tmpval14 ((_ int2bv 16) 32767))) (= i17 r87b)))))))))) (and (and (= i23 (mk_int__ref i17)) (and (= tmpval19 (mk_t__ref tmpval14)) (= digitval18 (mk_t__ref digitval13)))) (and (= i24 i17) (and (= tmpval20 tmpval14) (= digitval19 digitval13)))))))
(assert (=> (and (<= r86b i16) (<= i16 r87b)) (= i25 i23)))
(assert (=> (and (<= r86b i16) (<= i16 r87b)) (= tmpval21 tmpval19)))
(assert (=> (and (<= r86b i16) (<= i16 r87b)) (= digitval20 digitval18)))
(assert (=> (and (<= r86b i16) (<= i16 r87b)) (= i26 i24)))
(assert (=> (and (<= r86b i16) (<= i16 r87b)) (= tmpval22 tmpval20)))
(assert (=> (and (<= r86b i16) (<= i16 r87b)) (= digitval21 digitval19)))
(assert (=> (not (and (<= r86b i16) (<= i16 r87b))) (= i25 (mk_int__ref i16))))
(assert (=> (not (and (<= r86b i16) (<= i16 r87b))) (= tmpval21 (mk_t__ref tmpval12))))
(assert (=> (not (and (<= r86b i16) (<= i16 r87b))) (= digitval20 digitval10)))
(assert (=> (not (and (<= r86b i16) (<= i16 r87b))) (= i26 i16)))
(assert (=> (not (and (<= r86b i16) (<= i16 r87b))) (= tmpval22 tmpval12)))
(assert (=> (not (and (<= r86b i16) (<= i16 r87b))) (= digitval21 digitval11)))
(assert (not (bvugt (t__content tmpval21) ((_ int2bv 16) 32767))))
(assert (= result19 (mk_t__ref newweight1)))
(assert (= newweight2 (t__content tmpval21)))
(assert (not (<= zlength endidx11)))
(assert (and (= o3 (+ endidx11 1)) (in_range4 (+ endidx11 1))))
(assert (= result20 (mk_int__ref begidx15)))
(assert (= begidx16 o3))
(assert (and (and (and (and (<= begidx17 endidx12) (<= begidx17 zlength)) (<= endidx12 zlength)) (=> (= foundtype12 1) (forall ((i54 Int)) (=> (and (<= begidx17 i54) (<= i54 endidx12)) (and (<= 48 (to_rep (select zonefileline i54))) (<= (to_rep (select zonefileline i54)) 57)))))) (and (and (in_range4 begidx17) (in_range4 endidx12)) (in_range3 foundtype12))))
(assert (= foundtype12 1))
(assert (= result21 tmpval21))
(assert (= tmpval23 ((_ int2bv 16) 0)))
(assert (= begidx17 r89b))
(assert (in_range4 r89b))
(assert (= endidx12 r90b))
(assert (in_range4 r90b))
(assert (= result22 (mk_int__ref i2)))
(assert (= i27 r89b))
(assert (=> (and (<= r89b i27) (<= i27 r90b)) (and (and (= temp___1711 i27) (and (= temp___1710 tmpval23) (and (= temp___1709 (t__content digitval20)) (and (and (<= 1 begidx17) (bvule tmpval24 ((_ int2bv 16) 32767))) (and (and (=> (<= r89b r90b) (dynamic_property2 r89b r90b i28)) (and (<= r89b i28) (<= i28 r90b))) (and (and (= result23 (mk_t__ref digitval22)) (= digitval23 (bvsub ((_ int2bv 16) (to_rep (select zonefileline i28))) ((_ int2bv 16) 48)))) (and (and (= result24 (mk_t__ref tmpval24)) (= tmpval25 (bvadd (bvmul ((_ int2bv 16) 10) tmpval24) digitval23))) (or (bvugt tmpval25 ((_ int2bv 16) 32767)) (and (not (bvugt tmpval25 ((_ int2bv 16) 32767))) (= i28 r90b)))))))))) (and (and (= i34 (mk_int__ref i28)) (and (= tmpval30 (mk_t__ref tmpval25)) (= digitval28 (mk_t__ref digitval23)))) (and (= i35 i28) (and (= tmpval31 tmpval25) (= digitval29 digitval23)))))))
(assert (=> (and (<= r89b i27) (<= i27 r90b)) (= i36 i34)))
(assert (=> (and (<= r89b i27) (<= i27 r90b)) (= tmpval32 tmpval30)))
(assert (=> (and (<= r89b i27) (<= i27 r90b)) (= digitval30 digitval28)))
(assert (=> (and (<= r89b i27) (<= i27 r90b)) (= i37 i35)))
(assert (=> (and (<= r89b i27) (<= i27 r90b)) (= tmpval33 tmpval31)))
(assert (=> (and (<= r89b i27) (<= i27 r90b)) (= digitval31 digitval29)))
(assert (=> (not (and (<= r89b i27) (<= i27 r90b))) (= i36 (mk_int__ref i27))))
(assert (=> (not (and (<= r89b i27) (<= i27 r90b))) (= tmpval32 (mk_t__ref tmpval23))))
(assert (=> (not (and (<= r89b i27) (<= i27 r90b))) (= digitval30 digitval20)))
(assert (=> (not (and (<= r89b i27) (<= i27 r90b))) (= i37 i27)))
(assert (=> (not (and (<= r89b i27) (<= i27 r90b))) (= tmpval33 tmpval23)))
(assert (=> (not (and (<= r89b i27) (<= i27 r90b))) (= digitval31 digitval21)))
(assert (not (bvugt (t__content tmpval32) ((_ int2bv 16) 32767))))
(assert (= result26 (mk_t__ref newport1)))
(assert (= newport2 (t__content tmpval32)))
(assert (not (<= zlength endidx12)))
(assert (and (= o4 (+ endidx12 1)) (in_range4 (+ endidx12 1))))
(assert (= result27 (mk_int__ref begidx17)))
(assert (= begidx18 o4))
(assert (and (and (and (and (<= begidx19 endidx13) (<= begidx19 zlength)) (<= endidx13 zlength)) (=> (= foundtype13 1) (forall ((i54 Int)) (=> (and (<= begidx19 i54) (<= i54 endidx13)) (and (<= 48 (to_rep (select zonefileline i54))) (<= (to_rep (select zonefileline i54)) 57)))))) (and (and (in_range4 begidx19) (in_range4 endidx13)) (in_range3 foundtype13))))
(assert (and (= o5 (+ (- endidx13 begidx19) 1)) (in_range4 (+ (- endidx13 begidx19) 1))))
(assert (= result28 (mk_int__ref lengthoftoken)))
(assert (= lengthoftoken1 o5))
(assert (= foundtype13 0))
(assert (not (< 128 lengthoftoken1)))
(assert (= begidx19 r92b))
(assert (in_range4 r92b))
(assert (= endidx13 r93b))
(assert (in_range4 r93b))
(assert (= result29 (mk_int__ref i3)))
(assert (= i38 r92b))
(assert (=> (and (<= r92b i38) (<= i38 r93b)) (and (and (= temp___1718 endidx13) (and (= temp___1716 newdomainname1) (and (= temp___1715 i38) (and (and (and (<= 1 begidx19) (<= (+ (- endidx13 begidx19) 1) 128)) (= endidx13 temp___1718)) (and (and (=> (<= r92b r93b) (dynamic_property3 r92b r93b i39)) (and (<= r92b i39) (<= i39 r93b))) (and (and (and (= (to_rep o8) (to_rep (select zonefileline i39))) (and (and (and (and (and (= o6 (+ i39 1)) (in_range1 (+ i39 1))) (= o7 (- o6 begidx19))) (and (= temp___1714 o7) (in_range1 o7))) (and (and (<= 1 temp___1714) (<= temp___1714 128)) (= o9 temp___1714))) (= o10 (store newdomainname2 o9 o8)))) (and (= result30 (mk_map__ref newdomainname2)) (= newdomainname3 o10))) (= i39 r93b))))))) (and (and (= i45 (mk_int__ref i39)) (= newdomainname8 (mk_map__ref newdomainname3))) (and (= i46 i39) (= newdomainname9 newdomainname3))))))
(assert (=> (and (<= r92b i38) (<= i38 r93b)) (= i47 i45)))
(assert (=> (and (<= r92b i38) (<= i38 r93b)) (= newdomainname10 newdomainname8)))
(assert (=> (and (<= r92b i38) (<= i38 r93b)) (= i48 i46)))
(assert (=> (and (<= r92b i38) (<= i38 r93b)) (= newdomainname11 newdomainname9)))
(assert (=> (not (and (<= r92b i38) (<= i38 r93b))) (= i47 (mk_int__ref i38))))
(assert (=> (not (and (<= r92b i38) (<= i38 r93b))) (= newdomainname10 (mk_map__ref newdomainname1))))
(assert (=> (not (and (<= r92b i38) (<= i38 r93b))) (= i48 i38)))
(assert (=> (not (and (<= r92b i38) (<= i38 r93b))) (= newdomainname11 newdomainname1)))
(assert (= (+ endidx13 1) r95b))
(assert (in_range1 r95b))
(assert (= result32 (mk_int__ref i4)))
(assert (= i49 r95b))
(assert (<= r95b i49))
(assert (<= i49 128))
(assert (not (<= 1 endidx13)))
(check-sat)
(exit)
