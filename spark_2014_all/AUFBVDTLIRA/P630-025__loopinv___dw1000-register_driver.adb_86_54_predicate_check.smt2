(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 8) Int) Bool)
(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 8)) (i Int)) (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun bv_min ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))
(declare-fun nth1 ((_ BitVec 16) Int) Bool)
(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))
(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvlshr x n) (lsr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvashr x n) (asr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvshl x n) (lsl1 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_left2 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_right2 v (bv2nat n)))))
(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (nth1 x (bv2nat i)) (nth_bv1 x i))))
(assert (forall ((x (_ BitVec 16)) (i Int)) (=> (and (<= 0 i) (< i 65536)) (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))
(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i))) (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun bv_min1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))
(define-fun bv_max1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (integer integer) Bool)
(declare-const dummy1 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort bits_8 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 8))
(declare-fun user_eq2 (bits_8 bits_8) Bool)
(declare-const dummy2 bits_8)
(declare-datatypes () ((bits_8__ref (mk_bits_8__ref (bits_8__content bits_8)))))
(define-fun bits_8__ref___projection ((a bits_8__ref)) bits_8 (bits_8__content a))
(declare-fun to_rep1 (bits_8) (_ BitVec 8))
(declare-fun of_rep1 ((_ BitVec 8)) bits_8)
(assert (forall ((x bits_8)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun to_int3 ((x bits_8)) Int (bv2nat (to_rep1 x)))
(assert (forall ((x bits_8)) (! (uint_in_range (to_int3 x)) :pattern ((to_int3 x)))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int bits_8))))))
(declare-fun slide ((Array Int bits_8) Int Int) (Array Int bits_8))
(assert (forall ((a (Array Int bits_8))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int bits_8))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int bits_8)) (a__first Int) (a__last Int) (b (Array Int bits_8)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int bits_8)) (b (Array Int bits_8))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range low) (in_range high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int bits_8)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int bits_8) (elts a))
(define-fun of_array ((a (Array Int bits_8)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int bits_8)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int bits_8)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int bits_8)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int bits_8))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int bits_8))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int bits_8))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((byte_array__ref (mk_byte_array__ref (byte_array__content us_t)))))
(define-fun byte_array__ref___projection ((a byte_array__ref)) us_t (byte_array__content a))
(declare-sort bits_6 0)
(define-fun in_range2 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x3F)))
(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 63)))
(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))
(declare-fun user_eq4 (bits_6 bits_6) Bool)
(declare-const dummy4 bits_6)
(declare-datatypes () ((bits_6__ref (mk_bits_6__ref (bits_6__content bits_6)))))
(define-fun bits_6__ref___projection ((a bits_6__ref)) bits_6 (bits_6__content a))
(declare-fun to_rep2 (bits_6) (_ BitVec 8))
(declare-fun of_rep2 ((_ BitVec 8)) bits_6)
(assert (forall ((x bits_6)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x bits_6)) (! (in_range2 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x40))) (=> (in_range2 y) (= (to_rep2 (of_rep2 x)) y))) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun to_int4 ((x bits_6)) Int (bv2nat (to_rep2 x)))
(assert (forall ((x bits_6)) (! (in_range_int (to_int4 x)) :pattern ((to_int4 x)))))
(declare-sort operation_type 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (operation_type operation_type) Bool)
(declare-const dummy5 operation_type)
(declare-datatypes () ((operation_type__ref (mk_operation_type__ref (operation_type__content operation_type)))))
(define-fun operation_type__ref___projection ((a operation_type__ref)) operation_type (operation_type__content a))
(declare-fun to_rep3 (operation_type) Int)
(declare-fun of_rep3 (Int) operation_type)
(assert (forall ((x operation_type)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x operation_type)) (! (in_range3 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort sub_index_type 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (sub_index_type sub_index_type) Bool)
(declare-const dummy6 sub_index_type)
(declare-datatypes () ((sub_index_type__ref (mk_sub_index_type__ref (sub_index_type__content sub_index_type)))))
(define-fun sub_index_type__ref___projection ((a sub_index_type__ref)) sub_index_type (sub_index_type__content a))
(declare-fun to_rep4 (sub_index_type) Int)
(declare-fun of_rep4 (Int) sub_index_type)
(assert (forall ((x sub_index_type)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x sub_index_type)) (! (in_range4 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__dw1000__register_driver__non_indexed_header__register_id bits_6) (rec__dw1000__register_driver__non_indexed_header__sub_index sub_index_type) (rec__dw1000__register_driver__non_indexed_header__operation operation_type)))))
(define-fun us_split_fields_Register_ID__projection ((a us_split_fields)) bits_6 (rec__dw1000__register_driver__non_indexed_header__register_id a))
(define-fun us_split_fields_Sub_Index__projection ((a us_split_fields)) sub_index_type (rec__dw1000__register_driver__non_indexed_header__sub_index a))
(define-fun us_split_fields_Operation__projection ((a us_split_fields)) operation_type (rec__dw1000__register_driver__non_indexed_header__operation a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (and (= (to_rep2 (rec__dw1000__register_driver__non_indexed_header__register_id (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_driver__non_indexed_header__register_id (us_split_fields1 b)))) (= (to_rep4 (rec__dw1000__register_driver__non_indexed_header__sub_index (us_split_fields1 a))) (to_rep4 (rec__dw1000__register_driver__non_indexed_header__sub_index (us_split_fields1 b))))) (= (to_rep3 (rec__dw1000__register_driver__non_indexed_header__operation (us_split_fields1 a))) (to_rep3 (rec__dw1000__register_driver__non_indexed_header__operation (us_split_fields1 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const dw1000__register_driver__non_indexed_header__register_id__first__bit Int)
(declare-const dw1000__register_driver__non_indexed_header__register_id__last__bit Int)
(declare-const dw1000__register_driver__non_indexed_header__register_id__position Int)
(assert (<= 0 dw1000__register_driver__non_indexed_header__register_id__first__bit))
(assert (< dw1000__register_driver__non_indexed_header__register_id__first__bit dw1000__register_driver__non_indexed_header__register_id__last__bit))
(assert (<= 0 dw1000__register_driver__non_indexed_header__register_id__position))
(declare-const dw1000__register_driver__non_indexed_header__sub_index__first__bit Int)
(declare-const dw1000__register_driver__non_indexed_header__sub_index__last__bit Int)
(declare-const dw1000__register_driver__non_indexed_header__sub_index__position Int)
(assert (<= 0 dw1000__register_driver__non_indexed_header__sub_index__first__bit))
(assert (< dw1000__register_driver__non_indexed_header__sub_index__first__bit dw1000__register_driver__non_indexed_header__sub_index__last__bit))
(assert (<= 0 dw1000__register_driver__non_indexed_header__sub_index__position))
(declare-const dw1000__register_driver__non_indexed_header__operation__first__bit Int)
(declare-const dw1000__register_driver__non_indexed_header__operation__last__bit Int)
(declare-const dw1000__register_driver__non_indexed_header__operation__position Int)
(assert (<= 0 dw1000__register_driver__non_indexed_header__operation__first__bit))
(assert (< dw1000__register_driver__non_indexed_header__operation__first__bit dw1000__register_driver__non_indexed_header__operation__last__bit))
(assert (<= 0 dw1000__register_driver__non_indexed_header__operation__position))
(declare-fun user_eq7 (us_rep us_rep) Bool)
(declare-const dummy7 us_rep)
(declare-datatypes () ((non_indexed_header__ref (mk_non_indexed_header__ref (non_indexed_header__content us_rep)))))
(define-fun non_indexed_header__ref___projection ((a non_indexed_header__ref)) us_rep (non_indexed_header__content a))
(declare-datatypes () ((source__ref (mk_source__ref (source__content us_rep)))))
(define-fun source__ref___projection ((a source__ref)) us_rep (source__content a))
(declare-fun to_bytes (us_rep) (Array Int bits_8))
(declare-fun to_bytes__function_guard ((Array Int bits_8) us_rep) Bool)
(define-fun dynamic_invariant ((temp___expr_779 us_rep) (temp___is_init_775 Bool) (temp___skip_constant_776 Bool) (temp___do_toplevel_777 Bool) (temp___do_typ_inv_778 Bool)) Bool (=> (= temp___do_toplevel_777 true) (=> (= temp___is_init_775 true) (= (to_rep4 (rec__dw1000__register_driver__non_indexed_header__sub_index (us_split_fields1 temp___expr_779))) 0))))
(define-fun default_initial_assumption ((temp___expr_781 us_rep) (temp___skip_top_level_782 Bool)) Bool (and (and (= (to_rep2 (rec__dw1000__register_driver__non_indexed_header__register_id (us_split_fields1 temp___expr_781))) #x00) (= (to_rep4 (rec__dw1000__register_driver__non_indexed_header__sub_index (us_split_fields1 temp___expr_781))) 0)) (= (to_rep3 (rec__dw1000__register_driver__non_indexed_header__operation (us_split_fields1 temp___expr_781))) 0)))
(define-fun dynamic_predicate ((temp___783 us_rep)) Bool (= (to_rep4 (rec__dw1000__register_driver__non_indexed_header__sub_index (us_split_fields1 temp___783))) 0))
(assert true)
(declare-sort bits_7 0)
(define-fun in_range5 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x7F)))
(define-fun in_range_int1 ((x Int)) Bool (and (<= 0 x) (<= x 127)))
(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 8))
(declare-fun user_eq8 (bits_7 bits_7) Bool)
(declare-const dummy8 bits_7)
(declare-datatypes () ((bits_7__ref (mk_bits_7__ref (bits_7__content bits_7)))))
(define-fun bits_7__ref___projection ((a bits_7__ref)) bits_7 (bits_7__content a))
(declare-fun to_rep5 (bits_7) (_ BitVec 8))
(declare-fun of_rep5 ((_ BitVec 8)) bits_7)
(assert (forall ((x bits_7)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x bits_7)) (! (in_range5 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x80))) (=> (in_range5 y) (= (to_rep5 (of_rep5 x)) y))) :pattern ((to_rep5 (of_rep5 x))))))
(define-fun to_int5 ((x bits_7)) Int (bv2nat (to_rep5 x)))
(assert (forall ((x bits_7)) (! (in_range_int1 (to_int5 x)) :pattern ((to_int5 x)))))
(declare-sort extended_address_type 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (extended_address_type extended_address_type) Bool)
(declare-const dummy9 extended_address_type)
(declare-datatypes () ((extended_address_type__ref (mk_extended_address_type__ref (extended_address_type__content extended_address_type)))))
(define-fun extended_address_type__ref___projection ((a extended_address_type__ref)) extended_address_type (extended_address_type__content a))
(declare-fun to_rep6 (extended_address_type) Int)
(declare-fun of_rep6 (Int) extended_address_type)
(assert (forall ((x extended_address_type)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x extended_address_type)) (! (in_range6 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__dw1000__register_driver__short_indexed_header__register_id bits_6) (rec__dw1000__register_driver__short_indexed_header__sub_index sub_index_type) (rec__dw1000__register_driver__short_indexed_header__operation operation_type) (rec__dw1000__register_driver__short_indexed_header__register_sub_address bits_7) (rec__dw1000__register_driver__short_indexed_header__extended_address extended_address_type)))))
(define-fun us_split_fields_Register_ID__2__projection ((a us_split_fields2)) bits_6 (rec__dw1000__register_driver__short_indexed_header__register_id a))
(define-fun us_split_fields_Sub_Index__2__projection ((a us_split_fields2)) sub_index_type (rec__dw1000__register_driver__short_indexed_header__sub_index a))
(define-fun us_split_fields_Operation__2__projection ((a us_split_fields2)) operation_type (rec__dw1000__register_driver__short_indexed_header__operation a))
(define-fun us_split_fields_Register_Sub_Address__projection ((a us_split_fields2)) bits_7 (rec__dw1000__register_driver__short_indexed_header__register_sub_address a))
(define-fun us_split_fields_Extended_Address__projection ((a us_split_fields2)) extended_address_type (rec__dw1000__register_driver__short_indexed_header__extended_address a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___2__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (and (= (to_rep2 (rec__dw1000__register_driver__short_indexed_header__register_id (us_split_fields3 a))) (to_rep2 (rec__dw1000__register_driver__short_indexed_header__register_id (us_split_fields3 b)))) (= (to_rep4 (rec__dw1000__register_driver__short_indexed_header__sub_index (us_split_fields3 a))) (to_rep4 (rec__dw1000__register_driver__short_indexed_header__sub_index (us_split_fields3 b))))) (= (to_rep3 (rec__dw1000__register_driver__short_indexed_header__operation (us_split_fields3 a))) (to_rep3 (rec__dw1000__register_driver__short_indexed_header__operation (us_split_fields3 b))))) (= (to_rep5 (rec__dw1000__register_driver__short_indexed_header__register_sub_address (us_split_fields3 a))) (to_rep5 (rec__dw1000__register_driver__short_indexed_header__register_sub_address (us_split_fields3 b))))) (= (to_rep6 (rec__dw1000__register_driver__short_indexed_header__extended_address (us_split_fields3 a))) (to_rep6 (rec__dw1000__register_driver__short_indexed_header__extended_address (us_split_fields3 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const dw1000__register_driver__short_indexed_header__register_id__first__bit Int)
(declare-const dw1000__register_driver__short_indexed_header__register_id__last__bit Int)
(declare-const dw1000__register_driver__short_indexed_header__register_id__position Int)
(assert (<= 0 dw1000__register_driver__short_indexed_header__register_id__first__bit))
(assert (< dw1000__register_driver__short_indexed_header__register_id__first__bit dw1000__register_driver__short_indexed_header__register_id__last__bit))
(assert (<= 0 dw1000__register_driver__short_indexed_header__register_id__position))
(declare-const dw1000__register_driver__short_indexed_header__sub_index__first__bit Int)
(declare-const dw1000__register_driver__short_indexed_header__sub_index__last__bit Int)
(declare-const dw1000__register_driver__short_indexed_header__sub_index__position Int)
(assert (<= 0 dw1000__register_driver__short_indexed_header__sub_index__first__bit))
(assert (< dw1000__register_driver__short_indexed_header__sub_index__first__bit dw1000__register_driver__short_indexed_header__sub_index__last__bit))
(assert (<= 0 dw1000__register_driver__short_indexed_header__sub_index__position))
(declare-const dw1000__register_driver__short_indexed_header__operation__first__bit Int)
(declare-const dw1000__register_driver__short_indexed_header__operation__last__bit Int)
(declare-const dw1000__register_driver__short_indexed_header__operation__position Int)
(assert (<= 0 dw1000__register_driver__short_indexed_header__operation__first__bit))
(assert (< dw1000__register_driver__short_indexed_header__operation__first__bit dw1000__register_driver__short_indexed_header__operation__last__bit))
(assert (<= 0 dw1000__register_driver__short_indexed_header__operation__position))
(declare-const dw1000__register_driver__short_indexed_header__register_sub_address__first__bit Int)
(declare-const dw1000__register_driver__short_indexed_header__register_sub_address__last__bit Int)
(declare-const dw1000__register_driver__short_indexed_header__register_sub_address__position Int)
(assert (<= 0 dw1000__register_driver__short_indexed_header__register_sub_address__first__bit))
(assert (< dw1000__register_driver__short_indexed_header__register_sub_address__first__bit dw1000__register_driver__short_indexed_header__register_sub_address__last__bit))
(assert (<= 0 dw1000__register_driver__short_indexed_header__register_sub_address__position))
(declare-const dw1000__register_driver__short_indexed_header__extended_address__first__bit Int)
(declare-const dw1000__register_driver__short_indexed_header__extended_address__last__bit Int)
(declare-const dw1000__register_driver__short_indexed_header__extended_address__position Int)
(assert (<= 0 dw1000__register_driver__short_indexed_header__extended_address__first__bit))
(assert (< dw1000__register_driver__short_indexed_header__extended_address__first__bit dw1000__register_driver__short_indexed_header__extended_address__last__bit))
(assert (<= 0 dw1000__register_driver__short_indexed_header__extended_address__position))
(declare-fun user_eq10 (us_rep1 us_rep1) Bool)
(declare-const dummy10 us_rep1)
(declare-datatypes () ((short_indexed_header__ref (mk_short_indexed_header__ref (short_indexed_header__content us_rep1)))))
(define-fun short_indexed_header__ref___projection ((a short_indexed_header__ref)) us_rep1 (short_indexed_header__content a))
(declare-datatypes () ((source__ref1 (mk_source__ref1 (source__content1 us_rep1)))))
(define-fun source__ref___2__projection ((a source__ref1)) us_rep1 (source__content1 a))
(declare-fun to_bytes1 (us_rep1) (Array Int bits_8))
(declare-fun to_bytes__function_guard1 ((Array Int bits_8) us_rep1) Bool)
(define-fun dynamic_invariant1 ((temp___expr_801 us_rep1) (temp___is_init_797 Bool) (temp___skip_constant_798 Bool) (temp___do_toplevel_799 Bool) (temp___do_typ_inv_800 Bool)) Bool (=> (= temp___do_toplevel_799 true) (=> (= temp___is_init_797 true) (and (= (to_rep4 (rec__dw1000__register_driver__short_indexed_header__sub_index (us_split_fields3 temp___expr_801))) 1) (= (to_rep6 (rec__dw1000__register_driver__short_indexed_header__extended_address (us_split_fields3 temp___expr_801))) 0)))))
(define-fun default_initial_assumption1 ((temp___expr_803 us_rep1) (temp___skip_top_level_804 Bool)) Bool (and (and (and (and (= (to_rep2 (rec__dw1000__register_driver__short_indexed_header__register_id (us_split_fields3 temp___expr_803))) #x00) (= (to_rep4 (rec__dw1000__register_driver__short_indexed_header__sub_index (us_split_fields3 temp___expr_803))) 1)) (= (to_rep3 (rec__dw1000__register_driver__short_indexed_header__operation (us_split_fields3 temp___expr_803))) 0)) (= (to_rep5 (rec__dw1000__register_driver__short_indexed_header__register_sub_address (us_split_fields3 temp___expr_803))) #x00)) (= (to_rep6 (rec__dw1000__register_driver__short_indexed_header__extended_address (us_split_fields3 temp___expr_803))) 0)))
(define-fun dynamic_predicate1 ((temp___805 us_rep1)) Bool (and (= (to_rep4 (rec__dw1000__register_driver__short_indexed_header__sub_index (us_split_fields3 temp___805))) 1) (= (to_rep6 (rec__dw1000__register_driver__short_indexed_header__extended_address (us_split_fields3 temp___805))) 0)))
(assert true)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__dw1000__register_driver__long_indexed_header__register_id bits_6) (rec__dw1000__register_driver__long_indexed_header__sub_index sub_index_type) (rec__dw1000__register_driver__long_indexed_header__operation operation_type) (rec__dw1000__register_driver__long_indexed_header__register_sub_address_lsb bits_7) (rec__dw1000__register_driver__long_indexed_header__extended_address extended_address_type) (rec__dw1000__register_driver__long_indexed_header__register_sub_address_msb bits_8)))))
(define-fun us_split_fields_Register_ID__3__projection ((a us_split_fields4)) bits_6 (rec__dw1000__register_driver__long_indexed_header__register_id a))
(define-fun us_split_fields_Sub_Index__3__projection ((a us_split_fields4)) sub_index_type (rec__dw1000__register_driver__long_indexed_header__sub_index a))
(define-fun us_split_fields_Operation__3__projection ((a us_split_fields4)) operation_type (rec__dw1000__register_driver__long_indexed_header__operation a))
(define-fun us_split_fields_Register_Sub_Address_LSB__projection ((a us_split_fields4)) bits_7 (rec__dw1000__register_driver__long_indexed_header__register_sub_address_lsb a))
(define-fun us_split_fields_Extended_Address__2__projection ((a us_split_fields4)) extended_address_type (rec__dw1000__register_driver__long_indexed_header__extended_address a))
(define-fun us_split_fields_Register_Sub_Address_MSB__projection ((a us_split_fields4)) bits_8 (rec__dw1000__register_driver__long_indexed_header__register_sub_address_msb a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___3__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq4 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (and (and (= (to_rep2 (rec__dw1000__register_driver__long_indexed_header__register_id (us_split_fields5 a))) (to_rep2 (rec__dw1000__register_driver__long_indexed_header__register_id (us_split_fields5 b)))) (= (to_rep4 (rec__dw1000__register_driver__long_indexed_header__sub_index (us_split_fields5 a))) (to_rep4 (rec__dw1000__register_driver__long_indexed_header__sub_index (us_split_fields5 b))))) (= (to_rep3 (rec__dw1000__register_driver__long_indexed_header__operation (us_split_fields5 a))) (to_rep3 (rec__dw1000__register_driver__long_indexed_header__operation (us_split_fields5 b))))) (= (to_rep5 (rec__dw1000__register_driver__long_indexed_header__register_sub_address_lsb (us_split_fields5 a))) (to_rep5 (rec__dw1000__register_driver__long_indexed_header__register_sub_address_lsb (us_split_fields5 b))))) (= (to_rep6 (rec__dw1000__register_driver__long_indexed_header__extended_address (us_split_fields5 a))) (to_rep6 (rec__dw1000__register_driver__long_indexed_header__extended_address (us_split_fields5 b))))) (= (to_rep1 (rec__dw1000__register_driver__long_indexed_header__register_sub_address_msb (us_split_fields5 a))) (to_rep1 (rec__dw1000__register_driver__long_indexed_header__register_sub_address_msb (us_split_fields5 b))))) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep2) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep2) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep2)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment3 a))))
(declare-const dw1000__register_driver__long_indexed_header__register_id__first__bit Int)
(declare-const dw1000__register_driver__long_indexed_header__register_id__last__bit Int)
(declare-const dw1000__register_driver__long_indexed_header__register_id__position Int)
(assert (<= 0 dw1000__register_driver__long_indexed_header__register_id__first__bit))
(assert (< dw1000__register_driver__long_indexed_header__register_id__first__bit dw1000__register_driver__long_indexed_header__register_id__last__bit))
(assert (<= 0 dw1000__register_driver__long_indexed_header__register_id__position))
(declare-const dw1000__register_driver__long_indexed_header__sub_index__first__bit Int)
(declare-const dw1000__register_driver__long_indexed_header__sub_index__last__bit Int)
(declare-const dw1000__register_driver__long_indexed_header__sub_index__position Int)
(assert (<= 0 dw1000__register_driver__long_indexed_header__sub_index__first__bit))
(assert (< dw1000__register_driver__long_indexed_header__sub_index__first__bit dw1000__register_driver__long_indexed_header__sub_index__last__bit))
(assert (<= 0 dw1000__register_driver__long_indexed_header__sub_index__position))
(declare-const dw1000__register_driver__long_indexed_header__operation__first__bit Int)
(declare-const dw1000__register_driver__long_indexed_header__operation__last__bit Int)
(declare-const dw1000__register_driver__long_indexed_header__operation__position Int)
(assert (<= 0 dw1000__register_driver__long_indexed_header__operation__first__bit))
(assert (< dw1000__register_driver__long_indexed_header__operation__first__bit dw1000__register_driver__long_indexed_header__operation__last__bit))
(assert (<= 0 dw1000__register_driver__long_indexed_header__operation__position))
(declare-const dw1000__register_driver__long_indexed_header__register_sub_address_lsb__first__bit Int)
(declare-const dw1000__register_driver__long_indexed_header__register_sub_address_lsb__last__bit Int)
(declare-const dw1000__register_driver__long_indexed_header__register_sub_address_lsb__position Int)
(assert (<= 0 dw1000__register_driver__long_indexed_header__register_sub_address_lsb__first__bit))
(assert (< dw1000__register_driver__long_indexed_header__register_sub_address_lsb__first__bit dw1000__register_driver__long_indexed_header__register_sub_address_lsb__last__bit))
(assert (<= 0 dw1000__register_driver__long_indexed_header__register_sub_address_lsb__position))
(declare-const dw1000__register_driver__long_indexed_header__extended_address__first__bit Int)
(declare-const dw1000__register_driver__long_indexed_header__extended_address__last__bit Int)
(declare-const dw1000__register_driver__long_indexed_header__extended_address__position Int)
(assert (<= 0 dw1000__register_driver__long_indexed_header__extended_address__first__bit))
(assert (< dw1000__register_driver__long_indexed_header__extended_address__first__bit dw1000__register_driver__long_indexed_header__extended_address__last__bit))
(assert (<= 0 dw1000__register_driver__long_indexed_header__extended_address__position))
(declare-const dw1000__register_driver__long_indexed_header__register_sub_address_msb__first__bit Int)
(declare-const dw1000__register_driver__long_indexed_header__register_sub_address_msb__last__bit Int)
(declare-const dw1000__register_driver__long_indexed_header__register_sub_address_msb__position Int)
(assert (<= 0 dw1000__register_driver__long_indexed_header__register_sub_address_msb__first__bit))
(assert (< dw1000__register_driver__long_indexed_header__register_sub_address_msb__first__bit dw1000__register_driver__long_indexed_header__register_sub_address_msb__last__bit))
(assert (<= 0 dw1000__register_driver__long_indexed_header__register_sub_address_msb__position))
(declare-fun user_eq11 (us_rep2 us_rep2) Bool)
(declare-const dummy11 us_rep2)
(declare-datatypes () ((long_indexed_header__ref (mk_long_indexed_header__ref (long_indexed_header__content us_rep2)))))
(define-fun long_indexed_header__ref___projection ((a long_indexed_header__ref)) us_rep2 (long_indexed_header__content a))
(declare-datatypes () ((source__ref2 (mk_source__ref2 (source__content2 us_rep2)))))
(define-fun source__ref___3__projection ((a source__ref2)) us_rep2 (source__content2 a))
(declare-fun to_bytes2 (us_rep2) (Array Int bits_8))
(declare-fun to_bytes__function_guard2 ((Array Int bits_8) us_rep2) Bool)
(define-fun dynamic_invariant2 ((temp___expr_823 us_rep2) (temp___is_init_819 Bool) (temp___skip_constant_820 Bool) (temp___do_toplevel_821 Bool) (temp___do_typ_inv_822 Bool)) Bool (=> (= temp___do_toplevel_821 true) (=> (= temp___is_init_819 true) (and (= (to_rep4 (rec__dw1000__register_driver__long_indexed_header__sub_index (us_split_fields5 temp___expr_823))) 1) (= (to_rep6 (rec__dw1000__register_driver__long_indexed_header__extended_address (us_split_fields5 temp___expr_823))) 1)))))
(define-fun default_initial_assumption2 ((temp___expr_825 us_rep2) (temp___skip_top_level_826 Bool)) Bool (and (and (and (and (and (= (to_rep2 (rec__dw1000__register_driver__long_indexed_header__register_id (us_split_fields5 temp___expr_825))) #x00) (= (to_rep4 (rec__dw1000__register_driver__long_indexed_header__sub_index (us_split_fields5 temp___expr_825))) 1)) (= (to_rep3 (rec__dw1000__register_driver__long_indexed_header__operation (us_split_fields5 temp___expr_825))) 0)) (= (to_rep5 (rec__dw1000__register_driver__long_indexed_header__register_sub_address_lsb (us_split_fields5 temp___expr_825))) #x00)) (= (to_rep6 (rec__dw1000__register_driver__long_indexed_header__extended_address (us_split_fields5 temp___expr_825))) 1)) (= (to_rep1 (rec__dw1000__register_driver__long_indexed_header__register_sub_address_msb (us_split_fields5 temp___expr_825))) #x00)))
(define-fun dynamic_predicate2 ((temp___827 us_rep2)) Bool (and (= (to_rep4 (rec__dw1000__register_driver__long_indexed_header__sub_index (us_split_fields5 temp___827))) 1) (= (to_rep6 (rec__dw1000__register_driver__long_indexed_header__extended_address (us_split_fields5 temp___827))) 1)))
(assert true)
(define-fun dynamic_invariant3 ((temp___expr_271 (_ BitVec 8)) (temp___is_init_267 Bool) (temp___skip_constant_268 Bool) (temp___do_toplevel_269 Bool) (temp___do_typ_inv_270 Bool)) Bool (=> (or (= temp___is_init_267 true) (bvule #x00 #x3F)) (in_range2 temp___expr_271)))
(declare-sort bits_15 0)
(define-fun in_range7 ((x (_ BitVec 16))) Bool (and (bvule #x0000 x) (bvule x #x7FFF)))
(define-fun in_range_int2 ((x Int)) Bool (and (<= 0 x) (<= x 32767)))
(declare-fun attr__ATTRIBUTE_IMAGE8 ((_ BitVec 16)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) (_ BitVec 16))
(declare-fun user_eq12 (bits_15 bits_15) Bool)
(declare-const dummy12 bits_15)
(declare-datatypes () ((bits_15__ref (mk_bits_15__ref (bits_15__content bits_15)))))
(define-fun bits_15__ref___projection ((a bits_15__ref)) bits_15 (bits_15__content a))
(define-fun dynamic_invariant4 ((temp___expr_334 (_ BitVec 16)) (temp___is_init_330 Bool) (temp___skip_constant_331 Bool) (temp___do_toplevel_332 Bool) (temp___do_typ_inv_333 Bool)) Bool (=> (or (= temp___is_init_330 true) (bvule #x0000 #x7FFF)) (in_range7 temp___expr_334)))
(define-fun dynamic_invariant5 ((temp___expr_716 us_rep) (temp___is_init_712 Bool) (temp___skip_constant_713 Bool) (temp___do_toplevel_714 Bool) (temp___do_typ_inv_715 Bool)) Bool (=> (= temp___do_toplevel_714 true) (=> (= temp___is_init_712 true) (= (to_rep4 (rec__dw1000__register_driver__non_indexed_header__sub_index (us_split_fields1 temp___expr_716))) 0))))
(define-fun default_initial_assumption3 ((temp___expr_718 us_rep) (temp___skip_top_level_719 Bool)) Bool (and (and (= (to_rep2 (rec__dw1000__register_driver__non_indexed_header__register_id (us_split_fields1 temp___expr_718))) #x00) (= (to_rep4 (rec__dw1000__register_driver__non_indexed_header__sub_index (us_split_fields1 temp___expr_718))) 0)) (= (to_rep3 (rec__dw1000__register_driver__non_indexed_header__operation (us_split_fields1 temp___expr_718))) 0)))
(define-fun dynamic_predicate3 ((temp___720 us_rep)) Bool (= (to_rep4 (rec__dw1000__register_driver__non_indexed_header__sub_index (us_split_fields1 temp___720))) 0))
(define-fun dynamic_invariant6 ((temp___expr_726 us_rep1) (temp___is_init_722 Bool) (temp___skip_constant_723 Bool) (temp___do_toplevel_724 Bool) (temp___do_typ_inv_725 Bool)) Bool (=> (= temp___do_toplevel_724 true) (=> (= temp___is_init_722 true) (and (= (to_rep4 (rec__dw1000__register_driver__short_indexed_header__sub_index (us_split_fields3 temp___expr_726))) 1) (= (to_rep6 (rec__dw1000__register_driver__short_indexed_header__extended_address (us_split_fields3 temp___expr_726))) 0)))))
(define-fun default_initial_assumption4 ((temp___expr_728 us_rep1) (temp___skip_top_level_729 Bool)) Bool (and (and (and (and (= (to_rep2 (rec__dw1000__register_driver__short_indexed_header__register_id (us_split_fields3 temp___expr_728))) #x00) (= (to_rep4 (rec__dw1000__register_driver__short_indexed_header__sub_index (us_split_fields3 temp___expr_728))) 1)) (= (to_rep3 (rec__dw1000__register_driver__short_indexed_header__operation (us_split_fields3 temp___expr_728))) 0)) (= (to_rep5 (rec__dw1000__register_driver__short_indexed_header__register_sub_address (us_split_fields3 temp___expr_728))) #x00)) (= (to_rep6 (rec__dw1000__register_driver__short_indexed_header__extended_address (us_split_fields3 temp___expr_728))) 0)))
(define-fun dynamic_predicate4 ((temp___730 us_rep1)) Bool (and (= (to_rep4 (rec__dw1000__register_driver__short_indexed_header__sub_index (us_split_fields3 temp___730))) 1) (= (to_rep6 (rec__dw1000__register_driver__short_indexed_header__extended_address (us_split_fields3 temp___730))) 0)))
(define-fun dynamic_invariant7 ((temp___expr_736 us_rep2) (temp___is_init_732 Bool) (temp___skip_constant_733 Bool) (temp___do_toplevel_734 Bool) (temp___do_typ_inv_735 Bool)) Bool (=> (= temp___do_toplevel_734 true) (=> (= temp___is_init_732 true) (and (= (to_rep4 (rec__dw1000__register_driver__long_indexed_header__sub_index (us_split_fields5 temp___expr_736))) 1) (= (to_rep6 (rec__dw1000__register_driver__long_indexed_header__extended_address (us_split_fields5 temp___expr_736))) 1)))))
(define-fun default_initial_assumption5 ((temp___expr_738 us_rep2) (temp___skip_top_level_739 Bool)) Bool (and (and (and (and (and (= (to_rep2 (rec__dw1000__register_driver__long_indexed_header__register_id (us_split_fields5 temp___expr_738))) #x00) (= (to_rep4 (rec__dw1000__register_driver__long_indexed_header__sub_index (us_split_fields5 temp___expr_738))) 1)) (= (to_rep3 (rec__dw1000__register_driver__long_indexed_header__operation (us_split_fields5 temp___expr_738))) 0)) (= (to_rep5 (rec__dw1000__register_driver__long_indexed_header__register_sub_address_lsb (us_split_fields5 temp___expr_738))) #x00)) (= (to_rep6 (rec__dw1000__register_driver__long_indexed_header__extended_address (us_split_fields5 temp___expr_738))) 1)) (= (to_rep1 (rec__dw1000__register_driver__long_indexed_header__register_sub_address_msb (us_split_fields5 temp___expr_738))) #x00)))
(define-fun dynamic_predicate5 ((temp___740 us_rep2)) Bool (and (= (to_rep4 (rec__dw1000__register_driver__long_indexed_header__sub_index (us_split_fields5 temp___740))) 1) (= (to_rep6 (rec__dw1000__register_driver__long_indexed_header__extended_address (us_split_fields5 temp___740))) 1)))
(declare-const register_id (_ BitVec 8))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const sub_address (_ BitVec 16))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const data__first integer)
(declare-const data__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort tnon_indexed_header_bytesP1 0)
(declare-fun tnon_indexed_header_bytesP1qtint (tnon_indexed_header_bytesP1) Int)
(assert (forall ((i tnon_indexed_header_bytesP1)) (and (<= 1 (tnon_indexed_header_bytesP1qtint i)) (<= (tnon_indexed_header_bytesP1qtint i) 1))))
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq13 (tnon_indexed_header_bytesP1 tnon_indexed_header_bytesP1) Bool)
(declare-const dummy13 tnon_indexed_header_bytesP1)
(declare-datatypes () ((tnon_indexed_header_bytesP1__ref (mk_tnon_indexed_header_bytesP1__ref (tnon_indexed_header_bytesP1__content tnon_indexed_header_bytesP1)))))
(define-fun tnon_indexed_header_bytesP1__ref___projection ((a tnon_indexed_header_bytesP1__ref)) tnon_indexed_header_bytesP1 (tnon_indexed_header_bytesP1__content a))
(declare-sort tshort_indexed_header_bytesP1 0)
(declare-fun tshort_indexed_header_bytesP1qtint (tshort_indexed_header_bytesP1) Int)
(assert (forall ((i tshort_indexed_header_bytesP1)) (and (<= 1 (tshort_indexed_header_bytesP1qtint i)) (<= (tshort_indexed_header_bytesP1qtint i) 2))))
(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq14 (tshort_indexed_header_bytesP1 tshort_indexed_header_bytesP1) Bool)
(declare-const dummy14 tshort_indexed_header_bytesP1)
(declare-datatypes () ((tshort_indexed_header_bytesP1__ref (mk_tshort_indexed_header_bytesP1__ref (tshort_indexed_header_bytesP1__content tshort_indexed_header_bytesP1)))))
(define-fun tshort_indexed_header_bytesP1__ref___projection ((a tshort_indexed_header_bytesP1__ref)) tshort_indexed_header_bytesP1 (tshort_indexed_header_bytesP1__content a))
(declare-sort tlong_indexed_header_bytesP1 0)
(declare-fun tlong_indexed_header_bytesP1qtint (tlong_indexed_header_bytesP1) Int)
(assert (forall ((i tlong_indexed_header_bytesP1)) (and (<= 1 (tlong_indexed_header_bytesP1qtint i)) (<= (tlong_indexed_header_bytesP1qtint i) 3))))
(define-fun in_range10 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq15 (tlong_indexed_header_bytesP1 tlong_indexed_header_bytesP1) Bool)
(declare-const dummy15 tlong_indexed_header_bytesP1)
(declare-datatypes () ((tlong_indexed_header_bytesP1__ref (mk_tlong_indexed_header_bytesP1__ref (tlong_indexed_header_bytesP1__content tlong_indexed_header_bytesP1)))))
(define-fun tlong_indexed_header_bytesP1__ref___projection ((a tlong_indexed_header_bytesP1__ref)) tlong_indexed_header_bytesP1 (tlong_indexed_header_bytesP1__content a))
(declare-const header us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const header1 us_rep1)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const header2 us_rep2)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_invariant8 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range temp___expr_39)))
(define-fun dynamic_invariant9 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(assert (= header (mk___rep (mk___split_fields (of_rep2 register_id) (of_rep4 0) (of_rep3 0)))))
(assert (= header1 (mk___rep1 (mk___split_fields1 (of_rep2 register_id) (of_rep4 1) (of_rep3 0) (of_rep5 ((_ extract 7 0) sub_address)) (of_rep6 0)))))
(assert (= header2 (mk___rep2 (mk___split_fields2 (of_rep2 register_id) (of_rep4 1) (of_rep3 0) (of_rep5 ((_ extract 7 0) (bvand sub_address #x007F))) (of_rep6 1) (of_rep1 ((_ extract 7 0) (bvudiv sub_address #x0080)))))))
(define-fun dynamic_invariant10 ((temp___expr_695 Int) (temp___is_init_691 Bool) (temp___skip_constant_692 Bool) (temp___do_toplevel_693 Bool) (temp___do_typ_inv_694 Bool)) Bool (=> (or (= temp___is_init_691 true) (<= 0 1)) (in_range3 temp___expr_695)))
(define-fun dynamic_invariant11 ((temp___expr_702 Int) (temp___is_init_698 Bool) (temp___skip_constant_699 Bool) (temp___do_toplevel_700 Bool) (temp___do_typ_inv_701 Bool)) Bool (=> (or (= temp___is_init_698 true) (<= 0 1)) (in_range4 temp___expr_702)))
(define-fun dynamic_invariant12 ((temp___expr_709 Int) (temp___is_init_705 Bool) (temp___skip_constant_706 Bool) (temp___do_toplevel_707 Bool) (temp___do_typ_inv_708 Bool)) Bool (=> (or (= temp___is_init_705 true) (<= 0 1)) (in_range6 temp___expr_709)))
(define-fun dynamic_invariant13 ((temp___expr_278 (_ BitVec 8)) (temp___is_init_274 Bool) (temp___skip_constant_275 Bool) (temp___do_toplevel_276 Bool) (temp___do_typ_inv_277 Bool)) Bool (=> (or (= temp___is_init_274 true) (bvule #x00 #x7F)) (in_range5 temp___expr_278)))
(define-fun dynamic_invariant14 ((temp___expr_285 (_ BitVec 8)) (temp___is_init_281 Bool) (temp___skip_constant_282 Bool) (temp___do_toplevel_283 Bool) (temp___do_typ_inv_284 Bool)) Bool true)
(define-fun dynamic_invariant15 ((temp___expr_684 us_t) (temp___is_init_680 Bool) (temp___skip_constant_681 Bool) (temp___do_toplevel_682 Bool) (temp___do_typ_inv_683 Bool)) Bool (=> (not (= temp___skip_constant_681 true)) (dynamic_property 0 2147483647 (first1 temp___expr_684) (last1 temp___expr_684))))
(declare-const o bits_8)
(declare-const o1 extended_address_type)
(declare-const o2 bits_7)
(declare-const o3 operation_type)
(declare-const o4 sub_index_type)
(declare-const o5 bits_6)
(declare-const o6 bits_6)
(declare-const o7 sub_index_type)
(declare-const o8 operation_type)
(declare-const o9 bits_7)
(declare-const o10 extended_address_type)
(declare-const o11 bits_8)
(declare-const temp___862 bits_6)
(declare-const temp___8621 sub_index_type)
(declare-const temp___8622 operation_type)
(declare-const temp___8623 bits_7)
(declare-const temp___8624 extended_address_type)
(declare-const temp___8625 bits_8)
(declare-const dw1000__register_driver__read_register__B_3__header__assume bits_6)
(declare-const dw1000__register_driver__read_register__B_3__header__assume1 sub_index_type)
(declare-const dw1000__register_driver__read_register__B_3__header__assume2 operation_type)
(declare-const dw1000__register_driver__read_register__B_3__header__assume3 bits_7)
(declare-const dw1000__register_driver__read_register__B_3__header__assume4 extended_address_type)
(declare-const dw1000__register_driver__read_register__B_3__header__assume5 bits_8)
(define-fun dw1000__register_driver__read_register__B_3__header__assume6 () us_rep2 (mk___rep2 (mk___split_fields2 dw1000__register_driver__read_register__B_3__header__assume dw1000__register_driver__read_register__B_3__header__assume1 dw1000__register_driver__read_register__B_3__header__assume2 dw1000__register_driver__read_register__B_3__header__assume3 dw1000__register_driver__read_register__B_3__header__assume4 dw1000__register_driver__read_register__B_3__header__assume5)))
(assert (in_range2 register_id))
(assert (in_range7 sub_address))
(assert (dynamic_property 0 2147483647 (to_rep data__first) (to_rep data__last)))
(assert (< 0 (ite (<= (to_rep data__first) (to_rep data__last)) (+ (- (to_rep data__last) (to_rep data__first)) 1) 0)))
(assert (not (= sub_address #x0000)))
(assert (not (bvult sub_address #x0080)))
(assert (= (to_rep1 o) ((_ extract 7 0) (bvudiv sub_address #x0080))))
(assert (= (to_rep6 o1) 1))
(assert (= (to_rep5 o2) ((_ extract 7 0) (bvand sub_address #x007F))))
(assert (= (to_rep3 o3) 0))
(assert (= (to_rep4 o4) 1))
(assert (= (to_rep2 o5) register_id))
(assert (= o5 o6))
(assert (= o4 o7))
(assert (= o3 o8))
(assert (= o2 o9))
(assert (= o1 o10))
(assert (= o o11))
(assert (= temp___862 o6))
(assert (= temp___8621 o7))
(assert (= temp___8622 o8))
(assert (= temp___8623 o9))
(assert (= temp___8624 o10))
(assert (= temp___8625 o11))
(assert (and (= (to_rep4 temp___8621) 1) (= (to_rep6 temp___8624) 1)))
(assert (= dw1000__register_driver__read_register__B_3__header__assume6 (mk___rep2 (mk___split_fields2 temp___862 temp___8621 temp___8622 temp___8623 temp___8624 temp___8625))))
(assert (= dw1000__register_driver__read_register__B_3__header__assume6 header2))
(assert (let ((temp___737 header2)) (and (= (to_rep4 (rec__dw1000__register_driver__long_indexed_header__sub_index (us_split_fields5 temp___737))) 1) (= (to_rep6 (rec__dw1000__register_driver__long_indexed_header__extended_address (us_split_fields5 temp___737))) 1))))
(assert (not (= (to_rep6 (rec__dw1000__register_driver__long_indexed_header__extended_address (us_split_fields5 header2))) 1)))
(check-sat)
(exit)
