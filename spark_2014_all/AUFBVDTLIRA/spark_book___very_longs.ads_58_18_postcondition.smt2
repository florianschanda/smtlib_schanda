(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 8) Int) Bool)
(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 8)) (i Int)) (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun bv_min ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))
(declare-fun nth1 ((_ BitVec 16) Int) Bool)
(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))
(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvlshr x n) (lsr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvashr x n) (asr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvshl x n) (lsl1 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_left2 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_right2 v (bv2nat n)))))
(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (nth1 x (bv2nat i)) (nth_bv1 x i))))
(assert (forall ((x (_ BitVec 16)) (i Int)) (=> (and (<= 0 i) (< i 65536)) (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))
(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i))) (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun bv_min1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))
(define-fun bv_max1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort digit_index_type 0)
(declare-fun digit_index_typeqtint (digit_index_type) Int)
(assert (forall ((i digit_index_type)) (and (<= 1 (digit_index_typeqtint i)) (<= (digit_index_typeqtint i) 65536))))
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 65536)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (digit_index_type digit_index_type) Bool)
(declare-const dummy digit_index_type)
(declare-datatypes () ((digit_index_type__ref (mk_digit_index_type__ref (digit_index_type__content digit_index_type)))))
(define-fun digit_index_type__ref___projection ((a digit_index_type__ref)) digit_index_type (digit_index_type__content a))
(define-fun to_rep ((x digit_index_type)) Int (digit_index_typeqtint x))
(declare-fun of_rep (Int) digit_index_type)
(assert (forall ((x digit_index_type)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x digit_index_type)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort tdigit_count_typeB 0)
(declare-fun tdigit_count_typeBqtint (tdigit_count_typeB) Int)
(assert (forall ((i tdigit_count_typeB)) (and (<= (- 2147483648) (tdigit_count_typeBqtint i)) (<= (tdigit_count_typeBqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy1 tdigit_count_typeB)
(declare-datatypes () ((tdigit_count_typeB__ref (mk_tdigit_count_typeB__ref (tdigit_count_typeB__content tdigit_count_typeB)))))
(define-fun tdigit_count_typeB__ref___projection ((a tdigit_count_typeB__ref)) tdigit_count_typeB (tdigit_count_typeB__content a))
(define-fun to_rep1 ((x tdigit_count_typeB)) Int (tdigit_count_typeBqtint x))
(declare-fun of_rep1 (Int) tdigit_count_typeB)
(assert (forall ((x tdigit_count_typeB)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x tdigit_count_typeB)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort octet 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))
(declare-fun user_eq2 (octet octet) Bool)
(declare-const dummy2 octet)
(declare-datatypes () ((octet__ref (mk_octet__ref (octet__content octet)))))
(define-fun octet__ref___projection ((a octet__ref)) octet (octet__content a))
(declare-fun to_rep2 (octet) (_ BitVec 8))
(declare-fun of_rep2 ((_ BitVec 8)) octet)
(assert (forall ((x octet)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun to_int3 ((x octet)) Int (bv2nat (to_rep2 x)))
(assert (forall ((x octet)) (! (uint_in_range (to_int3 x)) :pattern ((to_int3 x)))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int octet))))))
(declare-fun slide ((Array Int octet) Int Int) (Array Int octet))
(assert (forall ((a (Array Int octet))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int octet))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int octet)) (a__first Int) (a__last Int) (b (Array Int octet)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep2 (select a temp___idx_154)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int octet)) (b (Array Int octet))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep2 (select a temp___idx_154)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy3 tdigit_count_typeB)
(declare-datatypes () ((t17s__ref (mk_t17s__ref (t17s__content tdigit_count_typeB)))))
(define-fun t17s__ref___projection ((a t17s__ref)) tdigit_count_typeB (t17s__content a))
(declare-sort t 0)
(declare-fun first (t) tdigit_count_typeB)
(declare-fun last (t) tdigit_count_typeB)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int octet)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int octet) (elts a))
(define-fun of_array ((a (Array Int octet)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int octet)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int octet)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int octet)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int octet))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int octet))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int octet))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq4 (us_t us_t) Bool)
(declare-const dummy4 us_t)
(declare-datatypes () ((t18s__ref (mk_t18s__ref (t18s__content us_t)))))
(define-fun t18s__ref___projection ((a t18s__ref)) us_t (t18s__content a))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__very_longs__very_long__length digit_index_type)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) digit_index_type (rec__very_longs__very_long__length a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__very_longs__very_long__long_digits us_t)))))
(define-fun us_split_fields_Long_Digits__projection ((a us_split_fields)) us_t (rec__very_longs__very_long__long_digits a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep (rec__very_longs__very_long__length (us_split_discrs1 a))) (to_rep (rec__very_longs__very_long__length (us_split_discrs1 b)))) (= (bool_eq1 (rec__very_longs__very_long__long_digits (us_split_fields1 a)) (rec__very_longs__very_long__long_digits (us_split_fields1 b))) true)) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const very_longs__very_long__length__first__bit Int)
(declare-const very_longs__very_long__length__last__bit Int)
(declare-const very_longs__very_long__length__position Int)
(assert (<= 0 very_longs__very_long__length__first__bit))
(assert (< very_longs__very_long__length__first__bit very_longs__very_long__length__last__bit))
(assert (<= 0 very_longs__very_long__length__position))
(declare-const very_longs__very_long__long_digits__first__bit Int)
(declare-const very_longs__very_long__long_digits__last__bit Int)
(declare-const very_longs__very_long__long_digits__position Int)
(assert (<= 0 very_longs__very_long__long_digits__first__bit))
(assert (< very_longs__very_long__long_digits__first__bit very_longs__very_long__long_digits__last__bit))
(assert (<= 0 very_longs__very_long__long_digits__position))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((very_long__ref (mk_very_long__ref (very_long__content us_rep)))))
(define-fun very_long__ref___projection ((a very_long__ref)) us_rep (very_long__content a))
(declare-fun takelsb_from16 ((_ BitVec 16)) (_ BitVec 8))
(declare-fun takelsb_from16__function_guard ((_ BitVec 8) (_ BitVec 16)) Bool)
(define-fun dynamic_invariant ((temp___expr_235 (_ BitVec 8)) (temp___is_init_231 Bool) (temp___skip_constant_232 Bool) (temp___do_toplevel_233 Bool) (temp___do_typ_inv_234 Bool)) Bool true)
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (natural natural) Bool)
(declare-const dummy6 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range3 temp___expr_39)))
(declare-fun shift_right ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun shift_right__function_guard ((_ BitVec 16) (_ BitVec 16) Int) Bool)
(declare-sort double_octet 0)
(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 16))
(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 16)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 16))
(declare-fun user_eq7 (double_octet double_octet) Bool)
(declare-const dummy7 double_octet)
(declare-datatypes () ((double_octet__ref (mk_double_octet__ref (double_octet__content double_octet)))))
(define-fun double_octet__ref___projection ((a double_octet__ref)) double_octet (double_octet__content a))
(define-fun dynamic_invariant2 ((temp___expr_340 (_ BitVec 16)) (temp___is_init_336 Bool) (temp___skip_constant_337 Bool) (temp___do_toplevel_338 Bool) (temp___do_typ_inv_339 Bool)) Bool true)
(assert (forall ((value (_ BitVec 16))) (forall ((count Int)) (! (=> (and (dynamic_invariant2 value true true true true) (dynamic_invariant1 count true true true true)) (let ((result (shift_right value count))) (and (= result (bvudiv value (ite (< count 65536) (bvshl #x0001 ((_ int2bv 16) count)) #x0000))) (dynamic_invariant2 result true false true true)))) :pattern ((shift_right value count))))))
(define-fun dynamic_invariant3 ((temp___expr_248 us_rep) (temp___is_init_244 Bool) (temp___skip_constant_245 Bool) (temp___do_toplevel_246 Bool) (temp___do_typ_inv_247 Bool)) Bool (let ((temp___249 (rec__very_longs__very_long__length (us_split_discrs1 temp___expr_248)))) (and (dynamic_property1 1 (to_rep temp___249) (first1 (rec__very_longs__very_long__long_digits (us_split_fields1 temp___expr_248))) (last1 (rec__very_longs__very_long__long_digits (us_split_fields1 temp___expr_248)))) (and (= (first1 (rec__very_longs__very_long__long_digits (us_split_fields1 temp___expr_248))) 1) (= (last1 (rec__very_longs__very_long__long_digits (us_split_fields1 temp___expr_248))) (to_rep temp___249))))))
(declare-const l us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const r us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq8 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy8 tdigit_count_typeB)
(declare-datatypes () ((tT88bP1__ref (mk_tT88bP1__ref (tT88bP1__content tdigit_count_typeB)))))
(define-fun tT88bP1__ref___projection ((a tT88bP1__ref)) tdigit_count_typeB (tT88bP1__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) tdigit_count_typeB)
(declare-fun last2 (t1) tdigit_count_typeB)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l1 Int)) (! (=> (in_range2 f) (=> (in_range2 l1) (and (= (to_rep1 (first2 (mk1 f l1))) f) (= (to_rep1 (last2 (mk1 f l1))) l1)))) :pattern ((mk1 f l1)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int octet)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int octet) (elts1 a))
(define-fun of_array1 ((a (Array Int octet)) (f Int) (l1 Int)) us_t1 (mk___t1 a (mk1 f l1)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int octet)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int octet)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int octet)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int octet))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int octet))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int octet))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq9 (us_t1 us_t1) Bool)
(declare-const dummy9 us_t1)
(declare-datatypes () ((t88b__ref (mk_t88b__ref (t88b__content us_t1)))))
(define-fun t88b__ref___projection ((a t88b__ref)) us_t1 (t88b__content a))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__very_longs__very_long__long_digits1 us_t1)))))
(define-fun us_split_fields_Long_Digits__24__projection ((a us_split_fields2)) us_t1 (rec__very_longs__very_long__long_digits1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___24__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs2 us_split_discrs) (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___47__projection ((a us_rep1)) us_split_discrs (us_split_discrs2 a))
(define-fun us_rep___48__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a) (mk___split_fields (let ((temp___200 (rec__very_longs__very_long__long_digits1 (us_split_fields3 a)))) (of_array (to_array1 temp___200) (first3 temp___200) (last3 temp___200))))))
(define-fun of_base ((r1 us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r1) (mk___split_fields1 (let ((temp___199 (rec__very_longs__very_long__long_digits (us_split_fields1 r1)))) (of_array1 (to_array temp___199) (first1 temp___199) (last1 temp___199))))))
(define-fun bool_eq4 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep (rec__very_longs__very_long__length (us_split_discrs2 a))) (to_rep (rec__very_longs__very_long__length (us_split_discrs2 b)))) (= (bool_eq3 (rec__very_longs__very_long__long_digits1 (us_split_fields3 a)) (rec__very_longs__very_long__long_digits1 (us_split_fields3 b))) true)) true false))
(define-fun in_range4 ((rec__very_longs__very_long__length1 Int) (a us_rep)) Bool (= rec__very_longs__very_long__length1 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 a)))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const very_longs__very_long__length__first__bit1 Int)
(declare-const very_longs__very_long__length__last__bit1 Int)
(declare-const very_longs__very_long__length__position1 Int)
(assert (<= 0 very_longs__very_long__length__first__bit1))
(assert (< very_longs__very_long__length__first__bit1 very_longs__very_long__length__last__bit1))
(assert (<= 0 very_longs__very_long__length__position1))
(declare-const very_longs__very_long__long_digits__first__bit1 Int)
(declare-const very_longs__very_long__long_digits__last__bit1 Int)
(declare-const very_longs__very_long__long_digits__position1 Int)
(assert (<= 0 very_longs__very_long__long_digits__first__bit1))
(assert (< very_longs__very_long__long_digits__first__bit1 very_longs__very_long__long_digits__last__bit1))
(assert (<= 0 very_longs__very_long__long_digits__position1))
(declare-fun user_eq10 (us_rep1 us_rep1) Bool)
(declare-const dummy10 us_rep1)
(declare-datatypes () ((tresultS__ref (mk_tresultS__ref (tresultS__content us_rep1)))))
(define-fun tresultS__ref___4__projection ((a tresultS__ref)) us_rep1 (tresultS__content a))
(define-fun dynamic_invariant4 ((temp___expr_673 us_rep1) (temp___is_init_669 Bool) (temp___skip_constant_670 Bool) (temp___do_toplevel_671 Bool) (temp___do_typ_inv_672 Bool)) Bool (and (=> (not (= temp___skip_constant_670 true)) (in_range4 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l))) (to_base temp___expr_673))) (and (dynamic_property3 1 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l))) (first3 (rec__very_longs__very_long__long_digits1 (us_split_fields3 temp___expr_673))) (last3 (rec__very_longs__very_long__long_digits1 (us_split_fields3 temp___expr_673)))) (and (= (first3 (rec__very_longs__very_long__long_digits1 (us_split_fields3 temp___expr_673))) 1) (= (last3 (rec__very_longs__very_long__long_digits1 (us_split_fields3 temp___expr_673))) (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l))))))))
(define-fun default_initial_assumption ((temp___expr_676 us_rep1) (temp___skip_top_level_677 Bool)) Bool (= (to_rep (rec__very_longs__very_long__length (us_split_discrs2 temp___expr_676))) (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l)))))
(declare-const result____split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq11 (tdigit_count_typeB tdigit_count_typeB) Bool)
(declare-const dummy11 tdigit_count_typeB)
(declare-datatypes () ((t89b__ref (mk_t89b__ref (t89b__content tdigit_count_typeB)))))
(define-fun t89b__ref___projection ((a t89b__ref)) tdigit_count_typeB (t89b__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) tdigit_count_typeB)
(declare-fun last4 (t2) tdigit_count_typeB)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l1 Int)) (! (=> (in_range2 f) (=> (in_range2 l1) (and (= (to_rep1 (first4 (mk2 f l1))) f) (= (to_rep1 (last4 (mk2 f l1))) l1)))) :pattern ((mk2 f l1)))))
(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property4 range_first range_last low) (dynamic_property4 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int octet)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int octet) (elts2 a))
(define-fun of_array2 ((a (Array Int octet)) (f Int) (l1 Int)) us_t2 (mk___t2 a (mk2 f l1)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int octet)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int octet)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int octet)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int octet))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int octet))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int octet))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq5 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq12 (us_t2 us_t2) Bool)
(declare-const dummy12 us_t2)
(declare-datatypes () ((t90b__ref (mk_t90b__ref (t90b__content us_t2)))))
(define-fun t90b__ref___projection ((a t90b__ref)) us_t2 (t90b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const r93b Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-fun temp_____aggregate_def_1033 ((_ BitVec 8) Int Int) us_t2)
(declare-sort t3 0)
(declare-fun first6 (t3) tdigit_count_typeB)
(declare-fun last6 (t3) tdigit_count_typeB)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l1 Int)) (! (=> (in_range2 f) (=> (in_range2 l1) (and (= (to_rep1 (first6 (mk3 f l1))) f) (= (to_rep1 (last6 (mk3 f l1))) l1)))) :pattern ((mk3 f l1)))))
(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int octet)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int octet) (elts3 a))
(define-fun of_array3 ((a (Array Int octet)) (f Int) (l1 Int)) us_t3 (mk___t3 a (mk3 f l1)))
(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int octet)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int octet)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int octet)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int octet))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int octet))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int octet))) (<= 0 (object__alignment5 a))))
(define-fun bool_eq6 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first6 (rt3 x))) (to_rep1 (last6 (rt3 x))) (elts3 y) (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))
(declare-fun user_eq13 (us_t3 us_t3) Bool)
(declare-const dummy13 us_t3)
(declare-datatypes () ((digits_array_type__ref (mk_digits_array_type__ref (digits_array_type__content us_t3)))))
(define-fun digits_array_type__ref___projection ((a digits_array_type__ref)) us_t3 (digits_array_type__content a))
(assert (forall ((temp___1035 (_ BitVec 8))) (forall ((temp___1036 Int) (temp___1037 Int)) (let ((temp___1034 (temp_____aggregate_def_1033 temp___1035 temp___1036 temp___1037))) (=> (dynamic_invariant temp___1035 true true true true) (and (=> (dynamic_property6 1 65536 temp___1036 temp___1037) (and (= (first5 temp___1034) temp___1036) (= (last5 temp___1034) temp___1037))) (forall ((temp___1038 Int)) (= (to_rep2 (select (to_array2 temp___1034) temp___1038)) temp___1035))))))))
(define-fun dynamic_invariant5 ((temp___expr_228 Int) (temp___is_init_224 Bool) (temp___skip_constant_225 Bool) (temp___do_toplevel_226 Bool) (temp___do_typ_inv_227 Bool)) Bool (=> (or (= temp___is_init_224 true) (<= 1 65536)) (in_range1 temp___expr_228)))
(define-fun dynamic_invariant6 ((temp___expr_242 us_t3) (temp___is_init_238 Bool) (temp___skip_constant_239 Bool) (temp___do_toplevel_240 Bool) (temp___do_typ_inv_241 Bool)) Bool (=> (not (= temp___skip_constant_239 true)) (dynamic_property6 1 65536 (first7 temp___expr_242) (last7 temp___expr_242))))
(declare-const result____split_fields (Array Int octet))
(declare-const result____split_fields1 t1)
(declare-const l_digit (_ BitVec 16))
(declare-const r_digit (_ BitVec 16))
(declare-const t_digit (_ BitVec 16))
(declare-const temp (_ BitVec 16))
(declare-const carry (_ BitVec 16))
(declare-const j Int)
(declare-const i Int)
(declare-const very_longs__modmultiply__result digit_index_type)
(declare-const very_longs__modmultiply__result1 (Array Int octet))
(declare-const very_longs__modmultiply__result2 t)
(declare-const us Int)
(declare-const temp___1040 (Array Int octet))
(declare-const temp___10401 t2)
(declare-const temp___1041 (Array Int octet))
(declare-const temp___10411 t1)
(declare-const o (Array Int octet))
(declare-const o1 t1)
(declare-const o2 (Array Int octet))
(declare-const o3 t1)
(declare-const temp___1044 digit_index_type)
(declare-const temp___10441 (Array Int octet))
(declare-const temp___10442 t1)
(declare-const temp___1070 us_rep1)
(declare-const temp___1069 (_ BitVec 16))
(declare-const temp___1068 (_ BitVec 16))
(declare-const temp___1067 (_ BitVec 16))
(declare-const temp___1066 (_ BitVec 16))
(declare-const temp___1065 (_ BitVec 16))
(declare-const temp___1062 us_rep1)
(declare-const temp___1061 (_ BitVec 16))
(declare-const temp___1060 (_ BitVec 16))
(declare-const temp___1059 (_ BitVec 16))
(declare-const temp___1058 (_ BitVec 16))
(declare-const temp___1057 (_ BitVec 16))
(declare-const o4 Int)
(declare-const o5 octet)
(declare-const o6 (_ BitVec 8))
(declare-const o7 (_ BitVec 16))
(declare-const o8 Int)
(declare-const o9 octet)
(declare-const o10 (_ BitVec 8))
(declare-const o11 (_ BitVec 16))
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 Bool)
(declare-const o17 Bool)
(declare-const o18 Int)
(declare-const temp___1052 Int)
(declare-const o19 Int)
(declare-const o20 octet)
(declare-const o21 (_ BitVec 8))
(declare-const o22 (_ BitVec 16))
(declare-const o23 Int)
(declare-const temp___1054 Int)
(declare-const o24 (_ BitVec 8))
(declare-const o25 octet)
(declare-const o26 Int)
(declare-const o27 (Array Int octet))
(declare-const o28 us_t1)
(declare-const o29 us_split_fields2)
(declare-const temp___1056 us_rep1)
(declare-const o30 (_ BitVec 16))
(declare-const l_digit1 (_ BitVec 16))
(declare-const r_digit1 (_ BitVec 16))
(declare-const t_digit1 (_ BitVec 16))
(declare-const temp1 (_ BitVec 16))
(declare-const carry1 (_ BitVec 16))
(declare-const i1 Int)
(declare-const result us_split_fields__ref1)
(declare-const result____split_fields2 us_split_fields2)
(declare-const result1 int__ref)
(declare-const j1 Int)
(declare-const result____split_fields3 us_split_fields2)
(declare-const l_digit2 (_ BitVec 16))
(declare-const r_digit2 (_ BitVec 16))
(declare-const t_digit2 (_ BitVec 16))
(declare-const temp2 (_ BitVec 16))
(declare-const carry2 (_ BitVec 16))
(declare-const j2 Int)
(declare-const i2 Int)
(declare-const result2 t__ref1)
(declare-const carry3 (_ BitVec 16))
(declare-const result3 int__ref)
(declare-const i3 Int)
(declare-const result____split_fields4 us_split_fields2)
(declare-const l_digit3 (_ BitVec 16))
(declare-const r_digit3 (_ BitVec 16))
(declare-const t_digit3 (_ BitVec 16))
(declare-const temp3 (_ BitVec 16))
(declare-const carry4 (_ BitVec 16))
(declare-const i4 Int)
(declare-const result4 t__ref1)
(declare-const l_digit4 (_ BitVec 16))
(declare-const result5 t__ref1)
(declare-const r_digit4 (_ BitVec 16))
(declare-const result6 Bool)
(declare-const result7 t__ref1)
(declare-const t_digit4 (_ BitVec 16))
(declare-const result8 t__ref1)
(declare-const temp4 (_ BitVec 16))
(declare-const result9 us_split_fields__ref1)
(declare-const result____split_fields5 us_split_fields2)
(declare-const result10 t__ref1)
(declare-const carry5 (_ BitVec 16))
(declare-const result____split_fields6 us_split_fields__ref1)
(declare-const l_digit5 t__ref1)
(declare-const r_digit5 t__ref1)
(declare-const t_digit5 t__ref1)
(declare-const temp5 t__ref1)
(declare-const carry6 t__ref1)
(declare-const i5 int__ref)
(declare-const result____split_fields7 us_split_fields2)
(declare-const l_digit6 (_ BitVec 16))
(declare-const r_digit6 (_ BitVec 16))
(declare-const t_digit6 (_ BitVec 16))
(declare-const temp6 (_ BitVec 16))
(declare-const carry7 (_ BitVec 16))
(declare-const i6 Int)
(declare-const result____split_fields8 us_split_fields__ref1)
(declare-const l_digit7 t__ref1)
(declare-const r_digit7 t__ref1)
(declare-const t_digit7 t__ref1)
(declare-const temp7 t__ref1)
(declare-const carry8 t__ref1)
(declare-const i7 int__ref)
(declare-const result____split_fields9 us_split_fields2)
(declare-const l_digit8 (_ BitVec 16))
(declare-const r_digit8 (_ BitVec 16))
(declare-const t_digit8 (_ BitVec 16))
(declare-const temp8 (_ BitVec 16))
(declare-const carry9 (_ BitVec 16))
(declare-const i8 Int)
(declare-const result____split_fields10 us_split_fields__ref1)
(declare-const l_digit9 t__ref1)
(declare-const r_digit9 t__ref1)
(declare-const t_digit9 t__ref1)
(declare-const temp9 t__ref1)
(declare-const carry10 t__ref1)
(declare-const j3 int__ref)
(declare-const i9 int__ref)
(declare-const result____split_fields11 us_split_fields2)
(declare-const l_digit10 (_ BitVec 16))
(declare-const r_digit10 (_ BitVec 16))
(declare-const t_digit10 (_ BitVec 16))
(declare-const temp10 (_ BitVec 16))
(declare-const carry11 (_ BitVec 16))
(declare-const j4 Int)
(declare-const i10 Int)
(declare-const result____split_fields12 us_split_fields__ref1)
(declare-const l_digit11 t__ref1)
(declare-const r_digit11 t__ref1)
(declare-const t_digit11 t__ref1)
(declare-const temp11 t__ref1)
(declare-const carry12 t__ref1)
(declare-const j5 int__ref)
(declare-const i11 int__ref)
(declare-const result____split_fields13 us_split_fields2)
(declare-const l_digit12 (_ BitVec 16))
(declare-const r_digit12 (_ BitVec 16))
(declare-const t_digit12 (_ BitVec 16))
(declare-const temp12 (_ BitVec 16))
(declare-const carry13 (_ BitVec 16))
(declare-const j6 Int)
(declare-const i12 Int)
(declare-const result11 very_long__ref)
(declare-const very_longs__modmultiply__result3 us_rep)
(declare-const very_longs__modmultiply__result4 very_long__ref)
(declare-const very_longs__modmultiply__result5 us_rep)
(declare-const result____split_fields14 us_split_fields__ref1)
(declare-const l_digit13 t__ref1)
(declare-const r_digit13 t__ref1)
(declare-const t_digit13 t__ref1)
(declare-const temp13 t__ref1)
(declare-const carry14 t__ref1)
(declare-const j7 int__ref)
(declare-const i13 int__ref)
(declare-const very_longs__modmultiply__result6 very_long__ref)
(declare-const result____split_fields15 us_split_fields2)
(declare-const l_digit14 (_ BitVec 16))
(declare-const r_digit14 (_ BitVec 16))
(declare-const t_digit14 (_ BitVec 16))
(declare-const temp14 (_ BitVec 16))
(declare-const carry15 (_ BitVec 16))
(declare-const j8 Int)
(declare-const i14 Int)
(declare-const very_longs__modmultiply__result7 us_rep)
(declare-const result12 digit_index_type)
(declare-const result13 (Array Int octet))
(declare-const result14 t)
(assert (dynamic_invariant3 l true false true true))
(assert (dynamic_invariant3 r true false true true))
(assert (= (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l))) (to_rep (rec__very_longs__very_long__length (us_split_discrs1 r)))))
(assert (and (= us (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l)))) (in_range1 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l))))))
(assert (= (to_rep (rec__very_longs__very_long__length result____split_discrs)) (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l)))))
(assert (dynamic_invariant4 (mk___rep1 result____split_discrs (mk___split_fields1 (mk___t1 result____split_fields result____split_fields1))) false false true true))
(assert (= (to_rep1 (first4 (rt2 (temp_____aggregate_def_1033 #x00 1 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l))))))) 1))
(assert (= (to_rep1 (last4 (rt2 (temp_____aggregate_def_1033 #x00 1 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l))))))) (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l)))))
(assert (= (mk___t2 temp___1040 temp___10401) (temp_____aggregate_def_1033 #x00 1 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l))))))
(assert (= (ite (<= (to_rep1 (first4 temp___10401)) (to_rep1 (last4 temp___10401))) (+ (- (to_rep1 (last4 temp___10401)) (to_rep1 (first4 temp___10401))) 1) 0) (ite (<= 1 (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l)))) (+ (- (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l))) 1) 1) 0)))
(assert (= temp___1040 temp___1041))
(assert (= (mk1 (to_rep1 (first4 temp___10401)) (to_rep1 (last4 temp___10401))) temp___10411))
(assert (= (ite (<= (to_rep1 (first2 temp___10411)) (to_rep1 (last2 temp___10411))) (+ (- (to_rep1 (last2 temp___10411)) (to_rep1 (first2 temp___10411))) 1) 0) (ite (<= (to_rep1 (first2 result____split_fields1)) (to_rep1 (last2 result____split_fields1))) (+ (- (to_rep1 (last2 result____split_fields1)) (to_rep1 (first2 result____split_fields1))) 1) 0)))
(assert (= (mk___t1 o o1) (mk___t1 temp___1041 temp___10411)))
(assert (= o2 o))
(assert (= o3 o1))
(assert (= result____split_discrs (mk___split_discrs temp___1044)))
(assert (= temp___10441 o2))
(assert (= temp___10442 o3))
(assert (= result (mk___split_fields__ref1 (mk___split_fields1 (mk___t1 result____split_fields result____split_fields1)))))
(assert (= result____split_fields2 (mk___split_fields1 (mk___t1 temp___10441 temp___10442))))
(assert (= result____split_discrs (mk___split_discrs temp___1044)))
(assert (= result1 (mk_int__ref j)))
(assert (= j1 1))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= temp___1070 (mk___rep1 result____split_discrs result____split_fields2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= temp___1069 carry)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= temp___1068 temp)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= temp___1067 t_digit)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= temp___1066 r_digit)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= temp___1065 l_digit)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (and (dynamic_invariant4 (mk___rep1 result____split_discrs result____split_fields3) false true true true) (and (<= 1 j2) (<= j2 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= result2 (mk_t__ref1 carry2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= carry3 #x0000)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= result3 (mk_int__ref i2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= i3 1)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= temp___1062 (mk___rep1 result____split_discrs result____split_fields3)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= temp___1061 carry3))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= temp___1060 temp2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= temp___1059 t_digit2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= temp___1058 r_digit2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= temp___1057 l_digit2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (and (dynamic_invariant4 (mk___rep1 result____split_discrs result____split_fields4) false true true true) (and (<= 1 i4) (<= i4 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (and (<= (to_rep1 (first (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))) i4) (<= i4 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= o4 i4))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= o5 (select (elts (rec__very_longs__very_long__long_digits (us_split_fields1 l))) o4)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= o6 (to_rep2 o5)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= o7 ((_ zero_extend 8) o6)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= result4 (mk_t__ref1 l_digit3)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= l_digit4 o7))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (and (<= (to_rep1 (first (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))) j2) (<= j2 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= o8 j2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= o9 (select (elts (rec__very_longs__very_long__long_digits (us_split_fields1 r))) o8)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= o10 (to_rep2 o9)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= o11 ((_ zero_extend 8) o10)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= result5 (mk_t__ref1 r_digit3)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= r_digit4 o11))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= (to_rep1 (last2 (rt1 (rec__very_longs__very_long__long_digits1 result____split_fields4)))) r93b))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (in_range2 r93b))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (and (= o14 (+ i4 j2)) (in_range2 (+ i4 j2))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= o15 (- o14 1)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= o16 (ite (<= o15 r93b) true false)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (and (= o12 (+ i4 j2)) (in_range2 (+ i4 j2))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= o13 (- o12 1)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= o17 (ite (<= 1 o13) true false)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= result6 (ite (= o17 true) o16 false)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (and (= o18 (+ i4 j2)) (in_range2 (+ i4 j2)))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= temp___1052 (- o18 1))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (and (<= (to_rep1 (first2 (rt1 (rec__very_longs__very_long__long_digits1 result____split_fields4)))) temp___1052) (<= temp___1052 (to_rep1 (last2 (rt1 (rec__very_longs__very_long__long_digits1 result____split_fields4))))))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= o19 temp___1052)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= o20 (select (elts1 (rec__very_longs__very_long__long_digits1 result____split_fields4)) o19))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= o21 (to_rep2 o20))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= o22 ((_ zero_extend 8) o21))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= result7 (mk_t__ref1 t_digit3))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= t_digit4 o22)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= result8 (mk_t__ref1 temp3))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= temp4 (bvadd (bvadd (bvmul l_digit4 r_digit4) t_digit4) carry4))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= o24 (takelsb_from16 temp4))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= (to_rep2 o25) o24)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (and (= o23 (+ i4 j2)) (in_range2 (+ i4 j2)))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= temp___1054 (- o23 1))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (and (<= (to_rep1 (first2 (rt1 (rec__very_longs__very_long__long_digits1 result____split_fields4)))) temp___1054) (<= temp___1054 (to_rep1 (last2 (rt1 (rec__very_longs__very_long__long_digits1 result____split_fields4))))))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= o26 temp___1054)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= o27 (store (elts1 (rec__very_longs__very_long__long_digits1 result____split_fields4)) o26 o25))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= o28 (mk___t1 o27 (rt1 (rec__very_longs__very_long__long_digits1 result____split_fields4))))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= o29 (mk___split_fields1 o28))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= temp___1056 (mk___rep1 result____split_discrs o29))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= result9 (mk___split_fields__ref1 result____split_fields4))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= result____split_fields5 (us_split_fields3 temp___1056))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= result____split_discrs (us_split_discrs2 temp___1056))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (and (= o30 (shift_right temp4 8)) (= o30 (bvudiv temp4 (ite (< 8 65536) (bvshl #x0001 ((_ int2bv 16) 8)) #x0000))))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= result10 (mk_t__ref1 carry4))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (= result6 true) (= carry5 o30)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (not (= result6 true)) (= carry5 carry4)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (not (= result6 true)) (= temp4 temp3)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (not (= result6 true)) (= t_digit4 t_digit3)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (=> (not (= result6 true)) (= result____split_fields5 result____split_fields4)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= i4 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= i5 (mk_int__ref i4)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= carry6 (mk_t__ref1 carry5)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= temp5 (mk_t__ref1 temp4)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= t_digit5 (mk_t__ref1 t_digit4)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= r_digit5 (mk_t__ref1 r_digit4)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= l_digit5 (mk_t__ref1 l_digit4)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= result____split_fields6 (mk___split_fields__ref1 result____split_fields5)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= i6 i4))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= carry7 carry5))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= temp6 temp4))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= t_digit6 t_digit4))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= r_digit6 r_digit4))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= l_digit6 l_digit4))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= result____split_fields7 result____split_fields5))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= i7 i5))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= carry8 carry6))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= temp7 temp5))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= t_digit7 t_digit5))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= r_digit7 r_digit5))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= l_digit7 l_digit5))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= result____split_fields8 result____split_fields6))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= i8 i6))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= carry9 carry7))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= temp8 temp6))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= t_digit8 t_digit6))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= r_digit8 r_digit6))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= l_digit8 l_digit6))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l))))))) (= result____split_fields9 result____split_fields7))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= i7 (mk_int__ref i3)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= carry8 (mk_t__ref1 carry3)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= temp7 (mk_t__ref1 temp2)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= t_digit7 (mk_t__ref1 t_digit2)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= r_digit7 (mk_t__ref1 r_digit2)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= l_digit7 (mk_t__ref1 l_digit2)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= result____split_fields8 (mk___split_fields__ref1 result____split_fields3)))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= i8 i3))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= carry9 carry3))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= temp8 temp2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= t_digit8 t_digit2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= r_digit8 r_digit2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= l_digit8 l_digit2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (=> (not (and (<= 1 i3) (<= i3 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 l)))))))) (= result____split_fields9 result____split_fields3))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= j2 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= i9 i7)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= j3 (mk_int__ref j2))))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= carry10 carry8)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= temp9 temp7)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= t_digit9 t_digit7)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= r_digit9 r_digit7)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= l_digit9 l_digit7)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= result____split_fields10 result____split_fields8)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= i10 i8)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= j4 j2)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= carry11 carry9)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= temp10 temp8)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= t_digit10 t_digit8)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= r_digit10 r_digit8)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= l_digit10 l_digit8)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= result____split_fields11 result____split_fields9)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= i11 i9)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= j5 j3)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= carry12 carry10)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= temp11 temp9)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= t_digit11 t_digit9)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= r_digit11 r_digit9)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= l_digit11 l_digit9)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= result____split_fields12 result____split_fields10)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= i12 i10)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= j6 j4)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= carry13 carry11)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= temp12 temp10)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= t_digit12 t_digit10)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= r_digit12 r_digit10)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= l_digit12 l_digit10)))
(assert (=> (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r))))))) (= result____split_fields13 result____split_fields11)))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= i11 (mk_int__ref i))))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= j5 (mk_int__ref j1))))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= carry12 (mk_t__ref1 carry))))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= temp11 (mk_t__ref1 temp))))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= t_digit11 (mk_t__ref1 t_digit))))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= r_digit11 (mk_t__ref1 r_digit))))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= l_digit11 (mk_t__ref1 l_digit))))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= result____split_fields12 (mk___split_fields__ref1 result____split_fields2))))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= i12 i1)))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= j6 j1)))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= carry13 carry1)))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= temp12 temp1)))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= t_digit12 t_digit1)))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= r_digit12 r_digit1)))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= l_digit12 l_digit1)))
(assert (=> (not (and (<= 1 j1) (<= j1 (to_rep1 (last (rt (rec__very_longs__very_long__long_digits (us_split_fields1 r)))))))) (= result____split_fields13 result____split_fields2)))
(assert (= very_longs__modmultiply__result4 (mk_very_long__ref very_longs__modmultiply__result3)))
(assert (= very_longs__modmultiply__result5 very_longs__modmultiply__result3))
(assert (= result11 (mk_very_long__ref (mk___rep (mk___split_discrs very_longs__modmultiply__result) (mk___split_fields (mk___t very_longs__modmultiply__result1 very_longs__modmultiply__result2))))))
(assert (= very_longs__modmultiply__result3 (to_base (mk___rep1 result____split_discrs (us_split_fields__content1 result____split_fields12)))))
(assert (= very_longs__modmultiply__result6 very_longs__modmultiply__result4))
(assert (= i13 i11))
(assert (= j7 j5))
(assert (= carry14 carry12))
(assert (= temp13 temp11))
(assert (= t_digit13 t_digit11))
(assert (= r_digit13 r_digit11))
(assert (= l_digit13 l_digit11))
(assert (= result____split_fields14 result____split_fields12))
(assert (= very_longs__modmultiply__result7 very_longs__modmultiply__result5))
(assert (= i14 i12))
(assert (= j8 j6))
(assert (= carry15 carry13))
(assert (= temp14 temp12))
(assert (= t_digit14 t_digit12))
(assert (= r_digit14 r_digit12))
(assert (= l_digit14 l_digit12))
(assert (= result____split_fields15 result____split_fields13))
(assert (= (mk___rep (mk___split_discrs result12) (mk___split_fields (mk___t result13 result14))) (very_long__content very_longs__modmultiply__result6)))
(assert (not (= (to_rep (rec__very_longs__very_long__length (us_split_discrs1 (very_long__content very_longs__modmultiply__result6)))) (to_rep (rec__very_longs__very_long__length (us_split_discrs1 l))))))
(check-sat)
(exit)
