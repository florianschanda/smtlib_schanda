(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 8) Int) Bool)
(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 8)) (i Int)) (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun bv_min ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))
(declare-fun nth1 ((_ BitVec 16) Int) Bool)
(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))
(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvlshr x n) (lsr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvashr x n) (asr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvshl x n) (lsl1 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_left2 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_right2 v (bv2nat n)))))
(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (nth1 x (bv2nat i)) (nth_bv1 x i))))
(assert (forall ((x (_ BitVec 16)) (i Int)) (=> (and (<= 0 i) (< i 65536)) (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))
(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i))) (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun bv_min1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))
(define-fun bv_max1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))
(declare-fun nth2 ((_ BitVec 32) Int) Bool)
(declare-fun lsr2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun asr2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun lsl2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_right3 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_left3 ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun to_int3 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32)) (bv2nat x) (- (- 4294967296 (bv2nat x)))))
(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvlshr x n) (lsr2 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvashr x n) (asr2 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvshl x n) (lsl2 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_left3 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_right3 v (bv2nat n)))))
(declare-fun nth_bv2 ((_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (= (nth_bv2 x i) true) (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (nth2 x (bv2nat i)) (nth_bv2 x i))))
(assert (forall ((x (_ BitVec 32)) (i Int)) (=> (and (<= 0 i) (< i 4294967296)) (= (nth_bv2 x ((_ int2bv 32) i)) (nth2 x i)))))
(declare-fun eq_sub_bv2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i))) (= (eq_sub_bv2 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub2 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (= (eq_sub2 a b (bv2nat i) (bv2nat n)) (eq_sub_bv2 a b i n))))
(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 (_ BitVec 32))))))
(declare-fun power2 ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun bv_min2 ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))
(define-fun bv_max2 ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(define-fun dynamic_invariant1 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range2 temp___expr_74)))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-sort packet_bytes_range 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 8180)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (packet_bytes_range packet_bytes_range) Bool)
(declare-const dummy2 packet_bytes_range)
(declare-datatypes () ((packet_bytes_range__ref (mk_packet_bytes_range__ref (packet_bytes_range__content packet_bytes_range)))))
(define-fun packet_bytes_range__ref___projection ((a packet_bytes_range__ref)) packet_bytes_range (packet_bytes_range__content a))
(define-fun dynamic_invariant2 ((temp___expr_796 Int) (temp___is_init_792 Bool) (temp___skip_constant_793 Bool) (temp___do_toplevel_794 Bool) (temp___do_typ_inv_795 Bool)) Bool (=> (or (= temp___is_init_792 true) (<= 1 8180)) (in_range3 temp___expr_796)))
(declare-sort byte 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 8))
(declare-fun user_eq3 (byte byte) Bool)
(declare-const dummy3 byte)
(declare-datatypes () ((byte__ref (mk_byte__ref (byte__content byte)))))
(define-fun byte__ref___projection ((a byte__ref)) byte (byte__content a))
(define-fun dynamic_invariant3 ((temp___expr_803 (_ BitVec 8)) (temp___is_init_799 Bool) (temp___skip_constant_800 Bool) (temp___do_toplevel_801 Bool) (temp___do_typ_inv_802 Bool)) Bool true)
(declare-fun to_rep1 (byte) (_ BitVec 8))
(declare-fun of_rep1 ((_ BitVec 8)) byte)
(assert (forall ((x byte)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun to_int4 ((x byte)) Int (bv2nat (to_rep1 x)))
(assert (forall ((x byte)) (! (uint_in_range (to_int4 x)) :pattern ((to_int4 x)))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int byte))))))
(declare-fun slide1 ((Array Int byte) Int Int) (Array Int byte))
(assert (forall ((a (Array Int byte))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int byte))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int byte)) (a__first Int) (a__last Int) (b (Array Int byte)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep1 (select a temp___idx_173)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_173))))))) true false))
(assert (forall ((a (Array Int byte)) (b (Array Int byte))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep1 (select a temp___idx_173)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_173)))))))))))
(declare-sort unsigned8 0)
(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 8))
(declare-fun user_eq4 (unsigned8 unsigned8) Bool)
(declare-const dummy4 unsigned8)
(declare-datatypes () ((unsigned8__ref (mk_unsigned8__ref (unsigned8__content unsigned8)))))
(define-fun unsigned8__ref___projection ((a unsigned8__ref)) unsigned8 (unsigned8__content a))
(declare-fun to_rep2 (unsigned8) (_ BitVec 8))
(declare-fun of_rep2 ((_ BitVec 8)) unsigned8)
(assert (forall ((x unsigned8)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun to_int5 ((x unsigned8)) Int (bv2nat (to_rep2 x)))
(assert (forall ((x unsigned8)) (! (uint_in_range (to_int5 x)) :pattern ((to_int5 x)))))
(declare-sort unsigned16 0)
(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 16))
(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 16)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 16))
(declare-fun user_eq5 (unsigned16 unsigned16) Bool)
(declare-const dummy5 unsigned16)
(declare-datatypes () ((unsigned16__ref (mk_unsigned16__ref (unsigned16__content unsigned16)))))
(define-fun unsigned16__ref___projection ((a unsigned16__ref)) unsigned16 (unsigned16__content a))
(declare-fun to_rep3 (unsigned16) (_ BitVec 16))
(declare-fun of_rep3 ((_ BitVec 16)) unsigned16)
(assert (forall ((x unsigned16)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert true)
(assert (forall ((x (_ BitVec 16))) (! (= (to_rep3 (of_rep3 x)) x) :pattern ((to_rep3 (of_rep3 x))))))
(define-fun to_int6 ((x unsigned16)) Int (bv2nat (to_rep3 x)))
(assert (forall ((x unsigned16)) (! (uint_in_range1 (to_int6 x)) :pattern ((to_int6 x)))))
(declare-sort unsigned32 0)
(declare-const attr__ATTRIBUTE_MODULUS3 (_ BitVec 32))
(declare-fun attr__ATTRIBUTE_IMAGE7 ((_ BitVec 32)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) (_ BitVec 32))
(declare-fun user_eq6 (unsigned32 unsigned32) Bool)
(declare-const dummy6 unsigned32)
(declare-datatypes () ((unsigned32__ref (mk_unsigned32__ref (unsigned32__content unsigned32)))))
(define-fun unsigned32__ref___projection ((a unsigned32__ref)) unsigned32 (unsigned32__content a))
(declare-fun to_rep4 (unsigned32) (_ BitVec 32))
(declare-fun of_rep4 ((_ BitVec 32)) unsigned32)
(assert (forall ((x unsigned32)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert true)
(assert (forall ((x (_ BitVec 32))) (! (= (to_rep4 (of_rep4 x)) x) :pattern ((to_rep4 (of_rep4 x))))))
(define-fun to_int7 ((x unsigned32)) Int (bv2nat (to_rep4 x)))
(assert (forall ((x unsigned32)) (! (uint_in_range2 (to_int7 x)) :pattern ((to_int7 x)))))
(declare-sort keylengthvaluetype 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1365)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq7 (keylengthvaluetype keylengthvaluetype) Bool)
(declare-const dummy7 keylengthvaluetype)
(declare-datatypes () ((keylengthvaluetype__ref (mk_keylengthvaluetype__ref (keylengthvaluetype__content keylengthvaluetype)))))
(define-fun keylengthvaluetype__ref___projection ((a keylengthvaluetype__ref)) keylengthvaluetype (keylengthvaluetype__content a))
(define-fun dynamic_invariant4 ((temp___expr_1259 Int) (temp___is_init_1255 Bool) (temp___skip_constant_1256 Bool) (temp___do_toplevel_1257 Bool) (temp___do_typ_inv_1258 Bool)) Bool (=> (or (= temp___is_init_1255 true) (<= 0 1365)) (in_range4 temp___expr_1259)))
(declare-fun to_rep5 (keylengthvaluetype) Int)
(declare-fun of_rep5 (Int) keylengthvaluetype)
(assert (forall ((x keylengthvaluetype)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x keylengthvaluetype)) (! (in_range4 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-sort dnskeystringtypeindex 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 1365)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq8 (dnskeystringtypeindex dnskeystringtypeindex) Bool)
(declare-const dummy8 dnskeystringtypeindex)
(declare-datatypes () ((dnskeystringtypeindex__ref (mk_dnskeystringtypeindex__ref (dnskeystringtypeindex__content dnskeystringtypeindex)))))
(define-fun dnskeystringtypeindex__ref___projection ((a dnskeystringtypeindex__ref)) dnskeystringtypeindex (dnskeystringtypeindex__content a))
(declare-sort classtype 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq9 (classtype classtype) Bool)
(declare-const dummy9 classtype)
(declare-datatypes () ((classtype__ref (mk_classtype__ref (classtype__content classtype)))))
(define-fun classtype__ref___projection ((a classtype__ref)) classtype (classtype__content a))
(declare-fun to_rep6 (classtype) Int)
(declare-fun of_rep6 (Int) classtype)
(assert (forall ((x classtype)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x classtype)) (! (in_range6 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__rr_type__resourcerecordtype__ttlinseconds unsigned32) (rec__rr_type__resourcerecordtype__class classtype) (rec__ext__ us_private)))))
(define-fun us_split_fields_TTLInSeconds__projection ((a us_split_fields)) unsigned32 (rec__rr_type__resourcerecordtype__ttlinseconds a))
(define-fun us_split_fields_Class__projection ((a us_split_fields)) classtype (rec__rr_type__resourcerecordtype__class a))
(define-fun us_split_fields___2__projection ((a us_split_fields)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___6__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields) (attr__tag Int)))))
(define-fun us_rep___7__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___8__projection ((a us_rep)) Int (attr__tag a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep4 (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 a))) (to_rep4 (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 b)))) (= (to_rep6 (rec__rr_type__resourcerecordtype__class (us_split_fields1 a))) (to_rep6 (rec__rr_type__resourcerecordtype__class (us_split_fields1 b))))) true false))
(declare-fun us_dispatch_eq (us_rep us_rep) Bool)
(declare-const us_tag Int)
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const rr_type__resourcerecordtype__ttlinseconds__first__bit Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__last__bit Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__position Int)
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__first__bit))
(assert (< rr_type__resourcerecordtype__ttlinseconds__first__bit rr_type__resourcerecordtype__ttlinseconds__last__bit))
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__position))
(declare-const rr_type__resourcerecordtype__class__first__bit Int)
(declare-const rr_type__resourcerecordtype__class__last__bit Int)
(declare-const rr_type__resourcerecordtype__class__position Int)
(assert (<= 0 rr_type__resourcerecordtype__class__first__bit))
(assert (< rr_type__resourcerecordtype__class__first__bit rr_type__resourcerecordtype__class__last__bit))
(assert (<= 0 rr_type__resourcerecordtype__class__position))
(declare-fun user_eq10 (us_rep us_rep) Bool)
(declare-const dummy10 us_rep)
(declare-datatypes () ((resourcerecordtype__ref (mk_resourcerecordtype__ref (resourcerecordtype__content us_rep)))))
(define-fun resourcerecordtype__ref___projection ((a resourcerecordtype__ref)) us_rep (resourcerecordtype__content a))
(declare-const dummy11 (Array Int character))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq11 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__flags unsigned16) (rec__rr_type__dnskey_record_type__dnskeyrecordtype__protocol unsigned8) (rec__rr_type__dnskey_record_type__dnskeyrecordtype__algorithm unsigned8) (rec__rr_type__dnskey_record_type__dnskeyrecordtype__key (Array Int character)) (rec__rr_type__dnskey_record_type__dnskeyrecordtype__keylength keylengthvaluetype) (rec__rr_type__resourcerecordtype__ttlinseconds1 unsigned32) (rec__rr_type__resourcerecordtype__class1 classtype) (rec__ext__1 us_private)))))
(define-fun us_split_fields_Flags__projection ((a us_split_fields2)) unsigned16 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__flags a))
(define-fun us_split_fields_Protocol__projection ((a us_split_fields2)) unsigned8 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__protocol a))
(define-fun us_split_fields_Algorithm__projection ((a us_split_fields2)) unsigned8 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__algorithm a))
(define-fun us_split_fields_Key__projection ((a us_split_fields2)) (Array Int character) (rec__rr_type__dnskey_record_type__dnskeyrecordtype__key a))
(define-fun us_split_fields_KeyLength__projection ((a us_split_fields2)) keylengthvaluetype (rec__rr_type__dnskey_record_type__dnskeyrecordtype__keylength a))
(define-fun us_split_fields_TTLInSeconds__5__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__resourcerecordtype__ttlinseconds1 a))
(define-fun us_split_fields_Class__5__projection ((a us_split_fields2)) classtype (rec__rr_type__resourcerecordtype__class1 a))
(define-fun us_split_fields___6__projection ((a us_split_fields2)) us_private (rec__ext__1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___10__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2) (attr__tag1 Int)))))
(define-fun us_rep___15__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun us_rep___16__projection ((a us_rep1)) Int (attr__tag1 a))
(declare-fun hide_ext__ (unsigned16 unsigned8 unsigned8 (Array Int character) keylengthvaluetype us_private) us_private)
(declare-fun extract__flags (us_private) unsigned16)
(assert (forall ((flags unsigned16)) (forall ((protocol unsigned8) (algorithm unsigned8)) (forall ((key (Array Int character))) (forall ((keylength keylengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__flags (hide_ext__ flags protocol algorithm key keylength rec__ext__2)) flags)))))))
(declare-fun extract__protocol (us_private) unsigned8)
(assert (forall ((flags unsigned16)) (forall ((protocol unsigned8) (algorithm unsigned8)) (forall ((key (Array Int character))) (forall ((keylength keylengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__protocol (hide_ext__ flags protocol algorithm key keylength rec__ext__2)) protocol)))))))
(declare-fun extract__algorithm (us_private) unsigned8)
(assert (forall ((flags unsigned16)) (forall ((protocol unsigned8) (algorithm unsigned8)) (forall ((key (Array Int character))) (forall ((keylength keylengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__algorithm (hide_ext__ flags protocol algorithm key keylength rec__ext__2)) algorithm)))))))
(declare-fun extract__key (us_private) (Array Int character))
(assert (forall ((flags unsigned16)) (forall ((protocol unsigned8) (algorithm unsigned8)) (forall ((key (Array Int character))) (forall ((keylength keylengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__key (hide_ext__ flags protocol algorithm key keylength rec__ext__2)) key)))))))
(declare-fun extract__keylength (us_private) keylengthvaluetype)
(assert (forall ((flags unsigned16)) (forall ((protocol unsigned8) (algorithm unsigned8)) (forall ((key (Array Int character))) (forall ((keylength keylengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__keylength (hide_ext__ flags protocol algorithm key keylength rec__ext__2)) keylength)))))))
(declare-fun extract__ext__ (us_private) us_private)
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (mk___split_fields (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 a)) (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 a)) (hide_ext__ (rec__rr_type__dnskey_record_type__dnskeyrecordtype__flags (us_split_fields3 a)) (rec__rr_type__dnskey_record_type__dnskeyrecordtype__protocol (us_split_fields3 a)) (rec__rr_type__dnskey_record_type__dnskeyrecordtype__algorithm (us_split_fields3 a)) (rec__rr_type__dnskey_record_type__dnskeyrecordtype__key (us_split_fields3 a)) (rec__rr_type__dnskey_record_type__dnskeyrecordtype__keylength (us_split_fields3 a)) (rec__ext__1 (us_split_fields3 a)))) (attr__tag1 a)))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (mk___split_fields1 (extract__flags (rec__ext__ (us_split_fields1 r))) (extract__protocol (rec__ext__ (us_split_fields1 r))) (extract__algorithm (rec__ext__ (us_split_fields1 r))) (extract__key (rec__ext__ (us_split_fields1 r))) (extract__keylength (rec__ext__ (us_split_fields1 r))) (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 r)) (rec__rr_type__resourcerecordtype__class (us_split_fields1 r)) (extract__ext__ (rec__ext__ (us_split_fields1 r)))) (attr__tag r)))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (and (and (and (= (to_rep3 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__flags (us_split_fields3 a))) (to_rep3 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__flags (us_split_fields3 b)))) (= (to_rep2 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__protocol (us_split_fields3 a))) (to_rep2 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__protocol (us_split_fields3 b))))) (= (to_rep2 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__algorithm (us_split_fields3 a))) (to_rep2 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__algorithm (us_split_fields3 b))))) (= (bool_eq (rec__rr_type__dnskey_record_type__dnskeyrecordtype__key (us_split_fields3 a)) 1 1365 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__key (us_split_fields3 b)) 1 1365) true)) (= (to_rep5 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__keylength (us_split_fields3 a))) (to_rep5 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__keylength (us_split_fields3 b))))) (= (to_rep4 (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 a))) (to_rep4 (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 b))))) (= (to_rep6 (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 a))) (to_rep6 (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 b))))) true false))
(declare-const us_tag1 Int)
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__flags__first__bit Int)
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__flags__last__bit Int)
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__flags__position Int)
(assert (<= 0 rr_type__dnskey_record_type__dnskeyrecordtype__flags__first__bit))
(assert (< rr_type__dnskey_record_type__dnskeyrecordtype__flags__first__bit rr_type__dnskey_record_type__dnskeyrecordtype__flags__last__bit))
(assert (<= 0 rr_type__dnskey_record_type__dnskeyrecordtype__flags__position))
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__protocol__first__bit Int)
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__protocol__last__bit Int)
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__protocol__position Int)
(assert (<= 0 rr_type__dnskey_record_type__dnskeyrecordtype__protocol__first__bit))
(assert (< rr_type__dnskey_record_type__dnskeyrecordtype__protocol__first__bit rr_type__dnskey_record_type__dnskeyrecordtype__protocol__last__bit))
(assert (<= 0 rr_type__dnskey_record_type__dnskeyrecordtype__protocol__position))
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__algorithm__first__bit Int)
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__algorithm__last__bit Int)
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__algorithm__position Int)
(assert (<= 0 rr_type__dnskey_record_type__dnskeyrecordtype__algorithm__first__bit))
(assert (< rr_type__dnskey_record_type__dnskeyrecordtype__algorithm__first__bit rr_type__dnskey_record_type__dnskeyrecordtype__algorithm__last__bit))
(assert (<= 0 rr_type__dnskey_record_type__dnskeyrecordtype__algorithm__position))
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__key__first__bit Int)
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__key__last__bit Int)
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__key__position Int)
(assert (<= 0 rr_type__dnskey_record_type__dnskeyrecordtype__key__first__bit))
(assert (< rr_type__dnskey_record_type__dnskeyrecordtype__key__first__bit rr_type__dnskey_record_type__dnskeyrecordtype__key__last__bit))
(assert (<= 0 rr_type__dnskey_record_type__dnskeyrecordtype__key__position))
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__keylength__first__bit Int)
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__keylength__last__bit Int)
(declare-const rr_type__dnskey_record_type__dnskeyrecordtype__keylength__position Int)
(assert (<= 0 rr_type__dnskey_record_type__dnskeyrecordtype__keylength__first__bit))
(assert (< rr_type__dnskey_record_type__dnskeyrecordtype__keylength__first__bit rr_type__dnskey_record_type__dnskeyrecordtype__keylength__last__bit))
(assert (<= 0 rr_type__dnskey_record_type__dnskeyrecordtype__keylength__position))
(declare-const rr_type__resourcerecordtype__ttlinseconds__first__bit1 Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__last__bit1 Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__position1 Int)
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__first__bit1))
(assert (< rr_type__resourcerecordtype__ttlinseconds__first__bit1 rr_type__resourcerecordtype__ttlinseconds__last__bit1))
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__position1))
(declare-const rr_type__resourcerecordtype__class__first__bit1 Int)
(declare-const rr_type__resourcerecordtype__class__last__bit1 Int)
(declare-const rr_type__resourcerecordtype__class__position1 Int)
(assert (<= 0 rr_type__resourcerecordtype__class__first__bit1))
(assert (< rr_type__resourcerecordtype__class__first__bit1 rr_type__resourcerecordtype__class__last__bit1))
(assert (<= 0 rr_type__resourcerecordtype__class__position1))
(declare-fun user_eq12 (us_rep1 us_rep1) Bool)
(declare-const dummy12 us_rep1)
(declare-datatypes () ((dnskeyrecordtype__ref (mk_dnskeyrecordtype__ref (dnskeyrecordtype__content us_rep1)))))
(define-fun dnskeyrecordtype__ref___projection ((a dnskeyrecordtype__ref)) us_rep1 (dnskeyrecordtype__content a))
(define-fun default_initial_assumption ((temp___expr_1285 us_rep1) (temp___skip_top_level_1286 Bool)) Bool (= (attr__tag1 temp___expr_1285) us_tag1))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const start_byte Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const dnskey_record us_rep1)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const c3b Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const c6b Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const c9b Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-const c12b Int)
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(declare-const attr__ATTRIBUTE_ADDRESS20 Int)
(define-fun dynamic_invariant5 ((temp___expr_949 (_ BitVec 8)) (temp___is_init_945 Bool) (temp___skip_constant_946 Bool) (temp___do_toplevel_947 Bool) (temp___do_typ_inv_948 Bool)) Bool true)
(define-fun dynamic_invariant6 ((temp___expr_956 (_ BitVec 16)) (temp___is_init_952 Bool) (temp___skip_constant_953 Bool) (temp___do_toplevel_954 Bool) (temp___do_typ_inv_955 Bool)) Bool true)
(define-fun dynamic_invariant7 ((temp___expr_963 (_ BitVec 32)) (temp___is_init_959 Bool) (temp___skip_constant_960 Bool) (temp___do_toplevel_961 Bool) (temp___do_typ_inv_962 Bool)) Bool true)
(define-fun dynamic_invariant8 ((temp___expr_970 Int) (temp___is_init_966 Bool) (temp___skip_constant_967 Bool) (temp___do_toplevel_968 Bool) (temp___do_typ_inv_969 Bool)) Bool (=> (or (= temp___is_init_966 true) (<= 0 3)) (in_range6 temp___expr_970)))
(define-fun default_initial_assumption1 ((temp___expr_1049 us_rep) (temp___skip_top_level_1050 Bool)) Bool (= (attr__tag temp___expr_1049) us_tag))
(define-fun dynamic_invariant9 ((temp___expr_1266 Int) (temp___is_init_1262 Bool) (temp___skip_constant_1263 Bool) (temp___do_toplevel_1264 Bool) (temp___do_typ_inv_1265 Bool)) Bool (=> (or (= temp___is_init_1262 true) (<= 1 1365)) (in_range5 temp___expr_1266)))
(declare-const dstbytes Int)
(declare-const srcbyte Int)
(declare-const keylength Int)
(assert (in_range3 start_byte))
(assert (=> (<= 0 1365) (in_range4 dstbytes)))
(assert (<= start_byte (- 8170 (to_rep5 (rec__rr_type__dnskey_record_type__dnskeyrecordtype__keylength (us_split_fields3 dnskey_record))))))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 srcbyte)))
(assert (=> (<= 0 1365) (in_range4 keylength)))
(assert (not (<= start_byte 8177)))
(check-sat)
(exit)
