(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 8) Int) Bool)
(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 8)) (i Int)) (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun bv_min ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))
(declare-fun nth1 ((_ BitVec 16) Int) Bool)
(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))
(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvlshr x n) (lsr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvashr x n) (asr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvshl x n) (lsl1 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_left2 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_right2 v (bv2nat n)))))
(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (nth1 x (bv2nat i)) (nth_bv1 x i))))
(assert (forall ((x (_ BitVec 16)) (i Int)) (=> (and (<= 0 i) (< i 65536)) (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))
(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i))) (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun bv_min1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))
(define-fun bv_max1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))
(declare-sort integer 0)
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort natural 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-sort bits_8 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE2 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) (_ BitVec 8))
(declare-fun user_eq2 (bits_8 bits_8) Bool)
(declare-const dummy2 bits_8)
(declare-datatypes () ((bits_8__ref (mk_bits_8__ref (bits_8__content bits_8)))))
(define-fun bits_8__ref___projection ((a bits_8__ref)) bits_8 (bits_8__content a))
(declare-fun to_rep1 (bits_8) (_ BitVec 8))
(declare-fun of_rep1 ((_ BitVec 8)) bits_8)
(assert (forall ((x bits_8)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun to_int3 ((x bits_8)) Int (bv2nat (to_rep1 x)))
(assert (forall ((x bits_8)) (! (uint_in_range (to_int3 x)) :pattern ((to_int3 x)))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int bits_8))))))
(declare-fun slide ((Array Int bits_8) Int Int) (Array Int bits_8))
(assert (forall ((a (Array Int bits_8))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int bits_8))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int bits_8)) (a__first Int) (a__last Int) (b (Array Int bits_8)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int bits_8)) (b (Array Int bits_8))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int bits_8)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int bits_8) (elts a))
(define-fun of_array ((a (Array Int bits_8)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int bits_8)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int bits_8)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int bits_8)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int bits_8))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int bits_8))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int bits_8))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((byte_array__ref (mk_byte_array__ref (byte_array__content us_t)))))
(define-fun byte_array__ref___projection ((a byte_array__ref)) us_t (byte_array__content a))
(declare-sort bits_1 0)
(define-fun in_range2 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x01)))
(define-fun in_range_int ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE3 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) (_ BitVec 8))
(declare-fun user_eq4 (bits_1 bits_1) Bool)
(declare-const dummy4 bits_1)
(declare-datatypes () ((bits_1__ref (mk_bits_1__ref (bits_1__content bits_1)))))
(define-fun bits_1__ref___projection ((a bits_1__ref)) bits_1 (bits_1__content a))
(declare-fun to_rep2 (bits_1) (_ BitVec 8))
(declare-fun of_rep2 ((_ BitVec 8)) bits_1)
(assert (forall ((x bits_1)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x bits_1)) (! (in_range2 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x02))) (=> (in_range2 y) (= (to_rep2 (of_rep2 x)) y))) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun to_int4 ((x bits_1)) Int (bv2nat (to_rep2 x)))
(assert (forall ((x bits_1)) (! (in_range_int (to_int4 x)) :pattern ((to_int4 x)))))
(declare-sort bits_5 0)
(define-fun in_range3 ((x (_ BitVec 8))) Bool (and (bvule #x00 x) (bvule x #x1F)))
(define-fun in_range_int1 ((x Int)) Bool (and (<= 0 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 8))
(declare-fun user_eq5 (bits_5 bits_5) Bool)
(declare-const dummy5 bits_5)
(declare-datatypes () ((bits_5__ref (mk_bits_5__ref (bits_5__content bits_5)))))
(define-fun bits_5__ref___projection ((a bits_5__ref)) bits_5 (bits_5__content a))
(declare-fun to_rep3 (bits_5) (_ BitVec 8))
(declare-fun of_rep3 ((_ BitVec 8)) bits_5)
(assert (forall ((x bits_5)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x bits_5)) (! (in_range3 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x (_ BitVec 8))) (! (let ((y (bvurem x #x20))) (=> (in_range3 y) (= (to_rep3 (of_rep3 x)) y))) :pattern ((to_rep3 (of_rep3 x))))))
(define-fun to_int5 ((x bits_5)) Int (bv2nat (to_rep3 x)))
(assert (forall ((x bits_5)) (! (in_range_int1 (to_int5 x)) :pattern ((to_int5 x)))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__dw1000__register_types__sys_status_type__irqs bits_1) (rec__dw1000__register_types__sys_status_type__cplock bits_1) (rec__dw1000__register_types__sys_status_type__esyncr bits_1) (rec__dw1000__register_types__sys_status_type__aat bits_1) (rec__dw1000__register_types__sys_status_type__txfrb bits_1) (rec__dw1000__register_types__sys_status_type__txprs bits_1) (rec__dw1000__register_types__sys_status_type__txphs bits_1) (rec__dw1000__register_types__sys_status_type__txfrs bits_1) (rec__dw1000__register_types__sys_status_type__rxprd bits_1) (rec__dw1000__register_types__sys_status_type__rxsfdd bits_1) (rec__dw1000__register_types__sys_status_type__ldedone bits_1) (rec__dw1000__register_types__sys_status_type__rxphd bits_1) (rec__dw1000__register_types__sys_status_type__rxphe bits_1) (rec__dw1000__register_types__sys_status_type__rxdfr bits_1) (rec__dw1000__register_types__sys_status_type__rxfcg bits_1) (rec__dw1000__register_types__sys_status_type__rxfce bits_1) (rec__dw1000__register_types__sys_status_type__rxrfsl bits_1) (rec__dw1000__register_types__sys_status_type__rxrfto bits_1) (rec__dw1000__register_types__sys_status_type__ldeerr bits_1) (rec__dw1000__register_types__sys_status_type__rxovrr bits_1) (rec__dw1000__register_types__sys_status_type__rxpto bits_1) (rec__dw1000__register_types__sys_status_type__gpioirq bits_1) (rec__dw1000__register_types__sys_status_type__slp2init bits_1) (rec__dw1000__register_types__sys_status_type__rfpll_ll bits_1) (rec__dw1000__register_types__sys_status_type__clkpll_ll bits_1) (rec__dw1000__register_types__sys_status_type__rxsfdto bits_1) (rec__dw1000__register_types__sys_status_type__hpdwarn bits_1) (rec__dw1000__register_types__sys_status_type__txberr bits_1) (rec__dw1000__register_types__sys_status_type__affrej bits_1) (rec__dw1000__register_types__sys_status_type__hsrbp bits_1) (rec__dw1000__register_types__sys_status_type__icrbp bits_1) (rec__dw1000__register_types__sys_status_type__rxrscs bits_1) (rec__dw1000__register_types__sys_status_type__rxprej bits_1) (rec__dw1000__register_types__sys_status_type__txpute bits_1) (rec__dw1000__register_types__sys_status_type__reserved_1 bits_1) (rec__dw1000__register_types__sys_status_type__reserved_2 bits_5)))))
(define-fun us_split_fields_IRQS__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__irqs a))
(define-fun us_split_fields_CPLOCK__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__cplock a))
(define-fun us_split_fields_ESYNCR__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__esyncr a))
(define-fun us_split_fields_AAT__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__aat a))
(define-fun us_split_fields_TXFRB__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__txfrb a))
(define-fun us_split_fields_TXPRS__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__txprs a))
(define-fun us_split_fields_TXPHS__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__txphs a))
(define-fun us_split_fields_TXFRS__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__txfrs a))
(define-fun us_split_fields_RXPRD__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxprd a))
(define-fun us_split_fields_RXSFDD__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxsfdd a))
(define-fun us_split_fields_LDEDONE__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__ldedone a))
(define-fun us_split_fields_RXPHD__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxphd a))
(define-fun us_split_fields_RXPHE__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxphe a))
(define-fun us_split_fields_RXDFR__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxdfr a))
(define-fun us_split_fields_RXFCG__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxfcg a))
(define-fun us_split_fields_RXFCE__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxfce a))
(define-fun us_split_fields_RXRFSL__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxrfsl a))
(define-fun us_split_fields_RXRFTO__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxrfto a))
(define-fun us_split_fields_LDEERR__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__ldeerr a))
(define-fun us_split_fields_RXOVRR__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxovrr a))
(define-fun us_split_fields_RXPTO__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxpto a))
(define-fun us_split_fields_GPIOIRQ__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__gpioirq a))
(define-fun us_split_fields_SLP2INIT__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__slp2init a))
(define-fun us_split_fields_RFPLL_LL__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rfpll_ll a))
(define-fun us_split_fields_CLKPLL_LL__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__clkpll_ll a))
(define-fun us_split_fields_RXSFDTO__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxsfdto a))
(define-fun us_split_fields_HPDWARN__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__hpdwarn a))
(define-fun us_split_fields_TXBERR__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__txberr a))
(define-fun us_split_fields_AFFREJ__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__affrej a))
(define-fun us_split_fields_HSRBP__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__hsrbp a))
(define-fun us_split_fields_ICRBP__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__icrbp a))
(define-fun us_split_fields_RXRSCS__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxrscs a))
(define-fun us_split_fields_RXPREJ__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__rxprej a))
(define-fun us_split_fields_TXPUTE__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__txpute a))
(define-fun us_split_fields_Reserved_1__4__projection ((a us_split_fields)) bits_1 (rec__dw1000__register_types__sys_status_type__reserved_1 a))
(define-fun us_split_fields_Reserved_2__4__projection ((a us_split_fields)) bits_5 (rec__dw1000__register_types__sys_status_type__reserved_2 a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___12__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___12__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep2 (rec__dw1000__register_types__sys_status_type__irqs (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__irqs (us_split_fields1 b)))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__cplock (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__cplock (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__esyncr (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__esyncr (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__aat (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__aat (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__txfrb (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__txfrb (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__txprs (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__txprs (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__txphs (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__txphs (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__txfrs (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__txfrs (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxprd (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxprd (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxsfdd (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxsfdd (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__ldedone (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__ldedone (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxphd (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxphd (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxphe (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxphe (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxdfr (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxdfr (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxfcg (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxfcg (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxfce (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxfce (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxrfsl (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxrfsl (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxrfto (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxrfto (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__ldeerr (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__ldeerr (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxovrr (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxovrr (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxpto (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxpto (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__gpioirq (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__gpioirq (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__slp2init (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__slp2init (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rfpll_ll (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rfpll_ll (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__clkpll_ll (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__clkpll_ll (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxsfdto (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxsfdto (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__hpdwarn (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__hpdwarn (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__txberr (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__txberr (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__affrej (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__affrej (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__hsrbp (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__hsrbp (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__icrbp (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__icrbp (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxrscs (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxrscs (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__rxprej (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__rxprej (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__txpute (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__txpute (us_split_fields1 b))))) (= (to_rep2 (rec__dw1000__register_types__sys_status_type__reserved_1 (us_split_fields1 a))) (to_rep2 (rec__dw1000__register_types__sys_status_type__reserved_1 (us_split_fields1 b))))) (= (to_rep3 (rec__dw1000__register_types__sys_status_type__reserved_2 (us_split_fields1 a))) (to_rep3 (rec__dw1000__register_types__sys_status_type__reserved_2 (us_split_fields1 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const dw1000__register_types__sys_status_type__irqs__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__irqs__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__irqs__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__irqs__first__bit))
(assert (< dw1000__register_types__sys_status_type__irqs__first__bit dw1000__register_types__sys_status_type__irqs__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__irqs__position))
(declare-const dw1000__register_types__sys_status_type__cplock__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__cplock__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__cplock__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__cplock__first__bit))
(assert (< dw1000__register_types__sys_status_type__cplock__first__bit dw1000__register_types__sys_status_type__cplock__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__cplock__position))
(declare-const dw1000__register_types__sys_status_type__esyncr__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__esyncr__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__esyncr__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__esyncr__first__bit))
(assert (< dw1000__register_types__sys_status_type__esyncr__first__bit dw1000__register_types__sys_status_type__esyncr__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__esyncr__position))
(declare-const dw1000__register_types__sys_status_type__aat__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__aat__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__aat__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__aat__first__bit))
(assert (< dw1000__register_types__sys_status_type__aat__first__bit dw1000__register_types__sys_status_type__aat__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__aat__position))
(declare-const dw1000__register_types__sys_status_type__txfrb__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__txfrb__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__txfrb__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__txfrb__first__bit))
(assert (< dw1000__register_types__sys_status_type__txfrb__first__bit dw1000__register_types__sys_status_type__txfrb__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__txfrb__position))
(declare-const dw1000__register_types__sys_status_type__txprs__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__txprs__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__txprs__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__txprs__first__bit))
(assert (< dw1000__register_types__sys_status_type__txprs__first__bit dw1000__register_types__sys_status_type__txprs__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__txprs__position))
(declare-const dw1000__register_types__sys_status_type__txphs__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__txphs__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__txphs__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__txphs__first__bit))
(assert (< dw1000__register_types__sys_status_type__txphs__first__bit dw1000__register_types__sys_status_type__txphs__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__txphs__position))
(declare-const dw1000__register_types__sys_status_type__txfrs__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__txfrs__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__txfrs__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__txfrs__first__bit))
(assert (< dw1000__register_types__sys_status_type__txfrs__first__bit dw1000__register_types__sys_status_type__txfrs__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__txfrs__position))
(declare-const dw1000__register_types__sys_status_type__rxprd__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxprd__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxprd__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxprd__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxprd__first__bit dw1000__register_types__sys_status_type__rxprd__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxprd__position))
(declare-const dw1000__register_types__sys_status_type__rxsfdd__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxsfdd__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxsfdd__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxsfdd__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxsfdd__first__bit dw1000__register_types__sys_status_type__rxsfdd__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxsfdd__position))
(declare-const dw1000__register_types__sys_status_type__ldedone__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__ldedone__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__ldedone__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__ldedone__first__bit))
(assert (< dw1000__register_types__sys_status_type__ldedone__first__bit dw1000__register_types__sys_status_type__ldedone__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__ldedone__position))
(declare-const dw1000__register_types__sys_status_type__rxphd__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxphd__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxphd__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxphd__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxphd__first__bit dw1000__register_types__sys_status_type__rxphd__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxphd__position))
(declare-const dw1000__register_types__sys_status_type__rxphe__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxphe__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxphe__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxphe__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxphe__first__bit dw1000__register_types__sys_status_type__rxphe__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxphe__position))
(declare-const dw1000__register_types__sys_status_type__rxdfr__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxdfr__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxdfr__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxdfr__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxdfr__first__bit dw1000__register_types__sys_status_type__rxdfr__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxdfr__position))
(declare-const dw1000__register_types__sys_status_type__rxfcg__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxfcg__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxfcg__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxfcg__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxfcg__first__bit dw1000__register_types__sys_status_type__rxfcg__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxfcg__position))
(declare-const dw1000__register_types__sys_status_type__rxfce__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxfce__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxfce__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxfce__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxfce__first__bit dw1000__register_types__sys_status_type__rxfce__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxfce__position))
(declare-const dw1000__register_types__sys_status_type__rxrfsl__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxrfsl__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxrfsl__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxrfsl__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxrfsl__first__bit dw1000__register_types__sys_status_type__rxrfsl__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxrfsl__position))
(declare-const dw1000__register_types__sys_status_type__rxrfto__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxrfto__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxrfto__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxrfto__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxrfto__first__bit dw1000__register_types__sys_status_type__rxrfto__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxrfto__position))
(declare-const dw1000__register_types__sys_status_type__ldeerr__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__ldeerr__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__ldeerr__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__ldeerr__first__bit))
(assert (< dw1000__register_types__sys_status_type__ldeerr__first__bit dw1000__register_types__sys_status_type__ldeerr__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__ldeerr__position))
(declare-const dw1000__register_types__sys_status_type__rxovrr__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxovrr__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxovrr__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxovrr__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxovrr__first__bit dw1000__register_types__sys_status_type__rxovrr__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxovrr__position))
(declare-const dw1000__register_types__sys_status_type__rxpto__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxpto__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxpto__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxpto__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxpto__first__bit dw1000__register_types__sys_status_type__rxpto__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxpto__position))
(declare-const dw1000__register_types__sys_status_type__gpioirq__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__gpioirq__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__gpioirq__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__gpioirq__first__bit))
(assert (< dw1000__register_types__sys_status_type__gpioirq__first__bit dw1000__register_types__sys_status_type__gpioirq__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__gpioirq__position))
(declare-const dw1000__register_types__sys_status_type__slp2init__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__slp2init__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__slp2init__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__slp2init__first__bit))
(assert (< dw1000__register_types__sys_status_type__slp2init__first__bit dw1000__register_types__sys_status_type__slp2init__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__slp2init__position))
(declare-const dw1000__register_types__sys_status_type__rfpll_ll__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rfpll_ll__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rfpll_ll__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rfpll_ll__first__bit))
(assert (< dw1000__register_types__sys_status_type__rfpll_ll__first__bit dw1000__register_types__sys_status_type__rfpll_ll__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rfpll_ll__position))
(declare-const dw1000__register_types__sys_status_type__clkpll_ll__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__clkpll_ll__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__clkpll_ll__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__clkpll_ll__first__bit))
(assert (< dw1000__register_types__sys_status_type__clkpll_ll__first__bit dw1000__register_types__sys_status_type__clkpll_ll__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__clkpll_ll__position))
(declare-const dw1000__register_types__sys_status_type__rxsfdto__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxsfdto__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxsfdto__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxsfdto__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxsfdto__first__bit dw1000__register_types__sys_status_type__rxsfdto__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxsfdto__position))
(declare-const dw1000__register_types__sys_status_type__hpdwarn__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__hpdwarn__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__hpdwarn__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__hpdwarn__first__bit))
(assert (< dw1000__register_types__sys_status_type__hpdwarn__first__bit dw1000__register_types__sys_status_type__hpdwarn__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__hpdwarn__position))
(declare-const dw1000__register_types__sys_status_type__txberr__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__txberr__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__txberr__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__txberr__first__bit))
(assert (< dw1000__register_types__sys_status_type__txberr__first__bit dw1000__register_types__sys_status_type__txberr__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__txberr__position))
(declare-const dw1000__register_types__sys_status_type__affrej__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__affrej__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__affrej__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__affrej__first__bit))
(assert (< dw1000__register_types__sys_status_type__affrej__first__bit dw1000__register_types__sys_status_type__affrej__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__affrej__position))
(declare-const dw1000__register_types__sys_status_type__hsrbp__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__hsrbp__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__hsrbp__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__hsrbp__first__bit))
(assert (< dw1000__register_types__sys_status_type__hsrbp__first__bit dw1000__register_types__sys_status_type__hsrbp__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__hsrbp__position))
(declare-const dw1000__register_types__sys_status_type__icrbp__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__icrbp__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__icrbp__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__icrbp__first__bit))
(assert (< dw1000__register_types__sys_status_type__icrbp__first__bit dw1000__register_types__sys_status_type__icrbp__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__icrbp__position))
(declare-const dw1000__register_types__sys_status_type__rxrscs__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxrscs__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxrscs__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxrscs__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxrscs__first__bit dw1000__register_types__sys_status_type__rxrscs__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxrscs__position))
(declare-const dw1000__register_types__sys_status_type__rxprej__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxprej__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__rxprej__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__rxprej__first__bit))
(assert (< dw1000__register_types__sys_status_type__rxprej__first__bit dw1000__register_types__sys_status_type__rxprej__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__rxprej__position))
(declare-const dw1000__register_types__sys_status_type__txpute__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__txpute__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__txpute__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__txpute__first__bit))
(assert (< dw1000__register_types__sys_status_type__txpute__first__bit dw1000__register_types__sys_status_type__txpute__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__txpute__position))
(declare-const dw1000__register_types__sys_status_type__reserved_1__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__reserved_1__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__reserved_1__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__reserved_1__first__bit))
(assert (< dw1000__register_types__sys_status_type__reserved_1__first__bit dw1000__register_types__sys_status_type__reserved_1__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__reserved_1__position))
(declare-const dw1000__register_types__sys_status_type__reserved_2__first__bit Int)
(declare-const dw1000__register_types__sys_status_type__reserved_2__last__bit Int)
(declare-const dw1000__register_types__sys_status_type__reserved_2__position Int)
(assert (<= 0 dw1000__register_types__sys_status_type__reserved_2__first__bit))
(assert (< dw1000__register_types__sys_status_type__reserved_2__first__bit dw1000__register_types__sys_status_type__reserved_2__last__bit))
(assert (<= 0 dw1000__register_types__sys_status_type__reserved_2__position))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((sys_status_type__ref (mk_sys_status_type__ref (sys_status_type__content us_rep)))))
(define-fun sys_status_type__ref___projection ((a sys_status_type__ref)) us_rep (sys_status_type__content a))
(declare-datatypes () ((register_type__ref (mk_register_type__ref (register_type__content us_rep)))))
(define-fun register_type__ref___30__projection ((a register_type__ref)) us_rep (register_type__content a))
(declare-const reg us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq7 (integer integer) Bool)
(declare-const dummy7 integer)
(declare-datatypes () ((tregister_byte_arrayP1__ref (mk_tregister_byte_arrayP1__ref (tregister_byte_arrayP1__content integer)))))
(define-fun tregister_byte_arrayP1__ref___21__projection ((a tregister_byte_arrayP1__ref)) integer (tregister_byte_arrayP1__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int bits_8)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int bits_8) (elts1 a))
(define-fun of_array1 ((a (Array Int bits_8)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int bits_8)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int bits_8)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int bits_8)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int bits_8))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int bits_8))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int bits_8))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep (first2 (rt1 x))) (to_rep (last2 (rt1 x))) (elts1 y) (to_rep (first2 (rt1 y))) (to_rep (last2 (rt1 y)))))
(declare-fun user_eq8 (us_t1 us_t1) Bool)
(declare-const dummy8 us_t1)
(declare-datatypes () ((register_byte_array__ref (mk_register_byte_array__ref (register_byte_array__content us_t1)))))
(define-fun register_byte_array__ref___21__projection ((a register_byte_array__ref)) us_t1 (register_byte_array__content a))
(define-fun dynamic_invariant ((temp___expr_3074 us_t1) (temp___is_init_3070 Bool) (temp___skip_constant_3071 Bool) (temp___do_toplevel_3072 Bool) (temp___do_typ_inv_3073 Bool)) Bool (=> (not (= temp___skip_constant_3071 true)) (and (dynamic_property2 1 5 (first3 temp___expr_3074) (last3 temp___expr_3074)) (and (= (first3 temp___expr_3074) 1) (= (last3 temp___expr_3074) 5)))))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep (first4 (mk2 f l))) f) (= (to_rep (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int bits_8)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int bits_8) (elts2 a))
(define-fun of_array2 ((a (Array Int bits_8)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int bits_8)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int bits_8)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int bits_8)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int bits_8))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int bits_8))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int bits_8))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq4 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep (first4 (rt2 x))) (to_rep (last4 (rt2 x))) (elts2 y) (to_rep (first4 (rt2 y))) (to_rep (last4 (rt2 y)))))
(declare-fun user_eq9 (us_t2 us_t2) Bool)
(declare-const dummy9 us_t2)
(declare-datatypes () ((target__ref (mk_target__ref (target__content us_t2)))))
(define-fun target__ref___10__projection ((a target__ref)) us_t2 (target__content a))
(declare-datatypes () ((source__ref (mk_source__ref (source__content us_rep)))))
(define-fun source__ref___10__projection ((a source__ref)) us_rep (source__content a))
(define-fun dynamic_invariant1 ((temp___expr_3127 us_t2) (temp___is_init_3123 Bool) (temp___skip_constant_3124 Bool) (temp___do_toplevel_3125 Bool) (temp___do_typ_inv_3126 Bool)) Bool (=> (not (= temp___skip_constant_3124 true)) (and (dynamic_property3 1 5 (first5 temp___expr_3127) (last5 temp___expr_3127)) (and (= (first5 temp___expr_3127) 1) (= (last5 temp___expr_3127) 5)))))
(declare-fun register_to_bytes (us_rep) us_t2)
(declare-fun register_to_bytes__function_guard (us_t2 us_rep) Bool)
(assert (forall ((s us_rep)) (! (dynamic_invariant1 (register_to_bytes s) true false true true) :pattern ((register_to_bytes s)))))
(declare-const reg_bytes__first integer)
(declare-const reg_bytes__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range1 temp___expr_39)))
(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(define-fun dynamic_invariant4 ((temp___expr_286 (_ BitVec 8)) (temp___is_init_282 Bool) (temp___skip_constant_283 Bool) (temp___do_toplevel_284 Bool) (temp___do_typ_inv_285 Bool)) Bool true)
(define-fun dynamic_invariant5 ((temp___expr_685 us_t) (temp___is_init_681 Bool) (temp___skip_constant_682 Bool) (temp___do_toplevel_683 Bool) (temp___do_typ_inv_684 Bool)) Bool (=> (not (= temp___skip_constant_682 true)) (dynamic_property 0 2147483647 (first1 temp___expr_685) (last1 temp___expr_685))))
(declare-const reg_bytes (Array Int bits_8))
(declare-const temp___8529 (Array Int bits_8))
(declare-const temp___85291 t2)
(declare-const temp___8530 (Array Int bits_8))
(declare-const temp___85301 t1)
(declare-const o (Array Int bits_8))
(declare-const o1 t1)
(declare-const o2 (Array Int bits_8))
(declare-const result (Array Int bits_8))
(declare-const reg_bytes1 (Array Int bits_8))
(define-fun temp___85292 () us_t2 (mk___t2 temp___8529 temp___85291))
(assert (and (dynamic_property2 1 5 (to_rep reg_bytes__first) (to_rep reg_bytes__last)) (and (= (to_rep reg_bytes__first) 1) (= (to_rep reg_bytes__last) 5))))
(assert (and (= temp___85292 (register_to_bytes reg)) (dynamic_invariant1 temp___85292 true false true true)))
(assert (= (ite (<= (to_rep (first4 temp___85291)) (to_rep (last4 temp___85291))) (+ (- (to_rep (last4 temp___85291)) (to_rep (first4 temp___85291))) 1) 0) (ite (<= 1 5) (+ (- 5 1) 1) 0)))
(assert (= temp___8529 temp___8530))
(assert (= (mk1 (to_rep (first4 temp___85291)) (to_rep (last4 temp___85291))) temp___85301))
(assert (= (ite (<= (to_rep (first2 temp___85301)) (to_rep (last2 temp___85301))) (+ (- (to_rep (last2 temp___85301)) (to_rep (first2 temp___85301))) 1) 0) (ite (<= (to_rep reg_bytes__first) (to_rep reg_bytes__last)) (+ (- (to_rep reg_bytes__last) (to_rep reg_bytes__first)) 1) 0)))
(assert (= (mk___t1 o o1) (mk___t1 temp___8530 temp___85301)))
(assert (= o2 o))
(assert (= result reg_bytes))
(assert (= reg_bytes1 o2))
(assert (not (< 0 (length (mk___t reg_bytes1 (mk (to_rep reg_bytes__first) (to_rep reg_bytes__last)))))))
(check-sat)
(exit)
