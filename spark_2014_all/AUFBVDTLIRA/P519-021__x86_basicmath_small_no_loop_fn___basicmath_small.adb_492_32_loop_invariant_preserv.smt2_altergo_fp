(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type t

logic tqtint : t -> int

axiom tqtaxiom : (forall i:t. ((0 <= tqtint(i)) and (tqtint(i) <= 255)))

logic nth : t, int -> bool

axiom nth_out_of_bound :
  (forall x:t. forall n:int. (((n <  0) or (8 <= n)) -> (nth(x, n) = false)))

logic zeros : t

axiom Nth_zeros : (forall n:int. (nth(zeros, n) = false))

logic one : t

logic ones : t

axiom Nth_ones :
  (forall n:int. (((0 <= n) and (n <  8)) -> (nth(ones, n) = true)))

logic bw_and : t, t -> t

axiom Nth_bw_and :
  (forall v1:t. forall v2:t. forall n:int. (((0 <= n) and (n <  8)) ->
  (nth(bw_and(v1, v2), n) = match_bool(nth(v1, n), nth(v2, n), false))))

logic bw_or : t, t -> t

axiom Nth_bw_or :
  (forall v1:t. forall v2:t. forall n:int. (((0 <= n) and (n <  8)) ->
  (nth(bw_or(v1, v2), n) = match_bool(nth(v1, n), true, nth(v2, n)))))

logic bw_xor : t, t -> t

axiom Nth_bw_xor :
  (forall v1:t. forall v2:t. forall n:int. (((0 <= n) and (n <  8)) ->
  (nth(bw_xor(v1, v2), n) = xorb(nth(v1, n), nth(v2, n)))))

logic bw_not : t -> t

axiom Nth_bw_not :
  (forall v:t. forall n:int. (((0 <= n) and (n <  8)) -> (nth(bw_not(v),
  n) = match_bool(nth(v, n), false, true))))

logic lsr : t, int -> t

axiom Lsr_nth_low :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  (((n + s) <  8) -> (nth(lsr(b, s), n) = nth(b, (n + s)))))))

axiom Lsr_nth_high :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  ((8 <= (n + s)) -> (nth(lsr(b, s), n) = false)))))

axiom lsr_zeros : (forall x:t. (lsr(x, 0) = x))

logic asr : t, int -> t

axiom Asr_nth_low :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  8)) -> (((n + s) <  8) -> (nth(asr(b, s), n) = nth(b, (n + s)))))))

axiom Asr_nth_high :
  (forall b:t. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  8)) -> ((8 <= (n + s)) -> (nth(asr(b, s), n) = nth(b, (8 - 1)))))))

axiom asr_zeros : (forall x:t. (asr(x, 0) = x))

logic lsl : t, int -> t

axiom Lsl_nth_high :
  (forall b:t. forall n:int. forall s:int. (((0 <= s) and ((s <= n) and
  (n <  8))) -> (nth(lsl(b, s), n) = nth(b, (n - s)))))

axiom Lsl_nth_low :
  (forall b:t. forall n:int. forall s:int. (((0 <= n) and (n <  s)) ->
  (nth(lsl(b, s), n) = false)))

axiom lsl_zeros : (forall x:t. (lsl(x, 0) = x))

axiom Div_mod :
  (forall x:int. forall y:int. ((not (y = 0)) ->
  (x = ((y * (x / y)) + (x % y)))))

axiom Mod_bound :
  (forall x:int. forall y:int. ((not (y = 0)) -> ((0 <= (x % y)) and
  ((x % y) <  abs_int(y)))))

axiom Div_unique :
  (forall x:int. forall y:int. forall q:int. ((0 <  y) ->
  ((((q * y) <= x) and (x <  ((q * y) + y))) -> ((x / y) = q))))

axiom Div_bound :
  (forall x:int. forall y:int. (((0 <= x) and (0 <  y)) ->
  ((0 <= (x / y)) and ((x / y) <= x))))

axiom Mod_1 : (forall x:int. ((x % 1) = 0))

axiom Div_1 : (forall x:int. ((x / 1) = x))

axiom Div_inf :
  (forall x:int. forall y:int. (((0 <= x) and (x <  y)) -> ((x / y) = 0)))

axiom Div_inf_neg :
  (forall x:int. forall y:int. (((0 <  x) and (x <= y)) ->
  (((-x) / y) = (-1))))

axiom Mod_0 : (forall y:int. ((not (y = 0)) -> ((0 % y) = 0)))

axiom Div_1_left : (forall y:int. ((1 <  y) -> ((1 / y) = 0)))

axiom Div_minus1_left : (forall y:int. ((1 <  y) -> (((-1) / y) = (-1))))

axiom Mod_1_left : (forall y:int. ((1 <  y) -> ((1 % y) = 1)))

axiom Mod_minus1_left :
  (forall y:int [((-1) % y)]. ((1 <  y) -> (((-1) % y) = (y - 1))))

axiom Div_mult :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) / x)].
  ((0 <  x) -> ((((x * y) + z) / x) = (y + (z / x)))))

axiom Mod_mult :
  (forall x:int. forall y:int. forall z:int [(((x * y) + z) % x)].
  ((0 <  x) -> ((((x * y) + z) % x) = (z % x))))

logic rotate_right : t, int -> t

axiom Nth_rotate_right :
  (forall v:t. forall n:int. forall i:int. (((0 <= i) and (i <  8)) ->
  ((0 <= n) -> (nth(rotate_right(v, n), i) = nth(v, ((i + n) % 8))))))

logic rotate_left : t, int -> t

axiom Nth_rotate_left :
  (forall v:t. forall n:int. forall i:int. (((0 <= i) and (i <  8)) ->
  ((0 <= n) -> (nth(rotate_left(v, n), i) = nth(v, ((i - n) % 8))))))

logic pow2 : int -> int

axiom Power_0 : (pow2(0) = 1)

axiom Power_s : (forall n:int. ((0 <= n) -> (pow2((n + 1)) = (2 * pow2(n)))))

axiom Power_1 : (pow2(1) = 2)

axiom Power_sum :
  (forall n:int. forall m:int. (((0 <= n) and (0 <= m)) ->
  (pow2((n + m)) = (pow2(n) * pow2(m)))))

axiom pow2pos : (forall i:int. ((0 <= i) -> (0 <  pow2(i))))

axiom pow2_0 : (pow2(0) = 1)

axiom pow2_1 : (pow2(1) = 2)

axiom pow2_2 : (pow2(2) = 4)

axiom pow2_3 : (pow2(3) = 8)

axiom pow2_4 : (pow2(4) = 16)

axiom pow2_5 : (pow2(5) = 32)

axiom pow2_6 : (pow2(6) = 64)

axiom pow2_7 : (pow2(7) = 128)

axiom pow2_8 : (pow2(8) = 256)

axiom pow2_9 : (pow2(9) = 512)

axiom pow2_10 : (pow2(10) = 1024)

axiom pow2_11 : (pow2(11) = 2048)

axiom pow2_12 : (pow2(12) = 4096)

axiom pow2_13 : (pow2(13) = 8192)

axiom pow2_14 : (pow2(14) = 16384)

axiom pow2_15 : (pow2(15) = 32768)

axiom pow2_16 : (pow2(16) = 65536)

axiom pow2_17 : (pow2(17) = 131072)

axiom pow2_18 : (pow2(18) = 262144)

axiom pow2_19 : (pow2(19) = 524288)

axiom pow2_20 : (pow2(20) = 1048576)

axiom pow2_21 : (pow2(21) = 2097152)

axiom pow2_22 : (pow2(22) = 4194304)

axiom pow2_23 : (pow2(23) = 8388608)

axiom pow2_24 : (pow2(24) = 16777216)

axiom pow2_25 : (pow2(25) = 33554432)

axiom pow2_26 : (pow2(26) = 67108864)

axiom pow2_27 : (pow2(27) = 134217728)

axiom pow2_28 : (pow2(28) = 268435456)

axiom pow2_29 : (pow2(29) = 536870912)

axiom pow2_30 : (pow2(30) = 1073741824)

axiom pow2_31 : (pow2(31) = 2147483648)

axiom pow2_32 : (pow2(32) = 4294967296)

axiom pow2_33 : (pow2(33) = 8589934592)

axiom pow2_34 : (pow2(34) = 17179869184)

axiom pow2_35 : (pow2(35) = 34359738368)

axiom pow2_36 : (pow2(36) = 68719476736)

axiom pow2_37 : (pow2(37) = 137438953472)

axiom pow2_38 : (pow2(38) = 274877906944)

axiom pow2_39 : (pow2(39) = 549755813888)

axiom pow2_40 : (pow2(40) = 1099511627776)

axiom pow2_41 : (pow2(41) = 2199023255552)

axiom pow2_42 : (pow2(42) = 4398046511104)

axiom pow2_43 : (pow2(43) = 8796093022208)

axiom pow2_44 : (pow2(44) = 17592186044416)

axiom pow2_45 : (pow2(45) = 35184372088832)

axiom pow2_46 : (pow2(46) = 70368744177664)

axiom pow2_47 : (pow2(47) = 140737488355328)

axiom pow2_48 : (pow2(48) = 281474976710656)

axiom pow2_49 : (pow2(49) = 562949953421312)

axiom pow2_50 : (pow2(50) = 1125899906842624)

axiom pow2_51 : (pow2(51) = 2251799813685248)

axiom pow2_52 : (pow2(52) = 4503599627370496)

axiom pow2_53 : (pow2(53) = 9007199254740992)

axiom pow2_54 : (pow2(54) = 18014398509481984)

axiom pow2_55 : (pow2(55) = 36028797018963968)

axiom pow2_56 : (pow2(56) = 72057594037927936)

axiom pow2_57 : (pow2(57) = 144115188075855872)

axiom pow2_58 : (pow2(58) = 288230376151711744)

axiom pow2_59 : (pow2(59) = 576460752303423488)

axiom pow2_60 : (pow2(60) = 1152921504606846976)

axiom pow2_61 : (pow2(61) = 2305843009213693952)

axiom pow2_62 : (pow2(62) = 4611686018427387904)

axiom pow2_63 : (pow2(63) = 9223372036854775808)

axiom pow2_64 : (pow2(64) = 18446744073709551616)

logic is_signed_positive : t -> prop

logic of_int : int -> t

logic to_int : t -> int

axiom to_int_def :
  (forall x:t [to_int(x)]. ((is_signed_positive(x) ->
  (to_int(x) = tqtint(x))) and ((not is_signed_positive(x)) ->
  (to_int(x) = (-(256 - tqtint(x)))))))

axiom to_uint_extensionality :
  (forall v:t. forall vqt:t. ((tqtint(v) = tqtint(vqt)) -> (v = vqt)))

axiom to_int_extensionality :
  (forall v:t. forall vqt:t. ((to_int(v) = to_int(vqt)) -> (v = vqt)))

predicate uint_in_range(i: int) = ((0 <= i) and (i <= 255))

axiom to_uint_bounds :
  (forall v:t. ((0 <= tqtint(v)) and (tqtint(v) <  256)))

axiom to_uint_of_int :
  (forall i:int. (((0 <= i) and (i <  256)) -> (tqtint(of_int(i)) = i)))

logic size_bv : t

axiom to_uint_size_bv : (tqtint(size_bv) = 8)

axiom to_uint_zeros : (tqtint(zeros) = 0)

axiom to_uint_one : (tqtint(one) = 1)

axiom to_uint_ones : (tqtint(ones) = 255)

predicate ult(x: t, y: t) = (tqtint(x) <  tqtint(y))

predicate ule(x: t, y: t) = (tqtint(x) <= tqtint(y))

predicate ugt(x: t, y: t) = (tqtint(y) <  tqtint(x))

predicate uge(x: t, y: t) = (tqtint(y) <= tqtint(x))

predicate slt(v1: t, v2: t) = (to_int(v1) <  to_int(v2))

predicate sle(v1: t, v2: t) = (to_int(v1) <= to_int(v2))

predicate sgt(v1: t, v2: t) = (to_int(v2) <  to_int(v1))

predicate sge(v1: t, v2: t) = (to_int(v2) <= to_int(v1))

axiom positive_is_ge_zeros :
  (forall x:t. (is_signed_positive(x) <-> sge(x, zeros)))

logic add : t, t -> t

axiom to_uint_add_bounded :
  (forall v1:t. forall v2:t. (((tqtint(v1) + tqtint(v2)) <  256) ->
  (tqtint(add(v1, v2)) = (tqtint(v1) + tqtint(v2)))))

logic sub : t, t -> t

axiom to_uint_sub_bounded :
  (forall v1:t. forall v2:t. (((0 <= (tqtint(v1) - tqtint(v2))) and
  ((tqtint(v1) - tqtint(v2)) <  256)) -> (tqtint(sub(v1,
  v2)) = (tqtint(v1) - tqtint(v2)))))

logic neg : t -> t

axiom to_uint_neg : (forall v:t. (tqtint(neg(v)) = ((-tqtint(v)) % 256)))

logic mul : t, t -> t

axiom to_uint_mul_bounded :
  (forall v1:t. forall v2:t. (((tqtint(v1) * tqtint(v2)) <  256) ->
  (tqtint(mul(v1, v2)) = (tqtint(v1) * tqtint(v2)))))

logic udiv : t, t -> t

axiom to_uint_udiv :
  (forall v1:t. forall v2:t. (tqtint(udiv(v1,
  v2)) = (tqtint(v1) / tqtint(v2))))

logic urem : t, t -> t

axiom to_uint_urem :
  (forall v1:t. forall v2:t. (tqtint(urem(v1,
  v2)) = (tqtint(v1) % tqtint(v2))))

logic lsr_bv : t, t -> t

axiom lsr_bv_is_lsr :
  (forall x:t. forall n:t. (lsr_bv(x, n) = lsr(x, tqtint(n))))

axiom to_uint_lsr :
  (forall v:t. forall n:t. (tqtint(lsr_bv(v,
  n)) = (tqtint(v) / pow2(tqtint(n)))))

logic asr_bv : t, t -> t

axiom asr_bv_is_asr :
  (forall x:t. forall n:t. (asr_bv(x, n) = asr(x, tqtint(n))))

logic lsl_bv : t, t -> t

axiom lsl_bv_is_lsl :
  (forall x:t. forall n:t. (lsl_bv(x, n) = lsl(x, tqtint(n))))

axiom to_uint_lsl :
  (forall v:t. forall n:t. (tqtint(lsl_bv(v,
  n)) = ((tqtint(v) * pow2(tqtint(n))) % 256)))

logic rotate_right_bv : t, t -> t

logic rotate_left_bv : t, t -> t

axiom rotate_left_bv_is_rotate_left :
  (forall v:t. forall n:t. (rotate_left_bv(v, n) = rotate_left(v,
  tqtint(n))))

axiom rotate_right_bv_is_rotate_right :
  (forall v:t. forall n:t. (rotate_right_bv(v, n) = rotate_right(v,
  tqtint(n))))

logic nth_bv : t, t -> bool

axiom Nth_bv_is_nth :
  (forall x:t. forall i:t. (nth(x, tqtint(i)) = nth_bv(x, i)))

axiom Nth_bv_is_nth2 :
  (forall x:t. forall i:int. (((0 <= i) and (i <  256)) -> (nth_bv(x,
  of_int(i)) = nth(x, i))))

logic eq_sub_bv : t, t, t, t -> prop

predicate eq_sub(a: t, b: t, i: int, n: int) =
  (forall j:int. (((i <= j) and (j <  (i + n))) -> (nth(a, j) = nth(b, j))))

axiom eq_sub_equiv :
  (forall a:t. forall b:t. forall i:t. forall n:t. (eq_sub(a, b, tqtint(i),
  tqtint(n)) <-> eq_sub_bv(a, b, i, n)))

axiom Extensionality :
  (forall x:t. forall y:t [eq_sub(x, y, 0, 8)]. (eq_sub(x, y, 0, 8) ->
  (x = y)))

type t__ref = { t__content : t
}

logic bool_eq : t, t -> bool

axiom bool_eq_def :
  (forall x:t. forall y:t [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic bool_ne : t, t -> bool

axiom bool_ne_def :
  (forall x:t. forall y:t [bool_ne(x, y)]. (((not (x = y)) -> (bool_ne(x,
  y) = true)) and ((x = y) -> (bool_ne(x, y) = false))))

logic bool_lt : t, t -> bool

axiom bool_lt_def :
  (forall x:t. forall y:t [bool_lt(x, y)]. ((ult(x, y) -> (bool_lt(x,
  y) = true)) and ((not ult(x, y)) -> (bool_lt(x, y) = false))))

logic bool_le : t, t -> bool

axiom bool_le_def :
  (forall x:t. forall y:t [bool_le(x, y)]. ((ule(x, y) -> (bool_le(x,
  y) = true)) and ((not ule(x, y)) -> (bool_le(x, y) = false))))

logic bool_gt : t, t -> bool

axiom bool_gt_def :
  (forall x:t. forall y:t [bool_gt(x, y)]. ((ugt(x, y) -> (bool_gt(x,
  y) = true)) and ((not ugt(x, y)) -> (bool_gt(x, y) = false))))

logic bool_ge : t, t -> bool

axiom bool_ge_def :
  (forall x:t. forall y:t [bool_ge(x, y)]. ((uge(x, y) -> (bool_ge(x,
  y) = true)) and ((not uge(x, y)) -> (bool_ge(x, y) = false))))

logic power : t, int -> t

axiom Power_01 : (forall x:t. (power(x, 0) = one))

axiom Power_11 : (forall x:t. (power(x, 1) = x))

axiom Power_s1 :
  (forall x:t. forall n:int. ((0 <= n) -> (power(x, (n + 1)) = mul(x,
  power(x, n)))))

axiom Power_s_alt :
  (forall x:t. forall n:int. ((0 <  n) -> (power(x, n) = mul(x, power(x,
  (n - 1))))))

axiom Power_sum1 :
  (forall x:t. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power(x, (n + m)) = mul(power(x, n), power(x, m))))))

axiom Power_mult :
  (forall x:t. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power(x, (n * m)) = power(power(x, n), m)))))

axiom Power_mult2 :
  (forall x:t. forall y:t. forall n:int. ((0 <= n) -> (power(mul(x, y),
  n) = mul(power(x, n), power(y, n)))))

logic bv_min : t, t -> t

axiom bv_min_def :
  (forall x:t. forall y:t [bv_min(x, y)]. ((ule(x, y) -> (bv_min(x,
  y) = x)) and ((not ule(x, y)) -> (bv_min(x, y) = y))))

logic bv_max : t, t -> t

axiom bv_max_def :
  (forall x:t. forall y:t [bv_max(x, y)]. ((ule(x, y) -> (bv_max(x,
  y) = y)) and ((not ule(x, y)) -> (bv_max(x, y) = x))))

logic min : int, int -> int

axiom min_def :
  (forall x:int. forall y:int [min(x, y)]. (((x <= y) -> (min(x, y) = x)) and
  ((not (x <= y)) -> (min(x, y) = y))))

logic max : int, int -> int

axiom max_def :
  (forall x:int. forall y:int [max(x, y)]. (((x <= y) -> (max(x, y) = y)) and
  ((not (x <= y)) -> (max(x, y) = x))))

axiom Min_r : (forall x:int. forall y:int. ((y <= x) -> (min(x, y) = y)))

axiom Max_l : (forall x:int. forall y:int. ((y <= x) -> (max(x, y) = x)))

axiom Min_comm : (forall x:int. forall y:int. (min(x, y) = min(y, x)))

axiom Max_comm : (forall x:int. forall y:int. (max(x, y) = max(y, x)))

axiom Min_assoc :
  (forall x:int. forall y:int. forall z:int. (min(min(x, y), z) = min(x,
  min(y, z))))

axiom Max_assoc :
  (forall x:int. forall y:int. forall z:int. (max(max(x, y), z) = max(x,
  max(y, z))))

axiom bv_min_to_uint :
  (forall x:t. forall y:t. (tqtint(bv_min(x, y)) = min(tqtint(x),
  tqtint(y))))

axiom bv_max_to_uint :
  (forall x:t. forall y:t. (tqtint(bv_max(x, y)) = max(tqtint(x),
  tqtint(y))))

type t1

logic tqtint1 : t1 -> int

axiom tqtaxiom1 :
  (forall i:t1. ((0 <= tqtint1(i)) and (tqtint1(i) <= 65535)))

logic nth1 : t1, int -> bool

axiom nth_out_of_bound1 :
  (forall x:t1. forall n:int. (((n <  0) or (16 <= n)) -> (nth1(x,
  n) = false)))

logic zeros1 : t1

axiom Nth_zeros1 : (forall n:int. (nth1(zeros1, n) = false))

logic one1 : t1

logic ones1 : t1

axiom Nth_ones1 :
  (forall n:int. (((0 <= n) and (n <  16)) -> (nth1(ones1, n) = true)))

logic bw_and1 : t1, t1 -> t1

axiom Nth_bw_and1 :
  (forall v1:t1. forall v2:t1. forall n:int. (((0 <= n) and (n <  16)) ->
  (nth1(bw_and1(v1, v2), n) = match_bool(nth1(v1, n), nth1(v2, n), false))))

logic bw_or1 : t1, t1 -> t1

axiom Nth_bw_or1 :
  (forall v1:t1. forall v2:t1. forall n:int. (((0 <= n) and (n <  16)) ->
  (nth1(bw_or1(v1, v2), n) = match_bool(nth1(v1, n), true, nth1(v2, n)))))

logic bw_xor1 : t1, t1 -> t1

axiom Nth_bw_xor1 :
  (forall v1:t1. forall v2:t1. forall n:int. (((0 <= n) and (n <  16)) ->
  (nth1(bw_xor1(v1, v2), n) = xorb(nth1(v1, n), nth1(v2, n)))))

logic bw_not1 : t1 -> t1

axiom Nth_bw_not1 :
  (forall v:t1. forall n:int. (((0 <= n) and (n <  16)) -> (nth1(bw_not1(v),
  n) = match_bool(nth1(v, n), false, true))))

logic lsr1 : t1, int -> t1

axiom Lsr_nth_low1 :
  (forall b:t1. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  (((n + s) <  16) -> (nth1(lsr1(b, s), n) = nth1(b, (n + s)))))))

axiom Lsr_nth_high1 :
  (forall b:t1. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  ((16 <= (n + s)) -> (nth1(lsr1(b, s), n) = false)))))

axiom lsr_zeros1 : (forall x:t1. (lsr1(x, 0) = x))

logic asr1 : t1, int -> t1

axiom Asr_nth_low1 :
  (forall b:t1. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  16)) -> (((n + s) <  16) -> (nth1(asr1(b, s), n) = nth1(b,
  (n + s)))))))

axiom Asr_nth_high1 :
  (forall b:t1. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  16)) -> ((16 <= (n + s)) -> (nth1(asr1(b, s), n) = nth1(b,
  (16 - 1)))))))

axiom asr_zeros1 : (forall x:t1. (asr1(x, 0) = x))

logic lsl1 : t1, int -> t1

axiom Lsl_nth_high1 :
  (forall b:t1. forall n:int. forall s:int. (((0 <= s) and ((s <= n) and
  (n <  16))) -> (nth1(lsl1(b, s), n) = nth1(b, (n - s)))))

axiom Lsl_nth_low1 :
  (forall b:t1. forall n:int. forall s:int. (((0 <= n) and (n <  s)) ->
  (nth1(lsl1(b, s), n) = false)))

axiom lsl_zeros1 : (forall x:t1. (lsl1(x, 0) = x))

logic rotate_right1 : t1, int -> t1

axiom Nth_rotate_right1 :
  (forall v:t1. forall n:int. forall i:int. (((0 <= i) and (i <  16)) ->
  ((0 <= n) -> (nth1(rotate_right1(v, n), i) = nth1(v, ((i + n) % 16))))))

logic rotate_left1 : t1, int -> t1

axiom Nth_rotate_left1 :
  (forall v:t1. forall n:int. forall i:int. (((0 <= i) and (i <  16)) ->
  ((0 <= n) -> (nth1(rotate_left1(v, n), i) = nth1(v, ((i - n) % 16))))))

logic is_signed_positive1 : t1 -> prop

logic of_int1 : int -> t1

logic to_int1 : t1 -> int

axiom to_int_def1 :
  (forall x:t1 [to_int1(x)]. ((is_signed_positive1(x) ->
  (to_int1(x) = tqtint1(x))) and ((not is_signed_positive1(x)) ->
  (to_int1(x) = (-(65536 - tqtint1(x)))))))

axiom to_uint_extensionality1 :
  (forall v:t1. forall vqt:t1. ((tqtint1(v) = tqtint1(vqt)) -> (v = vqt)))

axiom to_int_extensionality1 :
  (forall v:t1. forall vqt:t1. ((to_int1(v) = to_int1(vqt)) -> (v = vqt)))

predicate uint_in_range1(i: int) = ((0 <= i) and (i <= 65535))

axiom to_uint_bounds1 :
  (forall v:t1. ((0 <= tqtint1(v)) and (tqtint1(v) <  65536)))

axiom to_uint_of_int1 :
  (forall i:int. (((0 <= i) and (i <  65536)) -> (tqtint1(of_int1(i)) = i)))

logic size_bv1 : t1

axiom to_uint_size_bv1 : (tqtint1(size_bv1) = 16)

axiom to_uint_zeros1 : (tqtint1(zeros1) = 0)

axiom to_uint_one1 : (tqtint1(one1) = 1)

axiom to_uint_ones1 : (tqtint1(ones1) = 65535)

predicate ult1(x: t1, y: t1) = (tqtint1(x) <  tqtint1(y))

predicate ule1(x: t1, y: t1) = (tqtint1(x) <= tqtint1(y))

predicate ugt1(x: t1, y: t1) = (tqtint1(y) <  tqtint1(x))

predicate uge1(x: t1, y: t1) = (tqtint1(y) <= tqtint1(x))

predicate slt1(v1: t1, v2: t1) = (to_int1(v1) <  to_int1(v2))

predicate sle1(v1: t1, v2: t1) = (to_int1(v1) <= to_int1(v2))

predicate sgt1(v1: t1, v2: t1) = (to_int1(v2) <  to_int1(v1))

predicate sge1(v1: t1, v2: t1) = (to_int1(v2) <= to_int1(v1))

axiom positive_is_ge_zeros1 :
  (forall x:t1. (is_signed_positive1(x) <-> sge1(x, zeros1)))

logic add1 : t1, t1 -> t1

axiom to_uint_add_bounded1 :
  (forall v1:t1. forall v2:t1. (((tqtint1(v1) + tqtint1(v2)) <  65536) ->
  (tqtint1(add1(v1, v2)) = (tqtint1(v1) + tqtint1(v2)))))

logic sub1 : t1, t1 -> t1

axiom to_uint_sub_bounded1 :
  (forall v1:t1. forall v2:t1. (((0 <= (tqtint1(v1) - tqtint1(v2))) and
  ((tqtint1(v1) - tqtint1(v2)) <  65536)) -> (tqtint1(sub1(v1,
  v2)) = (tqtint1(v1) - tqtint1(v2)))))

logic neg1 : t1 -> t1

axiom to_uint_neg1 :
  (forall v:t1. (tqtint1(neg1(v)) = ((-tqtint1(v)) % 65536)))

logic mul1 : t1, t1 -> t1

axiom to_uint_mul_bounded1 :
  (forall v1:t1. forall v2:t1. (((tqtint1(v1) * tqtint1(v2)) <  65536) ->
  (tqtint1(mul1(v1, v2)) = (tqtint1(v1) * tqtint1(v2)))))

logic udiv1 : t1, t1 -> t1

axiom to_uint_udiv1 :
  (forall v1:t1. forall v2:t1. (tqtint1(udiv1(v1,
  v2)) = (tqtint1(v1) / tqtint1(v2))))

logic urem1 : t1, t1 -> t1

axiom to_uint_urem1 :
  (forall v1:t1. forall v2:t1. (tqtint1(urem1(v1,
  v2)) = (tqtint1(v1) % tqtint1(v2))))

logic lsr_bv1 : t1, t1 -> t1

axiom lsr_bv_is_lsr1 :
  (forall x:t1. forall n:t1. (lsr_bv1(x, n) = lsr1(x, tqtint1(n))))

axiom to_uint_lsr1 :
  (forall v:t1. forall n:t1. (tqtint1(lsr_bv1(v,
  n)) = (tqtint1(v) / pow2(tqtint1(n)))))

logic asr_bv1 : t1, t1 -> t1

axiom asr_bv_is_asr1 :
  (forall x:t1. forall n:t1. (asr_bv1(x, n) = asr1(x, tqtint1(n))))

logic lsl_bv1 : t1, t1 -> t1

axiom lsl_bv_is_lsl1 :
  (forall x:t1. forall n:t1. (lsl_bv1(x, n) = lsl1(x, tqtint1(n))))

axiom to_uint_lsl1 :
  (forall v:t1. forall n:t1. (tqtint1(lsl_bv1(v,
  n)) = ((tqtint1(v) * pow2(tqtint1(n))) % 65536)))

logic rotate_right_bv1 : t1, t1 -> t1

logic rotate_left_bv1 : t1, t1 -> t1

axiom rotate_left_bv_is_rotate_left1 :
  (forall v:t1. forall n:t1. (rotate_left_bv1(v, n) = rotate_left1(v,
  tqtint1(n))))

axiom rotate_right_bv_is_rotate_right1 :
  (forall v:t1. forall n:t1. (rotate_right_bv1(v, n) = rotate_right1(v,
  tqtint1(n))))

logic nth_bv1 : t1, t1 -> bool

axiom Nth_bv_is_nth1 :
  (forall x:t1. forall i:t1. (nth1(x, tqtint1(i)) = nth_bv1(x, i)))

axiom Nth_bv_is_nth21 :
  (forall x:t1. forall i:int. (((0 <= i) and (i <  65536)) -> (nth_bv1(x,
  of_int1(i)) = nth1(x, i))))

logic eq_sub_bv1 : t1, t1, t1, t1 -> prop

predicate eq_sub1(a: t1, b: t1, i: int, n: int) =
  (forall j:int. (((i <= j) and (j <  (i + n))) -> (nth1(a, j) = nth1(b,
  j))))

axiom eq_sub_equiv1 :
  (forall a:t1. forall b:t1. forall i:t1. forall n:t1. (eq_sub1(a, b,
  tqtint1(i), tqtint1(n)) <-> eq_sub_bv1(a, b, i, n)))

axiom Extensionality1 :
  (forall x:t1. forall y:t1 [eq_sub1(x, y, 0, 16)]. (eq_sub1(x, y, 0, 16) ->
  (x = y)))

type t__ref1 = { t__content1 : t1
}

logic bool_eq1 : t1, t1 -> bool

axiom bool_eq_def1 :
  (forall x:t1. forall y:t1 [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic bool_ne1 : t1, t1 -> bool

axiom bool_ne_def1 :
  (forall x:t1. forall y:t1 [bool_ne1(x, y)]. (((not (x = y)) -> (bool_ne1(x,
  y) = true)) and ((x = y) -> (bool_ne1(x, y) = false))))

logic bool_lt1 : t1, t1 -> bool

axiom bool_lt_def1 :
  (forall x:t1. forall y:t1 [bool_lt1(x, y)]. ((ult1(x, y) -> (bool_lt1(x,
  y) = true)) and ((not ult1(x, y)) -> (bool_lt1(x, y) = false))))

logic bool_le1 : t1, t1 -> bool

axiom bool_le_def1 :
  (forall x:t1. forall y:t1 [bool_le1(x, y)]. ((ule1(x, y) -> (bool_le1(x,
  y) = true)) and ((not ule1(x, y)) -> (bool_le1(x, y) = false))))

logic bool_gt1 : t1, t1 -> bool

axiom bool_gt_def1 :
  (forall x:t1. forall y:t1 [bool_gt1(x, y)]. ((ugt1(x, y) -> (bool_gt1(x,
  y) = true)) and ((not ugt1(x, y)) -> (bool_gt1(x, y) = false))))

logic bool_ge1 : t1, t1 -> bool

axiom bool_ge_def1 :
  (forall x:t1. forall y:t1 [bool_ge1(x, y)]. ((uge1(x, y) -> (bool_ge1(x,
  y) = true)) and ((not uge1(x, y)) -> (bool_ge1(x, y) = false))))

logic power1 : t1, int -> t1

axiom Power_02 : (forall x:t1. (power1(x, 0) = one1))

axiom Power_12 : (forall x:t1. (power1(x, 1) = x))

axiom Power_s2 :
  (forall x:t1. forall n:int. ((0 <= n) -> (power1(x, (n + 1)) = mul1(x,
  power1(x, n)))))

axiom Power_s_alt1 :
  (forall x:t1. forall n:int. ((0 <  n) -> (power1(x, n) = mul1(x, power1(x,
  (n - 1))))))

axiom Power_sum2 :
  (forall x:t1. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power1(x, (n + m)) = mul1(power1(x, n), power1(x, m))))))

axiom Power_mult1 :
  (forall x:t1. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power1(x, (n * m)) = power1(power1(x, n), m)))))

axiom Power_mult21 :
  (forall x:t1. forall y:t1. forall n:int. ((0 <= n) -> (power1(mul1(x, y),
  n) = mul1(power1(x, n), power1(y, n)))))

logic bv_min1 : t1, t1 -> t1

axiom bv_min_def1 :
  (forall x:t1. forall y:t1 [bv_min1(x, y)]. ((ule1(x, y) -> (bv_min1(x,
  y) = x)) and ((not ule1(x, y)) -> (bv_min1(x, y) = y))))

logic bv_max1 : t1, t1 -> t1

axiom bv_max_def1 :
  (forall x:t1. forall y:t1 [bv_max1(x, y)]. ((ule1(x, y) -> (bv_max1(x,
  y) = y)) and ((not ule1(x, y)) -> (bv_max1(x, y) = x))))

axiom bv_min_to_uint1 :
  (forall x:t1. forall y:t1. (tqtint1(bv_min1(x, y)) = min(tqtint1(x),
  tqtint1(y))))

axiom bv_max_to_uint1 :
  (forall x:t1. forall y:t1. (tqtint1(bv_max1(x, y)) = max(tqtint1(x),
  tqtint1(y))))

type t2

logic tqtint2 : t2 -> int

axiom tqtaxiom2 :
  (forall i:t2. ((0 <= tqtint2(i)) and (tqtint2(i) <= 4294967295)))

logic nth2 : t2, int -> bool

axiom nth_out_of_bound2 :
  (forall x:t2. forall n:int. (((n <  0) or (32 <= n)) -> (nth2(x,
  n) = false)))

logic zeros2 : t2

axiom Nth_zeros2 : (forall n:int. (nth2(zeros2, n) = false))

logic one2 : t2

logic ones2 : t2

axiom Nth_ones2 :
  (forall n:int. (((0 <= n) and (n <  32)) -> (nth2(ones2, n) = true)))

logic bw_and2 : t2, t2 -> t2

axiom Nth_bw_and2 :
  (forall v1:t2. forall v2:t2. forall n:int. (((0 <= n) and (n <  32)) ->
  (nth2(bw_and2(v1, v2), n) = match_bool(nth2(v1, n), nth2(v2, n), false))))

logic bw_or2 : t2, t2 -> t2

axiom Nth_bw_or2 :
  (forall v1:t2. forall v2:t2. forall n:int. (((0 <= n) and (n <  32)) ->
  (nth2(bw_or2(v1, v2), n) = match_bool(nth2(v1, n), true, nth2(v2, n)))))

logic bw_xor2 : t2, t2 -> t2

axiom Nth_bw_xor2 :
  (forall v1:t2. forall v2:t2. forall n:int. (((0 <= n) and (n <  32)) ->
  (nth2(bw_xor2(v1, v2), n) = xorb(nth2(v1, n), nth2(v2, n)))))

logic bw_not2 : t2 -> t2

axiom Nth_bw_not2 :
  (forall v:t2. forall n:int. (((0 <= n) and (n <  32)) -> (nth2(bw_not2(v),
  n) = match_bool(nth2(v, n), false, true))))

logic lsr2 : t2, int -> t2

axiom Lsr_nth_low2 :
  (forall b:t2. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  (((n + s) <  32) -> (nth2(lsr2(b, s), n) = nth2(b, (n + s)))))))

axiom Lsr_nth_high2 :
  (forall b:t2. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  ((32 <= (n + s)) -> (nth2(lsr2(b, s), n) = false)))))

axiom lsr_zeros2 : (forall x:t2. (lsr2(x, 0) = x))

logic asr2 : t2, int -> t2

axiom Asr_nth_low2 :
  (forall b:t2. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  32)) -> (((n + s) <  32) -> (nth2(asr2(b, s), n) = nth2(b,
  (n + s)))))))

axiom Asr_nth_high2 :
  (forall b:t2. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  32)) -> ((32 <= (n + s)) -> (nth2(asr2(b, s), n) = nth2(b,
  (32 - 1)))))))

axiom asr_zeros2 : (forall x:t2. (asr2(x, 0) = x))

logic lsl2 : t2, int -> t2

axiom Lsl_nth_high2 :
  (forall b:t2. forall n:int. forall s:int. (((0 <= s) and ((s <= n) and
  (n <  32))) -> (nth2(lsl2(b, s), n) = nth2(b, (n - s)))))

axiom Lsl_nth_low2 :
  (forall b:t2. forall n:int. forall s:int. (((0 <= n) and (n <  s)) ->
  (nth2(lsl2(b, s), n) = false)))

axiom lsl_zeros2 : (forall x:t2. (lsl2(x, 0) = x))

logic rotate_right2 : t2, int -> t2

axiom Nth_rotate_right2 :
  (forall v:t2. forall n:int. forall i:int. (((0 <= i) and (i <  32)) ->
  ((0 <= n) -> (nth2(rotate_right2(v, n), i) = nth2(v, ((i + n) % 32))))))

logic rotate_left2 : t2, int -> t2

axiom Nth_rotate_left2 :
  (forall v:t2. forall n:int. forall i:int. (((0 <= i) and (i <  32)) ->
  ((0 <= n) -> (nth2(rotate_left2(v, n), i) = nth2(v, ((i - n) % 32))))))

logic is_signed_positive2 : t2 -> prop

logic of_int2 : int -> t2

logic to_int2 : t2 -> int

axiom to_int_def2 :
  (forall x:t2 [to_int2(x)]. ((is_signed_positive2(x) ->
  (to_int2(x) = tqtint2(x))) and ((not is_signed_positive2(x)) ->
  (to_int2(x) = (-(4294967296 - tqtint2(x)))))))

axiom to_uint_extensionality2 :
  (forall v:t2. forall vqt:t2. ((tqtint2(v) = tqtint2(vqt)) -> (v = vqt)))

axiom to_int_extensionality2 :
  (forall v:t2. forall vqt:t2. ((to_int2(v) = to_int2(vqt)) -> (v = vqt)))

predicate uint_in_range2(i: int) = ((0 <= i) and (i <= 4294967295))

axiom to_uint_bounds2 :
  (forall v:t2. ((0 <= tqtint2(v)) and (tqtint2(v) <  4294967296)))

axiom to_uint_of_int2 :
  (forall i:int. (((0 <= i) and (i <  4294967296)) ->
  (tqtint2(of_int2(i)) = i)))

logic size_bv2 : t2

axiom to_uint_size_bv2 : (tqtint2(size_bv2) = 32)

axiom to_uint_zeros2 : (tqtint2(zeros2) = 0)

axiom to_uint_one2 : (tqtint2(one2) = 1)

axiom to_uint_ones2 : (tqtint2(ones2) = 4294967295)

predicate ult2(x: t2, y: t2) = (tqtint2(x) <  tqtint2(y))

predicate ule2(x: t2, y: t2) = (tqtint2(x) <= tqtint2(y))

predicate ugt2(x: t2, y: t2) = (tqtint2(y) <  tqtint2(x))

predicate uge2(x: t2, y: t2) = (tqtint2(y) <= tqtint2(x))

predicate slt2(v1: t2, v2: t2) = (to_int2(v1) <  to_int2(v2))

predicate sle2(v1: t2, v2: t2) = (to_int2(v1) <= to_int2(v2))

predicate sgt2(v1: t2, v2: t2) = (to_int2(v2) <  to_int2(v1))

predicate sge2(v1: t2, v2: t2) = (to_int2(v2) <= to_int2(v1))

axiom positive_is_ge_zeros2 :
  (forall x:t2. (is_signed_positive2(x) <-> sge2(x, zeros2)))

logic add2 : t2, t2 -> t2

axiom to_uint_add_bounded2 :
  (forall v1:t2. forall v2:t2.
  (((tqtint2(v1) + tqtint2(v2)) <  4294967296) -> (tqtint2(add2(v1,
  v2)) = (tqtint2(v1) + tqtint2(v2)))))

logic sub2 : t2, t2 -> t2

axiom to_uint_sub_bounded2 :
  (forall v1:t2. forall v2:t2. (((0 <= (tqtint2(v1) - tqtint2(v2))) and
  ((tqtint2(v1) - tqtint2(v2)) <  4294967296)) -> (tqtint2(sub2(v1,
  v2)) = (tqtint2(v1) - tqtint2(v2)))))

logic neg2 : t2 -> t2

axiom to_uint_neg2 :
  (forall v:t2. (tqtint2(neg2(v)) = ((-tqtint2(v)) % 4294967296)))

logic mul2 : t2, t2 -> t2

axiom to_uint_mul_bounded2 :
  (forall v1:t2. forall v2:t2.
  (((tqtint2(v1) * tqtint2(v2)) <  4294967296) -> (tqtint2(mul2(v1,
  v2)) = (tqtint2(v1) * tqtint2(v2)))))

logic udiv2 : t2, t2 -> t2

axiom to_uint_udiv2 :
  (forall v1:t2. forall v2:t2. (tqtint2(udiv2(v1,
  v2)) = (tqtint2(v1) / tqtint2(v2))))

logic urem2 : t2, t2 -> t2

axiom to_uint_urem2 :
  (forall v1:t2. forall v2:t2. (tqtint2(urem2(v1,
  v2)) = (tqtint2(v1) % tqtint2(v2))))

logic lsr_bv2 : t2, t2 -> t2

axiom lsr_bv_is_lsr2 :
  (forall x:t2. forall n:t2. (lsr_bv2(x, n) = lsr2(x, tqtint2(n))))

axiom to_uint_lsr2 :
  (forall v:t2. forall n:t2. (tqtint2(lsr_bv2(v,
  n)) = (tqtint2(v) / pow2(tqtint2(n)))))

logic asr_bv2 : t2, t2 -> t2

axiom asr_bv_is_asr2 :
  (forall x:t2. forall n:t2. (asr_bv2(x, n) = asr2(x, tqtint2(n))))

logic lsl_bv2 : t2, t2 -> t2

axiom lsl_bv_is_lsl2 :
  (forall x:t2. forall n:t2. (lsl_bv2(x, n) = lsl2(x, tqtint2(n))))

axiom to_uint_lsl2 :
  (forall v:t2. forall n:t2. (tqtint2(lsl_bv2(v,
  n)) = ((tqtint2(v) * pow2(tqtint2(n))) % 4294967296)))

logic rotate_right_bv2 : t2, t2 -> t2

logic rotate_left_bv2 : t2, t2 -> t2

axiom rotate_left_bv_is_rotate_left2 :
  (forall v:t2. forall n:t2. (rotate_left_bv2(v, n) = rotate_left2(v,
  tqtint2(n))))

axiom rotate_right_bv_is_rotate_right2 :
  (forall v:t2. forall n:t2. (rotate_right_bv2(v, n) = rotate_right2(v,
  tqtint2(n))))

logic nth_bv2 : t2, t2 -> bool

axiom Nth_bv_is_nth3 :
  (forall x:t2. forall i:t2. (nth2(x, tqtint2(i)) = nth_bv2(x, i)))

axiom Nth_bv_is_nth22 :
  (forall x:t2. forall i:int. (((0 <= i) and (i <  4294967296)) ->
  (nth_bv2(x, of_int2(i)) = nth2(x, i))))

logic eq_sub_bv2 : t2, t2, t2, t2 -> prop

predicate eq_sub2(a: t2, b: t2, i: int, n: int) =
  (forall j:int. (((i <= j) and (j <  (i + n))) -> (nth2(a, j) = nth2(b,
  j))))

axiom eq_sub_equiv2 :
  (forall a:t2. forall b:t2. forall i:t2. forall n:t2. (eq_sub2(a, b,
  tqtint2(i), tqtint2(n)) <-> eq_sub_bv2(a, b, i, n)))

axiom Extensionality2 :
  (forall x:t2. forall y:t2 [eq_sub2(x, y, 0, 32)]. (eq_sub2(x, y, 0, 32) ->
  (x = y)))

type t__ref2 = { t__content2 : t2
}

logic bool_eq2 : t2, t2 -> bool

axiom bool_eq_def2 :
  (forall x:t2. forall y:t2 [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic bool_ne2 : t2, t2 -> bool

axiom bool_ne_def2 :
  (forall x:t2. forall y:t2 [bool_ne2(x, y)]. (((not (x = y)) -> (bool_ne2(x,
  y) = true)) and ((x = y) -> (bool_ne2(x, y) = false))))

logic bool_lt2 : t2, t2 -> bool

axiom bool_lt_def2 :
  (forall x:t2. forall y:t2 [bool_lt2(x, y)]. ((ult2(x, y) -> (bool_lt2(x,
  y) = true)) and ((not ult2(x, y)) -> (bool_lt2(x, y) = false))))

logic bool_le2 : t2, t2 -> bool

axiom bool_le_def2 :
  (forall x:t2. forall y:t2 [bool_le2(x, y)]. ((ule2(x, y) -> (bool_le2(x,
  y) = true)) and ((not ule2(x, y)) -> (bool_le2(x, y) = false))))

logic bool_gt2 : t2, t2 -> bool

axiom bool_gt_def2 :
  (forall x:t2. forall y:t2 [bool_gt2(x, y)]. ((ugt2(x, y) -> (bool_gt2(x,
  y) = true)) and ((not ugt2(x, y)) -> (bool_gt2(x, y) = false))))

logic bool_ge2 : t2, t2 -> bool

axiom bool_ge_def2 :
  (forall x:t2. forall y:t2 [bool_ge2(x, y)]. ((uge2(x, y) -> (bool_ge2(x,
  y) = true)) and ((not uge2(x, y)) -> (bool_ge2(x, y) = false))))

logic power2 : t2, int -> t2

axiom Power_03 : (forall x:t2. (power2(x, 0) = one2))

axiom Power_13 : (forall x:t2. (power2(x, 1) = x))

axiom Power_s3 :
  (forall x:t2. forall n:int. ((0 <= n) -> (power2(x, (n + 1)) = mul2(x,
  power2(x, n)))))

axiom Power_s_alt2 :
  (forall x:t2. forall n:int. ((0 <  n) -> (power2(x, n) = mul2(x, power2(x,
  (n - 1))))))

axiom Power_sum3 :
  (forall x:t2. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power2(x, (n + m)) = mul2(power2(x, n), power2(x, m))))))

axiom Power_mult3 :
  (forall x:t2. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power2(x, (n * m)) = power2(power2(x, n), m)))))

axiom Power_mult22 :
  (forall x:t2. forall y:t2. forall n:int. ((0 <= n) -> (power2(mul2(x, y),
  n) = mul2(power2(x, n), power2(y, n)))))

logic bv_min2 : t2, t2 -> t2

axiom bv_min_def2 :
  (forall x:t2. forall y:t2 [bv_min2(x, y)]. ((ule2(x, y) -> (bv_min2(x,
  y) = x)) and ((not ule2(x, y)) -> (bv_min2(x, y) = y))))

logic bv_max2 : t2, t2 -> t2

axiom bv_max_def2 :
  (forall x:t2. forall y:t2 [bv_max2(x, y)]. ((ule2(x, y) -> (bv_max2(x,
  y) = y)) and ((not ule2(x, y)) -> (bv_max2(x, y) = x))))

axiom bv_min_to_uint2 :
  (forall x:t2. forall y:t2. (tqtint2(bv_min2(x, y)) = min(tqtint2(x),
  tqtint2(y))))

axiom bv_max_to_uint2 :
  (forall x:t2. forall y:t2. (tqtint2(bv_max2(x, y)) = max(tqtint2(x),
  tqtint2(y))))

type t3

logic tqtint3 : t3 -> int

axiom tqtaxiom3 :
  (forall i:t3. ((0 <= tqtint3(i)) and (tqtint3(i) <= 18446744073709551615)))

logic nth3 : t3, int -> bool

axiom nth_out_of_bound3 :
  (forall x:t3. forall n:int. (((n <  0) or (64 <= n)) -> (nth3(x,
  n) = false)))

logic zeros3 : t3

axiom Nth_zeros3 : (forall n:int. (nth3(zeros3, n) = false))

logic one3 : t3

logic ones3 : t3

axiom Nth_ones3 :
  (forall n:int. (((0 <= n) and (n <  64)) -> (nth3(ones3, n) = true)))

logic bw_and3 : t3, t3 -> t3

axiom Nth_bw_and3 :
  (forall v1:t3. forall v2:t3. forall n:int. (((0 <= n) and (n <  64)) ->
  (nth3(bw_and3(v1, v2), n) = match_bool(nth3(v1, n), nth3(v2, n), false))))

logic bw_or3 : t3, t3 -> t3

axiom Nth_bw_or3 :
  (forall v1:t3. forall v2:t3. forall n:int. (((0 <= n) and (n <  64)) ->
  (nth3(bw_or3(v1, v2), n) = match_bool(nth3(v1, n), true, nth3(v2, n)))))

logic bw_xor3 : t3, t3 -> t3

axiom Nth_bw_xor3 :
  (forall v1:t3. forall v2:t3. forall n:int. (((0 <= n) and (n <  64)) ->
  (nth3(bw_xor3(v1, v2), n) = xorb(nth3(v1, n), nth3(v2, n)))))

logic bw_not3 : t3 -> t3

axiom Nth_bw_not3 :
  (forall v:t3. forall n:int. (((0 <= n) and (n <  64)) -> (nth3(bw_not3(v),
  n) = match_bool(nth3(v, n), false, true))))

logic lsr3 : t3, int -> t3

axiom Lsr_nth_low3 :
  (forall b:t3. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  (((n + s) <  64) -> (nth3(lsr3(b, s), n) = nth3(b, (n + s)))))))

axiom Lsr_nth_high3 :
  (forall b:t3. forall n:int. forall s:int. ((0 <= s) -> ((0 <= n) ->
  ((64 <= (n + s)) -> (nth3(lsr3(b, s), n) = false)))))

axiom lsr_zeros3 : (forall x:t3. (lsr3(x, 0) = x))

logic asr3 : t3, int -> t3

axiom Asr_nth_low3 :
  (forall b:t3. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  64)) -> (((n + s) <  64) -> (nth3(asr3(b, s), n) = nth3(b,
  (n + s)))))))

axiom Asr_nth_high3 :
  (forall b:t3. forall n:int. forall s:int. ((0 <= s) -> (((0 <= n) and
  (n <  64)) -> ((64 <= (n + s)) -> (nth3(asr3(b, s), n) = nth3(b,
  (64 - 1)))))))

axiom asr_zeros3 : (forall x:t3. (asr3(x, 0) = x))

logic lsl3 : t3, int -> t3

axiom Lsl_nth_high3 :
  (forall b:t3. forall n:int. forall s:int. (((0 <= s) and ((s <= n) and
  (n <  64))) -> (nth3(lsl3(b, s), n) = nth3(b, (n - s)))))

axiom Lsl_nth_low3 :
  (forall b:t3. forall n:int. forall s:int. (((0 <= n) and (n <  s)) ->
  (nth3(lsl3(b, s), n) = false)))

axiom lsl_zeros3 : (forall x:t3. (lsl3(x, 0) = x))

logic rotate_right3 : t3, int -> t3

axiom Nth_rotate_right3 :
  (forall v:t3. forall n:int. forall i:int. (((0 <= i) and (i <  64)) ->
  ((0 <= n) -> (nth3(rotate_right3(v, n), i) = nth3(v, ((i + n) % 64))))))

logic rotate_left3 : t3, int -> t3

axiom Nth_rotate_left3 :
  (forall v:t3. forall n:int. forall i:int. (((0 <= i) and (i <  64)) ->
  ((0 <= n) -> (nth3(rotate_left3(v, n), i) = nth3(v, ((i - n) % 64))))))

logic is_signed_positive3 : t3 -> prop

logic of_int3 : int -> t3

logic to_int3 : t3 -> int

axiom to_int_def3 :
  (forall x:t3 [to_int3(x)]. ((is_signed_positive3(x) ->
  (to_int3(x) = tqtint3(x))) and ((not is_signed_positive3(x)) ->
  (to_int3(x) = (-(18446744073709551616 - tqtint3(x)))))))

axiom to_uint_extensionality3 :
  (forall v:t3. forall vqt:t3. ((tqtint3(v) = tqtint3(vqt)) -> (v = vqt)))

axiom to_int_extensionality3 :
  (forall v:t3. forall vqt:t3. ((to_int3(v) = to_int3(vqt)) -> (v = vqt)))

predicate uint_in_range3(i: int) = ((0 <= i) and (i <= 18446744073709551615))

axiom to_uint_bounds3 :
  (forall v:t3. ((0 <= tqtint3(v)) and (tqtint3(v) <  18446744073709551616)))

axiom to_uint_of_int3 :
  (forall i:int. (((0 <= i) and (i <  18446744073709551616)) ->
  (tqtint3(of_int3(i)) = i)))

logic size_bv3 : t3

axiom to_uint_size_bv3 : (tqtint3(size_bv3) = 64)

axiom to_uint_zeros3 : (tqtint3(zeros3) = 0)

axiom to_uint_one3 : (tqtint3(one3) = 1)

axiom to_uint_ones3 : (tqtint3(ones3) = 18446744073709551615)

predicate ult3(x: t3, y: t3) = (tqtint3(x) <  tqtint3(y))

predicate ule3(x: t3, y: t3) = (tqtint3(x) <= tqtint3(y))

predicate ugt3(x: t3, y: t3) = (tqtint3(y) <  tqtint3(x))

predicate uge3(x: t3, y: t3) = (tqtint3(y) <= tqtint3(x))

predicate slt3(v1: t3, v2: t3) = (to_int3(v1) <  to_int3(v2))

predicate sle3(v1: t3, v2: t3) = (to_int3(v1) <= to_int3(v2))

predicate sgt3(v1: t3, v2: t3) = (to_int3(v2) <  to_int3(v1))

predicate sge3(v1: t3, v2: t3) = (to_int3(v2) <= to_int3(v1))

axiom positive_is_ge_zeros3 :
  (forall x:t3. (is_signed_positive3(x) <-> sge3(x, zeros3)))

logic add3 : t3, t3 -> t3

axiom to_uint_add_bounded3 :
  (forall v1:t3. forall v2:t3.
  (((tqtint3(v1) + tqtint3(v2)) <  18446744073709551616) -> (tqtint3(add3(v1,
  v2)) = (tqtint3(v1) + tqtint3(v2)))))

logic sub3 : t3, t3 -> t3

axiom to_uint_sub_bounded3 :
  (forall v1:t3. forall v2:t3. (((0 <= (tqtint3(v1) - tqtint3(v2))) and
  ((tqtint3(v1) - tqtint3(v2)) <  18446744073709551616)) -> (tqtint3(sub3(v1,
  v2)) = (tqtint3(v1) - tqtint3(v2)))))

logic neg3 : t3 -> t3

axiom to_uint_neg3 :
  (forall v:t3. (tqtint3(neg3(v)) = ((-tqtint3(v)) % 18446744073709551616)))

logic mul3 : t3, t3 -> t3

axiom to_uint_mul_bounded3 :
  (forall v1:t3. forall v2:t3.
  (((tqtint3(v1) * tqtint3(v2)) <  18446744073709551616) -> (tqtint3(mul3(v1,
  v2)) = (tqtint3(v1) * tqtint3(v2)))))

logic udiv3 : t3, t3 -> t3

axiom to_uint_udiv3 :
  (forall v1:t3. forall v2:t3. (tqtint3(udiv3(v1,
  v2)) = (tqtint3(v1) / tqtint3(v2))))

logic urem3 : t3, t3 -> t3

axiom to_uint_urem3 :
  (forall v1:t3. forall v2:t3. (tqtint3(urem3(v1,
  v2)) = (tqtint3(v1) % tqtint3(v2))))

logic lsr_bv3 : t3, t3 -> t3

axiom lsr_bv_is_lsr3 :
  (forall x:t3. forall n:t3. (lsr_bv3(x, n) = lsr3(x, tqtint3(n))))

axiom to_uint_lsr3 :
  (forall v:t3. forall n:t3. (tqtint3(lsr_bv3(v,
  n)) = (tqtint3(v) / pow2(tqtint3(n)))))

logic asr_bv3 : t3, t3 -> t3

axiom asr_bv_is_asr3 :
  (forall x:t3. forall n:t3. (asr_bv3(x, n) = asr3(x, tqtint3(n))))

logic lsl_bv3 : t3, t3 -> t3

axiom lsl_bv_is_lsl3 :
  (forall x:t3. forall n:t3. (lsl_bv3(x, n) = lsl3(x, tqtint3(n))))

axiom to_uint_lsl3 :
  (forall v:t3. forall n:t3. (tqtint3(lsl_bv3(v,
  n)) = ((tqtint3(v) * pow2(tqtint3(n))) % 18446744073709551616)))

logic rotate_right_bv3 : t3, t3 -> t3

logic rotate_left_bv3 : t3, t3 -> t3

axiom rotate_left_bv_is_rotate_left3 :
  (forall v:t3. forall n:t3. (rotate_left_bv3(v, n) = rotate_left3(v,
  tqtint3(n))))

axiom rotate_right_bv_is_rotate_right3 :
  (forall v:t3. forall n:t3. (rotate_right_bv3(v, n) = rotate_right3(v,
  tqtint3(n))))

logic nth_bv3 : t3, t3 -> bool

axiom Nth_bv_is_nth4 :
  (forall x:t3. forall i:t3. (nth3(x, tqtint3(i)) = nth_bv3(x, i)))

axiom Nth_bv_is_nth23 :
  (forall x:t3. forall i:int. (((0 <= i) and (i <  18446744073709551616)) ->
  (nth_bv3(x, of_int3(i)) = nth3(x, i))))

logic eq_sub_bv3 : t3, t3, t3, t3 -> prop

predicate eq_sub3(a: t3, b: t3, i: int, n: int) =
  (forall j:int. (((i <= j) and (j <  (i + n))) -> (nth3(a, j) = nth3(b,
  j))))

axiom eq_sub_equiv3 :
  (forall a:t3. forall b:t3. forall i:t3. forall n:t3. (eq_sub3(a, b,
  tqtint3(i), tqtint3(n)) <-> eq_sub_bv3(a, b, i, n)))

axiom Extensionality3 :
  (forall x:t3. forall y:t3 [eq_sub3(x, y, 0, 64)]. (eq_sub3(x, y, 0, 64) ->
  (x = y)))

type t__ref3 = { t__content3 : t3
}

logic bool_eq3 : t3, t3 -> bool

axiom bool_eq_def3 :
  (forall x:t3. forall y:t3 [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic bool_ne3 : t3, t3 -> bool

axiom bool_ne_def3 :
  (forall x:t3. forall y:t3 [bool_ne3(x, y)]. (((not (x = y)) -> (bool_ne3(x,
  y) = true)) and ((x = y) -> (bool_ne3(x, y) = false))))

logic bool_lt3 : t3, t3 -> bool

axiom bool_lt_def3 :
  (forall x:t3. forall y:t3 [bool_lt3(x, y)]. ((ult3(x, y) -> (bool_lt3(x,
  y) = true)) and ((not ult3(x, y)) -> (bool_lt3(x, y) = false))))

logic bool_le3 : t3, t3 -> bool

axiom bool_le_def3 :
  (forall x:t3. forall y:t3 [bool_le3(x, y)]. ((ule3(x, y) -> (bool_le3(x,
  y) = true)) and ((not ule3(x, y)) -> (bool_le3(x, y) = false))))

logic bool_gt3 : t3, t3 -> bool

axiom bool_gt_def3 :
  (forall x:t3. forall y:t3 [bool_gt3(x, y)]. ((ugt3(x, y) -> (bool_gt3(x,
  y) = true)) and ((not ugt3(x, y)) -> (bool_gt3(x, y) = false))))

logic bool_ge3 : t3, t3 -> bool

axiom bool_ge_def3 :
  (forall x:t3. forall y:t3 [bool_ge3(x, y)]. ((uge3(x, y) -> (bool_ge3(x,
  y) = true)) and ((not uge3(x, y)) -> (bool_ge3(x, y) = false))))

logic power3 : t3, int -> t3

axiom Power_04 : (forall x:t3. (power3(x, 0) = one3))

axiom Power_14 : (forall x:t3. (power3(x, 1) = x))

axiom Power_s4 :
  (forall x:t3. forall n:int. ((0 <= n) -> (power3(x, (n + 1)) = mul3(x,
  power3(x, n)))))

axiom Power_s_alt3 :
  (forall x:t3. forall n:int. ((0 <  n) -> (power3(x, n) = mul3(x, power3(x,
  (n - 1))))))

axiom Power_sum4 :
  (forall x:t3. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power3(x, (n + m)) = mul3(power3(x, n), power3(x, m))))))

axiom Power_mult4 :
  (forall x:t3. forall n:int. forall m:int. ((0 <= n) -> ((0 <= m) ->
  (power3(x, (n * m)) = power3(power3(x, n), m)))))

axiom Power_mult23 :
  (forall x:t3. forall y:t3. forall n:int. ((0 <= n) -> (power3(mul3(x, y),
  n) = mul3(power3(x, n), power3(y, n)))))

logic bv_min3 : t3, t3 -> t3

axiom bv_min_def3 :
  (forall x:t3. forall y:t3 [bv_min3(x, y)]. ((ule3(x, y) -> (bv_min3(x,
  y) = x)) and ((not ule3(x, y)) -> (bv_min3(x, y) = y))))

logic bv_max3 : t3, t3 -> t3

axiom bv_max_def3 :
  (forall x:t3. forall y:t3 [bv_max3(x, y)]. ((ule3(x, y) -> (bv_max3(x,
  y) = y)) and ((not ule3(x, y)) -> (bv_max3(x, y) = x))))

axiom bv_min_to_uint3 :
  (forall x:t3. forall y:t3. (tqtint3(bv_min3(x, y)) = min(tqtint3(x),
  tqtint3(y))))

axiom bv_max_to_uint3 :
  (forall x:t3. forall y:t3. (tqtint3(bv_max3(x, y)) = max(tqtint3(x),
  tqtint3(y))))

logic toBig : t2 -> t3

logic toSmall : t3 -> t2

logic rliteral : t3

axiom rliteral_axiom : (tqtint3(rliteral) = 4294967295)

axiom toSmall_to_uint :
  (forall x:t3. (ule3(x, rliteral) -> (tqtint3(x) = tqtint2(toSmall(x)))))

axiom toBig_to_uint : (forall x:t2. (tqtint2(x) = tqtint3(toBig(x))))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq4 : bool, bool -> bool

axiom bool_eq_def4 :
  (forall x:bool. forall y:bool [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic to_int4 : bool -> int

axiom to_int_def4 :
  (forall b:bool [to_int4(b)]. (((b = true) -> (to_int4(b) = 1)) and
  ((not (b = true)) -> (to_int4(b) = 0))))

logic of_int4 : int -> bool

axiom of_int_def :
  (forall i:int [of_int4(i)]. (((i = 0) -> (of_int4(i) = false)) and
  ((not (i = 0)) -> (of_int4(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type unsigned64

logic attr__ATTRIBUTE_MODULUS : t3

logic bool_eq5 : int, int -> bool

logic bool_ne4 : int, int -> bool

logic bool_lt4 : int, int -> bool

logic bool_le4 : int, int -> bool

logic bool_gt4 : int, int -> bool

logic bool_ge4 : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq5(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne4(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt4(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le4(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt4(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge4(x, y) = true) <-> (y <= x))))

logic bool_eq6 : t3, t3 -> bool

axiom bool_eq_def5 :
  (forall x:t3. forall y:t3 [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : t3 -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> t3

logic user_eq : unsigned64, unsigned64 -> bool

logic dummy : unsigned64

type unsigned64__ref = { unsigned64__content : unsigned64
}

function unsigned64__ref___projection(a: unsigned64__ref) : unsigned64 =
  (a).unsigned64__content

type unsigned16

logic attr__ATTRIBUTE_MODULUS1 : t1

logic bool_eq7 : t1, t1 -> bool

axiom bool_eq_def6 :
  (forall x:t1. forall y:t1 [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : t1 -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> t1

logic user_eq1 : unsigned16, unsigned16 -> bool

logic dummy1 : unsigned16

type unsigned16__ref = { unsigned16__content : unsigned16
}

function unsigned16__ref___projection(a: unsigned16__ref) : unsigned16 =
  (a).unsigned16__content

type unsigned8

logic attr__ATTRIBUTE_MODULUS2 : t

logic bool_eq8 : t, t -> bool

axiom bool_eq_def7 :
  (forall x:t. forall y:t [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> t

logic user_eq2 : unsigned8, unsigned8 -> bool

logic dummy2 : unsigned8

type unsigned8__ref = { unsigned8__content : unsigned8
}

function unsigned8__ref___projection(a: unsigned8__ref) : unsigned8 =
  (a).unsigned8__content

logic to_rep : unsigned8 -> t

logic of_rep : t -> unsigned8

axiom inversion_axiom :
  (forall x:unsigned8 [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : true

axiom coerce_axiom :
  (forall x:t [to_rep(of_rep(x))]. (to_rep(of_rep(x)) = x))

function to_int5(x: unsigned8) : int = tqtint(to_rep(x))

axiom range_int_axiom :
  (forall x:unsigned8 [to_int5(x)]. uint_in_range(to_int5(x)))

type map__ref = { map__content : (t3,unsigned8) farray
}

logic slide : (t3,unsigned8) farray, t3, t3 -> (t3,unsigned8) farray

axiom slide_eq :
  (forall a:(t3,unsigned8) farray.
  (forall first:t3 [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(t3,unsigned8) farray.
  (forall old_first:t3.
  (forall new_first:t3.
  (forall i:t3 [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[sub3(i, sub3(new_first, old_first))]))))))

logic concat : (t3,unsigned8) farray, t3, t3, (t3,unsigned8) farray, t3,
  t3 -> (t3,unsigned8) farray

axiom concat_def :
  (forall a:(t3,unsigned8) farray. forall b:(t3,unsigned8) farray.
  (forall a_first:t3. forall a_last:t3. forall b_first:t3. forall b_last:t3.
  (forall i:t3 [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  (((ule3(a_first, i) and ule3(i, a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and (ugt3(i, a_last) -> ((concat(a,
  a_first, a_last, b, b_first, b_last)[i]) = (b[add3(sub3(i, a_last),
  sub3(b_first, one3))])))))))

logic singleton : unsigned8, t3 -> (t3,unsigned8) farray

axiom singleton_def :
  (forall v:unsigned8.
  (forall i:t3 [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq9 : (t3,unsigned8) farray, t3, t3, (t3,unsigned8) farray, t3,
  t3 -> bool

axiom bool_eq_def8 :
  (forall a:(t3,unsigned8) farray. forall a__first:t3. forall a__last:t3.
  forall b:(t3,unsigned8) farray. forall b__first:t3. forall b__last:t3
  [bool_eq9(a, a__first, a__last, b, b__first, b__last)]. (((((ule3(a__first,
  a__last) and (ule3(b__first, b__last) and (sub3(a__last,
  a__first) = sub3(b__last, b__first)))) or ((not ule3(a__first,
  a__last)) and ugt3(b__first, b__last))) and
  (forall temp___idx_132:t3. (((ule3(a__first, temp___idx_132) and
  ule3(temp___idx_132, a__last)) and
  (to_rep((a[temp___idx_132])) = to_rep((b[add3(sub3(b__first, a__first),
  temp___idx_132)])))) or (not (ule3(a__first, temp___idx_132) and
  ule3(temp___idx_132, a__last)))))) -> (bool_eq9(a, a__first, a__last, b,
  b__first, b__last) = true)) and ((not (((ule3(a__first, a__last) ->
  (ule3(b__first, b__last) and (sub3(a__last, a__first) = sub3(b__last,
  b__first)))) and ((not ule3(a__first, a__last)) -> ugt3(b__first,
  b__last))) and
  (forall temp___idx_132:t3. ((ule3(a__first, temp___idx_132) and
  ule3(temp___idx_132, a__last)) ->
  (to_rep((a[temp___idx_132])) = to_rep((b[add3(sub3(b__first, a__first),
  temp___idx_132)]))))))) -> (bool_eq9(a, a__first, a__last, b, b__first,
  b__last) = false))))

axiom bool_eq_rev :
  (forall a:(t3,unsigned8) farray. forall b:(t3,unsigned8) farray.
  (forall a__first:t3. forall a__last:t3. forall b__first:t3.
  forall b__last:t3. ((bool_eq9(b, b__first, b__last, a, a__first,
  a__last) = true) -> (((ule3(a__first, a__last) -> (ule3(b__first,
  b__last) and (sub3(a__last, a__first) = sub3(b__last, b__first)))) and
  ((not ule3(a__first, a__last)) -> ugt3(b__first, b__last))) and
  (forall temp___idx_132:t3. ((ule3(a__first, temp___idx_132) and
  ule3(temp___idx_132, a__last)) ->
  (to_rep((a[temp___idx_132])) = to_rep((b[add3(sub3(b__first, a__first),
  temp___idx_132)])))))))))

logic compare : (t3,unsigned8) farray, t3, t3, (t3,unsigned8) farray, t3,
  t3 -> int

axiom compare_def_eq :
  (forall a:(t3,unsigned8) farray. forall b:(t3,unsigned8) farray.
  (forall a_first:t3. forall a_last:t3. forall b_first:t3. forall b_last:t3
  [compare(a, a_first, a_last, b, b_first, b_last)]. ((compare(a, a_first,
  a_last, b, b_first, b_last) = 0) <-> (bool_eq9(a, a_first, a_last, b,
  b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(t3,unsigned8) farray. forall b:(t3,unsigned8) farray.
  (forall a_first:t3. forall a_last:t3. forall b_first:t3. forall b_last:t3
  [compare(a, a_first, a_last, b, b_first, b_last)]. ((compare(a, a_first,
  a_last, b, b_first, b_last) <  0) <->
  (exists i:t3. exists j:t3. (ule3(i, a_last) and (ult3(j, b_last) and
  ((bool_eq9(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  (ult3(i, a_last) and ult(to_rep((a[add3(i, one3)])), to_rep((b[add3(j,
  one3)]))))))))))))

axiom compare_def_gt :
  (forall a:(t3,unsigned8) farray. forall b:(t3,unsigned8) farray.
  (forall a_first:t3. forall a_last:t3. forall b_first:t3. forall b_last:t3
  [compare(a, a_first, a_last, b, b_first, b_last)]. ((0 <  compare(a,
  a_first, a_last, b, b_first, b_last)) <->
  (exists i:t3. exists j:t3. (ule3(i, b_last) and (ult3(j, a_last) and
  ((bool_eq9(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  (ult3(i, b_last) and ugt(to_rep((a[add3(j, one3)])), to_rep((b[add3(i,
  one3)]))))))))))))

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

logic attr__ATTRIBUTE_ADDRESS15 : int

logic attr__ATTRIBUTE_ADDRESS16 : int

logic attr__ATTRIBUTE_ADDRESS17 : int

type unsigned32

logic attr__ATTRIBUTE_MODULUS3 : t2

logic bool_eq10 : t2, t2 -> bool

axiom bool_eq_def9 :
  (forall x:t2. forall y:t2 [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : t2 -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> t2

logic user_eq3 : unsigned32, unsigned32 -> bool

logic dummy3 : unsigned32

type unsigned32__ref = { unsigned32__content : unsigned32
}

function unsigned32__ref___projection(a: unsigned32__ref) : unsigned32 =
  (a).unsigned32__content

logic eax : t3 -> t2

logic eax__function_guard : t2, t3 -> prop

axiom eax__post_axiom :
  (forall x86__rax:t3 [eax(x86__rax)].
  (eax(x86__rax) = toSmall(bw_and3(x86__rax, of_int3(4294967295)))))

logic writereg32post : t3, t2 -> bool

logic writereg32post__function_guard : bool, t3, t2 -> prop

logic attr__ATTRIBUTE_ADDRESS18 : int

logic readreg32 : t3 -> t2

logic readreg32__function_guard : t2, t3 -> prop

logic ecx : t3 -> t2

logic ecx__function_guard : t2, t3 -> prop

axiom ecx__post_axiom :
  (forall x86__rcx:t3 [ecx(x86__rcx)]. (ecx(x86__rcx) = readreg32(x86__rcx)))

logic attr__ATTRIBUTE_ADDRESS19 : int

logic edx : t3 -> t2

logic edx__function_guard : t2, t3 -> prop

axiom edx__post_axiom :
  (forall x86__rdx:t3 [edx(x86__rdx)]. (edx(x86__rdx) = readreg32(x86__rdx)))

logic attr__ATTRIBUTE_ADDRESS20 : int

logic writereg16post : t3, t3, t1 -> bool

logic writereg16post__function_guard : bool, t3, t3, t1 -> prop

logic ebx : t3 -> t2

logic ebx__function_guard : t2, t3 -> prop

axiom ebx__post_axiom :
  (forall x86__rbx:t3 [ebx(x86__rbx)]. (ebx(x86__rbx) = readreg32(x86__rbx)))

logic attr__ATTRIBUTE_ADDRESS21 : int

logic esp : t3 -> t2

logic esp__function_guard : t2, t3 -> prop

axiom esp__post_axiom :
  (forall x86__rsp:t3 [esp(x86__rsp)]. (esp(x86__rsp) = readreg32(x86__rsp)))

logic attr__ATTRIBUTE_ADDRESS22 : int

logic attr__ATTRIBUTE_ADDRESS23 : int

logic esi : t3 -> t2

logic esi__function_guard : t2, t3 -> prop

axiom esi__post_axiom :
  (forall x86__rsi:t3 [esi(x86__rsi)]. (esi(x86__rsi) = readreg32(x86__rsi)))

logic attr__ATTRIBUTE_ADDRESS24 : int

logic edi : t3 -> t2

logic edi__function_guard : t2, t3 -> prop

axiom edi__post_axiom :
  (forall x86__rdi:t3 [edi(x86__rdi)]. (edi(x86__rdi) = readreg32(x86__rdi)))

logic attr__ATTRIBUTE_ADDRESS25 : int

logic attr__ATTRIBUTE_ADDRESS26 : int

logic attr__ATTRIBUTE_ADDRESS27 : int

logic attr__ATTRIBUTE_ADDRESS28 : int

logic attr__ATTRIBUTE_ADDRESS29 : int

logic attr__ATTRIBUTE_ADDRESS30 : int

logic attr__ATTRIBUTE_ADDRESS31 : int

logic attr__ATTRIBUTE_ADDRESS32 : int

logic attr__ATTRIBUTE_ADDRESS33 : int

logic readmem8 : t3, (t3,unsigned8) farray -> t

logic readmem8__function_guard : t, t3, (t3,unsigned8) farray -> prop

axiom readmem8__post_axiom :
  (forall addr:t3.
  (forall x86__memory:(t3,unsigned8) farray [readmem8(addr, x86__memory)].
  (readmem8(addr, x86__memory) = to_rep((x86__memory[addr])))))

logic toBig1 : t -> t2

logic toSmall1 : t2 -> t

logic rliteral1 : t2

axiom rliteral_axiom1 : (tqtint2(rliteral1) = 255)

axiom toSmall_to_uint1 :
  (forall x:t2. (ule2(x, rliteral1) -> (tqtint2(x) = tqtint(toSmall1(x)))))

axiom toBig_to_uint1 : (forall x:t. (tqtint(x) = tqtint2(toBig1(x))))

logic readmem32 : t3, (t3,unsigned8) farray -> t2

logic readmem32__function_guard : t2, t3, (t3,unsigned8) farray -> prop

axiom readmem32__post_axiom :
  (forall addr:t3.
  (forall x86__memory:(t3,unsigned8) farray [readmem32(addr, x86__memory)].
  ((((bw_and2(readmem32(addr, x86__memory),
  of_int2(255)) = toBig1(to_rep((x86__memory[addr])))) and
  (bw_and2(readmem32(addr, x86__memory),
  of_int2(65280)) = mul2(toBig1(to_rep((x86__memory[add3(addr,
  of_int3(1))]))), of_int2(256)))) and (bw_and2(readmem32(addr, x86__memory),
  of_int2(16711680)) = mul2(toBig1(to_rep((x86__memory[add3(addr,
  of_int3(2))]))), of_int2(65536)))) and (bw_and2(readmem32(addr,
  x86__memory),
  of_int2(4278190080)) = mul2(toBig1(to_rep((x86__memory[add3(addr,
  of_int3(3))]))), of_int2(16777216))))))

logic toBig2 : t -> t3

logic toSmall2 : t3 -> t

logic rliteral2 : t3

axiom rliteral_axiom2 : (tqtint3(rliteral2) = 255)

axiom toSmall_to_uint2 :
  (forall x:t3. (ule3(x, rliteral2) -> (tqtint3(x) = tqtint(toSmall2(x)))))

axiom toBig_to_uint2 : (forall x:t. (tqtint(x) = tqtint3(toBig2(x))))

logic readmem64 : t3, (t3,unsigned8) farray -> t3

logic readmem64__function_guard : t3, t3, (t3,unsigned8) farray -> prop

axiom readmem64__post_axiom :
  (forall addr:t3.
  (forall x86__memory:(t3,unsigned8) farray [readmem64(addr, x86__memory)].
  ((((((((bw_and3(readmem64(addr, x86__memory),
  of_int3(255)) = toBig2(to_rep((x86__memory[addr])))) and
  (bw_and3(readmem64(addr, x86__memory),
  of_int3(65280)) = mul3(toBig2(to_rep((x86__memory[add3(addr,
  of_int3(1))]))), of_int3(256)))) and (bw_and3(readmem64(addr, x86__memory),
  of_int3(16711680)) = mul3(toBig2(to_rep((x86__memory[add3(addr,
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(readmem64(addr,
  x86__memory),
  of_int3(4278190080)) = mul3(toBig2(to_rep((x86__memory[add3(addr,
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(readmem64(addr,
  x86__memory),
  of_int3(1095216660480)) = mul3(toBig2(to_rep((x86__memory[add3(addr,
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(readmem64(addr,
  x86__memory),
  of_int3(280375465082880)) = mul3(toBig2(to_rep((x86__memory[add3(addr,
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(readmem64(addr,
  x86__memory),
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((x86__memory[add3(addr,
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(readmem64(addr,
  x86__memory),
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((x86__memory[add3(addr,
  of_int3(7))]))), of_int3(72057594037927936))))))

type unsigned641

logic attr__ATTRIBUTE_MODULUS4 : t3

logic bool_eq11 : t3, t3 -> bool

axiom bool_eq_def10 :
  (forall x:t3. forall y:t3 [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : t3 -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> t3

logic user_eq4 : unsigned641, unsigned641 -> bool

logic dummy4 : unsigned641

type unsigned64__ref1 = { unsigned64__content1 : unsigned641
}

function unsigned64__ref___2__projection(a: unsigned64__ref1) : unsigned641 =
  (a).unsigned64__content1

type unsigned81

logic attr__ATTRIBUTE_MODULUS5 : t

logic bool_eq12 : t, t -> bool

axiom bool_eq_def11 :
  (forall x:t. forall y:t [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : t -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> t

logic user_eq5 : unsigned81, unsigned81 -> bool

logic dummy5 : unsigned81

type unsigned8__ref1 = { unsigned8__content1 : unsigned81
}

function unsigned8__ref___2__projection(a: unsigned8__ref1) : unsigned81 =
  (a).unsigned8__content1

logic attr__ATTRIBUTE_ADDRESS34 : int

logic attr__ATTRIBUTE_ADDRESS35 : int

logic inrange64 : t3, t3, t3 -> bool

logic inrange64__function_guard : bool, t3, t3, t3 -> prop

logic attr__ATTRIBUTE_ADDRESS36 : int

logic attr__ATTRIBUTE_ADDRESS37 : int

logic attr__ATTRIBUTE_ADDRESS38 : int

logic attr__ATTRIBUTE_ADDRESS39 : int

logic attr__ATTRIBUTE_ADDRESS40 : int

logic attr__ATTRIBUTE_ADDRESS41 : int

logic attr__ATTRIBUTE_ADDRESS42 : int

logic attr__ATTRIBUTE_ADDRESS43 : int

logic attr__ATTRIBUTE_ADDRESS44 : int

logic attr__ATTRIBUTE_ADDRESS45 : int

logic attr__ATTRIBUTE_ADDRESS46 : int

logic attr__ATTRIBUTE_ADDRESS47 : int

logic attr__ATTRIBUTE_ADDRESS48 : int

logic attr__ATTRIBUTE_ADDRESS49 : int

logic attr__ATTRIBUTE_ADDRESS50 : int

axiom inrange64__post_axiom :
  (forall var:t3. forall bottom:t3. forall range_size:t3 [inrange64(var,
  bottom, range_size)]. (((inrange64(var, bottom, range_size) = true) ->
  ((ule3(bottom, add3(sub3(of_int3(18446744073709551615), range_size),
  of_int3(1))) -> (ule3(bottom, var) and ule3(var, add3(bottom,
  sub3(range_size, of_int3(1)))))) and ((not ule3(bottom,
  add3(sub3(of_int3(18446744073709551615), range_size), of_int3(1)))) ->
  ((ule3(bottom, var) and ule3(var, of_int3(18446744073709551615))) or
  ule3(var, sub3(sub3(range_size, sub3(of_int3(18446744073709551615),
  bottom)), of_int3(2))))))) and (((ule3(bottom,
  add3(sub3(of_int3(18446744073709551615), range_size), of_int3(1))) and
  (ule3(bottom, var) and ule3(var, add3(bottom, sub3(range_size,
  of_int3(1)))))) or ((not ule3(bottom,
  add3(sub3(of_int3(18446744073709551615), range_size), of_int3(1)))) and
  ((ule3(bottom, var) and ule3(var, of_int3(18446744073709551615))) or
  ule3(var, sub3(sub3(range_size, sub3(of_int3(18446744073709551615),
  bottom)), of_int3(2)))))) -> (inrange64(var, bottom, range_size) = true))))

logic toBig3 : t1 -> t3

logic toSmall3 : t3 -> t1

logic rliteral3 : t3

axiom rliteral_axiom3 : (tqtint3(rliteral3) = 65535)

axiom toSmall_to_uint3 :
  (forall x:t3. (ule3(x, rliteral3) -> (tqtint3(x) = tqtint1(toSmall3(x)))))

axiom toBig_to_uint3 : (forall x:t1. (tqtint1(x) = tqtint3(toBig3(x))))

logic readreg16 : t3 -> t1

logic readreg16__function_guard : t1, t3 -> prop

axiom readreg16__post_axiom :
  (forall reg:t3 [readreg16(reg)]. (readreg16(reg) = toSmall3(bw_and3(reg,
  of_int3(65535)))))

axiom writereg16post__post_axiom :
  (forall regold:t3. forall regnew:t3.
  (forall val__:t1 [writereg16post(regold, regnew, val__)].
  ((writereg16post(regold, regnew, val__) = true) <->
  ((readreg16(regnew) = val__) and (bw_and3(regnew,
  of_int3(18446744073709486080)) = bw_and3(regold,
  of_int3(18446744073709486080)))))))

axiom readreg32__post_axiom :
  (forall reg:t3 [readreg32(reg)]. (readreg32(reg) = toSmall(bw_and3(reg,
  of_int3(4294967295)))))

axiom writereg32post__post_axiom :
  (forall regnew:t3.
  (forall val__:t2 [writereg32post(regnew, val__)]. ((writereg32post(regnew,
  val__) = true) <-> ((readreg32(regnew) = val__) and (bw_and3(regnew,
  of_int3(18446744069414584320)) = of_int3(0))))))

 (* File "x86.ads", line 334, characters 0-0 *)
goal WP_parameter_def :
  (forall zeroflag:bool. forall carryflag:bool. forall signflag:bool.
  forall overflowflag:bool. forall xmm0:t3. forall xmm1:t3. forall xmm2:t3.
  forall xmm3:t3. forall rbx:t3. forall rsp:t3. forall rbp:t3. forall rsi:t3.
  forall r12:t3. forall r13:t3. forall r14:t3. forall r15:t3.
  forall memory:(t3,unsigned8) farray. forall savestackptr:t3. forall ra0:t.
  forall ra1:t. forall ra2:t. forall ra3:t. forall ra4:t. forall ra5:t__ref.
  forall ra6:t__ref. forall ra7:t__ref. forall saverbx:t__ref3.
  forall saverbp:t__ref3. forall saver12:t__ref3. forall saver13:t__ref3.
  forall saver14:t__ref3. forall saver15:t__ref3. forall o:t3. forall o1:t.
  forall o2:t. forall o3:t. forall o4:t. forall o5:t. forall o6:t.
  forall o7:t. forall o8:t. forall o9:t. forall o10:t. forall o11:t.
  forall o12:t. forall o13:t. forall o14:t. forall o15:t. forall o16:t.
  forall o17:t3. forall o18:t3. forall o19:t3. forall o20:t3. forall o21:t3.
  forall o22:t3. forall o23:t3. forall o24:t3. forall o25:t3. forall o26:t3.
  forall o27:t2. forall o28:t2. forall o29:t3. forall o30:t2. forall o31:t2.
  forall o32:t2. forall o33:t2. forall o34:bool. forall o35:t2.
  forall o36:t2. forall o37:t2. forall o38:bool. forall temp___393:t3.
  forall temp___394:t3. forall temp___392:t3. forall temp___391:bool.
  forall temp___390:bool. forall temp___389:t3. forall temp___387:bool.
  forall temp___388:t3. forall temp___386:t3. forall temp___385:t3.
  forall temp___384:bool. forall o39:t3. forall o40:t2. forall o41:t2.
  forall o42:t2. forall o43:t2. forall o44:t2. forall o45:bool.
  forall o46:t2. forall o47:t2. forall o48:t2. forall o49:bool.
  forall o50:t2. forall o51:t2. forall o52:bool. forall o53:t2.
  forall o54:t2. forall o55:t2. forall o56:t2. forall o57:bool.
  forall o58:bool. forall o59:bool. forall o60:t3. forall o61:t3.
  forall o62:t3. forall o63:t3. forall o64:t2. forall o65:t2. forall o66:t3.
  forall o67:t2. forall o68:t2. forall o69:t2. forall o70:t2.
  forall o71:bool. forall o72:t2. forall o73:t2. forall o74:t2.
  forall o75:bool. forall temp___404:t3. forall temp___403:t3.
  forall temp___402:bool. forall temp___401:bool. forall temp___400:t3.
  forall temp___398:bool. forall temp___399:t3. forall temp___397:t3.
  forall temp___396:t3. forall temp___395:bool. forall temp___405:t3.
  forall o76:t3. forall o77:t2. forall o78:t2. forall o79:t2. forall o80:t2.
  forall o81:t2. forall o82:bool. forall o83:t2. forall o84:t2.
  forall o85:t2. forall o86:bool. forall o87:t2. forall o88:t2.
  forall o89:bool. forall o90:t2. forall o91:t2. forall o92:t2.
  forall o93:t2. forall o94:bool. forall o95:bool. forall o96:bool.
  forall o97:t3. forall o98:t3. forall o99:t3. forall o100:t3.
  forall o101:t2. forall o102:t2. forall o103:t3. forall o104:t2.
  forall o105:t2. forall o106:t2. forall o107:t2. forall o108:bool.
  forall o109:t2. forall o110:t2. forall o111:t2. forall o112:bool.
  forall o113:t3. forall o114:t2. forall o115:t2. forall o116:t2.
  forall o117:t2. forall o118:t2. forall o119:bool. forall o120:t2.
  forall o121:t2. forall o122:t2. forall o123:bool. forall o124:t2.
  forall o125:t2. forall o126:bool. forall o127:t2. forall o128:t2.
  forall o129:t2. forall o130:t2. forall o131:bool. forall o132:bool.
  forall o133:bool. forall result:t__ref3. forall savestackptr1:t3.
  forall result1:t__ref. forall ra01:t. forall result2:t__ref. forall ra11:t.
  forall result3:t__ref. forall ra21:t. forall result4:t__ref. forall ra31:t.
  forall result5:t__ref. forall ra41:t. forall result6:t__ref. forall ra51:t.
  forall result7:t__ref. forall ra61:t. forall result8:t__ref. forall ra71:t.
  forall result9:t__ref3. forall saverbx1:t3. forall result10:t__ref3.
  forall saverbp1:t3. forall result11:t__ref3. forall saver121:t3.
  forall result12:t__ref3. forall saver131:t3. forall result13:t__ref3.
  forall saver141:t3. forall result14:t__ref3. forall saver151:t3.
  forall memory1:(t3,unsigned8) farray. forall result15:t__ref3.
  forall rsp1:t3. forall memory2:(t3,unsigned8) farray.
  forall result16:t__ref3. forall rsp2:t3. forall rdi:t3.
  forall memory3:(t3,unsigned8) farray. forall result17:t__ref3.
  forall rsp3:t3. forall memory4:(t3,unsigned8) farray.
  forall result18:t__ref3. forall rsp4:t3.
  forall memory5:(t3,unsigned8) farray. forall result19:t__ref3.
  forall rsp5:t3. forall memory6:(t3,unsigned8) farray.
  forall result20:t__ref3. forall rsp6:t3. forall rbx1:t3.
  forall result21:t__ref3. forall rsp7:t3. forall result22:t__ref3.
  forall rsp8:t3. forall rsp9:t3. forall result23:t__ref3. forall rsi1:t3.
  forall result24:t__ref3. forall rdi1:t3. forall result25:t__ref3.
  forall rbp1:t3. forall result26:t__ref3. forall xmm31:t3.
  forall result27:t__ref3. forall xmm21:t3. forall result28:t__ref3.
  forall xmm11:t3. forall result29:t__ref3. forall xmm01:t3.
  forall result30:t__ref3. forall rsp10:t3. forall rsp11:t3. forall rdi2:t3.
  forall rax:t3. forall result31:t__ref3. forall rsp12:t3. forall rsp13:t3.
  forall rdi3:t3. forall result32:bool__ref. forall zeroflag1:bool.
  forall result33:bool__ref. forall signflag1:bool.
  forall result34:bool__ref. forall carryflag1:bool.
  forall result35:bool__ref. forall overflowflag1:bool.
  forall zeroflag2:bool. forall carryflag2:bool. forall signflag2:bool.
  forall overflowflag2:bool. forall xmm02:t3. forall rbx2:t3.
  forall rsp14:t3. forall rbp2:t3. forall result36:t__ref3. forall xmm03:t3.
  forall rdi4:t3. forall rax1:t3. forall rbx3:t3. forall result37:t__ref3.
  forall rbp3:t3. forall result38:t__ref3. forall rsp15:t3. forall rsp16:t3.
  forall result39:bool__ref. forall zeroflag3:bool.
  forall result40:bool__ref. forall signflag3:bool.
  forall result41:bool__ref. forall carryflag3:bool. forall result42:bool.
  forall result43:bool. forall result44:bool__ref. forall overflowflag3:bool.
  forall zeroflag4:bool__ref. forall carryflag4:bool__ref.
  forall signflag4:bool__ref. forall overflowflag4:bool__ref.
  forall xmm04:t__ref3. forall rax2:t__ref3. forall rbx4:t__ref3.
  forall rsp17:t__ref3. forall rbp4:t__ref3. forall rdi5:t__ref3.
  forall zeroflag5:bool. forall carryflag5:bool. forall signflag5:bool.
  forall overflowflag5:bool. forall xmm05:t3. forall rax3:t3. forall rbx5:t3.
  forall rsp18:t3. forall rbp5:t3. forall rdi6:t3.
  forall zeroflag6:bool__ref. forall carryflag6:bool__ref.
  forall signflag6:bool__ref. forall overflowflag6:bool__ref.
  forall xmm06:t__ref3. forall rax4:t__ref3. forall rbx6:t__ref3.
  forall rsp19:t__ref3. forall rbp6:t__ref3. forall rdi7:t__ref3.
  forall zeroflag7:bool. forall carryflag7:bool. forall signflag7:bool.
  forall overflowflag7:bool. forall xmm07:t3. forall rax5:t3. forall rbx7:t3.
  forall rsp20:t3. forall rbp7:t3. forall rdi8:t3. forall rdi9:t3.
  forall rbx8:t3. forall result45:t__ref3. forall rbp8:t3.
  forall result46:t__ref3. forall rsp21:t3. forall rsp22:t3.
  forall result47:t__ref3. forall rsi2:t3. forall result48:t__ref3.
  forall rdi10:t3. forall result49:t__ref3. forall xmm32:t3.
  forall result50:t__ref3. forall xmm22:t3. forall result51:t__ref3.
  forall xmm12:t3. forall result52:t__ref3. forall xmm08:t3.
  forall result53:t__ref3. forall rsp23:t3. forall rsp24:t3. forall rax6:t3.
  forall rdi11:t3. forall result54:t__ref3. forall rsp25:t3. forall rsp26:t3.
  forall rsi3:t3. forall result55:bool__ref. forall zeroflag8:bool.
  forall result56:bool__ref. forall signflag8:bool.
  forall result57:bool__ref. forall carryflag8:bool.
  forall result58:bool__ref. forall overflowflag8:bool.
  forall zeroflag9:bool. forall carryflag9:bool. forall signflag9:bool.
  forall overflowflag9:bool. forall xmm09:t3. forall rbx9:t3.
  forall rsp27:t3. forall rbp9:t3. forall result59:t__ref3. forall xmm010:t3.
  forall rdi12:t3. forall rax7:t3. forall rbx10:t3. forall result60:t__ref3.
  forall rbp10:t3. forall result61:t__ref3. forall rsp28:t3. forall rsp29:t3.
  forall result62:bool__ref. forall zeroflag10:bool.
  forall result63:bool__ref. forall signflag10:bool.
  forall result64:bool__ref. forall carryflag10:bool. forall result65:bool.
  forall result66:bool. forall result67:bool__ref.
  forall overflowflag10:bool. forall zeroflag11:bool__ref.
  forall carryflag11:bool__ref. forall signflag11:bool__ref.
  forall overflowflag11:bool__ref. forall xmm011:t__ref3.
  forall rax8:t__ref3. forall rbx11:t__ref3. forall rsp30:t__ref3.
  forall rbp11:t__ref3. forall rdi13:t__ref3. forall zeroflag12:bool.
  forall carryflag12:bool. forall signflag12:bool.
  forall overflowflag12:bool. forall xmm012:t3. forall rax9:t3.
  forall rbx12:t3. forall rsp31:t3. forall rbp12:t3. forall rdi14:t3.
  forall zeroflag13:bool__ref. forall carryflag13:bool__ref.
  forall signflag13:bool__ref. forall overflowflag13:bool__ref.
  forall xmm013:t__ref3. forall rax10:t__ref3. forall rbx13:t__ref3.
  forall rsp32:t__ref3. forall rbp13:t__ref3. forall rdi15:t__ref3.
  forall zeroflag14:bool. forall carryflag14:bool. forall signflag14:bool.
  forall overflowflag14:bool. forall xmm014:t3. forall rax11:t3.
  forall rbx14:t3. forall rsp33:t3. forall rbp14:t3. forall rdi16:t3.
  forall rdi17:t3. forall rbx15:t3. forall result68:t__ref3. forall rbp15:t3.
  forall result69:t__ref3. forall rsp34:t3. forall rsp35:t3.
  forall result70:t__ref3. forall rsi4:t3. forall result71:t__ref3.
  forall rdi18:t3. forall result72:t__ref3. forall xmm33:t3.
  forall result73:t__ref3. forall xmm23:t3. forall result74:t__ref3.
  forall xmm13:t3. forall result75:t__ref3. forall xmm015:t3.
  forall result76:t__ref3. forall rsp36:t3. forall rsp37:t3. forall rax12:t3.
  forall rdi19:t3. forall result77:t__ref3. forall rsp38:t3. forall rsp39:t3.
  forall rcx:t3. forall result78:bool__ref. forall zeroflag15:bool.
  forall result79:bool__ref. forall signflag15:bool.
  forall result80:bool__ref. forall carryflag15:bool.
  forall result81:bool__ref. forall overflowflag15:bool.
  forall zeroflag16:bool. forall carryflag16:bool. forall signflag16:bool.
  forall overflowflag16:bool. forall xmm016:t3. forall rbx16:t3.
  forall rsp40:t3. forall rbp16:t3. forall result82:t__ref3.
  forall xmm017:t3. forall rdi20:t3. forall rax13:t3. forall rbx17:t3.
  forall result83:t__ref3. forall rbp17:t3. forall result84:t__ref3.
  forall rsp41:t3. forall rsp42:t3. forall result85:bool__ref.
  forall zeroflag17:bool. forall result86:bool__ref. forall signflag17:bool.
  forall result87:bool__ref. forall carryflag17:bool. forall result88:bool.
  forall result89:bool. forall result90:bool__ref.
  forall overflowflag17:bool. forall zeroflag18:bool__ref.
  forall carryflag18:bool__ref. forall signflag18:bool__ref.
  forall overflowflag18:bool__ref. forall xmm018:t__ref3.
  forall rax14:t__ref3. forall rbx18:t__ref3. forall rsp43:t__ref3.
  forall rbp18:t__ref3. forall rdi21:t__ref3. forall zeroflag19:bool.
  forall carryflag19:bool. forall signflag19:bool.
  forall overflowflag19:bool. forall xmm019:t3. forall rax15:t3.
  forall rbx19:t3. forall rsp44:t3. forall rbp19:t3. forall rdi22:t3.
  (((o = rsp) and ((result = { t__content3 = savestackptr }) and
  (savestackptr1 = o))) -> (((((o1 = readmem8(rsp, memory)) and
  (o1 = to_rep((memory[rsp])))) and (o2 = o1)) and ((result1 = { t__content =
  ra0 }) and (ra01 = o2))) -> (((((o3 = readmem8(add3(rsp, of_int3(1)),
  memory)) and (o3 = to_rep((memory[add3(rsp, of_int3(1))])))) and
  (o4 = o3)) and ((result2 = { t__content = ra1 }) and (ra11 = o4))) ->
  (((((o5 = readmem8(add3(rsp, of_int3(2)), memory)) and
  (o5 = to_rep((memory[add3(rsp, of_int3(2))])))) and (o6 = o5)) and
  ((result3 = { t__content = ra2 }) and (ra21 = o6))) ->
  (((((o7 = readmem8(add3(rsp, of_int3(3)), memory)) and
  (o7 = to_rep((memory[add3(rsp, of_int3(3))])))) and (o8 = o7)) and
  ((result4 = { t__content = ra3 }) and (ra31 = o8))) ->
  (((((o9 = readmem8(add3(rsp, of_int3(4)), memory)) and
  (o9 = to_rep((memory[add3(rsp, of_int3(4))])))) and (o10 = o9)) and
  ((result5 = { t__content = ra4 }) and (ra41 = o10))) ->
  (((((o11 = readmem8(add3(rsp, of_int3(5)), memory)) and
  (o11 = to_rep((memory[add3(rsp, of_int3(5))])))) and (o12 = o11)) and
  ((result6 = ra5) and (ra51 = o12))) -> (((((o13 = readmem8(add3(rsp,
  of_int3(6)), memory)) and (o13 = to_rep((memory[add3(rsp,
  of_int3(6))])))) and (o14 = o13)) and ((result7 = ra6) and
  (ra61 = o14))) -> (((((o15 = readmem8(add3(rsp, of_int3(7)), memory)) and
  (o15 = to_rep((memory[add3(rsp, of_int3(7))])))) and (o16 = o15)) and
  ((result8 = ra7) and (ra71 = o16))) -> (((o17 = rbx) and
  ((result9 = saverbx) and (saverbx1 = o17))) -> (((o18 = rbp) and
  ((result10 = saverbp) and (saverbp1 = o18))) -> (((o19 = r12) and
  ((result11 = saver12) and (saver121 = o19))) -> (((o20 = r13) and
  ((result12 = saver13) and (saver131 = o20))) -> (((o21 = r14) and
  ((result13 = saver14) and (saver141 = o21))) -> (((o22 = r15) and
  ((result14 = saver15) and (saver151 = o22))) ->
  ((rsp = of_int3(12105675798371893247)) -> ((((((((((bw_and3(r15,
  of_int3(255)) = toBig2(to_rep((memory1[sub3(rsp, of_int3(8))])))) and
  (bw_and3(r15, of_int3(65280)) = mul3(toBig2(to_rep((memory1[add3(sub3(rsp,
  of_int3(8)), of_int3(1))]))), of_int3(256)))) and (bw_and3(r15,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory1[add3(sub3(rsp,
  of_int3(8)), of_int3(2))]))), of_int3(65536)))) and (bw_and3(r15,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory1[add3(sub3(rsp,
  of_int3(8)), of_int3(3))]))), of_int3(16777216)))) and (bw_and3(r15,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory1[add3(sub3(rsp,
  of_int3(8)), of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(r15,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory1[add3(sub3(rsp,
  of_int3(8)), of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(r15,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory1[add3(sub3(rsp,
  of_int3(8)), of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(r15,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory1[add3(sub3(rsp,
  of_int3(8)), of_int3(7))]))), of_int3(72057594037927936)))) and
  (forall i:t3. ((ule3(of_int3(0), i) and ule3(i,
  of_int3(18446744073709551615))) -> (((((((((not (i = sub3(rsp,
  of_int3(8)))) and (not (i = add3(sub3(rsp, of_int3(8)), of_int3(1))))) and
  (not (i = add3(sub3(rsp, of_int3(8)), of_int3(2))))) and
  (not (i = add3(sub3(rsp, of_int3(8)), of_int3(3))))) and
  (not (i = add3(sub3(rsp, of_int3(8)), of_int3(4))))) and
  (not (i = add3(sub3(rsp, of_int3(8)), of_int3(5))))) and
  (not (i = add3(sub3(rsp, of_int3(8)), of_int3(6))))) and
  (not (i = add3(sub3(rsp, of_int3(8)), of_int3(7))))) ->
  (to_rep((memory1[i])) = to_rep((memory[i]))))))) -> (((result15 = {
  t__content3 = rsp }) and (rsp1 = sub3(rsp, of_int3(8)))) ->
  ((((((((((bw_and3(r14, of_int3(255)) = toBig2(to_rep((memory2[sub3(rsp1,
  of_int3(8))])))) and (bw_and3(r14,
  of_int3(65280)) = mul3(toBig2(to_rep((memory2[add3(sub3(rsp1, of_int3(8)),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(r14,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory2[add3(sub3(rsp1,
  of_int3(8)), of_int3(2))]))), of_int3(65536)))) and (bw_and3(r14,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory2[add3(sub3(rsp1,
  of_int3(8)), of_int3(3))]))), of_int3(16777216)))) and (bw_and3(r14,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory2[add3(sub3(rsp1,
  of_int3(8)), of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(r14,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory2[add3(sub3(rsp1,
  of_int3(8)), of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(r14,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory2[add3(sub3(rsp1,
  of_int3(8)), of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(r14,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory2[add3(sub3(rsp1,
  of_int3(8)), of_int3(7))]))), of_int3(72057594037927936)))) and
  (forall i:t3. ((ule3(of_int3(0), i) and ule3(i,
  of_int3(18446744073709551615))) -> (((((((((not (i = sub3(rsp1,
  of_int3(8)))) and (not (i = add3(sub3(rsp1, of_int3(8)), of_int3(1))))) and
  (not (i = add3(sub3(rsp1, of_int3(8)), of_int3(2))))) and
  (not (i = add3(sub3(rsp1, of_int3(8)), of_int3(3))))) and
  (not (i = add3(sub3(rsp1, of_int3(8)), of_int3(4))))) and
  (not (i = add3(sub3(rsp1, of_int3(8)), of_int3(5))))) and
  (not (i = add3(sub3(rsp1, of_int3(8)), of_int3(6))))) and
  (not (i = add3(sub3(rsp1, of_int3(8)), of_int3(7))))) ->
  (to_rep((memory2[i])) = to_rep((memory1[i]))))))) -> (((result16 = {
  t__content3 = rsp1 }) and (rsp2 = sub3(rsp1, of_int3(8)))) ->
  ((writereg32post(rdi, of_int2(4198504)) = true) -> ((((((((((bw_and3(r13,
  of_int3(255)) = toBig2(to_rep((memory3[sub3(rsp2, of_int3(8))])))) and
  (bw_and3(r13, of_int3(65280)) = mul3(toBig2(to_rep((memory3[add3(sub3(rsp2,
  of_int3(8)), of_int3(1))]))), of_int3(256)))) and (bw_and3(r13,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory3[add3(sub3(rsp2,
  of_int3(8)), of_int3(2))]))), of_int3(65536)))) and (bw_and3(r13,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory3[add3(sub3(rsp2,
  of_int3(8)), of_int3(3))]))), of_int3(16777216)))) and (bw_and3(r13,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory3[add3(sub3(rsp2,
  of_int3(8)), of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(r13,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory3[add3(sub3(rsp2,
  of_int3(8)), of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(r13,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory3[add3(sub3(rsp2,
  of_int3(8)), of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(r13,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory3[add3(sub3(rsp2,
  of_int3(8)), of_int3(7))]))), of_int3(72057594037927936)))) and
  (forall i:t3. ((ule3(of_int3(0), i) and ule3(i,
  of_int3(18446744073709551615))) -> (((((((((not (i = sub3(rsp2,
  of_int3(8)))) and (not (i = add3(sub3(rsp2, of_int3(8)), of_int3(1))))) and
  (not (i = add3(sub3(rsp2, of_int3(8)), of_int3(2))))) and
  (not (i = add3(sub3(rsp2, of_int3(8)), of_int3(3))))) and
  (not (i = add3(sub3(rsp2, of_int3(8)), of_int3(4))))) and
  (not (i = add3(sub3(rsp2, of_int3(8)), of_int3(5))))) and
  (not (i = add3(sub3(rsp2, of_int3(8)), of_int3(6))))) and
  (not (i = add3(sub3(rsp2, of_int3(8)), of_int3(7))))) ->
  (to_rep((memory3[i])) = to_rep((memory2[i]))))))) -> (((result17 = {
  t__content3 = rsp2 }) and (rsp3 = sub3(rsp2, of_int3(8)))) ->
  ((((((((((bw_and3(r12, of_int3(255)) = toBig2(to_rep((memory4[sub3(rsp3,
  of_int3(8))])))) and (bw_and3(r12,
  of_int3(65280)) = mul3(toBig2(to_rep((memory4[add3(sub3(rsp3, of_int3(8)),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(r12,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory4[add3(sub3(rsp3,
  of_int3(8)), of_int3(2))]))), of_int3(65536)))) and (bw_and3(r12,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory4[add3(sub3(rsp3,
  of_int3(8)), of_int3(3))]))), of_int3(16777216)))) and (bw_and3(r12,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory4[add3(sub3(rsp3,
  of_int3(8)), of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(r12,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory4[add3(sub3(rsp3,
  of_int3(8)), of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(r12,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory4[add3(sub3(rsp3,
  of_int3(8)), of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(r12,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory4[add3(sub3(rsp3,
  of_int3(8)), of_int3(7))]))), of_int3(72057594037927936)))) and
  (forall i:t3. ((ule3(of_int3(0), i) and ule3(i,
  of_int3(18446744073709551615))) -> (((((((((not (i = sub3(rsp3,
  of_int3(8)))) and (not (i = add3(sub3(rsp3, of_int3(8)), of_int3(1))))) and
  (not (i = add3(sub3(rsp3, of_int3(8)), of_int3(2))))) and
  (not (i = add3(sub3(rsp3, of_int3(8)), of_int3(3))))) and
  (not (i = add3(sub3(rsp3, of_int3(8)), of_int3(4))))) and
  (not (i = add3(sub3(rsp3, of_int3(8)), of_int3(5))))) and
  (not (i = add3(sub3(rsp3, of_int3(8)), of_int3(6))))) and
  (not (i = add3(sub3(rsp3, of_int3(8)), of_int3(7))))) ->
  (to_rep((memory4[i])) = to_rep((memory3[i]))))))) -> (((result18 = {
  t__content3 = rsp3 }) and (rsp4 = sub3(rsp3, of_int3(8)))) ->
  ((((((((((bw_and3(rbp, of_int3(255)) = toBig2(to_rep((memory5[sub3(rsp4,
  of_int3(8))])))) and (bw_and3(rbp,
  of_int3(65280)) = mul3(toBig2(to_rep((memory5[add3(sub3(rsp4, of_int3(8)),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(rbp,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory5[add3(sub3(rsp4,
  of_int3(8)), of_int3(2))]))), of_int3(65536)))) and (bw_and3(rbp,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory5[add3(sub3(rsp4,
  of_int3(8)), of_int3(3))]))), of_int3(16777216)))) and (bw_and3(rbp,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory5[add3(sub3(rsp4,
  of_int3(8)), of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(rbp,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory5[add3(sub3(rsp4,
  of_int3(8)), of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(rbp,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory5[add3(sub3(rsp4,
  of_int3(8)), of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(rbp,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory5[add3(sub3(rsp4,
  of_int3(8)), of_int3(7))]))), of_int3(72057594037927936)))) and
  (forall i:t3. ((ule3(of_int3(0), i) and ule3(i,
  of_int3(18446744073709551615))) -> (((((((((not (i = sub3(rsp4,
  of_int3(8)))) and (not (i = add3(sub3(rsp4, of_int3(8)), of_int3(1))))) and
  (not (i = add3(sub3(rsp4, of_int3(8)), of_int3(2))))) and
  (not (i = add3(sub3(rsp4, of_int3(8)), of_int3(3))))) and
  (not (i = add3(sub3(rsp4, of_int3(8)), of_int3(4))))) and
  (not (i = add3(sub3(rsp4, of_int3(8)), of_int3(5))))) and
  (not (i = add3(sub3(rsp4, of_int3(8)), of_int3(6))))) and
  (not (i = add3(sub3(rsp4, of_int3(8)), of_int3(7))))) ->
  (to_rep((memory5[i])) = to_rep((memory4[i]))))))) -> (((result19 = {
  t__content3 = rsp4 }) and (rsp5 = sub3(rsp4, of_int3(8)))) ->
  ((((((((((bw_and3(rbx, of_int3(255)) = toBig2(to_rep((memory6[sub3(rsp5,
  of_int3(8))])))) and (bw_and3(rbx,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(sub3(rsp5, of_int3(8)),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(rbx,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(sub3(rsp5,
  of_int3(8)), of_int3(2))]))), of_int3(65536)))) and (bw_and3(rbx,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(sub3(rsp5,
  of_int3(8)), of_int3(3))]))), of_int3(16777216)))) and (bw_and3(rbx,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(sub3(rsp5,
  of_int3(8)), of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(rbx,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(sub3(rsp5,
  of_int3(8)), of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(rbx,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(sub3(rsp5,
  of_int3(8)), of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(rbx,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(sub3(rsp5,
  of_int3(8)), of_int3(7))]))), of_int3(72057594037927936)))) and
  (forall i:t3. ((ule3(of_int3(0), i) and ule3(i,
  of_int3(18446744073709551615))) -> (((((((((not (i = sub3(rsp5,
  of_int3(8)))) and (not (i = add3(sub3(rsp5, of_int3(8)), of_int3(1))))) and
  (not (i = add3(sub3(rsp5, of_int3(8)), of_int3(2))))) and
  (not (i = add3(sub3(rsp5, of_int3(8)), of_int3(3))))) and
  (not (i = add3(sub3(rsp5, of_int3(8)), of_int3(4))))) and
  (not (i = add3(sub3(rsp5, of_int3(8)), of_int3(5))))) and
  (not (i = add3(sub3(rsp5, of_int3(8)), of_int3(6))))) and
  (not (i = add3(sub3(rsp5, of_int3(8)), of_int3(7))))) ->
  (to_rep((memory6[i])) = to_rep((memory5[i]))))))) -> (((result20 = {
  t__content3 = rsp5 }) and (rsp6 = sub3(rsp5, of_int3(8)))) ->
  ((writereg32post(rbx1, of_int2(0)) = true) -> (((result21 = { t__content3 =
  rsp6 }) and (rsp7 = sub3(rsp6, of_int3(104)))) -> (((result22 = {
  t__content3 = rsp7 }) and (rsp8 = sub3(rsp7, of_int3(8)))) ->
  ((rsp9 = add3(rsp8, of_int3(8))) -> (((result23 = { t__content3 = rsi
  }) and (rsi1 = add3(rsp9, of_int3(64)))) -> (((result24 = { t__content3 =
  rdi }) and (rdi1 = add3(rsp9, of_int3(44)))) -> (((result25 = {
  t__content3 = rbp }) and (rbp1 = add3(rsp9, of_int3(64)))) ->
  ((((o23 = readmem64(of_int3(4198776), memory6)) and ((((((((bw_and3(o23,
  of_int3(255)) = toBig2(to_rep((memory6[of_int3(4198776)])))) and
  (bw_and3(o23,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o23,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o23,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o23,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o23,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o23,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o23,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result26 = {
  t__content3 = xmm3 }) and (xmm31 = o23))) ->
  ((((o24 = readmem64(of_int3(4198784), memory6)) and ((((((((bw_and3(o24,
  of_int3(255)) = toBig2(to_rep((memory6[of_int3(4198784)])))) and
  (bw_and3(o24,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198784),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o24,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198784),
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o24,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198784),
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o24,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198784),
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o24,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198784),
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o24,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198784),
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o24,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198784),
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result27 = {
  t__content3 = xmm2 }) and (xmm21 = o24))) ->
  ((((o25 = readmem64(of_int3(4198792), memory6)) and ((((((((bw_and3(o25,
  of_int3(255)) = toBig2(to_rep((memory6[of_int3(4198792)])))) and
  (bw_and3(o25,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198792),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o25,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198792),
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o25,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198792),
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o25,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198792),
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o25,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198792),
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o25,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198792),
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o25,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198792),
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result28 = {
  t__content3 = xmm1 }) and (xmm11 = o25))) ->
  ((((o26 = readmem64(of_int3(4198768), memory6)) and ((((((((bw_and3(o26,
  of_int3(255)) = toBig2(to_rep((memory6[of_int3(4198768)])))) and
  (bw_and3(o26,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o26,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o26,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o26,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o26,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o26,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o26,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result29 = {
  t__content3 = xmm0 }) and (xmm01 = o26))) -> (((result30 = { t__content3 =
  rsp9 }) and (rsp10 = sub3(rsp9, of_int3(8)))) -> ((rsp11 = add3(rsp10,
  of_int3(8))) -> ((writereg32post(rdi2, of_int2(4198688)) = true) ->
  ((writereg32post(rax, of_int2(0)) = true) -> (((result31 = { t__content3 =
  rsp11 }) and (rsp12 = sub3(rsp11, of_int3(8)))) -> ((rsp13 = add3(rsp12,
  of_int3(8))) -> (((((((o27 = esp(rsp13)) and (o27 = readreg32(rsp13))) and
  (o28 = add2(o27, of_int2(44)))) and (o29 = toBig(o28))) and
  ((o30 = readmem32(o29, memory6)) and ((((bw_and2(o30,
  of_int2(255)) = toBig1(to_rep((memory6[o29])))) and (bw_and2(o30,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(o29, of_int3(1))]))),
  of_int2(256)))) and (bw_and2(o30,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(o29, of_int3(2))]))),
  of_int2(65536)))) and (bw_and2(o30,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(o29,
  of_int3(3))]))), of_int2(16777216)))))) and (writereg32post(rdi3,
  o30) = true)) -> ((((((o31 = edi(rdi3)) and (o31 = readreg32(rdi3))) and
  (((o32 = edi(rdi3)) and (o32 = readreg32(rdi3))) and (o33 = bw_and2(o32,
  o31)))) and (((o33 = of_int2(0)) and (o34 = true)) or
  ((not (o33 = of_int2(0))) and (o34 = false)))) and ((result32 = {
  bool__content = zeroflag }) and (zeroflag1 = o34))) ->
  ((((((o35 = edi(rdi3)) and (o35 = readreg32(rdi3))) and
  (((o36 = edi(rdi3)) and (o36 = readreg32(rdi3))) and (o37 = bw_and2(o36,
  o35)))) and ((ugt2(o37, of_int2(2147483647)) and (o38 = true)) or
  ((not ugt2(o37, of_int2(2147483647))) and (o38 = false)))) and
  ((result33 = { bool__content = signflag }) and (signflag1 = o38))) ->
  (((result34 = { bool__content = carryflag }) and
  (carryflag1 = of_int4(0))) -> (((result35 = { bool__content = overflowflag
  }) and (overflowflag1 = of_int4(0))) -> (((((not (zeroflag1 = true)) and
  (to_int4(signflag1) = to_int4(overflowflag1))) and
  ((((temp___393 = rbx1) and ((temp___394 = rsp13) and
  ((temp___392 = rsp13) and ((temp___391 = overflowflag1) and
  ((temp___390 = signflag1) and ((temp___389 = rax) and
  ((temp___387 = carryflag1) and ((temp___388 = xmm01) and
  ((temp___386 = rbp1) and ((temp___385 = rdi3) and
  ((temp___384 = zeroflag1) and ((rsp14 = temp___394) and
  (((not (zeroflag2 = true)) and ((signflag2 = true) <->
  (overflowflag2 = true))) and ((((o39 = readmem64(rbp2, memory6)) and
  ((((((((bw_and3(o39, of_int3(255)) = toBig2(to_rep((memory6[rbp2])))) and
  (bw_and3(o39, of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(rbp2,
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o39,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(rbp2,
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o39,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(rbp2,
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o39,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(rbp2,
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o39,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(rbp2,
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o39,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(rbp2,
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o39,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(rbp2,
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result36 = {
  t__content3 = xmm02 }) and (xmm03 = o39))) and ((writereg32post(rdi4,
  of_int2(4198699)) = true) and ((writereg32post(rax1,
  of_int2(1)) = true) and (((((o40 = ebx(rbx2)) and
  (o40 = readreg32(rbx2))) and (o41 = add2(o40, of_int2(1)))) and
  (writereg32post(rbx3, o41) = true)) and (((result37 = { t__content3 = rbp2
  }) and (rbp3 = add3(rbp2, of_int3(8)))) and (((result38 = { t__content3 =
  rsp14 }) and (rsp15 = sub3(rsp14, of_int3(8)))) and ((rsp16 = add3(rsp15,
  of_int3(8))) and ((((((o42 = ebx(rbx3)) and (o42 = readreg32(rbx3))) and
  (((o43 = readmem32(sub3(add3(rsp16, of_int3(152)), of_int3(108)),
  memory6)) and ((((bw_and2(o43,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp16, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o43,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o43,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o43,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  (o44 = sub2(o43, o42)))) and (((o44 = of_int2(0)) and (o45 = true)) or
  ((not (o44 = of_int2(0))) and (o45 = false)))) and ((result39 = {
  bool__content = zeroflag2 }) and (zeroflag3 = o45))) and
  ((((((o46 = ebx(rbx3)) and (o46 = readreg32(rbx3))) and
  (((o47 = readmem32(sub3(add3(rsp16, of_int3(152)), of_int3(108)),
  memory6)) and ((((bw_and2(o47,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp16, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o47,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o47,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o47,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  (o48 = sub2(o47, o46)))) and ((ugt2(o48, of_int2(2147483647)) and
  (o49 = true)) or ((not ugt2(o48, of_int2(2147483647))) and
  (o49 = false)))) and ((result40 = { bool__content = signflag2 }) and
  (signflag3 = o49))) and (((((o50 = ebx(rbx3)) and
  (o50 = readreg32(rbx3))) and (((o51 = readmem32(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), memory6)) and ((((bw_and2(o51,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp16, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o51,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o51,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o51,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  ((ult2(o51, o50) and (o52 = true)) or ((not ult2(o51, o50)) and
  (o52 = false))))) and ((result41 = { bool__content = carryflag2 }) and
  (carryflag3 = o52))) and (((((((not (signflag3 = true)) and
  (((o56 = readmem32(sub3(add3(rsp16, of_int3(152)), of_int3(108)),
  memory6)) and ((((bw_and2(o56,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp16, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o56,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o56,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o56,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  ((ugt2(o56, of_int2(2147483647)) and (result42 = true)) or ((not ugt2(o56,
  of_int2(2147483647))) and (result42 = false))))) or ((signflag3 = true) and
  (result42 = false))) and (((result42 = true) and (((o55 = ebx(rbx3)) and
  (o55 = readreg32(rbx3))) and ((ule2(o55, of_int2(2147483647)) and
  (o57 = true)) or ((not ule2(o55, of_int2(2147483647))) and
  (o57 = false))))) or ((not (result42 = true)) and (o57 = false)))) and
  (((((signflag3 = true) and (((o54 = ebx(rbx3)) and
  (o54 = readreg32(rbx3))) and ((ugt2(o54, of_int2(2147483647)) and
  (result43 = true)) or ((not ugt2(o54, of_int2(2147483647))) and
  (result43 = false))))) or ((not (signflag3 = true)) and
  (result43 = false))) and (((result43 = true) and
  (((o53 = readmem32(sub3(add3(rsp16, of_int3(152)), of_int3(108)),
  memory6)) and ((((bw_and2(o53,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp16, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o53,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o53,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o53,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp16,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  ((ule2(o53, of_int2(2147483647)) and (o58 = true)) or ((not ule2(o53,
  of_int2(2147483647))) and (o58 = false))))) or ((not (result43 = true)) and
  (o58 = false)))) and (o59 = match_bool(o58, true, o57)))) and
  ((result44 = { bool__content = overflowflag2 }) and
  (overflowflag3 = o59))) and (not ((not (zeroflag3 = true)) and
  (to_int4(signflag3) = to_int4(overflowflag3)))))))))))))))))))))))))))) and
  (((rdi5 = { t__content3 = rdi4 }) and ((rbp4 = { t__content3 = rbp3 }) and
  ((rsp17 = { t__content3 = rsp16 }) and ((rbx4 = { t__content3 = rbx3 }) and
  ((rax2 = { t__content3 = rax1 }) and ((xmm04 = { t__content3 = xmm03 }) and
  ((overflowflag4 = { bool__content = overflowflag3 }) and ((signflag4 = {
  bool__content = signflag3 }) and ((carryflag4 = { bool__content =
  carryflag3 }) and (zeroflag4 = { bool__content = zeroflag3 })))))))))) and
  ((rdi6 = rdi4) and ((rbp5 = rbp3) and ((rsp18 = rsp16) and
  ((rbx5 = rbx3) and ((rax3 = rax1) and ((xmm05 = xmm03) and
  ((overflowflag5 = overflowflag3) and ((signflag5 = signflag3) and
  ((carryflag5 = carryflag3) and (zeroflag5 = zeroflag3)))))))))))) and
  (((rdi7 = rdi5) and ((rbp6 = rbp4) and ((rsp19 = rsp17) and
  ((rbx6 = rbx4) and ((rax4 = rax2) and ((xmm06 = xmm04) and
  ((overflowflag6 = overflowflag4) and ((signflag6 = signflag4) and
  ((carryflag6 = carryflag4) and (zeroflag6 = zeroflag4)))))))))) and
  ((rdi8 = rdi6) and ((rbp7 = rbp5) and ((rsp20 = rsp18) and
  ((rbx7 = rbx5) and ((rax5 = rax3) and ((xmm07 = xmm05) and
  ((overflowflag7 = overflowflag5) and ((signflag7 = signflag5) and
  ((carryflag7 = carryflag5) and (zeroflag7 = zeroflag5))))))))))))) or
  ((not ((not (zeroflag1 = true)) and
  (to_int4(signflag1) = to_int4(overflowflag1)))) and (((rdi7 = {
  t__content3 = rdi3 }) and ((rbp6 = { t__content3 = rbp1 }) and ((rsp19 = {
  t__content3 = rsp13 }) and ((rbx6 = { t__content3 = rbx1 }) and ((rax4 = {
  t__content3 = rax }) and ((xmm06 = { t__content3 = xmm01 }) and
  ((overflowflag6 = { bool__content = overflowflag1 }) and ((signflag6 = {
  bool__content = signflag1 }) and ((carryflag6 = { bool__content =
  carryflag1 }) and (zeroflag6 = { bool__content = zeroflag1 })))))))))) and
  ((rdi8 = rdi3) and ((rbp7 = rbp1) and ((rsp20 = rsp13) and
  ((rbx7 = rbx1) and ((rax5 = rax) and ((xmm07 = xmm01) and
  ((overflowflag7 = overflowflag1) and ((signflag7 = signflag1) and
  ((carryflag7 = carryflag1) and (zeroflag7 = zeroflag1))))))))))))) ->
  ((writereg32post(rdi9, of_int2(10)) = true) -> ((writereg32post(rbx8,
  of_int2(0)) = true) -> (((result45 = rbp6) and
  (rbp8 = add3((rsp19).t__content3, of_int3(64)))) ->
  (((result46 = rsp19) and (rsp21 = sub3((rsp19).t__content3,
  of_int3(8)))) -> ((rsp22 = add3(rsp21, of_int3(8))) -> (((result47 = {
  t__content3 = rsi1 }) and (rsi2 = add3(rsp22, of_int3(64)))) ->
  (((result48 = { t__content3 = rdi9 }) and (rdi10 = add3(rsp22,
  of_int3(44)))) -> ((((o60 = readmem64(of_int3(4198776), memory6)) and
  ((((((((bw_and3(o60,
  of_int3(255)) = toBig2(to_rep((memory6[of_int3(4198776)])))) and
  (bw_and3(o60,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o60,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o60,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o60,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o60,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o60,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o60,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198776),
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result49 = {
  t__content3 = xmm31 }) and (xmm32 = o60))) ->
  ((((o61 = readmem64(of_int3(4198800), memory6)) and ((((((((bw_and3(o61,
  of_int3(255)) = toBig2(to_rep((memory6[of_int3(4198800)])))) and
  (bw_and3(o61,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198800),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o61,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198800),
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o61,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198800),
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o61,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198800),
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o61,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198800),
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o61,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198800),
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o61,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198800),
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result50 = {
  t__content3 = xmm21 }) and (xmm22 = o61))) ->
  ((((o62 = readmem64(of_int3(4198808), memory6)) and ((((((((bw_and3(o62,
  of_int3(255)) = toBig2(to_rep((memory6[of_int3(4198808)])))) and
  (bw_and3(o62,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198808),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o62,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198808),
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o62,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198808),
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o62,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198808),
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o62,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198808),
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o62,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198808),
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o62,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198808),
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result51 = {
  t__content3 = xmm11 }) and (xmm12 = o62))) ->
  ((((o63 = readmem64(of_int3(4198768), memory6)) and ((((((((bw_and3(o63,
  of_int3(255)) = toBig2(to_rep((memory6[of_int3(4198768)])))) and
  (bw_and3(o63,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o63,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o63,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o63,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o63,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o63,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o63,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result52 = xmm06) and
  (xmm08 = o63))) -> (((result53 = { t__content3 = rsp22 }) and
  (rsp23 = sub3(rsp22, of_int3(8)))) -> ((rsp24 = add3(rsp23, of_int3(8))) ->
  ((writereg32post(rax6, of_int2(0)) = true) -> ((writereg32post(rdi11,
  of_int2(4198688)) = true) -> (((result54 = { t__content3 = rsp24 }) and
  (rsp25 = sub3(rsp24, of_int3(8)))) -> ((rsp26 = add3(rsp25, of_int3(8))) ->
  (((((((o64 = esp(rsp26)) and (o64 = readreg32(rsp26))) and (o65 = add2(o64,
  of_int2(44)))) and (o66 = toBig(o65))) and ((o67 = readmem32(o66,
  memory6)) and ((((bw_and2(o67,
  of_int2(255)) = toBig1(to_rep((memory6[o66])))) and (bw_and2(o67,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(o66, of_int3(1))]))),
  of_int2(256)))) and (bw_and2(o67,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(o66, of_int3(2))]))),
  of_int2(65536)))) and (bw_and2(o67,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(o66,
  of_int3(3))]))), of_int2(16777216)))))) and (writereg32post(rsi3,
  o67) = true)) -> ((((((o68 = esi(rsi3)) and (o68 = readreg32(rsi3))) and
  (((o69 = esi(rsi3)) and (o69 = readreg32(rsi3))) and (o70 = bw_and2(o69,
  o68)))) and (((o70 = of_int2(0)) and (o71 = true)) or
  ((not (o70 = of_int2(0))) and (o71 = false)))) and
  ((result55 = zeroflag6) and (zeroflag8 = o71))) ->
  ((((((o72 = esi(rsi3)) and (o72 = readreg32(rsi3))) and
  (((o73 = esi(rsi3)) and (o73 = readreg32(rsi3))) and (o74 = bw_and2(o73,
  o72)))) and ((ugt2(o74, of_int2(2147483647)) and (o75 = true)) or
  ((not ugt2(o74, of_int2(2147483647))) and (o75 = false)))) and
  ((result56 = signflag6) and (signflag8 = o75))) ->
  (((result57 = carryflag6) and (carryflag8 = of_int4(0))) ->
  (((result58 = overflowflag6) and (overflowflag8 = of_int4(0))) ->
  (((((not (zeroflag8 = true)) and
  (to_int4(signflag8) = to_int4(overflowflag8))) and
  ((((temp___404 = rbx8) and ((temp___403 = rsp26) and
  ((temp___402 = overflowflag8) and ((temp___401 = signflag8) and
  ((temp___400 = rax6) and ((temp___398 = carryflag8) and
  ((temp___399 = xmm08) and ((temp___397 = rbp8) and
  ((temp___396 = rdi11) and ((temp___395 = zeroflag8) and
  ((temp___405 = rsp26) and ((rsp27 = temp___405) and
  (((not (zeroflag9 = true)) and ((signflag9 = true) <->
  (overflowflag9 = true))) and ((((o76 = readmem64(rbp9, memory6)) and
  ((((((((bw_and3(o76, of_int3(255)) = toBig2(to_rep((memory6[rbp9])))) and
  (bw_and3(o76, of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(rbp9,
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o76,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(rbp9,
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o76,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(rbp9,
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o76,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(rbp9,
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o76,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(rbp9,
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o76,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(rbp9,
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o76,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(rbp9,
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result59 = {
  t__content3 = xmm09 }) and (xmm010 = o76))) and ((writereg32post(rdi12,
  of_int2(4198699)) = true) and ((writereg32post(rax7,
  of_int2(1)) = true) and (((((o77 = ebx(rbx9)) and
  (o77 = readreg32(rbx9))) and (o78 = add2(o77, of_int2(1)))) and
  (writereg32post(rbx10, o78) = true)) and (((result60 = { t__content3 = rbp9
  }) and (rbp10 = add3(rbp9, of_int3(8)))) and (((result61 = { t__content3 =
  rsp27 }) and (rsp28 = sub3(rsp27, of_int3(8)))) and ((rsp29 = add3(rsp28,
  of_int3(8))) and ((((((o79 = ebx(rbx10)) and (o79 = readreg32(rbx10))) and
  (((o80 = readmem32(sub3(add3(rsp29, of_int3(152)), of_int3(108)),
  memory6)) and ((((bw_and2(o80,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp29, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o80,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o80,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o80,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  (o81 = sub2(o80, o79)))) and (((o81 = of_int2(0)) and (o82 = true)) or
  ((not (o81 = of_int2(0))) and (o82 = false)))) and ((result62 = {
  bool__content = zeroflag9 }) and (zeroflag10 = o82))) and
  ((((((o83 = ebx(rbx10)) and (o83 = readreg32(rbx10))) and
  (((o84 = readmem32(sub3(add3(rsp29, of_int3(152)), of_int3(108)),
  memory6)) and ((((bw_and2(o84,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp29, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o84,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o84,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o84,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  (o85 = sub2(o84, o83)))) and ((ugt2(o85, of_int2(2147483647)) and
  (o86 = true)) or ((not ugt2(o85, of_int2(2147483647))) and
  (o86 = false)))) and ((result63 = { bool__content = signflag9 }) and
  (signflag10 = o86))) and (((((o87 = ebx(rbx10)) and
  (o87 = readreg32(rbx10))) and (((o88 = readmem32(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), memory6)) and ((((bw_and2(o88,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp29, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o88,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o88,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o88,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  ((ult2(o88, o87) and (o89 = true)) or ((not ult2(o88, o87)) and
  (o89 = false))))) and ((result64 = { bool__content = carryflag9 }) and
  (carryflag10 = o89))) and (((((((not (signflag10 = true)) and
  (((o93 = readmem32(sub3(add3(rsp29, of_int3(152)), of_int3(108)),
  memory6)) and ((((bw_and2(o93,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp29, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o93,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o93,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o93,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  ((ugt2(o93, of_int2(2147483647)) and (result65 = true)) or ((not ugt2(o93,
  of_int2(2147483647))) and (result65 = false))))) or
  ((signflag10 = true) and (result65 = false))) and (((result65 = true) and
  (((o92 = ebx(rbx10)) and (o92 = readreg32(rbx10))) and ((ule2(o92,
  of_int2(2147483647)) and (o94 = true)) or ((not ule2(o92,
  of_int2(2147483647))) and (o94 = false))))) or ((not (result65 = true)) and
  (o94 = false)))) and (((((signflag10 = true) and (((o91 = ebx(rbx10)) and
  (o91 = readreg32(rbx10))) and ((ugt2(o91, of_int2(2147483647)) and
  (result66 = true)) or ((not ugt2(o91, of_int2(2147483647))) and
  (result66 = false))))) or ((not (signflag10 = true)) and
  (result66 = false))) and (((result66 = true) and
  (((o90 = readmem32(sub3(add3(rsp29, of_int3(152)), of_int3(108)),
  memory6)) and ((((bw_and2(o90,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp29, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o90,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o90,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o90,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp29,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  ((ule2(o90, of_int2(2147483647)) and (o95 = true)) or ((not ule2(o90,
  of_int2(2147483647))) and (o95 = false))))) or ((not (result66 = true)) and
  (o95 = false)))) and (o96 = match_bool(o95, true, o94)))) and
  ((result67 = { bool__content = overflowflag9 }) and
  (overflowflag10 = o96))) and (not ((not (zeroflag10 = true)) and
  (to_int4(signflag10) = to_int4(overflowflag10)))))))))))))))))))))))))))) and
  (((rdi13 = { t__content3 = rdi12 }) and ((rbp11 = { t__content3 = rbp10
  }) and ((rsp30 = { t__content3 = rsp29 }) and ((rbx11 = { t__content3 =
  rbx10 }) and ((rax8 = { t__content3 = rax7 }) and ((xmm011 = {
  t__content3 = xmm010 }) and ((overflowflag11 = { bool__content =
  overflowflag10 }) and ((signflag11 = { bool__content = signflag10 }) and
  ((carryflag11 = { bool__content = carryflag10 }) and (zeroflag11 = {
  bool__content = zeroflag10 })))))))))) and ((rdi14 = rdi12) and
  ((rbp12 = rbp10) and ((rsp31 = rsp29) and ((rbx12 = rbx10) and
  ((rax9 = rax7) and ((xmm012 = xmm010) and
  ((overflowflag12 = overflowflag10) and ((signflag12 = signflag10) and
  ((carryflag12 = carryflag10) and (zeroflag12 = zeroflag10)))))))))))) and
  (((rdi15 = rdi13) and ((rbp13 = rbp11) and ((rsp32 = rsp30) and
  ((rbx13 = rbx11) and ((rax10 = rax8) and ((xmm013 = xmm011) and
  ((overflowflag13 = overflowflag11) and ((signflag13 = signflag11) and
  ((carryflag13 = carryflag11) and (zeroflag13 = zeroflag11)))))))))) and
  ((rdi16 = rdi14) and ((rbp14 = rbp12) and ((rsp33 = rsp31) and
  ((rbx14 = rbx12) and ((rax11 = rax9) and ((xmm014 = xmm012) and
  ((overflowflag14 = overflowflag12) and ((signflag14 = signflag12) and
  ((carryflag14 = carryflag12) and (zeroflag14 = zeroflag12))))))))))))) or
  ((not ((not (zeroflag8 = true)) and
  (to_int4(signflag8) = to_int4(overflowflag8)))) and (((rdi15 = {
  t__content3 = rdi11 }) and ((rbp13 = { t__content3 = rbp8 }) and
  ((rsp32 = { t__content3 = rsp26 }) and ((rbx13 = { t__content3 = rbx8
  }) and ((rax10 = { t__content3 = rax6 }) and ((xmm013 = { t__content3 =
  xmm08 }) and ((overflowflag13 = { bool__content = overflowflag8 }) and
  ((signflag13 = { bool__content = signflag8 }) and ((carryflag13 = {
  bool__content = carryflag8 }) and (zeroflag13 = { bool__content = zeroflag8
  })))))))))) and ((rdi16 = rdi11) and ((rbp14 = rbp8) and
  ((rsp33 = rsp26) and ((rbx14 = rbx8) and ((rax11 = rax6) and
  ((xmm014 = xmm08) and ((overflowflag14 = overflowflag8) and
  ((signflag14 = signflag8) and ((carryflag14 = carryflag8) and
  (zeroflag14 = zeroflag8))))))))))))) -> ((writereg32post(rdi17,
  of_int2(10)) = true) -> ((writereg32post(rbx15, of_int2(0)) = true) ->
  (((result68 = rbp13) and (rbp15 = add3((rsp32).t__content3,
  of_int3(64)))) -> (((result69 = rsp32) and
  (rsp34 = sub3((rsp32).t__content3, of_int3(8)))) -> ((rsp35 = add3(rsp34,
  of_int3(8))) -> (((result70 = { t__content3 = rsi3 }) and
  (rsi4 = add3(rsp35, of_int3(64)))) -> (((result71 = { t__content3 = rdi17
  }) and (rdi18 = add3(rsp35, of_int3(44)))) ->
  ((((o97 = readmem64(of_int3(4198816), memory6)) and ((((((((bw_and3(o97,
  of_int3(255)) = toBig2(to_rep((memory6[of_int3(4198816)])))) and
  (bw_and3(o97,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198816),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o97,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198816),
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o97,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198816),
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o97,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198816),
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o97,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198816),
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o97,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198816),
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o97,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198816),
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result72 = {
  t__content3 = xmm32 }) and (xmm33 = o97))) ->
  ((((o98 = readmem64(of_int3(4198824), memory6)) and ((((((((bw_and3(o98,
  of_int3(255)) = toBig2(to_rep((memory6[of_int3(4198824)])))) and
  (bw_and3(o98,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198824),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o98,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198824),
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o98,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198824),
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o98,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198824),
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o98,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198824),
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o98,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198824),
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o98,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198824),
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result73 = {
  t__content3 = xmm22 }) and (xmm23 = o98))) ->
  ((((o99 = readmem64(of_int3(4198832), memory6)) and ((((((((bw_and3(o99,
  of_int3(255)) = toBig2(to_rep((memory6[of_int3(4198832)])))) and
  (bw_and3(o99,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198832),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o99,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198832),
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o99,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198832),
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o99,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198832),
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o99,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198832),
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o99,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198832),
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o99,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198832),
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result74 = {
  t__content3 = xmm12 }) and (xmm13 = o99))) ->
  ((((o100 = readmem64(of_int3(4198768), memory6)) and ((((((((bw_and3(o100,
  of_int3(255)) = toBig2(to_rep((memory6[of_int3(4198768)])))) and
  (bw_and3(o100,
  of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o100,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o100,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o100,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o100,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o100,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o100,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(of_int3(4198768),
  of_int3(7))]))), of_int3(72057594037927936))))) and
  ((result75 = xmm013) and (xmm015 = o100))) -> (((result76 = { t__content3 =
  rsp35 }) and (rsp36 = sub3(rsp35, of_int3(8)))) -> ((rsp37 = add3(rsp36,
  of_int3(8))) -> ((writereg32post(rax12, of_int2(0)) = true) ->
  ((writereg32post(rdi19, of_int2(4198688)) = true) -> (((result77 = {
  t__content3 = rsp37 }) and (rsp38 = sub3(rsp37, of_int3(8)))) ->
  ((rsp39 = add3(rsp38, of_int3(8))) -> (((((((o101 = esp(rsp39)) and
  (o101 = readreg32(rsp39))) and (o102 = add2(o101, of_int2(44)))) and
  (o103 = toBig(o102))) and ((o104 = readmem32(o103, memory6)) and
  ((((bw_and2(o104, of_int2(255)) = toBig1(to_rep((memory6[o103])))) and
  (bw_and2(o104, of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(o103,
  of_int3(1))]))), of_int2(256)))) and (bw_and2(o104,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(o103,
  of_int3(2))]))), of_int2(65536)))) and (bw_and2(o104,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(o103,
  of_int3(3))]))), of_int2(16777216)))))) and (writereg32post(rcx,
  o104) = true)) -> ((((((o105 = ecx(rcx)) and (o105 = readreg32(rcx))) and
  (((o106 = ecx(rcx)) and (o106 = readreg32(rcx))) and (o107 = bw_and2(o106,
  o105)))) and (((o107 = of_int2(0)) and (o108 = true)) or
  ((not (o107 = of_int2(0))) and (o108 = false)))) and
  ((result78 = zeroflag13) and (zeroflag15 = o108))) ->
  ((((((o109 = ecx(rcx)) and (o109 = readreg32(rcx))) and
  (((o110 = ecx(rcx)) and (o110 = readreg32(rcx))) and (o111 = bw_and2(o110,
  o109)))) and ((ugt2(o111, of_int2(2147483647)) and (o112 = true)) or
  ((not ugt2(o111, of_int2(2147483647))) and (o112 = false)))) and
  ((result79 = signflag13) and (signflag15 = o112))) ->
  (((result80 = carryflag13) and (carryflag15 = of_int4(0))) ->
  (((result81 = overflowflag13) and (overflowflag15 = of_int4(0))) ->
  (((not (zeroflag15 = true)) and
  (to_int4(signflag15) = to_int4(overflowflag15))) -> ((rsp40 = rsp39) ->
  (((((not (zeroflag16 = true)) and ((signflag16 = true) <->
  (overflowflag16 = true))) and ((((o113 = readmem64(rbp16, memory6)) and
  ((((((((bw_and3(o113, of_int3(255)) = toBig2(to_rep((memory6[rbp16])))) and
  (bw_and3(o113, of_int3(65280)) = mul3(toBig2(to_rep((memory6[add3(rbp16,
  of_int3(1))]))), of_int3(256)))) and (bw_and3(o113,
  of_int3(16711680)) = mul3(toBig2(to_rep((memory6[add3(rbp16,
  of_int3(2))]))), of_int3(65536)))) and (bw_and3(o113,
  of_int3(4278190080)) = mul3(toBig2(to_rep((memory6[add3(rbp16,
  of_int3(3))]))), of_int3(16777216)))) and (bw_and3(o113,
  of_int3(1095216660480)) = mul3(toBig2(to_rep((memory6[add3(rbp16,
  of_int3(4))]))), of_int3(4294967296)))) and (bw_and3(o113,
  of_int3(280375465082880)) = mul3(toBig2(to_rep((memory6[add3(rbp16,
  of_int3(5))]))), of_int3(1099511627776)))) and (bw_and3(o113,
  of_int3(71776119061217280)) = mul3(toBig2(to_rep((memory6[add3(rbp16,
  of_int3(6))]))), of_int3(281474976710656)))) and (bw_and3(o113,
  of_int3(18374686479671623680)) = mul3(toBig2(to_rep((memory6[add3(rbp16,
  of_int3(7))]))), of_int3(72057594037927936))))) and ((result82 = {
  t__content3 = xmm016 }) and (xmm017 = o113))) and ((writereg32post(rdi20,
  of_int2(4198699)) = true) and ((writereg32post(rax13,
  of_int2(1)) = true) and (((((o114 = ebx(rbx16)) and
  (o114 = readreg32(rbx16))) and (o115 = add2(o114, of_int2(1)))) and
  (writereg32post(rbx17, o115) = true)) and (((result83 = { t__content3 =
  rbp16 }) and (rbp17 = add3(rbp16, of_int3(8)))) and (((result84 = {
  t__content3 = rsp40 }) and (rsp41 = sub3(rsp40, of_int3(8)))) and
  ((rsp42 = add3(rsp41, of_int3(8))) and ((((((o116 = ebx(rbx17)) and
  (o116 = readreg32(rbx17))) and (((o117 = readmem32(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), memory6)) and ((((bw_and2(o117,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp42, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o117,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o117,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o117,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  (o118 = sub2(o117, o116)))) and (((o118 = of_int2(0)) and (o119 = true)) or
  ((not (o118 = of_int2(0))) and (o119 = false)))) and ((result85 = {
  bool__content = zeroflag16 }) and (zeroflag17 = o119))) and
  ((((((o120 = ebx(rbx17)) and (o120 = readreg32(rbx17))) and
  (((o121 = readmem32(sub3(add3(rsp42, of_int3(152)), of_int3(108)),
  memory6)) and ((((bw_and2(o121,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp42, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o121,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o121,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o121,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  (o122 = sub2(o121, o120)))) and ((ugt2(o122, of_int2(2147483647)) and
  (o123 = true)) or ((not ugt2(o122, of_int2(2147483647))) and
  (o123 = false)))) and ((result86 = { bool__content = signflag16 }) and
  (signflag17 = o123))) and (((((o124 = ebx(rbx17)) and
  (o124 = readreg32(rbx17))) and (((o125 = readmem32(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), memory6)) and ((((bw_and2(o125,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp42, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o125,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o125,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o125,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  ((ult2(o125, o124) and (o126 = true)) or ((not ult2(o125, o124)) and
  (o126 = false))))) and ((result87 = { bool__content = carryflag16 }) and
  (carryflag17 = o126))) and (((((((not (signflag17 = true)) and
  (((o130 = readmem32(sub3(add3(rsp42, of_int3(152)), of_int3(108)),
  memory6)) and ((((bw_and2(o130,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp42, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o130,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o130,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o130,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  ((ugt2(o130, of_int2(2147483647)) and (result88 = true)) or
  ((not ugt2(o130, of_int2(2147483647))) and (result88 = false))))) or
  ((signflag17 = true) and (result88 = false))) and (((result88 = true) and
  (((o129 = ebx(rbx17)) and (o129 = readreg32(rbx17))) and ((ule2(o129,
  of_int2(2147483647)) and (o131 = true)) or ((not ule2(o129,
  of_int2(2147483647))) and (o131 = false))))) or
  ((not (result88 = true)) and (o131 = false)))) and
  (((((signflag17 = true) and (((o128 = ebx(rbx17)) and
  (o128 = readreg32(rbx17))) and ((ugt2(o128, of_int2(2147483647)) and
  (result89 = true)) or ((not ugt2(o128, of_int2(2147483647))) and
  (result89 = false))))) or ((not (signflag17 = true)) and
  (result89 = false))) and (((result89 = true) and
  (((o127 = readmem32(sub3(add3(rsp42, of_int3(152)), of_int3(108)),
  memory6)) and ((((bw_and2(o127,
  of_int2(255)) = toBig1(to_rep((memory6[sub3(add3(rsp42, of_int3(152)),
  of_int3(108))])))) and (bw_and2(o127,
  of_int2(65280)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(1))]))), of_int2(256)))) and
  (bw_and2(o127,
  of_int2(16711680)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(2))]))), of_int2(65536)))) and
  (bw_and2(o127,
  of_int2(4278190080)) = mul2(toBig1(to_rep((memory6[add3(sub3(add3(rsp42,
  of_int3(152)), of_int3(108)), of_int3(3))]))), of_int2(16777216))))) and
  ((ule2(o127, of_int2(2147483647)) and (o132 = true)) or ((not ule2(o127,
  of_int2(2147483647))) and (o132 = false))))) or
  ((not (result89 = true)) and (o132 = false)))) and (o133 = match_bool(o132,
  true, o131)))) and ((result90 = { bool__content = overflowflag16 }) and
  (overflowflag17 = o133))) and ((not (zeroflag17 = true)) and
  (to_int4(signflag17) = to_int4(overflowflag17))))))))))))))) and
  (((rdi21 = { t__content3 = rdi20 }) and ((rbp18 = { t__content3 = rbp17
  }) and ((rsp43 = { t__content3 = rsp42 }) and ((rbx18 = { t__content3 =
  rbx17 }) and ((rax14 = { t__content3 = rax13 }) and ((xmm018 = {
  t__content3 = xmm017 }) and ((overflowflag18 = { bool__content =
  overflowflag17 }) and ((signflag18 = { bool__content = signflag17 }) and
  ((carryflag18 = { bool__content = carryflag17 }) and (zeroflag18 = {
  bool__content = zeroflag17 })))))))))) and ((rdi22 = rdi20) and
  ((rbp19 = rbp17) and ((rsp44 = rsp42) and ((rbx19 = rbx17) and
  ((rax15 = rax13) and ((xmm019 = xmm017) and
  ((overflowflag19 = overflowflag17) and ((signflag19 = signflag17) and
  ((carryflag19 = carryflag17) and (zeroflag19 = zeroflag17)))))))))))) ->
  ((rsp43).t__content3 = rsp39))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
