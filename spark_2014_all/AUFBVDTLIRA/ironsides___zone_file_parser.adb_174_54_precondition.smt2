(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 8) Int) Bool)
(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 8)) (i Int)) (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun bv_min ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort unsigned8 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE1 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) (_ BitVec 8))
(declare-fun user_eq (unsigned8 unsigned8) Bool)
(declare-const dummy unsigned8)
(declare-datatypes () ((unsigned8__ref (mk_unsigned8__ref (unsigned8__content unsigned8)))))
(define-fun unsigned8__ref___projection ((a unsigned8__ref)) unsigned8 (unsigned8__content a))
(declare-fun to_rep (unsigned8) (_ BitVec 8))
(declare-fun of_rep ((_ BitVec 8)) unsigned8)
(assert (forall ((x unsigned8)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep (of_rep x)) x) :pattern ((to_rep (of_rep x))))))
(define-fun to_int2 ((x unsigned8)) Int (bv2nat (to_rep x)))
(assert (forall ((x unsigned8)) (! (uint_in_range (to_int2 x)) :pattern ((to_int2 x)))))
(declare-sort rritemtype 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (rritemtype rritemtype) Bool)
(declare-const dummy1 rritemtype)
(declare-datatypes () ((rritemtype__ref (mk_rritemtype__ref (rritemtype__content rritemtype)))))
(define-fun rritemtype__ref___projection ((a rritemtype__ref)) rritemtype (rritemtype__content a))
(define-fun dynamic_invariant ((temp___expr_298 Int) (temp___is_init_294 Bool) (temp___skip_constant_295 Bool) (temp___do_toplevel_296 Bool) (temp___do_typ_inv_297 Bool)) Bool (=> (or (= temp___is_init_294 true) (<= 0 10)) (in_range1 temp___expr_298)))
(declare-sort linelengthindex 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 256)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (linelengthindex linelengthindex) Bool)
(declare-const dummy2 linelengthindex)
(declare-datatypes () ((linelengthindex__ref (mk_linelengthindex__ref (linelengthindex__content linelengthindex)))))
(define-fun linelengthindex__ref___projection ((a linelengthindex__ref)) linelengthindex (linelengthindex__content a))
(define-fun dynamic_invariant1 ((temp___expr_305 Int) (temp___is_init_301 Bool) (temp___skip_constant_302 Bool) (temp___do_toplevel_303 Bool) (temp___do_typ_inv_304 Bool)) Bool (=> (or (= temp___is_init_301 true) (<= 1 256)) (in_range2 temp___expr_305)))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (character character) Bool)
(declare-const dummy3 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep1 (character) Int)
(declare-fun of_rep1 (Int) character)
(assert (forall ((x character)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep1 (select a temp___idx_91)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep1 (select a temp___idx_91)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-sort query_type 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 18)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (query_type query_type) Bool)
(declare-const dummy4 query_type)
(declare-datatypes () ((query_type__ref (mk_query_type__ref (query_type__content query_type)))))
(define-fun query_type__ref___projection ((a query_type__ref)) query_type (query_type__content a))
(declare-fun to_rep2 (query_type) Int)
(declare-fun of_rep2 (Int) query_type)
(assert (forall ((x query_type)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x query_type)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-fun nth1 ((_ BitVec 16) Int) Bool)
(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun to_int3 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))
(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvlshr x n) (lsr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvashr x n) (asr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvshl x n) (lsl1 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_left2 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_right2 v (bv2nat n)))))
(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (nth1 x (bv2nat i)) (nth_bv1 x i))))
(assert (forall ((x (_ BitVec 16)) (i Int)) (=> (and (<= 0 i) (< i 65536)) (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))
(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i))) (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun bv_min1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))
(define-fun bv_max1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))
(declare-fun nth2 ((_ BitVec 32) Int) Bool)
(declare-fun lsr2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun asr2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun lsl2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_right3 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_left3 ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun to_int4 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32)) (bv2nat x) (- (- 4294967296 (bv2nat x)))))
(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvlshr x n) (lsr2 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvashr x n) (asr2 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvshl x n) (lsl2 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_left3 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_right3 v (bv2nat n)))))
(declare-fun nth_bv2 ((_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (= (nth_bv2 x i) true) (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (nth2 x (bv2nat i)) (nth_bv2 x i))))
(assert (forall ((x (_ BitVec 32)) (i Int)) (=> (and (<= 0 i) (< i 4294967296)) (= (nth_bv2 x ((_ int2bv 32) i)) (nth2 x i)))))
(declare-fun eq_sub_bv2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i))) (= (eq_sub_bv2 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub2 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (= (eq_sub2 a b (bv2nat i) (bv2nat n)) (eq_sub_bv2 a b i n))))
(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 (_ BitVec 32))))))
(declare-fun power2 ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun bv_min2 ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))
(define-fun bv_max2 ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))
(declare-sort unsigned16 0)
(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 16))
(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 16)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 16))
(declare-fun user_eq5 (unsigned16 unsigned16) Bool)
(declare-const dummy5 unsigned16)
(declare-datatypes () ((unsigned16__ref (mk_unsigned16__ref (unsigned16__content unsigned16)))))
(define-fun unsigned16__ref___projection ((a unsigned16__ref)) unsigned16 (unsigned16__content a))
(declare-fun to_rep3 (unsigned16) (_ BitVec 16))
(declare-fun of_rep3 ((_ BitVec 16)) unsigned16)
(assert (forall ((x unsigned16)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert true)
(assert (forall ((x (_ BitVec 16))) (! (= (to_rep3 (of_rep3 x)) x) :pattern ((to_rep3 (of_rep3 x))))))
(define-fun to_int5 ((x unsigned16)) Int (bv2nat (to_rep3 x)))
(assert (forall ((x unsigned16)) (! (uint_in_range1 (to_int5 x)) :pattern ((to_int5 x)))))
(declare-sort unsigned32 0)
(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 32))
(declare-fun attr__ATTRIBUTE_IMAGE7 ((_ BitVec 32)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) (_ BitVec 32))
(declare-fun user_eq6 (unsigned32 unsigned32) Bool)
(declare-const dummy6 unsigned32)
(declare-datatypes () ((unsigned32__ref (mk_unsigned32__ref (unsigned32__content unsigned32)))))
(define-fun unsigned32__ref___projection ((a unsigned32__ref)) unsigned32 (unsigned32__content a))
(declare-fun to_rep4 (unsigned32) (_ BitVec 32))
(declare-fun of_rep4 ((_ BitVec 32)) unsigned32)
(assert (forall ((x unsigned32)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert true)
(assert (forall ((x (_ BitVec 32))) (! (= (to_rep4 (of_rep4 x)) x) :pattern ((to_rep4 (of_rep4 x))))))
(define-fun to_int6 ((x unsigned32)) Int (bv2nat (to_rep4 x)))
(assert (forall ((x unsigned32)) (! (uint_in_range2 (to_int6 x)) :pattern ((to_int6 x)))))
(declare-sort classtype 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq7 (classtype classtype) Bool)
(declare-const dummy7 classtype)
(declare-datatypes () ((classtype__ref (mk_classtype__ref (classtype__content classtype)))))
(define-fun classtype__ref___projection ((a classtype__ref)) classtype (classtype__content a))
(declare-fun to_rep5 (classtype) Int)
(declare-fun of_rep5 (Int) classtype)
(assert (forall ((x classtype)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x classtype)) (! (in_range5 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-const dummy8 (Array Int character))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(declare-fun user_eq8 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__rr_type__resourcerecordtype__ttlinseconds unsigned32) (rec__rr_type__resourcerecordtype__class classtype) (rec__ext__ us_private)))))
(define-fun us_split_fields_TTLInSeconds__projection ((a us_split_fields)) unsigned32 (rec__rr_type__resourcerecordtype__ttlinseconds a))
(define-fun us_split_fields_Class__projection ((a us_split_fields)) classtype (rec__rr_type__resourcerecordtype__class a))
(define-fun us_split_fields___projection ((a us_split_fields)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields) (attr__tag Int)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___2__projection ((a us_rep)) Int (attr__tag a))
(define-fun bool_eq1 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep4 (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 a))) (to_rep4 (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 b)))) (= (to_rep5 (rec__rr_type__resourcerecordtype__class (us_split_fields1 a))) (to_rep5 (rec__rr_type__resourcerecordtype__class (us_split_fields1 b))))) true false))
(declare-fun us_dispatch_eq (us_rep us_rep) Bool)
(declare-const us_tag Int)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const rr_type__resourcerecordtype__ttlinseconds__first__bit Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__last__bit Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__position Int)
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__first__bit))
(assert (< rr_type__resourcerecordtype__ttlinseconds__first__bit rr_type__resourcerecordtype__ttlinseconds__last__bit))
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__position))
(declare-const rr_type__resourcerecordtype__class__first__bit Int)
(declare-const rr_type__resourcerecordtype__class__last__bit Int)
(declare-const rr_type__resourcerecordtype__class__position Int)
(assert (<= 0 rr_type__resourcerecordtype__class__first__bit))
(assert (< rr_type__resourcerecordtype__class__first__bit rr_type__resourcerecordtype__class__last__bit))
(assert (<= 0 rr_type__resourcerecordtype__class__position))
(declare-fun user_eq9 (us_rep us_rep) Bool)
(declare-const dummy9 us_rep)
(declare-datatypes () ((resourcerecordtype__ref (mk_resourcerecordtype__ref (resourcerecordtype__content us_rep)))))
(define-fun resourcerecordtype__ref___projection ((a resourcerecordtype__ref)) us_rep (resourcerecordtype__content a))
(declare-const dummy10 (Array Int character))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq10 ((Array Int character) (Array Int character)) Bool)
(declare-sort siglengthvaluetype 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 1365)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq11 (siglengthvaluetype siglengthvaluetype) Bool)
(declare-const dummy11 siglengthvaluetype)
(declare-datatypes () ((siglengthvaluetype__ref (mk_siglengthvaluetype__ref (siglengthvaluetype__content siglengthvaluetype)))))
(define-fun siglengthvaluetype__ref___projection ((a siglengthvaluetype__ref)) siglengthvaluetype (siglengthvaluetype__content a))
(declare-fun to_rep6 (siglengthvaluetype) Int)
(declare-fun of_rep6 (Int) siglengthvaluetype)
(assert (forall ((x siglengthvaluetype)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x siglengthvaluetype)) (! (in_range6 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered query_type) (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm unsigned8) (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels unsigned8) (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl unsigned32) (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration unsigned32) (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception unsigned32) (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag unsigned16) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (Array Int character)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (Array Int character)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength siglengthvaluetype) (rec__rr_type__resourcerecordtype__ttlinseconds1 unsigned32) (rec__rr_type__resourcerecordtype__class1 classtype) (rec__ext__1 us_private)))))
(define-fun us_split_fields_TypeCovered__projection ((a us_split_fields2)) query_type (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered a))
(define-fun us_split_fields_Algorithm__2__projection ((a us_split_fields2)) unsigned8 (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm a))
(define-fun us_split_fields_NumLabels__projection ((a us_split_fields2)) unsigned8 (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels a))
(define-fun us_split_fields_OrigTTL__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl a))
(define-fun us_split_fields_SigExpiration__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration a))
(define-fun us_split_fields_SigInception__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception a))
(define-fun us_split_fields_KeyTag__projection ((a us_split_fields2)) unsigned16 (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag a))
(define-fun us_split_fields_SignerName__projection ((a us_split_fields2)) (Array Int character) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername a))
(define-fun us_split_fields_Signature__projection ((a us_split_fields2)) (Array Int character) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature a))
(define-fun us_split_fields_SignatureLength__projection ((a us_split_fields2)) siglengthvaluetype (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength a))
(define-fun us_split_fields_TTLInSeconds__4__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__resourcerecordtype__ttlinseconds1 a))
(define-fun us_split_fields_Class__4__projection ((a us_split_fields2)) classtype (rec__rr_type__resourcerecordtype__class1 a))
(define-fun us_split_fields___4__projection ((a us_split_fields2)) us_private (rec__ext__1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2) (attr__tag1 Int)))))
(define-fun us_rep___11__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun us_rep___12__projection ((a us_rep1)) Int (attr__tag1 a))
(declare-fun hide_ext__ (query_type unsigned8 unsigned8 unsigned32 unsigned32 unsigned32 unsigned16 (Array Int character) (Array Int character) siglengthvaluetype us_private) us_private)
(declare-fun extract__typecovered (us_private) query_type)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__typecovered (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) typecovered)))))))))
(declare-fun extract__algorithm (us_private) unsigned8)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__algorithm (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) algorithm)))))))))
(declare-fun extract__numlabels (us_private) unsigned8)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__numlabels (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) numlabels)))))))))
(declare-fun extract__origttl (us_private) unsigned32)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__origttl (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) origttl)))))))))
(declare-fun extract__sigexpiration (us_private) unsigned32)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__sigexpiration (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) sigexpiration)))))))))
(declare-fun extract__siginception (us_private) unsigned32)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__siginception (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) siginception)))))))))
(declare-fun extract__keytag (us_private) unsigned16)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__keytag (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) keytag)))))))))
(declare-fun extract__signername (us_private) (Array Int character))
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__signername (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) signername)))))))))
(declare-fun extract__signature (us_private) (Array Int character))
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__signature (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) signature)))))))))
(declare-fun extract__signaturelength (us_private) siglengthvaluetype)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__signaturelength (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) signaturelength)))))))))
(declare-fun extract__ext__ (us_private) us_private)
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (mk___split_fields (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 a)) (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 a)) (hide_ext__ (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields3 a)) (rec__ext__1 (us_split_fields3 a)))) (attr__tag1 a)))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (mk___split_fields1 (extract__typecovered (rec__ext__ (us_split_fields1 r))) (extract__algorithm (rec__ext__ (us_split_fields1 r))) (extract__numlabels (rec__ext__ (us_split_fields1 r))) (extract__origttl (rec__ext__ (us_split_fields1 r))) (extract__sigexpiration (rec__ext__ (us_split_fields1 r))) (extract__siginception (rec__ext__ (us_split_fields1 r))) (extract__keytag (rec__ext__ (us_split_fields1 r))) (extract__signername (rec__ext__ (us_split_fields1 r))) (extract__signature (rec__ext__ (us_split_fields1 r))) (extract__signaturelength (rec__ext__ (us_split_fields1 r))) (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 r)) (rec__rr_type__resourcerecordtype__class (us_split_fields1 r)) (extract__ext__ (rec__ext__ (us_split_fields1 r)))) (attr__tag r)))
(define-fun bool_eq2 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (and (and (and (and (and (and (and (and (= (to_rep2 (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered (us_split_fields3 a))) (to_rep2 (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered (us_split_fields3 b)))) (= (to_rep (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm (us_split_fields3 a))) (to_rep (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm (us_split_fields3 b))))) (= (to_rep (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels (us_split_fields3 a))) (to_rep (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels (us_split_fields3 b))))) (= (to_rep4 (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl (us_split_fields3 a))) (to_rep4 (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl (us_split_fields3 b))))) (= (to_rep4 (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration (us_split_fields3 a))) (to_rep4 (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration (us_split_fields3 b))))) (= (to_rep4 (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception (us_split_fields3 a))) (to_rep4 (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception (us_split_fields3 b))))) (= (to_rep3 (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag (us_split_fields3 a))) (to_rep3 (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag (us_split_fields3 b))))) (= (bool_eq (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (us_split_fields3 a)) 1 128 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (us_split_fields3 b)) 1 128) true)) (= (bool_eq (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (us_split_fields3 a)) 1 1365 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (us_split_fields3 b)) 1 1365) true)) (= (to_rep6 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields3 a))) (to_rep6 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields3 b))))) (= (to_rep4 (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 a))) (to_rep4 (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 b))))) (= (to_rep5 (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 a))) (to_rep5 (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 b))))) true false))
(declare-const us_tag1 Int)
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__typecovered__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__typecovered__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__typecovered__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__typecovered__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__typecovered__first__bit rr_type__rrsig_record_type__rrsigrecordtype__typecovered__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__typecovered__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__algorithm__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__algorithm__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__algorithm__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__algorithm__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__algorithm__first__bit rr_type__rrsig_record_type__rrsigrecordtype__algorithm__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__algorithm__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__numlabels__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__numlabels__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__numlabels__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__numlabels__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__numlabels__first__bit rr_type__rrsig_record_type__rrsigrecordtype__numlabels__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__numlabels__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__origttl__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__origttl__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__origttl__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__origttl__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__origttl__first__bit rr_type__rrsig_record_type__rrsigrecordtype__origttl__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__origttl__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__first__bit rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__siginception__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__siginception__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__siginception__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__siginception__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__siginception__first__bit rr_type__rrsig_record_type__rrsigrecordtype__siginception__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__siginception__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__keytag__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__keytag__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__keytag__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__keytag__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__keytag__first__bit rr_type__rrsig_record_type__rrsigrecordtype__keytag__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__keytag__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signername__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signername__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signername__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signername__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__signername__first__bit rr_type__rrsig_record_type__rrsigrecordtype__signername__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signername__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signature__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signature__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signature__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signature__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__signature__first__bit rr_type__rrsig_record_type__rrsigrecordtype__signature__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signature__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__first__bit rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__position))
(declare-const rr_type__resourcerecordtype__ttlinseconds__first__bit1 Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__last__bit1 Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__position1 Int)
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__first__bit1))
(assert (< rr_type__resourcerecordtype__ttlinseconds__first__bit1 rr_type__resourcerecordtype__ttlinseconds__last__bit1))
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__position1))
(declare-const rr_type__resourcerecordtype__class__first__bit1 Int)
(declare-const rr_type__resourcerecordtype__class__last__bit1 Int)
(declare-const rr_type__resourcerecordtype__class__position1 Int)
(assert (<= 0 rr_type__resourcerecordtype__class__first__bit1))
(assert (< rr_type__resourcerecordtype__class__first__bit1 rr_type__resourcerecordtype__class__last__bit1))
(assert (<= 0 rr_type__resourcerecordtype__class__position1))
(declare-fun user_eq12 (us_rep1 us_rep1) Bool)
(declare-const dummy12 us_rep1)
(declare-datatypes () ((rrsigrecordtype__ref (mk_rrsigrecordtype__ref (rrsigrecordtype__content us_rep1)))))
(define-fun rrsigrecordtype__ref___projection ((a rrsigrecordtype__ref)) us_rep1 (rrsigrecordtype__content a))
(define-fun default_initial_assumption ((temp___expr_842 us_rep1) (temp___skip_top_level_843 Bool)) Bool (= (attr__tag1 temp___expr_842) us_tag1))
(define-fun dynamic_invariant2 ((temp___expr_270 (_ BitVec 8)) (temp___is_init_266 Bool) (temp___skip_constant_267 Bool) (temp___do_toplevel_268 Bool) (temp___do_typ_inv_269 Bool)) Bool true)
(define-fun dynamic_invariant3 ((temp___expr_561 Int) (temp___is_init_557 Bool) (temp___skip_constant_558 Bool) (temp___do_toplevel_559 Bool) (temp___do_typ_inv_560 Bool)) Bool (=> (or (= temp___is_init_557 true) (<= 0 18)) (in_range4 temp___expr_561)))
(declare-fun getrecordtype ((Array Int character) Int Int) Int)
(declare-fun getrecordtype__function_guard (Int (Array Int character) Int Int) Bool)
(assert (forall ((s (Array Int character))) (forall ((begidx Int) (endidx Int)) (! (=> (and (and (dynamic_invariant1 begidx true true true true) (dynamic_invariant1 endidx true true true true)) (<= begidx endidx)) (dynamic_invariant3 (getrecordtype s begidx endidx) true false true true)) :pattern ((getrecordtype s begidx endidx))))))
(declare-const rrsig_rec__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const zonefileline (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const zlength Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(define-fun dynamic_invariant4 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant5 ((temp___expr_291 Int) (temp___is_init_287 Bool) (temp___skip_constant_288 Bool) (temp___do_toplevel_289 Bool) (temp___do_typ_inv_290 Bool)) Bool (=> (or (= temp___is_init_287 true) (<= 0 3)) (in_range5 temp___expr_291)))
(define-fun default_initial_assumption1 ((temp___expr_370 us_rep) (temp___skip_top_level_371 Bool)) Bool (= (attr__tag temp___expr_370) us_tag))
(define-fun dynamic_invariant6 ((temp___expr_277 (_ BitVec 16)) (temp___is_init_273 Bool) (temp___skip_constant_274 Bool) (temp___do_toplevel_275 Bool) (temp___do_typ_inv_276 Bool)) Bool true)
(define-fun dynamic_invariant7 ((temp___expr_284 (_ BitVec 32)) (temp___is_init_280 Bool) (temp___skip_constant_281 Bool) (temp___do_toplevel_282 Bool) (temp___do_typ_inv_283 Bool)) Bool true)
(define-fun dynamic_invariant8 ((temp___expr_832 Int) (temp___is_init_828 Bool) (temp___skip_constant_829 Bool) (temp___do_toplevel_830 Bool) (temp___do_typ_inv_831 Bool)) Bool (=> (or (= temp___is_init_828 true) (<= 0 1365)) (in_range6 temp___expr_832)))
(declare-const endidx Int)
(declare-const success Bool)
(declare-const begidx Int)
(declare-const foundtype Int)
(declare-const o Int)
(declare-const result Bool)
(declare-const success1 Bool)
(declare-const result1 Int)
(declare-const begidx1 Int)
(declare-const endidx1 Int)
(declare-const begidx2 Int)
(declare-const foundtype1 Int)
(declare-const result2 Bool)
(declare-const success2 Bool)
(assert (in_range2 zlength))
(assert (in_range2 endidx))
(assert (=> (<= 1 256) (in_range2 begidx)))
(assert (=> (<= 0 10) (in_range1 foundtype)))
(assert (= result success))
(assert (= success1 (ite (= success true) (ite (< endidx zlength) true false) false)))
(assert (= success1 true))
(assert (and (= o (+ endidx 1)) (in_range2 (+ endidx 1))))
(assert (= (mk_int__ref result1) (mk_int__ref begidx)))
(assert (= begidx1 o))
(assert (and (and (and (and (<= begidx2 endidx1) (<= begidx2 zlength)) (<= endidx1 zlength)) (=> (= foundtype1 1) (forall ((i Int)) (=> (and (<= begidx2 i) (<= i endidx1)) (and (<= 48 (to_rep1 (select zonefileline i))) (<= (to_rep1 (select zonefileline i)) 57)))))) (and (and (in_range2 begidx2) (in_range2 endidx1)) (in_range1 foundtype1))))
(assert (= success1 result2))
(assert (= success2 (ite (= foundtype1 3) true false)))
(assert (= success2 true))
(assert (not (<= begidx2 endidx1)))
(check-sat)
(exit)
