(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 8) Int) Bool)
(declare-fun lsr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun asr ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun lsl ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_right1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_left1 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 255)))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 8)) (i Int)) (=> (and (<= 0 i) (< i 256)) (= (nth_bv x ((_ int2bv 8) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 8))))))
(declare-fun power ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun bv_min ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))
(declare-fun nth1 ((_ BitVec 16) Int) Bool)
(declare-fun lsr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun asr1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun lsl1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_right2 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_left2 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun to_int2 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))
(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 65535)))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvlshr x n) (lsr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvashr x n) (asr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvshl x n) (lsl1 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_left2 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_right2 v (bv2nat n)))))
(declare-fun nth_bv1 ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (nth1 x (bv2nat i)) (nth_bv1 x i))))
(assert (forall ((x (_ BitVec 16)) (i Int)) (=> (and (<= 0 i) (< i 65536)) (= (nth_bv1 x ((_ int2bv 16) i)) (nth1 x i)))))
(declare-fun eq_sub_bv1 ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i))) (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub1 ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 16))))))
(declare-fun power1 ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun bv_min1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))
(define-fun bv_max1 ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))
(declare-fun nth2 ((_ BitVec 32) Int) Bool)
(declare-fun lsr2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun asr2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun lsl2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_right3 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_left3 ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun to_int3 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32)) (bv2nat x) (- (- 4294967296 (bv2nat x)))))
(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvlshr x n) (lsr2 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvashr x n) (asr2 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvshl x n) (lsl2 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_left3 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_right3 v (bv2nat n)))))
(declare-fun nth_bv2 ((_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (= (nth_bv2 x i) true) (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (nth2 x (bv2nat i)) (nth_bv2 x i))))
(assert (forall ((x (_ BitVec 32)) (i Int)) (=> (and (<= 0 i) (< i 4294967296)) (= (nth_bv2 x ((_ int2bv 32) i)) (nth2 x i)))))
(declare-fun eq_sub_bv2 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i))) (= (eq_sub_bv2 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub2 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (= (eq_sub2 a b (bv2nat i) (bv2nat n)) (eq_sub_bv2 a b i n))))
(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 (_ BitVec 32))))))
(declare-fun power2 ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun bv_min2 ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))
(define-fun bv_max2 ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(define-fun dynamic_invariant1 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range2 temp___expr_74)))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-sort packet_bytes_range 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 8180)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (packet_bytes_range packet_bytes_range) Bool)
(declare-const dummy2 packet_bytes_range)
(declare-datatypes () ((packet_bytes_range__ref (mk_packet_bytes_range__ref (packet_bytes_range__content packet_bytes_range)))))
(define-fun packet_bytes_range__ref___projection ((a packet_bytes_range__ref)) packet_bytes_range (packet_bytes_range__content a))
(define-fun dynamic_invariant2 ((temp___expr_796 Int) (temp___is_init_792 Bool) (temp___skip_constant_793 Bool) (temp___do_toplevel_794 Bool) (temp___do_typ_inv_795 Bool)) Bool (=> (or (= temp___is_init_792 true) (<= 1 8180)) (in_range3 temp___expr_796)))
(declare-sort byte 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE4 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) (_ BitVec 8))
(declare-fun user_eq3 (byte byte) Bool)
(declare-const dummy3 byte)
(declare-datatypes () ((byte__ref (mk_byte__ref (byte__content byte)))))
(define-fun byte__ref___projection ((a byte__ref)) byte (byte__content a))
(define-fun dynamic_invariant3 ((temp___expr_803 (_ BitVec 8)) (temp___is_init_799 Bool) (temp___skip_constant_800 Bool) (temp___do_toplevel_801 Bool) (temp___do_typ_inv_802 Bool)) Bool true)
(declare-fun to_rep1 (byte) (_ BitVec 8))
(declare-fun of_rep1 ((_ BitVec 8)) byte)
(assert (forall ((x byte)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun to_int4 ((x byte)) Int (bv2nat (to_rep1 x)))
(assert (forall ((x byte)) (! (uint_in_range (to_int4 x)) :pattern ((to_int4 x)))))
(declare-sort query_type 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 18)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (query_type query_type) Bool)
(declare-const dummy4 query_type)
(declare-datatypes () ((query_type__ref (mk_query_type__ref (query_type__content query_type)))))
(define-fun query_type__ref___projection ((a query_type__ref)) query_type (query_type__content a))
(declare-fun to_rep2 (query_type) Int)
(declare-fun of_rep2 (Int) query_type)
(assert (forall ((x query_type)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x query_type)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int byte))))))
(declare-fun slide1 ((Array Int byte) Int Int) (Array Int byte))
(assert (forall ((a (Array Int byte))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int byte))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int byte)) (a__first Int) (a__last Int) (b (Array Int byte)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep1 (select a temp___idx_173)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_173))))))) true false))
(assert (forall ((a (Array Int byte)) (b (Array Int byte))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep1 (select a temp___idx_173)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_173)))))))))))
(declare-sort unsigned8 0)
(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 8))
(declare-fun user_eq5 (unsigned8 unsigned8) Bool)
(declare-const dummy5 unsigned8)
(declare-datatypes () ((unsigned8__ref (mk_unsigned8__ref (unsigned8__content unsigned8)))))
(define-fun unsigned8__ref___projection ((a unsigned8__ref)) unsigned8 (unsigned8__content a))
(declare-fun to_rep3 (unsigned8) (_ BitVec 8))
(declare-fun of_rep3 ((_ BitVec 8)) unsigned8)
(assert (forall ((x unsigned8)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep3 (of_rep3 x)) x) :pattern ((to_rep3 (of_rep3 x))))))
(define-fun to_int5 ((x unsigned8)) Int (bv2nat (to_rep3 x)))
(assert (forall ((x unsigned8)) (! (uint_in_range (to_int5 x)) :pattern ((to_int5 x)))))
(declare-sort unsigned16 0)
(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 16))
(declare-fun attr__ATTRIBUTE_IMAGE7 ((_ BitVec 16)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) (_ BitVec 16))
(declare-fun user_eq6 (unsigned16 unsigned16) Bool)
(declare-const dummy6 unsigned16)
(declare-datatypes () ((unsigned16__ref (mk_unsigned16__ref (unsigned16__content unsigned16)))))
(define-fun unsigned16__ref___projection ((a unsigned16__ref)) unsigned16 (unsigned16__content a))
(declare-fun to_rep4 (unsigned16) (_ BitVec 16))
(declare-fun of_rep4 ((_ BitVec 16)) unsigned16)
(assert (forall ((x unsigned16)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert true)
(assert (forall ((x (_ BitVec 16))) (! (= (to_rep4 (of_rep4 x)) x) :pattern ((to_rep4 (of_rep4 x))))))
(define-fun to_int6 ((x unsigned16)) Int (bv2nat (to_rep4 x)))
(assert (forall ((x unsigned16)) (! (uint_in_range1 (to_int6 x)) :pattern ((to_int6 x)))))
(declare-sort unsigned32 0)
(declare-const attr__ATTRIBUTE_MODULUS3 (_ BitVec 32))
(declare-fun attr__ATTRIBUTE_IMAGE8 ((_ BitVec 32)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) (_ BitVec 32))
(declare-fun user_eq7 (unsigned32 unsigned32) Bool)
(declare-const dummy7 unsigned32)
(declare-datatypes () ((unsigned32__ref (mk_unsigned32__ref (unsigned32__content unsigned32)))))
(define-fun unsigned32__ref___projection ((a unsigned32__ref)) unsigned32 (unsigned32__content a))
(declare-fun to_rep5 (unsigned32) (_ BitVec 32))
(declare-fun of_rep5 ((_ BitVec 32)) unsigned32)
(assert (forall ((x unsigned32)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert true)
(assert (forall ((x (_ BitVec 32))) (! (= (to_rep5 (of_rep5 x)) x) :pattern ((to_rep5 (of_rep5 x))))))
(define-fun to_int7 ((x unsigned32)) Int (bv2nat (to_rep5 x)))
(assert (forall ((x unsigned32)) (! (uint_in_range2 (to_int7 x)) :pattern ((to_int7 x)))))
(declare-sort wirestringtypeindex 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 129)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq8 (wirestringtypeindex wirestringtypeindex) Bool)
(declare-const dummy8 wirestringtypeindex)
(declare-datatypes () ((wirestringtypeindex__ref (mk_wirestringtypeindex__ref (wirestringtypeindex__content wirestringtypeindex)))))
(define-fun wirestringtypeindex__ref___projection ((a wirestringtypeindex__ref)) wirestringtypeindex (wirestringtypeindex__content a))
(define-fun dynamic_invariant4 ((temp___expr_1018 Int) (temp___is_init_1014 Bool) (temp___skip_constant_1015 Bool) (temp___do_toplevel_1016 Bool) (temp___do_typ_inv_1017 Bool)) Bool (=> (or (= temp___is_init_1014 true) (<= 1 129)) (in_range5 temp___expr_1018)))
(declare-fun wirenamelength ((Array Int character)) Int)
(declare-fun wirenamelength__function_guard (Int (Array Int character)) Bool)
(declare-fun convertdomainnametowire ((Array Int character)) (Array Int character))
(declare-fun convertdomainnametowire__function_guard ((Array Int character) (Array Int character)) Bool)
(declare-sort rrsigstringtypeindex 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 1365)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq9 (rrsigstringtypeindex rrsigstringtypeindex) Bool)
(declare-const dummy9 rrsigstringtypeindex)
(declare-datatypes () ((rrsigstringtypeindex__ref (mk_rrsigstringtypeindex__ref (rrsigstringtypeindex__content rrsigstringtypeindex)))))
(define-fun rrsigstringtypeindex__ref___projection ((a rrsigstringtypeindex__ref)) rrsigstringtypeindex (rrsigstringtypeindex__content a))
(declare-sort siglengthvaluetype 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 1365)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq10 (siglengthvaluetype siglengthvaluetype) Bool)
(declare-const dummy10 siglengthvaluetype)
(declare-datatypes () ((siglengthvaluetype__ref (mk_siglengthvaluetype__ref (siglengthvaluetype__content siglengthvaluetype)))))
(define-fun siglengthvaluetype__ref___projection ((a siglengthvaluetype__ref)) siglengthvaluetype (siglengthvaluetype__content a))
(define-fun dynamic_invariant5 ((temp___expr_1742 Int) (temp___is_init_1738 Bool) (temp___skip_constant_1739 Bool) (temp___do_toplevel_1740 Bool) (temp___do_typ_inv_1741 Bool)) Bool (=> (or (= temp___is_init_1738 true) (<= 0 1365)) (in_range7 temp___expr_1742)))
(declare-fun to_rep6 (siglengthvaluetype) Int)
(declare-fun of_rep6 (Int) siglengthvaluetype)
(assert (forall ((x siglengthvaluetype)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x siglengthvaluetype)) (! (in_range7 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-sort classtype 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq11 (classtype classtype) Bool)
(declare-const dummy11 classtype)
(declare-datatypes () ((classtype__ref (mk_classtype__ref (classtype__content classtype)))))
(define-fun classtype__ref___projection ((a classtype__ref)) classtype (classtype__content a))
(declare-fun to_rep7 (classtype) Int)
(declare-fun of_rep7 (Int) classtype)
(assert (forall ((x classtype)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x classtype)) (! (in_range8 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-const dummy12 (Array Int character))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(declare-fun user_eq12 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__rr_type__resourcerecordtype__ttlinseconds unsigned32) (rec__rr_type__resourcerecordtype__class classtype) (rec__ext__ us_private)))))
(define-fun us_split_fields_TTLInSeconds__projection ((a us_split_fields)) unsigned32 (rec__rr_type__resourcerecordtype__ttlinseconds a))
(define-fun us_split_fields_Class__projection ((a us_split_fields)) classtype (rec__rr_type__resourcerecordtype__class a))
(define-fun us_split_fields___2__projection ((a us_split_fields)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___6__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields) (attr__tag Int)))))
(define-fun us_rep___7__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___8__projection ((a us_rep)) Int (attr__tag a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep5 (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 a))) (to_rep5 (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 b)))) (= (to_rep7 (rec__rr_type__resourcerecordtype__class (us_split_fields1 a))) (to_rep7 (rec__rr_type__resourcerecordtype__class (us_split_fields1 b))))) true false))
(declare-fun us_dispatch_eq (us_rep us_rep) Bool)
(declare-const us_tag Int)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const rr_type__resourcerecordtype__ttlinseconds__first__bit Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__last__bit Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__position Int)
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__first__bit))
(assert (< rr_type__resourcerecordtype__ttlinseconds__first__bit rr_type__resourcerecordtype__ttlinseconds__last__bit))
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__position))
(declare-const rr_type__resourcerecordtype__class__first__bit Int)
(declare-const rr_type__resourcerecordtype__class__last__bit Int)
(declare-const rr_type__resourcerecordtype__class__position Int)
(assert (<= 0 rr_type__resourcerecordtype__class__first__bit))
(assert (< rr_type__resourcerecordtype__class__first__bit rr_type__resourcerecordtype__class__last__bit))
(assert (<= 0 rr_type__resourcerecordtype__class__position))
(declare-fun user_eq13 (us_rep us_rep) Bool)
(declare-const dummy13 us_rep)
(declare-datatypes () ((resourcerecordtype__ref (mk_resourcerecordtype__ref (resourcerecordtype__content us_rep)))))
(define-fun resourcerecordtype__ref___projection ((a resourcerecordtype__ref)) us_rep (resourcerecordtype__content a))
(declare-const dummy14 (Array Int character))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq14 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered query_type) (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm unsigned8) (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels unsigned8) (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl unsigned32) (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration unsigned32) (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception unsigned32) (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag unsigned16) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (Array Int character)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (Array Int character)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength siglengthvaluetype) (rec__rr_type__resourcerecordtype__ttlinseconds1 unsigned32) (rec__rr_type__resourcerecordtype__class1 classtype) (rec__ext__1 us_private)))))
(define-fun us_split_fields_TypeCovered__projection ((a us_split_fields2)) query_type (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered a))
(define-fun us_split_fields_Algorithm__2__projection ((a us_split_fields2)) unsigned8 (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm a))
(define-fun us_split_fields_NumLabels__projection ((a us_split_fields2)) unsigned8 (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels a))
(define-fun us_split_fields_OrigTTL__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl a))
(define-fun us_split_fields_SigExpiration__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration a))
(define-fun us_split_fields_SigInception__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception a))
(define-fun us_split_fields_KeyTag__projection ((a us_split_fields2)) unsigned16 (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag a))
(define-fun us_split_fields_SignerName__projection ((a us_split_fields2)) (Array Int character) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername a))
(define-fun us_split_fields_Signature__projection ((a us_split_fields2)) (Array Int character) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature a))
(define-fun us_split_fields_SignatureLength__projection ((a us_split_fields2)) siglengthvaluetype (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength a))
(define-fun us_split_fields_TTLInSeconds__10__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__resourcerecordtype__ttlinseconds1 a))
(define-fun us_split_fields_Class__10__projection ((a us_split_fields2)) classtype (rec__rr_type__resourcerecordtype__class1 a))
(define-fun us_split_fields___11__projection ((a us_split_fields2)) us_private (rec__ext__1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___15__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2) (attr__tag1 Int)))))
(define-fun us_rep___25__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun us_rep___26__projection ((a us_rep1)) Int (attr__tag1 a))
(declare-fun hide_ext__ (query_type unsigned8 unsigned8 unsigned32 unsigned32 unsigned32 unsigned16 (Array Int character) (Array Int character) siglengthvaluetype us_private) us_private)
(declare-fun extract__typecovered (us_private) query_type)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__typecovered (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) typecovered)))))))))
(declare-fun extract__algorithm (us_private) unsigned8)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__algorithm (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) algorithm)))))))))
(declare-fun extract__numlabels (us_private) unsigned8)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__numlabels (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) numlabels)))))))))
(declare-fun extract__origttl (us_private) unsigned32)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__origttl (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) origttl)))))))))
(declare-fun extract__sigexpiration (us_private) unsigned32)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__sigexpiration (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) sigexpiration)))))))))
(declare-fun extract__siginception (us_private) unsigned32)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__siginception (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) siginception)))))))))
(declare-fun extract__keytag (us_private) unsigned16)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__keytag (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) keytag)))))))))
(declare-fun extract__signername (us_private) (Array Int character))
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__signername (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) signername)))))))))
(declare-fun extract__signature (us_private) (Array Int character))
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__signature (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) signature)))))))))
(declare-fun extract__signaturelength (us_private) siglengthvaluetype)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__signaturelength (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) signaturelength)))))))))
(declare-fun extract__ext__ (us_private) us_private)
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (mk___split_fields (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 a)) (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 a)) (hide_ext__ (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields3 a)) (rec__ext__1 (us_split_fields3 a)))) (attr__tag1 a)))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (mk___split_fields1 (extract__typecovered (rec__ext__ (us_split_fields1 r))) (extract__algorithm (rec__ext__ (us_split_fields1 r))) (extract__numlabels (rec__ext__ (us_split_fields1 r))) (extract__origttl (rec__ext__ (us_split_fields1 r))) (extract__sigexpiration (rec__ext__ (us_split_fields1 r))) (extract__siginception (rec__ext__ (us_split_fields1 r))) (extract__keytag (rec__ext__ (us_split_fields1 r))) (extract__signername (rec__ext__ (us_split_fields1 r))) (extract__signature (rec__ext__ (us_split_fields1 r))) (extract__signaturelength (rec__ext__ (us_split_fields1 r))) (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 r)) (rec__rr_type__resourcerecordtype__class (us_split_fields1 r)) (extract__ext__ (rec__ext__ (us_split_fields1 r)))) (attr__tag r)))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (and (and (and (and (and (and (and (and (= (to_rep2 (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered (us_split_fields3 a))) (to_rep2 (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered (us_split_fields3 b)))) (= (to_rep3 (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm (us_split_fields3 a))) (to_rep3 (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm (us_split_fields3 b))))) (= (to_rep3 (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels (us_split_fields3 a))) (to_rep3 (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels (us_split_fields3 b))))) (= (to_rep5 (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl (us_split_fields3 a))) (to_rep5 (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl (us_split_fields3 b))))) (= (to_rep5 (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration (us_split_fields3 a))) (to_rep5 (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration (us_split_fields3 b))))) (= (to_rep5 (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception (us_split_fields3 a))) (to_rep5 (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception (us_split_fields3 b))))) (= (to_rep4 (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag (us_split_fields3 a))) (to_rep4 (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag (us_split_fields3 b))))) (= (bool_eq (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (us_split_fields3 a)) 1 128 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (us_split_fields3 b)) 1 128) true)) (= (bool_eq (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (us_split_fields3 a)) 1 1365 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (us_split_fields3 b)) 1 1365) true)) (= (to_rep6 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields3 a))) (to_rep6 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields3 b))))) (= (to_rep5 (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 a))) (to_rep5 (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 b))))) (= (to_rep7 (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 a))) (to_rep7 (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 b))))) true false))
(declare-const us_tag1 Int)
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__typecovered__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__typecovered__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__typecovered__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__typecovered__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__typecovered__first__bit rr_type__rrsig_record_type__rrsigrecordtype__typecovered__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__typecovered__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__algorithm__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__algorithm__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__algorithm__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__algorithm__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__algorithm__first__bit rr_type__rrsig_record_type__rrsigrecordtype__algorithm__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__algorithm__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__numlabels__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__numlabels__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__numlabels__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__numlabels__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__numlabels__first__bit rr_type__rrsig_record_type__rrsigrecordtype__numlabels__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__numlabels__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__origttl__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__origttl__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__origttl__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__origttl__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__origttl__first__bit rr_type__rrsig_record_type__rrsigrecordtype__origttl__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__origttl__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__first__bit rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__siginception__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__siginception__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__siginception__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__siginception__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__siginception__first__bit rr_type__rrsig_record_type__rrsigrecordtype__siginception__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__siginception__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__keytag__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__keytag__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__keytag__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__keytag__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__keytag__first__bit rr_type__rrsig_record_type__rrsigrecordtype__keytag__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__keytag__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signername__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signername__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signername__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signername__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__signername__first__bit rr_type__rrsig_record_type__rrsigrecordtype__signername__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signername__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signature__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signature__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signature__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signature__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__signature__first__bit rr_type__rrsig_record_type__rrsigrecordtype__signature__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signature__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__first__bit rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__position))
(declare-const rr_type__resourcerecordtype__ttlinseconds__first__bit1 Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__last__bit1 Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__position1 Int)
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__first__bit1))
(assert (< rr_type__resourcerecordtype__ttlinseconds__first__bit1 rr_type__resourcerecordtype__ttlinseconds__last__bit1))
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__position1))
(declare-const rr_type__resourcerecordtype__class__first__bit1 Int)
(declare-const rr_type__resourcerecordtype__class__last__bit1 Int)
(declare-const rr_type__resourcerecordtype__class__position1 Int)
(assert (<= 0 rr_type__resourcerecordtype__class__first__bit1))
(assert (< rr_type__resourcerecordtype__class__first__bit1 rr_type__resourcerecordtype__class__last__bit1))
(assert (<= 0 rr_type__resourcerecordtype__class__position1))
(declare-fun user_eq15 (us_rep1 us_rep1) Bool)
(declare-const dummy15 us_rep1)
(declare-datatypes () ((rrsigrecordtype__ref (mk_rrsigrecordtype__ref (rrsigrecordtype__content us_rep1)))))
(define-fun rrsigrecordtype__ref___projection ((a rrsigrecordtype__ref)) us_rep1 (rrsigrecordtype__content a))
(define-fun default_initial_assumption ((temp___expr_1752 us_rep1) (temp___skip_top_level_1753 Bool)) Bool (= (attr__tag1 temp___expr_1752) us_tag1))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const start_byte Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const rrsig_record us_rep1)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-sort source 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 18)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq16 (source source) Bool)
(declare-const dummy16 source)
(declare-datatypes () ((source__ref (mk_source__ref (source__content source)))))
(define-fun source__ref___2__projection ((a source__ref)) source (source__content a))
(define-fun dynamic_invariant6 ((temp___expr_5342 Int) (temp___is_init_5338 Bool) (temp___skip_constant_5339 Bool) (temp___do_toplevel_5340 Bool) (temp___do_typ_inv_5341 Bool)) Bool (=> (or (= temp___is_init_5338 true) (<= 0 18)) (in_range9 temp___expr_5342)))
(declare-sort target 0)
(declare-const attr__ATTRIBUTE_MODULUS4 (_ BitVec 32))
(declare-fun attr__ATTRIBUTE_IMAGE14 ((_ BitVec 32)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) (_ BitVec 32))
(declare-fun user_eq17 (target target) Bool)
(declare-const dummy17 target)
(declare-datatypes () ((target__ref (mk_target__ref (target__content target)))))
(define-fun target__ref___projection ((a target__ref)) target (target__content a))
(define-fun dynamic_invariant7 ((temp___expr_5349 (_ BitVec 32)) (temp___is_init_5345 Bool) (temp___skip_constant_5346 Bool) (temp___do_toplevel_5347 Bool) (temp___do_typ_inv_5348 Bool)) Bool true)
(declare-fun from_query_type (Int) (_ BitVec 32))
(declare-fun from_query_type__function_guard ((_ BitVec 32) Int) Bool)
(assert (forall ((s Int)) (! (=> (dynamic_invariant6 s true true true true) (dynamic_invariant7 (from_query_type s) true false true true)) :pattern ((from_query_type s)))))
(declare-sort source1 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 1 x) (<= x 8180)))
(declare-fun attr__ATTRIBUTE_IMAGE15 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check15 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE15 (us_image) Int)
(declare-fun user_eq18 (source1 source1) Bool)
(declare-const dummy18 source1)
(declare-datatypes () ((source__ref1 (mk_source__ref1 (source__content1 source1)))))
(define-fun source__ref___3__projection ((a source__ref1)) source1 (source__content1 a))
(define-fun dynamic_invariant8 ((temp___expr_5356 Int) (temp___is_init_5352 Bool) (temp___skip_constant_5353 Bool) (temp___do_toplevel_5354 Bool) (temp___do_typ_inv_5355 Bool)) Bool (=> (or (= temp___is_init_5352 true) (<= 1 8180)) (in_range10 temp___expr_5356)))
(declare-sort target1 0)
(declare-const attr__ATTRIBUTE_MODULUS5 (_ BitVec 32))
(declare-fun attr__ATTRIBUTE_IMAGE16 ((_ BitVec 32)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check16 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE16 (us_image) (_ BitVec 32))
(declare-fun user_eq19 (target1 target1) Bool)
(declare-const dummy19 target1)
(declare-datatypes () ((target__ref1 (mk_target__ref1 (target__content1 target1)))))
(define-fun target__ref___2__projection ((a target__ref1)) target1 (target__content1 a))
(define-fun dynamic_invariant9 ((temp___expr_5363 (_ BitVec 32)) (temp___is_init_5359 Bool) (temp___skip_constant_5360 Bool) (temp___do_toplevel_5361 Bool) (temp___do_typ_inv_5362 Bool)) Bool true)
(declare-fun from_bytes_range (Int) (_ BitVec 32))
(declare-fun from_bytes_range__function_guard ((_ BitVec 32) Int) Bool)
(assert (forall ((s Int)) (! (=> (dynamic_invariant8 s true true true true) (dynamic_invariant9 (from_bytes_range s) true false true true)) :pattern ((from_bytes_range s)))))
(declare-const r21b Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-fun to_rep8 (integer) Int)
(declare-fun of_rep8 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE17 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check17 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE17 (us_image) Int)
(declare-fun user_eq20 (integer integer) Bool)
(declare-const dummy20 integer)
(declare-datatypes () ((t22b__ref (mk_t22b__ref (t22b__content integer)))))
(define-fun t22b__ref___projection ((a t22b__ref)) integer (t22b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const c25b Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(declare-const c28b Int)
(declare-const attr__ATTRIBUTE_ADDRESS20 Int)
(declare-const attr__ATTRIBUTE_ADDRESS21 Int)
(declare-const c31b Int)
(declare-const attr__ATTRIBUTE_ADDRESS22 Int)
(declare-const attr__ATTRIBUTE_ADDRESS23 Int)
(declare-const c34b Int)
(declare-const attr__ATTRIBUTE_ADDRESS24 Int)
(declare-const attr__ATTRIBUTE_ADDRESS25 Int)
(define-fun dynamic_invariant10 ((temp___expr_861 Int) (temp___is_init_857 Bool) (temp___skip_constant_858 Bool) (temp___do_toplevel_859 Bool) (temp___do_typ_inv_860 Bool)) Bool (=> (or (= temp___is_init_857 true) (<= 0 18)) (in_range4 temp___expr_861)))
(define-fun dynamic_invariant11 ((temp___expr_949 (_ BitVec 8)) (temp___is_init_945 Bool) (temp___skip_constant_946 Bool) (temp___do_toplevel_947 Bool) (temp___do_typ_inv_948 Bool)) Bool true)
(define-fun dynamic_invariant12 ((temp___expr_956 (_ BitVec 16)) (temp___is_init_952 Bool) (temp___skip_constant_953 Bool) (temp___do_toplevel_954 Bool) (temp___do_typ_inv_955 Bool)) Bool true)
(define-fun dynamic_invariant13 ((temp___expr_963 (_ BitVec 32)) (temp___is_init_959 Bool) (temp___skip_constant_960 Bool) (temp___do_toplevel_961 Bool) (temp___do_typ_inv_962 Bool)) Bool true)
(define-fun dynamic_invariant14 ((temp___expr_970 Int) (temp___is_init_966 Bool) (temp___skip_constant_967 Bool) (temp___do_toplevel_968 Bool) (temp___do_typ_inv_969 Bool)) Bool (=> (or (= temp___is_init_966 true) (<= 0 3)) (in_range8 temp___expr_970)))
(define-fun default_initial_assumption1 ((temp___expr_1049 us_rep) (temp___skip_top_level_1050 Bool)) Bool (= (attr__tag temp___expr_1049) us_tag))
(define-fun dynamic_invariant15 ((temp___expr_1725 Int) (temp___is_init_1721 Bool) (temp___skip_constant_1722 Bool) (temp___do_toplevel_1723 Bool) (temp___do_typ_inv_1724 Bool)) Bool (=> (or (= temp___is_init_1721 true) (<= 1 1365)) (in_range6 temp___expr_1725)))
(declare-const dstbytes Int)
(declare-const wireversion (Array Int character))
(declare-const current_name_length Int)
(declare-const srcbyte Int)
(declare-const siglength Int)
(declare-const sigoffset Int)
(declare-const i Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 (_ BitVec 32))
(declare-const o3 (_ BitVec 32))
(declare-const o4 (_ BitVec 32))
(declare-const o5 (_ BitVec 16))
(declare-const o6 byte)
(declare-const o7 Int)
(declare-const o8 (Array Int byte))
(declare-const o9 byte)
(declare-const o10 Int)
(declare-const o11 (Array Int byte))
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 (Array Int character))
(declare-const o17 Int)
(declare-const temp___5914 (Array Int byte))
(declare-const temp___5913 Int)
(declare-const o18 Int)
(declare-const o19 (_ BitVec 8))
(declare-const o20 byte)
(declare-const o21 Int)
(declare-const o22 (Array Int byte))
(declare-const o23 Int)
(declare-const o24 Int)
(declare-const o25 Int)
(declare-const o26 character)
(declare-const process_dns_request__set_ttl_data_rrsig__L_6__C25b__assume Int)
(declare-const bytes (Array Int byte))
(declare-const result (Array Int byte))
(declare-const bytes1 (Array Int byte))
(declare-const result1 (Array Int byte))
(declare-const bytes2 (Array Int byte))
(declare-const bytes3 (Array Int byte))
(declare-const result2 map__ref)
(declare-const wireversion1 (Array Int character))
(declare-const result3 int__ref)
(declare-const current_name_length1 Int)
(declare-const result4 int__ref)
(declare-const i1 Int)
(declare-const bytes4 (Array Int byte))
(declare-const i2 Int)
(declare-const result5 map__ref1)
(declare-const bytes5 (Array Int byte))
(declare-const bytes6 map__ref1)
(declare-const i3 int__ref)
(declare-const bytes7 (Array Int byte))
(declare-const i4 Int)
(declare-const bytes8 map__ref1)
(declare-const i5 int__ref)
(declare-const bytes9 (Array Int byte))
(declare-const i6 Int)
(declare-const result6 int__ref)
(declare-const srcbyte1 Int)
(declare-const result7 int__ref)
(declare-const dstbytes1 Int)
(declare-const result8 int__ref)
(declare-const siglength1 Int)
(declare-const result9 int__ref)
(declare-const sigoffset1 Int)
(declare-const result10 Bool)
(declare-const dstbytes2 Int)
(declare-const srcbyte2 Int)
(declare-const srcnum0 (_ BitVec 8))
(declare-const ans (_ BitVec 8))
(declare-const result11 t__ref)
(declare-const ans1 (_ BitVec 8))
(declare-const result12 t__ref)
(declare-const ans2 (_ BitVec 8))
(declare-const result13 t__ref)
(declare-const ans3 (_ BitVec 8))
(declare-const result14 t__ref)
(declare-const ans4 (_ BitVec 8))
(declare-const result15 t__ref)
(declare-const ans5 (_ BitVec 8))
(declare-const result16 t__ref)
(declare-const ans6 (_ BitVec 8))
(declare-const ans7 t__ref)
(declare-const ans8 (_ BitVec 8))
(declare-const ans9 t__ref)
(declare-const ans10 (_ BitVec 8))
(declare-const ans11 t__ref)
(declare-const ans12 (_ BitVec 8))
(declare-const ans13 t__ref)
(declare-const ans14 (_ BitVec 8))
(declare-const ans15 t__ref)
(declare-const ans16 (_ BitVec 8))
(declare-const result17 t__ref)
(declare-const srcnum01 (_ BitVec 8))
(assert (in_range3 start_byte))
(assert (=> (<= 1 8180) (in_range3 dstbytes)))
(assert (<= start_byte 6663))
(assert (=> (<= 1 129) (in_range5 current_name_length)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 srcbyte)))
(assert (=> (<= 0 1365) (in_range7 siglength)))
(assert (=> (<= 1 8180) (in_range3 sigoffset)))
(assert (and (= o (+ start_byte 4)) (in_range3 (+ start_byte 4))))
(assert (= o2 (from_query_type (to_rep2 (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered (us_split_fields3 rrsig_record))))))
(assert (= o3 (bvurem o2 #x00010000)))
(assert (= o4 o3))
(assert (= o5 ((_ extract 15 0) o4)))
(assert (and (= o1 (+ start_byte 6)) (in_range3 (+ start_byte 6))))
(assert (= (to_rep1 o6) (to_rep3 (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm (us_split_fields3 rrsig_record)))))
(assert (and (<= 1 (+ start_byte 8)) (<= (+ start_byte 8) 8180)))
(assert (= o7 (+ start_byte 8)))
(assert (= o8 (store bytes o7 o6)))
(assert (= bytes result))
(assert (= bytes1 o8))
(assert (= (to_rep1 o9) (to_rep3 (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels (us_split_fields3 rrsig_record)))))
(assert (and (<= 1 (+ start_byte 9)) (<= (+ start_byte 9) 8180)))
(assert (= o10 (+ start_byte 9)))
(assert (= o11 (store bytes1 o10 o9)))
(assert (= bytes1 result1))
(assert (= bytes2 o11))
(assert (and (= o12 (+ start_byte 10)) (in_range3 (+ start_byte 10))))
(assert (and (= o13 (+ start_byte 14)) (in_range3 (+ start_byte 14))))
(assert (and (= o14 (+ start_byte 18)) (in_range3 (+ start_byte 18))))
(assert (and (= o15 (+ start_byte 22)) (in_range3 (+ start_byte 22))))
(assert (and (= o16 (convertdomainnametowire (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (us_split_fields3 rrsig_record)))) (forall ((i7 Int)) (=> (and (<= 1 i7) (<= i7 128)) (and (<= 0 (to_rep (select o16 i7))) (<= (to_rep (select o16 i7)) 255))))))
(assert (= result2 (mk_map__ref wireversion)))
(assert (= wireversion1 o16))
(assert (and (= o17 (wirenamelength wireversion1)) (and (in_range5 o17) (or (= o17 129) (and (= (to_rep (select wireversion1 o17)) 0) (forall ((q Int)) (=> (and (<= 1 q) (<= q (- o17 1))) (not (= (to_rep (select wireversion1 q)) 0)))))))))
(assert (= result3 (mk_int__ref current_name_length)))
(assert (= current_name_length1 o17))
(assert (= current_name_length1 r21b))
(assert (in_range5 r21b))
(assert (= result4 (mk_int__ref i)))
(assert (= i1 1))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= temp___5914 bytes3)))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= temp___5913 i1)))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (and (and (and (and (and (<= start_byte (- 8156 current_name_length1)) (<= 1 i2)) (<= i2 129)) (<= 1 current_name_length1)) (<= current_name_length1 129)) (forall ((j Int)) (=> (and (<= 1 j) (<= j 129)) (and (<= 0 (to_rep (select wireversion1 j))) (<= (to_rep (select wireversion1 j)) 255)))))))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (and (=> (<= 1 r21b) (dynamic_property 1 r21b i2)) (and (<= 1 i2) (<= i2 r21b)))))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (and (= o18 (to_rep (select wireversion1 i2))) (uint_in_range (to_rep (select wireversion1 i2))))))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= o19 ((_ int2bv 8) o18))))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= (to_rep1 o20) o19)))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (and (<= 1 (+ (- (+ start_byte 24) 1) i2)) (<= (+ (- (+ start_byte 24) 1) i2) 8180))))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= o21 (+ (- (+ start_byte 24) 1) i2))))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= o22 (store bytes4 o21 o20))))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= result5 (mk_map__ref1 bytes4))))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= bytes5 o22)))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= i2 r21b)))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= i3 (mk_int__ref i2))))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= bytes6 (mk_map__ref1 bytes5))))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= i4 i2)))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= bytes7 bytes5)))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= i5 i3)))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= bytes8 bytes6)))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= i6 i4)))
(assert (=> (and (<= 1 i1) (<= i1 r21b)) (= bytes9 bytes7)))
(assert (=> (not (and (<= 1 i1) (<= i1 r21b))) (= i5 (mk_int__ref i1))))
(assert (=> (not (and (<= 1 i1) (<= i1 r21b))) (= bytes8 (mk_map__ref1 bytes3))))
(assert (=> (not (and (<= 1 i1) (<= i1 r21b))) (= i6 i1)))
(assert (=> (not (and (<= 1 i1) (<= i1 r21b))) (= bytes9 bytes3)))
(assert (= result6 (mk_int__ref srcbyte)))
(assert (= srcbyte1 1))
(assert (= result7 (mk_int__ref dstbytes)))
(assert (= dstbytes1 1))
(assert (= result8 (mk_int__ref siglength)))
(assert (= siglength1 (to_rep6 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields3 rrsig_record)))))
(assert (and (= o23 (+ (- (+ start_byte 24) 1) current_name_length1)) (in_range3 (+ (- (+ start_byte 24) 1) current_name_length1))))
(assert (= result9 (mk_int__ref sigoffset)))
(assert (= sigoffset1 o23))
(assert (and (= o24 (+ srcbyte1 3)) (in_range1 (+ srcbyte1 3))))
(assert (= result10 (ite (<= o24 siglength1) true false)))
(assert (= result10 true))
(assert (and (and (and (and (and (and (and (and (<= (+ srcbyte2 3) siglength1) (<= siglength1 1365)) (= siglength1 (to_rep6 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields3 rrsig_record))))) (<= 1 dstbytes2)) (<= dstbytes2 srcbyte2)) (<= start_byte (- 8028 siglength1))) (<= 1 current_name_length1)) (<= current_name_length1 129)) (= sigoffset1 (+ (- (+ start_byte 24) 1) current_name_length1))))
(assert (and (and (=> (<= (- 2147483648) 2147483647) (in_range1 srcbyte2)) (=> (<= 1 8180) (in_range3 dstbytes2))) (<= (+ srcbyte2 3) siglength1)))
(assert (and (<= 1 srcbyte2) (<= srcbyte2 1365)))
(assert (= o25 srcbyte2))
(assert (= o26 (select (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (us_split_fields3 rrsig_record)) o25)))
(assert (= process_dns_request__set_ttl_data_rrsig__L_6__C25b__assume (to_rep o26)))
(assert (= process_dns_request__set_ttl_data_rrsig__L_6__C25b__assume c25b))
(assert (in_range2 c25b))
(assert (=> (and (<= 65 c25b) (<= c25b 90)) (= result11 (mk_t__ref ans))))
(assert (=> (and (<= 65 c25b) (<= c25b 90)) (= ans1 (bvsub ((_ int2bv 8) c25b) #x41))))
(assert (=> (and (<= 65 c25b) (<= c25b 90)) (= ans15 (mk_t__ref ans1))))
(assert (=> (and (<= 65 c25b) (<= c25b 90)) (= ans16 ans1)))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (and (<= 97 c25b) (<= c25b 122)) (= result12 (mk_t__ref ans)))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (and (<= 97 c25b) (<= c25b 122)) (= ans2 (bvadd (bvsub ((_ int2bv 8) c25b) #x61) #x1A)))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (and (<= 97 c25b) (<= c25b 122)) (= ans13 (mk_t__ref ans2)))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (and (<= 97 c25b) (<= c25b 122)) (= ans14 ans2))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (and (<= 48 c25b) (<= c25b 57)) (= result13 (mk_t__ref ans))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (and (<= 48 c25b) (<= c25b 57)) (= ans3 (bvadd (bvsub ((_ int2bv 8) c25b) #x30) #x34))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (and (<= 48 c25b) (<= c25b 57)) (= ans11 (mk_t__ref ans3))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (and (<= 48 c25b) (<= c25b 57)) (= ans12 ans3)))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (= c25b 43) (= result14 (mk_t__ref ans)))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (= c25b 43) (= ans4 #x3E))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (= c25b 43) (= ans9 (mk_t__ref ans4)))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (= c25b 43) (= ans10 ans4))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (not (= c25b 43)) (=> (= c25b 47) (= result15 (mk_t__ref ans))))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (not (= c25b 43)) (=> (= c25b 47) (= ans5 #x3F)))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (not (= c25b 43)) (=> (= c25b 47) (= ans7 (mk_t__ref ans5))))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (not (= c25b 43)) (=> (= c25b 47) (= ans8 ans5)))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (not (= c25b 43)) (=> (not (= c25b 47)) (= result16 (mk_t__ref ans))))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (not (= c25b 43)) (=> (not (= c25b 47)) (= ans6 #x00)))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (not (= c25b 43)) (=> (not (= c25b 47)) (= ans7 (mk_t__ref ans6))))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (not (= c25b 43)) (=> (not (= c25b 47)) (= ans8 ans6)))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (not (= c25b 43)) (= ans9 ans7))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (=> (not (= c25b 43)) (= ans10 ans8))))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (= ans11 ans9)))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (=> (not (and (<= 48 c25b) (<= c25b 57))) (= ans12 ans10)))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (= ans13 ans11))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (=> (not (and (<= 97 c25b) (<= c25b 122))) (= ans14 ans12))))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (= ans15 ans13)))
(assert (=> (not (and (<= 65 c25b) (<= c25b 90))) (= ans16 ans14)))
(assert (= result17 (mk_t__ref srcnum0)))
(assert (= srcnum01 (t__content ans15)))
(assert (not (in_range1 (+ srcbyte2 1))))
(check-sat)
(exit)
