(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFBVDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-fun nth ((_ BitVec 16) Int) Bool)
(declare-fun lsr ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun asr ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun lsl ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_right1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun rotate_left1 ((_ BitVec 16) Int) (_ BitVec 16))
(declare-fun pow2 (Int) Int)
(define-fun to_int1 ((x (_ BitVec 16))) Int (ite (bvsge x (_ bv0 16)) (bv2nat x) (- (- 65536 (bv2nat x)))))
(define-fun uint_in_range ((i Int)) Bool (and (<= 0 i) (<= i 65535)))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvlshr x n) (lsr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvashr x n) (asr x (bv2nat n)))))
(assert (forall ((x (_ BitVec 16)) (n (_ BitVec 16))) (= (bvshl x n) (lsl x (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvshl v (bvurem n (_ bv16 16))) (bvlshr v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_left1 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 16)) (n (_ BitVec 16))) (= (bvor (bvlshr v (bvurem n (_ bv16 16))) (bvshl v (bvsub (_ bv16 16) (bvurem n (_ bv16 16))))) (rotate_right1 v (bv2nat n)))))
(declare-fun nth_bv ((_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (= (nth_bv x i) true) (not (= (bvand (bvlshr x i) #x0001) #x0000)))))
(assert (forall ((x (_ BitVec 16)) (i (_ BitVec 16))) (= (nth x (bv2nat i)) (nth_bv x i))))
(assert (forall ((x (_ BitVec 16)) (i Int)) (=> (and (<= 0 i) (< i 65536)) (= (nth_bv x ((_ int2bv 16) i)) (nth x i)))))
(declare-fun eq_sub_bv ((_ BitVec 16) (_ BitVec 16) (_ BitVec 16) (_ BitVec 16)) Bool)
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (let ((mask (bvshl (bvsub (bvshl #x0001 n) #x0001) i))) (= (eq_sub_bv a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub ((a (_ BitVec 16)) (b (_ BitVec 16)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth a j) (nth b j)))))
(assert (forall ((a (_ BitVec 16)) (b (_ BitVec 16)) (i (_ BitVec 16)) (n (_ BitVec 16))) (= (eq_sub a b (bv2nat i) (bv2nat n)) (eq_sub_bv a b i n))))
(declare-datatypes () ((t__ref (mk_t__ref (t__content (_ BitVec 16))))))
(declare-fun power ((_ BitVec 16) Int) (_ BitVec 16))
(define-fun bv_min ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) x y))
(define-fun bv_max ((x (_ BitVec 16)) (y (_ BitVec 16))) (_ BitVec 16) (ite (bvule x y) y x))
(declare-fun nth1 ((_ BitVec 32) Int) Bool)
(declare-fun lsr1 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun asr1 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun lsl1 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_right2 ((_ BitVec 32) Int) (_ BitVec 32))
(declare-fun rotate_left2 ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun to_int2 ((x (_ BitVec 32))) Int (ite (bvsge x (_ bv0 32)) (bv2nat x) (- (- 4294967296 (bv2nat x)))))
(define-fun uint_in_range1 ((i Int)) Bool (and (<= 0 i) (<= i 4294967295)))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvlshr x n) (lsr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvashr x n) (asr1 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 32)) (n (_ BitVec 32))) (= (bvshl x n) (lsl1 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvshl v (bvurem n (_ bv32 32))) (bvlshr v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_left2 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 32)) (n (_ BitVec 32))) (= (bvor (bvlshr v (bvurem n (_ bv32 32))) (bvshl v (bvsub (_ bv32 32) (bvurem n (_ bv32 32))))) (rotate_right2 v (bv2nat n)))))
(declare-fun nth_bv1 ((_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (= (nth_bv1 x i) true) (not (= (bvand (bvlshr x i) #x00000001) #x00000000)))))
(assert (forall ((x (_ BitVec 32)) (i (_ BitVec 32))) (= (nth1 x (bv2nat i)) (nth_bv1 x i))))
(assert (forall ((x (_ BitVec 32)) (i Int)) (=> (and (<= 0 i) (< i 4294967296)) (= (nth_bv1 x ((_ int2bv 32) i)) (nth1 x i)))))
(declare-fun eq_sub_bv1 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) Bool)
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (let ((mask (bvshl (bvsub (bvshl #x00000001 n) #x00000001) i))) (= (eq_sub_bv1 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub1 ((a (_ BitVec 32)) (b (_ BitVec 32)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth1 a j) (nth1 b j)))))
(assert (forall ((a (_ BitVec 32)) (b (_ BitVec 32)) (i (_ BitVec 32)) (n (_ BitVec 32))) (= (eq_sub1 a b (bv2nat i) (bv2nat n)) (eq_sub_bv1 a b i n))))
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 (_ BitVec 32))))))
(declare-fun power1 ((_ BitVec 32) Int) (_ BitVec 32))
(define-fun bv_min1 ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) x y))
(define-fun bv_max1 ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32) (ite (bvule x y) y x))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-sort rritemtype 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (rritemtype rritemtype) Bool)
(declare-const dummy2 rritemtype)
(declare-datatypes () ((rritemtype__ref (mk_rritemtype__ref (rritemtype__content rritemtype)))))
(define-fun rritemtype__ref___projection ((a rritemtype__ref)) rritemtype (rritemtype__content a))
(define-fun dynamic_invariant1 ((temp___expr_298 Int) (temp___is_init_294 Bool) (temp___skip_constant_295 Bool) (temp___do_toplevel_296 Bool) (temp___do_typ_inv_297 Bool)) Bool (=> (or (= temp___is_init_294 true) (<= 0 10)) (in_range3 temp___expr_298)))
(declare-sort linelengthindex 0)
(declare-fun linelengthindexqtint (linelengthindex) Int)
(assert (forall ((i linelengthindex)) (and (<= 1 (linelengthindexqtint i)) (<= (linelengthindexqtint i) 256))))
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 256)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (linelengthindex linelengthindex) Bool)
(declare-const dummy3 linelengthindex)
(declare-datatypes () ((linelengthindex__ref (mk_linelengthindex__ref (linelengthindex__content linelengthindex)))))
(define-fun linelengthindex__ref___projection ((a linelengthindex__ref)) linelengthindex (linelengthindex__content a))
(define-fun dynamic_invariant2 ((temp___expr_305 Int) (temp___is_init_301 Bool) (temp___skip_constant_302 Bool) (temp___do_toplevel_303 Bool) (temp___do_typ_inv_304 Bool)) Bool (=> (or (= temp___is_init_301 true) (<= 1 256)) (in_range4 temp___expr_305)))
(declare-sort unsigned16 0)
(declare-const attr__ATTRIBUTE_MODULUS (_ BitVec 16))
(declare-fun attr__ATTRIBUTE_IMAGE5 ((_ BitVec 16)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) (_ BitVec 16))
(declare-fun user_eq4 (unsigned16 unsigned16) Bool)
(declare-const dummy4 unsigned16)
(declare-datatypes () ((unsigned16__ref (mk_unsigned16__ref (unsigned16__content unsigned16)))))
(define-fun unsigned16__ref___projection ((a unsigned16__ref)) unsigned16 (unsigned16__content a))
(define-fun dynamic_invariant3 ((temp___expr_277 (_ BitVec 16)) (temp___is_init_273 Bool) (temp___skip_constant_274 Bool) (temp___do_toplevel_275 Bool) (temp___do_typ_inv_276 Bool)) Bool true)
(declare-sort unsigned32 0)
(declare-const attr__ATTRIBUTE_MODULUS1 (_ BitVec 32))
(declare-fun attr__ATTRIBUTE_IMAGE6 ((_ BitVec 32)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) (_ BitVec 32))
(declare-fun user_eq5 (unsigned32 unsigned32) Bool)
(declare-const dummy5 unsigned32)
(declare-datatypes () ((unsigned32__ref (mk_unsigned32__ref (unsigned32__content unsigned32)))))
(define-fun unsigned32__ref___projection ((a unsigned32__ref)) unsigned32 (unsigned32__content a))
(define-fun dynamic_invariant4 ((temp___expr_284 (_ BitVec 32)) (temp___is_init_280 Bool) (temp___skip_constant_281 Bool) (temp___do_toplevel_282 Bool) (temp___do_typ_inv_283 Bool)) Bool true)
(declare-fun nth2 ((_ BitVec 8) Int) Bool)
(declare-fun lsr2 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun asr2 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun lsl2 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_right3 ((_ BitVec 8) Int) (_ BitVec 8))
(declare-fun rotate_left3 ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun to_int3 ((x (_ BitVec 8))) Int (ite (bvsge x (_ bv0 8)) (bv2nat x) (- (- 256 (bv2nat x)))))
(define-fun uint_in_range2 ((i Int)) Bool (and (<= 0 i) (<= i 255)))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvlshr x n) (lsr2 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvashr x n) (asr2 x (bv2nat n)))))
(assert (forall ((x (_ BitVec 8)) (n (_ BitVec 8))) (= (bvshl x n) (lsl2 x (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvshl v (bvurem n (_ bv8 8))) (bvlshr v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_left3 v (bv2nat n)))))
(assert (forall ((v (_ BitVec 8)) (n (_ BitVec 8))) (= (bvor (bvlshr v (bvurem n (_ bv8 8))) (bvshl v (bvsub (_ bv8 8) (bvurem n (_ bv8 8))))) (rotate_right3 v (bv2nat n)))))
(declare-fun nth_bv2 ((_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (= (nth_bv2 x i) true) (not (= (bvand (bvlshr x i) #x01) #x00)))))
(assert (forall ((x (_ BitVec 8)) (i (_ BitVec 8))) (= (nth2 x (bv2nat i)) (nth_bv2 x i))))
(assert (forall ((x (_ BitVec 8)) (i Int)) (=> (and (<= 0 i) (< i 256)) (= (nth_bv2 x ((_ int2bv 8) i)) (nth2 x i)))))
(declare-fun eq_sub_bv2 ((_ BitVec 8) (_ BitVec 8) (_ BitVec 8) (_ BitVec 8)) Bool)
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (let ((mask (bvshl (bvsub (bvshl #x01 n) #x01) i))) (= (eq_sub_bv2 a b i n) (= (bvand b mask) (bvand a mask))))))
(define-fun eq_sub2 ((a (_ BitVec 8)) (b (_ BitVec 8)) (i Int) (n Int)) Bool (forall ((j Int)) (=> (and (<= i j) (< j (+ i n))) (= (nth2 a j) (nth2 b j)))))
(assert (forall ((a (_ BitVec 8)) (b (_ BitVec 8)) (i (_ BitVec 8)) (n (_ BitVec 8))) (= (eq_sub2 a b (bv2nat i) (bv2nat n)) (eq_sub_bv2 a b i n))))
(declare-datatypes () ((t__ref2 (mk_t__ref2 (t__content2 (_ BitVec 8))))))
(declare-fun power2 ((_ BitVec 8) Int) (_ BitVec 8))
(define-fun bv_min2 ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) x y))
(define-fun bv_max2 ((x (_ BitVec 8)) (y (_ BitVec 8))) (_ BitVec 8) (ite (bvule x y) y x))
(declare-sort unsigned8 0)
(declare-const attr__ATTRIBUTE_MODULUS2 (_ BitVec 8))
(declare-fun attr__ATTRIBUTE_IMAGE7 ((_ BitVec 8)) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) (_ BitVec 8))
(declare-fun user_eq6 (unsigned8 unsigned8) Bool)
(declare-const dummy6 unsigned8)
(declare-datatypes () ((unsigned8__ref (mk_unsigned8__ref (unsigned8__content unsigned8)))))
(define-fun unsigned8__ref___projection ((a unsigned8__ref)) unsigned8 (unsigned8__content a))
(declare-fun to_rep1 (unsigned16) (_ BitVec 16))
(declare-fun of_rep1 ((_ BitVec 16)) unsigned16)
(assert (forall ((x unsigned16)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert true)
(assert (forall ((x (_ BitVec 16))) (! (= (to_rep1 (of_rep1 x)) x) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun to_int4 ((x unsigned16)) Int (bv2nat (to_rep1 x)))
(assert (forall ((x unsigned16)) (! (uint_in_range (to_int4 x)) :pattern ((to_int4 x)))))
(declare-fun to_rep2 (unsigned32) (_ BitVec 32))
(declare-fun of_rep2 ((_ BitVec 32)) unsigned32)
(assert (forall ((x unsigned32)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert true)
(assert (forall ((x (_ BitVec 32))) (! (= (to_rep2 (of_rep2 x)) x) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun to_int5 ((x unsigned32)) Int (bv2nat (to_rep2 x)))
(assert (forall ((x unsigned32)) (! (uint_in_range1 (to_int5 x)) :pattern ((to_int5 x)))))
(declare-sort classtype 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq7 (classtype classtype) Bool)
(declare-const dummy7 classtype)
(declare-datatypes () ((classtype__ref (mk_classtype__ref (classtype__content classtype)))))
(define-fun classtype__ref___projection ((a classtype__ref)) classtype (classtype__content a))
(declare-sort domainnamestringtypeindex 0)
(declare-fun domainnamestringtypeindexqtint (domainnamestringtypeindex) Int)
(assert (forall ((i domainnamestringtypeindex)) (and (<= 1 (domainnamestringtypeindexqtint i)) (<= (domainnamestringtypeindexqtint i) 128))))
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq8 (domainnamestringtypeindex domainnamestringtypeindex) Bool)
(declare-const dummy8 domainnamestringtypeindex)
(declare-datatypes () ((domainnamestringtypeindex__ref (mk_domainnamestringtypeindex__ref (domainnamestringtypeindex__content domainnamestringtypeindex)))))
(define-fun domainnamestringtypeindex__ref___projection ((a domainnamestringtypeindex__ref)) domainnamestringtypeindex (domainnamestringtypeindex__content a))
(declare-sort query_type 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 18)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq9 (query_type query_type) Bool)
(declare-const dummy9 query_type)
(declare-datatypes () ((query_type__ref (mk_query_type__ref (query_type__content query_type)))))
(define-fun query_type__ref___projection ((a query_type__ref)) query_type (query_type__content a))
(declare-sort timestringtypeindex 0)
(declare-fun timestringtypeindexqtint (timestringtypeindex) Int)
(assert (forall ((i timestringtypeindex)) (and (<= 1 (timestringtypeindexqtint i)) (<= (timestringtypeindexqtint i) 14))))
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 14)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq10 (timestringtypeindex timestringtypeindex) Bool)
(declare-const dummy10 timestringtypeindex)
(declare-datatypes () ((timestringtypeindex__ref (mk_timestringtypeindex__ref (timestringtypeindex__content timestringtypeindex)))))
(define-fun timestringtypeindex__ref___projection ((a timestringtypeindex__ref)) timestringtypeindex (timestringtypeindex__content a))
(declare-sort siglengthvaluetype 0)
(declare-fun siglengthvaluetypeqtint (siglengthvaluetype) Int)
(assert (forall ((i siglengthvaluetype)) (and (<= 0 (siglengthvaluetypeqtint i)) (<= (siglengthvaluetypeqtint i) 1365))))
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 1365)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq11 (siglengthvaluetype siglengthvaluetype) Bool)
(declare-const dummy11 siglengthvaluetype)
(declare-datatypes () ((siglengthvaluetype__ref (mk_siglengthvaluetype__ref (siglengthvaluetype__content siglengthvaluetype)))))
(define-fun siglengthvaluetype__ref___projection ((a siglengthvaluetype__ref)) siglengthvaluetype (siglengthvaluetype__content a))
(declare-fun to_rep3 (unsigned8) (_ BitVec 8))
(declare-fun of_rep3 ((_ BitVec 8)) unsigned8)
(assert (forall ((x unsigned8)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert true)
(assert (forall ((x (_ BitVec 8))) (! (= (to_rep3 (of_rep3 x)) x) :pattern ((to_rep3 (of_rep3 x))))))
(define-fun to_int6 ((x unsigned8)) Int (bv2nat (to_rep3 x)))
(assert (forall ((x unsigned8)) (! (uint_in_range2 (to_int6 x)) :pattern ((to_int6 x)))))
(declare-fun to_rep4 (classtype) Int)
(declare-fun of_rep4 (Int) classtype)
(assert (forall ((x classtype)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x classtype)) (! (in_range5 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-const dummy12 (Array Int character))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(declare-fun user_eq12 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__rr_type__resourcerecordtype__ttlinseconds unsigned32) (rec__rr_type__resourcerecordtype__class classtype) (rec__ext__ us_private)))))
(define-fun us_split_fields_TTLInSeconds__projection ((a us_split_fields)) unsigned32 (rec__rr_type__resourcerecordtype__ttlinseconds a))
(define-fun us_split_fields_Class__projection ((a us_split_fields)) classtype (rec__rr_type__resourcerecordtype__class a))
(define-fun us_split_fields___projection ((a us_split_fields)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields) (attr__tag Int)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___2__projection ((a us_rep)) Int (attr__tag a))
(define-fun bool_eq1 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep2 (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 a))) (to_rep2 (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 b)))) (= (to_rep4 (rec__rr_type__resourcerecordtype__class (us_split_fields1 a))) (to_rep4 (rec__rr_type__resourcerecordtype__class (us_split_fields1 b))))) true false))
(declare-fun us_dispatch_eq (us_rep us_rep) Bool)
(declare-const us_tag Int)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const rr_type__resourcerecordtype__ttlinseconds__first__bit Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__last__bit Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__position Int)
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__first__bit))
(assert (< rr_type__resourcerecordtype__ttlinseconds__first__bit rr_type__resourcerecordtype__ttlinseconds__last__bit))
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__position))
(declare-const rr_type__resourcerecordtype__class__first__bit Int)
(declare-const rr_type__resourcerecordtype__class__last__bit Int)
(declare-const rr_type__resourcerecordtype__class__position Int)
(assert (<= 0 rr_type__resourcerecordtype__class__first__bit))
(assert (< rr_type__resourcerecordtype__class__first__bit rr_type__resourcerecordtype__class__last__bit))
(assert (<= 0 rr_type__resourcerecordtype__class__position))
(declare-fun user_eq13 (us_rep us_rep) Bool)
(declare-const dummy13 us_rep)
(declare-datatypes () ((resourcerecordtype__ref (mk_resourcerecordtype__ref (resourcerecordtype__content us_rep)))))
(define-fun resourcerecordtype__ref___projection ((a resourcerecordtype__ref)) us_rep (resourcerecordtype__content a))
(declare-fun to_rep5 (query_type) Int)
(declare-fun of_rep5 (Int) query_type)
(assert (forall ((x query_type)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x query_type)) (! (in_range7 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-const dummy14 (Array Int character))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq14 ((Array Int character) (Array Int character)) Bool)
(define-fun to_rep6 ((x siglengthvaluetype)) Int (siglengthvaluetypeqtint x))
(declare-fun of_rep6 (Int) siglengthvaluetype)
(assert (forall ((x siglengthvaluetype)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x siglengthvaluetype)) (! (in_range9 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered query_type) (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm unsigned8) (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels unsigned8) (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl unsigned32) (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration unsigned32) (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception unsigned32) (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag unsigned16) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (Array Int character)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (Array Int character)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength siglengthvaluetype) (rec__rr_type__resourcerecordtype__ttlinseconds1 unsigned32) (rec__rr_type__resourcerecordtype__class1 classtype) (rec__ext__1 us_private)))))
(define-fun us_split_fields_TypeCovered__projection ((a us_split_fields2)) query_type (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered a))
(define-fun us_split_fields_Algorithm__2__projection ((a us_split_fields2)) unsigned8 (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm a))
(define-fun us_split_fields_NumLabels__projection ((a us_split_fields2)) unsigned8 (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels a))
(define-fun us_split_fields_OrigTTL__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl a))
(define-fun us_split_fields_SigExpiration__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration a))
(define-fun us_split_fields_SigInception__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception a))
(define-fun us_split_fields_KeyTag__projection ((a us_split_fields2)) unsigned16 (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag a))
(define-fun us_split_fields_SignerName__projection ((a us_split_fields2)) (Array Int character) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername a))
(define-fun us_split_fields_Signature__projection ((a us_split_fields2)) (Array Int character) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature a))
(define-fun us_split_fields_SignatureLength__projection ((a us_split_fields2)) siglengthvaluetype (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength a))
(define-fun us_split_fields_TTLInSeconds__4__projection ((a us_split_fields2)) unsigned32 (rec__rr_type__resourcerecordtype__ttlinseconds1 a))
(define-fun us_split_fields_Class__4__projection ((a us_split_fields2)) classtype (rec__rr_type__resourcerecordtype__class1 a))
(define-fun us_split_fields___4__projection ((a us_split_fields2)) us_private (rec__ext__1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2) (attr__tag1 Int)))))
(define-fun us_rep___11__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun us_rep___12__projection ((a us_rep1)) Int (attr__tag1 a))
(declare-fun hide_ext__ (query_type unsigned8 unsigned8 unsigned32 unsigned32 unsigned32 unsigned16 (Array Int character) (Array Int character) siglengthvaluetype us_private) us_private)
(declare-fun extract__typecovered (us_private) query_type)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__typecovered (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) typecovered)))))))))
(declare-fun extract__algorithm (us_private) unsigned8)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__algorithm (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) algorithm)))))))))
(declare-fun extract__numlabels (us_private) unsigned8)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__numlabels (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) numlabels)))))))))
(declare-fun extract__origttl (us_private) unsigned32)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__origttl (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) origttl)))))))))
(declare-fun extract__sigexpiration (us_private) unsigned32)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__sigexpiration (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) sigexpiration)))))))))
(declare-fun extract__siginception (us_private) unsigned32)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__siginception (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) siginception)))))))))
(declare-fun extract__keytag (us_private) unsigned16)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__keytag (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) keytag)))))))))
(declare-fun extract__signername (us_private) (Array Int character))
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__signername (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) signername)))))))))
(declare-fun extract__signature (us_private) (Array Int character))
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__signature (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) signature)))))))))
(declare-fun extract__signaturelength (us_private) siglengthvaluetype)
(assert (forall ((typecovered query_type)) (forall ((algorithm unsigned8) (numlabels unsigned8)) (forall ((origttl unsigned32) (sigexpiration unsigned32) (siginception unsigned32)) (forall ((keytag unsigned16)) (forall ((signername (Array Int character)) (signature (Array Int character))) (forall ((signaturelength siglengthvaluetype)) (forall ((rec__ext__2 us_private)) (= (extract__signaturelength (hide_ext__ typecovered algorithm numlabels origttl sigexpiration siginception keytag signername signature signaturelength rec__ext__2)) signaturelength)))))))))
(declare-fun extract__ext__ (us_private) us_private)
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (mk___split_fields (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 a)) (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 a)) (hide_ext__ (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (us_split_fields3 a)) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields3 a)) (rec__ext__1 (us_split_fields3 a)))) (attr__tag1 a)))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (mk___split_fields1 (extract__typecovered (rec__ext__ (us_split_fields1 r))) (extract__algorithm (rec__ext__ (us_split_fields1 r))) (extract__numlabels (rec__ext__ (us_split_fields1 r))) (extract__origttl (rec__ext__ (us_split_fields1 r))) (extract__sigexpiration (rec__ext__ (us_split_fields1 r))) (extract__siginception (rec__ext__ (us_split_fields1 r))) (extract__keytag (rec__ext__ (us_split_fields1 r))) (extract__signername (rec__ext__ (us_split_fields1 r))) (extract__signature (rec__ext__ (us_split_fields1 r))) (extract__signaturelength (rec__ext__ (us_split_fields1 r))) (rec__rr_type__resourcerecordtype__ttlinseconds (us_split_fields1 r)) (rec__rr_type__resourcerecordtype__class (us_split_fields1 r)) (extract__ext__ (rec__ext__ (us_split_fields1 r)))) (attr__tag r)))
(define-fun bool_eq2 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (and (and (and (and (and (and (and (and (= (to_rep5 (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered (us_split_fields3 a))) (to_rep5 (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered (us_split_fields3 b)))) (= (to_rep3 (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm (us_split_fields3 a))) (to_rep3 (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm (us_split_fields3 b))))) (= (to_rep3 (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels (us_split_fields3 a))) (to_rep3 (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels (us_split_fields3 b))))) (= (to_rep2 (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl (us_split_fields3 a))) (to_rep2 (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl (us_split_fields3 b))))) (= (to_rep2 (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration (us_split_fields3 a))) (to_rep2 (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration (us_split_fields3 b))))) (= (to_rep2 (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception (us_split_fields3 a))) (to_rep2 (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception (us_split_fields3 b))))) (= (to_rep1 (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag (us_split_fields3 a))) (to_rep1 (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag (us_split_fields3 b))))) (= (bool_eq (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (us_split_fields3 a)) 1 128 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (us_split_fields3 b)) 1 128) true)) (= (bool_eq (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (us_split_fields3 a)) 1 1365 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (us_split_fields3 b)) 1 1365) true)) (= (to_rep6 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields3 a))) (to_rep6 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields3 b))))) (= (to_rep2 (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 a))) (to_rep2 (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields3 b))))) (= (to_rep4 (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 a))) (to_rep4 (rec__rr_type__resourcerecordtype__class1 (us_split_fields3 b))))) true false))
(declare-const us_tag1 Int)
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__typecovered__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__typecovered__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__typecovered__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__typecovered__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__typecovered__first__bit rr_type__rrsig_record_type__rrsigrecordtype__typecovered__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__typecovered__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__algorithm__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__algorithm__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__algorithm__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__algorithm__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__algorithm__first__bit rr_type__rrsig_record_type__rrsigrecordtype__algorithm__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__algorithm__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__numlabels__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__numlabels__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__numlabels__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__numlabels__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__numlabels__first__bit rr_type__rrsig_record_type__rrsigrecordtype__numlabels__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__numlabels__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__origttl__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__origttl__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__origttl__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__origttl__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__origttl__first__bit rr_type__rrsig_record_type__rrsigrecordtype__origttl__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__origttl__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__first__bit rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__siginception__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__siginception__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__siginception__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__siginception__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__siginception__first__bit rr_type__rrsig_record_type__rrsigrecordtype__siginception__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__siginception__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__keytag__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__keytag__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__keytag__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__keytag__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__keytag__first__bit rr_type__rrsig_record_type__rrsigrecordtype__keytag__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__keytag__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signername__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signername__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signername__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signername__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__signername__first__bit rr_type__rrsig_record_type__rrsigrecordtype__signername__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signername__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signature__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signature__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signature__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signature__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__signature__first__bit rr_type__rrsig_record_type__rrsigrecordtype__signature__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signature__position))
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__first__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__last__bit Int)
(declare-const rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__position Int)
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__first__bit))
(assert (< rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__first__bit rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__last__bit))
(assert (<= 0 rr_type__rrsig_record_type__rrsigrecordtype__signaturelength__position))
(declare-const rr_type__resourcerecordtype__ttlinseconds__first__bit1 Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__last__bit1 Int)
(declare-const rr_type__resourcerecordtype__ttlinseconds__position1 Int)
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__first__bit1))
(assert (< rr_type__resourcerecordtype__ttlinseconds__first__bit1 rr_type__resourcerecordtype__ttlinseconds__last__bit1))
(assert (<= 0 rr_type__resourcerecordtype__ttlinseconds__position1))
(declare-const rr_type__resourcerecordtype__class__first__bit1 Int)
(declare-const rr_type__resourcerecordtype__class__last__bit1 Int)
(declare-const rr_type__resourcerecordtype__class__position1 Int)
(assert (<= 0 rr_type__resourcerecordtype__class__first__bit1))
(assert (< rr_type__resourcerecordtype__class__first__bit1 rr_type__resourcerecordtype__class__last__bit1))
(assert (<= 0 rr_type__resourcerecordtype__class__position1))
(declare-fun user_eq15 (us_rep1 us_rep1) Bool)
(declare-const dummy15 us_rep1)
(declare-datatypes () ((rrsigrecordtype__ref (mk_rrsigrecordtype__ref (rrsigrecordtype__content us_rep1)))))
(define-fun rrsigrecordtype__ref___projection ((a rrsigrecordtype__ref)) us_rep1 (rrsigrecordtype__content a))
(define-fun default_initial_assumption ((temp___expr_842 us_rep1) (temp___skip_top_level_843 Bool)) Bool (= (attr__tag1 temp___expr_842) us_tag1))
(declare-const rrsig_rec__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const zonefileline (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const zlength Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const r13b Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const r14b Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(define-fun to_rep7 ((x integer)) Int (integerqtint x))
(declare-fun of_rep7 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq16 (integer integer) Bool)
(declare-const dummy16 integer)
(declare-datatypes () ((t15b__ref (mk_t15b__ref (t15b__content integer)))))
(define-fun t15b__ref___projection ((a t15b__ref)) integer (t15b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const r16b Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE14 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check14 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE14 (us_image) Int)
(declare-fun user_eq17 (integer integer) Bool)
(declare-const dummy17 integer)
(declare-datatypes () ((t17b__ref (mk_t17b__ref (t17b__content integer)))))
(define-fun t17b__ref___projection ((a t17b__ref)) integer (t17b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-fun zone_file_parser__parserrsig2ndline__timestring__aggregate_def (Int) (Array Int character))
(define-fun dynamic_invariant5 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range2 temp___expr_74)))
(assert (forall ((temp___1527 Int)) (=> (dynamic_invariant5 temp___1527 true true true true) (forall ((temp___1528 Int)) (= (to_rep (select (zone_file_parser__parserrsig2ndline__timestring__aggregate_def temp___1527) temp___1528)) temp___1527)))))
(define-fun dynamic_invariant6 ((temp___expr_561 Int) (temp___is_init_557 Bool) (temp___skip_constant_558 Bool) (temp___do_toplevel_559 Bool) (temp___do_typ_inv_560 Bool)) Bool (=> (or (= temp___is_init_557 true) (<= 0 18)) (in_range7 temp___expr_561)))
(define-fun dynamic_invariant7 ((temp___expr_291 Int) (temp___is_init_287 Bool) (temp___skip_constant_288 Bool) (temp___do_toplevel_289 Bool) (temp___do_typ_inv_290 Bool)) Bool (=> (or (= temp___is_init_287 true) (<= 0 3)) (in_range5 temp___expr_291)))
(define-fun dynamic_invariant8 ((temp___expr_322 Int) (temp___is_init_318 Bool) (temp___skip_constant_319 Bool) (temp___do_toplevel_320 Bool) (temp___do_typ_inv_321 Bool)) Bool (=> (or (= temp___is_init_318 true) (<= 1 128)) (in_range6 temp___expr_322)))
(define-fun default_initial_assumption1 ((temp___expr_370 us_rep) (temp___skip_top_level_371 Bool)) Bool (= (attr__tag temp___expr_370) us_tag))
(define-fun dynamic_invariant9 ((temp___expr_270 (_ BitVec 8)) (temp___is_init_266 Bool) (temp___skip_constant_267 Bool) (temp___do_toplevel_268 Bool) (temp___do_typ_inv_269 Bool)) Bool true)
(define-fun dynamic_invariant10 ((temp___expr_798 Int) (temp___is_init_794 Bool) (temp___skip_constant_795 Bool) (temp___do_toplevel_796 Bool) (temp___do_typ_inv_797 Bool)) Bool (=> (or (= temp___is_init_794 true) (<= 1 14)) (in_range8 temp___expr_798)))
(define-fun dynamic_invariant11 ((temp___expr_832 Int) (temp___is_init_828 Bool) (temp___skip_constant_829 Bool) (temp___do_toplevel_830 Bool) (temp___do_typ_inv_831 Bool)) Bool (=> (or (= temp___is_init_828 true) (<= 0 1365)) (in_range9 temp___expr_832)))
(declare-const rrsig_rec__split_fields query_type)
(declare-const rrsig_rec__split_fields1 unsigned8)
(declare-const rrsig_rec__split_fields2 unsigned8)
(declare-const rrsig_rec__split_fields3 unsigned32)
(declare-const rrsig_rec__split_fields4 unsigned32)
(declare-const rrsig_rec__split_fields5 unsigned32)
(declare-const rrsig_rec__split_fields6 unsigned16)
(declare-const rrsig_rec__split_fields7 (Array Int character))
(declare-const rrsig_rec__split_fields8 (Array Int character))
(declare-const rrsig_rec__split_fields9 siglengthvaluetype)
(declare-const rrsig_rec__split_fields10 unsigned32)
(declare-const rrsig_rec__split_fields11 classtype)
(declare-const rrsig_rec__split_fields12 us_private)
(declare-const success Bool)
(declare-const begidx Int)
(declare-const endidx Int)
(declare-const lengthoftoken Int)
(declare-const foundtype Int)
(declare-const timestring (Array Int character))
(declare-const i Int)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const o unsigned32)
(declare-const o1 query_type)
(declare-const o2 unsigned8)
(declare-const o3 unsigned8)
(declare-const o4 unsigned32)
(declare-const o5 unsigned32)
(declare-const o6 unsigned32)
(declare-const o7 unsigned16)
(declare-const o8 (Array Int character))
(declare-const o9 (Array Int character))
(declare-const o10 siglengthvaluetype)
(declare-const o11 unsigned32)
(declare-const o12 classtype)
(declare-const o13 us_private)
(declare-const temp___1545 query_type)
(declare-const temp___15451 unsigned8)
(declare-const temp___15452 unsigned8)
(declare-const temp___15453 unsigned32)
(declare-const temp___15454 unsigned32)
(declare-const temp___15455 unsigned32)
(declare-const temp___15456 unsigned16)
(declare-const temp___15457 (Array Int character))
(declare-const temp___15458 (Array Int character))
(declare-const temp___15459 siglengthvaluetype)
(declare-const temp___154510 unsigned32)
(declare-const temp___154511 classtype)
(declare-const temp___154512 us_private)
(declare-const temp___154513 Int)
(declare-const temp___1533 (Array Int character))
(declare-const temp___1537 Int)
(declare-const temp___1536 Int)
(declare-const temp___1535 Int)
(declare-const temp___1532 Int)
(declare-const o14 Int)
(declare-const o15 character)
(declare-const o16 Int)
(declare-const o17 character)
(declare-const o18 (Array Int character))
(declare-const temp___1541 Bool)
(declare-const temp___1540 Int)
(declare-const o19 unsigned32)
(declare-const o20 query_type)
(declare-const o21 unsigned8)
(declare-const o22 unsigned8)
(declare-const o23 unsigned32)
(declare-const o24 unsigned32)
(declare-const o25 unsigned32)
(declare-const o26 unsigned16)
(declare-const o27 (Array Int character))
(declare-const o28 (Array Int character))
(declare-const o29 siglengthvaluetype)
(declare-const o30 unsigned32)
(declare-const o31 classtype)
(declare-const o32 us_private)
(declare-const temp___1543 query_type)
(declare-const temp___15431 unsigned8)
(declare-const temp___15432 unsigned8)
(declare-const temp___15433 unsigned32)
(declare-const temp___15434 unsigned32)
(declare-const temp___15435 unsigned32)
(declare-const temp___15436 unsigned16)
(declare-const temp___15437 (Array Int character))
(declare-const temp___15438 (Array Int character))
(declare-const temp___15439 siglengthvaluetype)
(declare-const temp___154310 unsigned32)
(declare-const temp___154311 classtype)
(declare-const temp___154312 us_private)
(declare-const temp___154313 Int)
(declare-const o33 Int)
(declare-const o34 unsigned16)
(declare-const o35 query_type)
(declare-const o36 unsigned8)
(declare-const o37 unsigned8)
(declare-const o38 unsigned32)
(declare-const o39 unsigned32)
(declare-const o40 unsigned32)
(declare-const o41 unsigned16)
(declare-const o42 (Array Int character))
(declare-const o43 (Array Int character))
(declare-const o44 siglengthvaluetype)
(declare-const o45 unsigned32)
(declare-const o46 classtype)
(declare-const o47 us_private)
(declare-const temp___1547 query_type)
(declare-const temp___15471 unsigned8)
(declare-const temp___15472 unsigned8)
(declare-const temp___15473 unsigned32)
(declare-const temp___15474 unsigned32)
(declare-const temp___15475 unsigned32)
(declare-const temp___15476 unsigned16)
(declare-const temp___15477 (Array Int character))
(declare-const temp___15478 (Array Int character))
(declare-const temp___15479 siglengthvaluetype)
(declare-const temp___154710 unsigned32)
(declare-const temp___154711 classtype)
(declare-const temp___154712 us_private)
(declare-const temp___154713 Int)
(declare-const o48 Int)
(declare-const o49 Int)
(declare-const o50 Int)
(declare-const o51 Int)
(declare-const temp___1551 Int)
(declare-const o52 character)
(declare-const o53 Int)
(declare-const o54 (Array Int character))
(declare-const o55 us_split_fields2)
(declare-const temp___1553 us_rep1)
(declare-const rrsig_rec__split_fields13 us_split_fields2)
(declare-const i3 Int)
(declare-const i4 Int)
(declare-const result map__ref)
(declare-const timestring1 (Array Int character))
(declare-const result1 int__ref)
(declare-const begidx1 Int)
(declare-const begidx2 Int)
(declare-const endidx1 Int)
(declare-const foundtype1 Int)
(declare-const result2 bool__ref)
(declare-const success1 Bool)
(declare-const success2 Bool)
(declare-const parser_utilities__convert32bitunsigned__value (_ BitVec 32))
(declare-const result3 us_split_fields__ref1)
(declare-const rrsig_rec__split_fields14 us_split_fields2)
(declare-const result4 int__ref)
(declare-const i5 Int)
(declare-const timestring2 (Array Int character))
(declare-const i6 Int)
(declare-const result5 map__ref)
(declare-const timestring3 (Array Int character))
(declare-const timestring4 map__ref)
(declare-const i7 int__ref)
(declare-const timestring5 (Array Int character))
(declare-const i8 Int)
(declare-const timestring6 map__ref)
(declare-const i9 int__ref)
(declare-const timestring7 (Array Int character))
(declare-const i10 Int)
(declare-const result6 int__ref)
(declare-const i11 Int)
(declare-const success3 Bool)
(declare-const i12 Int)
(declare-const result7 bool__ref)
(declare-const success4 Bool)
(declare-const success5 bool__ref)
(declare-const success6 Bool)
(declare-const success7 bool__ref)
(declare-const success8 Bool)
(declare-const success9 bool__ref)
(declare-const i13 int__ref)
(declare-const success10 Bool)
(declare-const i14 Int)
(declare-const success11 bool__ref)
(declare-const i15 int__ref)
(declare-const success12 Bool)
(declare-const i16 Int)
(declare-const success13 Bool)
(declare-const parser_utilities__converttimestring__timeval (_ BitVec 32))
(declare-const result8 us_split_fields__ref1)
(declare-const rrsig_rec__split_fields15 us_split_fields2)
(declare-const rrsig_rec__split_fields16 us_split_fields__ref1)
(declare-const success14 bool__ref)
(declare-const rrsig_rec__split_fields17 us_split_fields2)
(declare-const success15 Bool)
(declare-const rrsig_rec__split_fields18 us_split_fields__ref1)
(declare-const success16 bool__ref)
(declare-const timestring8 map__ref)
(declare-const i17 int__ref)
(declare-const i18 int__ref)
(declare-const rrsig_rec__split_fields19 us_split_fields2)
(declare-const success17 Bool)
(declare-const timestring9 (Array Int character))
(declare-const i19 Int)
(declare-const i20 Int)
(declare-const rrsig_rec__split_fields20 us_split_fields__ref1)
(declare-const success18 bool__ref)
(declare-const timestring10 map__ref)
(declare-const i21 int__ref)
(declare-const i22 int__ref)
(declare-const rrsig_rec__split_fields21 us_split_fields2)
(declare-const success19 Bool)
(declare-const timestring11 (Array Int character))
(declare-const i23 Int)
(declare-const i24 Int)
(declare-const result9 bool__ref)
(declare-const success20 Bool)
(declare-const result10 int__ref)
(declare-const begidx3 Int)
(declare-const begidx4 Int)
(declare-const endidx2 Int)
(declare-const foundtype2 Int)
(declare-const result11 bool__ref)
(declare-const success21 Bool)
(declare-const success22 Bool)
(declare-const parser_utilities__convert16bitunsigned__value (_ BitVec 16))
(declare-const result12 us_split_fields__ref1)
(declare-const rrsig_rec__split_fields22 us_split_fields2)
(declare-const rrsig_rec__split_fields23 us_split_fields__ref1)
(declare-const success23 bool__ref)
(declare-const rrsig_rec__split_fields24 us_split_fields2)
(declare-const success24 Bool)
(declare-const rrsig_rec__split_fields25 us_split_fields__ref1)
(declare-const success25 bool__ref)
(declare-const begidx5 int__ref)
(declare-const endidx3 int__ref)
(declare-const foundtype3 int__ref)
(declare-const rrsig_rec__split_fields26 us_split_fields2)
(declare-const success26 Bool)
(declare-const begidx6 Int)
(declare-const endidx4 Int)
(declare-const foundtype4 Int)
(declare-const result13 bool__ref)
(declare-const success27 Bool)
(declare-const result14 int__ref)
(declare-const begidx7 Int)
(declare-const begidx8 Int)
(declare-const endidx5 Int)
(declare-const foundtype5 Int)
(declare-const result15 bool__ref)
(declare-const success28 Bool)
(declare-const result16 int__ref)
(declare-const lengthoftoken1 Int)
(declare-const result17 int__ref)
(declare-const i25 Int)
(declare-const rrsig_rec__split_fields27 us_split_fields2)
(declare-const i26 Int)
(declare-const result18 us_split_fields__ref1)
(declare-const rrsig_rec__split_fields28 us_split_fields2)
(declare-const result19 int__ref)
(declare-const i27 Int)
(declare-const rrsig_rec__split_fields29 us_split_fields__ref1)
(declare-const i28 int__ref)
(declare-const rrsig_rec__split_fields30 us_split_fields2)
(declare-const i29 Int)
(define-fun i30 () int__ref (mk_int__ref i1))
(define-fun i31 () int__ref (mk_int__ref i))
(define-fun rrsig_rec__split_fields31 () us_split_fields__ref1 (mk___split_fields__ref1 (mk___split_fields1 rrsig_rec__split_fields rrsig_rec__split_fields1 rrsig_rec__split_fields2 rrsig_rec__split_fields3 rrsig_rec__split_fields4 rrsig_rec__split_fields5 rrsig_rec__split_fields6 rrsig_rec__split_fields7 rrsig_rec__split_fields8 rrsig_rec__split_fields9 rrsig_rec__split_fields10 rrsig_rec__split_fields11 rrsig_rec__split_fields12)))
(assert (in_range4 zlength))
(assert (=> (<= 1 256) (in_range4 begidx)))
(assert (=> (<= 1 256) (in_range4 endidx)))
(assert (=> (<= 1 256) (in_range4 lengthoftoken)))
(assert (=> (<= 0 10) (in_range3 foundtype)))
(assert (= result (mk_map__ref timestring)))
(assert (= timestring1 (zone_file_parser__parserrsig2ndline__timestring__aggregate_def 32)))
(assert (= result1 (mk_int__ref begidx)))
(assert (= begidx1 1))
(assert (and (and (and (and (<= begidx2 endidx1) (<= begidx2 zlength)) (<= endidx1 zlength)) (=> (= foundtype1 1) (forall ((i32 Int)) (=> (and (<= begidx2 i32) (<= i32 endidx1)) (and (<= 48 (to_rep (select zonefileline i32))) (<= (to_rep (select zonefileline i32)) 57)))))) (and (and (in_range4 begidx2) (in_range4 endidx1)) (in_range3 foundtype1))))
(assert (= result2 (mk_bool__ref success)))
(assert (= success1 (ite (= success true) (ite (= foundtype1 1) true false) false)))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= (to_rep2 o) parser_utilities__convert32bitunsigned__value))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields o1))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields1 o2))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields2 o3))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= o o4))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields4 o5))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields5 o6))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields6 o7))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields7 o8))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields8 o9))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields9 o10))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields10 o11))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields11 o12))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields12 o13))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___1545 o1))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___15451 o2))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___15452 o3))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___15453 o4))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___15454 o5))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___15455 o6))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___15456 o7))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___15457 o8))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___15458 o9))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___15459 o10))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___154510 o11))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___154511 o12))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= temp___154512 o13))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__attr__tag temp___154513))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= result3 rrsig_rec__split_fields31))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields14 (mk___split_fields1 temp___1545 temp___15451 temp___15452 temp___15453 temp___15454 temp___15455 temp___15456 temp___15457 temp___15458 temp___15459 temp___154510 temp___154511 temp___154512)))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= i18 i30))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= i17 i31))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= timestring8 (mk_map__ref timestring1)))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= success16 (mk_bool__ref success2)))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields18 (mk___split_fields__ref1 rrsig_rec__split_fields14)))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= i20 i4))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= i19 i3))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= timestring9 timestring1))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= success17 success2))))
(assert (=> (= success1 true) (=> (not (= (+ (- endidx1 begidx2) 1) 14)) (= rrsig_rec__split_fields19 rrsig_rec__split_fields14))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= result4 i31))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= i5 1))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= temp___1533 timestring1)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= temp___1537 zlength)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= temp___1536 endidx1)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= temp___1535 begidx2)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= temp___1532 i5)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (and (and (and (and (and (= begidx2 temp___1535) (= endidx1 temp___1536)) (= zlength temp___1537)) (<= endidx1 zlength)) (= (- endidx1 begidx2) 13)) (<= i6 14))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (and (and (=> (<= 1 14) (in_range8 i6)) (forall ((temp___1534 Int)) (=> (and (<= 1 temp___1534) (<= temp___1534 14)) (=> (or (< 14 temp___1534) (or (< temp___1534 1) (<= i6 temp___1534))) (= (select timestring2 temp___1534) (select temp___1533 temp___1534)))))) (and (<= 1 i6) (<= i6 14)))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (and (<= 1 (- (+ begidx2 i6) 1)) (<= (- (+ begidx2 i6) 1) 256))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= o14 (- (+ begidx2 i6) 1))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= o15 (select zonefileline o14))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= o16 (to_rep o15))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= (to_rep o17) o16)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= o18 (store timestring2 i6 o17))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= result5 (mk_map__ref timestring2))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= timestring3 o18)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= i6 14)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= i7 (mk_int__ref i6))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= timestring4 (mk_map__ref timestring3))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= i8 i6)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= timestring5 timestring3)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= i9 i7)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= timestring6 timestring4)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= i10 i8)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i5) (<= i5 14)) (= timestring7 timestring5)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (not (and (<= 1 i5) (<= i5 14))) (= i9 (mk_int__ref i5))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (not (and (<= 1 i5) (<= i5 14))) (= timestring6 (mk_map__ref timestring1))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (not (and (<= 1 i5) (<= i5 14))) (= i10 i5)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (not (and (<= 1 i5) (<= i5 14))) (= timestring7 timestring1)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= result6 i30))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= i11 1))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (= temp___1541 success1)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (= temp___1540 i11)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (forall ((j Int)) (=> (and (<= 1 j) (<= j (- i12 1))) (and (<= 48 (to_rep (select (map__content timestring6) j))) (<= (to_rep (select (map__content timestring6) j)) 57))))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (and (=> (<= 1 14) (in_range8 i12)) (and (<= 1 i12) (<= i12 14)))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (or (and (and (= success7 (mk_bool__ref success4)) (= success8 success4)) (and (=> (not (< (to_rep (select (map__content timestring6) i12)) 48)) (< 57 (to_rep (select (map__content timestring6) i12)))) (and (= result7 (mk_bool__ref success3)) (= success4 (distinct 0 0))))) (and (and (not (=> (not (< (to_rep (select (map__content timestring6) i12)) 48)) (< 57 (to_rep (select (map__content timestring6) i12))))) (and (= success5 (mk_bool__ref success3)) (= success6 success3))) (and (and (= success7 success5) (= success8 success6)) (= i12 14))))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (= i13 (mk_int__ref i12))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (= success9 success7)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (= i14 i12)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (= success10 success8)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (= i15 i13)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (= success11 success9)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (= i16 i14)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (and (<= 1 i11) (<= i11 14)) (= success12 success10)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (not (and (<= 1 i11) (<= i11 14))) (= i15 (mk_int__ref i11))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (not (and (<= 1 i11) (<= i11 14))) (= success11 (mk_bool__ref success1))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (not (and (<= 1 i11) (<= i11 14))) (= i16 i11)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (not (and (<= 1 i11) (<= i11 14))) (= success12 success1)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= (to_rep2 o19) parser_utilities__converttimestring__timeval)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields o20)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields1 o21)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields2 o22)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields3 o23)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields4 o24)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= o19 o25)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields6 o26)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields7 o27)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields8 o28)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields9 o29)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields10 o30)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields11 o31)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields12 o32)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___1543 o20)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___15431 o21)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___15432 o22)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___15433 o23)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___15434 o24)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___15435 o25)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___15436 o26)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___15437 o27)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___15438 o28)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___15439 o29)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___154310 o30)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___154311 o31)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= temp___154312 o32)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__attr__tag temp___154313)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= result8 rrsig_rec__split_fields31)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields15 (mk___split_fields1 temp___1543 temp___15431 temp___15432 temp___15433 temp___15434 temp___15435 temp___15436 temp___15437 temp___15438 temp___15439 temp___154310 temp___154311 temp___154312))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= success14 (mk_bool__ref success13))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields16 (mk___split_fields__ref1 rrsig_rec__split_fields15))))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= success15 success13)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (= (bool__content success11) true) (= rrsig_rec__split_fields17 rrsig_rec__split_fields15)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (not (= (bool__content success11) true)) (= success14 success11)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (not (= (bool__content success11) true)) (= rrsig_rec__split_fields16 rrsig_rec__split_fields31)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (not (= (bool__content success11) true)) (= success15 success12)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (=> (not (= (bool__content success11) true)) (= rrsig_rec__split_fields17 rrsig_rec__split_fields13)))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= i18 i15))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= i17 i9))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= timestring8 timestring6))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= success16 success14))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= rrsig_rec__split_fields18 rrsig_rec__split_fields16))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= i20 i16))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= i19 i10))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= timestring9 timestring7))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= success17 success15))))
(assert (=> (= success1 true) (=> (not (not (= (+ (- endidx1 begidx2) 1) 14))) (= rrsig_rec__split_fields19 rrsig_rec__split_fields17))))
(assert (=> (= success1 true) (= i22 i18)))
(assert (=> (= success1 true) (= i21 i17)))
(assert (=> (= success1 true) (= timestring10 timestring8)))
(assert (=> (= success1 true) (= success18 success16)))
(assert (=> (= success1 true) (= rrsig_rec__split_fields20 rrsig_rec__split_fields18)))
(assert (=> (= success1 true) (= i24 i20)))
(assert (=> (= success1 true) (= i23 i19)))
(assert (=> (= success1 true) (= timestring11 timestring9)))
(assert (=> (= success1 true) (= success19 success17)))
(assert (=> (= success1 true) (= rrsig_rec__split_fields21 rrsig_rec__split_fields19)))
(assert (=> (not (= success1 true)) (= i22 i30)))
(assert (=> (not (= success1 true)) (= i21 i31)))
(assert (=> (not (= success1 true)) (= timestring10 (mk_map__ref timestring1))))
(assert (=> (not (= success1 true)) (= success18 (mk_bool__ref success1))))
(assert (=> (not (= success1 true)) (= rrsig_rec__split_fields20 rrsig_rec__split_fields31)))
(assert (=> (not (= success1 true)) (= i24 i4)))
(assert (=> (not (= success1 true)) (= i23 i3)))
(assert (=> (not (= success1 true)) (= timestring11 timestring1)))
(assert (=> (not (= success1 true)) (= success19 success1)))
(assert (=> (not (= success1 true)) (= rrsig_rec__split_fields21 rrsig_rec__split_fields13)))
(assert (= result9 success18))
(assert (= success20 (ite (= (bool__content success18) true) (ite (< endidx1 zlength) true false) false)))
(assert (=> (= success20 true) (and (= o33 (+ endidx1 1)) (in_range4 (+ endidx1 1)))))
(assert (=> (= success20 true) (= result10 (mk_int__ref begidx2))))
(assert (=> (= success20 true) (= begidx3 o33)))
(assert (=> (= success20 true) (and (and (and (and (<= begidx4 endidx2) (<= begidx4 zlength)) (<= endidx2 zlength)) (=> (= foundtype2 1) (forall ((i32 Int)) (=> (and (<= begidx4 i32) (<= i32 endidx2)) (and (<= 48 (to_rep (select zonefileline i32))) (<= (to_rep (select zonefileline i32)) 57)))))) (and (and (in_range4 begidx4) (in_range4 endidx2)) (in_range3 foundtype2)))))
(assert (=> (= success20 true) (= result11 (mk_bool__ref success20))))
(assert (=> (= success20 true) (= success21 (ite (= foundtype2 1) true false))))
(assert (=> (= success20 true) (=> (= success21 true) (= (to_rep1 o34) parser_utilities__convert16bitunsigned__value))))
(assert (=> (= success20 true) (=> (= success21 true) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered (us_split_fields__content1 rrsig_rec__split_fields20)) o35))))
(assert (=> (= success20 true) (=> (= success21 true) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm (us_split_fields__content1 rrsig_rec__split_fields20)) o36))))
(assert (=> (= success20 true) (=> (= success21 true) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels (us_split_fields__content1 rrsig_rec__split_fields20)) o37))))
(assert (=> (= success20 true) (=> (= success21 true) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl (us_split_fields__content1 rrsig_rec__split_fields20)) o38))))
(assert (=> (= success20 true) (=> (= success21 true) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration (us_split_fields__content1 rrsig_rec__split_fields20)) o39))))
(assert (=> (= success20 true) (=> (= success21 true) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception (us_split_fields__content1 rrsig_rec__split_fields20)) o40))))
(assert (=> (= success20 true) (=> (= success21 true) (= o34 o41))))
(assert (=> (= success20 true) (=> (= success21 true) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername (us_split_fields__content1 rrsig_rec__split_fields20)) o42))))
(assert (=> (= success20 true) (=> (= success21 true) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (us_split_fields__content1 rrsig_rec__split_fields20)) o43))))
(assert (=> (= success20 true) (=> (= success21 true) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields__content1 rrsig_rec__split_fields20)) o44))))
(assert (=> (= success20 true) (=> (= success21 true) (= (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields__content1 rrsig_rec__split_fields20)) o45))))
(assert (=> (= success20 true) (=> (= success21 true) (= (rec__rr_type__resourcerecordtype__class1 (us_split_fields__content1 rrsig_rec__split_fields20)) o46))))
(assert (=> (= success20 true) (=> (= success21 true) (= (rec__ext__1 (us_split_fields__content1 rrsig_rec__split_fields20)) o47))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___1547 o35))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___15471 o36))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___15472 o37))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___15473 o38))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___15474 o39))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___15475 o40))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___15476 o41))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___15477 o42))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___15478 o43))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___15479 o44))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___154710 o45))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___154711 o46))))
(assert (=> (= success20 true) (=> (= success21 true) (= temp___154712 o47))))
(assert (=> (= success20 true) (=> (= success21 true) (= rrsig_rec__attr__tag temp___154713))))
(assert (=> (= success20 true) (=> (= success21 true) (= result12 rrsig_rec__split_fields20))))
(assert (=> (= success20 true) (=> (= success21 true) (= rrsig_rec__split_fields22 (mk___split_fields1 temp___1547 temp___15471 temp___15472 temp___15473 temp___15474 temp___15475 temp___15476 temp___15477 temp___15478 temp___15479 temp___154710 temp___154711 temp___154712)))))
(assert (=> (= success20 true) (=> (= success21 true) (= success23 (mk_bool__ref success22)))))
(assert (=> (= success20 true) (=> (= success21 true) (= rrsig_rec__split_fields23 (mk___split_fields__ref1 rrsig_rec__split_fields22)))))
(assert (=> (= success20 true) (=> (= success21 true) (= success24 success22))))
(assert (=> (= success20 true) (=> (= success21 true) (= rrsig_rec__split_fields24 rrsig_rec__split_fields22))))
(assert (=> (= success20 true) (=> (not (= success21 true)) (= success23 (mk_bool__ref success21)))))
(assert (=> (= success20 true) (=> (not (= success21 true)) (= rrsig_rec__split_fields23 rrsig_rec__split_fields20))))
(assert (=> (= success20 true) (=> (not (= success21 true)) (= success24 success21))))
(assert (=> (= success20 true) (=> (not (= success21 true)) (= rrsig_rec__split_fields24 rrsig_rec__split_fields21))))
(assert (=> (= success20 true) (= foundtype3 (mk_int__ref foundtype2))))
(assert (=> (= success20 true) (= endidx3 (mk_int__ref endidx2))))
(assert (=> (= success20 true) (= begidx5 (mk_int__ref begidx4))))
(assert (=> (= success20 true) (= success25 success23)))
(assert (=> (= success20 true) (= rrsig_rec__split_fields25 rrsig_rec__split_fields23)))
(assert (=> (= success20 true) (= foundtype4 foundtype2)))
(assert (=> (= success20 true) (= endidx4 endidx2)))
(assert (=> (= success20 true) (= begidx6 begidx4)))
(assert (=> (= success20 true) (= success26 success24)))
(assert (=> (= success20 true) (= rrsig_rec__split_fields26 rrsig_rec__split_fields24)))
(assert (=> (not (= success20 true)) (= foundtype3 (mk_int__ref foundtype1))))
(assert (=> (not (= success20 true)) (= endidx3 (mk_int__ref endidx1))))
(assert (=> (not (= success20 true)) (= begidx5 (mk_int__ref begidx2))))
(assert (=> (not (= success20 true)) (= success25 (mk_bool__ref success20))))
(assert (=> (not (= success20 true)) (= rrsig_rec__split_fields25 rrsig_rec__split_fields20)))
(assert (=> (not (= success20 true)) (= foundtype4 foundtype1)))
(assert (=> (not (= success20 true)) (= endidx4 endidx1)))
(assert (=> (not (= success20 true)) (= begidx6 begidx2)))
(assert (=> (not (= success20 true)) (= success26 success20)))
(assert (=> (not (= success20 true)) (= rrsig_rec__split_fields26 rrsig_rec__split_fields21)))
(assert (= result13 success25))
(assert (= success27 (ite (= (bool__content success25) true) (ite (< (int__content endidx3) zlength) true false) false)))
(assert (= success27 true))
(assert (and (= o48 (+ (int__content endidx3) 1)) (in_range4 (+ (int__content endidx3) 1))))
(assert (= result14 begidx5))
(assert (= begidx7 o48))
(assert (and (and (and (and (<= begidx8 endidx5) (<= begidx8 zlength)) (<= endidx5 zlength)) (=> (= foundtype5 1) (forall ((i32 Int)) (=> (and (<= begidx8 i32) (<= i32 endidx5)) (and (<= 48 (to_rep (select zonefileline i32))) (<= (to_rep (select zonefileline i32)) 57)))))) (and (and (in_range4 begidx8) (in_range4 endidx5)) (in_range3 foundtype5))))
(assert (= result15 (mk_bool__ref success27)))
(assert (= success28 (ite (= foundtype5 0) true false)))
(assert (= success28 true))
(assert (and (= o49 (+ (- endidx5 begidx8) 1)) (in_range4 (+ (- endidx5 begidx8) 1))))
(assert (= result16 (mk_int__ref lengthoftoken)))
(assert (= lengthoftoken1 o49))
(assert (not (< 128 lengthoftoken1)))
(assert (= begidx8 r13b))
(assert (in_range4 r13b))
(assert (= endidx5 r14b))
(assert (in_range4 r14b))
(assert (= result17 (mk_int__ref i2)))
(assert (= i25 r13b))
(assert (<= r13b i25))
(assert (<= i25 r14b))
(assert (and (<= 1 begidx8) (<= (+ (- endidx5 begidx8) 1) 128)))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered (us_split_fields__content1 rrsig_rec__split_fields25))) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm (us_split_fields__content1 rrsig_rec__split_fields25)))) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels (us_split_fields__content1 rrsig_rec__split_fields25)))) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl (us_split_fields__content1 rrsig_rec__split_fields25)))) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration (us_split_fields__content1 rrsig_rec__split_fields25)))) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception (us_split_fields__content1 rrsig_rec__split_fields25)))) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag (us_split_fields__content1 rrsig_rec__split_fields25)))) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature (us_split_fields__content1 rrsig_rec__split_fields25)))) (= (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength (us_split_fields__content1 rrsig_rec__split_fields25)))) (= (rec__rr_type__resourcerecordtype__ttlinseconds1 rrsig_rec__split_fields27) (rec__rr_type__resourcerecordtype__ttlinseconds1 (us_split_fields__content1 rrsig_rec__split_fields25)))) (= (rec__rr_type__resourcerecordtype__class1 rrsig_rec__split_fields27) (rec__rr_type__resourcerecordtype__class1 (us_split_fields__content1 rrsig_rec__split_fields25)))) (=> (<= r13b r14b) (dynamic_property r13b r14b i26))) (and (<= r13b i26) (<= i26 r14b))))
(assert (= (to_rep o52) (to_rep (select zonefileline i26))))
(assert (and (= o50 (+ i26 1)) (in_range1 (+ i26 1))))
(assert (= o51 (- o50 begidx8)))
(assert (and (= temp___1551 o51) (in_range1 o51)))
(assert (and (<= 1 temp___1551) (<= temp___1551 128)))
(assert (= o53 temp___1551))
(assert (= o54 (store (rec__rr_type__rrsig_record_type__rrsigrecordtype__signername rrsig_rec__split_fields27) o53 o52)))
(assert (= o55 (mk___split_fields1 (rec__rr_type__rrsig_record_type__rrsigrecordtype__typecovered rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__algorithm rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__numlabels rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__origttl rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__sigexpiration rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__siginception rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__keytag rrsig_rec__split_fields27) o54 (rec__rr_type__rrsig_record_type__rrsigrecordtype__signature rrsig_rec__split_fields27) (rec__rr_type__rrsig_record_type__rrsigrecordtype__signaturelength rrsig_rec__split_fields27) (rec__rr_type__resourcerecordtype__ttlinseconds1 rrsig_rec__split_fields27) (rec__rr_type__resourcerecordtype__class1 rrsig_rec__split_fields27) (rec__ext__1 rrsig_rec__split_fields27))))
(assert (= temp___1553 (mk___rep1 o55 rrsig_rec__attr__tag)))
(assert (= result18 (mk___split_fields__ref1 rrsig_rec__split_fields27)))
(assert (= rrsig_rec__split_fields28 (us_split_fields3 temp___1553)))
(assert (not (= i26 r14b)))
(assert (= result19 (mk_int__ref i26)))
(assert (= i27 (+ i26 1)))
(assert (= i28 (mk_int__ref i27)))
(assert (= rrsig_rec__split_fields29 (mk___split_fields__ref1 rrsig_rec__split_fields28)))
(assert (= i29 i27))
(assert (= rrsig_rec__split_fields30 rrsig_rec__split_fields28))
(assert (not (<= (+ (- endidx5 begidx8) 1) 128)))
(check-sat)
(exit)
