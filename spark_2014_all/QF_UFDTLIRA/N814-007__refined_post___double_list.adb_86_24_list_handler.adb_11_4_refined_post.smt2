(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort index_type 0)
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (index_type index_type) Bool)
(declare-const dummy index_type)
(declare-datatypes () ((index_type__ref (mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref___projection ((a index_type__ref)) index_type (index_type__content a))
(define-fun dynamic_invariant ((temp___expr_153 Int) (temp___is_init_150 Bool) (temp___skip_constant_151 Bool) (temp___do_toplevel_152 Bool)) Bool (=> (or (= temp___is_init_150 true) (<= 0 128)) (in_range temp___expr_153)))
(declare-const count Int)
(declare-const list_handler__integer_list__size__result Int)
(declare-const result Int)
(declare-const list_handler__integer_list__size__result1 Int)
(declare-const list_handler__integer_list__size__result2 Int)
(declare-const list_handler__integer_list__size__result3 Int)
(declare-const list_handler__integer_list__size__result4 Int)
(declare-const list_handler__integer_list__size__result5 Int)
(assert (in_range count))
(assert (= list_handler__integer_list__size__result1 list_handler__integer_list__size__result2))
(assert (= list_handler__integer_list__size__result3 list_handler__integer_list__size__result1))
(assert (= result list_handler__integer_list__size__result))
(assert (= list_handler__integer_list__size__result1 count))
(assert (= (mk_int__ref list_handler__integer_list__size__result4) (mk_int__ref list_handler__integer_list__size__result2)))
(assert (= list_handler__integer_list__size__result5 list_handler__integer_list__size__result3))
(assert (not (= list_handler__integer_list__size__result4 count)))
(check-sat)
(exit)
