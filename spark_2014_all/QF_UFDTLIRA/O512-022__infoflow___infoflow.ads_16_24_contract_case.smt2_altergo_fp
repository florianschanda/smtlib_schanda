(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq1 : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type character

predicate in_range1(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : character, character -> bool

logic dummy : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

logic attr__ATTRIBUTE_ADDRESS15 : int

logic attr__ATTRIBUTE_ADDRESS16 : int

logic attr__ATTRIBUTE_ADDRESS17 : int

logic attr__ATTRIBUTE_ADDRESS18 : int

logic attr__ATTRIBUTE_ADDRESS19 : int

logic in_0_rdy_v1 : bool

logic in_1_rdy_v1 : bool

logic out_0_rdy_v1 : bool

logic out_1_rdy_v1 : bool

logic in_0_dat_v1 : int

logic in_1_dat_v1 : int

logic out_0_dat_v1 : int

logic out_1_dat_v1 : int

logic in_0_rdy_v2 : bool

logic in_1_rdy_v2 : bool

logic out_0_rdy_v2 : bool

logic out_1_rdy_v2 : bool

logic in_0_dat_v2 : int

logic in_1_dat_v2 : int

logic out_0_dat_v2 : int

logic out_1_dat_v2 : int

logic data_0_v1 : int

logic data_1_v1 : int

logic data_0_v2 : int

logic data_1_v2 : int

logic in_0_rdy_v11 : bool

logic in_1_rdy_v11 : bool

logic out_0_rdy_v11 : bool

logic out_1_rdy_v11 : bool

logic out_0_dat_v11 : int

logic out_1_dat_v11 : int

logic in_0_rdy_v21 : bool

logic in_1_rdy_v21 : bool

logic out_0_rdy_v21 : bool

logic out_1_rdy_v21 : bool

logic out_0_dat_v21 : int

logic out_1_dat_v21 : int

logic data_0_v11 : int

logic data_1_v11 : int

logic data_0_v21 : int

logic data_1_v21 : int

logic result : int

logic data_0_v12 : int

logic result1 : bool

logic in_0_rdy_v12 : bool

logic result2 : int

logic out_1_dat_v12 : int

logic result3 : bool

logic out_1_rdy_v12 : bool

logic result4 : int

logic data_1_v12 : int

logic result5 : bool

logic in_1_rdy_v12 : bool

logic result6 : int

logic out_0_dat_v12 : int

logic result7 : bool

logic out_0_rdy_v12 : bool

logic result8 : int

logic data_0_v22 : int

logic result9 : bool

logic in_0_rdy_v22 : bool

logic result10 : int

logic out_1_dat_v22 : int

logic result11 : bool

logic out_1_rdy_v22 : bool

logic result12 : int

logic data_1_v22 : int

logic result13 : bool

logic in_1_rdy_v22 : bool

logic result14 : int

logic out_0_dat_v22 : int

logic result15 : bool

logic out_0_rdy_v22 : bool

logic in_0_rdy_v13 : bool

logic in_1_rdy_v13 : bool

logic out_0_rdy_v13 : bool

logic out_1_rdy_v13 : bool

logic out_0_dat_v13 : int

logic out_1_dat_v13 : int

logic in_0_rdy_v23 : bool

logic in_1_rdy_v23 : bool

logic out_0_rdy_v23 : bool

logic out_1_rdy_v23 : bool

logic out_0_dat_v23 : int

logic out_1_dat_v23 : int

logic data_0_v13 : int

logic data_1_v13 : int

logic data_0_v23 : int

logic data_1_v23 : int

logic in_0_rdy_v14 : bool

logic in_1_rdy_v14 : bool

logic out_0_rdy_v14 : bool

logic out_1_rdy_v14 : bool

logic out_0_dat_v14 : int

logic out_1_dat_v14 : int

logic in_0_rdy_v24 : bool

logic in_1_rdy_v24 : bool

logic out_0_rdy_v24 : bool

logic out_1_rdy_v24 : bool

logic out_0_dat_v24 : int

logic out_1_dat_v24 : int

logic data_0_v14 : int

logic data_1_v14 : int

logic data_0_v24 : int

logic data_1_v24 : int

axiom H : in_range1(in_0_dat_v1)

axiom H1 : in_range1(in_1_dat_v1)

axiom H2 : in_range1(out_0_dat_v1)

axiom H3 : in_range1(out_1_dat_v1)

axiom H4 : in_range1(in_0_dat_v2)

axiom H5 : in_range1(in_1_dat_v2)

axiom H6 : in_range1(out_0_dat_v2)

axiom H7 : in_range1(out_1_dat_v2)

axiom H8 : ((0 <= 255) -> in_range1(data_0_v1))

axiom H9 : ((0 <= 255) -> in_range1(data_1_v1))

axiom H10 : (((in_0_rdy_v1 = true) and (not (out_1_rdy_v1 = true))) ->
  (result = data_0_v1))

axiom H11 : (((in_0_rdy_v1 = true) and (not (out_1_rdy_v1 = true))) ->
  (data_0_v12 = in_0_dat_v1))

axiom H12 : (((in_0_rdy_v1 = true) and (not (out_1_rdy_v1 = true))) ->
  (result1 = in_0_rdy_v1))

axiom H13 : (((in_0_rdy_v1 = true) and (not (out_1_rdy_v1 = true))) ->
  (in_0_rdy_v12 = of_int(0)))

axiom H14 : (((in_0_rdy_v1 = true) and (not (out_1_rdy_v1 = true))) ->
  (result2 = out_1_dat_v1))

axiom H15 : (((in_0_rdy_v1 = true) and (not (out_1_rdy_v1 = true))) ->
  (out_1_dat_v12 = data_0_v12))

axiom H16 : (((in_0_rdy_v1 = true) and (not (out_1_rdy_v1 = true))) ->
  (result3 = out_1_rdy_v1))

axiom H17 : (((in_0_rdy_v1 = true) and (not (out_1_rdy_v1 = true))) ->
  (out_1_rdy_v12 = of_int(1)))

axiom H18 : ((not (((in_0_rdy_v1 = true) -> (not (out_1_rdy_v1 = true))) and
  (not (in_0_rdy_v1 = false)))) -> (data_0_v12 = data_0_v1))

axiom H19 : ((not (((in_0_rdy_v1 = true) -> (not (out_1_rdy_v1 = true))) and
  (not (in_0_rdy_v1 = false)))) -> (out_1_dat_v12 = out_1_dat_v1))

axiom H20 : ((not (((in_0_rdy_v1 = true) -> (not (out_1_rdy_v1 = true))) and
  (not (in_0_rdy_v1 = false)))) -> (out_1_rdy_v12 = out_1_rdy_v1))

axiom H21 : ((not (((in_0_rdy_v1 = true) -> (not (out_1_rdy_v1 = true))) and
  (not (in_0_rdy_v1 = false)))) -> (in_0_rdy_v12 = in_0_rdy_v1))

axiom H22 : ((not (((in_0_rdy_v1 = true) -> (not (out_1_rdy_v1 = true))) and
  (not (in_0_rdy_v1 = false)))) -> (data_0_v12 = data_0_v11))

axiom H23 : ((not (((in_0_rdy_v1 = true) -> (not (out_1_rdy_v1 = true))) and
  (not (in_0_rdy_v1 = false)))) -> (out_1_dat_v12 = out_1_dat_v11))

axiom H24 : ((not (((in_0_rdy_v1 = true) -> (not (out_1_rdy_v1 = true))) and
  (not (in_0_rdy_v1 = false)))) -> (out_1_rdy_v12 = out_1_rdy_v11))

axiom H25 : ((not (((in_0_rdy_v1 = true) -> (not (out_1_rdy_v1 = true))) and
  (not (in_0_rdy_v1 = false)))) -> (in_0_rdy_v12 = in_0_rdy_v11))

axiom H26 : (((in_1_rdy_v1 = true) and (not (out_0_rdy_v1 = true))) ->
  (result4 = data_1_v1))

axiom H27 : (((in_1_rdy_v1 = true) and (not (out_0_rdy_v1 = true))) ->
  (data_1_v12 = in_1_dat_v1))

axiom H28 : (((in_1_rdy_v1 = true) and (not (out_0_rdy_v1 = true))) ->
  (result5 = in_1_rdy_v1))

axiom H29 : (((in_1_rdy_v1 = true) and (not (out_0_rdy_v1 = true))) ->
  (in_1_rdy_v12 = of_int(0)))

axiom H30 : (((in_1_rdy_v1 = true) and (not (out_0_rdy_v1 = true))) ->
  (result6 = out_0_dat_v1))

axiom H31 : (((in_1_rdy_v1 = true) and (not (out_0_rdy_v1 = true))) ->
  (out_0_dat_v12 = data_1_v12))

axiom H32 : (((in_1_rdy_v1 = true) and (not (out_0_rdy_v1 = true))) ->
  (result7 = out_0_rdy_v1))

axiom H33 : (((in_1_rdy_v1 = true) and (not (out_0_rdy_v1 = true))) ->
  (out_0_rdy_v12 = of_int(1)))

axiom H34 : ((not (((in_1_rdy_v1 = true) -> (not (out_0_rdy_v1 = true))) and
  (not (in_1_rdy_v1 = false)))) -> (data_1_v12 = data_1_v1))

axiom H35 : ((not (((in_1_rdy_v1 = true) -> (not (out_0_rdy_v1 = true))) and
  (not (in_1_rdy_v1 = false)))) -> (out_0_dat_v12 = out_0_dat_v1))

axiom H36 : ((not (((in_1_rdy_v1 = true) -> (not (out_0_rdy_v1 = true))) and
  (not (in_1_rdy_v1 = false)))) -> (out_0_rdy_v12 = out_0_rdy_v1))

axiom H37 : ((not (((in_1_rdy_v1 = true) -> (not (out_0_rdy_v1 = true))) and
  (not (in_1_rdy_v1 = false)))) -> (in_1_rdy_v12 = in_1_rdy_v1))

axiom H38 : ((not (((in_1_rdy_v1 = true) -> (not (out_0_rdy_v1 = true))) and
  (not (in_1_rdy_v1 = false)))) -> (data_1_v12 = data_1_v11))

axiom H39 : ((not (((in_1_rdy_v1 = true) -> (not (out_0_rdy_v1 = true))) and
  (not (in_1_rdy_v1 = false)))) -> (out_0_dat_v12 = out_0_dat_v11))

axiom H40 : ((not (((in_1_rdy_v1 = true) -> (not (out_0_rdy_v1 = true))) and
  (not (in_1_rdy_v1 = false)))) -> (out_0_rdy_v12 = out_0_rdy_v11))

axiom H41 : ((not (((in_1_rdy_v1 = true) -> (not (out_0_rdy_v1 = true))) and
  (not (in_1_rdy_v1 = false)))) -> (in_1_rdy_v12 = in_1_rdy_v11))

axiom H42 : ((0 <= 255) -> in_range1(data_0_v2))

axiom H43 : ((0 <= 255) -> in_range1(data_1_v2))

axiom H44 : (((in_0_rdy_v2 = true) and (not (out_1_rdy_v2 = true))) ->
  (result8 = data_0_v2))

axiom H45 : (((in_0_rdy_v2 = true) and (not (out_1_rdy_v2 = true))) ->
  (data_0_v22 = in_0_dat_v2))

axiom H46 : (((in_0_rdy_v2 = true) and (not (out_1_rdy_v2 = true))) ->
  (result9 = in_0_rdy_v2))

axiom H47 : (((in_0_rdy_v2 = true) and (not (out_1_rdy_v2 = true))) ->
  (in_0_rdy_v22 = of_int(0)))

axiom H48 : (((in_0_rdy_v2 = true) and (not (out_1_rdy_v2 = true))) ->
  (result10 = out_1_dat_v2))

axiom H49 : (((in_0_rdy_v2 = true) and (not (out_1_rdy_v2 = true))) ->
  (out_1_dat_v22 = data_0_v22))

axiom H50 : (((in_0_rdy_v2 = true) and (not (out_1_rdy_v2 = true))) ->
  (result11 = out_1_rdy_v2))

axiom H51 : (((in_0_rdy_v2 = true) and (not (out_1_rdy_v2 = true))) ->
  (out_1_rdy_v22 = of_int(1)))

axiom H52 : ((not (((in_0_rdy_v2 = true) -> (not (out_1_rdy_v2 = true))) and
  (not (in_0_rdy_v2 = false)))) -> (data_0_v22 = data_0_v2))

axiom H53 : ((not (((in_0_rdy_v2 = true) -> (not (out_1_rdy_v2 = true))) and
  (not (in_0_rdy_v2 = false)))) -> (out_1_dat_v22 = out_1_dat_v2))

axiom H54 : ((not (((in_0_rdy_v2 = true) -> (not (out_1_rdy_v2 = true))) and
  (not (in_0_rdy_v2 = false)))) -> (out_1_rdy_v22 = out_1_rdy_v2))

axiom H55 : ((not (((in_0_rdy_v2 = true) -> (not (out_1_rdy_v2 = true))) and
  (not (in_0_rdy_v2 = false)))) -> (in_0_rdy_v22 = in_0_rdy_v2))

axiom H56 : ((not (((in_0_rdy_v2 = true) -> (not (out_1_rdy_v2 = true))) and
  (not (in_0_rdy_v2 = false)))) -> (data_0_v22 = data_0_v21))

axiom H57 : ((not (((in_0_rdy_v2 = true) -> (not (out_1_rdy_v2 = true))) and
  (not (in_0_rdy_v2 = false)))) -> (out_1_dat_v22 = out_1_dat_v21))

axiom H58 : ((not (((in_0_rdy_v2 = true) -> (not (out_1_rdy_v2 = true))) and
  (not (in_0_rdy_v2 = false)))) -> (out_1_rdy_v22 = out_1_rdy_v21))

axiom H59 : ((not (((in_0_rdy_v2 = true) -> (not (out_1_rdy_v2 = true))) and
  (not (in_0_rdy_v2 = false)))) -> (in_0_rdy_v22 = in_0_rdy_v21))

axiom H60 : (((in_1_rdy_v2 = true) and (not (out_0_rdy_v2 = true))) ->
  (result12 = data_1_v2))

axiom H61 : (((in_1_rdy_v2 = true) and (not (out_0_rdy_v2 = true))) ->
  (data_1_v22 = in_1_dat_v2))

axiom H62 : (((in_1_rdy_v2 = true) and (not (out_0_rdy_v2 = true))) ->
  (result13 = in_1_rdy_v2))

axiom H63 : (((in_1_rdy_v2 = true) and (not (out_0_rdy_v2 = true))) ->
  (in_1_rdy_v22 = of_int(0)))

axiom H64 : (((in_1_rdy_v2 = true) and (not (out_0_rdy_v2 = true))) ->
  (result14 = out_0_dat_v2))

axiom H65 : (((in_1_rdy_v2 = true) and (not (out_0_rdy_v2 = true))) ->
  (out_0_dat_v22 = data_1_v22))

axiom H66 : (((in_1_rdy_v2 = true) and (not (out_0_rdy_v2 = true))) ->
  (result15 = out_0_rdy_v2))

axiom H67 : (((in_1_rdy_v2 = true) and (not (out_0_rdy_v2 = true))) ->
  (out_0_rdy_v22 = of_int(1)))

axiom H68 : ((not (((in_1_rdy_v2 = true) -> (not (out_0_rdy_v2 = true))) and
  (not (in_1_rdy_v2 = false)))) -> (data_1_v22 = data_1_v2))

axiom H69 : ((not (((in_1_rdy_v2 = true) -> (not (out_0_rdy_v2 = true))) and
  (not (in_1_rdy_v2 = false)))) -> (out_0_dat_v22 = out_0_dat_v2))

axiom H70 : ((not (((in_1_rdy_v2 = true) -> (not (out_0_rdy_v2 = true))) and
  (not (in_1_rdy_v2 = false)))) -> (out_0_rdy_v22 = out_0_rdy_v2))

axiom H71 : ((not (((in_1_rdy_v2 = true) -> (not (out_0_rdy_v2 = true))) and
  (not (in_1_rdy_v2 = false)))) -> (in_1_rdy_v22 = in_1_rdy_v2))

axiom H72 : ((not (((in_1_rdy_v2 = true) -> (not (out_0_rdy_v2 = true))) and
  (not (in_1_rdy_v2 = false)))) -> (data_1_v22 = data_1_v21))

axiom H73 : ((not (((in_1_rdy_v2 = true) -> (not (out_0_rdy_v2 = true))) and
  (not (in_1_rdy_v2 = false)))) -> (out_0_dat_v22 = out_0_dat_v21))

axiom H74 : ((not (((in_1_rdy_v2 = true) -> (not (out_0_rdy_v2 = true))) and
  (not (in_1_rdy_v2 = false)))) -> (out_0_rdy_v22 = out_0_rdy_v21))

axiom H75 : ((not (((in_1_rdy_v2 = true) -> (not (out_0_rdy_v2 = true))) and
  (not (in_1_rdy_v2 = false)))) -> (in_1_rdy_v22 = in_1_rdy_v21))

axiom H76 : (data_1_v23 = data_1_v22)

axiom H77 : (data_0_v23 = data_0_v22)

axiom H78 : (data_1_v13 = data_1_v12)

axiom H79 : (data_0_v13 = data_0_v12)

axiom H80 : (out_1_dat_v23 = out_1_dat_v22)

axiom H81 : (out_0_dat_v23 = out_0_dat_v22)

axiom H82 : (out_1_rdy_v23 = out_1_rdy_v22)

axiom H83 : (out_0_rdy_v23 = out_0_rdy_v22)

axiom H84 : (in_1_rdy_v23 = in_1_rdy_v22)

axiom H85 : (in_0_rdy_v23 = in_0_rdy_v22)

axiom H86 : (out_1_dat_v13 = out_1_dat_v12)

axiom H87 : (out_0_dat_v13 = out_0_dat_v12)

axiom H88 : (out_1_rdy_v13 = out_1_rdy_v12)

axiom H89 : (out_0_rdy_v13 = out_0_rdy_v12)

axiom H90 : (in_1_rdy_v13 = in_1_rdy_v12)

axiom H91 : (in_0_rdy_v13 = in_0_rdy_v12)

axiom H92 : (data_1_v24 = data_1_v22)

axiom H93 : (data_0_v24 = data_0_v22)

axiom H94 : (data_1_v14 = data_1_v12)

axiom H95 : (data_0_v14 = data_0_v12)

axiom H96 : (out_1_dat_v24 = out_1_dat_v22)

axiom H97 : (out_0_dat_v24 = out_0_dat_v22)

axiom H98 : (out_1_rdy_v24 = out_1_rdy_v22)

axiom H99 : (out_0_rdy_v24 = out_0_rdy_v22)

axiom H100 : (in_1_rdy_v24 = in_1_rdy_v22)

axiom H101 : (in_0_rdy_v24 = in_0_rdy_v22)

axiom H102 : (out_1_dat_v14 = out_1_dat_v12)

axiom H103 : (out_0_dat_v14 = out_0_dat_v12)

axiom H104 : (out_1_rdy_v14 = out_1_rdy_v12)

axiom H105 : (out_0_rdy_v14 = out_0_rdy_v12)

axiom H106 : (in_1_rdy_v14 = in_1_rdy_v12)

axiom H107 : (in_0_rdy_v14 = in_0_rdy_v12)

axiom H108 : (((bool_eq(in_1_dat_v1, in_1_dat_v2) = true) and
  ((in_1_rdy_v1 = true) and ((out_0_rdy_v1 = false) and
  ((in_1_rdy_v2 = true) and (out_0_rdy_v2 = false))))) ->
  (out_0_dat_v13 = out_0_dat_v23))

axiom H109 : (match_bool(match_bool(bool_eq(out_0_dat_v1, out_0_dat_v2),
  match_bool(in_1_rdy_v1, out_0_rdy_v1, true), false),
  match_bool(in_1_rdy_v2, out_0_rdy_v2, true), false) = true)

 (* File "infoflow.ads", line 22, characters 0-0 *)
goal WP_parameter_def : (out_0_dat_v13 = out_0_dat_v23)
