(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const x Int)
(declare-const body_var Int)
(declare-const temp Int)
(declare-const i Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 Int)
(declare-const o17 Int)
(declare-const o18 Int)
(declare-const o19 Int)
(declare-const o20 Int)
(declare-const o21 Int)
(declare-const o22 Int)
(declare-const o23 Int)
(declare-const o24 Int)
(declare-const o25 Int)
(declare-const o26 Int)
(declare-const o27 Int)
(declare-const o28 Int)
(declare-const o29 Int)
(declare-const o30 Int)
(declare-const o31 Int)
(declare-const o32 Int)
(declare-const o33 Int)
(declare-const o34 Int)
(declare-const o35 Int)
(declare-const o36 Int)
(declare-const o37 Int)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const result Int)
(declare-const temp1 Int)
(declare-const result1 Int)
(declare-const i1 Int)
(declare-const result2 Bool)
(declare-const result3 Int)
(declare-const temp2 Int)
(declare-const result4 Int)
(declare-const temp3 Int)
(declare-const result5 Int)
(declare-const temp4 Int)
(declare-const result6 Int)
(declare-const temp5 Int)
(declare-const result7 Int)
(declare-const i2 Int)
(declare-const result8 Bool)
(declare-const result9 Int)
(declare-const temp6 Int)
(declare-const result10 Int)
(declare-const temp7 Int)
(declare-const result11 Int)
(declare-const temp8 Int)
(declare-const result12 Int)
(declare-const temp9 Int)
(declare-const result13 Int)
(declare-const i3 Int)
(declare-const result14 Bool)
(declare-const result15 Int)
(declare-const temp10 Int)
(declare-const result16 Int)
(declare-const temp11 Int)
(declare-const result17 Int)
(declare-const temp12 Int)
(declare-const result18 Int)
(declare-const temp13 Int)
(declare-const result19 Int)
(declare-const i4 Int)
(declare-const result20 Bool)
(declare-const result21 int__ref)
(declare-const temp14 Int)
(declare-const result22 int__ref)
(declare-const temp15 Int)
(declare-const result23 int__ref)
(declare-const temp16 Int)
(declare-const result24 int__ref)
(declare-const temp17 Int)
(declare-const result25 int__ref)
(declare-const i5 Int)
(declare-const result26 Bool)
(declare-const result27 int__ref)
(declare-const temp18 Int)
(declare-const result28 int__ref)
(declare-const temp19 Int)
(declare-const result29 int__ref)
(declare-const temp20 Int)
(declare-const result30 int__ref)
(declare-const temp21 Int)
(declare-const result31 int__ref)
(declare-const i6 Int)
(declare-const result32 Bool)
(declare-const result33 int__ref)
(declare-const temp22 Int)
(declare-const result34 int__ref)
(declare-const temp23 Int)
(declare-const result35 int__ref)
(declare-const temp24 Int)
(declare-const result36 int__ref)
(declare-const temp25 Int)
(declare-const result37 int__ref)
(declare-const i7 Int)
(declare-const result38 Bool)
(declare-const result39 int__ref)
(declare-const temp26 Int)
(declare-const result40 int__ref)
(declare-const temp27 Int)
(declare-const result41 int__ref)
(declare-const temp28 Int)
(declare-const result42 int__ref)
(declare-const temp29 Int)
(declare-const result43 int__ref)
(declare-const i8 Int)
(declare-const result44 Bool)
(declare-const result45 int__ref)
(declare-const temp30 Int)
(declare-const result46 int__ref)
(declare-const temp31 Int)
(declare-const result47 int__ref)
(declare-const temp32 Int)
(declare-const result48 int__ref)
(declare-const temp33 Int)
(declare-const result49 int__ref)
(declare-const i9 Int)
(declare-const result50 Bool)
(declare-const result51 int__ref)
(declare-const temp34 Int)
(declare-const result52 int__ref)
(declare-const temp35 Int)
(declare-const result53 int__ref)
(declare-const temp36 Int)
(declare-const result54 int__ref)
(declare-const temp37 Int)
(declare-const result55 int__ref)
(declare-const i10 Int)
(declare-const result56 Bool)
(assert (in_range1 body_var))
(assert (in_range1 x))
(assert (= result temp))
(assert (= temp1 1))
(assert (in_range1 temp1))
(assert (= result1 i))
(assert (= i1 1))
(assert (< x 0))
(assert (and (= o (+ x 1)) (in_range1 (+ x 1))))
(assert (= result2 (ite (< o (- 5)) true false)))
(assert (not (= result2 true)))
(assert (not (= (of_int 0) true)))
(assert (not (in_range1 (+ body_var 1))))
(check-sat)
(exit)
