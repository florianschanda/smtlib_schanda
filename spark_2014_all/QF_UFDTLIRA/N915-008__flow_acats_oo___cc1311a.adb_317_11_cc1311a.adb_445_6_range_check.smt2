(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort numbers 0)
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (numbers numbers) Bool)
(declare-const dummy numbers)
(declare-datatypes () ((numbers__ref (mk_numbers__ref (numbers__content numbers)))))
(define-fun numbers__ref___projection ((a numbers__ref)) numbers (numbers__content a))
(define-fun dynamic_invariant ((temp___expr_230 Int) (temp___is_init_226 Bool) (temp___skip_constant_227 Bool) (temp___do_toplevel_228 Bool) (temp___do_typ_inv_229 Bool)) Bool (=> (or (= temp___is_init_226 true) (<= 0 2)) (in_range temp___expr_230)))
(declare-sort t 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (t t) Bool)
(declare-const dummy1 t)
(declare-datatypes () ((t__ref (mk_t__ref (t__content t)))))
(define-fun t__ref___4__projection ((a t__ref)) t (t__content a))
(define-fun dynamic_invariant1 ((temp___expr_622 Int) (temp___is_init_618 Bool) (temp___skip_constant_619 Bool) (temp___do_toplevel_620 Bool) (temp___do_typ_inv_621 Bool)) Bool (=> (or (= temp___is_init_618 true) (<= 0 2)) (in_range1 temp___expr_622)))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const c470b Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const results Int)
(assert (=> (<= 0 2) (in_range1 results)))
(assert (not (in_range 0)))
(check-sat)
(exit)
