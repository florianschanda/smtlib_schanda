(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic roll_active : bool

logic attr__ATTRIBUTE_ADDRESS : int

logic hdg_active : bool

logic attr__ATTRIBUTE_ADDRESS1 : int

logic nav_active : bool

logic attr__ATTRIBUTE_ADDRESS2 : int

logic lappr_active : bool

logic attr__ATTRIBUTE_ADDRESS3 : int

logic lga_active : bool

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

logic attr__ATTRIBUTE_ADDRESS15 : int

logic attr__ATTRIBUTE_ADDRESS16 : int

logic attr__ATTRIBUTE_ADDRESS17 : int

logic attr__ATTRIBUTE_ADDRESS18 : int

logic attr__ATTRIBUTE_ADDRESS19 : int

logic attr__ATTRIBUTE_ADDRESS20 : int

logic attr__ATTRIBUTE_ADDRESS21 : int

logic attr__ATTRIBUTE_ADDRESS22 : int

logic attr__ATTRIBUTE_ADDRESS23 : int

logic attr__ATTRIBUTE_ADDRESS24 : int

logic attr__ATTRIBUTE_ADDRESS25 : int

logic hdg_active_out1 : bool

logic lappr_active_out1 : bool

logic lga_active_out1 : bool

logic nav_active_out1 : bool

logic roll_active_out1 : bool

logic nor_lga_out1 : bool

logic not1_out1 : bool

logic not5_out1 : bool

logic nor_lappr_out1 : bool

logic not1_out1_1 : bool

logic not5_out1_1 : bool

logic nor_nav_out1 : bool

logic not1_out1_2 : bool

logic not5_out1_2 : bool

logic nor_hdg_out1 : bool

logic not1_out1_3 : bool

logic not5_out1_3 : bool

logic nor_roll_out1 : bool

logic not1_out1_4 : bool

logic not5_out1_4 : bool

logic and_out1 : bool

logic result : bool

logic hdg_active_out11 : bool

logic result1 : bool

logic lappr_active_out11 : bool

logic result2 : bool

logic lga_active_out11 : bool

logic result3 : bool

logic nav_active_out11 : bool

logic result4 : bool

logic roll_active_out11 : bool

logic result5 : bool

logic nor_lga_out11 : bool

logic result6 : bool

logic not1_out11 : bool

logic result7 : bool

logic not5_out11 : bool

logic result8 : bool

logic nor_lappr_out11 : bool

logic result9 : bool

logic not1_out1_11 : bool

logic result10 : bool

logic not5_out1_11 : bool

logic result11 : bool

logic nor_nav_out11 : bool

logic result12 : bool

logic not1_out1_21 : bool

logic result13 : bool

logic not5_out1_21 : bool

logic result14 : bool

logic nor_hdg_out11 : bool

logic result15 : bool

logic not1_out1_31 : bool

logic result16 : bool

logic not5_out1_31 : bool

logic result17 : bool

logic nor_roll_out11 : bool

logic result18 : bool

logic not1_out1_41 : bool

logic result19 : bool

logic not5_out1_41 : bool

logic result20 : bool

logic and_out11 : bool

axiom H : (result = hdg_active_out1)

axiom H1 : (hdg_active_out11 = hdg_active)

axiom H2 : (result1 = lappr_active_out1)

axiom H3 : (lappr_active_out11 = lappr_active)

axiom H4 : (result2 = lga_active_out1)

axiom H5 : (lga_active_out11 = lga_active)

axiom H6 : (result3 = nav_active_out1)

axiom H7 : (nav_active_out11 = nav_active)

axiom H8 : (result4 = roll_active_out1)

axiom H9 : (roll_active_out11 = roll_active)

axiom H10 : (result5 = nor_lga_out1)

axiom H11 : (((not ((((roll_active_out11 = true) or
  (hdg_active_out11 = true)) or (nav_active_out11 = true)) or
  (lappr_active_out11 = true))) -> (nor_lga_out11 = true)) and
  (((((roll_active_out11 = true) or (hdg_active_out11 = true)) or
  (nav_active_out11 = true)) or (lappr_active_out11 = true)) ->
  (nor_lga_out11 = false)))

axiom H12 : (result6 = not1_out1)

axiom H13 : (((not (lga_active_out11 = true)) -> (not1_out11 = true)) and
  ((lga_active_out11 = true) -> (not1_out11 = false)))

axiom H14 : (result7 = not5_out1)

axiom H15 : ((((not1_out11 = true) or (nor_lga_out11 = true)) ->
  (not5_out11 = true)) and ((not ((not1_out11 = true) or
  (nor_lga_out11 = true))) -> (not5_out11 = false)))

axiom H16 : (result8 = nor_lappr_out1)

axiom H17 : (((not ((((roll_active_out11 = true) or
  (hdg_active_out11 = true)) or (nav_active_out11 = true)) or
  (lga_active_out11 = true))) -> (nor_lappr_out11 = true)) and
  (((((roll_active_out11 = true) or (hdg_active_out11 = true)) or
  (nav_active_out11 = true)) or (lga_active_out11 = true)) ->
  (nor_lappr_out11 = false)))

axiom H18 : (result9 = not1_out1_1)

axiom H19 : (((not (lappr_active_out11 = true)) -> (not1_out1_11 = true)) and
  ((lappr_active_out11 = true) -> (not1_out1_11 = false)))

axiom H20 : (result10 = not5_out1_1)

axiom H21 : ((((not1_out1_11 = true) or (nor_lappr_out11 = true)) ->
  (not5_out1_11 = true)) and ((not ((not1_out1_11 = true) or
  (nor_lappr_out11 = true))) -> (not5_out1_11 = false)))

axiom H22 : (result11 = nor_nav_out1)

axiom H23 : (((not ((((roll_active_out11 = true) or
  (hdg_active_out11 = true)) or (lappr_active_out11 = true)) or
  (lga_active_out11 = true))) -> (nor_nav_out11 = true)) and
  (((((roll_active_out11 = true) or (hdg_active_out11 = true)) or
  (lappr_active_out11 = true)) or (lga_active_out11 = true)) ->
  (nor_nav_out11 = false)))

axiom H24 : (result12 = not1_out1_2)

axiom H25 : (((not (nav_active_out11 = true)) -> (not1_out1_21 = true)) and
  ((nav_active_out11 = true) -> (not1_out1_21 = false)))

axiom H26 : (result13 = not5_out1_2)

axiom H27 : ((((not1_out1_21 = true) or (nor_nav_out11 = true)) ->
  (not5_out1_21 = true)) and ((not ((not1_out1_21 = true) or
  (nor_nav_out11 = true))) -> (not5_out1_21 = false)))

axiom H28 : (result14 = nor_hdg_out1)

axiom H29 : (((not ((((roll_active_out11 = true) or
  (nav_active_out11 = true)) or (lappr_active_out11 = true)) or
  (lga_active_out11 = true))) -> (nor_hdg_out11 = true)) and
  (((((roll_active_out11 = true) or (nav_active_out11 = true)) or
  (lappr_active_out11 = true)) or (lga_active_out11 = true)) ->
  (nor_hdg_out11 = false)))

axiom H30 : (result15 = not1_out1_3)

axiom H31 : (((not (hdg_active_out11 = true)) -> (not1_out1_31 = true)) and
  ((hdg_active_out11 = true) -> (not1_out1_31 = false)))

axiom H32 : (result16 = not5_out1_3)

axiom H33 : ((((not1_out1_31 = true) or (nor_hdg_out11 = true)) ->
  (not5_out1_31 = true)) and ((not ((not1_out1_31 = true) or
  (nor_hdg_out11 = true))) -> (not5_out1_31 = false)))

axiom H34 : (result17 = nor_roll_out1)

axiom H35 : (((not ((((hdg_active_out11 = true) or
  (nav_active_out11 = true)) or (lappr_active_out11 = true)) or
  (lga_active_out11 = true))) -> (nor_roll_out11 = true)) and
  (((((hdg_active_out11 = true) or (nav_active_out11 = true)) or
  (lappr_active_out11 = true)) or (lga_active_out11 = true)) ->
  (nor_roll_out11 = false)))

axiom H36 : (result18 = not1_out1_4)

axiom H37 : (((not (roll_active_out11 = true)) -> (not1_out1_41 = true)) and
  ((roll_active_out11 = true) -> (not1_out1_41 = false)))

axiom H38 : (result19 = not5_out1_4)

axiom H39 : ((((not1_out1_41 = true) or (nor_roll_out11 = true)) ->
  (not5_out1_41 = true)) and ((not ((not1_out1_41 = true) or
  (nor_roll_out11 = true))) -> (not5_out1_41 = false)))

axiom H40 : (result20 = and_out1)

axiom H41 : (((((((not5_out1_41 = true) and (not5_out1_31 = true)) and
  (not5_out1_21 = true)) and (not5_out1_11 = true)) and
  (not5_out11 = true)) -> (and_out11 = true)) and
  ((not (((((not5_out1_41 = true) and (not5_out1_31 = true)) and
  (not5_out1_21 = true)) and (not5_out1_11 = true)) and
  (not5_out11 = true))) -> (and_out11 = false)))

 (* File "at_most_one_lateral_mode_active.ads", line 20, characters 0-0 *)
goal WP_parameter_def : (and_out11 = true)
