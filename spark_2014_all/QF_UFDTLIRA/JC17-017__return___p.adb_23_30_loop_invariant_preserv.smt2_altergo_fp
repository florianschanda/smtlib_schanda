(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

logic x : int

logic attr__ATTRIBUTE_ADDRESS : int

logic y : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic z : int

logic attr__ATTRIBUTE_ADDRESS2 : int

type t4b

predicate in_range2(x1: int) = ((1 <= x1) and (x1 <= 10))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x1:int. forall y1:int [bool_eq3(x1, y1)]. (((x1 = y1) ->
  (bool_eq3(x1, y1) = true)) and ((not (x1 = y1)) -> (bool_eq3(x1,
  y1) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : t4b, t4b -> bool

logic dummy1 : t4b

type t4b__ref = { t4b__content : t4b
}

function t4b__ref___projection(a: t4b__ref) : t4b = (a).t4b__content

logic attr__ATTRIBUTE_ADDRESS3 : int

type t6b

predicate in_range3(x1: int) = ((1 <= x1) and (x1 <= 10))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x1:int. forall y1:int [bool_eq4(x1, y1)]. (((x1 = y1) ->
  (bool_eq4(x1, y1) = true)) and ((not (x1 = y1)) -> (bool_eq4(x1,
  y1) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : t6b, t6b -> bool

logic dummy2 : t6b

type t6b__ref = { t6b__content : t6b
}

function t6b__ref___projection(a: t6b__ref) : t6b = (a).t6b__content

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

type t9b

predicate in_range4(x1: int) = ((1 <= x1) and (x1 <= 10))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x1:int. forall y1:int [bool_eq5(x1, y1)]. (((x1 = y1) ->
  (bool_eq5(x1, y1) = true)) and ((not (x1 = y1)) -> (bool_eq5(x1,
  y1) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : t9b, t9b -> bool

logic dummy3 : t9b

type t9b__ref = { t9b__content : t9b
}

function t9b__ref___projection(a: t9b__ref) : t9b = (a).t9b__content

logic attr__ATTRIBUTE_ADDRESS6 : int

logic k : int

logic k1 : int

logic h : int

logic k2 : int

logic p__result : int

logic o : int

logic o1 : bool

logic o2 : bool

logic o3 : int

logic temp___132 : int

logic o4 : int

logic temp___135 : int

logic o5 : int

logic temp___138 : int

logic temp___1381 : int

logic temp___1382 : int

logic temp___1383 : int

logic temp___1384 : int

logic temp___1385 : int

logic temp___1386 : int

logic temp___1387 : int

logic temp___1388 : int

logic temp___1389 : int

logic o6 : int

logic o7 : int

logic o8 : int

logic p__result1 : int

logic result : bool

logic p__result2 : int

logic result1 : int

logic k3 : int

logic k4 : int

logic p__result3 : int

logic p__result4 : int

logic result2 : int

logic k5 : int

logic k6 : int

logic p__result5 : int

logic k7 : int

logic p__result6 : int

logic k8 : int

logic p__result7 : int

logic k9 : int

logic p__result8 : int

logic k10 : int

logic p__result9 : int

logic k11 : int

logic p__result10 : int

logic result3 : int

logic k12 : int

logic k13 : int

logic p__result11 : int

logic p__result12 : int

logic p__result13 : int

logic p__result14 : int

logic p__result15 : int

logic result4 : int

logic k14 : int

logic k15 : int

logic p__result16 : int

logic k16 : int

logic p__result17 : int

logic k17 : int

logic p__result18 : int

logic k18 : int

logic p__result19 : int

logic k19 : int

logic p__result20 : int

logic k20 : int

logic p__result21 : int

logic k21 : int

logic p__result22 : int

logic k22 : int

logic p__result23 : int

logic result5 : int

logic h1 : int

logic result6 : int

logic k23 : int

logic k24 : int

logic p__result24 : int

logic p__result25 : int

logic p__result26 : int

logic p__result27 : int

logic p__result28 : int

logic result7 : int

logic k25 : int

logic k26 : int

logic p__result29 : int

logic k27 : int

logic p__result30 : int

logic k28 : int

logic p__result31 : int

logic k29 : int

logic p__result32 : int

logic k30 : int

logic p__result33 : int

logic k31 : int

logic p__result34 : int

logic k32 : int

logic p__result35 : int

logic k33 : int

logic p__result36 : int

logic result8 : int

logic h2 : int

logic result9 : int

logic k34 : int

logic k35 : int

logic p__result37 : int

logic p__result38 : int

logic p__result39 : int

logic p__result40 : int

logic p__result41 : int

logic result10 : int

logic k36 : int

logic k37 : int

logic p__result42 : int

logic k38 : int

logic p__result43 : int

logic k39 : int

logic p__result44 : int

logic k40 : int

logic p__result45 : int

logic k41 : int

logic p__result46 : int

logic k42 : int

logic p__result47 : int

logic k43 : int

logic p__result48 : int

logic k44 : int

logic p__result49 : int

logic result11 : int

logic h3 : int

logic result12 : int

logic k45 : int

logic k46 : int

logic p__result50 : int

logic p__result51 : int

logic p__result52 : int

logic p__result53 : int

logic p__result54 : int

logic result13 : int

logic k47 : int

logic k48 : int

logic p__result55 : int

logic k49 : int

logic p__result56 : int

logic k50 : int

logic p__result57 : int

logic k51 : int

logic p__result58 : int

logic k52 : int

logic p__result59 : int

logic k53 : int

logic p__result60 : int

logic k54 : int

logic p__result61 : int

logic k55 : int

logic p__result62 : int

logic result14 : int

logic h4 : int

logic result15 : int

logic k56 : int

logic k57 : int

logic p__result63 : int

logic p__result64 : int

logic p__result65 : int

logic p__result66 : int

logic p__result67 : int

logic result16 : int

logic k58 : int

logic k59 : int

logic p__result68 : int

logic k60 : int

logic p__result69 : int

logic k61 : int

logic p__result70 : int

logic k62 : int

logic p__result71 : int

logic k63 : int

logic p__result72 : int

logic k64 : int

logic p__result73 : int

logic k65 : int

logic p__result74 : int

logic k66 : int

logic p__result75 : int

logic result17 : int

logic h5 : int

logic result18 : int

logic k67 : int

logic k68 : int

logic p__result76 : int

logic p__result77 : int

logic p__result78 : int

logic p__result79 : int

logic p__result80 : int

logic result19 : int

logic k69 : int

logic k70 : int

logic p__result81 : int

logic k71 : int

logic p__result82 : int

logic k72 : int

logic p__result83 : int

logic k73 : int

logic p__result84 : int

logic k74 : int

logic p__result85 : int

logic k75 : int

logic p__result86 : int

logic k76 : int

logic p__result87 : int

logic k77 : int

logic p__result88 : int

logic result20 : int

logic h6 : int

logic result21 : int

logic k78 : int

logic k79 : int

logic p__result89 : int

logic p__result90 : int

logic p__result91 : int

logic p__result92 : int

logic p__result93 : int

logic result22 : int

logic k80 : int

logic k81 : int

logic p__result94 : int

logic k82 : int

logic p__result95 : int

logic k83 : int

logic p__result96 : int

logic k84 : int

logic p__result97 : int

logic k85 : int

logic p__result98 : int

logic k86 : int

logic p__result99 : int

logic k87 : int

logic p__result100 : int

logic k88 : int

logic p__result101 : int

logic result23 : int

logic h7 : int

logic result24 : int

logic k89 : int

logic k90 : int

logic p__result102 : int

logic p__result103 : int

logic p__result104 : int

logic p__result105 : int

logic p__result106 : int

logic result25 : int

logic k91 : int

logic k92 : int

logic p__result107 : int

logic k93 : int

logic p__result108 : int

logic k94 : int

logic p__result109 : int

logic k95 : int

logic p__result110 : int

logic k96 : int

logic p__result111 : int

logic k97 : int

logic p__result112 : int

logic k98 : int

logic p__result113 : int

logic k99 : int

logic p__result114 : int

logic result26 : int

logic h8 : int

logic result27 : int

logic k100 : int

logic k101 : int

logic p__result115 : int

logic p__result116 : int

logic p__result117 : int

logic p__result118 : int

logic p__result119 : int

logic result28 : int

logic k102 : int

logic k103 : int

logic p__result120 : int

logic k104 : int

logic p__result121 : int

logic k105 : int

logic p__result122 : int

logic k106 : int

logic p__result123 : int

logic k107 : int

logic p__result124 : int

logic k108 : int

logic p__result125 : int

logic k109 : int

logic p__result126 : int

logic k110 : int

logic p__result127 : int

logic result29 : int

logic h9 : int

logic result30 : int

logic k111 : int

logic k112 : int

logic p__result128 : int

logic p__result129 : int

logic p__result130 : int

logic p__result131 : int

logic p__result132 : int

logic result31 : int

logic k113 : int

logic k114 : int

logic p__result133 : int

logic k115 : int

logic p__result134 : int

logic k116 : int

logic p__result135 : int

logic k117 : int

logic p__result136 : int

logic k118 : int

logic p__result137 : int

logic k119 : int

logic p__result138 : int

logic k120 : int

logic p__result139 : int

logic k121 : int

logic p__result140 : int

logic result32 : int

logic h10 : int

logic result33 : int

logic k122 : int

logic k123 : int

logic p__result141 : int

logic p__result142 : int

logic p__result143 : int

logic p__result144 : int

logic p__result145 : int

logic result34 : int

logic k124 : int

logic k125 : int

logic p__result146 : int

logic k126 : int

logic p__result147 : int

logic k127 : int

logic p__result148 : int

logic k128 : int

logic p__result149 : int

logic k129 : int

logic p__result150 : int

logic k130 : int

logic p__result151 : int

logic k131 : int

logic p__result152 : int

logic k132 : int

logic p__result153 : int

axiom H : in_range1(x)

axiom H1 : in_range1(y)

axiom H2 : in_range1(z)

axiom H3 : (((((10 <= x) and (x <= 1000)) and (0 <  y)) and (z <  0)) and
  ((y + z) <= 1000))

axiom H4 : (result1 = k)

axiom H5 : (k3 = 1)

axiom H6 : (1 <= k3)

axiom H7 : (k3 <= 10)

axiom H8 : (k4 <= x)

axiom H9 : (((1 <= 10) -> in_range2(k4)) and ((1 <= k4) and (k4 <= 10)))

axiom H10 : (not (k4 <  y))

axiom H11 : (p__result4 = p__result3)

axiom H12 : (not (k4 <  z))

axiom H13 : (not (k4 = 10))

axiom H14 : (result2 = k4)

axiom H15 : (k5 = (k4 + 1))

 (* File "system.ads", line 1, characters 0-0 *)
goal WP_parameter_def : (k5 <= x)
