(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

 (* File "system.ads", line 1, characters 0-0 *)
goal WP_parameter_def :
  (forall a__f__result:int. forall result:int. forall a__f__result1:int.
  forall a__f__result2:int. forall a__f__result3:int.
  forall a__f__result4:int. forall a__f__result5:int.
  (forall result1:int. ((((((a__f__result1 = a__f__result2) and
  (a__f__result3 = a__f__result1)) and ((result = a__f__result) and
  (a__f__result1 = 2))) and ((a__f__result4 = a__f__result2) and
  (a__f__result5 = a__f__result3))) and (result1 = a__f__result4)) ->
  (a__f__result4 = 2))))
