(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

logic x : int

logic attr__ATTRIBUTE_ADDRESS : int

logic y : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic z : int

logic attr__ATTRIBUTE_ADDRESS2 : int

type t4b

predicate in_range2(x1: int) = ((1 <= x1) and (x1 <= 10))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x1:int. forall y1:int [bool_eq3(x1, y1)]. (((x1 = y1) ->
  (bool_eq3(x1, y1) = true)) and ((not (x1 = y1)) -> (bool_eq3(x1,
  y1) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : t4b, t4b -> bool

logic dummy1 : t4b

type t4b__ref = { t4b__content : t4b
}

function t4b__ref___projection(a: t4b__ref) : t4b = (a).t4b__content

logic attr__ATTRIBUTE_ADDRESS3 : int

type t6b

predicate in_range3(x1: int) = ((1 <= x1) and (x1 <= 10))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x1:int. forall y1:int [bool_eq4(x1, y1)]. (((x1 = y1) ->
  (bool_eq4(x1, y1) = true)) and ((not (x1 = y1)) -> (bool_eq4(x1,
  y1) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : t6b, t6b -> bool

logic dummy2 : t6b

type t6b__ref = { t6b__content : t6b
}

function t6b__ref___projection(a: t6b__ref) : t6b = (a).t6b__content

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

type t9b

predicate in_range4(x1: int) = ((1 <= x1) and (x1 <= 10))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x1:int. forall y1:int [bool_eq5(x1, y1)]. (((x1 = y1) ->
  (bool_eq5(x1, y1) = true)) and ((not (x1 = y1)) -> (bool_eq5(x1,
  y1) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : t9b, t9b -> bool

logic dummy3 : t9b

type t9b__ref = { t9b__content : t9b
}

function t9b__ref___projection(a: t9b__ref) : t9b = (a).t9b__content

logic attr__ATTRIBUTE_ADDRESS6 : int

 (* File "system.ads", line 1, characters 0-0 *)
goal WP_parameter_def :
  (forall h:int. forall k:int. forall temp___138:int. forall temp___1381:int.
  forall temp___1382:int. forall temp___1383:int. forall temp___1384:int.
  forall temp___1385:int. forall temp___1386:int. forall temp___1387:int.
  forall temp___1388:int. forall temp___1389:int. forall p__result:int.
  forall p__result1:int. forall result:int. forall h1:int.
  forall result1:int. forall k1:int. forall k2:int. forall p__result2:int.
  forall p__result3:int. forall p__result4:int. forall p__result5:int.
  forall p__result6:int. forall k3:int. forall p__result7:int. forall k4:int.
  forall p__result8:int. forall k5:int. forall p__result9:int. forall k6:int.
  forall p__result10:int. forall result2:int. forall h2:int.
  forall result3:int. forall k7:int. forall k8:int. forall p__result11:int.
  forall p__result12:int. forall p__result13:int. forall p__result14:int.
  forall p__result15:int. forall k9:int__ref. forall p__result16:int__ref.
  forall k10:int. forall p__result17:int. forall k11:int__ref.
  forall p__result18:int__ref. forall k12:int. forall p__result19:int.
  forall result4:int__ref. forall h3:int. forall result5:int__ref.
  forall k13:int. forall k14:int. forall p__result20:int.
  forall p__result21:int__ref. forall p__result22:int.
  forall p__result23:int__ref. forall p__result24:int. forall k15:int__ref.
  forall p__result25:int__ref. forall k16:int. forall p__result26:int.
  forall k17:int__ref. forall p__result27:int__ref. forall k18:int.
  forall p__result28:int. forall result6:int__ref. forall h4:int.
  forall result7:int__ref. forall k19:int. forall k20:int.
  forall p__result29:int. forall p__result30:int__ref.
  forall p__result31:int. forall p__result32:int__ref.
  forall p__result33:int. forall k21:int__ref. forall p__result34:int__ref.
  forall k22:int. forall p__result35:int. forall k23:int__ref.
  forall p__result36:int__ref. forall k24:int. forall p__result37:int.
  forall result8:int__ref. forall h5:int. forall result9:int__ref.
  forall k25:int. forall k26:int. forall p__result38:int.
  forall p__result39:int__ref. forall p__result40:int.
  forall p__result41:int__ref. forall p__result42:int. forall k27:int__ref.
  forall p__result43:int__ref. forall k28:int. forall p__result44:int.
  forall k29:int__ref. forall p__result45:int__ref. forall k30:int.
  forall p__result46:int. forall result10:int__ref. forall h6:int.
  forall result11:int__ref. forall k31:int. forall k32:int.
  forall p__result47:int. forall p__result48:int__ref.
  forall p__result49:int. forall p__result50:int__ref.
  forall p__result51:int. forall k33:int__ref. forall p__result52:int__ref.
  forall k34:int. forall p__result53:int. forall k35:int__ref.
  forall p__result54:int__ref. forall k36:int. forall p__result55:int.
  forall result12:int__ref. forall h7:int. forall result13:int__ref.
  forall k37:int. forall k38:int. forall p__result56:int.
  forall p__result57:int__ref. forall p__result58:int.
  forall p__result59:int__ref. forall p__result60:int. forall k39:int__ref.
  forall p__result61:int__ref. forall k40:int. forall p__result62:int.
  forall k41:int__ref. forall p__result63:int__ref. forall k42:int.
  forall p__result64:int. forall result14:int__ref. forall h8:int.
  forall result15:int__ref. forall k43:int. forall k44:int.
  forall p__result65:int. forall p__result66:int__ref.
  forall p__result67:int. forall p__result68:int__ref.
  forall p__result69:int. forall k45:int__ref. forall p__result70:int__ref.
  forall k46:int. forall p__result71:int. forall k47:int__ref.
  forall p__result72:int__ref. forall k48:int. forall p__result73:int.
  forall result16:int__ref. forall h9:int. forall result17:int__ref.
  forall k49:int. forall k50:int. forall p__result74:int.
  forall p__result75:int__ref. forall p__result76:int.
  forall p__result77:int__ref. forall p__result78:int. forall k51:int__ref.
  forall p__result79:int__ref. forall k52:int. forall p__result80:int.
  forall k53:int__ref. forall p__result81:int__ref. forall k54:int.
  forall p__result82:int. forall result18:int__ref. forall h10:int.
  forall result19:int__ref. forall k55:int. forall k56:int.
  forall p__result83:int. forall p__result84:int__ref.
  forall p__result85:int. forall p__result86:int__ref.
  forall p__result87:int. forall k57:int__ref. forall p__result88:int__ref.
  forall k58:int. forall p__result89:int. forall k59:int__ref.
  forall p__result90:int__ref. forall k60:int. forall p__result91:int.
  (in_range1(x) -> (in_range1(y) -> (in_range1(z) -> ((((((10 <= x) and
  (x <= 1000)) and (0 <  y)) and (z <  0)) and ((y + z) <= 1000)) ->
  ((((result = h) and (h1 = 1)) and ((((result1 = k) and (k1 = 1)) and
  ((((1 <= k1) and (k1 <= 10)) and ((((temp___138 = k1) and ((k2 <= x) and
  ((((1 <= 10) -> in_range4(k2)) and ((1 <= k2) and (k2 <= 10))) and
  ((((k2 <  y) and (((not (k2 <  z)) and ((p__result2 = p__result3) and
  (p__result4 = p__result2))) and (({ int__content = p__result5 } = {
  int__content = p__result3 }) and (p__result6 = p__result4)))) or
  ((not (k2 <  y)) and ((p__result2 = p__result5) and
  (p__result6 = p__result2)))) and (k2 = 10))))) and ((({ int__content =
  p__result7 } = { int__content = p__result5 }) and (k2 = k3)) and
  ((p__result8 = p__result6) and (k4 = k2)))) and ((({ int__content =
  p__result9 } = { int__content = p__result7 }) and ({ int__content = k5
  } = { int__content = k3 })) and ((p__result10 = p__result8) and
  (k6 = k4))))) or ((not ((1 <= k1) and (k1 <= 10))) and
  (((p__result = p__result9) and (k1 = k5)) and
  ((p__result10 = p__result1) and (k6 = k1)))))) and (((result2 = h1) and
  (h2 = 2)) and ((((result3 = k5) and (k7 = 1)) and ((((1 <= k7) and
  (k7 <= 10)) and ((((temp___1381 = k7) and ((k8 <= x) and ((((1 <= 10) ->
  in_range4(k8)) and ((1 <= k8) and (k8 <= 10))) and ((((k8 <  y) and
  (((not (k8 <  z)) and ((p__result11 = p__result12) and
  (p__result13 = p__result11))) and (({ int__content = p__result14 } = {
  int__content = p__result12 }) and (p__result15 = p__result13)))) or
  ((not (k8 <  y)) and ((p__result11 = p__result14) and
  (p__result15 = p__result11)))) and (k8 = 10))))) and (((p__result16 = {
  int__content = p__result14 }) and (k9 = { int__content = k8 })) and
  ((p__result17 = p__result15) and (k10 = k8)))) and
  (((p__result18 = p__result16) and (k11 = k9)) and
  ((p__result19 = p__result17) and (k12 = k10))))) or ((not ((1 <= k7) and
  (k7 <= 10))) and (((p__result18 = { int__content = p__result9 }) and
  (k11 = { int__content = k7 })) and ((p__result19 = p__result10) and
  (k12 = k7)))))) and (((result4 = { int__content = h2 }) and (h3 = 3)) and
  ((((result5 = k11) and (k13 = 1)) and ((((1 <= k13) and (k13 <= 10)) and
  ((((temp___1382 = k13) and ((k14 <= x) and ((((1 <= 10) ->
  in_range4(k14)) and ((1 <= k14) and (k14 <= 10))) and ((((k14 <  y) and
  (((not (k14 <  z)) and ((p__result21 = { int__content = p__result20 }) and
  (p__result22 = p__result20))) and ((p__result23 = p__result21) and
  (p__result24 = p__result22)))) or ((not (k14 <  y)) and ((p__result23 = {
  int__content = p__result20 }) and (p__result24 = p__result20)))) and
  (k14 = 10))))) and (((p__result25 = p__result23) and (k15 = {
  int__content = k14 })) and ((p__result26 = p__result24) and
  (k16 = k14)))) and (((p__result27 = p__result25) and (k17 = k15)) and
  ((p__result28 = p__result26) and (k18 = k16))))) or ((not ((1 <= k13) and
  (k13 <= 10))) and (((p__result27 = p__result18) and (k17 = { int__content =
  k13 })) and ((p__result28 = p__result19) and (k18 = k13)))))) and
  (((result6 = { int__content = h3 }) and (h4 = 4)) and
  ((((result7 = k17) and (k19 = 1)) and ((((1 <= k19) and (k19 <= 10)) and
  ((((temp___1383 = k19) and ((k20 <= x) and ((((1 <= 10) ->
  in_range4(k20)) and ((1 <= k20) and (k20 <= 10))) and ((((k20 <  y) and
  (((not (k20 <  z)) and ((p__result30 = { int__content = p__result29 }) and
  (p__result31 = p__result29))) and ((p__result32 = p__result30) and
  (p__result33 = p__result31)))) or ((not (k20 <  y)) and ((p__result32 = {
  int__content = p__result29 }) and (p__result33 = p__result29)))) and
  (k20 = 10))))) and (((p__result34 = p__result32) and (k21 = {
  int__content = k20 })) and ((p__result35 = p__result33) and
  (k22 = k20)))) and (((p__result36 = p__result34) and (k23 = k21)) and
  ((p__result37 = p__result35) and (k24 = k22))))) or ((not ((1 <= k19) and
  (k19 <= 10))) and (((p__result36 = p__result27) and (k23 = { int__content =
  k19 })) and ((p__result37 = p__result28) and (k24 = k19)))))) and
  (((result8 = { int__content = h4 }) and (h5 = 5)) and
  ((((result9 = k23) and (k25 = 1)) and ((((1 <= k25) and (k25 <= 10)) and
  ((((temp___1384 = k25) and ((k26 <= x) and ((((1 <= 10) ->
  in_range4(k26)) and ((1 <= k26) and (k26 <= 10))) and ((((k26 <  y) and
  (((not (k26 <  z)) and ((p__result39 = { int__content = p__result38 }) and
  (p__result40 = p__result38))) and ((p__result41 = p__result39) and
  (p__result42 = p__result40)))) or ((not (k26 <  y)) and ((p__result41 = {
  int__content = p__result38 }) and (p__result42 = p__result38)))) and
  (k26 = 10))))) and (((p__result43 = p__result41) and (k27 = {
  int__content = k26 })) and ((p__result44 = p__result42) and
  (k28 = k26)))) and (((p__result45 = p__result43) and (k29 = k27)) and
  ((p__result46 = p__result44) and (k30 = k28))))) or ((not ((1 <= k25) and
  (k25 <= 10))) and (((p__result45 = p__result36) and (k29 = { int__content =
  k25 })) and ((p__result46 = p__result37) and (k30 = k25)))))) and
  (((result10 = { int__content = h5 }) and (h6 = 6)) and
  ((((result11 = k29) and (k31 = 1)) and ((((1 <= k31) and (k31 <= 10)) and
  ((((temp___1385 = k31) and ((k32 <= x) and ((((1 <= 10) ->
  in_range4(k32)) and ((1 <= k32) and (k32 <= 10))) and ((((k32 <  y) and
  (((not (k32 <  z)) and ((p__result48 = { int__content = p__result47 }) and
  (p__result49 = p__result47))) and ((p__result50 = p__result48) and
  (p__result51 = p__result49)))) or ((not (k32 <  y)) and ((p__result50 = {
  int__content = p__result47 }) and (p__result51 = p__result47)))) and
  (k32 = 10))))) and (((p__result52 = p__result50) and (k33 = {
  int__content = k32 })) and ((p__result53 = p__result51) and
  (k34 = k32)))) and (((p__result54 = p__result52) and (k35 = k33)) and
  ((p__result55 = p__result53) and (k36 = k34))))) or ((not ((1 <= k31) and
  (k31 <= 10))) and (((p__result54 = p__result45) and (k35 = { int__content =
  k31 })) and ((p__result55 = p__result46) and (k36 = k31)))))) and
  (((result12 = { int__content = h6 }) and (h7 = 7)) and
  ((((result13 = k35) and (k37 = 1)) and ((((1 <= k37) and (k37 <= 10)) and
  ((((temp___1386 = k37) and ((k38 <= x) and ((((1 <= 10) ->
  in_range4(k38)) and ((1 <= k38) and (k38 <= 10))) and ((((k38 <  y) and
  (((not (k38 <  z)) and ((p__result57 = { int__content = p__result56 }) and
  (p__result58 = p__result56))) and ((p__result59 = p__result57) and
  (p__result60 = p__result58)))) or ((not (k38 <  y)) and ((p__result59 = {
  int__content = p__result56 }) and (p__result60 = p__result56)))) and
  (k38 = 10))))) and (((p__result61 = p__result59) and (k39 = {
  int__content = k38 })) and ((p__result62 = p__result60) and
  (k40 = k38)))) and (((p__result63 = p__result61) and (k41 = k39)) and
  ((p__result64 = p__result62) and (k42 = k40))))) or ((not ((1 <= k37) and
  (k37 <= 10))) and (((p__result63 = p__result54) and (k41 = { int__content =
  k37 })) and ((p__result64 = p__result55) and (k42 = k37)))))) and
  (((result14 = { int__content = h7 }) and (h8 = 8)) and
  ((((result15 = k41) and (k43 = 1)) and ((((1 <= k43) and (k43 <= 10)) and
  ((((temp___1387 = k43) and ((k44 <= x) and ((((1 <= 10) ->
  in_range4(k44)) and ((1 <= k44) and (k44 <= 10))) and ((((k44 <  y) and
  (((not (k44 <  z)) and ((p__result66 = { int__content = p__result65 }) and
  (p__result67 = p__result65))) and ((p__result68 = p__result66) and
  (p__result69 = p__result67)))) or ((not (k44 <  y)) and ((p__result68 = {
  int__content = p__result65 }) and (p__result69 = p__result65)))) and
  (k44 = 10))))) and (((p__result70 = p__result68) and (k45 = {
  int__content = k44 })) and ((p__result71 = p__result69) and
  (k46 = k44)))) and (((p__result72 = p__result70) and (k47 = k45)) and
  ((p__result73 = p__result71) and (k48 = k46))))) or ((not ((1 <= k43) and
  (k43 <= 10))) and (((p__result72 = p__result63) and (k47 = { int__content =
  k43 })) and ((p__result73 = p__result64) and (k48 = k43)))))) and
  (((result16 = { int__content = h8 }) and (h9 = 9)) and
  ((((result17 = k47) and (k49 = 1)) and ((((1 <= k49) and (k49 <= 10)) and
  ((((temp___1388 = k49) and ((k50 <= x) and ((((1 <= 10) ->
  in_range4(k50)) and ((1 <= k50) and (k50 <= 10))) and ((((k50 <  y) and
  (((not (k50 <  z)) and ((p__result75 = { int__content = p__result74 }) and
  (p__result76 = p__result74))) and ((p__result77 = p__result75) and
  (p__result78 = p__result76)))) or ((not (k50 <  y)) and ((p__result77 = {
  int__content = p__result74 }) and (p__result78 = p__result74)))) and
  (k50 = 10))))) and (((p__result79 = p__result77) and (k51 = {
  int__content = k50 })) and ((p__result80 = p__result78) and
  (k52 = k50)))) and (((p__result81 = p__result79) and (k53 = k51)) and
  ((p__result82 = p__result80) and (k54 = k52))))) or ((not ((1 <= k49) and
  (k49 <= 10))) and (((p__result81 = p__result72) and (k53 = { int__content =
  k49 })) and ((p__result82 = p__result73) and (k54 = k49)))))) and
  (((result18 = { int__content = h9 }) and (h10 = 10)) and
  (((result19 = k53) and (k55 = 1)) and ((((1 <= k55) and (k55 <= 10)) and
  ((((temp___1389 = k55) and ((k56 <= x) and ((((1 <= 10) ->
  in_range4(k56)) and ((1 <= k56) and (k56 <= 10))) and ((((k56 <  y) and
  (((not (k56 <  z)) and ((p__result84 = { int__content = p__result83 }) and
  (p__result85 = p__result83))) and ((p__result86 = p__result84) and
  (p__result87 = p__result85)))) or ((not (k56 <  y)) and ((p__result86 = {
  int__content = p__result83 }) and (p__result87 = p__result83)))) and
  (k56 = 10))))) and (((p__result88 = p__result86) and (k57 = {
  int__content = k56 })) and ((p__result89 = p__result87) and
  (k58 = k56)))) and (((p__result90 = p__result88) and (k59 = k57)) and
  ((p__result91 = p__result89) and (k60 = k58))))) or ((not ((1 <= k55) and
  (k55 <= 10))) and (((p__result90 = p__result81) and (k59 = { int__content =
  k55 })) and ((p__result91 = p__result82) and
  (k60 = k55))))))))))))))))))))))))) -> in_range1((y + z))))))))
