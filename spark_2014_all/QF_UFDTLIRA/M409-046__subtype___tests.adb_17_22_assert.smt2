(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort positive_with_hole 0)
(define-fun in_range ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (positive_with_hole positive_with_hole) Bool)
(declare-const dummy positive_with_hole)
(declare-datatypes () ((positive_with_hole__ref (mk_positive_with_hole__ref (positive_with_hole__content positive_with_hole)))))
(define-fun positive_with_hole__ref___projection ((a positive_with_hole__ref)) positive_with_hole (positive_with_hole__content a))
(define-fun dynamic_invariant ((temp___expr_185 Int) (temp___is_init_181 Bool) (temp___skip_constant_182 Bool) (temp___do_toplevel_183 Bool) (temp___do_typ_inv_184 Bool)) Bool (and (=> (or (= temp___is_init_181 true) (<= 1 2147483647)) (in_range temp___expr_185)) (=> (= temp___do_toplevel_183 true) (=> (= temp___is_init_181 true) (or (and (<= 1 temp___expr_185) (<= temp___expr_185 9)) (and (<= 21 temp___expr_185) (<= temp___expr_185 2147483647)))))))
(define-fun dynamic_predicate ((temp___189 Int)) Bool (or (and (<= 1 temp___189) (<= temp___189 9)) (and (<= 21 temp___189) (<= temp___189 2147483647))))
(declare-const i5s Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const v Int)
(assert (dynamic_invariant i5s true false true true))
(assert (dynamic_invariant v true false true true))
(assert (not (not (= v 15))))
(check-sat)
(exit)
