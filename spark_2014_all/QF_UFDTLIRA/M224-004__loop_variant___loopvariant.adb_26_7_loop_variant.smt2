(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const i Int)
(declare-const j Int)
(declare-const temp___169 Int)
(declare-const temp___168 Int)
(declare-const temp___171 Int)
(declare-const temp___170 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const result Int)
(declare-const i1 Int)
(declare-const result1 Int)
(declare-const j1 Int)
(declare-const result2 Int)
(declare-const j2 Int)
(declare-const result3 Int)
(declare-const j3 Int)
(declare-const result4 Int)
(declare-const i2 Int)
(declare-const i3 Int)
(declare-const j4 Int)
(declare-const temp___1711 Int)
(declare-const temp___1701 Int)
(declare-const result5 Int)
(declare-const temp___1712 Int)
(declare-const result6 Int)
(declare-const temp___1702 Int)
(declare-const result7 Int)
(declare-const j5 Int)
(declare-const result8 Int)
(declare-const j6 Int)
(declare-const result9 Int)
(declare-const i4 Int)
(declare-const i5 Int)
(declare-const j7 Int)
(declare-const i6 Int)
(declare-const j8 Int)
(declare-const i7 Int)
(declare-const j9 int__ref)
(declare-const i8 Int)
(declare-const j10 Int)
(declare-const result10 int__ref)
(declare-const i9 Int)
(declare-const result11 int__ref)
(declare-const j11 Int)
(declare-const result12 int__ref)
(declare-const j12 Int)
(declare-const result13 int__ref)
(declare-const j13 Int)
(declare-const result14 int__ref)
(declare-const i10 Int)
(declare-const i11 int__ref)
(declare-const j14 int__ref)
(declare-const i12 Int)
(declare-const j15 Int)
(declare-const i13 Int)
(declare-const j16 Int)
(declare-const temp___175 Int)
(declare-const temp___174 Int)
(declare-const result15 int__ref)
(declare-const temp___1751 Int)
(declare-const result16 int__ref)
(declare-const temp___1741 Int)
(declare-const result17 int__ref)
(declare-const j17 Int)
(declare-const result18 int__ref)
(declare-const j18 Int)
(declare-const result19 int__ref)
(declare-const i14 Int)
(declare-const i15 int__ref)
(declare-const j19 int__ref)
(declare-const i16 Int)
(declare-const j20 Int)
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 i)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 j)))
(assert (= result i))
(assert (= i1 1))
(assert (= result1 j))
(assert (= j1 3))
(assert (=> (< i1 3) (= temp___169 j1)))
(assert (=> (< i1 3) (= temp___168 i1)))
(assert (=> (< i1 3) (= 0 temp___171)))
(assert (=> (< i1 3) (= 0 temp___170)))
(assert (=> (< i1 3) (=> (< 0 j1) (and (= o (- j1 1)) (in_range1 (- j1 1))))))
(assert (=> (< i1 3) (=> (< 0 j1) (= j1 result2))))
(assert (=> (< i1 3) (=> (< 0 j1) (= j2 o))))
(assert (=> (< i1 3) (=> (< 0 j1) (= i2 i1))))
(assert (=> (< i1 3) (=> (not (< 0 j1)) (= j1 result3))))
(assert (=> (< i1 3) (=> (not (< 0 j1)) (= j3 3))))
(assert (=> (< i1 3) (=> (not (< 0 j1)) (and (= o1 (+ i1 1)) (in_range1 (+ i1 1))))))
(assert (=> (< i1 3) (=> (not (< 0 j1)) (= i1 result4))))
(assert (=> (< i1 3) (=> (not (< 0 j1)) (= i2 o1))))
(assert (=> (< i1 3) (=> (not (< 0 j1)) (= j2 j3))))
(assert (=> (< i1 3) (and (=> (<= (- 2147483648) 2147483647) (in_range1 i3)) (=> (<= (- 2147483648) 2147483647) (in_range1 j4)))))
(assert (=> (< i1 3) (= temp___1711 result5)))
(assert (=> (< i1 3) (= temp___1712 i3)))
(assert (=> (< i1 3) (= temp___1701 result6)))
(assert (=> (< i1 3) (= temp___1702 j4)))
(assert (=> (< i1 3) (not (< i3 3))))
(assert (=> (< i1 3) (= j4 j7)))
(assert (=> (< i1 3) (= i3 i5)))
(assert (=> (< i1 3) (= j8 j4)))
(assert (=> (< i1 3) (= i6 i3)))
(assert (=> (< i1 3) (= j9 (mk_int__ref j7))))
(assert (=> (< i1 3) (= (mk_int__ref i7) (mk_int__ref i5))))
(assert (=> (< i1 3) (= j10 j8)))
(assert (=> (< i1 3) (= i8 i6)))
(assert (=> (not (< i1 3)) (= j9 (mk_int__ref j1))))
(assert (=> (not (< i1 3)) (= i1 i7)))
(assert (=> (not (< i1 3)) (= j10 j1)))
(assert (=> (not (< i1 3)) (= i8 i1)))
(assert (= result10 (mk_int__ref i7)))
(assert (= i9 1))
(assert (= result11 j9))
(assert (= j11 3))
(assert (< i9 3))
(assert (=> (< 0 j11) (and (= o4 (- j11 1)) (in_range1 (- j11 1)))))
(assert (=> (< 0 j11) (= result12 (mk_int__ref j11))))
(assert (=> (< 0 j11) (= j12 o4)))
(assert (=> (< 0 j11) (= j14 (mk_int__ref j12))))
(assert (=> (< 0 j11) (= i11 (mk_int__ref i9))))
(assert (=> (< 0 j11) (= j15 j12)))
(assert (=> (< 0 j11) (= i12 i9)))
(assert (=> (not (< 0 j11)) (= result13 (mk_int__ref j11))))
(assert (=> (not (< 0 j11)) (= j13 3)))
(assert (=> (not (< 0 j11)) (and (= o5 (- i9 1)) (in_range1 (- i9 1)))))
(assert (=> (not (< 0 j11)) (= result14 (mk_int__ref i9))))
(assert (=> (not (< 0 j11)) (= i10 o5)))
(assert (=> (not (< 0 j11)) (= j14 (mk_int__ref j13))))
(assert (=> (not (< 0 j11)) (= i11 (mk_int__ref i10))))
(assert (=> (not (< 0 j11)) (= j15 j13)))
(assert (=> (not (< 0 j11)) (= i12 i10)))
(assert (and (=> (<= (- 2147483648) 2147483647) (in_range1 i13)) (=> (<= (- 2147483648) 2147483647) (in_range1 j16))))
(assert (= result15 (mk_int__ref temp___175)))
(assert (= temp___1751 i13))
(assert (= result16 (mk_int__ref temp___174)))
(assert (= temp___1741 j16))
(assert (<= 0 i13))
(assert (<= i13 3))
(assert (< i13 3))
(assert (=> (< 0 j16) (and (= o6 (- j16 1)) (in_range1 (- j16 1)))))
(assert (=> (< 0 j16) (= result17 (mk_int__ref j16))))
(assert (=> (< 0 j16) (= j17 o6)))
(assert (=> (< 0 j16) (= j19 (mk_int__ref j17))))
(assert (=> (< 0 j16) (= i15 (mk_int__ref i13))))
(assert (=> (< 0 j16) (= j20 j17)))
(assert (=> (< 0 j16) (= i16 i13)))
(assert (=> (not (< 0 j16)) (= result18 (mk_int__ref j16))))
(assert (=> (not (< 0 j16)) (= j18 3)))
(assert (=> (not (< 0 j16)) (and (= o7 (- i13 1)) (in_range1 (- i13 1)))))
(assert (=> (not (< 0 j16)) (= result19 (mk_int__ref i13))))
(assert (=> (not (< 0 j16)) (= i14 o7)))
(assert (=> (not (< 0 j16)) (= j19 (mk_int__ref j18))))
(assert (=> (not (< 0 j16)) (= i15 (mk_int__ref i14))))
(assert (=> (not (< 0 j16)) (= j20 j18)))
(assert (=> (not (< 0 j16)) (= i16 i14)))
(assert (not (or (< temp___1751 (int__content i15)) (and (= (int__content i15) temp___1751) (< (int__content j19) temp___1741)))))
(check-sat)
(exit)
