(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

logic x : int

logic attr__ATTRIBUTE_ADDRESS : int

logic y : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic z : int

logic attr__ATTRIBUTE_ADDRESS2 : int

type t3b

predicate in_range2(x1: int) = ((1 <= x1) and (x1 <= 10))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x1:int. forall y1:int [bool_eq3(x1, y1)]. (((x1 = y1) ->
  (bool_eq3(x1, y1) = true)) and ((not (x1 = y1)) -> (bool_eq3(x1,
  y1) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : t3b, t3b -> bool

logic dummy1 : t3b

type t3b__ref = { t3b__content : t3b
}

function t3b__ref___projection(a: t3b__ref) : t3b = (a).t3b__content

logic attr__ATTRIBUTE_ADDRESS3 : int

type t4b

predicate in_range3(x1: int) = ((1 <= x1) and (x1 <= 10))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x1:int. forall y1:int [bool_eq4(x1, y1)]. (((x1 = y1) ->
  (bool_eq4(x1, y1) = true)) and ((not (x1 = y1)) -> (bool_eq4(x1,
  y1) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : t4b, t4b -> bool

logic dummy2 : t4b

type t4b__ref = { t4b__content : t4b
}

function t4b__ref___projection(a: t4b__ref) : t4b = (a).t4b__content

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

type t6b

predicate in_range4(x1: int) = ((1 <= x1) and (x1 <= 10))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x1:int. forall y1:int [bool_eq5(x1, y1)]. (((x1 = y1) ->
  (bool_eq5(x1, y1) = true)) and ((not (x1 = y1)) -> (bool_eq5(x1,
  y1) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : t6b, t6b -> bool

logic dummy3 : t6b

type t6b__ref = { t6b__content : t6b
}

function t6b__ref___projection(a: t6b__ref) : t6b = (a).t6b__content

logic attr__ATTRIBUTE_ADDRESS6 : int

logic k : int

logic k1 : int

logic h : int

logic k2 : int

logic o : int

logic o1 : bool

logic o2 : bool

logic o3 : int

logic temp___132 : int

logic o4 : int

logic temp___135 : int

logic o5 : int

logic temp___139 : int

logic temp___140 : int

logic temp___138 : int

logic temp___1391 : int

logic temp___1401 : int

logic temp___1381 : int

logic temp___1392 : int

logic temp___1402 : int

logic temp___1382 : int

logic temp___1393 : int

logic temp___1403 : int

logic temp___1383 : int

logic temp___1394 : int

logic temp___1404 : int

logic temp___1384 : int

logic temp___1395 : int

logic temp___1405 : int

logic temp___1385 : int

logic temp___1396 : int

logic temp___1406 : int

logic temp___1386 : int

logic temp___1397 : int

logic temp___1407 : int

logic temp___1387 : int

logic temp___1398 : int

logic temp___1408 : int

logic temp___1388 : int

logic temp___1399 : int

logic temp___1409 : int

logic temp___1389 : int

logic o6 : int

logic o7 : int

logic o8 : int

logic result : bool

logic result1 : int

logic k3 : int

logic k4 : int

logic result2 : int

logic k5 : int

logic k6 : int

logic k7 : int

logic k8 : int

logic k9 : int

logic k10 : int

logic k11 : int

logic result3 : int

logic k12 : int

logic k13 : int

logic result4 : int

logic k14 : int

logic k15 : int

logic k16 : int

logic k17 : int

logic k18 : int

logic k19 : int

logic k20 : int

logic k21 : int

logic k22 : int

logic result5 : int

logic h1 : int

logic result6 : int

logic k23 : int

logic k24 : int

logic result7 : int

logic k25 : int

logic k26 : int

logic k27 : int

logic k28 : int

logic k29 : int

logic k30 : int

logic k31 : int

logic k32 : int

logic k33 : int

logic result8 : int

logic h2 : int

logic result9 : int

logic k34 : int

logic k35 : int

logic result10 : int

logic k36 : int

logic k37 : int

logic k38 : int

logic k39 : int

logic k40 : int

logic k41 : int

logic k42 : int

logic k43 : int

logic k44 : int

logic result11 : int

logic h3 : int

logic result12 : int

logic k45 : int

logic k46 : int

logic result13 : int

logic k47 : int

logic k48 : int

logic k49 : int

logic k50 : int

logic k51 : int

logic k52 : int

logic k53 : int

logic k54 : int

logic k55 : int

logic result14 : int

logic h4 : int

logic result15 : int

logic k56 : int

logic k57 : int

logic result16 : int

logic k58 : int

logic k59 : int

logic k60 : int

logic k61 : int

logic k62 : int

logic k63 : int

logic k64 : int

logic k65 : int

logic k66 : int

logic result17 : int

logic h5 : int

logic result18 : int

logic k67 : int

logic k68 : int

logic result19 : int

logic k69 : int

logic k70 : int

logic k71 : int

logic k72 : int

logic k73 : int

logic k74 : int

logic k75 : int

logic k76 : int

logic k77 : int

logic result20 : int

logic h6 : int

logic result21 : int

logic k78 : int

logic k79 : int

logic result22 : int

logic k80 : int

logic k81 : int

logic k82 : int

logic k83 : int

logic k84 : int

logic k85 : int

logic k86 : int

logic k87 : int

logic k88 : int

logic result23 : int

logic h7 : int

logic result24 : int

logic k89 : int

logic k90 : int

logic result25 : int

logic k91 : int

logic k92 : int

logic k93 : int

logic k94 : int

logic k95 : int

logic k96 : int

logic k97 : int

logic k98 : int

logic k99 : int

logic result26 : int

logic h8 : int

logic result27 : int

logic k100 : int

logic k101 : int

logic result28 : int

logic k102 : int

logic k103 : int

logic k104 : int

logic k105 : int

logic k106 : int

logic k107 : int

logic k108 : int

logic k109 : int

logic k110 : int

logic result29 : int

logic h9 : int

logic result30 : int

logic k111 : int

logic k112 : int

logic result31 : int

logic k113 : int

logic k114 : int

logic k115 : int

logic k116 : int

logic k117 : int

logic k118 : int

logic k119 : int

logic k120 : int

logic k121 : int

logic result32 : int

logic h10 : int

logic result33 : int

logic k122 : int

logic k123 : int

logic result34 : int

logic k124 : int

logic k125 : int

logic k126 : int

logic k127 : int

logic k128 : int

logic k129 : int

logic k130 : int

logic k131 : int

logic k132 : int

logic h11 : int

logic k133 : int

logic h12 : int

logic k134 : int

logic h13 : int

logic k135 : int

logic h14 : int

logic k136 : int

logic h15 : int

logic k137 : int

logic h16 : int

logic k138 : int

logic h17 : int

logic k139 : int

logic h18 : int

logic k140 : int

logic h19 : int

logic k141 : int

logic h20 : int

logic k142 : int

logic h21 : int

logic k143 : int

logic h22 : int

logic k144 : int

logic h23 : int

logic k145 : int

logic h24 : int

logic k146 : int

logic h25 : int

logic k147 : int

logic h26 : int

logic k148 : int

logic h27 : int

logic k149 : int

logic h28 : int

logic k150 : int

logic h29 : int

logic k151 : int

logic h30 : int

logic k152 : int

axiom H : in_range1(x)

axiom H1 : in_range1(y)

axiom H2 : in_range1(z)

axiom H3 : (((((10 <= x) and (x <= 1000)) and (0 <  y)) and (z <  0)) and
  ((y + z) <= 1000))

axiom H4 : (((((result5 = h) and (h1 = 1)) and ((((result6 = k2) and
  (k23 = 1)) and ((((1 <= k23) and (k23 <= 10)) -> ((((temp___138 = k23) and
  ((k24 <= x) and ((((1 <= 10) -> in_range4(k24)) and ((1 <= k24) and
  (k24 <= 10))) and (((k24 <  y) -> ((k24 <  z) -> (not (z <  y)))) and
  (k24 = 10))))) and ((k24 = k30) and (k31 = k24))) and ((k32 = k30) and
  (k33 = k31)))) and ((not ((1 <= k23) and (k23 <= 10))) -> ((k32 = k23) and
  (k33 = k23))))) and (((result8 = h1) and (h2 = 2)) and
  ((((result9 = k32) and (k34 = 1)) and ((((1 <= k34) and (k34 <= 10)) ->
  ((((temp___1381 = k34) and ((k35 <= x) and ((((1 <= 10) ->
  in_range4(k35)) and ((1 <= k35) and (k35 <= 10))) and (((k35 <  y) ->
  ((k35 <  z) -> (not (z <  y)))) and (k35 = 10))))) and ((k41 = k35) and
  (k42 = k35))) and ((k43 = k41) and (k44 = k42)))) and ((not ((1 <= k34) and
  (k34 <= 10))) -> ((k43 = k34) and (k44 = k34))))) and (((result11 = h2) and
  (h3 = 3)) and ((((result12 = k43) and (k45 = 1)) and ((((1 <= k45) and
  (k45 <= 10)) -> ((((temp___1382 = k45) and ((k46 <= x) and ((((1 <= 10) ->
  in_range4(k46)) and ((1 <= k46) and (k46 <= 10))) and (((k46 <  y) ->
  ((k46 <  z) -> (not (z <  y)))) and (k46 = 10))))) and ((k52 = k46) and
  (k53 = k46))) and ((k54 = k52) and (k55 = k53)))) and ((not ((1 <= k45) and
  (k45 <= 10))) -> ((k54 = k45) and (k55 = k45))))) and (((result14 = h3) and
  (h4 = 4)) and ((((result15 = k54) and (k56 = 1)) and ((((1 <= k56) and
  (k56 <= 10)) -> ((((temp___1383 = k56) and ((k57 <= x) and ((((1 <= 10) ->
  in_range4(k57)) and ((1 <= k57) and (k57 <= 10))) and (((k57 <  y) ->
  ((k57 <  z) -> (not (z <  y)))) and (k57 = 10))))) and ((k63 = k57) and
  (k64 = k57))) and ((k65 = k63) and (k66 = k64)))) and ((not ((1 <= k56) and
  (k56 <= 10))) -> ((k65 = k56) and (k66 = k56))))) and (((result17 = h4) and
  (h5 = 5)) and ((((result18 = k65) and (k67 = 1)) and ((((1 <= k67) and
  (k67 <= 10)) -> ((((temp___1384 = k67) and ((k68 <= x) and ((((1 <= 10) ->
  in_range4(k68)) and ((1 <= k68) and (k68 <= 10))) and (((k68 <  y) ->
  ((k68 <  z) -> (not (z <  y)))) and (k68 = 10))))) and ((k74 = k68) and
  (k75 = k68))) and ((k76 = k74) and (k77 = k75)))) and ((not ((1 <= k67) and
  (k67 <= 10))) -> ((k76 = k67) and (k77 = k67))))) and (((result20 = h5) and
  (h6 = 6)) and ((((result21 = k76) and (k78 = 1)) and ((((1 <= k78) and
  (k78 <= 10)) -> ((((temp___1385 = k78) and ((k79 <= x) and ((((1 <= 10) ->
  in_range4(k79)) and ((1 <= k79) and (k79 <= 10))) and (((k79 <  y) ->
  ((k79 <  z) -> (not (z <  y)))) and (k79 = 10))))) and ((k85 = k79) and
  (k86 = k79))) and ((k87 = k85) and (k88 = k86)))) and ((not ((1 <= k78) and
  (k78 <= 10))) -> ((k87 = k78) and (k88 = k78))))) and (((result23 = h6) and
  (h7 = 7)) and ((((result24 = k87) and (k89 = 1)) and ((((1 <= k89) and
  (k89 <= 10)) -> ((((temp___1386 = k89) and ((k90 <= x) and ((((1 <= 10) ->
  in_range4(k90)) and ((1 <= k90) and (k90 <= 10))) and (((k90 <  y) ->
  ((k90 <  z) -> (not (z <  y)))) and (k90 = 10))))) and ((k96 = k90) and
  (k97 = k90))) and ((k98 = k96) and (k99 = k97)))) and ((not ((1 <= k89) and
  (k89 <= 10))) -> ((k98 = k89) and (k99 = k89))))) and (((result26 = h7) and
  (h8 = 8)) and ((((result27 = k98) and (k100 = 1)) and ((((1 <= k100) and
  (k100 <= 10)) -> ((((temp___1387 = k100) and ((k101 <= x) and
  ((((1 <= 10) -> in_range4(k101)) and ((1 <= k101) and (k101 <= 10))) and
  (((k101 <  y) -> ((k101 <  z) -> (not (z <  y)))) and (k101 = 10))))) and
  ((k107 = k101) and (k108 = k101))) and ((k109 = k107) and
  (k110 = k108)))) and ((not ((1 <= k100) and (k100 <= 10))) ->
  ((k109 = k100) and (k110 = k100))))) and (((result29 = h8) and
  (h9 = 9)) and ((((result30 = k109) and (k111 = 1)) and ((((1 <= k111) and
  (k111 <= 10)) -> ((((temp___1388 = k111) and ((k112 <= x) and
  ((((1 <= 10) -> in_range4(k112)) and ((1 <= k112) and (k112 <= 10))) and
  (((k112 <  y) -> ((k112 <  z) -> (not (z <  y)))) and (k112 = 10))))) and
  ((k118 = k112) and (k119 = k112))) and ((k120 = k118) and
  (k121 = k119)))) and ((not ((1 <= k111) and (k111 <= 10))) ->
  ((k120 = k111) and (k121 = k111))))) and (((result32 = h9) and
  (h10 = 10)) and (((result33 = k120) and (k122 = 1)) and ((((1 <= k122) and
  (k122 <= 10)) -> ((((temp___1389 = k122) and ((k123 <= x) and
  ((((1 <= 10) -> in_range4(k123)) and ((1 <= k123) and (k123 <= 10))) and
  (((k123 <  y) -> ((k123 <  z) -> (not (z <  y)))) and (k123 = 10))))) and
  ((k129 = k123) and (k130 = k123))) and ((k131 = k129) and
  (k132 = k130)))) and ((not ((1 <= k122) and (k122 <= 10))) ->
  ((k131 = k122) and (k132 = k122)))))))))))))))))))))))) and
  (((k151 = k131) and (h29 = h10)) and ((k152 = k132) and (h30 = h10)))) or
  ((((result5 = h) and (h1 = 1)) and (((((k149 = k24) and (h27 = h1)) and
  ((k150 = k24) and (h28 = h1))) and ((temp___139 = 1) and
  ((temp___140 = 10) and (((result6 = k2) and (k23 = temp___139)) and
  (((temp___139 <= k23) and (k23 <= temp___140)) and ((temp___138 = k23) and
  ((k24 <= x) and ((((1 <= 10) -> in_range4(k24)) and ((1 <= k24) and
  (k24 <= 10))) and ((k24 <  y) and ((k24 <  z) and (z <  y))))))))))) or
  ((((result6 = k2) and (k23 = 1)) and ((((1 <= k23) and (k23 <= 10)) ->
  ((((temp___138 = k23) and ((k24 <= x) and ((((1 <= 10) ->
  in_range4(k24)) and ((1 <= k24) and (k24 <= 10))) and (((k24 <  y) ->
  ((k24 <  z) -> (not (z <  y)))) and (k24 = 10))))) and ((k24 = k30) and
  (k31 = k24))) and ((k32 = k30) and (k33 = k31)))) and ((not ((1 <= k23) and
  (k23 <= 10))) -> ((k32 = k23) and (k33 = k23))))) and ((((k149 = k147) and
  (h27 = h25)) and ((k150 = k148) and (h28 = h26))) and (((result8 = h1) and
  (h2 = 2)) and (((((k147 = k35) and (h25 = h2)) and ((k148 = k35) and
  (h26 = h2))) and ((temp___1391 = 1) and ((temp___1401 = 10) and
  (((result9 = k32) and (k34 = temp___1391)) and (((temp___1391 <= k34) and
  (k34 <= temp___1401)) and ((temp___1381 = k34) and ((k35 <= x) and
  ((((1 <= 10) -> in_range4(k35)) and ((1 <= k35) and (k35 <= 10))) and
  ((k35 <  y) and ((k35 <  z) and (z <  y))))))))))) or
  ((((result9 = k32) and (k34 = 1)) and ((((1 <= k34) and (k34 <= 10)) ->
  ((((temp___1381 = k34) and ((k35 <= x) and ((((1 <= 10) ->
  in_range4(k35)) and ((1 <= k35) and (k35 <= 10))) and (((k35 <  y) ->
  ((k35 <  z) -> (not (z <  y)))) and (k35 = 10))))) and ((k41 = k35) and
  (k42 = k35))) and ((k43 = k41) and (k44 = k42)))) and ((not ((1 <= k34) and
  (k34 <= 10))) -> ((k43 = k34) and (k44 = k34))))) and ((((k147 = k145) and
  (h25 = h23)) and ((k148 = k146) and (h26 = h24))) and (((result11 = h2) and
  (h3 = 3)) and (((((k145 = k46) and (h23 = h3)) and ((k146 = k46) and
  (h24 = h3))) and ((temp___1392 = 1) and ((temp___1402 = 10) and
  (((result12 = k43) and (k45 = temp___1392)) and (((temp___1392 <= k45) and
  (k45 <= temp___1402)) and ((temp___1382 = k45) and ((k46 <= x) and
  ((((1 <= 10) -> in_range4(k46)) and ((1 <= k46) and (k46 <= 10))) and
  ((k46 <  y) and ((k46 <  z) and (z <  y))))))))))) or
  ((((result12 = k43) and (k45 = 1)) and ((((1 <= k45) and (k45 <= 10)) ->
  ((((temp___1382 = k45) and ((k46 <= x) and ((((1 <= 10) ->
  in_range4(k46)) and ((1 <= k46) and (k46 <= 10))) and (((k46 <  y) ->
  ((k46 <  z) -> (not (z <  y)))) and (k46 = 10))))) and ((k52 = k46) and
  (k53 = k46))) and ((k54 = k52) and (k55 = k53)))) and ((not ((1 <= k45) and
  (k45 <= 10))) -> ((k54 = k45) and (k55 = k45))))) and ((((k145 = k143) and
  (h23 = h21)) and ((k146 = k144) and (h24 = h22))) and (((result14 = h3) and
  (h4 = 4)) and (((((k143 = k57) and (h21 = h4)) and ((k144 = k57) and
  (h22 = h4))) and ((temp___1393 = 1) and ((temp___1403 = 10) and
  (((result15 = k54) and (k56 = temp___1393)) and (((temp___1393 <= k56) and
  (k56 <= temp___1403)) and ((temp___1383 = k56) and ((k57 <= x) and
  ((((1 <= 10) -> in_range4(k57)) and ((1 <= k57) and (k57 <= 10))) and
  ((k57 <  y) and ((k57 <  z) and (z <  y))))))))))) or
  ((((result15 = k54) and (k56 = 1)) and ((((1 <= k56) and (k56 <= 10)) ->
  ((((temp___1383 = k56) and ((k57 <= x) and ((((1 <= 10) ->
  in_range4(k57)) and ((1 <= k57) and (k57 <= 10))) and (((k57 <  y) ->
  ((k57 <  z) -> (not (z <  y)))) and (k57 = 10))))) and ((k63 = k57) and
  (k64 = k57))) and ((k65 = k63) and (k66 = k64)))) and ((not ((1 <= k56) and
  (k56 <= 10))) -> ((k65 = k56) and (k66 = k56))))) and ((((k143 = k141) and
  (h21 = h19)) and ((k144 = k142) and (h22 = h20))) and (((result17 = h4) and
  (h5 = 5)) and (((((k141 = k68) and (h19 = h5)) and ((k142 = k68) and
  (h20 = h5))) and ((temp___1394 = 1) and ((temp___1404 = 10) and
  (((result18 = k65) and (k67 = temp___1394)) and (((temp___1394 <= k67) and
  (k67 <= temp___1404)) and ((temp___1384 = k67) and ((k68 <= x) and
  ((((1 <= 10) -> in_range4(k68)) and ((1 <= k68) and (k68 <= 10))) and
  ((k68 <  y) and ((k68 <  z) and (z <  y))))))))))) or
  ((((result18 = k65) and (k67 = 1)) and ((((1 <= k67) and (k67 <= 10)) ->
  ((((temp___1384 = k67) and ((k68 <= x) and ((((1 <= 10) ->
  in_range4(k68)) and ((1 <= k68) and (k68 <= 10))) and (((k68 <  y) ->
  ((k68 <  z) -> (not (z <  y)))) and (k68 = 10))))) and ((k74 = k68) and
  (k75 = k68))) and ((k76 = k74) and (k77 = k75)))) and ((not ((1 <= k67) and
  (k67 <= 10))) -> ((k76 = k67) and (k77 = k67))))) and ((((k141 = k139) and
  (h19 = h17)) and ((k142 = k140) and (h20 = h18))) and (((result20 = h5) and
  (h6 = 6)) and (((((k139 = k79) and (h17 = h6)) and ((k140 = k79) and
  (h18 = h6))) and ((temp___1395 = 1) and ((temp___1405 = 10) and
  (((result21 = k76) and (k78 = temp___1395)) and (((temp___1395 <= k78) and
  (k78 <= temp___1405)) and ((temp___1385 = k78) and ((k79 <= x) and
  ((((1 <= 10) -> in_range4(k79)) and ((1 <= k79) and (k79 <= 10))) and
  ((k79 <  y) and ((k79 <  z) and (z <  y))))))))))) or
  ((((result21 = k76) and (k78 = 1)) and ((((1 <= k78) and (k78 <= 10)) ->
  ((((temp___1385 = k78) and ((k79 <= x) and ((((1 <= 10) ->
  in_range4(k79)) and ((1 <= k79) and (k79 <= 10))) and (((k79 <  y) ->
  ((k79 <  z) -> (not (z <  y)))) and (k79 = 10))))) and ((k85 = k79) and
  (k86 = k79))) and ((k87 = k85) and (k88 = k86)))) and ((not ((1 <= k78) and
  (k78 <= 10))) -> ((k87 = k78) and (k88 = k78))))) and ((((k139 = k137) and
  (h17 = h15)) and ((k140 = k138) and (h18 = h16))) and (((result23 = h6) and
  (h7 = 7)) and (((((k137 = k90) and (h15 = h7)) and ((k138 = k90) and
  (h16 = h7))) and ((temp___1396 = 1) and ((temp___1406 = 10) and
  (((result24 = k87) and (k89 = temp___1396)) and (((temp___1396 <= k89) and
  (k89 <= temp___1406)) and ((temp___1386 = k89) and ((k90 <= x) and
  ((((1 <= 10) -> in_range4(k90)) and ((1 <= k90) and (k90 <= 10))) and
  ((k90 <  y) and ((k90 <  z) and (z <  y))))))))))) or
  ((((result24 = k87) and (k89 = 1)) and ((((1 <= k89) and (k89 <= 10)) ->
  ((((temp___1386 = k89) and ((k90 <= x) and ((((1 <= 10) ->
  in_range4(k90)) and ((1 <= k90) and (k90 <= 10))) and (((k90 <  y) ->
  ((k90 <  z) -> (not (z <  y)))) and (k90 = 10))))) and ((k96 = k90) and
  (k97 = k90))) and ((k98 = k96) and (k99 = k97)))) and ((not ((1 <= k89) and
  (k89 <= 10))) -> ((k98 = k89) and (k99 = k89))))) and ((((k137 = k135) and
  (h15 = h13)) and ((k138 = k136) and (h16 = h14))) and (((result26 = h7) and
  (h8 = 8)) and (((((k135 = k101) and (h13 = h8)) and ((k136 = k101) and
  (h14 = h8))) and ((temp___1397 = 1) and ((temp___1407 = 10) and
  (((result27 = k98) and (k100 = temp___1397)) and
  (((temp___1397 <= k100) and (k100 <= temp___1407)) and
  ((temp___1387 = k100) and ((k101 <= x) and ((((1 <= 10) ->
  in_range4(k101)) and ((1 <= k101) and (k101 <= 10))) and ((k101 <  y) and
  ((k101 <  z) and (z <  y))))))))))) or ((((result27 = k98) and
  (k100 = 1)) and ((((1 <= k100) and (k100 <= 10)) ->
  ((((temp___1387 = k100) and ((k101 <= x) and ((((1 <= 10) ->
  in_range4(k101)) and ((1 <= k101) and (k101 <= 10))) and (((k101 <  y) ->
  ((k101 <  z) -> (not (z <  y)))) and (k101 = 10))))) and ((k107 = k101) and
  (k108 = k101))) and ((k109 = k107) and (k110 = k108)))) and
  ((not ((1 <= k100) and (k100 <= 10))) -> ((k109 = k100) and
  (k110 = k100))))) and ((((k135 = k133) and (h13 = h11)) and
  ((k136 = k134) and (h14 = h12))) and (((result29 = h8) and (h9 = 9)) and
  (((((k133 = k112) and (h11 = h9)) and ((k134 = k112) and (h12 = h9))) and
  ((temp___1398 = 1) and ((temp___1408 = 10) and (((result30 = k109) and
  (k111 = temp___1398)) and (((temp___1398 <= k111) and
  (k111 <= temp___1408)) and ((temp___1388 = k111) and ((k112 <= x) and
  ((((1 <= 10) -> in_range4(k112)) and ((1 <= k112) and (k112 <= 10))) and
  ((k112 <  y) and ((k112 <  z) and (z <  y))))))))))) or
  ((((result30 = k109) and (k111 = 1)) and ((((1 <= k111) and
  (k111 <= 10)) -> ((((temp___1388 = k111) and ((k112 <= x) and
  ((((1 <= 10) -> in_range4(k112)) and ((1 <= k112) and (k112 <= 10))) and
  (((k112 <  y) -> ((k112 <  z) -> (not (z <  y)))) and (k112 = 10))))) and
  ((k118 = k112) and (k119 = k112))) and ((k120 = k118) and
  (k121 = k119)))) and ((not ((1 <= k111) and (k111 <= 10))) ->
  ((k120 = k111) and (k121 = k111))))) and ((((k133 = k123) and
  (h11 = h10)) and ((k134 = k123) and (h12 = h10))) and (((result32 = h9) and
  (h10 = 10)) and ((temp___1399 = 1) and ((temp___1409 = 10) and
  (((result33 = k120) and (k122 = temp___1399)) and
  (((temp___1399 <= k122) and (k122 <= temp___1409)) and
  ((temp___1389 = k122) and ((k123 <= x) and ((((1 <= 10) ->
  in_range4(k123)) and ((1 <= k123) and (k123 <= 10))) and ((k123 <  y) and
  ((k123 <  z) and (z <  y))))))))))))))))))))))))))))))))))))))))))))))) and
  (((k151 = k149) and (h29 = h27)) and ((k152 = k150) and (h30 = h28)))))

 (* File "system.ads", line 1, characters 0-0 *)
goal WP_parameter_def : in_range1((y + z))
