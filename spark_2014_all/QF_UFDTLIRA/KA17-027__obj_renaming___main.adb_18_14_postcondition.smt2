(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const cheat Bool)
(declare-const main__get_index__result Int)
(declare-const main__get_index__result1 Int)
(declare-const result Int)
(declare-const main__get_index__result2 Int)
(declare-const result1 Int)
(declare-const main__get_index__result3 Int)
(declare-const main__get_index__result4 Int)
(declare-const main__get_index__result5 Int)
(declare-const main__get_index__result6 Int)
(declare-const main__get_index__result7 Int)
(declare-const main__get_index__result8 Int)
(declare-const main__get_index__result9 Int)
(declare-const result2 Int)
(assert (or (and (and (= main__get_index__result2 main__get_index__result6) (= main__get_index__result7 main__get_index__result2)) (and (= cheat true) (and (= result main__get_index__result) (= main__get_index__result2 3)))) (and (and (not (= cheat true)) (and (= main__get_index__result2 main__get_index__result) (= main__get_index__result2 main__get_index__result1))) (and (and (= (mk_int__ref main__get_index__result6) (mk_int__ref main__get_index__result4)) (= main__get_index__result7 main__get_index__result5)) (and (and (= main__get_index__result3 main__get_index__result4) (= main__get_index__result5 main__get_index__result3)) (and (= result1 main__get_index__result2) (= main__get_index__result3 5)))))))
(assert (= (mk_int__ref main__get_index__result8) (mk_int__ref main__get_index__result6)))
(assert (= main__get_index__result9 main__get_index__result7))
(assert (= result2 main__get_index__result8))
(assert (= cheat true))
(assert (not (= main__get_index__result8 3)))
(check-sat)
(exit)
