(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort unsigned_byte 0)
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (unsigned_byte unsigned_byte) Bool)
(declare-const dummy unsigned_byte)
(declare-datatypes () ((unsigned_byte__ref (mk_unsigned_byte__ref (unsigned_byte__content unsigned_byte)))))
(define-fun unsigned_byte__ref___projection ((a unsigned_byte__ref)) unsigned_byte (unsigned_byte__content a))
(define-fun dynamic_invariant ((temp___expr_135 Int) (temp___is_init_132 Bool) (temp___skip_constant_133 Bool) (temp___do_toplevel_134 Bool)) Bool (=> (or (= temp___is_init_132 true) (<= 0 255)) (in_range temp___expr_135)))
(declare-const a Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const b Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const basic__add_ub__result Int)
(declare-const o Int)
(declare-const result Int)
(declare-const basic__add_ub__result1 Int)
(declare-const basic__add_ub__result2 Int)
(declare-const basic__add_ub__result3 Int)
(declare-const basic__add_ub__result4 Int)
(declare-const basic__add_ub__result5 Int)
(declare-const result1 Int)
(assert (in_range a))
(assert (in_range b))
(assert (= basic__add_ub__result1 basic__add_ub__result2))
(assert (= basic__add_ub__result3 basic__add_ub__result1))
(assert (and (= o (+ a b)) (in_range (+ a b))))
(assert (= result basic__add_ub__result))
(assert (= basic__add_ub__result1 o))
(assert (= (mk_int__ref basic__add_ub__result4) (mk_int__ref basic__add_ub__result2)))
(assert (= basic__add_ub__result5 basic__add_ub__result3))
(assert (= result1 basic__add_ub__result4))
(assert (not (= basic__add_ub__result4 (+ a b))))
(check-sat)
(exit)
