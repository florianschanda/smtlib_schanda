(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort t1b 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (t1b t1b) Bool)
(declare-const dummy t1b)
(declare-datatypes () ((t1b__ref (mk_t1b__ref (t1b__content t1b)))))
(define-fun t1b__ref___projection ((a t1b__ref)) t1b (t1b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort t2b 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (t2b t2b) Bool)
(declare-const dummy1 t2b)
(declare-datatypes () ((t2b__ref (mk_t2b__ref (t2b__content t2b)))))
(define-fun t2b__ref___projection ((a t2b__ref)) t2b (t2b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort t3b 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (t3b t3b) Bool)
(declare-const dummy2 t3b)
(declare-datatypes () ((t3b__ref (mk_t3b__ref (t3b__content t3b)))))
(define-fun t3b__ref___projection ((a t3b__ref)) t3b (t3b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-sort t4b 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (t4b t4b) Bool)
(declare-const dummy3 t4b)
(declare-datatypes () ((t4b__ref (mk_t4b__ref (t4b__content t4b)))))
(define-fun t4b__ref___projection ((a t4b__ref)) t4b (t4b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort t5b 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (t5b t5b) Bool)
(declare-const dummy4 t5b)
(declare-datatypes () ((t5b__ref (mk_t5b__ref (t5b__content t5b)))))
(define-fun t5b__ref___projection ((a t5b__ref)) t5b (t5b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-sort t6b 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (t6b t6b) Bool)
(declare-const dummy5 t6b)
(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content t6b)))))
(define-fun t6b__ref___projection ((a t6b__ref)) t6b (t6b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-sort t7b 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq6 (t7b t7b) Bool)
(declare-const dummy6 t7b)
(declare-datatypes () ((t7b__ref (mk_t7b__ref (t7b__content t7b)))))
(define-fun t7b__ref___projection ((a t7b__ref)) t7b (t7b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-sort t8b 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq7 (t8b t8b) Bool)
(declare-const dummy7 t8b)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content t8b)))))
(define-fun t8b__ref___projection ((a t8b__ref)) t8b (t8b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const prop__ Bool)
(declare-const i Int)
(declare-const j Int)
(declare-const i1 Int)
(declare-const j1 Int)
(declare-const i2 Int)
(declare-const j2 Int)
(declare-const i3 Int)
(declare-const j3 Int)
(declare-const temp___201 Int)
(declare-const temp___200 Bool)
(declare-const temp___197 Int)
(declare-const temp___196 Bool)
(declare-const temp___209 Int)
(declare-const temp___208 Bool)
(declare-const temp___205 Int)
(declare-const temp___204 Bool)
(declare-const temp___217 Int)
(declare-const temp___216 Bool)
(declare-const temp___213 Int)
(declare-const temp___212 Bool)
(declare-const prop__1 Bool)
(declare-const j4 Int)
(declare-const j5 Int)
(declare-const j6 Int)
(declare-const result Int)
(declare-const i4 Int)
(declare-const result1 Bool)
(declare-const prop__2 Bool)
(declare-const result2 Int)
(declare-const j7 Int)
(declare-const prop__3 Bool)
(declare-const j8 Int)
(declare-const result3 Bool)
(declare-const prop__4 Bool)
(declare-const prop__5 Bool)
(declare-const j9 Int)
(declare-const prop__6 Bool)
(declare-const j10 Int)
(declare-const prop__7 Bool)
(declare-const j11 Int)
(declare-const prop__8 Bool)
(declare-const j12 Int)
(declare-const prop__9 Bool)
(declare-const i5 Int)
(declare-const j13 Int)
(declare-const prop__10 bool__ref)
(declare-const i6 int__ref)
(declare-const j14 int__ref)
(declare-const prop__11 Bool)
(declare-const i7 Int)
(declare-const j15 Int)
(declare-const prop__12 bool__ref)
(declare-const i8 int__ref)
(declare-const j16 int__ref)
(declare-const prop__13 Bool)
(declare-const i9 Int)
(declare-const j17 Int)
(declare-const result4 int__ref)
(declare-const i10 Int)
(declare-const result5 bool__ref)
(declare-const prop__14 Bool)
(declare-const result6 int__ref)
(declare-const j18 Int)
(declare-const prop__15 Bool)
(declare-const j19 Int)
(declare-const result7 bool__ref)
(declare-const prop__16 Bool)
(declare-const prop__17 bool__ref)
(declare-const j20 int__ref)
(declare-const prop__18 Bool)
(declare-const j21 Int)
(declare-const prop__19 bool__ref)
(declare-const j22 int__ref)
(declare-const prop__20 Bool)
(declare-const j23 Int)
(declare-const prop__21 Bool)
(declare-const i11 Int)
(declare-const j24 Int)
(declare-const prop__22 bool__ref)
(declare-const i12 int__ref)
(declare-const j25 int__ref)
(declare-const prop__23 Bool)
(declare-const i13 Int)
(declare-const j26 Int)
(declare-const prop__24 bool__ref)
(declare-const i14 int__ref)
(declare-const j27 int__ref)
(declare-const prop__25 Bool)
(declare-const i15 Int)
(declare-const j28 Int)
(declare-const result8 int__ref)
(declare-const i16 Int)
(declare-const result9 bool__ref)
(declare-const prop__26 Bool)
(declare-const result10 int__ref)
(declare-const j29 Int)
(declare-const prop__27 Bool)
(declare-const j30 Int)
(declare-const result11 bool__ref)
(declare-const prop__28 Bool)
(declare-const prop__29 bool__ref)
(declare-const j31 int__ref)
(declare-const prop__30 Bool)
(declare-const j32 Int)
(declare-const prop__31 bool__ref)
(declare-const j33 int__ref)
(declare-const prop__32 Bool)
(declare-const j34 Int)
(declare-const prop__33 Bool)
(declare-const i17 Int)
(declare-const j35 Int)
(declare-const prop__34 bool__ref)
(declare-const i18 int__ref)
(declare-const j36 int__ref)
(declare-const prop__35 Bool)
(declare-const i19 Int)
(declare-const j37 Int)
(declare-const prop__36 bool__ref)
(declare-const i20 int__ref)
(declare-const j38 int__ref)
(declare-const prop__37 Bool)
(declare-const i21 Int)
(declare-const j39 Int)
(declare-const result12 int__ref)
(declare-const i22 Int)
(declare-const result13 bool__ref)
(declare-const prop__38 Bool)
(declare-const result14 int__ref)
(declare-const j40 Int)
(declare-const prop__39 Bool)
(declare-const j41 Int)
(declare-const result15 bool__ref)
(declare-const prop__40 Bool)
(declare-const result16 int__ref)
(declare-const j42 Int)
(declare-const prop__41 bool__ref)
(declare-const j43 int__ref)
(declare-const prop__42 Bool)
(declare-const j44 Int)
(define-fun j45 () int__ref (mk_int__ref j2))
(define-fun j46 () int__ref (mk_int__ref j1))
(define-fun j47 () int__ref (mk_int__ref j))
(define-fun prop__43 () bool__ref (mk_bool__ref prop__))
(assert (= (mk_int__ref result) (mk_int__ref i)))
(assert (= i4 1))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= temp___201 i4)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= temp___200 prop__)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= (mk_bool__ref result1) prop__43)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= prop__2 (distinct 0 0))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= (mk_int__ref result2) j47)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= j7 1)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= temp___197 j7))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= temp___196 prop__2))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= prop__3 true))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (and (=> (<= 1 10) (in_range2 j8)) (and (<= 1 j8) (<= j8 10))))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= prop__3 result3))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= prop__4 (distinct 1 0)))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= j8 10))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= j8 j9))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= prop__4 prop__5))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= j10 j8))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= prop__6 prop__4))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= (mk_int__ref j11) (mk_int__ref j9)))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= (mk_bool__ref prop__7) (mk_bool__ref prop__5)))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= j12 j10))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (and (<= 1 j7) (<= j7 10)) (= prop__8 prop__6))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (not (and (<= 1 j7) (<= j7 10))) (= j7 j11))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (not (and (<= 1 j7) (<= j7 10))) (= prop__2 prop__7))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (not (and (<= 1 j7) (<= j7 10))) (= j12 j7))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (=> (not (and (<= 1 j7) (<= j7 10))) (= prop__8 prop__2))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (and (=> (<= 1 3) (in_range1 i5)) (and (<= 1 i5) (<= i5 3)))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= i5 3)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= j14 (mk_int__ref j13))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= i6 (mk_int__ref i5))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= prop__10 (mk_bool__ref prop__9))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= j15 j13)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= i7 i5)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= prop__11 prop__9)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= j16 j14)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= i8 i6)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= prop__12 prop__10)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= j17 j15)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= i9 i7)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= prop__13 prop__11)))
(assert (=> (not (and (<= 1 i4) (<= i4 3))) (= j16 j47)))
(assert (=> (not (and (<= 1 i4) (<= i4 3))) (= i8 (mk_int__ref i4))))
(assert (=> (not (and (<= 1 i4) (<= i4 3))) (= prop__12 prop__43)))
(assert (=> (not (and (<= 1 i4) (<= i4 3))) (= j17 j4)))
(assert (=> (not (and (<= 1 i4) (<= i4 3))) (= i9 i4)))
(assert (=> (not (and (<= 1 i4) (<= i4 3))) (= prop__13 prop__1)))
(assert (= result4 (mk_int__ref i1)))
(assert (= i10 1))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= temp___209 i10)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= temp___208 (bool__content prop__12))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= result5 prop__12)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= prop__14 (distinct 1 0))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= result6 j46)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= j18 1)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= temp___205 j18))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= temp___204 prop__14))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= prop__15 true))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (and (=> (<= 1 10) (in_range4 j19)) (and (<= 1 j19) (<= j19 10))))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= result7 (mk_bool__ref prop__15)))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= prop__16 (distinct 0 0)))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= j19 10))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= j20 (mk_int__ref j19)))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= prop__17 (mk_bool__ref prop__16)))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= j21 j19))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= prop__18 prop__16))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= j22 j20))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= prop__19 prop__17))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= j23 j21))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (and (<= 1 j18) (<= j18 10)) (= prop__20 prop__18))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (not (and (<= 1 j18) (<= j18 10))) (= j22 (mk_int__ref j18)))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (not (and (<= 1 j18) (<= j18 10))) (= prop__19 (mk_bool__ref prop__14)))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (not (and (<= 1 j18) (<= j18 10))) (= j23 j18))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (=> (not (and (<= 1 j18) (<= j18 10))) (= prop__20 prop__14))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (and (=> (<= 1 3) (in_range3 i11)) (and (<= 1 i11) (<= i11 3)))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= i11 3)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= j25 (mk_int__ref j24))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= i12 (mk_int__ref i11))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= prop__22 (mk_bool__ref prop__21))))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= j26 j24)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= i13 i11)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= prop__23 prop__21)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= j27 j25)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= i14 i12)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= prop__24 prop__22)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= j28 j26)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= i15 i13)))
(assert (=> (and (<= 1 i10) (<= i10 3)) (= prop__25 prop__23)))
(assert (=> (not (and (<= 1 i10) (<= i10 3))) (= j27 j46)))
(assert (=> (not (and (<= 1 i10) (<= i10 3))) (= i14 (mk_int__ref i10))))
(assert (=> (not (and (<= 1 i10) (<= i10 3))) (= prop__24 prop__12)))
(assert (=> (not (and (<= 1 i10) (<= i10 3))) (= j28 j5)))
(assert (=> (not (and (<= 1 i10) (<= i10 3))) (= i15 i10)))
(assert (=> (not (and (<= 1 i10) (<= i10 3))) (= prop__25 prop__13)))
(assert (= result8 (mk_int__ref i2)))
(assert (= i16 1))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= temp___217 i16)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= temp___216 (bool__content prop__24))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= result9 prop__24)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= prop__26 (distinct 1 0))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= result10 j45)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= j29 1)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= temp___213 j29))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= temp___212 prop__26))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= prop__27 true))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (and (=> (<= 1 10) (in_range6 j30)) (and (<= 1 j30) (<= j30 10))))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= result11 (mk_bool__ref prop__27)))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= prop__28 prop__27))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= j30 10))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= j31 (mk_int__ref j30)))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= prop__29 (mk_bool__ref prop__28)))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= j32 j30))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= prop__30 prop__28))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= j33 j31))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= prop__31 prop__29))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= j34 j32))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (and (<= 1 j29) (<= j29 10)) (= prop__32 prop__30))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (not (and (<= 1 j29) (<= j29 10))) (= j33 (mk_int__ref j29)))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (not (and (<= 1 j29) (<= j29 10))) (= prop__31 (mk_bool__ref prop__26)))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (not (and (<= 1 j29) (<= j29 10))) (= j34 j29))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (=> (not (and (<= 1 j29) (<= j29 10))) (= prop__32 prop__26))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (and (=> (<= 1 3) (in_range5 i17)) (and (<= 1 i17) (<= i17 3)))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= i17 3)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= j36 (mk_int__ref j35))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= i18 (mk_int__ref i17))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= prop__34 (mk_bool__ref prop__33))))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= j37 j35)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= i19 i17)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= prop__35 prop__33)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= j38 j36)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= i20 i18)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= prop__36 prop__34)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= j39 j37)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= i21 i19)))
(assert (=> (and (<= 1 i16) (<= i16 3)) (= prop__37 prop__35)))
(assert (=> (not (and (<= 1 i16) (<= i16 3))) (= j38 j45)))
(assert (=> (not (and (<= 1 i16) (<= i16 3))) (= i20 (mk_int__ref i16))))
(assert (=> (not (and (<= 1 i16) (<= i16 3))) (= prop__36 prop__24)))
(assert (=> (not (and (<= 1 i16) (<= i16 3))) (= j39 j6)))
(assert (=> (not (and (<= 1 i16) (<= i16 3))) (= i21 i16)))
(assert (=> (not (and (<= 1 i16) (<= i16 3))) (= prop__37 prop__25)))
(assert (= result12 (mk_int__ref i3)))
(assert (= i22 1))
(assert (<= 1 i22))
(assert (<= i22 3))
(assert (= result13 prop__36))
(assert (= prop__38 (distinct 1 0)))
(assert (= result14 (mk_int__ref j3)))
(assert (= j40 1))
(assert (<= 1 j40))
(assert (<= j40 10))
(assert (=> (< 1 j41) (= prop__39 true)))
(assert (and (=> (<= 1 10) (in_range8 j41)) (and (<= 1 j41) (<= j41 10))))
(assert (= result15 (mk_bool__ref prop__39)))
(assert (= prop__40 prop__39))
(assert (not (= j41 10)))
(assert (= result16 (mk_int__ref j41)))
(assert (= j42 (+ j41 1)))
(assert (= j43 (mk_int__ref j42)))
(assert (= prop__41 (mk_bool__ref prop__40)))
(assert (= j44 j42))
(assert (= prop__42 prop__40))
(assert (< 1 (int__content j43)))
(assert (not (= (bool__content prop__41) true)))
(check-sat)
(exit)
