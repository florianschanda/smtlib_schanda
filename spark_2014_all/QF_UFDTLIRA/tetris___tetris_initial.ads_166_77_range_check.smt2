(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort direction 0)
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (direction direction) Bool)
(declare-const dummy direction)
(declare-datatypes () ((direction__ref (mk_direction__ref (direction__content direction)))))
(define-fun direction__ref___projection ((a direction__ref)) direction (direction__content a))
(define-fun dynamic_invariant ((temp___expr_577 Int) (temp___is_init_574 Bool) (temp___skip_constant_575 Bool) (temp___do_toplevel_576 Bool)) Bool (=> (or (= temp___is_init_574 true) (<= 0 3)) (in_range temp___expr_577)))
(declare-sort turn_action 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 3 x) (<= x 4)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (turn_action turn_action) Bool)
(declare-const dummy1 turn_action)
(declare-datatypes () ((turn_action__ref (mk_turn_action__ref (turn_action__content turn_action)))))
(define-fun turn_action__ref___projection ((a turn_action__ref)) turn_action (turn_action__content a))
(define-fun dynamic_invariant1 ((temp___expr_657 Int) (temp___is_init_654 Bool) (temp___skip_constant_655 Bool) (temp___do_toplevel_656 Bool)) Bool (=> (or (= temp___is_init_654 true) (<= 3 4)) (in_range1 temp___expr_657)))
(declare-const d Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const t Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(assert (in_range d))
(assert (in_range1 t))
(assert (not (= t 3)))
(assert (not (= d 3)))
(assert (not (not (= d 3))))
(check-sat)
(exit)
