(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort t8b 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (t8b t8b) Bool)
(declare-const dummy1 t8b)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content t8b)))))
(define-fun t8b__ref___projection ((a t8b__ref)) t8b (t8b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort t9b 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (t9b t9b) Bool)
(declare-const dummy2 t9b)
(declare-datatypes () ((t9b__ref (mk_t9b__ref (t9b__content t9b)))))
(define-fun t9b__ref___projection ((a t9b__ref)) t9b (t9b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const t Int)
(declare-const index Int)
(declare-const index1 Int)
(declare-const temp___163 Int)
(declare-const temp___162 Int)
(declare-const temp___167 Int)
(declare-const temp___166 Int)
(declare-const result Int)
(declare-const t1 Int)
(declare-const result1 Int)
(declare-const index2 Int)
(declare-const t2 Int)
(declare-const index3 Int)
(declare-const result2 Int)
(declare-const t3 Int)
(declare-const result3 Int)
(declare-const index4 Int)
(declare-const t4 Int)
(declare-const index5 Int)
(declare-const t5 Int)
(declare-const index6 Int)
(declare-const t6 Int)
(declare-const index7 Int)
(declare-const t7 Int)
(declare-const index8 Int)
(declare-const t8 Int)
(declare-const index9 Int)
(declare-const t9 Int)
(declare-const index10 Int)
(declare-const result4 Int)
(declare-const t10 Int)
(declare-const result5 Int)
(declare-const index11 Int)
(declare-const t11 Int)
(declare-const index12 Int)
(declare-const result6 Int)
(declare-const t12 Int)
(declare-const result7 Int)
(declare-const index13 Int)
(declare-const t13 Int)
(declare-const index14 Int)
(declare-const t14 Int)
(declare-const index15 Int)
(declare-const t15 Int)
(declare-const index16 Int)
(declare-const t16 Int)
(declare-const index17 Int)
(declare-const t17 int__ref)
(declare-const index18 int__ref)
(declare-const t18 Int)
(declare-const index19 Int)
(declare-const t19 int__ref)
(declare-const index20 int__ref)
(declare-const t20 Int)
(declare-const index21 Int)
(assert (= result t))
(assert (= t1 0))
(assert (in_range1 t1))
(assert (= (mk_int__ref result1) (mk_int__ref index)))
(assert (= index2 1))
(assert (=> (and (<= 1 index2) (<= index2 10)) (and (and (= temp___163 index2) (and (= temp___162 t1) (and (= t2 (- index3 1)) (and (and (and (=> (<= (- 2147483648) 2147483647) (in_range1 t2)) (=> (<= 1 10) (in_range2 index3))) (and (<= 1 index3) (<= index3 10))) (and (and (= t2 result2) (= t3 index3)) (= index3 10)))))) (and (and (= index3 index7) (= t3 t6)) (and (= index8 index3) (= t7 t3))))))
(assert (=> (and (<= 1 index2) (<= index2 10)) (= (mk_int__ref index9) (mk_int__ref index7))))
(assert (=> (and (<= 1 index2) (<= index2 10)) (= (mk_int__ref t8) (mk_int__ref t6))))
(assert (=> (and (<= 1 index2) (<= index2 10)) (= index10 index8)))
(assert (=> (and (<= 1 index2) (<= index2 10)) (= t9 t7)))
(assert (=> (not (and (<= 1 index2) (<= index2 10))) (= index2 index9)))
(assert (=> (not (and (<= 1 index2) (<= index2 10))) (= t1 t8)))
(assert (=> (not (and (<= 1 index2) (<= index2 10))) (= index10 index2)))
(assert (=> (not (and (<= 1 index2) (<= index2 10))) (= t9 t1)))
(assert (= t8 10))
(assert (= result4 t8))
(assert (= t10 11))
(assert (= (mk_int__ref result5) (mk_int__ref index1)))
(assert (= index11 10))
(assert (=> (and (<= 1 index11) (<= index11 10)) (and (and (= temp___167 t10) (and (= temp___166 index11) (and (= t11 (+ index12 1)) (and (and (and (=> (<= 1 10) (in_range3 index12)) (=> (<= (- 2147483648) 2147483647) (in_range1 t11))) (and (<= 1 index12) (<= index12 10))) (and (and (= t11 result6) (= t12 index12)) (= index12 1)))))) (and (and (= index18 (mk_int__ref index12)) (= t17 (mk_int__ref t12))) (and (= index19 index12) (= t18 t12))))))
(assert (=> (and (<= 1 index11) (<= index11 10)) (= index20 index18)))
(assert (=> (and (<= 1 index11) (<= index11 10)) (= t19 t17)))
(assert (=> (and (<= 1 index11) (<= index11 10)) (= index21 index19)))
(assert (=> (and (<= 1 index11) (<= index11 10)) (= t20 t18)))
(assert (=> (not (and (<= 1 index11) (<= index11 10))) (= index20 (mk_int__ref index11))))
(assert (=> (not (and (<= 1 index11) (<= index11 10))) (= t19 (mk_int__ref t10))))
(assert (=> (not (and (<= 1 index11) (<= index11 10))) (= index21 index11)))
(assert (=> (not (and (<= 1 index11) (<= index11 10))) (= t20 t10)))
(assert (not (= (int__content t19) 1)))
(check-sat)
(exit)
