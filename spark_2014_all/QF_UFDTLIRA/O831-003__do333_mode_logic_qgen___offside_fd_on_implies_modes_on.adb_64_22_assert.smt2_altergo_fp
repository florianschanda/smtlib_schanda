(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

logic attr__ATTRIBUTE_ADDRESS : int

logic offside_fd_on : bool

logic attr__ATTRIBUTE_ADDRESS1 : int

logic modes_on : bool

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic true_out1 : bool

logic unit_delay_memory : bool

logic unit_delay_out1 : bool

logic modes_on_out1 : bool

logic offside_fd_on_out1 : bool

logic not1_out1 : bool

logic not5_out1 : bool

logic or_out1 : bool

logic result : bool

logic unit_delay_out11 : bool

logic result1 : bool

logic modes_on_out11 : bool

logic result2 : bool

logic offside_fd_on_out11 : bool

logic result3 : bool

logic not1_out11 : bool

logic result4 : bool

logic not5_out11 : bool

logic result5 : bool

logic true_out11 : bool

logic result6 : bool

logic or_out11 : bool

axiom H : (result = unit_delay_out1)

axiom H1 : (unit_delay_out11 = unit_delay_memory)

axiom H2 : (result1 = modes_on_out1)

axiom H3 : (modes_on_out11 = modes_on)

axiom H4 : (result2 = offside_fd_on_out1)

axiom H5 : (offside_fd_on_out11 = offside_fd_on)

axiom H6 : (result3 = not1_out1)

axiom H7 : (((not (offside_fd_on_out11 = true)) -> (not1_out11 = true)) and
  ((offside_fd_on_out11 = true) -> (not1_out11 = false)))

axiom H8 : (result4 = not5_out1)

axiom H9 : ((((not1_out11 = true) or (modes_on_out11 = true)) ->
  (not5_out11 = true)) and ((not ((not1_out11 = true) or
  (modes_on_out11 = true))) -> (not5_out11 = false)))

axiom H10 : (result5 = true_out1)

axiom H11 : (true_out11 = of_int(0))

axiom H12 : (result6 = or_out1)

axiom H13 : ((((unit_delay_out11 = true) or (not5_out11 = true)) ->
  (or_out11 = true)) and ((not ((unit_delay_out11 = true) or
  (not5_out11 = true))) -> (or_out11 = false)))

 (* File "offside_fd_on_implies_modes_on.adb", line 17, characters 0-0 *)
goal WP_parameter_def : (or_out11 = true)
