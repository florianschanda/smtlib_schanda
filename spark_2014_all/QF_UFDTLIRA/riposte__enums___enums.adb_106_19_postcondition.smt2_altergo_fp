(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type integer

predicate in_range(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq1 : int, int -> bool

axiom bool_eq_def :
  (forall x:int. forall y:int [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type big_type

predicate in_range1(x: int) = ((0 <= x) and (x <= 8))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : big_type, big_type -> bool

logic dummy1 : big_type

type big_type__ref = { big_type__content : big_type
}

function big_type__ref___projection(a: big_type__ref) : big_type =
  (a).big_type__content

type smaller_type

predicate in_range2(x: int) = ((3 <= x) and (x <= 5))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : smaller_type, smaller_type -> bool

logic dummy2 : smaller_type

type smaller_type__ref = { smaller_type__content : smaller_type
}

function smaller_type__ref___projection(a: smaller_type__ref) : smaller_type =
  (a).smaller_type__content

logic a : int

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic r : int

logic enums__tick_pos__result : int

logic o : int

logic result : int

logic r1 : int

logic result1 : int

logic r2 : int

logic result2 : int

logic r3 : int

logic result3 : int

logic r4 : int

logic result4 : int

logic r5 : int

logic result5 : int

logic r6 : int

logic result6 : int

logic r7 : int

logic result7 : int

logic r8 : int

logic result8 : int

logic r9 : int

logic result9 : int

logic r10 : int

logic result10 : int

logic r11 : int

logic result11 : int

logic enums__tick_pos__result1 : int

logic enums__tick_pos__result2 : int

logic enums__tick_pos__result3 : int

logic r12 : int

logic enums__tick_pos__result4 : int

logic r13 : int

logic enums__tick_pos__result5 : int

logic result12 : int

axiom H : in_range1(a)

axiom H1 : (((- 2147483648) <= 2147483647) -> in_range(r))

axiom H2 : ((a = 0) -> (result = r))

axiom H3 : ((a = 0) -> (r1 = 0))

axiom H4 : ((not (a = 0)) -> ((a = 1) -> (result1 = r)))

axiom H5 : ((not (a = 0)) -> ((a = 1) -> (r2 = a)))

axiom H6 : ((not (a = 0)) -> ((not (a = 1)) -> ((a = 2) -> (result2 = r))))

axiom H7 : ((not (a = 0)) -> ((not (a = 1)) -> ((a = 2) -> (r3 = 2))))

axiom H8 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) -> ((a = 3) ->
  (result3 = r)))))

axiom H9 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) -> ((a = 3) ->
  (r4 = 3)))))

axiom H10 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((a = 4) -> (in_range2(a) -> (result4 = r)))))))

axiom H11 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((a = 4) -> (in_range2(a) -> (r5 = 4)))))))

axiom H12 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((a = 4) -> ((not in_range2(a)) -> (result5 = r)))))))

axiom H13 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((a = 4) -> ((not in_range2(a)) -> (r6 = 0)))))))

axiom H14 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((a = 4) -> ((not in_range2(a)) -> (r5 = r6)))))))

axiom H15 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((a = 5) -> (result6 = r)))))))

axiom H16 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((a = 5) -> (r7 = 5)))))))

axiom H17 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((not (a = 5)) -> ((a = 6) ->
  (in_range2(a) -> (result7 = r)))))))))

axiom H18 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((not (a = 5)) -> ((a = 6) ->
  (in_range2(a) -> (r8 = 0)))))))))

axiom H19 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((not (a = 5)) -> ((a = 6) ->
  ((not in_range2(a)) -> (result8 = r)))))))))

axiom H20 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((not (a = 5)) -> ((a = 6) ->
  ((not in_range2(a)) -> (r9 = 6)))))))))

axiom H21 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((not (a = 5)) -> ((a = 6) ->
  ((not in_range2(a)) -> (r8 = r9)))))))))

axiom H22 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((not (a = 5)) -> ((not (a = 6)) ->
  ((a = 8) -> (result9 = r)))))))))

axiom H23 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((not (a = 5)) -> ((not (a = 6)) ->
  ((a = 8) -> (r10 = 8)))))))))

axiom H24 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((not (a = 5)) -> ((not (a = 6)) ->
  ((not (a = 8)) -> (result10 = r)))))))))

axiom H25 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((not (a = 5)) -> ((not (a = 6)) ->
  ((not (a = 8)) -> (r11 = 7)))))))))

axiom H26 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((not (a = 5)) -> ((not (a = 6)) ->
  ((not (a = 8)) -> (r10 = r11)))))))))

axiom H27 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((not (a = 5)) -> ((not (a = 6)) ->
  (r8 = r10))))))))

axiom H28 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> ((not (a = 5)) -> (r7 = r8)))))))

axiom H29 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> ((not (a = 4)) -> (r5 = r7))))))

axiom H30 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  ((not (a = 3)) -> (r4 = r5)))))

axiom H31 : ((not (a = 0)) -> ((not (a = 1)) -> ((not (a = 2)) ->
  (r3 = r4))))

axiom H32 : ((not (a = 0)) -> ((not (a = 1)) -> (r2 = r3)))

axiom H33 : ((not (a = 0)) -> (r1 = r2))

axiom H34 : (enums__tick_pos__result1 = enums__tick_pos__result2)

axiom H35 : (enums__tick_pos__result3 = enums__tick_pos__result1)

axiom H36 : (result11 = enums__tick_pos__result)

axiom H37 : (enums__tick_pos__result1 = r1)

axiom H38 : (enums__tick_pos__result4 = enums__tick_pos__result2)

axiom H39 : (r1 = r12)

axiom H40 : (enums__tick_pos__result5 = enums__tick_pos__result3)

axiom H41 : (r13 = r1)

axiom H42 : (result12 = enums__tick_pos__result4)

 (* File "system.ads", line 1, characters 0-0 *)
goal WP_parameter_def : (enums__tick_pos__result4 = a)
