(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic attr__ATTRIBUTE_ADDRESS : int

logic cheat : bool

logic main__get_index__result : int

logic main__get_index__result1 : int

logic result : int

logic main__get_index__result2 : int

logic result1 : int

logic main__get_index__result3 : int

logic main__get_index__result4 : int

logic main__get_index__result5 : int

logic main__get_index__result6 : int

logic main__get_index__result7 : int

logic main__get_index__result8 : int

logic main__get_index__result9 : int

logic result2 : int

axiom H : ((((main__get_index__result2 = main__get_index__result6) and
  (main__get_index__result7 = main__get_index__result2)) and
  ((cheat = true) and ((result = main__get_index__result) and
  (main__get_index__result2 = 3)))) or (((not (cheat = true)) and
  ((main__get_index__result2 = main__get_index__result) and
  (main__get_index__result2 = main__get_index__result1))) and
  (((main__get_index__result6 = main__get_index__result4) and
  (main__get_index__result7 = main__get_index__result5)) and
  (((main__get_index__result3 = main__get_index__result4) and
  (main__get_index__result5 = main__get_index__result3)) and
  ((result1 = main__get_index__result2) and
  (main__get_index__result3 = 5))))))

axiom H1 : (main__get_index__result8 = main__get_index__result6)

axiom H2 : (main__get_index__result9 = main__get_index__result7)

axiom H3 : (result2 = main__get_index__result8)

axiom H4 : (cheat = true)

 (* File "main.adb", line 6, characters 0-0 *)
goal WP_parameter_def : (main__get_index__result8 = 3)
