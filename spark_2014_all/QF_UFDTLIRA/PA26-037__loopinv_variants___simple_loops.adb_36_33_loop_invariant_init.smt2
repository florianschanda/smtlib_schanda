(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort t1b 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (t1b t1b) Bool)
(declare-const dummy t1b)
(declare-datatypes () ((t1b__ref (mk_t1b__ref (t1b__content t1b)))))
(define-fun t1b__ref___projection ((a t1b__ref)) t1b (t1b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort t2b 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (t2b t2b) Bool)
(declare-const dummy1 t2b)
(declare-datatypes () ((t2b__ref (mk_t2b__ref (t2b__content t2b)))))
(define-fun t2b__ref___projection ((a t2b__ref)) t2b (t2b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort t3b 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (t3b t3b) Bool)
(declare-const dummy2 t3b)
(declare-datatypes () ((t3b__ref (mk_t3b__ref (t3b__content t3b)))))
(define-fun t3b__ref___projection ((a t3b__ref)) t3b (t3b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-sort t4b 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (t4b t4b) Bool)
(declare-const dummy3 t4b)
(declare-datatypes () ((t4b__ref (mk_t4b__ref (t4b__content t4b)))))
(define-fun t4b__ref___projection ((a t4b__ref)) t4b (t4b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort t5b 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (t5b t5b) Bool)
(declare-const dummy4 t5b)
(declare-datatypes () ((t5b__ref (mk_t5b__ref (t5b__content t5b)))))
(define-fun t5b__ref___projection ((a t5b__ref)) t5b (t5b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-sort t6b 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (t6b t6b) Bool)
(declare-const dummy5 t6b)
(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content t6b)))))
(define-fun t6b__ref___projection ((a t6b__ref)) t6b (t6b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-sort t7b 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq6 (t7b t7b) Bool)
(declare-const dummy6 t7b)
(declare-datatypes () ((t7b__ref (mk_t7b__ref (t7b__content t7b)))))
(define-fun t7b__ref___projection ((a t7b__ref)) t7b (t7b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-sort t8b 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq7 (t8b t8b) Bool)
(declare-const dummy7 t8b)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content t8b)))))
(define-fun t8b__ref___projection ((a t8b__ref)) t8b (t8b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const prop__ Bool)
(declare-const i Int)
(declare-const j Int)
(declare-const i1 Int)
(declare-const j1 Int)
(declare-const i2 Int)
(declare-const j2 Int)
(declare-const i3 Int)
(declare-const j3 Int)
(declare-const temp___173 Int)
(declare-const temp___172 Bool)
(declare-const temp___169 Int)
(declare-const temp___168 Bool)
(declare-const temp___181 Int)
(declare-const temp___180 Bool)
(declare-const temp___177 Int)
(declare-const temp___176 Bool)
(declare-const temp___189 Int)
(declare-const temp___188 Bool)
(declare-const temp___185 Int)
(declare-const temp___184 Bool)
(declare-const temp___193 Int)
(declare-const temp___192 Bool)
(declare-const prop__1 Bool)
(declare-const j4 Int)
(declare-const j5 Int)
(declare-const j6 Int)
(declare-const result Int)
(declare-const i4 Int)
(declare-const result1 Bool)
(declare-const prop__2 Bool)
(declare-const result2 Int)
(declare-const j7 Int)
(declare-const prop__3 Bool)
(declare-const j8 Int)
(declare-const result3 Bool)
(declare-const prop__4 Bool)
(declare-const result4 Int)
(declare-const j9 Int)
(declare-const prop__5 Bool)
(declare-const j10 Int)
(declare-const prop__6 Bool)
(declare-const j11 Int)
(declare-const prop__7 Bool)
(declare-const j12 Int)
(declare-const prop__8 Bool)
(declare-const j13 Int)
(declare-const prop__9 Bool)
(declare-const j14 Int)
(declare-const prop__10 Bool)
(declare-const j15 Int)
(declare-const prop__11 Bool)
(declare-const i5 Int)
(declare-const j16 Int)
(declare-const result5 Int)
(declare-const i6 Int)
(declare-const result6 bool__ref)
(declare-const prop__12 Bool)
(declare-const result7 int__ref)
(declare-const j17 Int)
(declare-const prop__13 Bool)
(declare-const j18 Int)
(declare-const result8 bool__ref)
(declare-const prop__14 Bool)
(declare-const result9 int__ref)
(declare-const j19 Int)
(declare-const prop__15 bool__ref)
(declare-const j20 int__ref)
(declare-const prop__16 Bool)
(declare-const j21 Int)
(declare-const prop__17 bool__ref)
(declare-const i7 int__ref)
(declare-const j22 int__ref)
(declare-const prop__18 Bool)
(declare-const i8 Int)
(declare-const j23 Int)
(declare-const prop__19 bool__ref)
(declare-const i9 int__ref)
(declare-const j24 int__ref)
(declare-const prop__20 Bool)
(declare-const i10 Int)
(declare-const j25 Int)
(declare-const prop__21 bool__ref)
(declare-const i11 int__ref)
(declare-const j26 int__ref)
(declare-const prop__22 Bool)
(declare-const i12 Int)
(declare-const j27 Int)
(declare-const result10 int__ref)
(declare-const i13 Int)
(declare-const result11 bool__ref)
(declare-const prop__23 Bool)
(declare-const result12 int__ref)
(declare-const j28 Int)
(declare-const prop__24 Bool)
(declare-const j29 Int)
(declare-const result13 bool__ref)
(declare-const prop__25 Bool)
(declare-const result14 int__ref)
(declare-const j30 Int)
(declare-const prop__26 bool__ref)
(declare-const j31 int__ref)
(declare-const prop__27 Bool)
(declare-const j32 Int)
(declare-const prop__28 bool__ref)
(declare-const j33 int__ref)
(declare-const prop__29 Bool)
(declare-const j34 Int)
(declare-const prop__30 bool__ref)
(declare-const j35 int__ref)
(declare-const prop__31 Bool)
(declare-const j36 Int)
(declare-const prop__32 bool__ref)
(declare-const j37 int__ref)
(declare-const prop__33 Bool)
(declare-const j38 Int)
(declare-const prop__34 Bool)
(declare-const i14 Int)
(declare-const j39 Int)
(declare-const result15 int__ref)
(declare-const i15 Int)
(declare-const result16 bool__ref)
(declare-const prop__35 Bool)
(declare-const result17 int__ref)
(declare-const j40 Int)
(declare-const prop__36 Bool)
(declare-const j41 Int)
(declare-const result18 bool__ref)
(declare-const prop__37 Bool)
(declare-const result19 int__ref)
(declare-const j42 Int)
(declare-const prop__38 bool__ref)
(declare-const j43 int__ref)
(declare-const prop__39 Bool)
(declare-const j44 Int)
(declare-const prop__40 bool__ref)
(declare-const i16 int__ref)
(declare-const j45 int__ref)
(declare-const prop__41 Bool)
(declare-const i17 Int)
(declare-const j46 Int)
(declare-const prop__42 bool__ref)
(declare-const i18 int__ref)
(declare-const j47 int__ref)
(declare-const prop__43 Bool)
(declare-const i19 Int)
(declare-const j48 Int)
(declare-const prop__44 bool__ref)
(declare-const i20 int__ref)
(declare-const j49 int__ref)
(declare-const prop__45 Bool)
(declare-const i21 Int)
(declare-const j50 Int)
(declare-const result20 int__ref)
(declare-const i22 Int)
(declare-const result21 bool__ref)
(declare-const prop__46 Bool)
(declare-const result22 int__ref)
(declare-const j51 Int)
(declare-const prop__47 Bool)
(declare-const j52 Int)
(declare-const result23 bool__ref)
(declare-const prop__48 Bool)
(declare-const result24 int__ref)
(declare-const j53 Int)
(declare-const prop__49 bool__ref)
(declare-const j54 int__ref)
(declare-const prop__50 Bool)
(declare-const j55 Int)
(declare-const prop__51 bool__ref)
(declare-const j56 int__ref)
(declare-const prop__52 Bool)
(declare-const j57 Int)
(declare-const prop__53 bool__ref)
(declare-const j58 int__ref)
(declare-const prop__54 Bool)
(declare-const j59 Int)
(declare-const prop__55 bool__ref)
(declare-const j60 int__ref)
(declare-const prop__56 Bool)
(declare-const j61 Int)
(declare-const prop__57 Bool)
(declare-const i23 Int)
(declare-const j62 Int)
(declare-const result25 int__ref)
(declare-const i24 Int)
(declare-const result26 bool__ref)
(declare-const prop__58 Bool)
(declare-const result27 int__ref)
(declare-const j63 Int)
(declare-const prop__59 Bool)
(declare-const j64 Int)
(declare-const result28 bool__ref)
(declare-const prop__60 Bool)
(declare-const result29 int__ref)
(declare-const j65 Int)
(declare-const prop__61 bool__ref)
(declare-const j66 int__ref)
(declare-const prop__62 Bool)
(declare-const j67 Int)
(declare-const prop__63 bool__ref)
(declare-const i25 int__ref)
(declare-const j68 int__ref)
(declare-const prop__64 Bool)
(declare-const i26 Int)
(declare-const j69 Int)
(declare-const prop__65 bool__ref)
(declare-const i27 int__ref)
(declare-const j70 int__ref)
(declare-const prop__66 Bool)
(declare-const i28 Int)
(declare-const j71 Int)
(declare-const prop__67 bool__ref)
(declare-const i29 int__ref)
(declare-const j72 int__ref)
(declare-const prop__68 Bool)
(declare-const i30 Int)
(declare-const j73 Int)
(declare-const result30 int__ref)
(declare-const i31 Int)
(declare-const result31 bool__ref)
(declare-const prop__69 Bool)
(declare-const result32 int__ref)
(declare-const j74 Int)
(declare-const prop__70 Bool)
(declare-const j75 Int)
(declare-const result33 bool__ref)
(declare-const prop__71 Bool)
(declare-const result34 int__ref)
(declare-const j76 Int)
(declare-const prop__72 bool__ref)
(declare-const j77 int__ref)
(declare-const prop__73 Bool)
(declare-const j78 Int)
(declare-const prop__74 bool__ref)
(declare-const j79 int__ref)
(declare-const prop__75 Bool)
(declare-const j80 Int)
(declare-const prop__76 bool__ref)
(declare-const j81 int__ref)
(declare-const prop__77 Bool)
(declare-const j82 Int)
(declare-const prop__78 bool__ref)
(declare-const j83 int__ref)
(declare-const prop__79 Bool)
(declare-const j84 Int)
(declare-const prop__80 Bool)
(declare-const i32 Int)
(declare-const j85 Int)
(declare-const result35 int__ref)
(declare-const i33 Int)
(declare-const result36 bool__ref)
(declare-const prop__81 Bool)
(declare-const result37 int__ref)
(declare-const j86 Int)
(declare-const prop__82 Bool)
(declare-const j87 Int)
(declare-const result38 bool__ref)
(declare-const prop__83 Bool)
(declare-const result39 int__ref)
(declare-const j88 Int)
(declare-const prop__84 bool__ref)
(declare-const j89 int__ref)
(declare-const prop__85 Bool)
(declare-const j90 Int)
(assert (= (mk_int__ref result) (mk_int__ref i)))
(assert (= i4 1))
(assert (=> (and (<= 1 i4) (<= i4 3)) (and (and (= temp___173 i4) (and (= temp___172 prop__) (and (and (= (mk_bool__ref result1) (mk_bool__ref prop__)) (= prop__2 (of_int 0))) (and (and (and (= (mk_int__ref result2) (mk_int__ref j)) (= j7 1)) (ite (and (<= 1 j7) (<= j7 10)) (and (and (and (= temp___169 j7) (and (= temp___168 prop__2) (and (= prop__3 true) (and (and (=> (<= 1 10) (in_range2 j8)) (and (<= 1 j8) (<= j8 10))) (and (and (= prop__3 result3) (= prop__4 (of_int 1))) (= j8 10)))))) (and (and (= j8 j12) (= prop__4 prop__7)) (and (= j13 j8) (= prop__8 prop__4)))) (and (and (= (mk_int__ref j14) (mk_int__ref j12)) (= (mk_bool__ref prop__9) (mk_bool__ref prop__7))) (and (= j15 j13) (= prop__10 prop__8)))) (and (and (= j7 j14) (= prop__2 prop__9)) (and (= j15 j7) (= prop__10 prop__2))))) (and (and (=> (<= 1 3) (in_range1 i5)) (and (<= 1 i5) (<= i5 3))) (= i5 3)))))) (and (and (= j24 (mk_int__ref j16)) (and (= i9 (mk_int__ref i5)) (= prop__19 (mk_bool__ref prop__11)))) (and (= j25 j16) (and (= i10 i5) (= prop__20 prop__11)))))))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= j26 j24)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= i11 i9)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= prop__21 prop__19)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= j27 j25)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= i12 i10)))
(assert (=> (and (<= 1 i4) (<= i4 3)) (= prop__22 prop__20)))
(assert (=> (not (and (<= 1 i4) (<= i4 3))) (= j26 (mk_int__ref j))))
(assert (=> (not (and (<= 1 i4) (<= i4 3))) (= i11 (mk_int__ref i4))))
(assert (=> (not (and (<= 1 i4) (<= i4 3))) (= prop__21 (mk_bool__ref prop__))))
(assert (=> (not (and (<= 1 i4) (<= i4 3))) (= j27 j4)))
(assert (=> (not (and (<= 1 i4) (<= i4 3))) (= i12 i4)))
(assert (=> (not (and (<= 1 i4) (<= i4 3))) (= prop__22 prop__1)))
(assert (= result10 (mk_int__ref i1)))
(assert (= i13 1))
(assert (=> (and (<= 1 i13) (<= i13 3)) (and (and (= temp___181 i13) (and (= temp___180 (bool__content prop__21)) (and (and (= result11 prop__21) (= prop__23 (of_int 1))) (and (and (and (= result12 (mk_int__ref j1)) (= j28 1)) (ite (and (<= 1 j28) (<= j28 10)) (and (and (and (= temp___177 j28) (and (= temp___176 prop__23) (and (= prop__24 true) (and (and (=> (<= 1 10) (in_range4 j29)) (and (<= 1 j29) (<= j29 10))) (and (and (= result13 (mk_bool__ref prop__24)) (= prop__25 (of_int 0))) (= j29 10)))))) (and (and (= j35 (mk_int__ref j29)) (= prop__30 (mk_bool__ref prop__25))) (and (= j36 j29) (= prop__31 prop__25)))) (and (and (= j37 j35) (= prop__32 prop__30)) (and (= j38 j36) (= prop__33 prop__31)))) (and (and (= j37 (mk_int__ref j28)) (= prop__32 (mk_bool__ref prop__23))) (and (= j38 j28) (= prop__33 prop__23))))) (and (and (=> (<= 1 3) (in_range3 i14)) (and (<= 1 i14) (<= i14 3))) (= i14 3)))))) (and (and (= j47 (mk_int__ref j39)) (and (= i18 (mk_int__ref i14)) (= prop__42 (mk_bool__ref prop__34)))) (and (= j48 j39) (and (= i19 i14) (= prop__43 prop__34)))))))
(assert (=> (and (<= 1 i13) (<= i13 3)) (= j49 j47)))
(assert (=> (and (<= 1 i13) (<= i13 3)) (= i20 i18)))
(assert (=> (and (<= 1 i13) (<= i13 3)) (= prop__44 prop__42)))
(assert (=> (and (<= 1 i13) (<= i13 3)) (= j50 j48)))
(assert (=> (and (<= 1 i13) (<= i13 3)) (= i21 i19)))
(assert (=> (and (<= 1 i13) (<= i13 3)) (= prop__45 prop__43)))
(assert (=> (not (and (<= 1 i13) (<= i13 3))) (= j49 (mk_int__ref j1))))
(assert (=> (not (and (<= 1 i13) (<= i13 3))) (= i20 (mk_int__ref i13))))
(assert (=> (not (and (<= 1 i13) (<= i13 3))) (= prop__44 prop__21)))
(assert (=> (not (and (<= 1 i13) (<= i13 3))) (= j50 j5)))
(assert (=> (not (and (<= 1 i13) (<= i13 3))) (= i21 i13)))
(assert (=> (not (and (<= 1 i13) (<= i13 3))) (= prop__45 prop__22)))
(assert (= result20 (mk_int__ref i2)))
(assert (= i22 1))
(assert (=> (and (<= 1 i22) (<= i22 3)) (and (and (= temp___189 i22) (and (= temp___188 (bool__content prop__44)) (and (and (= result21 prop__44) (= prop__46 (of_int 1))) (and (and (and (= result22 (mk_int__ref j2)) (= j51 1)) (ite (and (<= 1 j51) (<= j51 10)) (and (and (and (= temp___185 j51) (and (= temp___184 prop__46) (and (= prop__47 true) (and (and (=> (<= 1 10) (in_range6 j52)) (and (<= 1 j52) (<= j52 10))) (and (and (= result23 (mk_bool__ref prop__47)) (= prop__48 prop__47)) (= j52 10)))))) (and (and (= j58 (mk_int__ref j52)) (= prop__53 (mk_bool__ref prop__48))) (and (= j59 j52) (= prop__54 prop__48)))) (and (and (= j60 j58) (= prop__55 prop__53)) (and (= j61 j59) (= prop__56 prop__54)))) (and (and (= j60 (mk_int__ref j51)) (= prop__55 (mk_bool__ref prop__46))) (and (= j61 j51) (= prop__56 prop__46))))) (and (and (=> (<= 1 3) (in_range5 i23)) (and (<= 1 i23) (<= i23 3))) (= i23 3)))))) (and (and (= j70 (mk_int__ref j62)) (and (= i27 (mk_int__ref i23)) (= prop__65 (mk_bool__ref prop__57)))) (and (= j71 j62) (and (= i28 i23) (= prop__66 prop__57)))))))
(assert (=> (and (<= 1 i22) (<= i22 3)) (= j72 j70)))
(assert (=> (and (<= 1 i22) (<= i22 3)) (= i29 i27)))
(assert (=> (and (<= 1 i22) (<= i22 3)) (= prop__67 prop__65)))
(assert (=> (and (<= 1 i22) (<= i22 3)) (= j73 j71)))
(assert (=> (and (<= 1 i22) (<= i22 3)) (= i30 i28)))
(assert (=> (and (<= 1 i22) (<= i22 3)) (= prop__68 prop__66)))
(assert (=> (not (and (<= 1 i22) (<= i22 3))) (= j72 (mk_int__ref j2))))
(assert (=> (not (and (<= 1 i22) (<= i22 3))) (= i29 (mk_int__ref i22))))
(assert (=> (not (and (<= 1 i22) (<= i22 3))) (= prop__67 prop__44)))
(assert (=> (not (and (<= 1 i22) (<= i22 3))) (= j73 j6)))
(assert (=> (not (and (<= 1 i22) (<= i22 3))) (= i30 i22)))
(assert (=> (not (and (<= 1 i22) (<= i22 3))) (= prop__68 prop__45)))
(assert (= result30 (mk_int__ref i3)))
(assert (= i31 1))
(assert (<= 1 i31))
(assert (<= i31 3))
(assert (= result31 prop__67))
(assert (= prop__69 (of_int 1)))
(assert (= result32 (mk_int__ref j3)))
(assert (= j74 1))
(assert (<= 1 j74))
(assert (<= j74 10))
(assert (< 1 j74))
(assert (not (= prop__69 true)))
(check-sat)
(exit)
