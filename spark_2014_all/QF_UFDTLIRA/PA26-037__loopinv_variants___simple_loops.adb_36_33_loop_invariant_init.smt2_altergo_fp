(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

logic attr__ATTRIBUTE_ADDRESS : int

type t1b

predicate in_range1(x: int) = ((1 <= x) and (x <= 3))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : t1b, t1b -> bool

logic dummy : t1b

type t1b__ref = { t1b__content : t1b
}

function t1b__ref___projection(a: t1b__ref) : t1b = (a).t1b__content

logic attr__ATTRIBUTE_ADDRESS1 : int

type t2b

predicate in_range2(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : t2b, t2b -> bool

logic dummy1 : t2b

type t2b__ref = { t2b__content : t2b
}

function t2b__ref___projection(a: t2b__ref) : t2b = (a).t2b__content

logic attr__ATTRIBUTE_ADDRESS2 : int

type t3b

predicate in_range3(x: int) = ((1 <= x) and (x <= 3))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : t3b, t3b -> bool

logic dummy2 : t3b

type t3b__ref = { t3b__content : t3b
}

function t3b__ref___projection(a: t3b__ref) : t3b = (a).t3b__content

logic attr__ATTRIBUTE_ADDRESS3 : int

type t4b

predicate in_range4(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : t4b, t4b -> bool

logic dummy3 : t4b

type t4b__ref = { t4b__content : t4b
}

function t4b__ref___projection(a: t4b__ref) : t4b = (a).t4b__content

logic attr__ATTRIBUTE_ADDRESS4 : int

type t5b

predicate in_range5(x: int) = ((1 <= x) and (x <= 3))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq4 : t5b, t5b -> bool

logic dummy4 : t5b

type t5b__ref = { t5b__content : t5b
}

function t5b__ref___projection(a: t5b__ref) : t5b = (a).t5b__content

logic attr__ATTRIBUTE_ADDRESS5 : int

type t6b

predicate in_range6(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq5 : t6b, t6b -> bool

logic dummy5 : t6b

type t6b__ref = { t6b__content : t6b
}

function t6b__ref___projection(a: t6b__ref) : t6b = (a).t6b__content

logic attr__ATTRIBUTE_ADDRESS6 : int

type t7b

predicate in_range7(x: int) = ((1 <= x) and (x <= 3))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq6 : t7b, t7b -> bool

logic dummy6 : t7b

type t7b__ref = { t7b__content : t7b
}

function t7b__ref___projection(a: t7b__ref) : t7b = (a).t7b__content

logic attr__ATTRIBUTE_ADDRESS7 : int

type t8b

predicate in_range8(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq7 : t8b, t8b -> bool

logic dummy7 : t8b

type t8b__ref = { t8b__content : t8b
}

function t8b__ref___projection(a: t8b__ref) : t8b = (a).t8b__content

logic attr__ATTRIBUTE_ADDRESS8 : int

 (* File "simple_loops.adb", line 1, characters 0-0 *)
goal WP_parameter_def :
  (forall prop__:bool. forall i:int. forall j:int. forall i1:int.
  forall j1:int. forall i2:int. forall j2:int. forall i3:int. forall j3:int.
  forall temp___201:int. forall temp___200:bool. forall temp___197:int.
  forall temp___196:bool. forall temp___209:int. forall temp___208:bool.
  forall temp___205:int. forall temp___204:bool. forall temp___217:int.
  forall temp___216:bool. forall temp___213:int. forall temp___212:bool.
  forall prop__1:bool. forall j4:int. forall j5:int. forall j6:int.
  forall result:int. forall i4:int. forall result1:bool. forall prop__2:bool.
  forall result2:int. forall j7:int. forall prop__3:bool. forall j8:int.
  forall result3:bool. forall prop__4:bool. forall prop__5:bool.
  forall j9:int. forall prop__6:bool. forall j10:int. forall prop__7:bool.
  forall j11:int. forall prop__8:bool. forall j12:int. forall prop__9:bool.
  forall i5:int. forall j13:int. forall prop__10:bool. forall i6:int.
  forall j14:int. forall prop__11:bool. forall i7:int. forall j15:int.
  forall prop__12:bool. forall i8:int. forall j16:int. forall prop__13:bool.
  forall i9:int. forall j17:int. forall result4:int. forall i10:int.
  forall result5:bool. forall prop__14:bool. forall result6:int.
  forall j18:int. forall prop__15:bool. forall j19:int. forall result7:bool.
  forall prop__16:bool. forall prop__17:bool__ref. forall j20:int__ref.
  forall prop__18:bool. forall j21:int. forall prop__19:bool__ref.
  forall j22:int__ref. forall prop__20:bool. forall j23:int.
  forall prop__21:bool. forall i11:int. forall j24:int.
  forall prop__22:bool__ref. forall i12:int__ref. forall j25:int__ref.
  forall prop__23:bool. forall i13:int. forall j26:int.
  forall prop__24:bool__ref. forall i14:int__ref. forall j27:int__ref.
  forall prop__25:bool. forall i15:int. forall j28:int.
  forall result8:int__ref. forall i16:int. forall result9:bool__ref.
  forall prop__26:bool. forall result10:int__ref. forall j29:int.
  forall prop__27:bool. forall j30:int. forall result11:bool__ref.
  forall prop__28:bool. forall prop__29:bool__ref. forall j31:int__ref.
  forall prop__30:bool. forall j32:int. forall prop__31:bool__ref.
  forall j33:int__ref. forall prop__32:bool. forall j34:int.
  forall prop__33:bool. forall i17:int. forall j35:int.
  forall prop__34:bool__ref. forall i18:int__ref. forall j36:int__ref.
  forall prop__35:bool. forall i19:int. forall j37:int.
  forall prop__36:bool__ref. forall i20:int__ref. forall j38:int__ref.
  forall prop__37:bool. forall i21:int. forall j39:int.
  forall result12:int__ref. forall i22:int. forall result13:bool__ref.
  forall prop__38:bool. forall result14:int__ref. forall j40:int. (((({
  int__content = result } = { int__content = i }) and (i4 = 1)) and
  ((((1 <= i4) and (i4 <= 3)) and ((((temp___201 = i4) and
  ((temp___200 = prop__) and ((({ bool__content = result1 } = {
  bool__content = prop__ }) and (prop__2 = of_int(0))) and (((({
  int__content = result2 } = { int__content = j }) and (j7 = 1)) and
  ((((1 <= j7) and (j7 <= 10)) and ((((temp___197 = j7) and
  ((temp___196 = prop__2) and ((prop__3 = true) and ((((1 <= 10) ->
  in_range2(j8)) and ((1 <= j8) and (j8 <= 10))) and
  (((prop__3 = result3) and (prop__4 = of_int(1))) and (j8 = 10)))))) and
  (((j8 = j9) and (prop__4 = prop__5)) and ((j10 = j8) and
  (prop__6 = prop__4)))) and ((({ int__content = j11 } = { int__content = j9
  }) and ({ bool__content = prop__7 } = { bool__content = prop__5 })) and
  ((j12 = j10) and (prop__8 = prop__6))))) or ((not ((1 <= j7) and
  (j7 <= 10))) and (((j7 = j11) and (prop__2 = prop__7)) and ((j12 = j7) and
  (prop__8 = prop__2)))))) and ((((1 <= 3) -> in_range1(i5)) and
  ((1 <= i5) and (i5 <= 3))) and (i5 = 3)))))) and (((j13 = j14) and
  ((i5 = i6) and (prop__9 = prop__10))) and ((j15 = j13) and ((i7 = i5) and
  (prop__11 = prop__9))))) and ((({ int__content = j16 } = { int__content =
  j14 }) and (({ int__content = i8 } = { int__content = i6 }) and ({
  bool__content = prop__12 } = { bool__content = prop__10 }))) and
  ((j17 = j15) and ((i9 = i7) and (prop__13 = prop__11)))))) or
  ((not ((1 <= i4) and (i4 <= 3))) and ((({ int__content = j16 } = {
  int__content = j }) and ((i4 = i8) and ({ bool__content = prop__12 } = {
  bool__content = prop__ }))) and ((j17 = j4) and ((i9 = i4) and
  (prop__13 = prop__1))))))) -> ((((result4 = i1) and (i10 = 1)) and
  ((((1 <= i10) and (i10 <= 3)) and ((((temp___209 = i10) and
  ((temp___208 = prop__12) and ((({ bool__content = result5 } = {
  bool__content = prop__12 }) and (prop__14 = of_int(1))) and (((({
  int__content = result6 } = { int__content = j1 }) and (j18 = 1)) and
  ((((1 <= j18) and (j18 <= 10)) and ((((temp___205 = j18) and
  ((temp___204 = prop__14) and ((prop__15 = true) and ((((1 <= 10) ->
  in_range4(j19)) and ((1 <= j19) and (j19 <= 10))) and
  (((prop__15 = result7) and (prop__16 = of_int(0))) and (j19 = 10)))))) and
  (((j20 = { int__content = j19 }) and (prop__17 = { bool__content = prop__16
  })) and ((j21 = j19) and (prop__18 = prop__16)))) and (((j22 = j20) and
  (prop__19 = prop__17)) and ((j23 = j21) and (prop__20 = prop__18))))) or
  ((not ((1 <= j18) and (j18 <= 10))) and (((j22 = { int__content = j18
  }) and (prop__19 = { bool__content = prop__14 })) and ((j23 = j18) and
  (prop__20 = prop__14)))))) and ((((1 <= 3) -> in_range3(i11)) and
  ((1 <= i11) and (i11 <= 3))) and (i11 = 3)))))) and (((j25 = {
  int__content = j24 }) and ((i12 = { int__content = i11 }) and (prop__22 = {
  bool__content = prop__21 }))) and ((j26 = j24) and ((i13 = i11) and
  (prop__23 = prop__21))))) and (((j27 = j25) and ((i14 = i12) and
  (prop__24 = prop__22))) and ((j28 = j26) and ((i15 = i13) and
  (prop__25 = prop__23)))))) or ((not ((1 <= i10) and (i10 <= 3))) and
  (((j27 = { int__content = j1 }) and ((i14 = { int__content = i10 }) and
  (prop__24 = { bool__content = prop__12 }))) and ((j28 = j5) and
  ((i15 = i10) and (prop__25 = prop__13))))))) -> ((((result8 = {
  int__content = i2 }) and (i16 = 1)) and ((((1 <= i16) and (i16 <= 3)) and
  ((((temp___217 = i16) and ((temp___216 = (prop__24).bool__content) and
  (((result9 = prop__24) and (prop__26 = of_int(1))) and ((((result10 = {
  int__content = j2 }) and (j29 = 1)) and ((((1 <= j29) and (j29 <= 10)) and
  ((((temp___213 = j29) and ((temp___212 = prop__26) and
  ((prop__27 = true) and ((((1 <= 10) -> in_range6(j30)) and ((1 <= j30) and
  (j30 <= 10))) and (((result11 = { bool__content = prop__27 }) and
  (prop__28 = prop__27)) and (j30 = 10)))))) and (((j31 = { int__content =
  j30 }) and (prop__29 = { bool__content = prop__28 })) and ((j32 = j30) and
  (prop__30 = prop__28)))) and (((j33 = j31) and (prop__31 = prop__29)) and
  ((j34 = j32) and (prop__32 = prop__30))))) or ((not ((1 <= j29) and
  (j29 <= 10))) and (((j33 = { int__content = j29 }) and (prop__31 = {
  bool__content = prop__26 })) and ((j34 = j29) and
  (prop__32 = prop__26)))))) and ((((1 <= 3) -> in_range5(i17)) and
  ((1 <= i17) and (i17 <= 3))) and (i17 = 3)))))) and (((j36 = {
  int__content = j35 }) and ((i18 = { int__content = i17 }) and (prop__34 = {
  bool__content = prop__33 }))) and ((j37 = j35) and ((i19 = i17) and
  (prop__35 = prop__33))))) and (((j38 = j36) and ((i20 = i18) and
  (prop__36 = prop__34))) and ((j39 = j37) and ((i21 = i19) and
  (prop__37 = prop__35)))))) or ((not ((1 <= i16) and (i16 <= 3))) and
  (((j38 = { int__content = j2 }) and ((i20 = { int__content = i16 }) and
  (prop__36 = prop__24))) and ((j39 = j6) and ((i21 = i16) and
  (prop__37 = prop__25))))))) -> (((result12 = { int__content = i3 }) and
  (i22 = 1)) -> (((1 <= i22) and (i22 <= 3)) -> (((result13 = prop__36) and
  (prop__38 = of_int(1))) -> (((result14 = { int__content = j3 }) and
  (j40 = 1)) -> (((1 <= j40) and (j40 <= 10)) -> ((1 <  j40) ->
  (prop__38 = true)))))))))))
