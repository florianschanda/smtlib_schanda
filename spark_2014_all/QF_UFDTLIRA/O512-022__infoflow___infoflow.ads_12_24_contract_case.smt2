(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic QF_UFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort character 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (character character) Bool)
(declare-const dummy character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(define-fun dynamic_invariant ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range1 temp___expr_74)))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(declare-const in_0_rdy_v1 Bool)
(declare-const in_1_rdy_v1 Bool)
(declare-const out_0_rdy_v1 Bool)
(declare-const out_1_rdy_v1 Bool)
(declare-const in_0_dat_v1 Int)
(declare-const in_1_dat_v1 Int)
(declare-const out_0_dat_v1 Int)
(declare-const out_1_dat_v1 Int)
(declare-const in_0_rdy_v2 Bool)
(declare-const in_1_rdy_v2 Bool)
(declare-const out_0_rdy_v2 Bool)
(declare-const out_1_rdy_v2 Bool)
(declare-const in_0_dat_v2 Int)
(declare-const in_1_dat_v2 Int)
(declare-const out_0_dat_v2 Int)
(declare-const out_1_dat_v2 Int)
(declare-const data_0_v1 Int)
(declare-const data_1_v1 Int)
(declare-const data_0_v2 Int)
(declare-const data_1_v2 Int)
(declare-const in_0_rdy_v11 Bool)
(declare-const in_1_rdy_v11 Bool)
(declare-const out_0_rdy_v11 Bool)
(declare-const out_1_rdy_v11 Bool)
(declare-const out_0_dat_v11 Int)
(declare-const out_1_dat_v11 Int)
(declare-const in_0_rdy_v21 Bool)
(declare-const in_1_rdy_v21 Bool)
(declare-const out_0_rdy_v21 Bool)
(declare-const out_1_rdy_v21 Bool)
(declare-const out_0_dat_v21 Int)
(declare-const out_1_dat_v21 Int)
(declare-const data_0_v11 Int)
(declare-const data_1_v11 Int)
(declare-const data_0_v21 Int)
(declare-const data_1_v21 Int)
(declare-const result Int)
(declare-const data_0_v12 Int)
(declare-const result1 bool__ref)
(declare-const in_0_rdy_v12 Bool)
(declare-const result2 int__ref)
(declare-const out_1_dat_v12 Int)
(declare-const result3 bool__ref)
(declare-const out_1_rdy_v12 Bool)
(declare-const result4 int__ref)
(declare-const data_1_v12 Int)
(declare-const result5 bool__ref)
(declare-const in_1_rdy_v12 Bool)
(declare-const result6 int__ref)
(declare-const out_0_dat_v12 Int)
(declare-const result7 bool__ref)
(declare-const out_0_rdy_v12 Bool)
(declare-const result8 int__ref)
(declare-const data_0_v22 Int)
(declare-const result9 bool__ref)
(declare-const in_0_rdy_v22 Bool)
(declare-const result10 int__ref)
(declare-const out_1_dat_v22 Int)
(declare-const result11 bool__ref)
(declare-const out_1_rdy_v22 Bool)
(declare-const result12 int__ref)
(declare-const data_1_v22 Int)
(declare-const result13 bool__ref)
(declare-const in_1_rdy_v22 Bool)
(declare-const result14 int__ref)
(declare-const out_0_dat_v22 Int)
(declare-const result15 bool__ref)
(declare-const out_0_rdy_v22 Bool)
(declare-const in_0_rdy_v13 bool__ref)
(declare-const in_1_rdy_v13 bool__ref)
(declare-const out_0_rdy_v13 bool__ref)
(declare-const out_1_rdy_v13 bool__ref)
(declare-const out_0_dat_v13 int__ref)
(declare-const out_1_dat_v13 int__ref)
(declare-const in_0_rdy_v23 bool__ref)
(declare-const in_1_rdy_v23 bool__ref)
(declare-const out_0_rdy_v23 bool__ref)
(declare-const out_1_rdy_v23 bool__ref)
(declare-const out_0_dat_v23 int__ref)
(declare-const out_1_dat_v23 int__ref)
(declare-const data_0_v13 int__ref)
(declare-const data_1_v13 int__ref)
(declare-const data_0_v23 int__ref)
(declare-const data_1_v23 int__ref)
(declare-const in_0_rdy_v14 Bool)
(declare-const in_1_rdy_v14 Bool)
(declare-const out_0_rdy_v14 Bool)
(declare-const out_1_rdy_v14 Bool)
(declare-const out_0_dat_v14 Int)
(declare-const out_1_dat_v14 Int)
(declare-const in_0_rdy_v24 Bool)
(declare-const in_1_rdy_v24 Bool)
(declare-const out_0_rdy_v24 Bool)
(declare-const out_1_rdy_v24 Bool)
(declare-const out_0_dat_v24 Int)
(declare-const out_1_dat_v24 Int)
(declare-const data_0_v14 Int)
(declare-const data_1_v14 Int)
(declare-const data_0_v24 Int)
(declare-const data_1_v24 Int)
(assert (in_range1 in_0_dat_v1))
(assert (in_range1 in_1_dat_v1))
(assert (in_range1 out_0_dat_v1))
(assert (in_range1 out_1_dat_v1))
(assert (in_range1 in_0_dat_v2))
(assert (in_range1 in_1_dat_v2))
(assert (in_range1 out_0_dat_v2))
(assert (in_range1 out_1_dat_v2))
(assert (=> (<= 0 255) (in_range1 data_0_v1)))
(assert (=> (<= 0 255) (in_range1 data_1_v1)))
(assert (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false) (= result data_0_v1)))
(assert (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false) (= data_0_v12 in_0_dat_v1)))
(assert (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false) (= result1 (mk_bool__ref in_0_rdy_v1))))
(assert (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false) (= in_0_rdy_v12 (distinct 0 0))))
(assert (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false) (= result2 (mk_int__ref out_1_dat_v1))))
(assert (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false) (= out_1_dat_v12 data_0_v12)))
(assert (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false) (= result3 (mk_bool__ref out_1_rdy_v1))))
(assert (=> (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false) (= out_1_rdy_v12 (distinct 1 0))))
(assert (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)) (= data_0_v12 data_0_v1)))
(assert (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)) (= out_1_dat_v12 out_1_dat_v1)))
(assert (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)) (= out_1_rdy_v12 out_1_rdy_v1)))
(assert (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)) (= in_0_rdy_v12 in_0_rdy_v1)))
(assert (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)) (= data_0_v12 data_0_v11)))
(assert (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)) (= out_1_dat_v12 out_1_dat_v11)))
(assert (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)) (= out_1_rdy_v12 out_1_rdy_v11)))
(assert (=> (not (ite (= in_0_rdy_v1 true) (not (= out_1_rdy_v1 true)) false)) (= in_0_rdy_v12 in_0_rdy_v11)))
(assert (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false) (= result4 (mk_int__ref data_1_v1))))
(assert (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false) (= data_1_v12 in_1_dat_v1)))
(assert (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false) (= result5 (mk_bool__ref in_1_rdy_v1))))
(assert (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false) (= in_1_rdy_v12 (distinct 0 0))))
(assert (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false) (= result6 (mk_int__ref out_0_dat_v1))))
(assert (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false) (= out_0_dat_v12 data_1_v12)))
(assert (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false) (= result7 (mk_bool__ref out_0_rdy_v1))))
(assert (=> (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false) (= out_0_rdy_v12 (distinct 1 0))))
(assert (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)) (= data_1_v12 data_1_v1)))
(assert (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)) (= out_0_dat_v12 out_0_dat_v1)))
(assert (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)) (= out_0_rdy_v12 out_0_rdy_v1)))
(assert (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)) (= in_1_rdy_v12 in_1_rdy_v1)))
(assert (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)) (= data_1_v12 data_1_v11)))
(assert (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)) (= out_0_dat_v12 out_0_dat_v11)))
(assert (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)) (= out_0_rdy_v12 out_0_rdy_v11)))
(assert (=> (not (ite (= in_1_rdy_v1 true) (not (= out_0_rdy_v1 true)) false)) (= in_1_rdy_v12 in_1_rdy_v11)))
(assert (=> (<= 0 255) (in_range1 data_0_v2)))
(assert (=> (<= 0 255) (in_range1 data_1_v2)))
(assert (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false) (= result8 (mk_int__ref data_0_v2))))
(assert (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false) (= data_0_v22 in_0_dat_v2)))
(assert (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false) (= result9 (mk_bool__ref in_0_rdy_v2))))
(assert (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false) (= in_0_rdy_v22 (distinct 0 0))))
(assert (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false) (= result10 (mk_int__ref out_1_dat_v2))))
(assert (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false) (= out_1_dat_v22 data_0_v22)))
(assert (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false) (= result11 (mk_bool__ref out_1_rdy_v2))))
(assert (=> (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false) (= out_1_rdy_v22 (distinct 1 0))))
(assert (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)) (= data_0_v22 data_0_v2)))
(assert (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)) (= out_1_dat_v22 out_1_dat_v2)))
(assert (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)) (= out_1_rdy_v22 out_1_rdy_v2)))
(assert (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)) (= in_0_rdy_v22 in_0_rdy_v2)))
(assert (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)) (= data_0_v22 data_0_v21)))
(assert (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)) (= out_1_dat_v22 out_1_dat_v21)))
(assert (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)) (= out_1_rdy_v22 out_1_rdy_v21)))
(assert (=> (not (ite (= in_0_rdy_v2 true) (not (= out_1_rdy_v2 true)) false)) (= in_0_rdy_v22 in_0_rdy_v21)))
(assert (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false) (= result12 (mk_int__ref data_1_v2))))
(assert (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false) (= data_1_v22 in_1_dat_v2)))
(assert (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false) (= result13 (mk_bool__ref in_1_rdy_v2))))
(assert (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false) (= in_1_rdy_v22 (distinct 0 0))))
(assert (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false) (= result14 (mk_int__ref out_0_dat_v2))))
(assert (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false) (= out_0_dat_v22 data_1_v22)))
(assert (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false) (= result15 (mk_bool__ref out_0_rdy_v2))))
(assert (=> (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false) (= out_0_rdy_v22 (distinct 1 0))))
(assert (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)) (= data_1_v22 data_1_v2)))
(assert (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)) (= out_0_dat_v22 out_0_dat_v2)))
(assert (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)) (= out_0_rdy_v22 out_0_rdy_v2)))
(assert (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)) (= in_1_rdy_v22 in_1_rdy_v2)))
(assert (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)) (= data_1_v22 data_1_v21)))
(assert (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)) (= out_0_dat_v22 out_0_dat_v21)))
(assert (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)) (= out_0_rdy_v22 out_0_rdy_v21)))
(assert (=> (not (ite (= in_1_rdy_v2 true) (not (= out_0_rdy_v2 true)) false)) (= in_1_rdy_v22 in_1_rdy_v21)))
(assert (= data_1_v23 (mk_int__ref data_1_v22)))
(assert (= data_0_v23 (mk_int__ref data_0_v22)))
(assert (= data_1_v13 (mk_int__ref data_1_v12)))
(assert (= data_0_v13 (mk_int__ref data_0_v12)))
(assert (= out_1_dat_v23 (mk_int__ref out_1_dat_v22)))
(assert (= out_0_dat_v23 (mk_int__ref out_0_dat_v22)))
(assert (= out_1_rdy_v23 (mk_bool__ref out_1_rdy_v22)))
(assert (= out_0_rdy_v23 (mk_bool__ref out_0_rdy_v22)))
(assert (= in_1_rdy_v23 (mk_bool__ref in_1_rdy_v22)))
(assert (= in_0_rdy_v23 (mk_bool__ref in_0_rdy_v22)))
(assert (= out_1_dat_v13 (mk_int__ref out_1_dat_v12)))
(assert (= out_0_dat_v13 (mk_int__ref out_0_dat_v12)))
(assert (= out_1_rdy_v13 (mk_bool__ref out_1_rdy_v12)))
(assert (= out_0_rdy_v13 (mk_bool__ref out_0_rdy_v12)))
(assert (= in_1_rdy_v13 (mk_bool__ref in_1_rdy_v12)))
(assert (= in_0_rdy_v13 (mk_bool__ref in_0_rdy_v12)))
(assert (= data_1_v24 data_1_v22))
(assert (= data_0_v24 data_0_v22))
(assert (= data_1_v14 data_1_v12))
(assert (= data_0_v14 data_0_v12))
(assert (= out_1_dat_v24 out_1_dat_v22))
(assert (= out_0_dat_v24 out_0_dat_v22))
(assert (= out_1_rdy_v24 out_1_rdy_v22))
(assert (= out_0_rdy_v24 out_0_rdy_v22))
(assert (= in_1_rdy_v24 in_1_rdy_v22))
(assert (= in_0_rdy_v24 in_0_rdy_v22))
(assert (= out_1_dat_v14 out_1_dat_v12))
(assert (= out_0_dat_v14 out_0_dat_v12))
(assert (= out_1_rdy_v14 out_1_rdy_v12))
(assert (= out_0_rdy_v14 out_0_rdy_v12))
(assert (= in_1_rdy_v14 in_1_rdy_v12))
(assert (= in_0_rdy_v14 in_0_rdy_v12))
(assert (ite (= (= in_1_dat_v1 in_1_dat_v2) true) (ite (= in_1_rdy_v1 true) (ite (= out_0_rdy_v1 false) (ite (= in_1_rdy_v2 true) (ite (= out_0_rdy_v2 false) true false) true) true) true) true))
(assert (ite (= (= in_1_dat_v1 in_1_dat_v2) true) (ite (= in_1_rdy_v1 true) (ite (= out_0_rdy_v1 false) (ite (= in_1_rdy_v2 true) true false) true) true) true))
(assert (ite (= (= in_1_dat_v1 in_1_dat_v2) true) (ite (= in_1_rdy_v1 true) (ite (= out_0_rdy_v1 false) true false) true) true))
(assert (ite (= (= in_1_dat_v1 in_1_dat_v2) true) (ite (= in_1_rdy_v1 true) true false) true))
(assert (ite (= (= in_1_dat_v1 in_1_dat_v2) true) true false))
(assert (not (= (int__content out_0_dat_v13) (int__content out_0_dat_v23))))
(check-sat)
(exit)
