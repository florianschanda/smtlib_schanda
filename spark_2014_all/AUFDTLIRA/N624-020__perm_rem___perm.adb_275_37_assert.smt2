(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort true_bool 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (true_bool true_bool) Bool)
(declare-const dummy2 true_bool)
(declare-datatypes () ((true_bool__ref (mk_true_bool__ref (true_bool__content true_bool)))))
(define-fun true_bool__ref___projection ((a true_bool__ref)) true_bool (true_bool__content a))
(define-fun dynamic_invariant ((temp___expr_136 Int) (temp___is_init_133 Bool) (temp___skip_constant_134 Bool) (temp___do_toplevel_135 Bool)) Bool (=> (or (= temp___is_init_133 true) (<= 1 1)) (in_range3 temp___expr_136)))
(declare-sort index 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (index index) Bool)
(declare-const dummy3 index)
(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))
(define-fun dynamic_invariant1 ((temp___expr_142 Int) (temp___is_init_139 Bool) (temp___skip_constant_140 Bool) (temp___do_toplevel_141 Bool)) Bool (=> (or (= temp___is_init_139 true) (<= 1 100)) (in_range4 temp___expr_142)))
(declare-fun to_rep1 (index) Int)
(declare-fun of_rep1 (Int) index)
(assert (forall ((x index)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x index)) (! (in_range4 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int natural))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int natural) Int Int (Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (natural Int) (Array Int natural))
(assert (forall ((v natural)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int) (b (Array Int natural)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare ((Array Int natural) Int Int (Array Int natural) Int Int) Int)
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep2 (integer) Int)
(declare-fun of_rep2 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep2 (first (mk f l))) f) (= (to_rep2 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range4 low) (in_range4 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int natural)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))
(define-fun of_array ((a (Array Int natural)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep2 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep2 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int natural)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int natural)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int natural)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep2 (first (rt x))) (to_rep2 (last (rt x))) (elts y) (to_rep2 (first (rt y))) (to_rep2 (last (rt y)))))
(declare-fun user_eq4 (us_t us_t) Bool)
(declare-const dummy4 us_t)
(declare-datatypes () ((nat_array__ref (mk_nat_array__ref (nat_array__content us_t)))))
(define-fun nat_array__ref___projection ((a nat_array__ref)) us_t (nat_array__content a))
(define-fun dynamic_invariant2 ((temp___expr_148 us_t) (temp___is_init_145 Bool) (temp___skip_constant_146 Bool) (temp___do_toplevel_147 Bool)) Bool (=> (not (= temp___skip_constant_146 true)) (dynamic_property 1 100 (first1 temp___expr_148) (last1 temp___expr_148))))
(declare-fun invariant__ (us_t) Bool)
(declare-fun invariant____function_guard (Bool us_t) Bool)
(assert true)
(assert (forall ((a us_t)) (! (= (= (invariant__ a) true) (and (= (first1 a) 1) (<= 0 (last1 a)))) :pattern ((invariant__ a)))))
(declare-fun remove (us_t Int) us_t)
(declare-fun remove__function_guard (us_t us_t Int) Bool)
(assert (forall ((a us_t)) (forall ((i Int)) (! (=> (and (and (dynamic_invariant2 a true true true) (dynamic_invariant1 i true true true)) (and (= (invariant__ a) true) (and (<= (first1 a) i) (<= i (last1 a))))) (let ((result (remove a i))) (and (and (= (invariant__ result) true) (and (= (last1 result) (- (last1 a) 1)) (and (forall ((k Int)) (=> (and (<= 1 k) (<= k (- i 1))) (= (to_rep (select (to_array a) k)) (to_rep (select (to_array result) k))))) (and (forall ((k Int)) (=> (and (<= (+ i 1) k) (<= k (last1 a))) (= (to_rep (select (to_array a) k)) (to_rep (select (to_array result) (- k 1)))))) (forall ((k Int)) (=> (and (<= i k) (<= k (- (last1 a) 1))) (= (to_rep (select (to_array a) (+ k 1))) (to_rep (select (to_array result) k))))))))) (dynamic_invariant2 result true false true)))) :pattern ((remove a i))))))
(declare-fun remove_swap (us_t Int Int) Int)
(declare-fun remove_swap__function_guard (Int us_t Int Int) Bool)
(assert (forall ((a us_t)) (forall ((i1 Int) (i2 Int)) (! (=> (and (and (and (dynamic_invariant2 a true true true) (dynamic_invariant1 i1 true true true)) (dynamic_invariant1 i2 true true true)) (and (= (invariant__ a) true) (and (and (<= (first1 a) i1) (<= i1 (last1 a))) (and (and (<= (first1 a) i2) (<= i2 (last1 a))) (< i1 i2))))) (let ((result (remove_swap a i1 i2))) (and (=> (= (of_int result) true) (= (let ((temp___160 (remove (remove a i2) i1))) (let ((temp___159 (remove (remove a i1) (- i2 1)))) (bool_eq (to_array temp___159) (first1 temp___159) (last1 temp___159) (to_array temp___160) (first1 temp___160) (last1 temp___160)))) true)) (dynamic_invariant result true false true)))) :pattern ((remove_swap a i1 i2))))))
(declare-fun is_perm (us_t us_t) Bool)
(declare-fun is_perm__function_guard (Bool us_t us_t) Bool)
(assert (forall ((a us_t) (b us_t)) (! (= (= (is_perm a b) true) (or (and (= (length a) 0) (= (length b) 0)) (exists ((ia Int)) (and (and (<= (first1 a) ia) (<= ia (last1 a))) (exists ((ib Int)) (and (and (<= (first1 b) ib) (<= ib (last1 b))) (and (= (to_rep (select (to_array a) ia)) (to_rep (select (to_array b) ib))) (= (is_perm (remove a ia) (remove b ib)) true)))))))) :pattern ((is_perm a b)))))
(declare-fun get_witness (us_t us_t Int) Int)
(declare-fun get_witness__function_guard (Int us_t us_t Int) Bool)
(assert (forall ((a us_t) (b us_t)) (forall ((ia Int)) (! (=> (and (and (and (dynamic_invariant2 a true true true) (dynamic_invariant2 b true true true)) (dynamic_invariant1 ia true true true)) (and (= (invariant__ a) true) (and (= (invariant__ b) true) (and (and (<= (first1 a) ia) (<= ia (last1 a))) (exists ((ib Int)) (and (and (<= (first1 b) ib) (<= ib (last1 b))) (and (= (to_rep (select (to_array a) ia)) (to_rep (select (to_array b) ib))) (= (is_perm (remove a ia) (remove b ib)) true)))))))) (let ((result (get_witness a b ia))) (and (and (and (<= (first1 b) result) (<= result (last1 b))) (and (= (to_rep (select (to_array a) ia)) (to_rep (select (to_array b) result))) (= (is_perm (remove a ia) (remove b result)) true))) (dynamic_invariant1 result true false true)))) :pattern ((get_witness a b ia))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__perm__witnesses__ia index) (rec__perm__witnesses__ib index)))))
(define-fun us_split_fields_Ia__projection ((a us_split_fields)) index (rec__perm__witnesses__ia a))
(define-fun us_split_fields_Ib__projection ((a us_split_fields)) index (rec__perm__witnesses__ib a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 a))) (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 b)))) (= (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 a))) (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const perm__witnesses__ia__first__bit Int)
(declare-const perm__witnesses__ia__last__bit Int)
(declare-const perm__witnesses__ia__position Int)
(assert (<= 0 perm__witnesses__ia__first__bit))
(assert (< perm__witnesses__ia__first__bit perm__witnesses__ia__last__bit))
(assert (<= 0 perm__witnesses__ia__position))
(declare-const perm__witnesses__ib__first__bit Int)
(declare-const perm__witnesses__ib__last__bit Int)
(declare-const perm__witnesses__ib__position Int)
(assert (<= 0 perm__witnesses__ib__first__bit))
(assert (< perm__witnesses__ib__first__bit perm__witnesses__ib__last__bit))
(assert (<= 0 perm__witnesses__ib__position))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((witnesses__ref (mk_witnesses__ref (witnesses__content us_rep)))))
(define-fun witnesses__ref___projection ((a witnesses__ref)) us_rep (witnesses__content a))
(declare-fun get_witnesses (us_t us_t) us_rep)
(declare-fun get_witnesses__function_guard (us_rep us_t us_t) Bool)
(assert (forall ((a us_t) (b us_t)) (! (=> (and (and (dynamic_invariant2 a true true true) (dynamic_invariant2 b true true true)) (and (= (invariant__ a) true) (and (= (invariant__ b) true) (and (= (is_perm a b) true) (< 0 (length a)))))) (let ((result (get_witnesses a b))) (and (and (<= (first1 a) (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 result)))) (<= (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 result))) (last1 a))) (and (and (<= (first1 b) (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 result)))) (<= (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 result))) (last1 b))) (and (= (to_rep (select (to_array a) (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 result))))) (to_rep (select (to_array b) (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 result)))))) (= (is_perm (remove a (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 result)))) (remove b (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 result))))) true)))))) :pattern ((get_witnesses a b)))))
(declare-fun shift_perm_l (us_t us_t us_t) Int)
(declare-fun shift_perm_l__function_guard (Int us_t us_t us_t) Bool)
(assert (forall ((a us_t) (b us_t) (c us_t)) (! (=> (and (and (and (dynamic_invariant2 a true true true) (dynamic_invariant2 b true true true)) (dynamic_invariant2 c true true true)) (and (= (invariant__ a) true) (and (= (invariant__ b) true) (and (= (invariant__ c) true) (and (= (bool_eq (to_array a) (first1 a) (last1 a) (to_array c) (first1 c) (last1 c)) true) (= (is_perm a b) true)))))) (let ((result (shift_perm_l a b c))) (and (=> (= (of_int result) true) (= (is_perm c b) true)) (dynamic_invariant result true false true)))) :pattern ((shift_perm_l a b c)))))
(declare-fun shift_perm_r (us_t us_t us_t) Int)
(declare-fun shift_perm_r__function_guard (Int us_t us_t us_t) Bool)
(assert (forall ((a us_t) (b us_t) (c us_t)) (! (=> (and (and (and (dynamic_invariant2 a true true true) (dynamic_invariant2 b true true true)) (dynamic_invariant2 c true true true)) (and (= (invariant__ a) true) (and (= (invariant__ b) true) (and (= (invariant__ c) true) (and (= (bool_eq (to_array c) (first1 c) (last1 c) (to_array b) (first1 b) (last1 b)) true) (= (is_perm a b) true)))))) (let ((result (shift_perm_r a b c))) (and (=> (= (of_int result) true) (= (is_perm a c) true)) (dynamic_invariant result true false true)))) :pattern ((shift_perm_r a b c)))))
(declare-const a us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const b us_t)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-fun extended_perm (us_t us_t) Int)
(declare-fun extended_perm__function_guard (Int us_t us_t) Bool)
(declare-const w us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const aa us_t)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const bb us_t)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t125b__ref (mk_t125b__ref (t125b__content integer)))))
(define-fun t125b__ref___projection ((a1 t125b__ref)) integer (t125b__content a1))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(define-fun dynamic_invariant3 ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range2 temp___expr_33)))
(define-fun dynamic_invariant4 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(assert (= w (get_witnesses a b)))
(assert (= aa (remove a (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))))))
(assert (= bb (remove b (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w))))))
(declare-const ih Int)
(declare-const ia Int)
(declare-const ib Int)
(declare-const perm__extended_perm__result Int)
(declare-const perm__extended_perm__B_6__w__assume index)
(declare-const perm__extended_perm__B_6__w__assume1 index)
(declare-const perm__extended_perm__B_6__aa__assume (Array Int natural))
(declare-const perm__extended_perm__B_6__aa__assume1 t)
(declare-const perm__extended_perm__B_6__bb__assume (Array Int natural))
(declare-const perm__extended_perm__B_6__bb__assume1 t)
(declare-const o Int)
(declare-const temp___595 Int)
(declare-const temp___594 Int)
(declare-const temp___593 Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 (Array Int natural))
(declare-const o7 t)
(declare-const o8 (Array Int natural))
(declare-const o9 t)
(declare-const o10 Int)
(declare-const o11 (Array Int natural))
(declare-const o12 t)
(declare-const o13 Int)
(declare-const o14 (Array Int natural))
(declare-const o15 t)
(declare-const o16 Int)
(declare-const o17 Int)
(declare-const o18 Int)
(declare-const o19 (Array Int natural))
(declare-const o20 t)
(declare-const o21 Int)
(declare-const o22 (Array Int natural))
(declare-const o23 t)
(declare-const o24 (Array Int natural))
(declare-const o25 t)
(declare-const o26 (Array Int natural))
(declare-const o27 t)
(declare-const o28 Int)
(declare-const o29 (Array Int natural))
(declare-const o30 t)
(declare-const o31 Int)
(declare-const o32 Int)
(declare-const o33 (Array Int natural))
(declare-const o34 t)
(declare-const o35 Int)
(declare-const o36 (Array Int natural))
(declare-const o37 t)
(declare-const o38 (Array Int natural))
(declare-const o39 t)
(declare-const o40 Int)
(declare-const o41 (Array Int natural))
(declare-const o42 t)
(declare-const us Bool)
(declare-const o43 Int)
(declare-const o44 us_t)
(declare-const o45 us_t)
(declare-const us1 Bool)
(declare-const o46 Int)
(declare-const o47 Int)
(declare-const o48 Int)
(declare-const o49 us_t)
(declare-const o50 Int)
(declare-const o51 us_t)
(declare-const o52 Int)
(declare-const o53 us_t)
(declare-const o54 us_t)
(declare-const o55 us_t)
(declare-const o56 Int)
(declare-const o57 Int)
(declare-const o58 us_t)
(declare-const o59 Int)
(declare-const o60 us_t)
(declare-const o61 us_t)
(declare-const o62 us_t)
(declare-const us2 Bool)
(declare-const o63 Int)
(declare-const o64 us_t)
(declare-const o65 us_t)
(declare-const us3 Bool)
(declare-const o66 Int)
(declare-const o67 Int)
(declare-const o68 Int)
(declare-const o69 Int)
(declare-const o70 Int)
(declare-const o71 Int)
(declare-const o72 Int)
(declare-const o73 us_t)
(declare-const o74 us_t)
(declare-const o75 Int)
(declare-const o76 us_t)
(declare-const o77 us_t)
(declare-const o78 Int)
(declare-const o79 Int)
(declare-const o80 Int)
(declare-const o81 us_t)
(declare-const o82 us_t)
(declare-const o83 us_t)
(declare-const o84 us_t)
(declare-const o85 Int)
(declare-const o86 us_t)
(declare-const o87 Int)
(declare-const o88 Int)
(declare-const o89 us_t)
(declare-const o90 us_t)
(declare-const o91 us_t)
(declare-const o92 Int)
(declare-const o93 us_t)
(declare-const us4 Bool)
(declare-const o94 Int)
(declare-const o95 us_t)
(declare-const o96 us_t)
(declare-const us5 Bool)
(declare-const o97 Int)
(declare-const o98 Int)
(declare-const o99 Int)
(declare-const o100 us_t)
(declare-const o101 us_t)
(declare-const o102 Int)
(declare-const o103 us_t)
(declare-const o104 us_t)
(declare-const o105 us_t)
(declare-const o106 Int)
(declare-const o107 Int)
(declare-const o108 us_t)
(declare-const o109 us_t)
(declare-const o110 us_t)
(declare-const o111 us_t)
(declare-const us6 Bool)
(declare-const o112 Int)
(declare-const o113 us_t)
(declare-const o114 us_t)
(declare-const us7 Bool)
(declare-const ib1 Int)
(declare-const o115 Int)
(declare-const o116 us_t)
(declare-const o117 Int)
(declare-const o118 us_t)
(declare-const o119 Int)
(declare-const o120 natural)
(declare-const o121 Int)
(declare-const o122 natural)
(declare-const o123 Int)
(declare-const o124 Int)
(declare-const k Int)
(declare-const ib2 Int)
(declare-const o125 Int)
(declare-const o126 us_t)
(declare-const o127 Int)
(declare-const o128 us_t)
(declare-const o129 Int)
(declare-const o130 natural)
(declare-const o131 Int)
(declare-const o132 natural)
(declare-const o133 Int)
(declare-const o134 Int)
(declare-const o135 Int)
(declare-const o136 Int)
(declare-const o137 Int)
(declare-const o138 Int)
(declare-const o139 Int)
(declare-const o140 us_t)
(declare-const o141 us_t)
(declare-const o142 Int)
(declare-const o143 us_t)
(declare-const o144 Int)
(declare-const o145 us_t)
(declare-const o146 Int)
(declare-const o147 Int)
(declare-const o148 Int)
(declare-const o149 us_t)
(declare-const o150 Int)
(declare-const o151 us_t)
(declare-const o152 us_t)
(declare-const o153 us_t)
(declare-const o154 Int)
(declare-const o155 us_t)
(declare-const o156 Int)
(declare-const o157 Int)
(declare-const o158 us_t)
(declare-const o159 Int)
(declare-const o160 us_t)
(declare-const o161 us_t)
(declare-const o162 Int)
(declare-const o163 us_t)
(declare-const us8 Bool)
(declare-const o164 Int)
(declare-const o165 us_t)
(declare-const o166 us_t)
(declare-const us9 Bool)
(declare-const o167 Int)
(declare-const o168 Int)
(declare-const o169 Int)
(declare-const o170 us_t)
(declare-const o171 Int)
(declare-const o172 us_t)
(declare-const o173 Int)
(declare-const o174 us_t)
(declare-const o175 us_t)
(declare-const o176 us_t)
(declare-const o177 Int)
(declare-const o178 Int)
(declare-const o179 us_t)
(declare-const o180 Int)
(declare-const o181 us_t)
(declare-const o182 us_t)
(declare-const o183 us_t)
(declare-const us10 Bool)
(declare-const o184 Int)
(declare-const o185 us_t)
(declare-const o186 us_t)
(declare-const us11 Bool)
(declare-const o187 Int)
(declare-const o188 Int)
(declare-const o189 Int)
(declare-const o190 Int)
(declare-const o191 Int)
(declare-const o192 Int)
(declare-const o193 Int)
(declare-const o194 us_t)
(declare-const o195 us_t)
(declare-const o196 Int)
(declare-const o197 us_t)
(declare-const o198 us_t)
(declare-const o199 Int)
(declare-const o200 Int)
(declare-const o201 Int)
(declare-const o202 us_t)
(declare-const o203 us_t)
(declare-const o204 us_t)
(declare-const o205 us_t)
(declare-const o206 Int)
(declare-const o207 us_t)
(declare-const o208 Int)
(declare-const o209 Int)
(declare-const o210 us_t)
(declare-const o211 us_t)
(declare-const o212 us_t)
(declare-const o213 Int)
(declare-const o214 us_t)
(declare-const us12 Bool)
(declare-const o215 Int)
(declare-const o216 us_t)
(declare-const o217 us_t)
(declare-const us13 Bool)
(declare-const o218 Int)
(declare-const o219 Int)
(declare-const o220 Int)
(declare-const o221 us_t)
(declare-const o222 us_t)
(declare-const o223 Int)
(declare-const o224 us_t)
(declare-const o225 us_t)
(declare-const o226 us_t)
(declare-const o227 Int)
(declare-const o228 Int)
(declare-const o229 us_t)
(declare-const o230 us_t)
(declare-const o231 us_t)
(declare-const o232 us_t)
(declare-const us14 Bool)
(declare-const o233 Int)
(declare-const o234 us_t)
(declare-const o235 us_t)
(declare-const us15 Bool)
(declare-const ib3 Int)
(declare-const o236 Int)
(declare-const o237 us_t)
(declare-const o238 Int)
(declare-const o239 us_t)
(declare-const o240 Int)
(declare-const o241 natural)
(declare-const o242 Int)
(declare-const o243 natural)
(declare-const o244 Int)
(declare-const o245 Int)
(declare-const ia1 Int)
(declare-const ib4 Int)
(declare-const o246 Int)
(declare-const o247 us_t)
(declare-const o248 Int)
(declare-const o249 us_t)
(declare-const o250 Int)
(declare-const o251 natural)
(declare-const o252 Int)
(declare-const o253 natural)
(declare-const o254 Int)
(declare-const o255 Int)
(declare-const ih1 Int)
(declare-const ia2 Int)
(declare-const ib5 Int)
(declare-const perm__extended_perm__result1 Int)
(declare-const result Bool)
(declare-const result1 Bool)
(declare-const result2 int__ref)
(declare-const perm__extended_perm__result2 Int)
(declare-const result3 int__ref)
(declare-const ih2 Int)
(declare-const result4 int__ref)
(declare-const ia3 Int)
(declare-const result5 int__ref)
(declare-const ib6 Int)
(declare-const result6 int__ref)
(declare-const ih3 Int)
(declare-const result7 int__ref)
(declare-const ib7 Int)
(declare-const result8 int__ref)
(declare-const ih4 Int)
(declare-const result9 int__ref)
(declare-const ih5 Int)
(declare-const result10 int__ref)
(declare-const ih6 Int)
(declare-const result11 int__ref)
(declare-const ib8 Int)
(declare-const result12 int__ref)
(declare-const ih7 Int)
(declare-const result13 int__ref)
(declare-const ih8 Int)
(declare-const result14 int__ref)
(declare-const ih9 Int)
(declare-const result15 int__ref)
(declare-const ib9 Int)
(declare-const result16 int__ref)
(declare-const ih10 Int)
(declare-const result17 int__ref)
(declare-const ih11 Int)
(declare-const result18 int__ref)
(declare-const ih12 Int)
(declare-const result19 int__ref)
(declare-const ib10 Int)
(declare-const result20 int__ref)
(declare-const ih13 Int)
(declare-const result21 int__ref)
(declare-const ih14 Int)
(declare-const result22 Bool)
(declare-const ih15 Int)
(declare-const ia4 Int)
(declare-const ib11 Int)
(declare-const result23 Bool)
(declare-const result24 int__ref)
(declare-const ia5 Int)
(declare-const result25 int__ref)
(declare-const ib12 Int)
(declare-const result26 int__ref)
(declare-const ih16 Int)
(declare-const result27 int__ref)
(declare-const ib13 Int)
(declare-const result28 int__ref)
(declare-const ih17 Int)
(declare-const result29 int__ref)
(declare-const ih18 Int)
(declare-const result30 int__ref)
(declare-const ih19 Int)
(declare-const result31 int__ref)
(declare-const ib14 Int)
(declare-const result32 int__ref)
(declare-const ih20 Int)
(declare-const result33 int__ref)
(declare-const ih21 Int)
(declare-const result34 int__ref)
(declare-const ih22 Int)
(declare-const result35 int__ref)
(declare-const ib15 Int)
(declare-const result36 int__ref)
(declare-const ih23 Int)
(declare-const result37 int__ref)
(declare-const ih24 Int)
(declare-const result38 int__ref)
(declare-const ih25 Int)
(declare-const result39 int__ref)
(declare-const ib16 Int)
(declare-const result40 int__ref)
(declare-const ih26 Int)
(declare-const result41 int__ref)
(declare-const ih27 Int)
(declare-const result42 Bool)
(declare-const ih28 int__ref)
(declare-const ia6 int__ref)
(declare-const ib17 int__ref)
(declare-const ih29 Int)
(declare-const ia7 Int)
(declare-const ib18 Int)
(declare-const ih30 int__ref)
(declare-const ia8 int__ref)
(declare-const ib19 int__ref)
(declare-const ih31 Int)
(declare-const ia9 Int)
(declare-const ib20 Int)
(declare-const ih32 int__ref)
(declare-const ia10 int__ref)
(declare-const ib21 int__ref)
(declare-const ih33 Int)
(declare-const ia11 Int)
(declare-const ib22 Int)
(declare-const result43 int__ref)
(declare-const perm__extended_perm__result3 Int)
(declare-const ih34 int__ref)
(declare-const ia12 int__ref)
(declare-const ib23 int__ref)
(declare-const perm__extended_perm__result4 int__ref)
(declare-const ih35 Int)
(declare-const ia13 Int)
(declare-const ib24 Int)
(declare-const perm__extended_perm__result5 Int)
(declare-const ih36 int__ref)
(declare-const ia14 int__ref)
(declare-const ib25 int__ref)
(declare-const perm__extended_perm__result6 int__ref)
(declare-const ih37 Int)
(declare-const ia15 Int)
(declare-const ib26 Int)
(declare-const perm__extended_perm__result7 Int)
(declare-const ih38 int__ref)
(declare-const ia16 int__ref)
(declare-const ib27 int__ref)
(declare-const perm__extended_perm__result8 int__ref)
(declare-const ih39 Int)
(declare-const ia17 Int)
(declare-const ib28 Int)
(declare-const perm__extended_perm__result9 Int)
(declare-const result44 Bool)
(assert (dynamic_invariant2 a true false true))
(assert (dynamic_invariant2 b true false true))
(assert (and (= (invariant__ a) true) (and (= (invariant__ b) true) (= (is_perm a b) true))))
(assert (not (= (length a) 0)))
(assert (= perm__extended_perm__result2 perm__extended_perm__result))
(assert (= perm__extended_perm__result2 perm__extended_perm__result1))
(assert (and (= (mk___rep (mk___split_fields perm__extended_perm__B_6__w__assume perm__extended_perm__B_6__w__assume1)) (get_witnesses a b)) (and (and (<= (to_rep2 (first (rt a))) (to_rep1 perm__extended_perm__B_6__w__assume)) (<= (to_rep1 perm__extended_perm__B_6__w__assume) (to_rep2 (last (rt a))))) (and (and (<= (to_rep2 (first (rt b))) (to_rep1 perm__extended_perm__B_6__w__assume1)) (<= (to_rep1 perm__extended_perm__B_6__w__assume1) (to_rep2 (last (rt b))))) (and (= (to_rep (select (elts a) (to_rep1 perm__extended_perm__B_6__w__assume))) (to_rep (select (elts b) (to_rep1 perm__extended_perm__B_6__w__assume1)))) (= (is_perm (remove a (to_rep1 perm__extended_perm__B_6__w__assume)) (remove b (to_rep1 perm__extended_perm__B_6__w__assume1))) true))))))
(assert (= (mk___rep (mk___split_fields perm__extended_perm__B_6__w__assume perm__extended_perm__B_6__w__assume1)) w))
(assert (and (= (mk___t perm__extended_perm__B_6__aa__assume perm__extended_perm__B_6__aa__assume1) (remove a (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))))) (and (dynamic_invariant2 (mk___t perm__extended_perm__B_6__aa__assume perm__extended_perm__B_6__aa__assume1) true false true) (and (= (invariant__ (mk___t perm__extended_perm__B_6__aa__assume perm__extended_perm__B_6__aa__assume1)) true) (and (= (to_rep2 (last perm__extended_perm__B_6__aa__assume1)) (- (to_rep2 (last (rt a))) 1)) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 (- (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))) 1))) (= (to_rep (select (elts a) k1)) (to_rep (select perm__extended_perm__B_6__aa__assume k1))))) (and (forall ((k1 Int)) (=> (and (<= (+ (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))) 1) k1) (<= k1 (to_rep2 (last (rt a))))) (= (to_rep (select (elts a) k1)) (to_rep (select perm__extended_perm__B_6__aa__assume (- k1 1)))))) (forall ((k1 Int)) (=> (and (<= (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))) k1) (<= k1 (- (to_rep2 (last (rt a))) 1))) (= (to_rep (select (elts a) (+ k1 1))) (to_rep (select perm__extended_perm__B_6__aa__assume k1))))))))))))
(assert (= (mk___t perm__extended_perm__B_6__aa__assume perm__extended_perm__B_6__aa__assume1) aa))
(assert (dynamic_invariant2 aa true false true))
(assert (and (= (mk___t perm__extended_perm__B_6__bb__assume perm__extended_perm__B_6__bb__assume1) (remove b (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w))))) (and (dynamic_invariant2 (mk___t perm__extended_perm__B_6__bb__assume perm__extended_perm__B_6__bb__assume1) true false true) (and (= (invariant__ (mk___t perm__extended_perm__B_6__bb__assume perm__extended_perm__B_6__bb__assume1)) true) (and (= (to_rep2 (last perm__extended_perm__B_6__bb__assume1)) (- (to_rep2 (last (rt b))) 1)) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 (- (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w))) 1))) (= (to_rep (select (elts b) k1)) (to_rep (select perm__extended_perm__B_6__bb__assume k1))))) (and (forall ((k1 Int)) (=> (and (<= (+ (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w))) 1) k1) (<= k1 (to_rep2 (last (rt b))))) (= (to_rep (select (elts b) k1)) (to_rep (select perm__extended_perm__B_6__bb__assume (- k1 1)))))) (forall ((k1 Int)) (=> (and (<= (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w))) k1) (<= k1 (- (to_rep2 (last (rt b))) 1))) (= (to_rep (select (elts b) (+ k1 1))) (to_rep (select perm__extended_perm__B_6__bb__assume k1))))))))))))
(assert (= (mk___t perm__extended_perm__B_6__bb__assume perm__extended_perm__B_6__bb__assume1) bb))
(assert (dynamic_invariant2 bb true false true))
(assert (and (= o (extended_perm aa bb)) (and (in_range3 o) (=> (= (of_int o) true) (forall ((ia18 Int)) (=> (and (<= (to_rep2 (first (rt aa))) ia18) (<= ia18 (to_rep2 (last (rt aa))))) (exists ((ib29 Int)) (and (and (<= (to_rep2 (first (rt bb))) ib29) (<= ib29 (to_rep2 (last (rt bb))))) (and (= (to_rep (select (elts aa) ia18)) (to_rep (select (elts bb) ib29))) (= (is_perm (remove aa ia18) (remove bb ib29)) true))))))))))
(assert (= result3 (mk_int__ref ih)))
(assert (= ih2 o))
(assert (in_range3 ih2))
(assert (= (of_int ih2) true))
(assert (= result4 (mk_int__ref ia)))
(assert (= ia3 (to_rep2 (first (rt a)))))
(assert (<= (to_rep2 (first (rt a))) ia3))
(assert (<= ia3 (to_rep2 (last (rt a)))))
(assert (=> (<= 1 100) (in_range4 ib)))
(assert (not (= ia3 (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))))))
(assert (not (< ia3 (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))))))
(assert (and (= o66 ia3) (in_range4 ia3)))
(assert (and (= o67 (remove_swap a (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))) o66)) (and (in_range3 o67) (=> (= (of_int o67) true) (= (let ((temp___157 (remove (remove a o66) (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w)))))) (let ((temp___156 (remove (remove a (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w)))) (- o66 1)))) (bool_eq (elts temp___156) (to_rep2 (first (rt temp___156))) (to_rep2 (last (rt temp___156))) (elts temp___157) (to_rep2 (first (rt temp___157))) (to_rep2 (last (rt temp___157)))))) true)))))
(assert (= result14 (mk_int__ref ih2)))
(assert (= ih9 o67))
(assert (= (of_int ih9) true))
(assert (and (= o68 (- ia3 1)) (in_range1 (- ia3 1))))
(assert (and (= o69 o68) (in_range4 o68)))
(assert (and (= o70 (get_witness aa bb o69)) (and (in_range4 o70) (and (and (<= (to_rep2 (first (rt bb))) o70) (<= o70 (to_rep2 (last (rt bb))))) (and (= (to_rep (select (elts aa) o69)) (to_rep (select (elts bb) o70))) (= (is_perm (remove aa o69) (remove bb o70)) true))))))
(assert (= result15 (mk_int__ref ib)))
(assert (= ib9 o70))
(assert (and (= o75 ia3) (in_range4 ia3)))
(assert (and (= o76 (remove a o75)) (and (dynamic_invariant2 o76 true false true) (and (= (invariant__ o76) true) (and (= (to_rep2 (last (rt o76))) (- (to_rep2 (last (rt a))) 1)) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 (- o75 1))) (= (to_rep (select (elts a) k1)) (to_rep (select (elts o76) k1))))) (and (forall ((k1 Int)) (=> (and (<= (+ o75 1) k1) (<= k1 (to_rep2 (last (rt a))))) (= (to_rep (select (elts a) k1)) (to_rep (select (elts o76) (- k1 1)))))) (forall ((k1 Int)) (=> (and (<= o75 k1) (<= k1 (- (to_rep2 (last (rt a))) 1))) (= (to_rep (select (elts a) (+ k1 1))) (to_rep (select (elts o76) k1))))))))))))
(assert (and (= o77 (remove o76 (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))))) (and (dynamic_invariant2 o77 true false true) (and (= (invariant__ o77) true) (and (= (to_rep2 (last (rt o77))) (- (to_rep2 (last (rt o76))) 1)) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 (- (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))) 1))) (= (to_rep (select (elts o76) k1)) (to_rep (select (elts o77) k1))))) (and (forall ((k1 Int)) (=> (and (<= (+ (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))) 1) k1) (<= k1 (to_rep2 (last (rt o76))))) (= (to_rep (select (elts o76) k1)) (to_rep (select (elts o77) (- k1 1)))))) (forall ((k1 Int)) (=> (and (<= (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))) k1) (<= k1 (- (to_rep2 (last (rt o76))) 1))) (= (to_rep (select (elts o76) (+ k1 1))) (to_rep (select (elts o77) k1))))))))))))
(assert (and (= o74 (remove bb ib9)) (and (dynamic_invariant2 o74 true false true) (and (= (invariant__ o74) true) (and (= (to_rep2 (last (rt o74))) (- (to_rep2 (last (rt bb))) 1)) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 (- ib9 1))) (= (to_rep (select (elts bb) k1)) (to_rep (select (elts o74) k1))))) (and (forall ((k1 Int)) (=> (and (<= (+ ib9 1) k1) (<= k1 (to_rep2 (last (rt bb))))) (= (to_rep (select (elts bb) k1)) (to_rep (select (elts o74) (- k1 1)))))) (forall ((k1 Int)) (=> (and (<= ib9 k1) (<= k1 (- (to_rep2 (last (rt bb))) 1))) (= (to_rep (select (elts bb) (+ k1 1))) (to_rep (select (elts o74) k1))))))))))))
(assert (and (= o71 (- ia3 1)) (in_range1 (- ia3 1))))
(assert (and (= o72 o71) (in_range4 o71)))
(assert (and (= o73 (remove aa o72)) (and (dynamic_invariant2 o73 true false true) (and (= (invariant__ o73) true) (and (= (to_rep2 (last (rt o73))) (- (to_rep2 (last (rt aa))) 1)) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 (- o72 1))) (= (to_rep (select (elts aa) k1)) (to_rep (select (elts o73) k1))))) (and (forall ((k1 Int)) (=> (and (<= (+ o72 1) k1) (<= k1 (to_rep2 (last (rt aa))))) (= (to_rep (select (elts aa) k1)) (to_rep (select (elts o73) (- k1 1)))))) (forall ((k1 Int)) (=> (and (<= o72 k1) (<= k1 (- (to_rep2 (last (rt aa))) 1))) (= (to_rep (select (elts aa) (+ k1 1))) (to_rep (select (elts o73) k1))))))))))))
(assert (and (= o78 (shift_perm_l o73 o74 o77)) (and (in_range3 o78) (=> (= (of_int o78) true) (= (is_perm o77 o74) true)))))
(assert (= result16 (mk_int__ref ih9)))
(assert (= ih10 o78))
(assert (= (of_int ih10) true))
(assert (not (< ib9 (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w))))))
(assert (and (= o97 (+ ib9 1)) (in_range4 (+ ib9 1))))
(assert (= result19 (mk_int__ref ib9)))
(assert (= ib10 o97))
(assert (and (= o98 (remove_swap b (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w))) ib10)) (and (in_range3 o98) (=> (= (of_int o98) true) (= (let ((temp___157 (remove (remove b ib10) (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w)))))) (let ((temp___156 (remove (remove b (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w)))) (- ib10 1)))) (bool_eq (elts temp___156) (to_rep2 (first (rt temp___156))) (to_rep2 (last (rt temp___156))) (elts temp___157) (to_rep2 (first (rt temp___157))) (to_rep2 (last (rt temp___157)))))) true)))))
(assert (= result20 (mk_int__ref ih10)))
(assert (= ih13 o98))
(assert (= (of_int ih13) true))
(assert (and (= o104 (remove b ib10)) (and (dynamic_invariant2 o104 true false true) (and (= (invariant__ o104) true) (and (= (to_rep2 (last (rt o104))) (- (to_rep2 (last (rt b))) 1)) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 (- ib10 1))) (= (to_rep (select (elts b) k1)) (to_rep (select (elts o104) k1))))) (and (forall ((k1 Int)) (=> (and (<= (+ ib10 1) k1) (<= k1 (to_rep2 (last (rt b))))) (= (to_rep (select (elts b) k1)) (to_rep (select (elts o104) (- k1 1)))))) (forall ((k1 Int)) (=> (and (<= ib10 k1) (<= k1 (- (to_rep2 (last (rt b))) 1))) (= (to_rep (select (elts b) (+ k1 1))) (to_rep (select (elts o104) k1))))))))))))
(assert (and (= o105 (remove o104 (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w))))) (and (dynamic_invariant2 o105 true false true) (and (= (invariant__ o105) true) (and (= (to_rep2 (last (rt o105))) (- (to_rep2 (last (rt o104))) 1)) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 (- (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w))) 1))) (= (to_rep (select (elts o104) k1)) (to_rep (select (elts o105) k1))))) (and (forall ((k1 Int)) (=> (and (<= (+ (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w))) 1) k1) (<= k1 (to_rep2 (last (rt o104))))) (= (to_rep (select (elts o104) k1)) (to_rep (select (elts o105) (- k1 1)))))) (forall ((k1 Int)) (=> (and (<= (to_rep1 (rec__perm__witnesses__ib (us_split_fields1 w))) k1) (<= k1 (- (to_rep2 (last (rt o104))) 1))) (= (to_rep (select (elts o104) (+ k1 1))) (to_rep (select (elts o105) k1))))))))))))
(assert (and (= o102 (- ib10 1)) (in_range4 (- ib10 1))))
(assert (and (= o103 (remove bb o102)) (and (dynamic_invariant2 o103 true false true) (and (= (invariant__ o103) true) (and (= (to_rep2 (last (rt o103))) (- (to_rep2 (last (rt bb))) 1)) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 (- o102 1))) (= (to_rep (select (elts bb) k1)) (to_rep (select (elts o103) k1))))) (and (forall ((k1 Int)) (=> (and (<= (+ o102 1) k1) (<= k1 (to_rep2 (last (rt bb))))) (= (to_rep (select (elts bb) k1)) (to_rep (select (elts o103) (- k1 1)))))) (forall ((k1 Int)) (=> (and (<= o102 k1) (<= k1 (- (to_rep2 (last (rt bb))) 1))) (= (to_rep (select (elts bb) (+ k1 1))) (to_rep (select (elts o103) k1))))))))))))
(assert (and (= o99 ia3) (in_range4 ia3)))
(assert (and (= o100 (remove a o99)) (and (dynamic_invariant2 o100 true false true) (and (= (invariant__ o100) true) (and (= (to_rep2 (last (rt o100))) (- (to_rep2 (last (rt a))) 1)) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 (- o99 1))) (= (to_rep (select (elts a) k1)) (to_rep (select (elts o100) k1))))) (and (forall ((k1 Int)) (=> (and (<= (+ o99 1) k1) (<= k1 (to_rep2 (last (rt a))))) (= (to_rep (select (elts a) k1)) (to_rep (select (elts o100) (- k1 1)))))) (forall ((k1 Int)) (=> (and (<= o99 k1) (<= k1 (- (to_rep2 (last (rt a))) 1))) (= (to_rep (select (elts a) (+ k1 1))) (to_rep (select (elts o100) k1))))))))))))
(assert (and (= o101 (remove o100 (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))))) (and (dynamic_invariant2 o101 true false true) (and (= (invariant__ o101) true) (and (= (to_rep2 (last (rt o101))) (- (to_rep2 (last (rt o100))) 1)) (and (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 (- (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))) 1))) (= (to_rep (select (elts o100) k1)) (to_rep (select (elts o101) k1))))) (and (forall ((k1 Int)) (=> (and (<= (+ (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))) 1) k1) (<= k1 (to_rep2 (last (rt o100))))) (= (to_rep (select (elts o100) k1)) (to_rep (select (elts o101) (- k1 1)))))) (forall ((k1 Int)) (=> (and (<= (to_rep1 (rec__perm__witnesses__ia (us_split_fields1 w))) k1) (<= k1 (- (to_rep2 (last (rt o100))) 1))) (= (to_rep (select (elts o100) (+ k1 1))) (to_rep (select (elts o101) k1))))))))))))
(assert (and (= o106 (shift_perm_r o101 o103 o105)) (and (in_range3 o106) (=> (= (of_int o106) true) (= (is_perm o101 o105) true)))))
(assert (= result21 (mk_int__ref ih13)))
(assert (= ih14 o106))
(assert (not (= (of_int ih14) true)))
(check-sat)
(exit)
