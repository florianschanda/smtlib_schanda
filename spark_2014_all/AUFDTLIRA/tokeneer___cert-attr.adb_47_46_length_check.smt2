(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun concat_singleton_left (character Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a character)) (forall ((b (Array Int character))) (forall ((a_first Int) (b_first Int) (b_last Int)) (! (and (= (select (concat_singleton_left a a_first b b_first b_last) a_first) a) (forall ((i Int)) (! (=> (< a_first i) (= (select (concat_singleton_left a a_first b b_first b_last) i) (select b (+ (- i a_first) (- b_first 1))))) :pattern ((select (concat_singleton_left a a_first b b_first b_last) i))))) :pattern ((concat_singleton_left a a_first b b_first b_last)))))))
(declare-fun concat_singleton_right ((Array Int character) Int Int character) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((b character)) (forall ((a_first Int) (a_last Int)) (! (and (= (select (concat_singleton_right a a_first a_last b) (+ a_last 1)) b) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (concat_singleton_right a a_first a_last b) i) (select a i))) :pattern ((select (concat_singleton_right a a_first a_last b) i)) :pattern ((select a i))))) :pattern ((concat_singleton_right a a_first a_last b)))))))
(declare-fun concat_singletons (character Int character) (Array Int character))
(assert (forall ((a character) (b character)) (forall ((a_first Int)) (! (and (= (select (concat_singletons a a_first b) a_first) a) (= (select (concat_singletons a a_first b) (+ a_first 1)) b)) :pattern ((concat_singletons a a_first b))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq4 (us_t1 us_t1) Bool)
(declare-const dummy4 us_t1)
(declare-datatypes () ((stringf1l1000__ref (mk_stringf1l1000__ref (stringf1l1000__content us_t1)))))
(define-fun stringf1l1000__ref___projection ((a stringf1l1000__ref)) us_t1 (stringf1l1000__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int character)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))
(define-fun of_array2 ((a (Array Int character)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq5 (us_t2 us_t2) Bool)
(declare-const dummy5 us_t2)
(declare-datatypes () ((stringf1l2to1000__ref (mk_stringf1l2to1000__ref (stringf1l2to1000__content us_t2)))))
(define-fun stringf1l2to1000__ref___projection ((a stringf1l2to1000__ref)) us_t2 (stringf1l2to1000__content a))
(declare-sort usertexti 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 50)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq6 (usertexti usertexti) Bool)
(declare-const dummy6 usertexti)
(declare-datatypes () ((usertexti__ref (mk_usertexti__ref (usertexti__content usertexti)))))
(define-fun usertexti__ref___projection ((a usertexti__ref)) usertexti (usertexti__content a))
(declare-sort issueridt 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq7 (issueridt issueridt) Bool)
(declare-const dummy7 issueridt)
(declare-datatypes () ((issueridt__ref (mk_issueridt__ref (issueridt__content issueridt)))))
(define-fun issueridt__ref___projection ((a issueridt__ref)) issueridt (issueridt__content a))
(declare-fun to_rep2 (issueridt) Int)
(declare-fun of_rep2 (Int) issueridt)
(assert (forall ((x issueridt)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x issueridt)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first6 (mk3 f l))) f) (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int character)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int character) (elts3 a))
(define-fun of_array3 ((a (Array Int character)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int character)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int character)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int character)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq4 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first6 (rt3 x))) (to_rep1 (last6 (rt3 x))) (elts3 y) (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))
(declare-fun user_eq8 (us_t3 us_t3) Bool)
(declare-const dummy8 us_t3)
(declare-datatypes () ((stringf1__ref (mk_stringf1__ref (stringf1__content us_t3)))))
(define-fun stringf1__ref___projection ((a stringf1__ref)) us_t3 (stringf1__content a))
(define-fun dynamic_invariant ((temp___expr_336 us_t1) (temp___is_init_332 Bool) (temp___skip_constant_333 Bool) (temp___do_toplevel_334 Bool) (temp___do_typ_inv_335 Bool)) Bool (and (=> (not (= temp___skip_constant_333 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_336) (last3 temp___expr_336))) (=> (= temp___do_toplevel_334 true) (=> (= temp___is_init_332 true) (and (let ((temp___338 (of_array3 (to_array1 temp___expr_336) (first3 temp___expr_336) (last3 temp___expr_336)))) (and (= (first7 temp___338) 1) (<= 0 (last7 temp___338)))) (<= (last3 temp___expr_336) 1000))))))
(define-fun dynamic_predicate ((temp___340 us_t1)) Bool (and (let ((temp___342 (of_array3 (to_array1 temp___340) (first3 temp___340) (last3 temp___340)))) (and (= (first7 temp___342) 1) (<= 0 (last7 temp___342)))) (<= (last3 temp___340) 1000)))
(define-fun dynamic_invariant1 ((temp___expr_977 Int) (temp___is_init_973 Bool) (temp___skip_constant_974 Bool) (temp___do_toplevel_975 Bool) (temp___do_typ_inv_976 Bool)) Bool (=> (or (= temp___is_init_973 true) (<= 0 4294967295)) (in_range4 temp___expr_977)))
(declare-fun issueridt_image (Int) us_t1)
(declare-fun issueridt_image__function_guard (us_t1 Int) Bool)
(assert (forall ((x Int)) (! (=> (dynamic_invariant1 x true true true true) (dynamic_invariant (issueridt_image x) true false true true)) :pattern ((issueridt_image x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant1 x true true true true) (= (issueridt_image x) (let ((temp___983 (to_string (attr__ATTRIBUTE_IMAGE4 x)))) (of_array1 (to_array temp___983) (first1 temp___983) (last1 temp___983))))) :pattern ((issueridt_image x)))))
(declare-sort namecountt 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 40)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq9 (namecountt namecountt) Bool)
(declare-const dummy9 namecountt)
(declare-datatypes () ((namecountt__ref (mk_namecountt__ref (namecountt__content namecountt)))))
(define-fun namecountt__ref___projection ((a namecountt__ref)) namecountt (namecountt__content a))
(declare-fun to_rep3 (namecountt) Int)
(declare-fun of_rep3 (Int) namecountt)
(assert (forall ((x namecountt)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x namecountt)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-const dummy10 (Array Int character))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int character)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int character)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int character)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment4 a))))
(declare-fun user_eq10 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__cryptotypes__issuert__id issueridt) (rec__cryptotypes__issuert__namelength namecountt) (rec__cryptotypes__issuert__name (Array Int character))))))
(define-fun us_split_fields_ID__projection ((a us_split_fields)) issueridt (rec__cryptotypes__issuert__id a))
(define-fun us_split_fields_NameLength__projection ((a us_split_fields)) namecountt (rec__cryptotypes__issuert__namelength a))
(define-fun us_split_fields_Name__projection ((a us_split_fields)) (Array Int character) (rec__cryptotypes__issuert__name a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___4__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq5 ((a us_rep) (b us_rep)) Bool (ite (and (and (= (to_rep2 (rec__cryptotypes__issuert__id (us_split_fields1 a))) (to_rep2 (rec__cryptotypes__issuert__id (us_split_fields1 b)))) (= (to_rep3 (rec__cryptotypes__issuert__namelength (us_split_fields1 a))) (to_rep3 (rec__cryptotypes__issuert__namelength (us_split_fields1 b))))) (= (bool_eq (rec__cryptotypes__issuert__name (us_split_fields1 a)) 1 40 (rec__cryptotypes__issuert__name (us_split_fields1 b)) 1 40) true)) true false))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep)) (<= 0 (object__alignment5 a))))
(declare-const cryptotypes__issuert__id__first__bit Int)
(declare-const cryptotypes__issuert__id__last__bit Int)
(declare-const cryptotypes__issuert__id__position Int)
(assert (<= 0 cryptotypes__issuert__id__first__bit))
(assert (< cryptotypes__issuert__id__first__bit cryptotypes__issuert__id__last__bit))
(assert (<= 0 cryptotypes__issuert__id__position))
(declare-const cryptotypes__issuert__namelength__first__bit Int)
(declare-const cryptotypes__issuert__namelength__last__bit Int)
(declare-const cryptotypes__issuert__namelength__position Int)
(assert (<= 0 cryptotypes__issuert__namelength__first__bit))
(assert (< cryptotypes__issuert__namelength__first__bit cryptotypes__issuert__namelength__last__bit))
(assert (<= 0 cryptotypes__issuert__namelength__position))
(declare-const cryptotypes__issuert__name__first__bit Int)
(declare-const cryptotypes__issuert__name__last__bit Int)
(declare-const cryptotypes__issuert__name__position Int)
(assert (<= 0 cryptotypes__issuert__name__first__bit))
(assert (< cryptotypes__issuert__name__first__bit cryptotypes__issuert__name__last__bit))
(assert (<= 0 cryptotypes__issuert__name__position))
(declare-fun user_eq11 (us_rep us_rep) Bool)
(declare-const dummy11 us_rep)
(declare-datatypes () ((issuert__ref (mk_issuert__ref (issuert__content us_rep)))))
(define-fun issuert__ref___projection ((a issuert__ref)) us_rep (issuert__content a))
(declare-sort serialnumbert 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq12 (serialnumbert serialnumbert) Bool)
(declare-const dummy12 serialnumbert)
(declare-datatypes () ((serialnumbert__ref (mk_serialnumbert__ref (serialnumbert__content serialnumbert)))))
(define-fun serialnumbert__ref___projection ((a serialnumbert__ref)) serialnumbert (serialnumbert__content a))
(declare-fun to_rep4 (serialnumbert) Int)
(declare-fun of_rep4 (Int) serialnumbert)
(assert (forall ((x serialnumbert)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x serialnumbert)) (! (in_range6 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(define-fun dynamic_invariant2 ((temp___expr_349 us_t2) (temp___is_init_345 Bool) (temp___skip_constant_346 Bool) (temp___do_toplevel_347 Bool) (temp___do_typ_inv_348 Bool)) Bool (and (=> (not (= temp___skip_constant_346 true)) (dynamic_property2 1 2147483647 (first5 temp___expr_349) (last5 temp___expr_349))) (=> (= temp___do_toplevel_347 true) (=> (= temp___is_init_345 true) (and (let ((temp___351 (of_array1 (to_array2 temp___expr_349) (first5 temp___expr_349) (last5 temp___expr_349)))) (and (let ((temp___352 (of_array3 (to_array1 temp___351) (first3 temp___351) (last3 temp___351)))) (and (= (first7 temp___352) 1) (<= 0 (last7 temp___352)))) (<= (last3 temp___351) 1000))) (<= 2 (length2 temp___expr_349)))))))
(define-fun dynamic_predicate1 ((temp___354 us_t2)) Bool (and (let ((temp___356 (of_array1 (to_array2 temp___354) (first5 temp___354) (last5 temp___354)))) (and (let ((temp___357 (of_array3 (to_array1 temp___356) (first3 temp___356) (last3 temp___356)))) (and (= (first7 temp___357) 1) (<= 0 (last7 temp___357)))) (<= (last3 temp___356) 1000))) (<= 2 (length2 temp___354))))
(define-fun dynamic_invariant3 ((temp___expr_1476 Int) (temp___is_init_1472 Bool) (temp___skip_constant_1473 Bool) (temp___do_toplevel_1474 Bool) (temp___do_typ_inv_1475 Bool)) Bool (=> (or (= temp___is_init_1472 true) (<= 0 4294967295)) (in_range6 temp___expr_1476)))
(declare-fun serialnumbert_image (Int) us_t2)
(declare-fun serialnumbert_image__function_guard (us_t2 Int) Bool)
(assert (forall ((x Int)) (! (=> (dynamic_invariant3 x true true true true) (dynamic_invariant2 (serialnumbert_image x) true false true true)) :pattern ((serialnumbert_image x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant3 x true true true true) (= (serialnumbert_image x) (let ((temp___1482 (to_string (attr__ATTRIBUTE_IMAGE6 x)))) (of_array2 (to_array temp___1482) (first1 temp___1482) (last1 temp___1482))))) :pattern ((serialnumbert_image x)))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__certtypes__idt__issuer us_rep) (rec__certtypes__idt__serialnumber serialnumbert)))))
(define-fun us_split_fields_Issuer__projection ((a us_split_fields2)) us_rep (rec__certtypes__idt__issuer a))
(define-fun us_split_fields_SerialNumber__projection ((a us_split_fields2)) serialnumbert (rec__certtypes__idt__serialnumber a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___11__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___12__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq6 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (bool_eq5 (rec__certtypes__idt__issuer (us_split_fields3 a)) (rec__certtypes__idt__issuer (us_split_fields3 b))) true) (= (to_rep4 (rec__certtypes__idt__serialnumber (us_split_fields3 a))) (to_rep4 (rec__certtypes__idt__serialnumber (us_split_fields3 b))))) true false))
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep1) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep1) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep1)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment6 a))))
(declare-const certtypes__idt__issuer__first__bit Int)
(declare-const certtypes__idt__issuer__last__bit Int)
(declare-const certtypes__idt__issuer__position Int)
(assert (<= 0 certtypes__idt__issuer__first__bit))
(assert (< certtypes__idt__issuer__first__bit certtypes__idt__issuer__last__bit))
(assert (<= 0 certtypes__idt__issuer__position))
(declare-const certtypes__idt__serialnumber__first__bit Int)
(declare-const certtypes__idt__serialnumber__last__bit Int)
(declare-const certtypes__idt__serialnumber__position Int)
(assert (<= 0 certtypes__idt__serialnumber__first__bit))
(assert (< certtypes__idt__serialnumber__first__bit certtypes__idt__serialnumber__last__bit))
(assert (<= 0 certtypes__idt__serialnumber__position))
(declare-fun user_eq13 (us_rep1 us_rep1) Bool)
(declare-const dummy13 us_rep1)
(declare-datatypes () ((idt__ref (mk_idt__ref (idt__content us_rep1)))))
(define-fun idt__ref___projection ((a idt__ref)) us_rep1 (idt__content a))
(declare-sort yearst 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1901 x) (<= x 2099)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq14 (yearst yearst) Bool)
(declare-const dummy14 yearst)
(declare-datatypes () ((yearst__ref (mk_yearst__ref (yearst__content yearst)))))
(define-fun yearst__ref___projection ((a yearst__ref)) yearst (yearst__content a))
(declare-fun to_rep5 (yearst) Int)
(declare-fun of_rep5 (Int) yearst)
(assert (forall ((x yearst)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x yearst)) (! (in_range7 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-sort monthst 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq15 (monthst monthst) Bool)
(declare-const dummy15 monthst)
(declare-datatypes () ((monthst__ref (mk_monthst__ref (monthst__content monthst)))))
(define-fun monthst__ref___projection ((a monthst__ref)) monthst (monthst__content a))
(declare-fun to_rep6 (monthst) Int)
(declare-fun of_rep6 (Int) monthst)
(assert (forall ((x monthst)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x monthst)) (! (in_range8 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-sort dayst 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq16 (dayst dayst) Bool)
(declare-const dummy16 dayst)
(declare-datatypes () ((dayst__ref (mk_dayst__ref (dayst__content dayst)))))
(define-fun dayst__ref___projection ((a dayst__ref)) dayst (dayst__content a))
(declare-fun to_rep7 (dayst) Int)
(declare-fun of_rep7 (Int) dayst)
(assert (forall ((x dayst)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x dayst)) (! (in_range9 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-sort millisecst 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 86399999)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq17 (millisecst millisecst) Bool)
(declare-const dummy17 millisecst)
(declare-datatypes () ((millisecst__ref (mk_millisecst__ref (millisecst__content millisecst)))))
(define-fun millisecst__ref___projection ((a millisecst__ref)) millisecst (millisecst__content a))
(declare-fun to_rep8 (millisecst) Int)
(declare-fun of_rep8 (Int) millisecst)
(assert (forall ((x millisecst)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x millisecst)) (! (in_range10 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__clock__timet__year yearst) (rec__clock__timet__month monthst) (rec__clock__timet__day dayst) (rec__clock__timet__millisec millisecst)))))
(define-fun us_split_fields_Year__projection ((a us_split_fields4)) yearst (rec__clock__timet__year a))
(define-fun us_split_fields_Month__projection ((a us_split_fields4)) monthst (rec__clock__timet__month a))
(define-fun us_split_fields_Day__projection ((a us_split_fields4)) dayst (rec__clock__timet__day a))
(define-fun us_split_fields_MilliSec__projection ((a us_split_fields4)) millisecst (rec__clock__timet__millisec a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq7 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (to_rep5 (rec__clock__timet__year (us_split_fields5 a))) (to_rep5 (rec__clock__timet__year (us_split_fields5 b)))) (= (to_rep6 (rec__clock__timet__month (us_split_fields5 a))) (to_rep6 (rec__clock__timet__month (us_split_fields5 b))))) (= (to_rep7 (rec__clock__timet__day (us_split_fields5 a))) (to_rep7 (rec__clock__timet__day (us_split_fields5 b))))) (= (to_rep8 (rec__clock__timet__millisec (us_split_fields5 a))) (to_rep8 (rec__clock__timet__millisec (us_split_fields5 b))))) true false))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep2) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep2) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep2)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment7 a))))
(declare-const clock__timet__year__first__bit Int)
(declare-const clock__timet__year__last__bit Int)
(declare-const clock__timet__year__position Int)
(assert (<= 0 clock__timet__year__first__bit))
(assert (< clock__timet__year__first__bit clock__timet__year__last__bit))
(assert (<= 0 clock__timet__year__position))
(declare-const clock__timet__month__first__bit Int)
(declare-const clock__timet__month__last__bit Int)
(declare-const clock__timet__month__position Int)
(assert (<= 0 clock__timet__month__first__bit))
(assert (< clock__timet__month__first__bit clock__timet__month__last__bit))
(assert (<= 0 clock__timet__month__position))
(declare-const clock__timet__day__first__bit Int)
(declare-const clock__timet__day__last__bit Int)
(declare-const clock__timet__day__position Int)
(assert (<= 0 clock__timet__day__first__bit))
(assert (< clock__timet__day__first__bit clock__timet__day__last__bit))
(assert (<= 0 clock__timet__day__position))
(declare-const clock__timet__millisec__first__bit Int)
(declare-const clock__timet__millisec__last__bit Int)
(declare-const clock__timet__millisec__position Int)
(assert (<= 0 clock__timet__millisec__first__bit))
(assert (< clock__timet__millisec__first__bit clock__timet__millisec__last__bit))
(assert (<= 0 clock__timet__millisec__position))
(declare-fun user_eq18 (us_rep2 us_rep2) Bool)
(declare-const dummy18 us_rep2)
(declare-datatypes () ((timet__ref (mk_timet__ref (timet__content us_rep2)))))
(define-fun timet__ref___projection ((a timet__ref)) us_rep2 (timet__content a))
(declare-sort algorithmt 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq19 (algorithmt algorithmt) Bool)
(declare-const dummy19 algorithmt)
(declare-datatypes () ((algorithmt__ref (mk_algorithmt__ref (algorithmt__content algorithmt)))))
(define-fun algorithmt__ref___projection ((a algorithmt__ref)) algorithmt (algorithmt__content a))
(declare-fun to_rep9 (algorithmt) Int)
(declare-fun of_rep9 (Int) algorithmt)
(assert (forall ((x algorithmt)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x algorithmt)) (! (in_range11 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__cert__attr__contentst__id us_rep1) (rec__cert__attr__contentst__notbefore us_rep2) (rec__cert__attr__contentst__notafter us_rep2) (rec__cert__attr__contentst__mechanism algorithmt) (rec__cert__attr__contentst__basecertid us_rep1)))))
(define-fun us_split_fields_ID__4__projection ((a us_split_fields6)) us_rep1 (rec__cert__attr__contentst__id a))
(define-fun us_split_fields_NotBefore__2__projection ((a us_split_fields6)) us_rep2 (rec__cert__attr__contentst__notbefore a))
(define-fun us_split_fields_NotAfter__2__projection ((a us_split_fields6)) us_rep2 (rec__cert__attr__contentst__notafter a))
(define-fun us_split_fields_Mechanism__2__projection ((a us_split_fields6)) algorithmt (rec__cert__attr__contentst__mechanism a))
(define-fun us_split_fields_BaseCertID__projection ((a us_split_fields6)) us_rep1 (rec__cert__attr__contentst__basecertid a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___14__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep3 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___15__projection ((a us_rep3)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq8 ((a us_rep3) (b us_rep3)) Bool (ite (and (and (and (and (= (bool_eq6 (rec__cert__attr__contentst__id (us_split_fields7 a)) (rec__cert__attr__contentst__id (us_split_fields7 b))) true) (= (bool_eq7 (rec__cert__attr__contentst__notbefore (us_split_fields7 a)) (rec__cert__attr__contentst__notbefore (us_split_fields7 b))) true)) (= (bool_eq7 (rec__cert__attr__contentst__notafter (us_split_fields7 a)) (rec__cert__attr__contentst__notafter (us_split_fields7 b))) true)) (= (to_rep9 (rec__cert__attr__contentst__mechanism (us_split_fields7 a))) (to_rep9 (rec__cert__attr__contentst__mechanism (us_split_fields7 b))))) (= (bool_eq6 (rec__cert__attr__contentst__basecertid (us_split_fields7 a)) (rec__cert__attr__contentst__basecertid (us_split_fields7 b))) true)) true false))
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep3) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep3) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep3)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment8 a))))
(declare-const cert__attr__contentst__id__first__bit Int)
(declare-const cert__attr__contentst__id__last__bit Int)
(declare-const cert__attr__contentst__id__position Int)
(assert (<= 0 cert__attr__contentst__id__first__bit))
(assert (< cert__attr__contentst__id__first__bit cert__attr__contentst__id__last__bit))
(assert (<= 0 cert__attr__contentst__id__position))
(declare-const cert__attr__contentst__notbefore__first__bit Int)
(declare-const cert__attr__contentst__notbefore__last__bit Int)
(declare-const cert__attr__contentst__notbefore__position Int)
(assert (<= 0 cert__attr__contentst__notbefore__first__bit))
(assert (< cert__attr__contentst__notbefore__first__bit cert__attr__contentst__notbefore__last__bit))
(assert (<= 0 cert__attr__contentst__notbefore__position))
(declare-const cert__attr__contentst__notafter__first__bit Int)
(declare-const cert__attr__contentst__notafter__last__bit Int)
(declare-const cert__attr__contentst__notafter__position Int)
(assert (<= 0 cert__attr__contentst__notafter__first__bit))
(assert (< cert__attr__contentst__notafter__first__bit cert__attr__contentst__notafter__last__bit))
(assert (<= 0 cert__attr__contentst__notafter__position))
(declare-const cert__attr__contentst__mechanism__first__bit Int)
(declare-const cert__attr__contentst__mechanism__last__bit Int)
(declare-const cert__attr__contentst__mechanism__position Int)
(assert (<= 0 cert__attr__contentst__mechanism__first__bit))
(assert (< cert__attr__contentst__mechanism__first__bit cert__attr__contentst__mechanism__last__bit))
(assert (<= 0 cert__attr__contentst__mechanism__position))
(declare-const cert__attr__contentst__basecertid__first__bit Int)
(declare-const cert__attr__contentst__basecertid__last__bit Int)
(declare-const cert__attr__contentst__basecertid__position Int)
(assert (<= 0 cert__attr__contentst__basecertid__first__bit))
(assert (< cert__attr__contentst__basecertid__first__bit cert__attr__contentst__basecertid__last__bit))
(assert (<= 0 cert__attr__contentst__basecertid__position))
(declare-fun user_eq20 (us_rep3 us_rep3) Bool)
(declare-const dummy20 us_rep3)
(declare-datatypes () ((contentst__ref (mk_contentst__ref (contentst__content us_rep3)))))
(define-fun contentst__ref___2__projection ((a contentst__ref)) us_rep3 (contentst__content a))
(declare-const contents us_rep3)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const fullstring__first integer)
(declare-const fullstring__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq21 (integer integer) Bool)
(declare-const dummy21 integer)
(declare-datatypes () ((t3b__ref (mk_t3b__ref (t3b__content integer)))))
(define-fun t3b__ref___projection ((a t3b__ref)) integer (t3b__content a))
(declare-sort t4 0)
(declare-fun first8 (t4) integer)
(declare-fun last8 (t4) integer)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first8 (mk4 f l))) f) (= (to_rep1 (last8 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (dynamic_property4 range_first range_last low) (dynamic_property4 range_first range_last high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int character)) (rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int character) (elts4 a))
(define-fun of_array4 ((a (Array Int character)) (f Int) (l Int)) us_t4 (mk___t4 a (mk4 f l)))
(define-fun first9 ((a us_t4)) Int (to_rep1 (first8 (rt4 a))))
(define-fun last9 ((a us_t4)) Int (to_rep1 (last8 (rt4 a))))
(define-fun length4 ((a us_t4)) Int (ite (<= (first9 a) (last9 a)) (+ (- (last9 a) (first9 a)) 1) 0))
(declare-const value__size9 Int)
(declare-fun object__size9 ((Array Int character)) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 ((Array Int character)) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 ((Array Int character)) Int)
(assert (<= 0 value__size9))
(assert (forall ((a (Array Int character))) (<= 0 (object__size9 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment9 a))))
(define-fun bool_eq9 ((x us_t4) (y us_t4)) Bool (bool_eq (elts4 x) (to_rep1 (first8 (rt4 x))) (to_rep1 (last8 (rt4 x))) (elts4 y) (to_rep1 (first8 (rt4 y))) (to_rep1 (last8 (rt4 y)))))
(declare-fun user_eq22 (us_t4 us_t4) Bool)
(declare-const dummy22 us_t4)
(declare-datatypes () ((t4b__ref (mk_t4b__ref (t4b__content us_t4)))))
(define-fun t4b__ref___projection ((a t4b__ref)) us_t4 (t4b__content a))
(declare-fun temp___String_Literal_1697 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1697 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 3)) 85)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 32)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 33)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 36)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 38)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 41)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 43)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 44)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 46)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 48)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 49)) 32)) (= (to_rep (select (temp___String_Literal_1697 us_void_param) 50)) 32)) :pattern ((temp___String_Literal_1697 us_void_param)))))
(declare-fun temp___String_Literal_1698 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1698 us_void_param) 1)) 73) (= (to_rep (select (temp___String_Literal_1698 us_void_param) 2)) 115)) (= (to_rep (select (temp___String_Literal_1698 us_void_param) 3)) 115)) (= (to_rep (select (temp___String_Literal_1698 us_void_param) 4)) 117)) (= (to_rep (select (temp___String_Literal_1698 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_1698 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_1698 us_void_param) 7)) 58)) (= (to_rep (select (temp___String_Literal_1698 us_void_param) 8)) 32)) :pattern ((temp___String_Literal_1698 us_void_param)))))
(declare-fun temp___String_Literal_1701 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1701 us_void_param) 1)) 32) (= (to_rep (select (temp___String_Literal_1701 us_void_param) 2)) 83)) (= (to_rep (select (temp___String_Literal_1701 us_void_param) 3)) 101)) (= (to_rep (select (temp___String_Literal_1701 us_void_param) 4)) 114)) (= (to_rep (select (temp___String_Literal_1701 us_void_param) 5)) 105)) (= (to_rep (select (temp___String_Literal_1701 us_void_param) 6)) 97)) (= (to_rep (select (temp___String_Literal_1701 us_void_param) 7)) 108)) (= (to_rep (select (temp___String_Literal_1701 us_void_param) 8)) 78)) (= (to_rep (select (temp___String_Literal_1701 us_void_param) 9)) 111)) (= (to_rep (select (temp___String_Literal_1701 us_void_param) 10)) 58)) (= (to_rep (select (temp___String_Literal_1701 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_1701 us_void_param) 12)) 32)) :pattern ((temp___String_Literal_1701 us_void_param)))))
(define-fun dynamic_invariant4 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range1 temp___expr_46)))
(define-fun dynamic_invariant5 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range2 temp___expr_74)))
(define-fun dynamic_invariant6 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant7 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(define-fun dynamic_invariant8 ((temp___expr_437 Int) (temp___is_init_433 Bool) (temp___skip_constant_434 Bool) (temp___do_toplevel_435 Bool) (temp___do_typ_inv_436 Bool)) Bool (=> (or (= temp___is_init_433 true) (<= 1 50)) (in_range3 temp___expr_437)))
(define-fun dynamic_invariant9 ((temp___expr_299 us_t3) (temp___is_init_295 Bool) (temp___skip_constant_296 Bool) (temp___do_toplevel_297 Bool) (temp___do_typ_inv_298 Bool)) Bool (and (=> (not (= temp___skip_constant_296 true)) (dynamic_property3 1 2147483647 (first7 temp___expr_299) (last7 temp___expr_299))) (=> (= temp___do_toplevel_297 true) (=> (= temp___is_init_295 true) (and (= (first7 temp___expr_299) 1) (<= 0 (last7 temp___expr_299)))))))
(define-fun dynamic_predicate2 ((temp___302 us_t3)) Bool (and (= (first7 temp___302) 1) (<= 0 (last7 temp___302))))
(define-fun dynamic_invariant10 ((temp___expr_479 Int) (temp___is_init_475 Bool) (temp___skip_constant_476 Bool) (temp___do_toplevel_477 Bool) (temp___do_typ_inv_478 Bool)) Bool (=> (or (= temp___is_init_475 true) (<= 1901 2099)) (in_range7 temp___expr_479)))
(define-fun dynamic_invariant11 ((temp___expr_486 Int) (temp___is_init_482 Bool) (temp___skip_constant_483 Bool) (temp___do_toplevel_484 Bool) (temp___do_typ_inv_485 Bool)) Bool (=> (or (= temp___is_init_482 true) (<= 1 12)) (in_range8 temp___expr_486)))
(define-fun dynamic_invariant12 ((temp___expr_493 Int) (temp___is_init_489 Bool) (temp___skip_constant_490 Bool) (temp___do_toplevel_491 Bool) (temp___do_typ_inv_492 Bool)) Bool (=> (or (= temp___is_init_489 true) (<= 1 31)) (in_range9 temp___expr_493)))
(define-fun dynamic_invariant13 ((temp___expr_525 Int) (temp___is_init_521 Bool) (temp___skip_constant_522 Bool) (temp___do_toplevel_523 Bool) (temp___do_typ_inv_524 Bool)) Bool (=> (or (= temp___is_init_521 true) (<= 0 86399999)) (in_range10 temp___expr_525)))
(define-fun dynamic_invariant14 ((temp___expr_953 Int) (temp___is_init_949 Bool) (temp___skip_constant_950 Bool) (temp___do_toplevel_951 Bool) (temp___do_typ_inv_952 Bool)) Bool (=> (or (= temp___is_init_949 true) (<= 0 40)) (in_range5 temp___expr_953)))
(define-fun dynamic_invariant15 ((temp___expr_1001 Int) (temp___is_init_997 Bool) (temp___skip_constant_998 Bool) (temp___do_toplevel_999 Bool) (temp___do_typ_inv_1000 Bool)) Bool (=> (or (= temp___is_init_997 true) (<= 0 10)) (in_range11 temp___expr_1001)))
(declare-const localuser (Array Int character))
(declare-const fullstring (Array Int character))
(declare-const temp___1705 (Array Int character))
(declare-const temp___17051 t2)
(declare-const temp___1700 (Array Int character))
(declare-const temp___17001 t1)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const temp___1702 (Array Int character))
(declare-const temp___17021 t)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const temp___1704 (Array Int character))
(declare-const temp___17041 t)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 Int)
(declare-const o17 Int)
(declare-const cert__attr__extractuser__fullstring__assume (Array Int character))
(declare-const cert__attr__extractuser__fullstring__assume1 t)
(declare-const result (Array Int character))
(declare-const localuser1 (Array Int character))
(declare-const result1 (Array Int character))
(declare-const fullstring1 (Array Int character))
(define-fun temp___17002 () us_t1 (mk___t1 temp___1700 temp___17001))
(define-fun temp___17052 () us_t2 (mk___t2 temp___1705 temp___17051))
(assert (= result localuser))
(assert (= localuser1 (temp___String_Literal_1697 Tuple0)))
(assert (and (= temp___17052 (serialnumbert_image (to_rep4 (rec__certtypes__idt__serialnumber (us_split_fields3 (rec__cert__attr__contentst__basecertid (us_split_fields7 contents))))))) (and (dynamic_invariant2 temp___17052 true false true true) (= temp___17052 (let ((temp___1480 (to_string (attr__ATTRIBUTE_IMAGE6 (to_rep4 (rec__certtypes__idt__serialnumber (us_split_fields3 (rec__cert__attr__contentst__basecertid (us_split_fields7 contents))))))))) (mk___t2 (elts temp___1480) (mk2 (to_rep1 (first (rt temp___1480))) (to_rep1 (last (rt temp___1480))))))))))
(assert (and (= temp___17002 (issueridt_image (to_rep2 (rec__cryptotypes__issuert__id (us_split_fields1 (rec__certtypes__idt__issuer (us_split_fields3 (rec__cert__attr__contentst__basecertid (us_split_fields7 contents))))))))) (and (dynamic_invariant temp___17002 true false true true) (= temp___17002 (let ((temp___981 (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (rec__cryptotypes__issuert__id (us_split_fields1 (rec__certtypes__idt__issuer (us_split_fields3 (rec__cert__attr__contentst__basecertid (us_split_fields7 contents))))))))))) (mk___t1 (elts temp___981) (mk1 (to_rep1 (first (rt temp___981))) (to_rep1 (last (rt temp___981))))))))))
(assert (=> (<= (to_rep1 (first2 temp___17001)) (to_rep1 (last2 temp___17001))) (= o (+ (- (to_rep1 (last2 temp___17001)) (to_rep1 (first2 temp___17001))) 1))))
(assert (=> (not (<= (to_rep1 (first2 temp___17001)) (to_rep1 (last2 temp___17001)))) (= o 0)))
(assert (=> (<= 1 8) (= o1 (+ (- 8 1) 1))))
(assert (=> (not (<= 1 8)) (= o1 0)))
(assert (= o2 (+ o1 o)))
(assert (= o3 (+ 1 o2)))
(assert (= o4 (- o3 1)))
(assert (and (= o5 o4) (in_range1 o4)))
(assert (= (concat1 (temp___String_Literal_1698 Tuple0) 1 8 temp___1700 (to_rep1 (first2 temp___17001)) (to_rep1 (last2 temp___17001))) temp___1702))
(assert (= (mk 1 o5) temp___17021))
(assert (=> (= (length (mk___t temp___1702 temp___17021)) 0) (= (temp___String_Literal_1701 Tuple0) temp___1704)))
(assert (=> (= (length (mk___t temp___1702 temp___17021)) 0) (= (mk 1 12) temp___17041)))
(assert (=> (not (= (length (mk___t temp___1702 temp___17021)) 0)) (=> (<= 1 12) (= o6 (+ (- 12 1) 1)))))
(assert (=> (not (= (length (mk___t temp___1702 temp___17021)) 0)) (=> (not (<= 1 12)) (= o6 0))))
(assert (=> (not (= (length (mk___t temp___1702 temp___17021)) 0)) (=> (<= (to_rep1 (first temp___17021)) (to_rep1 (last temp___17021))) (= o7 (+ (- (to_rep1 (last temp___17021)) (to_rep1 (first temp___17021))) 1)))))
(assert (=> (not (= (length (mk___t temp___1702 temp___17021)) 0)) (=> (not (<= (to_rep1 (first temp___17021)) (to_rep1 (last temp___17021)))) (= o7 0))))
(assert (=> (not (= (length (mk___t temp___1702 temp___17021)) 0)) (= o8 (+ o7 o6))))
(assert (=> (not (= (length (mk___t temp___1702 temp___17021)) 0)) (= o9 (+ (to_rep1 (first temp___17021)) o8))))
(assert (=> (not (= (length (mk___t temp___1702 temp___17021)) 0)) (= o10 (- o9 1))))
(assert (=> (not (= (length (mk___t temp___1702 temp___17021)) 0)) (and (= o11 o10) (in_range1 o10))))
(assert (=> (not (= (length (mk___t temp___1702 temp___17021)) 0)) (= (concat1 temp___1702 (to_rep1 (first temp___17021)) (to_rep1 (last temp___17021)) (temp___String_Literal_1701 Tuple0) 1 12) temp___1704)))
(assert (=> (not (= (length (mk___t temp___1702 temp___17021)) 0)) (= (mk (to_rep1 (first temp___17021)) o11) temp___17041)))
(assert (=> (= (length (mk___t temp___1704 temp___17041)) 0) (= temp___1705 cert__attr__extractuser__fullstring__assume)))
(assert (=> (= (length (mk___t temp___1704 temp___17041)) 0) (= (mk (to_rep1 (first4 temp___17051)) (to_rep1 (last4 temp___17051))) cert__attr__extractuser__fullstring__assume1)))
(assert (=> (not (= (length (mk___t temp___1704 temp___17041)) 0)) (=> (<= (to_rep1 (first4 temp___17051)) (to_rep1 (last4 temp___17051))) (= o12 (+ (- (to_rep1 (last4 temp___17051)) (to_rep1 (first4 temp___17051))) 1)))))
(assert (=> (not (= (length (mk___t temp___1704 temp___17041)) 0)) (=> (not (<= (to_rep1 (first4 temp___17051)) (to_rep1 (last4 temp___17051)))) (= o12 0))))
(assert (=> (not (= (length (mk___t temp___1704 temp___17041)) 0)) (=> (<= (to_rep1 (first temp___17041)) (to_rep1 (last temp___17041))) (= o13 (+ (- (to_rep1 (last temp___17041)) (to_rep1 (first temp___17041))) 1)))))
(assert (=> (not (= (length (mk___t temp___1704 temp___17041)) 0)) (=> (not (<= (to_rep1 (first temp___17041)) (to_rep1 (last temp___17041)))) (= o13 0))))
(assert (=> (not (= (length (mk___t temp___1704 temp___17041)) 0)) (= o14 (+ o13 o12))))
(assert (=> (not (= (length (mk___t temp___1704 temp___17041)) 0)) (= o15 (+ (to_rep1 (first temp___17041)) o14))))
(assert (=> (not (= (length (mk___t temp___1704 temp___17041)) 0)) (= o16 (- o15 1))))
(assert (=> (not (= (length (mk___t temp___1704 temp___17041)) 0)) (and (= o17 o16) (in_range1 o16))))
(assert (=> (not (= (length (mk___t temp___1704 temp___17041)) 0)) (= (concat1 temp___1704 (to_rep1 (first temp___17041)) (to_rep1 (last temp___17041)) temp___1705 (to_rep1 (first4 temp___17051)) (to_rep1 (last4 temp___17051))) cert__attr__extractuser__fullstring__assume)))
(assert (=> (not (= (length (mk___t temp___1704 temp___17041)) 0)) (= (mk (to_rep1 (first temp___17041)) o17) cert__attr__extractuser__fullstring__assume1)))
(assert (= result1 fullstring))
(assert (= fullstring1 cert__attr__extractuser__fullstring__assume))
(assert (= (to_rep1 fullstring__first) (to_rep1 (first cert__attr__extractuser__fullstring__assume1))))
(assert (= (to_rep1 fullstring__last) (to_rep1 (last cert__attr__extractuser__fullstring__assume1))))
(assert (dynamic_property 1 2147483647 (to_rep1 fullstring__first) (to_rep1 fullstring__last)))
(assert (<= (to_rep1 fullstring__last) 50))
(assert (not (= (ite (<= (to_rep1 fullstring__first) (to_rep1 fullstring__last)) (+ (- (to_rep1 fullstring__last) (to_rep1 fullstring__first)) 1) 0) (ite (<= 1 (to_rep1 fullstring__last)) (+ (- (to_rep1 fullstring__last) 1) 1) 0))))
(check-sat)
(exit)
