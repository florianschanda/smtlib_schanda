(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort natural 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (natural natural) Bool)
(declare-const dummy4 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range4 temp___expr_33)))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq5 (us_t1 us_t1) Bool)
(declare-const dummy5 us_t1)
(declare-datatypes () ((stringf1__ref (mk_stringf1__ref (stringf1__content us_t1)))))
(define-fun stringf1__ref___projection ((a stringf1__ref)) us_t1 (stringf1__content a))
(define-fun dynamic_invariant1 ((temp___expr_297 us_t1) (temp___is_init_294 Bool) (temp___skip_constant_295 Bool) (temp___do_toplevel_296 Bool)) Bool (and (=> (not (= temp___skip_constant_295 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_297) (last3 temp___expr_297))) (=> (= temp___do_toplevel_296 true) (=> (= temp___is_init_294 true) (= (first3 temp___expr_297) 1)))))
(define-fun dynamic_predicate ((temp___300 us_t1)) Bool (= (first3 temp___300) 1))
(declare-sort yearst 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1901 x) (<= x 2099)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (yearst yearst) Bool)
(declare-const dummy6 yearst)
(declare-datatypes () ((yearst__ref (mk_yearst__ref (yearst__content yearst)))))
(define-fun yearst__ref___projection ((a yearst__ref)) yearst (yearst__content a))
(declare-fun to_rep2 (yearst) Int)
(declare-fun of_rep2 (Int) yearst)
(assert (forall ((x yearst)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x yearst)) (! (in_range5 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort monthst 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (monthst monthst) Bool)
(declare-const dummy7 monthst)
(declare-datatypes () ((monthst__ref (mk_monthst__ref (monthst__content monthst)))))
(define-fun monthst__ref___projection ((a monthst__ref)) monthst (monthst__content a))
(declare-fun to_rep3 (monthst) Int)
(declare-fun of_rep3 (Int) monthst)
(assert (forall ((x monthst)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x monthst)) (! (in_range6 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort dayst 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 31)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq8 (dayst dayst) Bool)
(declare-const dummy8 dayst)
(declare-datatypes () ((dayst__ref (mk_dayst__ref (dayst__content dayst)))))
(define-fun dayst__ref___projection ((a dayst__ref)) dayst (dayst__content a))
(declare-fun to_rep4 (dayst) Int)
(declare-fun of_rep4 (Int) dayst)
(assert (forall ((x dayst)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x dayst)) (! (in_range7 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-sort millisecst 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 86399999)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq9 (millisecst millisecst) Bool)
(declare-const dummy9 millisecst)
(declare-datatypes () ((millisecst__ref (mk_millisecst__ref (millisecst__content millisecst)))))
(define-fun millisecst__ref___projection ((a millisecst__ref)) millisecst (millisecst__content a))
(declare-fun to_rep5 (millisecst) Int)
(declare-fun of_rep5 (Int) millisecst)
(assert (forall ((x millisecst)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x millisecst)) (! (in_range8 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__clock__timet__year yearst) (rec__clock__timet__month monthst) (rec__clock__timet__day dayst) (rec__clock__timet__millisec millisecst)))))
(define-fun us_split_fields_Year__projection ((a us_split_fields)) yearst (rec__clock__timet__year a))
(define-fun us_split_fields_Month__projection ((a us_split_fields)) monthst (rec__clock__timet__month a))
(define-fun us_split_fields_Day__projection ((a us_split_fields)) dayst (rec__clock__timet__day a))
(define-fun us_split_fields_MilliSec__projection ((a us_split_fields)) millisecst (rec__clock__timet__millisec a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq3 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (to_rep2 (rec__clock__timet__year (us_split_fields1 a))) (to_rep2 (rec__clock__timet__year (us_split_fields1 b)))) (= (to_rep3 (rec__clock__timet__month (us_split_fields1 a))) (to_rep3 (rec__clock__timet__month (us_split_fields1 b))))) (= (to_rep4 (rec__clock__timet__day (us_split_fields1 a))) (to_rep4 (rec__clock__timet__day (us_split_fields1 b))))) (= (to_rep5 (rec__clock__timet__millisec (us_split_fields1 a))) (to_rep5 (rec__clock__timet__millisec (us_split_fields1 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const clock__timet__year__first__bit Int)
(declare-const clock__timet__year__last__bit Int)
(declare-const clock__timet__year__position Int)
(assert (<= 0 clock__timet__year__first__bit))
(assert (< clock__timet__year__first__bit clock__timet__year__last__bit))
(assert (<= 0 clock__timet__year__position))
(declare-const clock__timet__month__first__bit Int)
(declare-const clock__timet__month__last__bit Int)
(declare-const clock__timet__month__position Int)
(assert (<= 0 clock__timet__month__first__bit))
(assert (< clock__timet__month__first__bit clock__timet__month__last__bit))
(assert (<= 0 clock__timet__month__position))
(declare-const clock__timet__day__first__bit Int)
(declare-const clock__timet__day__last__bit Int)
(declare-const clock__timet__day__position Int)
(assert (<= 0 clock__timet__day__first__bit))
(assert (< clock__timet__day__first__bit clock__timet__day__last__bit))
(assert (<= 0 clock__timet__day__position))
(declare-const clock__timet__millisec__first__bit Int)
(declare-const clock__timet__millisec__last__bit Int)
(declare-const clock__timet__millisec__position Int)
(assert (<= 0 clock__timet__millisec__first__bit))
(assert (< clock__timet__millisec__first__bit clock__timet__millisec__last__bit))
(assert (<= 0 clock__timet__millisec__position))
(declare-fun user_eq10 (us_rep us_rep) Bool)
(declare-const dummy10 us_rep)
(declare-datatypes () ((timet__ref (mk_timet__ref (timet__content us_rep)))))
(define-fun timet__ref___projection ((a timet__ref)) us_rep (timet__content a))
(declare-const zerotime us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort timetexti 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 1 x) (<= x 21)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq11 (timetexti timetexti) Bool)
(declare-const dummy11 timetexti)
(declare-datatypes () ((timetexti__ref (mk_timetexti__ref (timetexti__content timetexti)))))
(define-fun timetexti__ref___projection ((a timetexti__ref)) timetexti (timetexti__content a))
(declare-fun printtime (us_rep) (Array Int character))
(declare-fun printtime__function_guard ((Array Int character) us_rep) Bool)
(assert true)
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep1 0)
(declare-fun bool_eq4 (us_rep1 us_rep1) Bool)
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-fun user_eq12 (us_rep1 us_rep1) Bool)
(declare-const dummy12 us_rep1)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep1)))))
(define-fun t__ref___projection ((a t__ref)) us_rep1 (t__content a))
(declare-fun exists__ (us_rep1) Bool)
(declare-fun exists____function_guard (Bool us_rep1) Bool)
(declare-fun endoffile (us_rep1) Bool)
(declare-fun endoffile__function_guard (Bool us_rep1) Bool)
(declare-sort logfileindext 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 1 x) (<= x 17)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq13 (logfileindext logfileindext) Bool)
(declare-const dummy13 logfileindext)
(declare-datatypes () ((logfileindext__ref (mk_logfileindext__ref (logfileindext__content logfileindext)))))
(define-fun logfileindext__ref___projection ((a logfileindext__ref)) logfileindext (logfileindext__content a))
(define-fun dynamic_invariant2 ((temp___expr_1016 Int) (temp___is_init_1013 Bool) (temp___skip_constant_1014 Bool) (temp___do_toplevel_1015 Bool)) Bool (=> (or (= temp___is_init_1013 true) (<= 1 17)) (in_range10 temp___expr_1016)))
(declare-sort fileentrycountt 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq14 (fileentrycountt fileentrycountt) Bool)
(declare-const dummy14 fileentrycountt)
(declare-datatypes () ((fileentrycountt__ref (mk_fileentrycountt__ref (fileentrycountt__content fileentrycountt)))))
(define-fun fileentrycountt__ref___projection ((a fileentrycountt__ref)) fileentrycountt (fileentrycountt__content a))
(define-fun dynamic_invariant3 ((temp___expr_1056 Int) (temp___is_init_1053 Bool) (temp___skip_constant_1054 Bool) (temp___do_toplevel_1055 Bool)) Bool (=> (or (= temp___is_init_1053 true) (<= 0 1024)) (in_range11 temp___expr_1056)))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int us_rep1))))))
(declare-fun slide1 ((Array Int us_rep1) Int Int) (Array Int us_rep1))
(assert (forall ((a (Array Int us_rep1))) (forall ((first4 Int)) (! (= (slide1 a first4 first4) a) :pattern ((slide1 a first4 first4))))))
(assert (forall ((a (Array Int us_rep1))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int us_rep1) Int Int (Array Int us_rep1) Int Int) (Array Int us_rep1))
(assert (forall ((a (Array Int us_rep1)) (b (Array Int us_rep1))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (us_rep1 Int) (Array Int us_rep1))
(assert (forall ((v us_rep1)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq5 ((a (Array Int us_rep1)) (a__first Int) (a__last Int) (b (Array Int us_rep1)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq4 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true)))) true false))
(assert (forall ((a (Array Int us_rep1)) (b (Array Int us_rep1))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq5 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq4 (select a temp___idx_152) (select b (+ (- b__first a__first) temp___idx_152))) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort filestatust 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq15 (filestatust filestatust) Bool)
(declare-const dummy15 filestatust)
(declare-datatypes () ((filestatust__ref (mk_filestatust__ref (filestatust__content filestatust)))))
(define-fun filestatust__ref___projection ((a filestatust__ref)) filestatust (filestatust__content a))
(define-fun dynamic_invariant4 ((temp___expr_1128 Int) (temp___is_init_1125 Bool) (temp___skip_constant_1126 Bool) (temp___do_toplevel_1127 Bool)) Bool (=> (or (= temp___is_init_1125 true) (<= 0 2)) (in_range12 temp___expr_1128)))
(declare-sort filenamei 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 1 x) (<= x 16)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq16 (filenamei filenamei) Bool)
(declare-const dummy16 filenamei)
(declare-datatypes () ((filenamei__ref (mk_filenamei__ref (filenamei__content filenamei)))))
(define-fun filenamei__ref___projection ((a filenamei__ref)) filenamei (filenamei__content a))
(declare-const dummy17 (Array Int character))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int character)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment4 a))))
(declare-fun user_eq17 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int (Array Int character)))))))
(declare-fun slide2 ((Array Int (Array Int character)) Int Int) (Array Int (Array Int character)))
(assert (forall ((a (Array Int (Array Int character)))) (forall ((first4 Int)) (! (= (slide2 a first4 first4) a) :pattern ((slide2 a first4 first4))))))
(assert (forall ((a (Array Int (Array Int character)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int (Array Int character)) Int Int (Array Int (Array Int character)) Int Int) (Array Int (Array Int character)))
(assert (forall ((a (Array Int (Array Int character))) (b (Array Int (Array Int character)))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 ((Array Int character) Int) (Array Int (Array Int character)))
(assert (forall ((v (Array Int character))) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq6 ((a (Array Int (Array Int character))) (a__first Int) (a__last Int) (b (Array Int (Array Int character))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq (select a temp___idx_154) 1 16 (select b (+ (- b__first a__first) temp___idx_154)) 1 16) true)))) true false))
(assert (forall ((a (Array Int (Array Int character))) (b (Array Int (Array Int character)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq (select a temp___idx_154) 1 16 (select b (+ (- b__first a__first) temp___idx_154)) 1 16) true))))))))
(declare-const logfilenames (Array Int (Array Int character)))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-fun auditlog__logfilenames__aggregate_def ((Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character) (Array Int character)) (Array Int (Array Int character)))
(assert (forall ((temp___165 (Array Int character)) (temp___166 (Array Int character)) (temp___167 (Array Int character)) (temp___168 (Array Int character)) (temp___169 (Array Int character)) (temp___170 (Array Int character)) (temp___171 (Array Int character)) (temp___172 (Array Int character)) (temp___173 (Array Int character)) (temp___174 (Array Int character)) (temp___175 (Array Int character)) (temp___176 (Array Int character)) (temp___177 (Array Int character)) (temp___178 (Array Int character)) (temp___179 (Array Int character)) (temp___180 (Array Int character)) (temp___181 (Array Int character))) (let ((temp___164 (auditlog__logfilenames__aggregate_def temp___165 temp___166 temp___167 temp___168 temp___169 temp___170 temp___171 temp___172 temp___173 temp___174 temp___175 temp___176 temp___177 temp___178 temp___179 temp___180 temp___181))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (select temp___164 1) temp___165) (= (select temp___164 2) temp___166)) (= (select temp___164 3) temp___167)) (= (select temp___164 4) temp___168)) (= (select temp___164 5) temp___169)) (= (select temp___164 6) temp___170)) (= (select temp___164 7) temp___171)) (= (select temp___164 8) temp___172)) (= (select temp___164 9) temp___173)) (= (select temp___164 10) temp___174)) (= (select temp___164 11) temp___175)) (= (select temp___164 12) temp___176)) (= (select temp___164 13) temp___177)) (= (select temp___164 14) temp___178)) (= (select temp___164 15) temp___179)) (= (select temp___164 16) temp___180)) (= (select temp___164 17) temp___181)))))
(declare-fun temp___String_Literal_183 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_183 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_183 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 11)) 48)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 12)) 49)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_183 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_183 us_void_param)))))
(declare-fun temp___String_Literal_184 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_184 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_184 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 11)) 48)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 12)) 50)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_184 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_184 us_void_param)))))
(declare-fun temp___String_Literal_185 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_185 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_185 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 11)) 48)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 12)) 51)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_185 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_185 us_void_param)))))
(declare-fun temp___String_Literal_186 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_186 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_186 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 11)) 48)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 12)) 52)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_186 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_186 us_void_param)))))
(declare-fun temp___String_Literal_187 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_187 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_187 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 11)) 48)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 12)) 53)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_187 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_187 us_void_param)))))
(declare-fun temp___String_Literal_188 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_188 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_188 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 11)) 48)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 12)) 54)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_188 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_188 us_void_param)))))
(declare-fun temp___String_Literal_189 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_189 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_189 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 11)) 48)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 12)) 55)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_189 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_189 us_void_param)))))
(declare-fun temp___String_Literal_190 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_190 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_190 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 11)) 48)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 12)) 56)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_190 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_190 us_void_param)))))
(declare-fun temp___String_Literal_191 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_191 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_191 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 11)) 48)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 12)) 57)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_191 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_191 us_void_param)))))
(declare-fun temp___String_Literal_192 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_192 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_192 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 11)) 49)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 12)) 48)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_192 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_192 us_void_param)))))
(declare-fun temp___String_Literal_193 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_193 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_193 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 11)) 49)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 12)) 49)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_193 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_193 us_void_param)))))
(declare-fun temp___String_Literal_194 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_194 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_194 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 11)) 49)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 12)) 50)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_194 us_void_param)))))
(declare-fun temp___String_Literal_195 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_195 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_195 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 11)) 49)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 12)) 51)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_195 us_void_param)))))
(declare-fun temp___String_Literal_196 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_196 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_196 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 11)) 49)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 12)) 52)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_196 us_void_param)))))
(declare-fun temp___String_Literal_197 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_197 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_197 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 11)) 49)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 12)) 53)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_197 us_void_param)))))
(declare-fun temp___String_Literal_198 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_198 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_198 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 11)) 49)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 12)) 54)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_198 us_void_param)))))
(declare-fun temp___String_Literal_199 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_199 us_void_param) 1)) 46) (= (to_rep (select (temp___String_Literal_199 us_void_param) 2)) 47)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 3)) 76)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 5)) 103)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 6)) 47)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 7)) 70)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 11)) 49)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 12)) 55)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 13)) 46)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 14)) 108)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 15)) 111)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 16)) 103)) :pattern ((temp___String_Literal_199 us_void_param)))))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const i Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(define-fun dynamic_invariant5 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant6 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant7 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant8 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(assert (= logfilenames (auditlog__logfilenames__aggregate_def (temp___String_Literal_183 Tuple0) (temp___String_Literal_184 Tuple0) (temp___String_Literal_185 Tuple0) (temp___String_Literal_186 Tuple0) (temp___String_Literal_187 Tuple0) (temp___String_Literal_188 Tuple0) (temp___String_Literal_189 Tuple0) (temp___String_Literal_190 Tuple0) (temp___String_Literal_191 Tuple0) (temp___String_Literal_192 Tuple0) (temp___String_Literal_193 Tuple0) (temp___String_Literal_194 Tuple0) (temp___String_Literal_195 Tuple0) (temp___String_Literal_196 Tuple0) (temp___String_Literal_197 Tuple0) (temp___String_Literal_198 Tuple0) (temp___String_Literal_199 Tuple0))))
(define-fun dynamic_invariant9 ((temp___expr_1152 Int) (temp___is_init_1149 Bool) (temp___skip_constant_1150 Bool) (temp___do_toplevel_1151 Bool)) Bool (=> (or (= temp___is_init_1149 true) (<= 1 16)) (in_range13 temp___expr_1152)))
(define-fun dynamic_invariant10 ((temp___expr_353 Int) (temp___is_init_350 Bool) (temp___skip_constant_351 Bool) (temp___do_toplevel_352 Bool)) Bool (=> (or (= temp___is_init_350 true) (<= 1901 2099)) (in_range5 temp___expr_353)))
(define-fun dynamic_invariant11 ((temp___expr_359 Int) (temp___is_init_356 Bool) (temp___skip_constant_357 Bool) (temp___do_toplevel_358 Bool)) Bool (=> (or (= temp___is_init_356 true) (<= 1 12)) (in_range6 temp___expr_359)))
(define-fun dynamic_invariant12 ((temp___expr_365 Int) (temp___is_init_362 Bool) (temp___skip_constant_363 Bool) (temp___do_toplevel_364 Bool)) Bool (=> (or (= temp___is_init_362 true) (<= 1 31)) (in_range7 temp___expr_365)))
(define-fun dynamic_invariant13 ((temp___expr_389 Int) (temp___is_init_386 Bool) (temp___skip_constant_387 Bool) (temp___do_toplevel_388 Bool)) Bool (=> (or (= temp___is_init_386 true) (<= 0 86399999)) (in_range8 temp___expr_389)))
(assert (= zerotime (mk___rep (mk___split_fields (of_rep2 1901) (of_rep3 1) (of_rep4 1) (of_rep5 0)))))
(define-fun dynamic_invariant14 ((temp___expr_405 Int) (temp___is_init_402 Bool) (temp___skip_constant_403 Bool) (temp___do_toplevel_404 Bool)) Bool (=> (or (= temp___is_init_402 true) (<= 1 21)) (in_range9 temp___expr_405)))
(declare-const logfiles (Array Int us_rep1))
(declare-const fileh us_rep1)
(declare-const status Int)
(declare-const numberentries Int)
(declare-const firsttime (Array Int character))
(declare-const timeok Bool)
(declare-const timecount Int)
(declare-const o millisecst)
(declare-const o1 dayst)
(declare-const o2 monthst)
(declare-const o3 yearst)
(declare-const o4 yearst)
(declare-const o5 monthst)
(declare-const o6 dayst)
(declare-const o7 millisecst)
(declare-const temp___1711 yearst)
(declare-const temp___17111 monthst)
(declare-const temp___17112 dayst)
(declare-const temp___17113 millisecst)
(declare-const o8 (Array Int character))
(declare-const temp___1704 (Array Int character))
(declare-const temp___17041 t1)
(declare-const o9 (Array Int character))
(declare-const o10 t1)
(declare-const o11 integer)
(declare-const o12 integer)
(declare-const o13 Bool)
(declare-const o14 Int)
(declare-const result Bool)
(declare-const timeok1 Bool)
(declare-const result1 Int)
(declare-const numberentries1 Int)
(declare-const result2 (Array Int character))
(declare-const firsttime1 (Array Int character))
(declare-const result3 us_rep1)
(declare-const fileh1 us_rep1)
(declare-const fileh2 us_rep1)
(declare-const result4 Bool)
(declare-const fileh3 us_rep1)
(declare-const ok Bool)
(declare-const result5 Bool)
(declare-const result6 Int)
(declare-const status1 Int)
(declare-const fileh4 us_rep1)
(declare-const timecount1 Int)
(declare-const file__getstring__text (Array Int character))
(declare-const result7 (Array Int character))
(declare-const firsttime2 (Array Int character))
(declare-const result8 Bool)
(declare-const timeok2 Bool)
(declare-const result9 Bool)
(declare-const fileh5 us_rep1)
(declare-const numberentries2 Int)
(assert (= (auditlog__logfilenames__aggregate_def (temp___String_Literal_183 Tuple0) (temp___String_Literal_184 Tuple0) (temp___String_Literal_185 Tuple0) (temp___String_Literal_186 Tuple0) (temp___String_Literal_187 Tuple0) (temp___String_Literal_188 Tuple0) (temp___String_Literal_189 Tuple0) (temp___String_Literal_190 Tuple0) (temp___String_Literal_191 Tuple0) (temp___String_Literal_192 Tuple0) (temp___String_Literal_193 Tuple0) (temp___String_Literal_194 Tuple0) (temp___String_Literal_195 Tuple0) (temp___String_Literal_196 Tuple0) (temp___String_Literal_197 Tuple0) (temp___String_Literal_198 Tuple0) (temp___String_Literal_199 Tuple0)) logfilenames))
(assert (= (to_rep5 o) 0))
(assert (= (to_rep4 o1) 1))
(assert (= (to_rep3 o2) 1))
(assert (= (to_rep2 o3) 1901))
(assert (= o3 o4))
(assert (= o2 o5))
(assert (= o1 o6))
(assert (= o o7))
(assert (= temp___1711 o4))
(assert (= temp___17111 o5))
(assert (= temp___17112 o6))
(assert (= temp___17113 o7))
(assert (= (mk___rep (mk___split_fields temp___1711 temp___17111 temp___17112 temp___17113)) zerotime))
(assert (=> (<= 0 2) (in_range12 status)))
(assert (=> (<= 0 1024) (in_range11 numberentries)))
(assert (in_range10 i))
(assert (= result timeok))
(assert (= timeok1 (of_int 1)))
(assert (=> (<= 0 2147483647) (in_range4 timecount)))
(assert (= result1 numberentries))
(assert (= numberentries1 0))
(assert (= o8 (printtime zerotime)))
(assert (= result2 firsttime))
(assert (= firsttime1 o8))
(assert (= result3 fileh))
(assert (= fileh1 (select logfiles i)))
(assert (dynamic_property1 1 2147483647 1 16))
(assert (= (select logfilenames i) temp___1704))
(assert (= (mk1 1 16) temp___17041))
(assert (not (= (to_rep1 (first2 temp___17041)) 1)))
(check-sat)
(exit)
