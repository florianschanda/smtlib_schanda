(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(define-fun dynamic_invariant ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range2 temp___expr_74)))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-sort linelengthindex 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 256)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (linelengthindex linelengthindex) Bool)
(declare-const dummy2 linelengthindex)
(declare-datatypes () ((linelengthindex__ref (mk_linelengthindex__ref (linelengthindex__content linelengthindex)))))
(define-fun linelengthindex__ref___projection ((a linelengthindex__ref)) linelengthindex (linelengthindex__content a))
(define-fun dynamic_invariant2 ((temp___expr_211 Int) (temp___is_init_207 Bool) (temp___skip_constant_208 Bool) (temp___do_toplevel_209 Bool) (temp___do_typ_inv_210 Bool)) Bool (=> (or (= temp___is_init_207 true) (<= 1 256)) (in_range3 temp___expr_211)))
(declare-sort domainnamestringtypeindex 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (domainnamestringtypeindex domainnamestringtypeindex) Bool)
(declare-const dummy3 domainnamestringtypeindex)
(declare-datatypes () ((domainnamestringtypeindex__ref (mk_domainnamestringtypeindex__ref (domainnamestringtypeindex__content domainnamestringtypeindex)))))
(define-fun domainnamestringtypeindex__ref___projection ((a domainnamestringtypeindex__ref)) domainnamestringtypeindex (domainnamestringtypeindex__content a))
(define-fun dynamic_invariant3 ((temp___expr_228 Int) (temp___is_init_224 Bool) (temp___skip_constant_225 Bool) (temp___do_toplevel_226 Bool) (temp___do_typ_inv_227 Bool)) Bool (=> (or (= temp___is_init_224 true) (<= 1 128)) (in_range4 temp___expr_228)))
(declare-sort wirestringtypeindex 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 129)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (wirestringtypeindex wirestringtypeindex) Bool)
(declare-const dummy4 wirestringtypeindex)
(declare-datatypes () ((wirestringtypeindex__ref (mk_wirestringtypeindex__ref (wirestringtypeindex__content wirestringtypeindex)))))
(define-fun wirestringtypeindex__ref___projection ((a wirestringtypeindex__ref)) wirestringtypeindex (wirestringtypeindex__content a))
(declare-const blankwire (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun rr_type__blankwire__aggregate_def (Int) (Array Int character))
(declare-fun domainnamelength ((Array Int character)) Int)
(declare-fun domainnamelength__function_guard (Int (Array Int character)) Bool)
(declare-const domainnameversion (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const r18b Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t19b__ref (mk_t19b__ref (t19b__content integer)))))
(define-fun t19b__ref___projection ((a t19b__ref)) integer (t19b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const c21b Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(define-fun dynamic_invariant4 ((temp___expr_245 Int) (temp___is_init_241 Bool) (temp___skip_constant_242 Bool) (temp___do_toplevel_243 Bool) (temp___do_typ_inv_244 Bool)) Bool (=> (or (= temp___is_init_241 true) (<= 1 129)) (in_range5 temp___expr_245)))
(assert (= blankwire (rr_type__blankwire__aggregate_def 32)))
(assert (forall ((temp___161 Int)) (=> (dynamic_invariant temp___161 true true true true) (forall ((temp___162 Int)) (= (to_rep (select (rr_type__blankwire__aggregate_def temp___161) temp___162)) temp___161)))))
(declare-const lengthofdomainname Int)
(declare-const wireversion (Array Int character))
(declare-const i Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const rr_type__convertdomainnametowire__L_6__C21b__assume Int)
(declare-const o2 Int)
(declare-const o3 character)
(declare-const o4 Int)
(declare-const o5 Bool)
(declare-const temp___368 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 character)
(declare-const o9 Int)
(declare-const o10 Bool)
(declare-const o11 Bool)
(declare-const o12 Int)
(declare-const o13 character)
(declare-const result Int)
(declare-const lengthofdomainname1 Int)
(declare-const result1 (Array Int character))
(declare-const wireversion1 (Array Int character))
(declare-const result2 Int)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const c22b Int)
(declare-const result__ Int)
(declare-const result3 Int)
(declare-const result__1 Int)
(declare-const result4 Bool)
(declare-const result__2 Int)
(declare-const result5 Int)
(declare-const result__3 Int)
(declare-const result6 Bool)
(declare-const result__4 Int)
(declare-const result__5 Int)
(declare-const result__6 Int)
(declare-const result__7 Int)
(declare-const result7 Int)
(declare-const c22b1 Int)
(assert (= (rr_type__blankwire__aggregate_def 32) blankwire))
(assert (=> (<= 1 128) (in_range4 lengthofdomainname)))
(assert (and (= o (domainnamelength domainnameversion)) (and (in_range4 o) (or (or (and (= o 1) (or (= (to_rep (select domainnameversion 1)) 32) (= (to_rep (select domainnameversion 2)) 32))) (= o 128)) (and (= (to_rep (select domainnameversion (+ o 1))) 32) (forall ((q Int)) (=> (and (<= 1 q) (<= q o)) (not (= (to_rep (select domainnameversion q)) 32)))))))))
(assert (= (mk_int__ref result) (mk_int__ref lengthofdomainname)))
(assert (= lengthofdomainname1 o))
(assert (= (mk_map__ref result1) (mk_map__ref wireversion)))
(assert (= wireversion1 blankwire))
(assert (= (- lengthofdomainname1 1) r18b))
(assert (in_range1 r18b))
(assert (= (mk_int__ref result2) (mk_int__ref i)))
(assert (= i1 1))
(assert (<= 1 i1))
(assert (<= i1 r18b))
(assert (and (<= 1 lengthofdomainname1) (<= lengthofdomainname1 128)))
(assert (and (=> (<= 1 r18b) (dynamic_property 1 r18b i2)) (and (<= 1 i2) (<= i2 r18b))))
(assert (= (to_rep (select domainnameversion i2)) 46))
(assert (and (= o1 (+ i2 1)) (in_range1 (+ i2 1))))
(assert (and (= rr_type__convertdomainnametowire__L_6__C21b__assume o1) (in_range3 o1)))
(assert (= rr_type__convertdomainnametowire__L_6__C21b__assume c21b))
(assert (in_range3 c21b))
(assert (=> (<= 0 255) (in_range2 c22b)))
(assert (=> (<= 1 256) (in_range3 result__)))
(assert (= result__ result3))
(assert (= result__1 c21b))
(assert (=> (< result__1 128) (and (<= 1 result__1) (<= result__1 128))))
(assert (=> (< result__1 128) (= o2 result__1)))
(assert (=> (< result__1 128) (= o3 (select domainnameversion o2))))
(assert (=> (< result__1 128) (= o4 (to_rep o3))))
(assert (=> (< result__1 128) (= o5 (ite (= o4 46) true false))))
(assert (=> (< result__1 128) (= result4 (ite (not (= o5 true)) true false))))
(assert (=> (not (< result__1 128)) (= result4 false)))
(assert (=> (= result4 true) (= temp___368 result__1)))
(assert (=> (= result4 true) (and (<= c21b result__2) (< result__2 256))))
(assert (=> (= result4 true) (and (=> (<= 1 256) (in_range3 result__2)) (and (< result__2 128) (not (= (to_rep (select domainnameversion result__2)) 46))))))
(assert (=> (= result4 true) (and (= o6 (+ result__2 1)) (in_range3 (+ result__2 1)))))
(assert (=> (= result4 true) (= result__2 result5)))
(assert (=> (= result4 true) (= result__3 o6)))
(assert (=> (= result4 true) (=> (< result__3 128) (and (<= 1 result__3) (<= result__3 128)))))
(assert (=> (= result4 true) (=> (< result__3 128) (= o7 result__3))))
(assert (=> (= result4 true) (=> (< result__3 128) (= o8 (select domainnameversion o7)))))
(assert (=> (= result4 true) (=> (< result__3 128) (= o9 (to_rep o8)))))
(assert (=> (= result4 true) (=> (< result__3 128) (= o10 (ite (= o9 46) true false)))))
(assert (=> (= result4 true) (=> (< result__3 128) (= o11 (ite (not (= o10 true)) true false)))))
(assert (=> (= result4 true) (=> (not (< result__3 128)) (= o11 false))))
(assert (=> (= result4 true) (= result6 (ite (not (= o11 true)) true false))))
(assert (=> (= result4 true) (= result6 true)))
(assert (=> (= result4 true) (= result__3 result__4)))
(assert (=> (= result4 true) (= result__5 result__3)))
(assert (=> (= result4 true) (= (mk_int__ref result__6) (mk_int__ref result__4))))
(assert (=> (= result4 true) (= result__7 result__5)))
(assert (=> (not (= result4 true)) (= result__1 result__6)))
(assert (=> (not (= result4 true)) (= result__7 result__1)))
(assert (and (= o12 (- result__6 c21b)) (in_range2 (- result__6 c21b))))
(assert (= c22b result7))
(assert (= c22b1 o12))
(assert (= (to_rep o13) c22b1))
(assert (not (in_range1 (+ i2 1))))
(check-sat)
(exit)
