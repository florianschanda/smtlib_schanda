(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort index_type 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (index_type index_type) Bool)
(declare-const dummy index_type)
(declare-datatypes () ((index_type__ref (mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref___projection ((a index_type__ref)) index_type (index_type__content a))
(define-fun dynamic_invariant ((temp___expr_175 Int) (temp___is_init_171 Bool) (temp___skip_constant_172 Bool) (temp___do_toplevel_173 Bool) (temp___do_typ_inv_174 Bool)) Bool (=> (or (= temp___is_init_171 true) (<= 1 100)) (in_range1 temp___expr_175)))
(declare-sort extended_index_type 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (extended_index_type extended_index_type) Bool)
(declare-const dummy1 extended_index_type)
(declare-datatypes () ((extended_index_type__ref (mk_extended_index_type__ref (extended_index_type__content extended_index_type)))))
(define-fun extended_index_type__ref___projection ((a extended_index_type__ref)) extended_index_type (extended_index_type__content a))
(define-fun dynamic_invariant1 ((temp___expr_182 Int) (temp___is_init_178 Bool) (temp___skip_constant_179 Bool) (temp___do_toplevel_180 Bool) (temp___do_typ_inv_181 Bool)) Bool (=> (or (= temp___is_init_178 true) (<= 0 100)) (in_range2 temp___expr_182)))
(declare-fun to_rep (extended_index_type) Int)
(declare-fun of_rep (Int) extended_index_type)
(assert (forall ((x extended_index_type)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x extended_index_type)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort position_type 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (position_type position_type) Bool)
(declare-const dummy2 position_type)
(declare-datatypes () ((position_type__ref (mk_position_type__ref (position_type__content position_type)))))
(define-fun position_type__ref___projection ((a position_type__ref)) position_type (position_type__content a))
(declare-fun to_rep1 (position_type) Int)
(declare-fun of_rep1 (Int) position_type)
(assert (forall ((x position_type)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x position_type)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort direction 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (direction direction) Bool)
(declare-const dummy3 direction)
(declare-datatypes () ((direction__ref (mk_direction__ref (direction__content direction)))))
(define-fun direction__ref___projection ((a direction__ref)) direction (direction__content a))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep 0)
(declare-fun bool_eq (us_rep us_rep) Bool)
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((sequence__ref (mk_sequence__ref (sequence__content us_rep)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep (sequence__content a))
(declare-fun length (us_rep) Int)
(declare-fun length__function_guard (Int us_rep) Bool)
(declare-sort count_type 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (count_type count_type) Bool)
(declare-const dummy5 count_type)
(declare-datatypes () ((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type (count_type__content a))
(define-fun dynamic_invariant2 ((temp___expr_168 Int) (temp___is_init_164 Bool) (temp___skip_constant_165 Bool) (temp___do_toplevel_166 Bool) (temp___do_typ_inv_167 Bool)) Bool (=> (or (= temp___is_init_164 true) (<= 0 2147483647)) (in_range5 temp___expr_168)))
(define-fun last ((container us_rep)) Int (+ 0 (length container)))
(declare-fun last__function_guard (Int us_rep) Bool)
(declare-fun get (us_rep Int) Int)
(declare-fun get__function_guard (Int us_rep Int) Bool)
(define-fun oeq ((left us_rep) (right us_rep)) Bool (and (= (length left) (length right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun oeq__function_guard (Bool us_rep us_rep) Bool)
(assert (forall ((a us_rep) (b us_rep)) (! (= (user_eq4 a b) (oeq a b)) :pattern ((user_eq4 a b)))))
(define-fun default_initial_assumption ((temp___expr_232 us_rep) (temp___skip_top_level_233 Bool)) Bool (=> (not (= temp___skip_top_level_233 true)) (= (length temp___expr_232) 0)))
(assert (forall ((container us_rep)) (! (let ((result (length container))) (and (<= (+ 0 result) 2147483647) (dynamic_invariant2 result true false true true))) :pattern ((length container)))))
(define-fun ole ((left us_rep) (right us_rep)) Bool (and (<= (length left) (length right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun ole__function_guard (Bool us_rep us_rep) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__tree_model__path_type__a us_rep) (rec__tree_model__path_type__k Bool)))))
(define-fun us_split_fields_A__projection ((a us_split_fields)) us_rep (rec__tree_model__path_type__a a))
(define-fun us_split_fields_K__projection ((a us_split_fields)) Bool (rec__tree_model__path_type__k a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep1 (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep1)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (user_eq4 (rec__tree_model__path_type__a (us_split_fields1 a)) (rec__tree_model__path_type__a (us_split_fields1 b))) true) (= (rec__tree_model__path_type__k (us_split_fields1 a)) (rec__tree_model__path_type__k (us_split_fields1 b)))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const tree_model__path_type__a__first__bit Int)
(declare-const tree_model__path_type__a__last__bit Int)
(declare-const tree_model__path_type__a__position Int)
(assert (<= 0 tree_model__path_type__a__first__bit))
(assert (< tree_model__path_type__a__first__bit tree_model__path_type__a__last__bit))
(assert (<= 0 tree_model__path_type__a__position))
(declare-const tree_model__path_type__k__first__bit Int)
(declare-const tree_model__path_type__k__last__bit Int)
(declare-const tree_model__path_type__k__position Int)
(assert (<= 0 tree_model__path_type__k__first__bit))
(assert (< tree_model__path_type__k__first__bit tree_model__path_type__k__last__bit))
(assert (<= 0 tree_model__path_type__k__position))
(declare-fun user_eq6 (us_rep1 us_rep1) Bool)
(declare-const dummy6 us_rep1)
(declare-datatypes () ((path_type__ref (mk_path_type__ref (path_type__content us_rep1)))))
(define-fun path_type__ref___projection ((a path_type__ref)) us_rep1 (path_type__content a))
(declare-fun is_concat (us_rep us_rep us_rep) Bool)
(declare-fun is_concat__function_guard (Bool us_rep us_rep us_rep) Bool)
(assert true)
(assert (forall ((q us_rep) (v us_rep) (p us_rep)) (! (= (= (is_concat q v p) true) (and (and (and (= (- (length p) (length v)) (length q)) (forall ((i Int)) (=> (and (<= 1 i) (<= i (length q))) (= (get p i) (get q i))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i (length v))) (= (get p (+ i (length q))) (get v i))))) (forall ((i Int)) (=> (and (<= (+ (length q) 1) i) (<= i (length p))) (= (get v (- i (length q))) (get p i)))))) :pattern ((is_concat q v p)))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int us_rep1))))))
(declare-fun slide ((Array Int us_rep1) Int Int) (Array Int us_rep1))
(assert (forall ((a (Array Int us_rep1))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int us_rep1))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int us_rep1)) (a__first Int) (a__last Int) (b (Array Int us_rep1)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq1 (select a temp___idx_154) (select b (+ (- b__first a__first) temp___idx_154))) true)))) true false))
(assert (forall ((a (Array Int us_rep1)) (b (Array Int us_rep1))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq1 (select a temp___idx_154) (select b (+ (- b__first a__first) temp___idx_154))) true))))))))
(declare-fun oeq1 ((Array Int us_rep1) (Array Int us_rep1)) Bool)
(declare-fun oeq__function_guard1 (Bool (Array Int us_rep1) (Array Int us_rep1)) Bool)
(define-fun dynamic_invariant3 ((temp___expr_251 (Array Int us_rep1)) (temp___is_init_247 Bool) (temp___skip_constant_248 Bool) (temp___do_toplevel_249 Bool) (temp___do_typ_inv_250 Bool)) Bool (forall ((temp___252 Int)) (=> (and (<= 1 temp___252) (<= temp___252 100)) (=> (= temp___is_init_247 true) (< (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___expr_251 temp___252)))) 100)))))
(define-fun default_initial_assumption1 ((temp___expr_254 (Array Int us_rep1)) (temp___skip_top_level_255 Bool)) Bool (forall ((temp___256 Int)) (=> (and (<= 1 temp___256) (<= temp___256 100)) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___expr_254 temp___256)))) 0) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___expr_254 temp___256))) (distinct 0 0))))))
(assert true)
(assert (forall ((m1 (Array Int us_rep1)) (m2 (Array Int us_rep1))) (! (= (= (oeq1 m1 m2) true) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (and (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select m1 i))) (rec__tree_model__path_type__a (us_split_fields1 (select m2 i)))) true) (= (= (rec__tree_model__path_type__k (us_split_fields1 (select m1 i))) true) (= (rec__tree_model__path_type__k (us_split_fields1 (select m2 i))) true)))))) :pattern ((oeq1 m1 m2)))))
(declare-fun is_add (us_rep Int us_rep) Bool)
(declare-fun is_add__function_guard (Bool us_rep Int us_rep) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__binary_trees__cell__left extended_index_type) (rec__binary_trees__cell__right extended_index_type) (rec__binary_trees__cell__parent extended_index_type) (rec__binary_trees__cell__position position_type)))))
(define-fun us_split_fields_Left__projection ((a us_split_fields2)) extended_index_type (rec__binary_trees__cell__left a))
(define-fun us_split_fields_Right__projection ((a us_split_fields2)) extended_index_type (rec__binary_trees__cell__right a))
(define-fun us_split_fields_Parent__projection ((a us_split_fields2)) extended_index_type (rec__binary_trees__cell__parent a))
(define-fun us_split_fields_Position__projection ((a us_split_fields2)) position_type (rec__binary_trees__cell__position a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep2 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___2__projection ((a us_rep2)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq3 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (to_rep (rec__binary_trees__cell__left (us_split_fields3 a))) (to_rep (rec__binary_trees__cell__left (us_split_fields3 b)))) (= (to_rep (rec__binary_trees__cell__right (us_split_fields3 a))) (to_rep (rec__binary_trees__cell__right (us_split_fields3 b))))) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 a))) (to_rep (rec__binary_trees__cell__parent (us_split_fields3 b))))) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 a))) (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep2) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep2) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep2)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment2 a))))
(declare-const binary_trees__cell__left__first__bit Int)
(declare-const binary_trees__cell__left__last__bit Int)
(declare-const binary_trees__cell__left__position Int)
(assert (<= 0 binary_trees__cell__left__first__bit))
(assert (< binary_trees__cell__left__first__bit binary_trees__cell__left__last__bit))
(assert (<= 0 binary_trees__cell__left__position))
(declare-const binary_trees__cell__right__first__bit Int)
(declare-const binary_trees__cell__right__last__bit Int)
(declare-const binary_trees__cell__right__position Int)
(assert (<= 0 binary_trees__cell__right__first__bit))
(assert (< binary_trees__cell__right__first__bit binary_trees__cell__right__last__bit))
(assert (<= 0 binary_trees__cell__right__position))
(declare-const binary_trees__cell__parent__first__bit Int)
(declare-const binary_trees__cell__parent__last__bit Int)
(declare-const binary_trees__cell__parent__position Int)
(assert (<= 0 binary_trees__cell__parent__first__bit))
(assert (< binary_trees__cell__parent__first__bit binary_trees__cell__parent__last__bit))
(assert (<= 0 binary_trees__cell__parent__position))
(declare-const binary_trees__cell__position__first__bit Int)
(declare-const binary_trees__cell__position__last__bit Int)
(declare-const binary_trees__cell__position__position Int)
(assert (<= 0 binary_trees__cell__position__first__bit))
(assert (< binary_trees__cell__position__first__bit binary_trees__cell__position__last__bit))
(assert (<= 0 binary_trees__cell__position__position))
(declare-fun user_eq7 (us_rep2 us_rep2) Bool)
(declare-const dummy7 us_rep2)
(declare-datatypes () ((cell__ref (mk_cell__ref (cell__content us_rep2)))))
(define-fun cell__ref___projection ((a cell__ref)) us_rep2 (cell__content a))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int us_rep2))))))
(declare-fun slide1 ((Array Int us_rep2) Int Int) (Array Int us_rep2))
(assert (forall ((a (Array Int us_rep2))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int us_rep2))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq4 ((a (Array Int us_rep2)) (a__first Int) (a__last Int) (b (Array Int us_rep2)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq3 (select a temp___idx_155) (select b (+ (- b__first a__first) temp___idx_155))) true)))) true false))
(assert (forall ((a (Array Int us_rep2)) (b (Array Int us_rep2))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq3 (select a temp___idx_155) (select b (+ (- b__first a__first) temp___idx_155))) true))))))))
(declare-const dummy8 (Array Int us_rep2))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int us_rep2)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int us_rep2)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int us_rep2)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int us_rep2))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int us_rep2))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int us_rep2))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq8 ((Array Int us_rep2) (Array Int us_rep2)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__binary_trees__forest__s extended_index_type) (rec__binary_trees__forest__c (Array Int us_rep2))))))
(define-fun us_split_fields_S__projection ((a us_split_fields4)) extended_index_type (rec__binary_trees__forest__s a))
(define-fun us_split_fields_C__projection ((a us_split_fields4)) (Array Int us_rep2) (rec__binary_trees__forest__c a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep3 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___3__projection ((a us_rep3)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq5 ((a us_rep3) (b us_rep3)) Bool (ite (and (= (to_rep (rec__binary_trees__forest__s (us_split_fields5 a))) (to_rep (rec__binary_trees__forest__s (us_split_fields5 b)))) (= (bool_eq4 (rec__binary_trees__forest__c (us_split_fields5 a)) 1 100 (rec__binary_trees__forest__c (us_split_fields5 b)) 1 100) true)) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep3) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep3) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep3)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment4 a))))
(declare-const binary_trees__forest__s__first__bit Int)
(declare-const binary_trees__forest__s__last__bit Int)
(declare-const binary_trees__forest__s__position Int)
(assert (<= 0 binary_trees__forest__s__first__bit))
(assert (< binary_trees__forest__s__first__bit binary_trees__forest__s__last__bit))
(assert (<= 0 binary_trees__forest__s__position))
(declare-const binary_trees__forest__c__first__bit Int)
(declare-const binary_trees__forest__c__last__bit Int)
(declare-const binary_trees__forest__c__position Int)
(assert (<= 0 binary_trees__forest__c__first__bit))
(assert (< binary_trees__forest__c__first__bit binary_trees__forest__c__last__bit))
(assert (<= 0 binary_trees__forest__c__position))
(declare-fun user_eq9 (us_rep3 us_rep3) Bool)
(declare-const dummy9 us_rep3)
(declare-datatypes () ((forest__ref (mk_forest__ref (forest__content us_rep3)))))
(define-fun forest__ref___projection ((a forest__ref)) us_rep3 (forest__content a))
(declare-fun size (us_rep3) Int)
(declare-fun size__function_guard (Int us_rep3) Bool)
(declare-fun tree_structure (us_rep3) Bool)
(declare-fun tree_structure__function_guard (Bool us_rep3) Bool)
(define-fun default_initial_assumption2 ((temp___expr_317 us_rep3) (temp___skip_top_level_318 Bool)) Bool (and (and (= (to_rep (rec__binary_trees__forest__s (us_split_fields5 temp___expr_317))) 0) (forall ((temp___320 Int)) (=> (and (<= 1 temp___320) (<= temp___320 100)) (and (and (and (= (to_rep (rec__binary_trees__cell__left (us_split_fields3 (select (rec__binary_trees__forest__c (us_split_fields5 temp___expr_317)) temp___320)))) 0) (= (to_rep (rec__binary_trees__cell__right (us_split_fields3 (select (rec__binary_trees__forest__c (us_split_fields5 temp___expr_317)) temp___320)))) 0)) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select (rec__binary_trees__forest__c (us_split_fields5 temp___expr_317)) temp___320)))) 0)) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (select (rec__binary_trees__forest__c (us_split_fields5 temp___expr_317)) temp___320)))) 2))))) (=> (not (= temp___skip_top_level_318 true)) (= (size temp___expr_317) 0))))
(define-fun type_invariant ((temp___323 us_rep3)) Bool (= (tree_structure temp___323) true))
(declare-fun model__ (us_rep3 Int) (Array Int us_rep1))
(declare-fun model____function_guard ((Array Int us_rep1) us_rep3 Int) Bool)
(declare-fun valid_root (us_rep3 Int) Bool)
(declare-fun valid_root__function_guard (Bool us_rep3 Int) Bool)
(declare-fun parent (us_rep3 Int) Int)
(declare-fun parent__function_guard (Int us_rep3 Int) Bool)
(declare-fun position (us_rep3 Int) Int)
(declare-fun position__function_guard (Int us_rep3 Int) Bool)
(assert (forall ((f us_rep3)) (forall ((root Int)) (! (=> (and (and (dynamic_invariant root true true true true) (type_invariant f)) (= (valid_root f root) true)) (let ((result (model__ f root))) (and (and (= (rec__tree_model__path_type__k (us_split_fields1 (select result root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select result root)))) 0) (and (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (not (= i root)) (ite (and (not (= (parent f i) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select result (parent f i)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select result i))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select result i))) true)))))) (and (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select result i))) true) (not (= i root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select result (parent f i)))) (position f i) (rec__tree_model__path_type__a (us_split_fields1 (select result i)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select result i)))) 0)))) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select result i))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select result j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select result i))) (rec__tree_model__path_type__a (us_split_fields1 (select result j)))) true)) (= j i))))))))))) (dynamic_invariant3 result true false true true)))) :pattern ((model__ f root))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const root Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const v Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const r256b Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-sort tcount_typeB 0)
(define-fun in_range6 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq10 (tcount_typeB tcount_typeB) Bool)
(declare-const dummy10 tcount_typeB)
(declare-datatypes () ((tcount_typeB__ref (mk_tcount_typeB__ref (tcount_typeB__content tcount_typeB)))))
(define-fun tcount_typeB__ref___projection ((a tcount_typeB__ref)) tcount_typeB (tcount_typeB__content a))
(declare-fun to_rep2 (tcount_typeB) Int)
(declare-fun of_rep2 (Int) tcount_typeB)
(assert (forall ((x tcount_typeB)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x tcount_typeB)) (! (in_range6 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq11 (tcount_typeB tcount_typeB) Bool)
(declare-const dummy11 tcount_typeB)
(declare-datatypes () ((t257b__ref (mk_t257b__ref (t257b__content tcount_typeB)))))
(define-fun t257b__ref___projection ((a t257b__ref)) tcount_typeB (t257b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(assert (forall ((f us_rep3)) (! (=> (type_invariant f) (dynamic_invariant1 (size f) true false true true)) :pattern ((size f)))))
(assert (forall ((f us_rep3)) (! (= (size f) (to_rep (rec__binary_trees__forest__s (us_split_fields5 f)))) :pattern ((size f)))))
(assert (forall ((f us_rep3)) (forall ((i Int)) (! (=> (and (dynamic_invariant i true true true true) (type_invariant f)) (=> (< (size f) i) (not (= (valid_root f i) true)))) :pattern ((valid_root f i))))))
(assert (forall ((f us_rep3)) (forall ((i Int)) (! (= (= (valid_root f i) true) (and (<= i (to_rep (rec__binary_trees__forest__s (us_split_fields5 f)))) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (let ((temp___330 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___330 i))))) 2))) :pattern ((valid_root f i))))))
(assert (forall ((f us_rep3)) (forall ((i Int)) (! (=> (and (dynamic_invariant i true true true true) (type_invariant f)) (let ((result (parent f i))) (and (and (=> (= (valid_root f i) true) (= result 0)) (=> (= (size f) 0) (= result 0))) (dynamic_invariant1 result true false true true)))) :pattern ((parent f i))))))
(assert (forall ((f us_rep3)) (forall ((i Int)) (! (=> (dynamic_invariant i true true true true) (= (parent f i) (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (let ((temp___334 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___334 i))))))) :pattern ((parent f i))))))
(define-fun dynamic_invariant4 ((temp___expr_196 Int) (temp___is_init_192 Bool) (temp___skip_constant_193 Bool) (temp___do_toplevel_194 Bool) (temp___do_typ_inv_195 Bool)) Bool (=> (or (= temp___is_init_192 true) (<= 0 1)) (in_range4 temp___expr_196)))
(assert (forall ((f us_rep3)) (forall ((i Int)) (! (=> (and (and (dynamic_invariant i true true true true) (type_invariant f)) (not (= (parent f i) 0))) (dynamic_invariant4 (position f i) true false true true)) :pattern ((position f i))))))
(assert (forall ((f us_rep3)) (forall ((i Int)) (! (=> (dynamic_invariant i true true true true) (= (position f i) (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (let ((temp___338 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___338 i))))))) :pattern ((position f i))))))
(define-fun default_initial_assumption3 ((temp___expr_299 us_rep2) (temp___skip_top_level_300 Bool)) Bool (and (and (and (= (to_rep (rec__binary_trees__cell__left (us_split_fields3 temp___expr_299))) 0) (= (to_rep (rec__binary_trees__cell__right (us_split_fields3 temp___expr_299))) 0)) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 temp___expr_299))) 0)) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 temp___expr_299))) 2)))
(define-fun default_initial_assumption4 ((temp___expr_307 (Array Int us_rep2)) (temp___skip_top_level_308 Bool)) Bool (forall ((temp___309 Int)) (=> (and (<= 1 temp___309) (<= temp___309 100)) (and (and (and (= (to_rep (rec__binary_trees__cell__left (us_split_fields3 (select temp___expr_307 temp___309)))) 0) (= (to_rep (rec__binary_trees__cell__right (us_split_fields3 (select temp___expr_307 temp___309)))) 0)) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select temp___expr_307 temp___309)))) 0)) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (select temp___expr_307 temp___309)))) 2)))))
(assert true)
(assert (forall ((f us_rep3)) (! (= (= (tree_structure f) true) (and (and (and (and (and (and (and (and (forall ((i Int)) (=> (and (<= (+ (to_rep (rec__binary_trees__forest__s (us_split_fields5 f))) 1) i) (<= i 100)) (= (bool_eq3 (let ((temp___439 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___439 i)) (mk___rep1 (mk___split_fields1 (of_rep 0) (of_rep 0) (of_rep 0) (of_rep1 2)))) true))) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (and (<= 0 (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (let ((temp___440 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___440 i)))))) (<= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (let ((temp___440 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___440 i))))) (to_rep (rec__binary_trees__forest__s (us_split_fields5 f)))))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (and (<= 0 (to_rep (rec__binary_trees__cell__left (us_split_fields3 (let ((temp___441 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___441 i)))))) (<= (to_rep (rec__binary_trees__cell__left (us_split_fields3 (let ((temp___441 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___441 i))))) (to_rep (rec__binary_trees__forest__s (us_split_fields5 f)))))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (and (<= 0 (to_rep (rec__binary_trees__cell__right (us_split_fields3 (let ((temp___442 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___442 i)))))) (<= (to_rep (rec__binary_trees__cell__right (us_split_fields3 (let ((temp___442 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___442 i))))) (to_rep (rec__binary_trees__forest__s (us_split_fields5 f)))))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (let ((temp___444 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___444 i))))) 2) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (let ((temp___443 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___443 i))))) 0))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (not (= (to_rep (rec__binary_trees__cell__left (us_split_fields3 (let ((temp___449 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___449 i))))) 0)) (and (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (let ((temp___445 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___445 (to_rep (rec__binary_trees__cell__left (us_split_fields3 (let ((temp___446 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___446 i)))))))))) 0) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (let ((temp___447 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___447 (to_rep (rec__binary_trees__cell__left (us_split_fields3 (let ((temp___448 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___448 i)))))))))) i)))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (not (= (to_rep (rec__binary_trees__cell__right (us_split_fields3 (let ((temp___454 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___454 i))))) 0)) (and (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (let ((temp___450 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___450 (to_rep (rec__binary_trees__cell__right (us_split_fields3 (let ((temp___451 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___451 i)))))))))) 1) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (let ((temp___452 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___452 (to_rep (rec__binary_trees__cell__right (us_split_fields3 (let ((temp___453 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___453 i)))))))))) i)))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (and (not (= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (let ((temp___457 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___457 i))))) 0)) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (let ((temp___458 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___458 i))))) 0)) (= (to_rep (rec__binary_trees__cell__left (us_split_fields3 (let ((temp___455 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___455 (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (let ((temp___456 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___456 i)))))))))) i))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (and (not (= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (let ((temp___461 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___461 i))))) 0)) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (let ((temp___462 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___462 i))))) 1)) (= (to_rep (rec__binary_trees__cell__right (us_split_fields3 (let ((temp___459 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___459 (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (let ((temp___460 (rec__binary_trees__forest__c (us_split_fields5 f)))) (select temp___460 i)))))))))) i)))))) :pattern ((tree_structure f)))))
(define-fun dynamic_invariant5 ((temp___expr_189 Int) (temp___is_init_185 Bool) (temp___skip_constant_186 Bool) (temp___do_toplevel_187 Bool) (temp___do_typ_inv_188 Bool)) Bool (=> (or (= temp___is_init_185 true) (<= 0 2)) (in_range3 temp___expr_189)))
(define-fun dynamic_invariant6 ((temp___expr_239 us_rep1) (temp___is_init_235 Bool) (temp___skip_constant_236 Bool) (temp___do_toplevel_237 Bool) (temp___do_typ_inv_238 Bool)) Bool (=> (= temp___do_toplevel_237 true) (=> (= temp___is_init_235 true) (< (length (rec__tree_model__path_type__a (us_split_fields1 temp___expr_239))) 100))))
(define-fun default_initial_assumption5 ((temp___expr_241 us_rep1) (temp___skip_top_level_242 Bool)) Bool (and (= (length (rec__tree_model__path_type__a (us_split_fields1 temp___expr_241))) 0) (= (rec__tree_model__path_type__k (us_split_fields1 temp___expr_241)) (distinct 0 0))))
(define-fun dynamic_predicate ((temp___245 us_rep1)) Bool (< (length (rec__tree_model__path_type__a (us_split_fields1 temp___245))) 100))
(define-fun olt ((left us_rep) (right us_rep)) Bool (and (< (length left) (length right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun olt__function_guard (Bool us_rep us_rep) Bool)
(assert true)
(assert (forall ((s1 us_rep) (s2 us_rep)) (forall ((d Int)) (! (= (= (is_add s1 d s2) true) (and (and (= (- (length s2) 1) (length s1)) (= (olt s1 s2) true)) (= (get s2 (length s2)) d))) :pattern ((is_add s1 d s2))))))
(declare-sort extended_index 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq12 (extended_index extended_index) Bool)
(declare-const dummy12 extended_index)
(declare-datatypes () ((extended_index__ref (mk_extended_index__ref (extended_index__content extended_index)))))
(define-fun extended_index__ref___projection ((a extended_index__ref)) extended_index (extended_index__content a))
(define-fun dynamic_invariant7 ((temp___expr_224 Int) (temp___is_init_220 Bool) (temp___skip_constant_221 Bool) (temp___do_toplevel_222 Bool) (temp___do_typ_inv_223 Bool)) Bool (=> (or (= temp___is_init_220 true) (<= 0 2147483647)) (in_range7 temp___expr_224)))
(declare-sort element_type 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq13 (element_type element_type) Bool)
(declare-const dummy13 element_type)
(declare-datatypes () ((element_type__ref (mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___projection ((a element_type__ref)) element_type (element_type__content a))
(define-fun dynamic_invariant8 ((temp___expr_217 Int) (temp___is_init_213 Bool) (temp___skip_constant_214 Bool) (temp___do_toplevel_215 Bool) (temp___do_typ_inv_216 Bool)) Bool (=> (or (= temp___is_init_213 true) (<= 0 1)) (in_range8 temp___expr_217)))
(assert (forall ((container us_rep)) (forall ((position1 Int)) (! (=> (and (dynamic_invariant7 position1 true true true true) (and (<= 1 position1) (<= position1 (last container)))) (dynamic_invariant8 (get container position1) true false true true)) :pattern ((get container position1))))))
(declare-const f__split_fields extended_index_type)
(declare-const f__split_fields1 (Array Int us_rep2))
(declare-const f_old__split_fields extended_index_type)
(declare-const f_old__split_fields1 (Array Int us_rep2))
(declare-const n Int)
(declare-const temp___1510 (Array Int us_rep1))
(declare-const o us_rep1)
(declare-const o1 us_split_fields)
(declare-const temp___1509 (Array Int us_rep1))
(declare-const o2 us_rep1)
(declare-const o3 us_split_fields)
(declare-const o4 us_rep)
(declare-const o5 Int)
(declare-const temp___1508 (Array Int us_rep1))
(declare-const o6 us_rep1)
(declare-const o7 us_split_fields)
(declare-const temp___1511 (Array Int us_rep1))
(declare-const o8 Int)
(declare-const o9 us_rep1)
(declare-const o10 us_split_fields)
(declare-const o11 us_rep)
(declare-const temp___1514 (Array Int us_rep1))
(declare-const o12 Int)
(declare-const o13 us_rep1)
(declare-const o14 us_split_fields)
(declare-const o15 us_rep)
(declare-const temp___1517 (Array Int us_rep1))
(declare-const o16 us_rep1)
(declare-const o17 us_split_fields)
(declare-const o18 us_rep)
(declare-const temp___1518 (Array Int us_rep1))
(declare-const o19 us_rep1)
(declare-const o20 us_split_fields)
(declare-const o21 us_rep)
(declare-const o22 Int)
(declare-const o23 Int)
(declare-const o24 Int)
(declare-const temp___1522 (Array Int us_rep1))
(declare-const o25 us_rep1)
(declare-const o26 us_split_fields)
(declare-const temp___1521 (Array Int us_rep1))
(declare-const o27 us_rep1)
(declare-const o28 us_split_fields)
(declare-const o29 us_rep)
(declare-const o30 Int)
(declare-const temp___1520 (Array Int us_rep1))
(declare-const o31 us_rep1)
(declare-const o32 us_split_fields)
(declare-const o33 Bool)
(declare-const o34 Int)
(declare-const o35 Int)
(declare-const temp___1523 (Array Int us_rep1))
(declare-const o36 Int)
(declare-const o37 us_rep1)
(declare-const o38 us_split_fields)
(declare-const o39 us_rep)
(declare-const temp___1526 (Array Int us_rep1))
(declare-const o40 Int)
(declare-const o41 us_rep1)
(declare-const o42 us_split_fields)
(declare-const o43 us_rep)
(declare-const o44 Int)
(declare-const o45 Int)
(declare-const temp___1529 (Array Int us_rep1))
(declare-const o46 us_rep1)
(declare-const o47 us_split_fields)
(declare-const o48 us_rep)
(declare-const temp___1530 (Array Int us_rep1))
(declare-const o49 us_rep1)
(declare-const o50 us_split_fields)
(declare-const o51 us_rep)
(declare-const temp___1531 (Array Int us_rep1))
(declare-const o52 Int)
(declare-const o53 us_rep1)
(declare-const o54 us_split_fields)
(declare-const o55 us_rep)
(declare-const o56 Int)
(declare-const i Int)
(declare-const temp___1538 (Array Int us_rep1))
(declare-const o57 Int)
(declare-const o58 us_rep1)
(declare-const o59 us_split_fields)
(declare-const o60 us_rep)
(declare-const o61 Int)
(declare-const temp___1537 (Array Int us_rep1))
(declare-const o62 Int)
(declare-const o63 us_rep1)
(declare-const o64 us_split_fields)
(declare-const temp___1536 (Array Int us_rep1))
(declare-const o65 Int)
(declare-const o66 us_rep1)
(declare-const o67 us_split_fields)
(declare-const temp___1535 (Array Int us_rep1))
(declare-const o68 Int)
(declare-const o69 us_rep1)
(declare-const o70 us_split_fields)
(declare-const o71 us_rep)
(declare-const result int__ref)
(declare-const n1 Int)
(declare-const n2 Int)
(declare-const ki Int)
(declare-const result1 int__ref)
(declare-const ki1 Int)
(declare-const result2 Bool)
(declare-const result3 Bool)
(declare-const result4 Bool)
(declare-const result5 Bool)
(declare-const result6 Bool)
(declare-const result7 Bool)
(declare-const ki2 Int)
(declare-const result8 Bool)
(declare-const result9 Bool)
(declare-const result10 Bool)
(assert (in_range1 root))
(assert (in_range2 v))
(assert (and (= (tree_structure (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1))) true) (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true)))
(assert (and (= (to_rep f__split_fields) (to_rep f_old__split_fields)) (and (<= root (to_rep f__split_fields)) (and (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (select f_old__split_fields1 root)))) 2) (and (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (select f__split_fields1 root)))) 2) (and (not (= v root)) (and (and (<= 1 v) (<= v (to_rep f__split_fields))) (and (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (select f_old__split_fields1 v)))) 2) (and (not (= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 v)))) 0)) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root) (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 v))))))) true) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 v)) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 i1)))) (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f_old__split_fields1 i1)))))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 v)) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (select f__split_fields1 i1)))) (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (select f_old__split_fields1 i1)))))))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (not (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root) j))) true)) (= (to_rep (rec__binary_trees__cell__left (us_split_fields3 (select f__split_fields1 j)))) (to_rep (rec__binary_trees__cell__left (us_split_fields3 (select f_old__split_fields1 j)))))))) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (not (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root) j))) true)) (= (to_rep (rec__binary_trees__cell__right (us_split_fields3 (select f__split_fields1 j)))) (to_rep (rec__binary_trees__cell__right (us_split_fields3 (select f_old__split_fields1 j)))))))))))))))))))))
(assert (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (and (and (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1))) true) (= (ole (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) v))) (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1)))) true)) (not (= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 i1)))) 0))) (or (= i1 v) (= (ole (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) v))) (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 i1)))))))) true))))))
(assert (= result (mk_int__ref n)))
(assert (= n1 1))
(assert (<= 1 n1))
(assert (<= n1 100))
(assert (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (and (and (< 0 (length (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) v))))) (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1))) true)) (<= (length (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1)))) (- n2 1))) (ite (= (ole (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) v))) (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1)))) true) (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) v) i1))) true) (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root) i1))) true))))))
(assert (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root) i1))) true) (<= (length (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root) i1)))) (- n2 1))) (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1))) true)))))
(assert (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (and (and (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) v) i1))) true) (<= (length (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) v) i1)))) (- n2 1))) (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 v))))))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1))) true)))))
(assert (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1))) true) (<= (length (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1)))) (- n2 1))) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root) i1))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1))) (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root) i1)))) true))))))
(assert (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1))) true) (<= (length (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1)))) (- n2 1))) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) v) i1))) true) (= (is_concat (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) v))) (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) v) i1))) (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1)))) true))))))
(assert (and (=> (<= 1 100) (in_range1 n2)) (and (<= 1 n2) (<= n2 100))))
(assert (= result1 (mk_int__ref ki)))
(assert (= ki1 1))
(assert (<= 1 ki1))
(assert (<= ki1 100))
(assert (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true))
(assert (and (= temp___1508 (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root)) (and (dynamic_invariant3 temp___1508 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1508 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1508 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1508 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1508 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1508 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1508 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1508 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1508 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1508 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1508 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1508 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1508 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1508 j)))) true)) (= j i1))))))))))))))
(assert (= o6 (select temp___1508 ki1)))
(assert (= o7 (us_split_fields1 o6)))
(assert (= result4 (rec__tree_model__path_type__k o7)))
(assert (=> (= result4 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true)))
(assert (=> (= result4 true) (and (= temp___1509 (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root)) (and (dynamic_invariant3 temp___1509 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1509 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1509 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1509 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1509 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1509 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1509 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1509 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1509 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1509 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1509 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1509 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1509 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1509 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result4 true) (= o2 (select temp___1509 ki1))))
(assert (=> (= result4 true) (= o3 (us_split_fields1 o2))))
(assert (=> (= result4 true) (= o4 (rec__tree_model__path_type__a o3))))
(assert (=> (= result4 true) (and (= o5 (length o4)) (and (in_range5 o5) (<= (+ 0 o5) 2147483647)))))
(assert (=> (= result4 true) (= result3 (ite (= o5 n2) true false))))
(assert (=> (not (= result4 true)) (= result3 false)))
(assert (=> (= result3 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1))) true)))
(assert (=> (= result3 true) (and (= temp___1510 (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root)) (and (dynamic_invariant3 temp___1510 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1510 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1510 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1510 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1510 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1510 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1510 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1510 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1510 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1510 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1510 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1510 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1510 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1510 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result3 true) (= o (select temp___1510 ki1))))
(assert (=> (= result3 true) (= o1 (us_split_fields1 o))))
(assert (=> (= result3 true) (= result2 (rec__tree_model__path_type__k o1))))
(assert (=> (not (= result3 true)) (= result2 false)))
(assert (=> (= result2 true) (and (= o22 (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (select f__split_fields1 ki1))))) (in_range4 (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (select f__split_fields1 ki1))))))))
(assert (=> (= result2 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1))) true)))
(assert (=> (= result2 true) (and (= temp___1518 (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root)) (and (dynamic_invariant3 temp___1518 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1518 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1518 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1518 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1518 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1518 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1518 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1518 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1518 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1518 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1518 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1518 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1518 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1518 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result2 true) (= o19 (select temp___1518 ki1))))
(assert (=> (= result2 true) (= o20 (us_split_fields1 o19))))
(assert (=> (= result2 true) (= o21 (rec__tree_model__path_type__a o20))))
(assert (=> (= result2 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true)))
(assert (=> (= result2 true) (and (= temp___1517 (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root)) (and (dynamic_invariant3 temp___1517 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1517 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1517 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1517 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1517 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1517 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1517 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1517 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1517 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1517 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1517 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1517 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1517 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1517 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result2 true) (= o16 (select temp___1517 ki1))))
(assert (=> (= result2 true) (= o17 (us_split_fields1 o16))))
(assert (=> (= result2 true) (= o18 (rec__tree_model__path_type__a o17))))
(assert (=> (= result2 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1))) true)))
(assert (=> (= result2 true) (and (= temp___1514 (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root)) (and (dynamic_invariant3 temp___1514 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1514 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1514 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1514 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1514 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1514 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1514 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1514 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1514 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1514 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1514 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1514 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1514 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1514 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result2 true) (and (<= 1 (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 ki1))))) (<= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 ki1)))) 100))))
(assert (=> (= result2 true) (= o12 (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 ki1)))))))
(assert (=> (= result2 true) (= o13 (select temp___1514 o12))))
(assert (=> (= result2 true) (= o14 (us_split_fields1 o13))))
(assert (=> (= result2 true) (= o15 (rec__tree_model__path_type__a o14))))
(assert (=> (= result2 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true)))
(assert (=> (= result2 true) (and (= temp___1511 (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root)) (and (dynamic_invariant3 temp___1511 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1511 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1511 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1511 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1511 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1511 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1511 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1511 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1511 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1511 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1511 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1511 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1511 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1511 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result2 true) (and (<= 1 (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 ki1))))) (<= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 ki1)))) 100))))
(assert (=> (= result2 true) (= o8 (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 ki1)))))))
(assert (=> (= result2 true) (= o9 (select temp___1511 o8))))
(assert (=> (= result2 true) (= o10 (us_split_fields1 o9))))
(assert (=> (= result2 true) (= o11 (rec__tree_model__path_type__a o10))))
(assert (=> (= result2 true) (= (oeq o18 o21) true)))
(assert (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true))
(assert (and (= temp___1520 (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root)) (and (dynamic_invariant3 temp___1520 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1520 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1520 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1520 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1520 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1520 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1520 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1520 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1520 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1520 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1520 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1520 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1520 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1520 j)))) true)) (= j i1))))))))))))))
(assert (= o31 (select temp___1520 ki1)))
(assert (= o32 (us_split_fields1 o31)))
(assert (= result7 (rec__tree_model__path_type__k o32)))
(assert (=> (= result7 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true)))
(assert (=> (= result7 true) (and (= temp___1521 (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root)) (and (dynamic_invariant3 temp___1521 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1521 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1521 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1521 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1521 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1521 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1521 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1521 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1521 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1521 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1521 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1521 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1521 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1521 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result7 true) (= o27 (select temp___1521 ki1))))
(assert (=> (= result7 true) (= o28 (us_split_fields1 o27))))
(assert (=> (= result7 true) (= o29 (rec__tree_model__path_type__a o28))))
(assert (=> (= result7 true) (and (= o30 (length o29)) (and (in_range5 o30) (<= (+ 0 o30) 2147483647)))))
(assert (=> (= result7 true) (= result6 (ite (= o30 n2) true false))))
(assert (=> (not (= result7 true)) (= result6 false)))
(assert (=> (= result6 true) (and (= o23 v) (in_range1 v))))
(assert (=> (= result6 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1))) true)))
(assert (=> (= result6 true) (and (= o24 v) (in_range1 v))))
(assert (=> (= result6 true) (and (= temp___1522 (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) o24)) (and (dynamic_invariant3 temp___1522 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1522 o24))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1522 o24)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 o24)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1522 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1522 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1522 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1522 i1))) true) (not (= i1 o24))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1522 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1522 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1522 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1522 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1522 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1522 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1522 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result6 true) (= o25 (select temp___1522 ki1))))
(assert (=> (= result6 true) (= o26 (us_split_fields1 o25))))
(assert (=> (= result6 true) (= o33 (rec__tree_model__path_type__k o26))))
(assert (=> (not (= result6 true)) (= o33 false)))
(assert (= result5 (ite (and (= o33 true) (not (= ki1 v))) true false)))
(assert (=> (= result5 true) (and (= o56 (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (select f__split_fields1 ki1))))) (in_range4 (to_rep1 (rec__binary_trees__cell__position (us_split_fields3 (select f__split_fields1 ki1))))))))
(assert (=> (= result5 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true)))
(assert (=> (= result5 true) (and (= temp___1531 (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root)) (and (dynamic_invariant3 temp___1531 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1531 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1531 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1531 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1531 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1531 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1531 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1531 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1531 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1531 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1531 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1531 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1531 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1531 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result5 true) (and (<= 1 v) (<= v 100))))
(assert (=> (= result5 true) (= o52 v)))
(assert (=> (= result5 true) (= o53 (select temp___1531 o52))))
(assert (=> (= result5 true) (= o54 (us_split_fields1 o53))))
(assert (=> (= result5 true) (= o55 (rec__tree_model__path_type__a o54))))
(assert (=> (= result5 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true)))
(assert (=> (= result5 true) (and (= temp___1530 (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root)) (and (dynamic_invariant3 temp___1530 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1530 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1530 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1530 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1530 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1530 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1530 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1530 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1530 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1530 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1530 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1530 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1530 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1530 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result5 true) (= o49 (select temp___1530 ki1))))
(assert (=> (= result5 true) (= o50 (us_split_fields1 o49))))
(assert (=> (= result5 true) (= o51 (rec__tree_model__path_type__a o50))))
(assert (=> (= result5 true) (and (= o44 v) (in_range1 v))))
(assert (=> (= result5 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1))) true)))
(assert (=> (= result5 true) (and (= o45 v) (in_range1 v))))
(assert (=> (= result5 true) (and (= temp___1529 (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) o45)) (and (dynamic_invariant3 temp___1529 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1529 o45))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1529 o45)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 o45)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1529 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1529 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1529 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1529 i1))) true) (not (= i1 o45))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1529 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1529 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1529 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1529 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1529 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1529 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1529 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result5 true) (= o46 (select temp___1529 ki1))))
(assert (=> (= result5 true) (= o47 (us_split_fields1 o46))))
(assert (=> (= result5 true) (= o48 (rec__tree_model__path_type__a o47))))
(assert (=> (= result5 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true)))
(assert (=> (= result5 true) (and (= temp___1526 (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root)) (and (dynamic_invariant3 temp___1526 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1526 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1526 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1526 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1526 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1526 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1526 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1526 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1526 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1526 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1526 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1526 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1526 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1526 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result5 true) (and (<= 1 (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 ki1))))) (<= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 ki1)))) 100))))
(assert (=> (= result5 true) (= o40 (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 ki1)))))))
(assert (=> (= result5 true) (= o41 (select temp___1526 o40))))
(assert (=> (= result5 true) (= o42 (us_split_fields1 o41))))
(assert (=> (= result5 true) (= o43 (rec__tree_model__path_type__a o42))))
(assert (=> (= result5 true) (and (= o34 v) (in_range1 v))))
(assert (=> (= result5 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1))) true)))
(assert (=> (= result5 true) (and (= o35 v) (in_range1 v))))
(assert (=> (= result5 true) (and (= temp___1523 (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) o35)) (and (dynamic_invariant3 temp___1523 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1523 o35))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1523 o35)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 o35)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1523 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1523 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1523 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1523 i1))) true) (not (= i1 o35))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1523 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1523 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1523 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1523 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1523 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1523 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1523 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result5 true) (and (<= 1 (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 ki1))))) (<= (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 ki1)))) 100))))
(assert (=> (= result5 true) (= o36 (to_rep (rec__binary_trees__cell__parent (us_split_fields3 (select f__split_fields1 ki1)))))))
(assert (=> (= result5 true) (= o37 (select temp___1523 o36))))
(assert (=> (= result5 true) (= o38 (us_split_fields1 o37))))
(assert (=> (= result5 true) (= o39 (rec__tree_model__path_type__a o38))))
(assert (=> (= result5 true) (= (is_concat o55 o48 o51) true)))
(assert (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 ki2)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1))) true) (<= (length (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1)))) n2)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root) i1))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1))) (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root) i1)))) true))))))
(assert (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 ki2)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1))) true) (<= (length (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1)))) n2)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) v) i1))) true) (= (is_concat (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) v))) (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) v) i1))) (rec__tree_model__path_type__a (us_split_fields1 (select (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root) i1)))) true))))))
(assert (and (=> (<= 1 100) (in_range1 ki2)) (and (<= 1 ki2) (<= ki2 100))))
(assert (<= 1 i))
(assert (<= i ki2))
(assert (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true))
(assert (and (= temp___1537 (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root)) (and (dynamic_invariant3 temp___1537 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1537 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1537 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1537 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1537 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1537 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1537 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1537 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1537 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1537 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1537 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1537 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1537 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1537 j)))) true)) (= j i1))))))))))))))
(assert (and (<= 1 i) (<= i 100)))
(assert (= o62 i))
(assert (= o63 (select temp___1537 o62)))
(assert (= o64 (us_split_fields1 o63)))
(assert (= result9 (rec__tree_model__path_type__k o64)))
(assert (=> (= result9 true) (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true)))
(assert (=> (= result9 true) (and (= temp___1538 (model__ (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) root)) (and (dynamic_invariant3 temp___1538 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1538 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1538 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1538 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1538 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1538 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1538 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1538 (parent (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1538 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1538 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1538 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1538 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1538 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1538 j)))) true)) (= j i1)))))))))))))))
(assert (=> (= result9 true) (and (<= 1 i) (<= i 100))))
(assert (=> (= result9 true) (= o57 i)))
(assert (=> (= result9 true) (= o58 (select temp___1538 o57))))
(assert (=> (= result9 true) (= o59 (us_split_fields1 o58))))
(assert (=> (= result9 true) (= o60 (rec__tree_model__path_type__a o59))))
(assert (=> (= result9 true) (and (= o61 (length o60)) (and (in_range5 o61) (<= (+ 0 o61) 2147483647)))))
(assert (=> (= result9 true) (= result8 (ite (<= o61 n2) true false))))
(assert (=> (not (= result9 true)) (= result8 false)))
(assert (= result8 true))
(assert (= (tree_structure (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1))) true))
(assert (and (= temp___1536 (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root)) (and (dynamic_invariant3 temp___1536 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1536 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1536 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1536 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1536 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1536 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1536 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1536 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1536 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1536 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1536 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1536 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1536 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1536 j)))) true)) (= j i1))))))))))))))
(assert (and (<= 1 i) (<= i 100)))
(assert (= o65 i))
(assert (= o66 (select temp___1536 o65)))
(assert (= o67 (us_split_fields1 o66)))
(assert (= result10 (rec__tree_model__path_type__k o67)))
(assert (= result10 true))
(assert (= (tree_structure (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1))) true))
(assert (and (= temp___1535 (model__ (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) root)) (and (dynamic_invariant3 temp___1535 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1535 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1535 root)))) 0) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (not (= i1 root)) (ite (and (not (= (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) 0)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1535 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) true)) (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1535 i1))) true) (not (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1535 i1))) true)))))) (and (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1535 i1))) true) (not (= i1 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields1 (select temp___1535 (parent (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1)))) (position (mk___rep2 (mk___split_fields2 f_old__split_fields f_old__split_fields1)) i1) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1535 i1)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields1 (select temp___1535 i1)))) 0)))) (forall ((i1 Int)) (=> (and (<= 1 i1) (<= i1 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1535 i1))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields1 (select temp___1535 j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields1 (select temp___1535 i1))) (rec__tree_model__path_type__a (us_split_fields1 (select temp___1535 j)))) true)) (= j i1))))))))))))))
(assert (and (<= 1 i) (<= i 100)))
(assert (= o68 i))
(assert (= o69 (select temp___1535 o68)))
(assert (= o70 (us_split_fields1 o69)))
(assert (= o71 (rec__tree_model__path_type__a o70)))
(assert (not (= (tree_structure (mk___rep2 (mk___split_fields2 f__split_fields f__split_fields1))) true)))
(check-sat)
(exit)
