(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((text__ref (mk_text__ref (text__content us_t)))))
(define-fun text__ref___projection ((a text__ref)) us_t (text__content a))
(define-fun dynamic_invariant ((temp___expr_159 us_t) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (and (=> (not (= temp___skip_constant_156 true)) (dynamic_property 1 2147483647 (first1 temp___expr_159) (last1 temp___expr_159))) (=> (= temp___do_toplevel_157 true) (=> (= temp___is_init_155 true) (= (first1 temp___expr_159) 1)))))
(define-fun dynamic_predicate ((temp___162 us_t)) Bool (= (first1 temp___162) 1))
(declare-fun match_at (us_t us_t Int) Bool)
(declare-fun match_at__function_guard (Bool us_t us_t Int) Bool)
(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(declare-fun partial_match_at (us_t us_t Int Int) Bool)
(declare-fun partial_match_at__function_guard (Bool us_t us_t Int Int) Bool)
(assert true)
(assert (forall ((needle us_t) (haystack us_t)) (forall ((loc Int)) (! (= (= (match_at needle haystack loc) true) (and (<= (- loc 1) (- (length haystack) (length needle))) (= (partial_match_at needle haystack loc (length needle)) true))) :pattern ((match_at needle haystack loc))))))
(declare-const needle us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const haystack us_t)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((t13b__ref (mk_t13b__ref (t13b__content integer)))))
(define-fun t13b__ref___projection ((a t13b__ref)) integer (t13b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t14b__ref (mk_t14b__ref (t14b__content integer)))))
(define-fun t14b__ref___projection ((a t14b__ref)) integer (t14b__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq6 (us_t1 us_t1) Bool)
(declare-const dummy6 us_t1)
(declare-datatypes () ((t15b__ref (mk_t15b__ref (t15b__content us_t1)))))
(define-fun t15b__ref___projection ((a t15b__ref)) us_t1 (t15b__content a))
(declare-sort natural 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (natural natural) Bool)
(declare-const dummy7 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range4 temp___expr_39)))
(define-fun dynamic_invariant3 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant4 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(assert true)
(assert (forall ((needle1 us_t) (haystack1 us_t)) (forall ((loc Int) (len Int)) (! (= (= (partial_match_at needle1 haystack1 loc len) true) (forall ((i Int)) (=> (and (<= 1 i) (<= i len)) (= (to_rep (select (to_array needle1) i)) (to_rep (select (to_array haystack1) (+ loc (- i 1)))))))) :pattern ((partial_match_at needle1 haystack1 loc len))))))
(declare-const i Int)
(declare-const string_search__brute_force_slice__result Int)
(declare-const temp___310 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const temp___311 Int)
(declare-const temp___309 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const temp___307 Int)
(declare-const o7 (Array Int character))
(declare-const temp___308 (Array Int character))
(declare-const temp___3081 t1)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const temp___3071 Int)
(declare-const o10 (Array Int character))
(declare-const temp___3082 (Array Int character))
(declare-const temp___3083 t1)
(declare-const string_search__brute_force_slice__result1 Int)
(declare-const result Int)
(declare-const i1 Int)
(declare-const result1 Bool)
(declare-const result2 Int)
(declare-const string_search__brute_force_slice__result2 Int)
(declare-const i2 Int)
(declare-const string_search__brute_force_slice__result3 Int)
(declare-const result3 Int)
(declare-const i3 Int)
(declare-const result4 Bool)
(declare-const result5 Int)
(declare-const string_search__brute_force_slice__result4 Int)
(declare-const i4 Int)
(declare-const string_search__brute_force_slice__result5 Int)
(declare-const i5 Int)
(declare-const string_search__brute_force_slice__result6 Int)
(declare-const i6 Int)
(declare-const string_search__brute_force_slice__result7 Int)
(declare-const i7 Int)
(declare-const string_search__brute_force_slice__result8 Int)
(declare-const i8 Int)
(declare-const string_search__brute_force_slice__result9 Int)
(declare-const i9 Int)
(declare-const string_search__brute_force_slice__result10 Int)
(declare-const result6 Int)
(declare-const string_search__brute_force_slice__result11 Int)
(declare-const string_search__brute_force_slice__result12 Int)
(declare-const string_search__brute_force_slice__result13 Int)
(declare-const i10 Int)
(declare-const string_search__brute_force_slice__result14 Int)
(declare-const i11 Int)
(declare-const string_search__brute_force_slice__result15 Int)
(declare-const i12 Int)
(declare-const string_search__brute_force_slice__result16 int__ref)
(declare-const i13 Int)
(declare-const string_search__brute_force_slice__result17 Int)
(define-fun string_search__brute_force_slice__result18 () int__ref (mk_int__ref string_search__brute_force_slice__result14))
(define-fun i14 () int__ref (mk_int__ref i10))
(define-fun string_search__brute_force_slice__result19 () int__ref (mk_int__ref string_search__brute_force_slice__result9))
(define-fun i15 () int__ref (mk_int__ref i8))
(define-fun result7 () int__ref (mk_int__ref result))
(define-fun string_search__brute_force_slice__result20 () int__ref (mk_int__ref string_search__brute_force_slice__result))
(define-fun i16 () int__ref (mk_int__ref i))
(declare-const result8 Int)
(assert (dynamic_invariant needle true false true true))
(assert (dynamic_invariant haystack true false true true))
(assert (and (<= 1 (length needle)) (<= (length needle) (length haystack))))
(assert (or (and (and (and (= string_search__brute_force_slice__result18 (mk_int__ref string_search__brute_force_slice__result5)) (= i14 (mk_int__ref i4))) (and (= string_search__brute_force_slice__result15 string_search__brute_force_slice__result6) (= i11 i5))) (and (= temp___310 1) (and (and (and (and (and (and (= o (length needle)) (in_range1 (length needle))) (and (and (= o1 (length haystack)) (in_range1 (length haystack))) (= o2 (- o1 o)))) (and (= o3 o2) (in_range1 o2))) (= o4 (+ o3 1))) (and (= temp___311 o4) (in_range1 o4))) (and (and (= result7 i16) (= i1 temp___310)) (and (and (<= temp___310 i1) (<= i1 temp___311)) (and (= temp___309 i1) (or (and (and (and (= string_search__brute_force_slice__result2 string_search__brute_force_slice__result5) (= i1 i4)) (and (= string_search__brute_force_slice__result6 string_search__brute_force_slice__result2) (= i5 i1))) (and (and (and (and (and (and (= o5 (- (to_rep1 (last (rt needle))) 1)) (in_range1 (- (to_rep1 (last (rt needle))) 1))) (= o6 (+ i1 o5))) (and (= temp___307 o6) (in_range1 o6))) (and (and (=> (<= i1 temp___307) (and (and (<= (to_rep1 (first (rt haystack))) i1) (<= i1 (to_rep1 (last (rt haystack))))) (and (<= (to_rep1 (first (rt haystack))) temp___307) (<= temp___307 (to_rep1 (last (rt haystack))))))) (= o7 (elts haystack))) (and (= o7 temp___308) (= (mk1 i1 temp___307) temp___3081)))) (= result1 (bool_eq (elts needle) (to_rep1 (first (rt needle))) (to_rep1 (last (rt needle))) temp___308 (to_rep1 (first2 temp___3081)) (to_rep1 (last2 temp___3081))))) (and (= result1 true) (and (= (mk_int__ref result2) string_search__brute_force_slice__result20) (= string_search__brute_force_slice__result2 i1))))) (and (and (and (and (and (and (and (= o5 (- (to_rep1 (last (rt needle))) 1)) (in_range1 (- (to_rep1 (last (rt needle))) 1))) (= o6 (+ i1 o5))) (and (= temp___307 o6) (in_range1 o6))) (and (and (=> (<= i1 temp___307) (and (and (<= (to_rep1 (first (rt haystack))) i1) (<= i1 (to_rep1 (last (rt haystack))))) (and (<= (to_rep1 (first (rt haystack))) temp___307) (<= temp___307 (to_rep1 (last (rt haystack))))))) (= o7 (elts haystack))) (and (= o7 temp___308) (= (mk1 i1 temp___307) temp___3081)))) (= result1 (bool_eq (elts needle) (to_rep1 (first (rt needle))) (to_rep1 (last (rt needle))) temp___308 (to_rep1 (first2 temp___3081)) (to_rep1 (last2 temp___3081))))) (and (not (= result1 true)) (and (= string_search__brute_force_slice__result2 string_search__brute_force_slice__result) (= string_search__brute_force_slice__result2 string_search__brute_force_slice__result1)))) (and (and (and (= string_search__brute_force_slice__result4 string_search__brute_force_slice__result5) (= i3 i4)) (and (= string_search__brute_force_slice__result6 string_search__brute_force_slice__result4) (= i5 i3))) (and (forall ((k Int)) (=> (and (<= 1 k) (<= k i2)) (not (= (match_at needle haystack k) true)))) (and (and (=> (<= 1 (+ (- (length haystack) (length needle)) 1)) (dynamic_property1 1 (+ (- (length haystack) (length needle)) 1) i2)) (and (<= 1 i2) (<= i2 (+ (- (length haystack) (length needle)) 1)))) (and (not (= i2 temp___311)) (and (and (= i2 result3) (= i3 (+ i2 1))) (and (and (and (and (and (and (= o8 (- (to_rep1 (last (rt needle))) 1)) (in_range1 (- (to_rep1 (last (rt needle))) 1))) (= o9 (+ i3 o8))) (and (= temp___3071 o9) (in_range1 o9))) (and (and (=> (<= i3 temp___3071) (and (and (<= (to_rep1 (first (rt haystack))) i3) (<= i3 (to_rep1 (last (rt haystack))))) (and (<= (to_rep1 (first (rt haystack))) temp___3071) (<= temp___3071 (to_rep1 (last (rt haystack))))))) (= o10 (elts haystack))) (and (= o10 temp___3082) (= (mk1 i3 temp___3071) temp___3083)))) (= result4 (bool_eq (elts needle) (to_rep1 (first (rt needle))) (to_rep1 (last (rt needle))) temp___3082 (to_rep1 (first2 temp___3083)) (to_rep1 (last2 temp___3083))))) (and (= result4 true) (and (= string_search__brute_force_slice__result3 result5) (= string_search__brute_force_slice__result4 i3))))))))))))))))) (and (and (and (and (and (and (and (= o (length needle)) (in_range1 (length needle))) (and (and (= o1 (length haystack)) (in_range1 (length haystack))) (= o2 (- o1 o)))) (and (= o3 o2) (in_range1 o2))) (= o4 (+ o3 1))) (and (= temp___311 o4) (in_range1 o4))) (and (and (= result7 i16) (= i1 1)) (ite (and (<= 1 i1) (<= i1 temp___311)) (and (and (and (= temp___309 i1) (and (and (and (and (and (and (and (= o5 (- (to_rep1 (last (rt needle))) 1)) (in_range1 (- (to_rep1 (last (rt needle))) 1))) (= o6 (+ i1 o5))) (and (= temp___307 o6) (in_range1 o6))) (and (and (=> (<= i1 temp___307) (and (and (<= (to_rep1 (first (rt haystack))) i1) (<= i1 (to_rep1 (last (rt haystack))))) (and (<= (to_rep1 (first (rt haystack))) temp___307) (<= temp___307 (to_rep1 (last (rt haystack))))))) (= o7 (elts haystack))) (and (= o7 temp___308) (= (mk1 i1 temp___307) temp___3081)))) (= result1 (bool_eq (elts needle) (to_rep1 (first (rt needle))) (to_rep1 (last (rt needle))) temp___308 (to_rep1 (first2 temp___3081)) (to_rep1 (last2 temp___3081))))) (and (not (= result1 true)) (and (= string_search__brute_force_slice__result2 string_search__brute_force_slice__result) (= string_search__brute_force_slice__result2 string_search__brute_force_slice__result1)))) (and (forall ((k Int)) (=> (and (<= 1 k) (<= k i2)) (not (= (match_at needle haystack k) true)))) (and (and (=> (<= 1 (+ (- (length haystack) (length needle)) 1)) (dynamic_property1 1 (+ (- (length haystack) (length needle)) 1) i2)) (and (<= 1 i2) (<= i2 (+ (- (length haystack) (length needle)) 1)))) (= i2 temp___311))))) (and (and (= string_search__brute_force_slice__result3 string_search__brute_force_slice__result7) (= i2 i6)) (and (= string_search__brute_force_slice__result8 string_search__brute_force_slice__result3) (= i7 i2)))) (and (and (= string_search__brute_force_slice__result19 (mk_int__ref string_search__brute_force_slice__result7)) (= i15 (mk_int__ref i6))) (and (= string_search__brute_force_slice__result10 string_search__brute_force_slice__result8) (= i9 i7)))) (and (and (= string_search__brute_force_slice__result19 string_search__brute_force_slice__result20) (= i1 i8)) (and (= string_search__brute_force_slice__result10 string_search__brute_force_slice__result1) (= i9 i1)))))) (and (and (and (= string_search__brute_force_slice__result18 (mk_int__ref string_search__brute_force_slice__result12)) (= i14 i15)) (and (= string_search__brute_force_slice__result15 string_search__brute_force_slice__result13) (= i11 i9))) (and (and (= string_search__brute_force_slice__result11 string_search__brute_force_slice__result12) (= string_search__brute_force_slice__result13 string_search__brute_force_slice__result11)) (and (= (mk_int__ref result6) string_search__brute_force_slice__result19) (= string_search__brute_force_slice__result11 0)))))))
(assert (= string_search__brute_force_slice__result16 string_search__brute_force_slice__result18))
(assert (= (mk_int__ref i12) i14))
(assert (= string_search__brute_force_slice__result17 string_search__brute_force_slice__result15))
(assert (= i13 i11))
(assert (= result8 (int__content string_search__brute_force_slice__result16)))
(assert (not (<= 0 (int__content string_search__brute_force_slice__result16))))
(check-sat)
(exit)
