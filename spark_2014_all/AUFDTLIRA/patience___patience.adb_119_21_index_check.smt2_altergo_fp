(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type card

predicate in_range2(x: int) = ((1 <= x) and (x <= 52))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : card, card -> bool

logic dummy1 : card

type card__ref = { card__content : card
}

function card__ref___projection(a: card__ref) : card = (a).card__content

logic to_rep : card -> int

logic of_rep : int -> card

axiom inversion_axiom : (forall x:card [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:card [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,card) farray
}

logic slide : (int,card) farray, int, int -> (int,card) farray

axiom slide_eq :
  (forall a:(int,card) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,card) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,card) farray, int, int, (int,card) farray, int,
  int -> (int,card) farray

axiom concat_def :
  (forall a:(int,card) farray. forall b:(int,card) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : card, int -> (int,card) farray

axiom singleton_def :
  (forall v:card.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq4 : (int,card) farray, int, int, (int,card) farray, int,
  int -> bool

axiom bool_eq_def3 :
  (forall a:(int,card) farray. forall a__first:int. forall a__last:int.
  forall b:(int,card) farray. forall b__first:int. forall b__last:int
  [bool_eq4(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_132:int. ((((a__first <= temp___idx_132) and
  (temp___idx_132 <= a__last)) and
  (to_rep((a[temp___idx_132])) = to_rep((b[((b__first - a__first) + temp___idx_132)])))) or
  (not ((a__first <= temp___idx_132) and (temp___idx_132 <= a__last)))))) ->
  (bool_eq4(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_132:int. (((a__first <= temp___idx_132) and
  (temp___idx_132 <= a__last)) ->
  (to_rep((a[temp___idx_132])) = to_rep((b[((b__first - a__first) + temp___idx_132)]))))))) ->
  (bool_eq4(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,card) farray. forall b:(int,card) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_132:int. (((a__first <= temp___idx_132) and
  (temp___idx_132 <= a__last)) ->
  (to_rep((a[temp___idx_132])) = to_rep((b[((b__first - a__first) + temp___idx_132)])))))))))

logic compare : (int,card) farray, int, int, (int,card) farray, int,
  int -> int

axiom compare_def_eq :
  (forall a:(int,card) farray. forall b:(int,card) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq4(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,card) farray. forall b:(int,card) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq4(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,card) farray. forall b:(int,card) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq4(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

type cardindex

predicate in_range3(x: int) = (((- 1) <= x) and (x <= 100))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : cardindex, cardindex -> bool

logic dummy2 : cardindex

type cardindex__ref = { cardindex__content : cardindex
}

function cardindex__ref___projection(a: cardindex__ref) : cardindex =
  (a).cardindex__content

logic to_rep1 : cardindex -> int

logic of_rep1 : int -> cardindex

axiom inversion_axiom1 :
  (forall x:cardindex [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:cardindex [to_rep1(x)]. in_range3(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range3(x) ->
  (to_rep1(of_rep1(x)) = x)))

type tcardarrayD1

predicate in_range4(x: int) = ((0 <= x) and (x <= 99))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : tcardarrayD1, tcardarrayD1 -> bool

logic dummy3 : tcardarrayD1

type tcardarrayD1__ref = { tcardarrayD1__content : tcardarrayD1
}

function tcardarrayD1__ref___projection(a: tcardarrayD1__ref) : tcardarrayD1 =
  (a).tcardarrayD1__content

type tindexarrayD1

predicate in_range5(x: int) = ((0 <= x) and (x <= 99))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq4 : tindexarrayD1, tindexarrayD1 -> bool

logic dummy4 : tindexarrayD1

type tindexarrayD1__ref = { tindexarrayD1__content : tindexarrayD1
}

function tindexarrayD1__ref___projection(a: tindexarrayD1__ref) : tindexarrayD1 =
  (a).tindexarrayD1__content

type map__ref1 = { map__content1 : (int,cardindex) farray
}

logic slide1 : (int,cardindex) farray, int, int -> (int,cardindex) farray

axiom slide_eq1 :
  (forall a:(int,cardindex) farray.
  (forall first:int [slide1(a, first, first)]. (slide1(a, first, first) = a)))

axiom slide_def1 :
  (forall a:(int,cardindex) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat1 : (int,cardindex) farray, int, int, (int,cardindex) farray,
  int, int -> (int,cardindex) farray

axiom concat_def1 :
  (forall a:(int,cardindex) farray. forall b:(int,cardindex) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat1(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat1(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat1(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton1 : cardindex, int -> (int,cardindex) farray

axiom singleton_def1 :
  (forall v:cardindex.
  (forall i:int [(singleton1(v, i)[i])]. ((singleton1(v, i)[i]) = v)))

logic bool_eq8 : (int,cardindex) farray, int, int, (int,cardindex) farray,
  int, int -> bool

axiom bool_eq_def7 :
  (forall a:(int,cardindex) farray. forall a__first:int. forall a__last:int.
  forall b:(int,cardindex) farray. forall b__first:int. forall b__last:int
  [bool_eq8(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_133:int. ((((a__first <= temp___idx_133) and
  (temp___idx_133 <= a__last)) and
  (to_rep1((a[temp___idx_133])) = to_rep1((b[((b__first - a__first) + temp___idx_133)])))) or
  (not ((a__first <= temp___idx_133) and (temp___idx_133 <= a__last)))))) ->
  (bool_eq8(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_133:int. (((a__first <= temp___idx_133) and
  (temp___idx_133 <= a__last)) ->
  (to_rep1((a[temp___idx_133])) = to_rep1((b[((b__first - a__first) + temp___idx_133)]))))))) ->
  (bool_eq8(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,cardindex) farray. forall b:(int,cardindex) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_133:int. (((a__first <= temp___idx_133) and
  (temp___idx_133 <= a__last)) ->
  (to_rep1((a[temp___idx_133])) = to_rep1((b[((b__first - a__first) + temp___idx_133)])))))))))

logic compare1 : (int,cardindex) farray, int, int, (int,cardindex) farray,
  int, int -> int

axiom compare_def_eq1 :
  (forall a:(int,cardindex) farray. forall b:(int,cardindex) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((compare1(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq8(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt1 :
  (forall a:(int,cardindex) farray. forall b:(int,cardindex) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((compare1(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq8(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep1((a[(i + 1)])) <  to_rep1((b[(j + 1)]))))))))))))

axiom compare_def_gt1 :
  (forall a:(int,cardindex) farray. forall b:(int,cardindex) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare1(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare1(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq8(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep1((b[(i + 1)])) <  to_rep1((a[(j + 1)]))))))))))))

type tindexmatrixD1

predicate in_range6(x: int) = ((0 <= x) and (x <= 99))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq5 : tindexmatrixD1, tindexmatrixD1 -> bool

logic dummy5 : tindexmatrixD1

type tindexmatrixD1__ref = { tindexmatrixD1__content : tindexmatrixD1
}

function tindexmatrixD1__ref___projection(a: tindexmatrixD1__ref) : tindexmatrixD1 =
  (a).tindexmatrixD1__content

logic dummy6 : (int,cardindex) farray

logic value__size : int

logic object__size : (int,cardindex) farray -> int

logic value__component__size : int

logic object__component__size : (int,cardindex) farray -> int

logic value__alignment : int

logic object__alignment : (int,cardindex) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,cardindex) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,cardindex) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,cardindex) farray. (0 <= object__alignment(a)))

logic user_eq6 : (int,cardindex) farray, (int,cardindex) farray -> bool

type map__ref2 = { map__content2 : (int,(int,cardindex) farray) farray
}

logic slide2 : (int,(int,cardindex) farray) farray, int,
  int -> (int,(int,cardindex) farray) farray

axiom slide_eq2 :
  (forall a:(int,(int,cardindex) farray) farray.
  (forall first:int [slide2(a, first, first)]. (slide2(a, first, first) = a)))

axiom slide_def2 :
  (forall a:(int,(int,cardindex) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat2 : (int,(int,cardindex) farray) farray, int, int,
  (int,(int,cardindex) farray) farray, int,
  int -> (int,(int,cardindex) farray) farray

axiom concat_def2 :
  (forall a:(int,(int,cardindex) farray) farray.
  forall b:(int,(int,cardindex) farray) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat2(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat2(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat2(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton2 : (int,cardindex) farray,
  int -> (int,(int,cardindex) farray) farray

axiom singleton_def2 :
  (forall v:(int,cardindex) farray.
  (forall i:int [(singleton2(v, i)[i])]. ((singleton2(v, i)[i]) = v)))

logic bool_eq10 : (int,(int,cardindex) farray) farray, int, int,
  (int,(int,cardindex) farray) farray, int, int -> bool

axiom bool_eq_def9 :
  (forall a:(int,(int,cardindex) farray) farray. forall a__first:int.
  forall a__last:int. forall b:(int,(int,cardindex) farray) farray.
  forall b__first:int. forall b__last:int [bool_eq10(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_134:int. ((((a__first <= temp___idx_134) and
  (temp___idx_134 <= a__last)) and (bool_eq8((a[temp___idx_134]), 0, 99,
  (b[((b__first - a__first) + temp___idx_134)]), 0, 99) = true)) or
  (not ((a__first <= temp___idx_134) and (temp___idx_134 <= a__last)))))) ->
  (bool_eq10(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_134:int. (((a__first <= temp___idx_134) and
  (temp___idx_134 <= a__last)) -> (bool_eq8((a[temp___idx_134]), 0, 99,
  (b[((b__first - a__first) + temp___idx_134)]), 0, 99) = true))))) ->
  (bool_eq10(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev2 :
  (forall a:(int,(int,cardindex) farray) farray.
  forall b:(int,(int,cardindex) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq10(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_134:int. (((a__first <= temp___idx_134) and
  (temp___idx_134 <= a__last)) -> (bool_eq8((a[temp___idx_134]), 0, 99,
  (b[((b__first - a__first) + temp___idx_134)]), 0, 99) = true)))))))

logic dummy7 : (int,card) farray

logic value__size1 : int

logic object__size1 : (int,card) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,card) farray -> int

logic value__alignment1 : int

logic object__alignment1 : (int,card) farray -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:(int,card) farray. (0 <= object__size1(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,card) farray. (0 <= object__component__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:(int,card) farray. (0 <= object__alignment1(a)))

logic user_eq7 : (int,card) farray, (int,card) farray -> bool

logic dummy8 : (int,(int,cardindex) farray) farray

logic value__size2 : int

logic object__size2 : (int,(int,cardindex) farray) farray -> int

logic value__component__size2 : int

logic object__component__size2 : (int,(int,cardindex) farray) farray -> int

logic value__alignment2 : int

logic object__alignment2 : (int,(int,cardindex) farray) farray -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:(int,(int,cardindex) farray) farray. (0 <= object__size2(a)))

axiom value__component__size_axiom2 : (0 <= value__component__size2)

axiom object__component__size_axiom2 :
  (forall a:(int,(int,cardindex) farray) farray.
  (0 <= object__component__size2(a)))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:(int,(int,cardindex) farray) farray.
  (0 <= object__alignment2(a)))

logic user_eq8 : (int,(int,cardindex) farray) farray,
  (int,(int,cardindex) farray) farray -> bool

type us_split_fields = { rec__patience__state__numelts : cardindex;
rec__patience__state__values : (int,card) farray;
rec__patience__state__numstacks : cardindex; rec__patience__state__stacksizes
: (int,cardindex) farray; rec__patience__state__stacks :
(int,(int,cardindex) farray) farray; rec__patience__state__posstack :
(int,cardindex) farray; rec__patience__state__posheight :
(int,cardindex) farray; rec__patience__state__preds : (int,cardindex) farray
}

function us_split_fields_NumElts__projection(a: us_split_fields) : cardindex =
  (a).rec__patience__state__numelts

function us_split_fields_Values__projection(a: us_split_fields) : (int,card) farray =
  (a).rec__patience__state__values

function us_split_fields_NumStacks__projection(a: us_split_fields) : cardindex =
  (a).rec__patience__state__numstacks

function us_split_fields_StackSizes__projection(a: us_split_fields) : (int,cardindex) farray =
  (a).rec__patience__state__stacksizes

function us_split_fields_Stacks__projection(a: us_split_fields) : (int,(int,cardindex) farray) farray =
  (a).rec__patience__state__stacks

function us_split_fields_PosStack__projection(a: us_split_fields) : (int,cardindex) farray =
  (a).rec__patience__state__posstack

function us_split_fields_PosHeight__projection(a: us_split_fields) : (int,cardindex) farray =
  (a).rec__patience__state__posheight

function us_split_fields_Preds__projection(a: us_split_fields) : (int,cardindex) farray =
  (a).rec__patience__state__preds

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq11 : us_rep, us_rep -> bool

axiom bool_eq_def10 :
  (forall a:us_rep. forall b:us_rep [bool_eq11(a, b)].
  ((((((((((to_rep1(((a).us_split_fields1).rec__patience__state__numelts) = to_rep1(((b).us_split_fields1).rec__patience__state__numelts)) and
  (bool_eq4(((a).us_split_fields1).rec__patience__state__values, 0, 99,
  ((b).us_split_fields1).rec__patience__state__values, 0, 99) = true)) and
  (to_rep1(((a).us_split_fields1).rec__patience__state__numstacks) = to_rep1(((b).us_split_fields1).rec__patience__state__numstacks))) and
  (bool_eq8(((a).us_split_fields1).rec__patience__state__stacksizes, 0, 99,
  ((b).us_split_fields1).rec__patience__state__stacksizes, 0,
  99) = true)) and
  (bool_eq10(((a).us_split_fields1).rec__patience__state__stacks, 0, 99,
  ((b).us_split_fields1).rec__patience__state__stacks, 0, 99) = true)) and
  (bool_eq8(((a).us_split_fields1).rec__patience__state__posstack, 0, 99,
  ((b).us_split_fields1).rec__patience__state__posstack, 0, 99) = true)) and
  (bool_eq8(((a).us_split_fields1).rec__patience__state__posheight, 0, 99,
  ((b).us_split_fields1).rec__patience__state__posheight, 0, 99) = true)) and
  (bool_eq8(((a).us_split_fields1).rec__patience__state__preds, 0, 99,
  ((b).us_split_fields1).rec__patience__state__preds, 0, 99) = true)) ->
  (bool_eq11(a, b) = true)) and
  ((not ((((((((to_rep1(((a).us_split_fields1).rec__patience__state__numelts) = to_rep1(((b).us_split_fields1).rec__patience__state__numelts)) and
  (bool_eq4(((a).us_split_fields1).rec__patience__state__values, 0, 99,
  ((b).us_split_fields1).rec__patience__state__values, 0, 99) = true)) and
  (to_rep1(((a).us_split_fields1).rec__patience__state__numstacks) = to_rep1(((b).us_split_fields1).rec__patience__state__numstacks))) and
  (bool_eq8(((a).us_split_fields1).rec__patience__state__stacksizes, 0, 99,
  ((b).us_split_fields1).rec__patience__state__stacksizes, 0,
  99) = true)) and
  (bool_eq10(((a).us_split_fields1).rec__patience__state__stacks, 0, 99,
  ((b).us_split_fields1).rec__patience__state__stacks, 0, 99) = true)) and
  (bool_eq8(((a).us_split_fields1).rec__patience__state__posstack, 0, 99,
  ((b).us_split_fields1).rec__patience__state__posstack, 0, 99) = true)) and
  (bool_eq8(((a).us_split_fields1).rec__patience__state__posheight, 0, 99,
  ((b).us_split_fields1).rec__patience__state__posheight, 0, 99) = true)) and
  (bool_eq8(((a).us_split_fields1).rec__patience__state__preds, 0, 99,
  ((b).us_split_fields1).rec__patience__state__preds, 0, 99) = true))) ->
  (bool_eq11(a, b) = false))))

logic value__size3 : int

logic object__size3 : us_rep -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:cardindex. forall a1:(int,card) farray. forall a2:cardindex.
  forall a3:(int,cardindex) farray.
  forall a4:(int,(int,cardindex) farray) farray.
  forall a5:(int,cardindex) farray. forall a6:(int,cardindex) farray.
  forall a7:(int,cardindex) farray. (0 <= object__size3({ us_split_fields1 =
  { rec__patience__state__numelts = a; rec__patience__state__values = a1;
  rec__patience__state__numstacks = a2; rec__patience__state__stacksizes =
  a3; rec__patience__state__stacks = a4; rec__patience__state__posstack = a5;
  rec__patience__state__posheight = a6; rec__patience__state__preds = a7 }
  })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:cardindex. forall a1:(int,card) farray. forall a2:cardindex.
  forall a3:(int,cardindex) farray.
  forall a4:(int,(int,cardindex) farray) farray.
  forall a5:(int,cardindex) farray. forall a6:(int,cardindex) farray.
  forall a7:(int,cardindex) farray. (0 <= object__alignment3({
  us_split_fields1 = { rec__patience__state__numelts = a;
  rec__patience__state__values = a1; rec__patience__state__numstacks = a2;
  rec__patience__state__stacksizes = a3; rec__patience__state__stacks = a4;
  rec__patience__state__posstack = a5; rec__patience__state__posheight = a6;
  rec__patience__state__preds = a7 } })))

logic patience__state__numelts__first__bit : int

logic patience__state__numelts__last__bit : int

logic patience__state__numelts__position : int

axiom patience__state__numelts__first__bit_axiom :
  (0 <= patience__state__numelts__first__bit)

axiom patience__state__numelts__last__bit_axiom :
  (patience__state__numelts__first__bit <  patience__state__numelts__last__bit)

axiom patience__state__numelts__position_axiom :
  (0 <= patience__state__numelts__position)

logic patience__state__values__first__bit : int

logic patience__state__values__last__bit : int

logic patience__state__values__position : int

axiom patience__state__values__first__bit_axiom :
  (0 <= patience__state__values__first__bit)

axiom patience__state__values__last__bit_axiom :
  (patience__state__values__first__bit <  patience__state__values__last__bit)

axiom patience__state__values__position_axiom :
  (0 <= patience__state__values__position)

logic patience__state__numstacks__first__bit : int

logic patience__state__numstacks__last__bit : int

logic patience__state__numstacks__position : int

axiom patience__state__numstacks__first__bit_axiom :
  (0 <= patience__state__numstacks__first__bit)

axiom patience__state__numstacks__last__bit_axiom :
  (patience__state__numstacks__first__bit <  patience__state__numstacks__last__bit)

axiom patience__state__numstacks__position_axiom :
  (0 <= patience__state__numstacks__position)

logic patience__state__stacksizes__first__bit : int

logic patience__state__stacksizes__last__bit : int

logic patience__state__stacksizes__position : int

axiom patience__state__stacksizes__first__bit_axiom :
  (0 <= patience__state__stacksizes__first__bit)

axiom patience__state__stacksizes__last__bit_axiom :
  (patience__state__stacksizes__first__bit <  patience__state__stacksizes__last__bit)

axiom patience__state__stacksizes__position_axiom :
  (0 <= patience__state__stacksizes__position)

logic patience__state__stacks__first__bit : int

logic patience__state__stacks__last__bit : int

logic patience__state__stacks__position : int

axiom patience__state__stacks__first__bit_axiom :
  (0 <= patience__state__stacks__first__bit)

axiom patience__state__stacks__last__bit_axiom :
  (patience__state__stacks__first__bit <  patience__state__stacks__last__bit)

axiom patience__state__stacks__position_axiom :
  (0 <= patience__state__stacks__position)

logic patience__state__posstack__first__bit : int

logic patience__state__posstack__last__bit : int

logic patience__state__posstack__position : int

axiom patience__state__posstack__first__bit_axiom :
  (0 <= patience__state__posstack__first__bit)

axiom patience__state__posstack__last__bit_axiom :
  (patience__state__posstack__first__bit <  patience__state__posstack__last__bit)

axiom patience__state__posstack__position_axiom :
  (0 <= patience__state__posstack__position)

logic patience__state__posheight__first__bit : int

logic patience__state__posheight__last__bit : int

logic patience__state__posheight__position : int

axiom patience__state__posheight__first__bit_axiom :
  (0 <= patience__state__posheight__first__bit)

axiom patience__state__posheight__last__bit_axiom :
  (patience__state__posheight__first__bit <  patience__state__posheight__last__bit)

axiom patience__state__posheight__position_axiom :
  (0 <= patience__state__posheight__position)

logic patience__state__preds__first__bit : int

logic patience__state__preds__last__bit : int

logic patience__state__preds__position : int

axiom patience__state__preds__first__bit_axiom :
  (0 <= patience__state__preds__first__bit)

axiom patience__state__preds__last__bit_axiom :
  (patience__state__preds__first__bit <  patience__state__preds__last__bit)

axiom patience__state__preds__position_axiom :
  (0 <= patience__state__preds__position)

logic user_eq9 : us_rep, us_rep -> bool

logic dummy9 : cardindex

logic dummy10 : (int,card) farray

logic dummy11 : cardindex

logic dummy12 : (int,cardindex) farray

logic dummy13 : (int,(int,cardindex) farray) farray

logic dummy14 : (int,cardindex) farray

logic dummy15 : (int,cardindex) farray

logic dummy16 : (int,cardindex) farray

type state__ref = { state__content : us_rep
}

function state__ref___projection(a: state__ref) : us_rep = (a).state__content

logic inv : us_rep -> bool

logic inv__function_guard : bool, us_rep -> prop

axiom inv__post_axiom : true

axiom inv__def_axiom :
  (forall s:cardindex. forall s1:(int,card) farray. forall s2:cardindex.
  forall s3:(int,cardindex) farray.
  forall s4:(int,(int,cardindex) farray) farray.
  forall s5:(int,cardindex) farray. forall s6:(int,cardindex) farray.
  forall s7:(int,cardindex) farray [inv({ us_split_fields1 = {
  rec__patience__state__numelts = s; rec__patience__state__values = s1;
  rec__patience__state__numstacks = s2; rec__patience__state__stacksizes =
  s3; rec__patience__state__stacks = s4; rec__patience__state__posstack = s5;
  rec__patience__state__posheight = s6; rec__patience__state__preds = s7 }
  })]. (((inv({ us_split_fields1 = { rec__patience__state__numelts = s;
  rec__patience__state__values = s1; rec__patience__state__numstacks = s2;
  rec__patience__state__stacksizes = s3; rec__patience__state__stacks = s4;
  rec__patience__state__posstack = s5; rec__patience__state__posheight = s6;
  rec__patience__state__preds = s7 } }) = true) ->
  ((((((((((0 <= to_rep1(s2)) and (to_rep1(s2) <= to_rep1(s))) and
  (to_rep1(s) <= 100)) and ((to_rep1(s) = 0) or (0 <  to_rep1(s2)))) and
  (forall i:int. (((0 <= i) and (i <= (to_rep1(s2) - 1))) ->
  (((1 <= to_rep1((s3[i]))) and (to_rep1((s3[i])) <= to_rep1(s))) and
  (forall j:int. (((0 <= j) and (j <= (to_rep1((s3[i])) - 1))) ->
  ((0 <= to_rep1(((s4[i])[j]))) and (to_rep1(((s4[i])[j])) <  to_rep1(s))))))))) and
  (forall i:int. (((0 <= i) and (i <= (to_rep1(s) - 1))) ->
  ((((0 <= to_rep1((s5[i]))) and (to_rep1((s5[i])) <= (to_rep1(s2) - 1))) and
  ((0 <= to_rep1((s6[i]))) and
  (to_rep1((s6[i])) <= (to_rep1((s3[to_rep1((s5[i]))])) - 1)))) and
  (to_rep1(((s4[to_rep1((s5[i]))])[to_rep1((s6[i]))])) = i))))) and
  (forall ist:int. (((0 <= ist) and (ist <= (to_rep1(s2) - 1))) ->
  (forall ip:int. (((0 <= ip) and (ip <= (to_rep1((s3[ist])) - 1))) ->
  ((ist = to_rep1((s5[to_rep1(((s4[ist])[ip]))]))) and
  (ip = to_rep1((s6[to_rep1(((s4[ist])[ip]))]))))))))) and
  (forall i:int. (((0 <= i) and (i <= (to_rep1(s2) - 1))) ->
  (forall j:int. (((0 <= j) and (j <= (to_rep1((s3[i])) - 2))) ->
  (forall k:int. ((((j + 1) <= k) and (k <= (to_rep1((s3[i])) - 1))) ->
  (to_rep1(((s4[i])[j])) <  to_rep1(((s4[i])[k])))))))))) and
  (forall i:int. (((0 <= i) and (i <= (to_rep1(s2) - 1))) ->
  (forall j:int. (((0 <= j) and (j <= (to_rep1((s3[i])) - 2))) ->
  (forall k:int. ((((j + 1) <= k) and (k <= (to_rep1((s3[i])) - 1))) ->
  (to_rep((s1[to_rep1(((s4[i])[k]))])) <= to_rep((s1[to_rep1(((s4[i])[j]))])))))))))) and
  (forall i:int. (((0 <= i) and (i <= (to_rep1(s) - 1))) ->
  (((((- 1) <= to_rep1((s7[i]))) and
  (to_rep1((s7[i])) <= (to_rep1(s) - 1))) and (to_rep1((s7[i])) <  i)) and
  (((to_rep1((s7[i])) <  0) -> (to_rep1((s5[i])) = 0)) and
  ((not (to_rep1((s7[i])) <  0)) ->
  (((to_rep((s1[to_rep1((s7[i]))])) <  to_rep((s1[i]))) and
  (0 <  to_rep1((s5[i])))) and
  (to_rep1((s5[to_rep1((s7[i]))])) = (to_rep1((s5[i])) - 1)))))))))) and
  (((((((((((0 <= to_rep1(s2)) and (to_rep1(s2) <= to_rep1(s))) and
  (to_rep1(s) <= 100)) and ((to_rep1(s) = 0) or (0 <  to_rep1(s2)))) and
  (forall i:int. (((0 <= i) and (i <= (to_rep1(s2) - 1))) ->
  (((1 <= to_rep1((s3[i]))) and (to_rep1((s3[i])) <= to_rep1(s))) and
  (forall j:int. (((0 <= j) and (j <= (to_rep1((s3[i])) - 1))) ->
  ((0 <= to_rep1(((s4[i])[j]))) and (to_rep1(((s4[i])[j])) <  to_rep1(s))))))))) and
  (forall i:int. (((0 <= i) and (i <= (to_rep1(s) - 1))) ->
  ((((0 <= to_rep1((s5[i]))) and (to_rep1((s5[i])) <= (to_rep1(s2) - 1))) and
  ((0 <= to_rep1((s6[i]))) and
  (to_rep1((s6[i])) <= (to_rep1((s3[to_rep1((s5[i]))])) - 1)))) and
  (to_rep1(((s4[to_rep1((s5[i]))])[to_rep1((s6[i]))])) = i))))) and
  (forall ist:int. (((0 <= ist) and (ist <= (to_rep1(s2) - 1))) ->
  (forall ip:int. (((0 <= ip) and (ip <= (to_rep1((s3[ist])) - 1))) ->
  ((ist = to_rep1((s5[to_rep1(((s4[ist])[ip]))]))) and
  (ip = to_rep1((s6[to_rep1(((s4[ist])[ip]))]))))))))) and
  (forall i:int. (((0 <= i) and (i <= (to_rep1(s2) - 1))) ->
  (forall j:int. (((0 <= j) and (j <= (to_rep1((s3[i])) - 2))) ->
  (forall k:int. ((((j + 1) <= k) and (k <= (to_rep1((s3[i])) - 1))) ->
  (to_rep1(((s4[i])[j])) <  to_rep1(((s4[i])[k])))))))))) and
  (forall i:int. (((0 <= i) and (i <= (to_rep1(s2) - 1))) ->
  (forall j:int. (((0 <= j) and (j <= (to_rep1((s3[i])) - 2))) ->
  (forall k:int. ((((j + 1) <= k) and (k <= (to_rep1((s3[i])) - 1))) ->
  (to_rep((s1[to_rep1(((s4[i])[k]))])) <= to_rep((s1[to_rep1(((s4[i])[j]))])))))))))) and
  (forall i:int. (((0 <= i) and (i <= (to_rep1(s) - 1))) ->
  (((((- 1) <= to_rep1((s7[i]))) and
  (to_rep1((s7[i])) <= (to_rep1(s) - 1))) and (to_rep1((s7[i])) <  i)) and
  (((to_rep1((s7[i])) <  0) and (to_rep1((s5[i])) = 0)) or
  ((not (to_rep1((s7[i])) <  0)) and
  (((to_rep((s1[to_rep1((s7[i]))])) <  to_rep((s1[i]))) and
  (0 <  to_rep1((s5[i])))) and
  (to_rep1((s5[to_rep1((s7[i]))])) = (to_rep1((s5[i])) - 1))))))))) -> (inv({
  us_split_fields1 = { rec__patience__state__numelts = s;
  rec__patience__state__values = s1; rec__patience__state__numstacks = s2;
  rec__patience__state__stacksizes = s3; rec__patience__state__stacks = s4;
  rec__patience__state__posstack = s5; rec__patience__state__posheight = s6;
  rec__patience__state__preds = s7 } }) = true))))

logic c : int

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic s__split_fields : cardindex

logic s__split_fields1 : (int,card) farray

logic s__split_fields2 : cardindex

logic s__split_fields3 : (int,cardindex) farray

logic s__split_fields4 : (int,(int,cardindex) farray) farray

logic s__split_fields5 : (int,cardindex) farray

logic s__split_fields6 : (int,cardindex) farray

logic s__split_fields7 : (int,cardindex) farray

logic idx : int

logic pred : int

logic i : int

logic stackisize : int

logic topstacki : int

logic temp___568 : int

logic temp___567 : int

logic temp___566 : int

logic temp___565 : int

logic o : int

logic o1 : int

logic o2 : card

logic o3 : int

logic temp___570 : int

logic o4 : int

logic temp___571 : (int,cardindex) farray

logic temp___573 : int

logic o5 : int

logic o6 : cardindex

logic o7 : int

logic temp___574 : int

logic o8 : int

logic o9 : cardindex

logic o10 : int

logic o11 : int

logic o12 : cardindex

logic o13 : int

logic o14 : int

logic temp___535 : (int,cardindex) farray

logic o15 : int

logic o16 : cardindex

logic o17 : int

logic o18 : int

logic o19 : card

logic o20 : int

logic o21 : int

logic o22 : cardindex

logic o23 : int

logic o24 : int

logic o25 : cardindex

logic temp___547 : int

logic o26 : int

logic temp___548 : (int,cardindex) farray

logic o27 : int

logic o28 : cardindex

logic temp___550 : int

logic o29 : int

logic o30 : cardindex

logic o31 : int

logic o32 : int

logic o33 : cardindex

logic o34 : int

logic o35 : cardindex

logic temp___544 : int

logic o36 : int

logic o37 : cardindex

logic o38 : int

logic o39 : int

logic o40 : int

logic o41 : cardindex

logic o42 : int

logic o43 : int

logic o44 : cardindex

logic o45 : int

logic o46 : int

logic o47 : cardindex

logic o48 : int

logic o49 : int

logic o50 : card

logic o51 : int

logic o52 : (int,card) farray

logic o53 : cardindex

logic o54 : (int,card) farray

logic o55 : cardindex

logic o56 : (int,cardindex) farray

logic o57 : (int,(int,cardindex) farray) farray

logic o58 : (int,cardindex) farray

logic o59 : (int,cardindex) farray

logic o60 : (int,cardindex) farray

logic temp___584 : cardindex

logic temp___5841 : (int,card) farray

logic temp___5842 : cardindex

logic temp___5843 : (int,cardindex) farray

logic temp___5844 : (int,(int,cardindex) farray) farray

logic temp___5845 : (int,cardindex) farray

logic temp___5846 : (int,cardindex) farray

logic temp___5847 : (int,cardindex) farray

logic o61 : int

logic o62 : int

logic o63 : cardindex

logic o64 : cardindex

logic o65 : (int,card) farray

logic o66 : cardindex

logic o67 : (int,cardindex) farray

logic o68 : (int,(int,cardindex) farray) farray

logic o69 : (int,cardindex) farray

logic o70 : (int,cardindex) farray

logic o71 : (int,cardindex) farray

logic temp___586 : cardindex

logic temp___5861 : (int,card) farray

logic temp___5862 : cardindex

logic temp___5863 : (int,cardindex) farray

logic temp___5864 : (int,(int,cardindex) farray) farray

logic temp___5865 : (int,cardindex) farray

logic temp___5866 : (int,cardindex) farray

logic temp___5867 : (int,cardindex) farray

logic o72 : int

logic o73 : cardindex

logic o74 : int

logic o75 : (int,cardindex) farray

logic o76 : cardindex

logic o77 : (int,card) farray

logic o78 : cardindex

logic o79 : (int,cardindex) farray

logic o80 : (int,(int,cardindex) farray) farray

logic o81 : (int,cardindex) farray

logic o82 : (int,cardindex) farray

logic o83 : (int,cardindex) farray

logic temp___589 : cardindex

logic temp___5891 : (int,card) farray

logic temp___5892 : cardindex

logic temp___5893 : (int,cardindex) farray

logic temp___5894 : (int,(int,cardindex) farray) farray

logic temp___5895 : (int,cardindex) farray

logic temp___5896 : (int,cardindex) farray

logic temp___5897 : (int,cardindex) farray

logic o84 : int

logic o85 : cardindex

logic o86 : cardindex

logic o87 : (int,card) farray

logic o88 : cardindex

logic o89 : (int,cardindex) farray

logic o90 : (int,(int,cardindex) farray) farray

logic o91 : (int,cardindex) farray

logic o92 : (int,cardindex) farray

logic o93 : (int,cardindex) farray

logic temp___606 : cardindex

logic temp___6061 : (int,card) farray

logic temp___6062 : cardindex

logic temp___6063 : (int,cardindex) farray

logic temp___6064 : (int,(int,cardindex) farray) farray

logic temp___6065 : (int,cardindex) farray

logic temp___6066 : (int,cardindex) farray

logic temp___6067 : (int,cardindex) farray

logic o94 : cardindex

logic o95 : int

logic o96 : (int,cardindex) farray

logic o97 : cardindex

logic o98 : (int,card) farray

logic o99 : cardindex

logic o100 : (int,cardindex) farray

logic o101 : (int,(int,cardindex) farray) farray

logic o102 : (int,cardindex) farray

logic o103 : (int,cardindex) farray

logic o104 : (int,cardindex) farray

logic temp___609 : cardindex

logic temp___6091 : (int,card) farray

logic temp___6092 : cardindex

logic temp___6093 : (int,cardindex) farray

logic temp___6094 : (int,(int,cardindex) farray) farray

logic temp___6095 : (int,cardindex) farray

logic temp___6096 : (int,cardindex) farray

logic temp___6097 : (int,cardindex) farray

logic o105 : int

logic o106 : cardindex

logic o107 : (int,cardindex) farray

logic o108 : int

logic o109 : (int,(int,cardindex) farray) farray

logic o110 : cardindex

logic o111 : (int,card) farray

logic o112 : cardindex

logic o113 : (int,cardindex) farray

logic o114 : (int,(int,cardindex) farray) farray

logic o115 : (int,cardindex) farray

logic o116 : (int,cardindex) farray

logic o117 : (int,cardindex) farray

logic temp___614 : cardindex

logic temp___6141 : (int,card) farray

logic temp___6142 : cardindex

logic temp___6143 : (int,cardindex) farray

logic temp___6144 : (int,(int,cardindex) farray) farray

logic temp___6145 : (int,cardindex) farray

logic temp___6146 : (int,cardindex) farray

logic temp___6147 : (int,cardindex) farray

logic o118 : int

logic o119 : cardindex

logic o120 : int

logic o121 : (int,cardindex) farray

logic o122 : cardindex

logic o123 : (int,card) farray

logic o124 : cardindex

logic o125 : (int,cardindex) farray

logic o126 : (int,(int,cardindex) farray) farray

logic o127 : (int,cardindex) farray

logic o128 : (int,cardindex) farray

logic o129 : (int,cardindex) farray

logic temp___617 : cardindex

logic temp___6171 : (int,card) farray

logic temp___6172 : cardindex

logic temp___6173 : (int,cardindex) farray

logic temp___6174 : (int,(int,cardindex) farray) farray

logic temp___6175 : (int,cardindex) farray

logic temp___6176 : (int,cardindex) farray

logic temp___6177 : (int,cardindex) farray

logic o130 : cardindex

logic o131 : int

logic o132 : (int,cardindex) farray

logic o133 : cardindex

logic o134 : (int,card) farray

logic o135 : cardindex

logic o136 : (int,cardindex) farray

logic o137 : (int,(int,cardindex) farray) farray

logic o138 : (int,cardindex) farray

logic o139 : (int,cardindex) farray

logic o140 : (int,cardindex) farray

logic temp___620 : cardindex

logic temp___6201 : (int,card) farray

logic temp___6202 : cardindex

logic temp___6203 : (int,cardindex) farray

logic temp___6204 : (int,(int,cardindex) farray) farray

logic temp___6205 : (int,cardindex) farray

logic temp___6206 : (int,cardindex) farray

logic temp___6207 : (int,cardindex) farray

logic o141 : int

logic o142 : cardindex

logic o143 : int

logic o144 : int

logic o145 : cardindex

logic o146 : int

logic o147 : (int,cardindex) farray

logic o148 : cardindex

logic o149 : (int,card) farray

logic o150 : cardindex

logic o151 : (int,cardindex) farray

logic o152 : (int,(int,cardindex) farray) farray

logic o153 : (int,cardindex) farray

logic o154 : (int,cardindex) farray

logic o155 : (int,cardindex) farray

logic temp___593 : cardindex

logic temp___5931 : (int,card) farray

logic temp___5932 : cardindex

logic temp___5933 : (int,cardindex) farray

logic temp___5934 : (int,(int,cardindex) farray) farray

logic temp___5935 : (int,cardindex) farray

logic temp___5936 : (int,cardindex) farray

logic temp___5937 : (int,cardindex) farray

logic o156 : int

logic o157 : cardindex

logic o158 : int

logic o159 : (int,cardindex) farray

logic o160 : int

logic o161 : (int,(int,cardindex) farray) farray

logic o162 : cardindex

logic o163 : (int,card) farray

logic o164 : cardindex

logic o165 : (int,cardindex) farray

logic o166 : (int,(int,cardindex) farray) farray

logic o167 : (int,cardindex) farray

logic o168 : (int,cardindex) farray

logic o169 : (int,cardindex) farray

logic temp___598 : cardindex

logic temp___5981 : (int,card) farray

logic temp___5982 : cardindex

logic temp___5983 : (int,cardindex) farray

logic temp___5984 : (int,(int,cardindex) farray) farray

logic temp___5985 : (int,cardindex) farray

logic temp___5986 : (int,cardindex) farray

logic temp___5987 : (int,cardindex) farray

logic o170 : int

logic o171 : cardindex

logic o172 : int

logic o173 : (int,cardindex) farray

logic o174 : cardindex

logic o175 : (int,card) farray

logic o176 : cardindex

logic o177 : (int,cardindex) farray

logic o178 : (int,(int,cardindex) farray) farray

logic o179 : (int,cardindex) farray

logic o180 : (int,cardindex) farray

logic o181 : (int,cardindex) farray

logic temp___601 : cardindex

logic temp___6011 : (int,card) farray

logic temp___6012 : cardindex

logic temp___6013 : (int,cardindex) farray

logic temp___6014 : (int,(int,cardindex) farray) farray

logic temp___6015 : (int,cardindex) farray

logic temp___6016 : (int,cardindex) farray

logic temp___6017 : (int,cardindex) farray

logic o182 : cardindex

logic o183 : int

logic o184 : (int,cardindex) farray

logic o185 : cardindex

logic o186 : (int,card) farray

logic o187 : cardindex

logic o188 : (int,cardindex) farray

logic o189 : (int,(int,cardindex) farray) farray

logic o190 : (int,cardindex) farray

logic o191 : (int,cardindex) farray

logic o192 : (int,cardindex) farray

logic temp___604 : cardindex

logic temp___6041 : (int,card) farray

logic temp___6042 : cardindex

logic temp___6043 : (int,cardindex) farray

logic temp___6044 : (int,(int,cardindex) farray) farray

logic temp___6045 : (int,cardindex) farray

logic temp___6046 : (int,cardindex) farray

logic temp___6047 : (int,cardindex) farray

logic i1 : int

logic i2 : int

logic j : int

logic o193 : int

logic o194 : cardindex

logic o195 : int

logic o196 : int

logic o197 : bool

logic o198 : int

logic temp___627 : (int,cardindex) farray

logic o199 : int

logic temp___629 : (int,cardindex) farray

logic o200 : int

logic o201 : cardindex

logic o202 : int

logic o203 : bool

logic o204 : bool

logic i3 : int

logic o205 : int

logic o206 : cardindex

logic o207 : int

logic o208 : int

logic o209 : cardindex

logic temp___755 : int

logic o210 : int

logic o211 : cardindex

logic o212 : int

logic o213 : int

logic o214 : int

logic o215 : cardindex

logic o216 : int

logic o217 : int

logic o218 : cardindex

logic temp___750 : int

logic o219 : int

logic o220 : card

logic o221 : int

logic o222 : card

logic o223 : int

logic o224 : int

logic o225 : int

logic o226 : cardindex

logic o227 : int

logic o228 : int

logic o229 : cardindex

logic o230 : int

logic o231 : int

logic o232 : cardindex

logic o233 : int

logic o234 : bool

logic o235 : bool

logic i4 : int

logic j1 : int

logic o236 : int

logic o237 : cardindex

logic o238 : int

logic o239 : int

logic o240 : bool

logic k : int

logic o241 : int

logic o242 : int

logic o243 : cardindex

logic o244 : int

logic o245 : int

logic o246 : bool

logic o247 : bool

logic o248 : int

logic temp___716 : (int,cardindex) farray

logic o249 : int

logic o250 : cardindex

logic temp___717 : int

logic o251 : int

logic temp___720 : (int,cardindex) farray

logic o252 : int

logic o253 : cardindex

logic temp___721 : int

logic o254 : int

logic o255 : card

logic o256 : int

logic i5 : int

logic j2 : int

logic o257 : int

logic o258 : cardindex

logic o259 : int

logic o260 : int

logic o261 : bool

logic k1 : int

logic o262 : int

logic o263 : int

logic o264 : cardindex

logic o265 : int

logic o266 : int

logic o267 : bool

logic o268 : bool

logic o269 : int

logic temp___692 : (int,cardindex) farray

logic o270 : int

logic temp___694 : (int,cardindex) farray

logic o271 : int

logic o272 : cardindex

logic o273 : int

logic ist : int

logic ip : int

logic o274 : int

logic o275 : cardindex

logic o276 : int

logic o277 : int

logic o278 : bool

logic o279 : int

logic temp___669 : (int,cardindex) farray

logic o280 : int

logic o281 : cardindex

logic temp___670 : int

logic o282 : int

logic temp___673 : (int,cardindex) farray

logic o283 : int

logic o284 : cardindex

logic temp___674 : int

logic o285 : int

logic o286 : cardindex

logic o287 : int

logic o288 : bool

logic i6 : int

logic o289 : int

logic o290 : cardindex

logic temp___654 : int

logic o291 : int

logic temp___655 : (int,cardindex) farray

logic o292 : int

logic o293 : cardindex

logic temp___657 : int

logic o294 : int

logic o295 : cardindex

logic o296 : int

logic o297 : int

logic o298 : cardindex

logic o299 : int

logic o300 : cardindex

logic temp___651 : int

logic o301 : int

logic o302 : cardindex

logic o303 : int

logic o304 : int

logic o305 : int

logic o306 : bool

logic o307 : bool

logic o308 : int

logic o309 : cardindex

logic o310 : int

logic o311 : int

logic o312 : cardindex

logic o313 : int

logic o314 : bool

logic o315 : bool

logic stackisize1 : int

logic topstacki1 : int

logic result : int

logic pred1 : int

logic result1 : int

logic i7 : int

logic pred2 : int

logic i8 : int

logic stackisize2 : int

logic topstacki2 : int

logic result2 : bool

logic result3 : bool

logic result4 : int

logic stackisize3 : int

logic result5 : int

logic topstacki3 : int

logic result6 : bool

logic result7 : bool

logic result8 : bool

logic result9 : bool

logic result10 : bool

logic result11 : bool

logic result12 : bool

logic result13 : int

logic pred3 : int

logic result14 : int

logic i9 : int

logic pred4 : int

logic i10 : int

logic pred5 : int

logic i11 : int

logic pred6 : int

logic i12 : int

logic stackisize4 : int

logic topstacki4 : int

logic pred7 : int

logic i13 : int

logic stackisize5 : int

logic topstacki5 : int

logic pred8 : int

logic i14 : int

logic stackisize6 : int

logic topstacki6 : int

logic pred9 : int

logic i15 : int

logic stackisize7 : int

logic topstacki7 : int

logic result15 : int

logic idx1 : int

logic result16 : cardindex

logic result17 : (int,card) farray

logic result18 : cardindex

logic result19 : (int,cardindex) farray

logic result20 : (int,(int,cardindex) farray) farray

logic result21 : (int,cardindex) farray

logic result22 : (int,cardindex) farray

logic result23 : (int,cardindex) farray

logic s__split_fields8 : cardindex

logic s__split_fields9 : (int,card) farray

logic s__split_fields10 : cardindex

logic s__split_fields11 : (int,cardindex) farray

logic s__split_fields12 : (int,(int,cardindex) farray) farray

logic s__split_fields13 : (int,cardindex) farray

logic s__split_fields14 : (int,cardindex) farray

logic s__split_fields15 : (int,cardindex) farray

logic result24 : cardindex

logic result25 : (int,card) farray

logic result26 : cardindex

logic result27 : (int,cardindex) farray

logic result28 : (int,(int,cardindex) farray) farray

logic result29 : (int,cardindex) farray

logic result30 : (int,cardindex) farray

logic result31 : (int,cardindex) farray

logic s__split_fields16 : cardindex

logic s__split_fields17 : (int,card) farray

logic s__split_fields18 : cardindex

logic s__split_fields19 : (int,cardindex) farray

logic s__split_fields20 : (int,(int,cardindex) farray) farray

logic s__split_fields21 : (int,cardindex) farray

logic s__split_fields22 : (int,cardindex) farray

logic s__split_fields23 : (int,cardindex) farray

logic result32 : cardindex

logic result33 : (int,card) farray

logic result34 : cardindex

logic result35 : (int,cardindex) farray

logic result36 : (int,(int,cardindex) farray) farray

logic result37 : (int,cardindex) farray

logic result38 : (int,cardindex) farray

logic result39 : (int,cardindex) farray

logic s__split_fields24 : cardindex

logic s__split_fields25 : (int,card) farray

logic s__split_fields26 : cardindex

logic s__split_fields27 : (int,cardindex) farray

logic s__split_fields28 : (int,(int,cardindex) farray) farray

logic s__split_fields29 : (int,cardindex) farray

logic s__split_fields30 : (int,cardindex) farray

logic s__split_fields31 : (int,cardindex) farray

logic result40 : int

logic i16 : int

logic result41 : cardindex

logic result42 : (int,card) farray

logic result43 : cardindex

logic result44 : (int,cardindex) farray

logic result45 : (int,(int,cardindex) farray) farray

logic result46 : (int,cardindex) farray

logic result47 : (int,cardindex) farray

logic result48 : (int,cardindex) farray

logic s__split_fields32 : cardindex

logic s__split_fields33 : (int,card) farray

logic s__split_fields34 : cardindex

logic s__split_fields35 : (int,cardindex) farray

logic s__split_fields36 : (int,(int,cardindex) farray) farray

logic s__split_fields37 : (int,cardindex) farray

logic s__split_fields38 : (int,cardindex) farray

logic s__split_fields39 : (int,cardindex) farray

logic result49 : cardindex

logic result50 : (int,card) farray

logic result51 : cardindex

logic result52 : (int,cardindex) farray

logic result53 : (int,(int,cardindex) farray) farray

logic result54 : (int,cardindex) farray

logic result55 : (int,cardindex) farray

logic result56 : (int,cardindex) farray

logic s__split_fields40 : cardindex

logic s__split_fields41 : (int,card) farray

logic s__split_fields42 : cardindex

logic s__split_fields43 : (int,cardindex) farray

logic s__split_fields44 : (int,(int,cardindex) farray) farray

logic s__split_fields45 : (int,cardindex) farray

logic s__split_fields46 : (int,cardindex) farray

logic s__split_fields47 : (int,cardindex) farray

logic result57 : cardindex

logic result58 : (int,card) farray

logic result59 : cardindex

logic result60 : (int,cardindex) farray

logic result61 : (int,(int,cardindex) farray) farray

logic result62 : (int,cardindex) farray

logic result63 : (int,cardindex) farray

logic result64 : (int,cardindex) farray

logic s__split_fields48 : cardindex

logic s__split_fields49 : (int,card) farray

logic s__split_fields50 : cardindex

logic s__split_fields51 : (int,cardindex) farray

logic s__split_fields52 : (int,(int,cardindex) farray) farray

logic s__split_fields53 : (int,cardindex) farray

logic s__split_fields54 : (int,cardindex) farray

logic s__split_fields55 : (int,cardindex) farray

logic result65 : cardindex

logic result66 : (int,card) farray

logic result67 : cardindex

logic result68 : (int,cardindex) farray

logic result69 : (int,(int,cardindex) farray) farray

logic result70 : (int,cardindex) farray

logic result71 : (int,cardindex) farray

logic result72 : (int,cardindex) farray

logic s__split_fields56 : cardindex

logic s__split_fields57 : (int,card) farray

logic s__split_fields58 : cardindex

logic s__split_fields59 : (int,cardindex) farray

logic s__split_fields60 : (int,(int,cardindex) farray) farray

logic s__split_fields61 : (int,cardindex) farray

logic s__split_fields62 : (int,cardindex) farray

logic s__split_fields63 : (int,cardindex) farray

logic result73 : cardindex

logic result74 : (int,card) farray

logic result75 : cardindex

logic result76 : (int,cardindex) farray

logic result77 : (int,(int,cardindex) farray) farray

logic result78 : (int,cardindex) farray

logic result79 : (int,cardindex) farray

logic result80 : (int,cardindex) farray

logic s__split_fields64 : cardindex

logic s__split_fields65 : (int,card) farray

logic s__split_fields66 : cardindex

logic s__split_fields67 : (int,cardindex) farray

logic s__split_fields68 : (int,(int,cardindex) farray) farray

logic s__split_fields69 : (int,cardindex) farray

logic s__split_fields70 : (int,cardindex) farray

logic s__split_fields71 : (int,cardindex) farray

logic result81 : int

logic stackisize8 : int

logic result82 : cardindex

logic result83 : (int,card) farray

logic result84 : cardindex

logic result85 : (int,cardindex) farray

logic result86 : (int,(int,cardindex) farray) farray

logic result87 : (int,cardindex) farray

logic result88 : (int,cardindex) farray

logic result89 : (int,cardindex) farray

logic s__split_fields72 : cardindex

logic s__split_fields73 : (int,card) farray

logic s__split_fields74 : cardindex

logic s__split_fields75 : (int,cardindex) farray

logic s__split_fields76 : (int,(int,cardindex) farray) farray

logic s__split_fields77 : (int,cardindex) farray

logic s__split_fields78 : (int,cardindex) farray

logic s__split_fields79 : (int,cardindex) farray

logic result90 : cardindex

logic result91 : (int,card) farray

logic result92 : cardindex

logic result93 : (int,cardindex) farray

logic result94 : (int,(int,cardindex) farray) farray

logic result95 : (int,cardindex) farray

logic result96 : (int,cardindex) farray

logic result97 : (int,cardindex) farray

logic s__split_fields80 : cardindex

logic s__split_fields81 : (int,card) farray

logic s__split_fields82 : cardindex

logic s__split_fields83 : (int,cardindex) farray

logic s__split_fields84 : (int,(int,cardindex) farray) farray

logic s__split_fields85 : (int,cardindex) farray

logic s__split_fields86 : (int,cardindex) farray

logic s__split_fields87 : (int,cardindex) farray

logic result98 : cardindex

logic result99 : (int,card) farray

logic result100 : cardindex

logic result101 : (int,cardindex) farray

logic result102 : (int,(int,cardindex) farray) farray

logic result103 : (int,cardindex) farray

logic result104 : (int,cardindex) farray

logic result105 : (int,cardindex) farray

logic s__split_fields88 : cardindex

logic s__split_fields89 : (int,card) farray

logic s__split_fields90 : cardindex

logic s__split_fields91 : (int,cardindex) farray

logic s__split_fields92 : (int,(int,cardindex) farray) farray

logic s__split_fields93 : (int,cardindex) farray

logic s__split_fields94 : (int,cardindex) farray

logic s__split_fields95 : (int,cardindex) farray

logic result106 : cardindex

logic result107 : (int,card) farray

logic result108 : cardindex

logic result109 : (int,cardindex) farray

logic result110 : (int,(int,cardindex) farray) farray

logic result111 : (int,cardindex) farray

logic result112 : (int,cardindex) farray

logic result113 : (int,cardindex) farray

logic s__split_fields96 : cardindex

logic s__split_fields97 : (int,card) farray

logic s__split_fields98 : cardindex

logic s__split_fields99 : (int,cardindex) farray

logic s__split_fields100 : (int,(int,cardindex) farray) farray

logic s__split_fields101 : (int,cardindex) farray

logic s__split_fields102 : (int,cardindex) farray

logic s__split_fields103 : (int,cardindex) farray

logic s__split_fields104 : cardindex

logic s__split_fields105 : (int,card) farray

logic s__split_fields106 : cardindex

logic s__split_fields107 : (int,cardindex) farray

logic s__split_fields108 : (int,(int,cardindex) farray) farray

logic s__split_fields109 : (int,cardindex) farray

logic s__split_fields110 : (int,cardindex) farray

logic s__split_fields111 : (int,cardindex) farray

logic i17 : int

logic stackisize9 : int

logic s__split_fields112 : cardindex

logic s__split_fields113 : (int,card) farray

logic s__split_fields114 : cardindex

logic s__split_fields115 : (int,cardindex) farray

logic s__split_fields116 : (int,(int,cardindex) farray) farray

logic s__split_fields117 : (int,cardindex) farray

logic s__split_fields118 : (int,cardindex) farray

logic s__split_fields119 : (int,cardindex) farray

logic i18 : int

logic stackisize10 : int

logic result114 : bool

logic result115 : bool

logic result116 : bool

logic result117 : bool

logic result118 : bool

logic result119 : bool

logic result120 : bool

logic result121 : bool

logic result122 : bool

logic result123 : bool

logic result124 : bool

logic result125 : bool

logic result126 : bool

logic result127 : bool

logic result128 : bool

logic result129 : bool

logic result130 : bool

logic s__split_fields120 : cardindex

logic s__split_fields121 : (int,card) farray

logic s__split_fields122 : cardindex

logic s__split_fields123 : (int,cardindex) farray

logic s__split_fields124 : (int,(int,cardindex) farray) farray

logic s__split_fields125 : (int,cardindex) farray

logic s__split_fields126 : (int,cardindex) farray

logic s__split_fields127 : (int,cardindex) farray

logic idx2 : int

logic pred10 : int

logic i19 : int

logic stackisize11 : int

logic topstacki8 : int

logic s__split_fields128 : cardindex

logic s__split_fields129 : (int,card) farray

logic s__split_fields130 : cardindex

logic s__split_fields131 : (int,cardindex) farray

logic s__split_fields132 : (int,(int,cardindex) farray) farray

logic s__split_fields133 : (int,cardindex) farray

logic s__split_fields134 : (int,cardindex) farray

logic s__split_fields135 : (int,cardindex) farray

logic idx3 : int

logic pred11 : int

logic i20 : int

logic stackisize12 : int

logic topstacki9 : int

axiom H : in_range2(c)

axiom H1 : ((inv({ us_split_fields1 = { rec__patience__state__numelts =
  s__split_fields; rec__patience__state__values = s__split_fields1;
  rec__patience__state__numstacks = s__split_fields2;
  rec__patience__state__stacksizes = s__split_fields3;
  rec__patience__state__stacks = s__split_fields4;
  rec__patience__state__posstack = s__split_fields5;
  rec__patience__state__posheight = s__split_fields6;
  rec__patience__state__preds = s__split_fields7 } }) = true) and
  (to_rep1(s__split_fields) <  100))

axiom H2 : (((- 2147483648) <= 2147483647) -> in_range1(idx))

axiom H3 : (((- 2147483648) <= 2147483647) -> in_range1(pred))

axiom H4 : (((- 2147483648) <= 2147483647) -> in_range1(i))

axiom H5 : (((- 1) <= 100) -> in_range3(stackisize))

axiom H6 : (((- 1) <= 100) -> in_range3(topstacki))

axiom H7 : (result = pred)

axiom H8 : (pred1 = (- 1))

axiom H9 : (result1 = i)

axiom H10 : (i7 = 0)

axiom H11 : ((i7 <  to_rep1(s__split_fields2)) -> (temp___568 = topstacki))

axiom H12 : ((i7 <  to_rep1(s__split_fields2)) -> (temp___567 = stackisize))

axiom H13 : ((i7 <  to_rep1(s__split_fields2)) -> (temp___566 = i7))

axiom H14 : ((i7 <  to_rep1(s__split_fields2)) -> (temp___565 = pred1))

axiom H15 : ((i7 <  to_rep1(s__split_fields2)) -> ((0 <= i8) and
  (i8 <= to_rep1(s__split_fields2))))

axiom H16 : ((i7 <  to_rep1(s__split_fields2)) -> (((i8 = 0) ->
  (pred2 = (- 1))) and ((not (i8 = 0)) -> (((((0 <= pred2) and
  (pred2 <= (to_rep1(s__split_fields) - 1))) and
  (pred2 = to_rep1(((s__split_fields4[(i8 - 1)])[(to_rep1((s__split_fields3[(i8 - 1)])) - 1)])))) and
  (to_rep((s__split_fields1[pred2])) <  c)) and
  (to_rep1((s__split_fields5[pred2])) = (i8 - 1))))))

axiom H17 : ((i7 <  to_rep1(s__split_fields2)) ->
  (((((((- 2147483648) <= 2147483647) -> in_range1(pred2)) and
  (((- 2147483648) <= 2147483647) -> in_range1(i8))) and (((- 1) <= 100) ->
  in_range3(stackisize2))) and (((- 1) <= 100) -> in_range3(topstacki2))) and
  (i8 <  to_rep1(s__split_fields2))))

axiom H18 : ((i7 <  to_rep1(s__split_fields2)) -> ((0 <= i8) and (i8 <= 99)))

axiom H19 : ((i7 <  to_rep1(s__split_fields2)) -> (o11 = i8))

axiom H20 : ((i7 <  to_rep1(s__split_fields2)) ->
  (o12 = (s__split_fields3[o11])))

axiom H21 : ((i7 <  to_rep1(s__split_fields2)) -> (o13 = to_rep1(o12)))

axiom H22 : ((i7 <  to_rep1(s__split_fields2)) -> (result4 = stackisize2))

axiom H23 : ((i7 <  to_rep1(s__split_fields2)) -> (stackisize3 = o13))

axiom H24 : ((i7 <  to_rep1(s__split_fields2)) -> ((0 <= i8) and (i8 <= 99)))

axiom H25 : ((i7 <  to_rep1(s__split_fields2)) -> (o14 = i8))

axiom H26 : ((i7 <  to_rep1(s__split_fields2)) ->
  (temp___535 = (s__split_fields4[o14])))

axiom H27 : ((i7 <  to_rep1(s__split_fields2)) ->
  ((0 <= (stackisize3 - 1)) and ((stackisize3 - 1) <= 99)))

axiom H28 : ((i7 <  to_rep1(s__split_fields2)) -> (o15 = (stackisize3 - 1)))

axiom H29 : ((i7 <  to_rep1(s__split_fields2)) -> (o16 = (temp___535[o15])))

axiom H30 : ((i7 <  to_rep1(s__split_fields2)) -> (o17 = to_rep1(o16)))

axiom H31 : ((i7 <  to_rep1(s__split_fields2)) -> (result5 = topstacki2))

axiom H32 : ((i7 <  to_rep1(s__split_fields2)) -> (topstacki3 = o17))

axiom H33 : ((i7 <  to_rep1(s__split_fields2)) -> (((((i10 = i8) and
  (pred4 = pred2)) and ((i11 = i8) and (pred5 = pred2))) and
  (((((((0 <= topstacki3) and (topstacki3 <= 99)) and (o18 = topstacki3)) and
  (o19 = (s__split_fields1[o18]))) and (o20 = to_rep(o19))) and
  (((c <= o20) -> (result6 = true)) and ((not (c <= o20)) ->
  (result6 = false)))) and (result6 = true))) or ((((((((0 <= topstacki3) and
  (topstacki3 <= 99)) and (o18 = topstacki3)) and
  (o19 = (s__split_fields1[o18]))) and (o20 = to_rep(o19))) and
  (((c <= o20) -> (result6 = true)) and ((not (c <= o20)) ->
  (result6 = false)))) and (not (result6 = true))) and ((((i10 = i9) and
  (pred4 = pred3)) and ((i11 = i9) and (pred5 = pred3))) and
  (((0 <= topstacki3) and (topstacki3 <  to_rep1(s__split_fields))) and
  ((((((((0 <= to_rep1((s__split_fields5[topstacki3]))) and
  (to_rep1((s__split_fields5[topstacki3])) <  to_rep1(s__split_fields2))) and
  (0 <= to_rep1((s__split_fields6[topstacki3])))) and
  (to_rep1((s__split_fields6[topstacki3])) <  to_rep1((s__split_fields3[to_rep1((s__split_fields5[topstacki3]))])))) and
  (to_rep1(((s__split_fields4[to_rep1((s__split_fields5[topstacki3]))])[to_rep1((s__split_fields6[topstacki3]))])) = topstacki3)) and
  (to_rep1((s__split_fields5[topstacki3])) = i8)) and
  (to_rep1((s__split_fields6[topstacki3])) = (stackisize3 - 1))) and
  (((result13 = pred2) and (pred3 = topstacki3)) and ((((o49 = (i8 + 1)) and
  in_range1((i8 + 1))) and ((result14 = i8) and (i9 = o49))) and
  (not (i9 <  to_rep1(s__split_fields2)))))))))))

axiom H34 : ((i7 <  to_rep1(s__split_fields2)) -> (topstacki4 = topstacki3))

axiom H35 : ((i7 <  to_rep1(s__split_fields2)) ->
  (stackisize4 = stackisize3))

axiom H36 : ((i7 <  to_rep1(s__split_fields2)) -> (i12 = i10))

axiom H37 : ((i7 <  to_rep1(s__split_fields2)) -> (pred6 = pred4))

axiom H38 : ((i7 <  to_rep1(s__split_fields2)) -> (topstacki5 = topstacki3))

axiom H39 : ((i7 <  to_rep1(s__split_fields2)) ->
  (stackisize5 = stackisize3))

axiom H40 : ((i7 <  to_rep1(s__split_fields2)) -> (i13 = i11))

axiom H41 : ((i7 <  to_rep1(s__split_fields2)) -> (pred7 = pred5))

axiom H42 : ((i7 <  to_rep1(s__split_fields2)) -> (topstacki6 = topstacki4))

axiom H43 : ((i7 <  to_rep1(s__split_fields2)) ->
  (stackisize6 = stackisize4))

axiom H44 : ((i7 <  to_rep1(s__split_fields2)) -> (i14 = i12))

axiom H45 : ((i7 <  to_rep1(s__split_fields2)) -> (pred8 = pred6))

axiom H46 : ((i7 <  to_rep1(s__split_fields2)) -> (topstacki7 = topstacki5))

axiom H47 : ((i7 <  to_rep1(s__split_fields2)) ->
  (stackisize7 = stackisize5))

axiom H48 : ((i7 <  to_rep1(s__split_fields2)) -> (i15 = i13))

axiom H49 : ((i7 <  to_rep1(s__split_fields2)) -> (pred9 = pred7))

axiom H50 : ((not (i7 <  to_rep1(s__split_fields2))) ->
  (topstacki6 = topstacki))

axiom H51 : ((not (i7 <  to_rep1(s__split_fields2))) ->
  (stackisize6 = stackisize))

axiom H52 : ((not (i7 <  to_rep1(s__split_fields2))) -> (i14 = i7))

axiom H53 : ((not (i7 <  to_rep1(s__split_fields2))) -> (pred8 = pred1))

axiom H54 : ((not (i7 <  to_rep1(s__split_fields2))) ->
  (topstacki7 = topstacki1))

axiom H55 : ((not (i7 <  to_rep1(s__split_fields2))) ->
  (stackisize7 = stackisize1))

axiom H56 : ((not (i7 <  to_rep1(s__split_fields2))) -> (i15 = i7))

axiom H57 : ((not (i7 <  to_rep1(s__split_fields2))) -> (pred9 = pred1))

axiom H58 : (result15 = idx)

axiom H59 : (idx1 = to_rep1(s__split_fields))

axiom H60 : (to_rep(o50) = c)

axiom H61 : ((0 <= idx1) and (idx1 <= 99))

axiom H62 : (o51 = idx1)

axiom H63 : (o52 = (s__split_fields1[o51 <- o50]))

axiom H64 : (s__split_fields = o53)

axiom H65 : (o52 = o54)

axiom H66 : (s__split_fields2 = o55)

axiom H67 : (s__split_fields3 = o56)

axiom H68 : (s__split_fields4 = o57)

axiom H69 : (s__split_fields5 = o58)

axiom H70 : (s__split_fields6 = o59)

axiom H71 : (s__split_fields7 = o60)

axiom H72 : (temp___584 = o53)

axiom H73 : (temp___5841 = o54)

axiom H74 : (temp___5842 = o55)

axiom H75 : (temp___5843 = o56)

axiom H76 : (temp___5844 = o57)

axiom H77 : (temp___5845 = o58)

axiom H78 : (temp___5846 = o59)

axiom H79 : (temp___5847 = o60)

axiom H80 : ((result16 = s__split_fields) and
  ((result17 = s__split_fields1) and ((result18 = s__split_fields2) and
  ((result19 = s__split_fields3) and ((result20 = s__split_fields4) and
  ((result21 = s__split_fields5) and ((result22 = s__split_fields6) and
  (result23 = s__split_fields7))))))))

axiom H81 : ((s__split_fields8 = temp___584) and
  ((s__split_fields9 = temp___5841) and
  ((s__split_fields10 = temp___5842) and
  ((s__split_fields11 = temp___5843) and
  ((s__split_fields12 = temp___5844) and
  ((s__split_fields13 = temp___5845) and
  ((s__split_fields14 = temp___5846) and
  (s__split_fields15 = temp___5847))))))))

axiom H82 : ((o61 = (idx1 + 1)) and in_range1((idx1 + 1)))

axiom H83 : ((o62 = o61) and in_range3(o61))

axiom H84 : (to_rep1(o63) = o62)

axiom H85 : (o63 = o64)

axiom H86 : (s__split_fields9 = o65)

axiom H87 : (s__split_fields10 = o66)

axiom H88 : (s__split_fields11 = o67)

axiom H89 : (s__split_fields12 = o68)

axiom H90 : (s__split_fields13 = o69)

axiom H91 : (s__split_fields14 = o70)

axiom H92 : (s__split_fields15 = o71)

axiom H93 : (temp___586 = o64)

axiom H94 : (temp___5861 = o65)

axiom H95 : (temp___5862 = o66)

axiom H96 : (temp___5863 = o67)

axiom H97 : (temp___5864 = o68)

axiom H98 : (temp___5865 = o69)

axiom H99 : (temp___5866 = o70)

axiom H100 : (temp___5867 = o71)

axiom H101 : ((result24 = s__split_fields8) and
  ((result25 = s__split_fields9) and ((result26 = s__split_fields10) and
  ((result27 = s__split_fields11) and ((result28 = s__split_fields12) and
  ((result29 = s__split_fields13) and ((result30 = s__split_fields14) and
  (result31 = s__split_fields15))))))))

axiom H102 : ((s__split_fields16 = temp___586) and
  ((s__split_fields17 = temp___5861) and
  ((s__split_fields18 = temp___5862) and
  ((s__split_fields19 = temp___5863) and
  ((s__split_fields20 = temp___5864) and
  ((s__split_fields21 = temp___5865) and
  ((s__split_fields22 = temp___5866) and
  (s__split_fields23 = temp___5867))))))))

axiom H103 : ((o72 = pred8) and in_range3(pred8))

axiom H104 : (to_rep1(o73) = o72)

axiom H105 : ((0 <= idx1) and (idx1 <= 99))

axiom H106 : (o74 = idx1)

axiom H107 : (o75 = (s__split_fields23[o74 <- o73]))

axiom H108 : (s__split_fields16 = o76)

axiom H109 : (s__split_fields17 = o77)

axiom H110 : (s__split_fields18 = o78)

axiom H111 : (s__split_fields19 = o79)

axiom H112 : (s__split_fields20 = o80)

axiom H113 : (s__split_fields21 = o81)

axiom H114 : (s__split_fields22 = o82)

axiom H115 : (o75 = o83)

axiom H116 : (temp___589 = o76)

axiom H117 : (temp___5891 = o77)

axiom H118 : (temp___5892 = o78)

axiom H119 : (temp___5893 = o79)

axiom H120 : (temp___5894 = o80)

axiom H121 : (temp___5895 = o81)

axiom H122 : (temp___5896 = o82)

axiom H123 : (temp___5897 = o83)

axiom H124 : ((result32 = s__split_fields16) and
  ((result33 = s__split_fields17) and ((result34 = s__split_fields18) and
  ((result35 = s__split_fields19) and ((result36 = s__split_fields20) and
  ((result37 = s__split_fields21) and ((result38 = s__split_fields22) and
  (result39 = s__split_fields23))))))))

axiom H125 : ((s__split_fields24 = temp___589) and
  ((s__split_fields25 = temp___5891) and
  ((s__split_fields26 = temp___5892) and
  ((s__split_fields27 = temp___5893) and
  ((s__split_fields28 = temp___5894) and
  ((s__split_fields29 = temp___5895) and
  ((s__split_fields30 = temp___5896) and
  (s__split_fields31 = temp___5897))))))))

axiom H126 : ((i14 = to_rep1(s__split_fields26)) -> (result40 = i14))

axiom H127 : ((i14 = to_rep1(s__split_fields26)) ->
  (i16 = to_rep1(s__split_fields26)))

axiom H128 : ((i14 = to_rep1(s__split_fields26)) ->
  ((o84 = (to_rep1(s__split_fields26) + 1)) and
  in_range3((to_rep1(s__split_fields26) + 1))))

axiom H129 : ((i14 = to_rep1(s__split_fields26)) -> (to_rep1(o85) = o84))

axiom H130 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields24 = o86))

axiom H131 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields25 = o87))

axiom H132 : ((i14 = to_rep1(s__split_fields26)) -> (o85 = o88))

axiom H133 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields27 = o89))

axiom H134 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields28 = o90))

axiom H135 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields29 = o91))

axiom H136 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields30 = o92))

axiom H137 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields31 = o93))

axiom H138 : ((i14 = to_rep1(s__split_fields26)) -> (temp___606 = o86))

axiom H139 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6061 = o87))

axiom H140 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6062 = o88))

axiom H141 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6063 = o89))

axiom H142 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6064 = o90))

axiom H143 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6065 = o91))

axiom H144 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6066 = o92))

axiom H145 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6067 = o93))

axiom H146 : ((i14 = to_rep1(s__split_fields26)) ->
  ((result41 = s__split_fields24) and ((result42 = s__split_fields25) and
  ((result43 = s__split_fields26) and ((result44 = s__split_fields27) and
  ((result45 = s__split_fields28) and ((result46 = s__split_fields29) and
  ((result47 = s__split_fields30) and (result48 = s__split_fields31)))))))))

axiom H147 : ((i14 = to_rep1(s__split_fields26)) ->
  ((s__split_fields32 = temp___606) and
  ((s__split_fields33 = temp___6061) and
  ((s__split_fields34 = temp___6062) and
  ((s__split_fields35 = temp___6063) and
  ((s__split_fields36 = temp___6064) and
  ((s__split_fields37 = temp___6065) and
  ((s__split_fields38 = temp___6066) and
  (s__split_fields39 = temp___6067)))))))))

axiom H148 : ((i14 = to_rep1(s__split_fields26)) -> (to_rep1(o94) = 1))

axiom H149 : ((i14 = to_rep1(s__split_fields26)) -> ((0 <= i16) and
  (i16 <= 99)))

axiom H150 : ((i14 = to_rep1(s__split_fields26)) -> (o95 = i16))

axiom H151 : ((i14 = to_rep1(s__split_fields26)) ->
  (o96 = (s__split_fields35[o95 <- o94])))

axiom H152 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields32 = o97))

axiom H153 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields33 = o98))

axiom H154 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields34 = o99))

axiom H155 : ((i14 = to_rep1(s__split_fields26)) -> (o96 = o100))

axiom H156 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields36 = o101))

axiom H157 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields37 = o102))

axiom H158 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields38 = o103))

axiom H159 : ((i14 = to_rep1(s__split_fields26)) ->
  (s__split_fields39 = o104))

axiom H160 : ((i14 = to_rep1(s__split_fields26)) -> (temp___609 = o97))

axiom H161 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6091 = o98))

axiom H162 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6092 = o99))

axiom H163 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6093 = o100))

axiom H164 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6094 = o101))

axiom H165 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6095 = o102))

axiom H166 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6096 = o103))

axiom H167 : ((i14 = to_rep1(s__split_fields26)) -> (temp___6097 = o104))

axiom H168 : ((i14 = to_rep1(s__split_fields26)) ->
  ((result49 = s__split_fields32) and ((result50 = s__split_fields33) and
  ((result51 = s__split_fields34) and ((result52 = s__split_fields35) and
  ((result53 = s__split_fields36) and ((result54 = s__split_fields37) and
  ((result55 = s__split_fields38) and (result56 = s__split_fields39)))))))))

axiom H169 : ((i14 = to_rep1(s__split_fields26)) ->
  ((s__split_fields40 = temp___609) and
  ((s__split_fields41 = temp___6091) and
  ((s__split_fields42 = temp___6092) and
  ((s__split_fields43 = temp___6093) and
  ((s__split_fields44 = temp___6094) and
  ((s__split_fields45 = temp___6095) and
  ((s__split_fields46 = temp___6096) and
  (s__split_fields47 = temp___6097)))))))))

axiom H170 : ((i14 = to_rep1(s__split_fields26)) -> ((o105 = idx1) and
  in_range3(idx1)))

axiom H171 : ((i14 = to_rep1(s__split_fields26)) -> (to_rep1(o106) = o105))

axiom H172 : ((i14 = to_rep1(s__split_fields26)) ->
  (o107 = ((s__split_fields44[i16])[0 <- o106])))

axiom H173 : ((i14 = to_rep1(s__split_fields26)) -> ((0 <= i16) and
  (i16 <= 99)))

axiom H174 : ((i14 = to_rep1(s__split_fields26)) -> (o108 = i16))

axiom H175 : ((i14 = to_rep1(s__split_fields26)) ->
  (o109 = (s__split_fields44[o108 <- o107])))

axiom H176 : ((i14 = to_rep1(s__split_fields26)) ->
  ((o110 = s__split_fields40) and ((o111 = s__split_fields41) and
  ((o112 = s__split_fields42) and ((o113 = s__split_fields43) and
  ((o114 = o109) and ((o115 = s__split_fields45) and
  ((o116 = s__split_fields46) and (o117 = s__split_fields47)))))))))

axiom H177 : ((i14 = to_rep1(s__split_fields26)) -> ((temp___614 = o110) and
  ((temp___6141 = o111) and ((temp___6142 = o112) and
  ((temp___6143 = o113) and ((temp___6144 = o114) and
  ((temp___6145 = o115) and ((temp___6146 = o116) and
  (temp___6147 = o117)))))))))

axiom H178 : ((i14 = to_rep1(s__split_fields26)) ->
  ((result57 = s__split_fields40) and ((result58 = s__split_fields41) and
  ((result59 = s__split_fields42) and ((result60 = s__split_fields43) and
  ((result61 = s__split_fields44) and ((result62 = s__split_fields45) and
  ((result63 = s__split_fields46) and (result64 = s__split_fields47)))))))))

axiom H179 : ((i14 = to_rep1(s__split_fields26)) ->
  ((s__split_fields48 = temp___614) and
  ((s__split_fields49 = temp___6141) and
  ((s__split_fields50 = temp___6142) and
  ((s__split_fields51 = temp___6143) and
  ((s__split_fields52 = temp___6144) and
  ((s__split_fields53 = temp___6145) and
  ((s__split_fields54 = temp___6146) and
  (s__split_fields55 = temp___6147)))))))))

axiom H180 : ((i14 = to_rep1(s__split_fields26)) -> ((o118 = i16) and
  in_range3(i16)))

axiom H181 : ((i14 = to_rep1(s__split_fields26)) -> (to_rep1(o119) = o118))

axiom H182 : ((i14 = to_rep1(s__split_fields26)) -> ((0 <= idx1) and
  (idx1 <= 99)))

axiom H183 : ((i14 = to_rep1(s__split_fields26)) -> (o120 = idx1))

axiom H184 : ((i14 = to_rep1(s__split_fields26)) ->
  (o121 = (s__split_fields53[o120 <- o119])))

axiom H185 : ((i14 = to_rep1(s__split_fields26)) ->
  ((o122 = s__split_fields48) and ((o123 = s__split_fields49) and
  ((o124 = s__split_fields50) and ((o125 = s__split_fields51) and
  ((o126 = s__split_fields52) and ((o127 = o121) and
  ((o128 = s__split_fields54) and (o129 = s__split_fields55)))))))))

axiom H186 : ((i14 = to_rep1(s__split_fields26)) -> ((temp___617 = o122) and
  ((temp___6171 = o123) and ((temp___6172 = o124) and
  ((temp___6173 = o125) and ((temp___6174 = o126) and
  ((temp___6175 = o127) and ((temp___6176 = o128) and
  (temp___6177 = o129)))))))))

axiom H187 : ((i14 = to_rep1(s__split_fields26)) ->
  ((result65 = s__split_fields48) and ((result66 = s__split_fields49) and
  ((result67 = s__split_fields50) and ((result68 = s__split_fields51) and
  ((result69 = s__split_fields52) and ((result70 = s__split_fields53) and
  ((result71 = s__split_fields54) and (result72 = s__split_fields55)))))))))

axiom H188 : ((i14 = to_rep1(s__split_fields26)) ->
  ((s__split_fields56 = temp___617) and
  ((s__split_fields57 = temp___6171) and
  ((s__split_fields58 = temp___6172) and
  ((s__split_fields59 = temp___6173) and
  ((s__split_fields60 = temp___6174) and
  ((s__split_fields61 = temp___6175) and
  ((s__split_fields62 = temp___6176) and
  (s__split_fields63 = temp___6177)))))))))

axiom H189 : ((i14 = to_rep1(s__split_fields26)) -> (to_rep1(o130) = 0))

axiom H190 : ((i14 = to_rep1(s__split_fields26)) -> ((0 <= idx1) and
  (idx1 <= 99)))

axiom H191 : ((i14 = to_rep1(s__split_fields26)) -> (o131 = idx1))

axiom H192 : ((i14 = to_rep1(s__split_fields26)) ->
  (o132 = (s__split_fields62[o131 <- o130])))

axiom H193 : ((i14 = to_rep1(s__split_fields26)) ->
  ((o133 = s__split_fields56) and ((o134 = s__split_fields57) and
  ((o135 = s__split_fields58) and ((o136 = s__split_fields59) and
  ((o137 = s__split_fields60) and ((o138 = s__split_fields61) and
  ((o139 = o132) and (o140 = s__split_fields63)))))))))

axiom H194 : ((i14 = to_rep1(s__split_fields26)) -> ((temp___620 = o133) and
  ((temp___6201 = o134) and ((temp___6202 = o135) and
  ((temp___6203 = o136) and ((temp___6204 = o137) and
  ((temp___6205 = o138) and ((temp___6206 = o139) and
  (temp___6207 = o140)))))))))

axiom H195 : ((i14 = to_rep1(s__split_fields26)) ->
  ((result73 = s__split_fields56) and ((result74 = s__split_fields57) and
  ((result75 = s__split_fields58) and ((result76 = s__split_fields59) and
  ((result77 = s__split_fields60) and ((result78 = s__split_fields61) and
  ((result79 = s__split_fields62) and (result80 = s__split_fields63)))))))))

axiom H196 : ((i14 = to_rep1(s__split_fields26)) ->
  ((s__split_fields64 = temp___620) and
  ((s__split_fields65 = temp___6201) and
  ((s__split_fields66 = temp___6202) and
  ((s__split_fields67 = temp___6203) and
  ((s__split_fields68 = temp___6204) and
  ((s__split_fields69 = temp___6205) and
  ((s__split_fields70 = temp___6206) and
  (s__split_fields71 = temp___6207)))))))))

axiom H197 : ((i14 = to_rep1(s__split_fields26)) ->
  (stackisize9 = stackisize6))

axiom H198 : ((i14 = to_rep1(s__split_fields26)) -> (i17 = i16))

axiom H199 : ((i14 = to_rep1(s__split_fields26)) ->
  ((s__split_fields104 = s__split_fields64) and
  ((s__split_fields105 = s__split_fields65) and
  ((s__split_fields106 = s__split_fields66) and
  ((s__split_fields107 = s__split_fields67) and
  ((s__split_fields108 = s__split_fields68) and
  ((s__split_fields109 = s__split_fields69) and
  ((s__split_fields110 = s__split_fields70) and
  (s__split_fields111 = s__split_fields71)))))))))

axiom H200 : ((i14 = to_rep1(s__split_fields26)) ->
  (stackisize10 = stackisize7))

axiom H201 : ((i14 = to_rep1(s__split_fields26)) -> (i18 = i16))

axiom H202 : ((i14 = to_rep1(s__split_fields26)) ->
  ((s__split_fields112 = s__split_fields64) and
  ((s__split_fields113 = s__split_fields65) and
  ((s__split_fields114 = s__split_fields66) and
  ((s__split_fields115 = s__split_fields67) and
  ((s__split_fields116 = s__split_fields68) and
  ((s__split_fields117 = s__split_fields69) and
  ((s__split_fields118 = s__split_fields70) and
  (s__split_fields119 = s__split_fields71)))))))))

axiom H203 : ((not (i14 = to_rep1(s__split_fields26))) -> ((0 <= i14) and
  (i14 <= 99)))

axiom H204 : ((not (i14 = to_rep1(s__split_fields26))) -> (o141 = i14))

axiom H205 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (o142 = (s__split_fields27[o141])))

axiom H206 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (o143 = to_rep1(o142)))

axiom H207 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (result81 = stackisize6))

axiom H208 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (stackisize8 = o143))

axiom H209 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((o144 = (stackisize8 + 1)) and in_range3((stackisize8 + 1))))

axiom H210 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (to_rep1(o145) = o144))

axiom H211 : ((not (i14 = to_rep1(s__split_fields26))) -> ((0 <= i14) and
  (i14 <= 99)))

axiom H212 : ((not (i14 = to_rep1(s__split_fields26))) -> (o146 = i14))

axiom H213 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (o147 = (s__split_fields27[o146 <- o145])))

axiom H214 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((o148 = s__split_fields24) and ((o149 = s__split_fields25) and
  ((o150 = s__split_fields26) and ((o151 = o147) and
  ((o152 = s__split_fields28) and ((o153 = s__split_fields29) and
  ((o154 = s__split_fields30) and (o155 = s__split_fields31)))))))))

axiom H215 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((temp___593 = o148) and ((temp___5931 = o149) and
  ((temp___5932 = o150) and ((temp___5933 = o151) and
  ((temp___5934 = o152) and ((temp___5935 = o153) and
  ((temp___5936 = o154) and (temp___5937 = o155)))))))))

axiom H216 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((result82 = s__split_fields24) and ((result83 = s__split_fields25) and
  ((result84 = s__split_fields26) and ((result85 = s__split_fields27) and
  ((result86 = s__split_fields28) and ((result87 = s__split_fields29) and
  ((result88 = s__split_fields30) and (result89 = s__split_fields31)))))))))

axiom H217 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((s__split_fields72 = temp___593) and
  ((s__split_fields73 = temp___5931) and
  ((s__split_fields74 = temp___5932) and
  ((s__split_fields75 = temp___5933) and
  ((s__split_fields76 = temp___5934) and
  ((s__split_fields77 = temp___5935) and
  ((s__split_fields78 = temp___5936) and
  (s__split_fields79 = temp___5937)))))))))

axiom H218 : ((not (i14 = to_rep1(s__split_fields26))) -> ((o156 = idx1) and
  in_range3(idx1)))

axiom H219 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (to_rep1(o157) = o156))

axiom H220 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((0 <= stackisize8) and (stackisize8 <= 99)))

axiom H221 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (o158 = stackisize8))

axiom H222 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (o159 = ((s__split_fields76[i14])[o158 <- o157])))

axiom H223 : ((not (i14 = to_rep1(s__split_fields26))) -> ((0 <= i14) and
  (i14 <= 99)))

axiom H224 : ((not (i14 = to_rep1(s__split_fields26))) -> (o160 = i14))

axiom H225 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (o161 = (s__split_fields76[o160 <- o159])))

axiom H226 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((o162 = s__split_fields72) and ((o163 = s__split_fields73) and
  ((o164 = s__split_fields74) and ((o165 = s__split_fields75) and
  ((o166 = o161) and ((o167 = s__split_fields77) and
  ((o168 = s__split_fields78) and (o169 = s__split_fields79)))))))))

axiom H227 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((temp___598 = o162) and ((temp___5981 = o163) and
  ((temp___5982 = o164) and ((temp___5983 = o165) and
  ((temp___5984 = o166) and ((temp___5985 = o167) and
  ((temp___5986 = o168) and (temp___5987 = o169)))))))))

axiom H228 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((result90 = s__split_fields72) and ((result91 = s__split_fields73) and
  ((result92 = s__split_fields74) and ((result93 = s__split_fields75) and
  ((result94 = s__split_fields76) and ((result95 = s__split_fields77) and
  ((result96 = s__split_fields78) and (result97 = s__split_fields79)))))))))

axiom H229 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((s__split_fields80 = temp___598) and
  ((s__split_fields81 = temp___5981) and
  ((s__split_fields82 = temp___5982) and
  ((s__split_fields83 = temp___5983) and
  ((s__split_fields84 = temp___5984) and
  ((s__split_fields85 = temp___5985) and
  ((s__split_fields86 = temp___5986) and
  (s__split_fields87 = temp___5987)))))))))

axiom H230 : ((not (i14 = to_rep1(s__split_fields26))) -> ((o170 = i14) and
  in_range3(i14)))

axiom H231 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (to_rep1(o171) = o170))

axiom H232 : ((not (i14 = to_rep1(s__split_fields26))) -> ((0 <= idx1) and
  (idx1 <= 99)))

axiom H233 : ((not (i14 = to_rep1(s__split_fields26))) -> (o172 = idx1))

axiom H234 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (o173 = (s__split_fields85[o172 <- o171])))

axiom H235 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((o174 = s__split_fields80) and ((o175 = s__split_fields81) and
  ((o176 = s__split_fields82) and ((o177 = s__split_fields83) and
  ((o178 = s__split_fields84) and ((o179 = o173) and
  ((o180 = s__split_fields86) and (o181 = s__split_fields87)))))))))

axiom H236 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((temp___601 = o174) and ((temp___6011 = o175) and
  ((temp___6012 = o176) and ((temp___6013 = o177) and
  ((temp___6014 = o178) and ((temp___6015 = o179) and
  ((temp___6016 = o180) and (temp___6017 = o181)))))))))

axiom H237 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((result98 = s__split_fields80) and ((result99 = s__split_fields81) and
  ((result100 = s__split_fields82) and ((result101 = s__split_fields83) and
  ((result102 = s__split_fields84) and ((result103 = s__split_fields85) and
  ((result104 = s__split_fields86) and
  (result105 = s__split_fields87)))))))))

axiom H238 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((s__split_fields88 = temp___601) and
  ((s__split_fields89 = temp___6011) and
  ((s__split_fields90 = temp___6012) and
  ((s__split_fields91 = temp___6013) and
  ((s__split_fields92 = temp___6014) and
  ((s__split_fields93 = temp___6015) and
  ((s__split_fields94 = temp___6016) and
  (s__split_fields95 = temp___6017)))))))))

axiom H239 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (to_rep1(o182) = stackisize8))

axiom H240 : ((not (i14 = to_rep1(s__split_fields26))) -> ((0 <= idx1) and
  (idx1 <= 99)))

axiom H241 : ((not (i14 = to_rep1(s__split_fields26))) -> (o183 = idx1))

axiom H242 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (o184 = (s__split_fields94[o183 <- o182])))

axiom H243 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((o185 = s__split_fields88) and ((o186 = s__split_fields89) and
  ((o187 = s__split_fields90) and ((o188 = s__split_fields91) and
  ((o189 = s__split_fields92) and ((o190 = s__split_fields93) and
  ((o191 = o184) and (o192 = s__split_fields95)))))))))

axiom H244 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((temp___604 = o185) and ((temp___6041 = o186) and
  ((temp___6042 = o187) and ((temp___6043 = o188) and
  ((temp___6044 = o189) and ((temp___6045 = o190) and
  ((temp___6046 = o191) and (temp___6047 = o192)))))))))

axiom H245 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((result106 = s__split_fields88) and ((result107 = s__split_fields89) and
  ((result108 = s__split_fields90) and ((result109 = s__split_fields91) and
  ((result110 = s__split_fields92) and ((result111 = s__split_fields93) and
  ((result112 = s__split_fields94) and
  (result113 = s__split_fields95)))))))))

axiom H246 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((s__split_fields96 = temp___604) and
  ((s__split_fields97 = temp___6041) and
  ((s__split_fields98 = temp___6042) and
  ((s__split_fields99 = temp___6043) and
  ((s__split_fields100 = temp___6044) and
  ((s__split_fields101 = temp___6045) and
  ((s__split_fields102 = temp___6046) and
  (s__split_fields103 = temp___6047)))))))))

axiom H247 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (stackisize9 = stackisize8))

axiom H248 : ((not (i14 = to_rep1(s__split_fields26))) -> (i17 = i14))

axiom H249 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((s__split_fields104 = s__split_fields96) and
  ((s__split_fields105 = s__split_fields97) and
  ((s__split_fields106 = s__split_fields98) and
  ((s__split_fields107 = s__split_fields99) and
  ((s__split_fields108 = s__split_fields100) and
  ((s__split_fields109 = s__split_fields101) and
  ((s__split_fields110 = s__split_fields102) and
  (s__split_fields111 = s__split_fields103)))))))))

axiom H250 : ((not (i14 = to_rep1(s__split_fields26))) ->
  (stackisize10 = stackisize8))

axiom H251 : ((not (i14 = to_rep1(s__split_fields26))) -> (i18 = i15))

axiom H252 : ((not (i14 = to_rep1(s__split_fields26))) ->
  ((s__split_fields112 = s__split_fields96) and
  ((s__split_fields113 = s__split_fields97) and
  ((s__split_fields114 = s__split_fields98) and
  ((s__split_fields115 = s__split_fields99) and
  ((s__split_fields116 = s__split_fields100) and
  ((s__split_fields117 = s__split_fields101) and
  ((s__split_fields118 = s__split_fields102) and
  (s__split_fields119 = s__split_fields103)))))))))

axiom H253 : ((((0 <= to_rep1(s__split_fields106)) and
  (to_rep1(s__split_fields106) <= to_rep1(s__split_fields104))) and
  (to_rep1(s__split_fields104) <= 100)) and
  ((to_rep1(s__split_fields104) = 0) or (0 <  to_rep1(s__split_fields106))))

axiom H254 :
  (forall i21:int. (((0 <= i21) and
  (i21 <= (to_rep1(s__split_fields106) - 1))) ->
  (1 <= to_rep1((s__split_fields107[i21])))))

axiom H255 :
  (forall i21:int. (((0 <= i21) and
  (i21 <= (to_rep1(s__split_fields106) - 1))) ->
  ((to_rep1((s__split_fields107[i21])) <= to_rep1(s__split_fields104)) and
  (forall j3:int. (((0 <= j3) and
  (j3 <= (to_rep1((s__split_fields107[i21])) - 1))) ->
  ((0 <= to_rep1(((s__split_fields108[i21])[j3]))) and
  (to_rep1(((s__split_fields108[i21])[j3])) <  to_rep1(s__split_fields104))))))))

axiom H256 : ((result118 = true) <->
  (forall i21:int. (((0 <= i21) and
  (i21 <= (to_rep1(s__split_fields104) - 1))) ->
  ((((0 <= to_rep1((s__split_fields109[i21]))) and
  (to_rep1((s__split_fields109[i21])) <= (to_rep1(s__split_fields106) - 1))) and
  ((0 <= to_rep1((s__split_fields110[i21]))) and
  (to_rep1((s__split_fields110[i21])) <= (to_rep1((s__split_fields107[to_rep1((s__split_fields109[i21]))])) - 1)))) and
  (to_rep1(((s__split_fields108[to_rep1((s__split_fields109[i21]))])[to_rep1((s__split_fields110[i21]))])) = i21)))))

axiom H257 : ((result118 = true) -> ((result117 = true) <->
  (forall ist1:int. (((0 <= ist1) and
  (ist1 <= (to_rep1(s__split_fields106) - 1))) ->
  (forall ip1:int. (((0 <= ip1) and
  (ip1 <= (to_rep1((s__split_fields107[ist1])) - 1))) ->
  ((ist1 = to_rep1((s__split_fields109[to_rep1(((s__split_fields108[ist1])[ip1]))]))) and
  (ip1 = to_rep1((s__split_fields110[to_rep1(((s__split_fields108[ist1])[ip1]))]))))))))))

axiom H258 : ((not (result118 = true)) -> (result117 = false))

axiom H259 : ((result117 = true) -> ((result116 = true) <->
  (forall i21:int. (((0 <= i21) and
  (i21 <= (to_rep1(s__split_fields106) - 1))) ->
  (forall j3:int. (((0 <= j3) and
  (j3 <= (to_rep1((s__split_fields107[i21])) - 2))) ->
  (forall k2:int. ((((j3 + 1) <= k2) and
  (k2 <= (to_rep1((s__split_fields107[i21])) - 1))) ->
  (to_rep1(((s__split_fields108[i21])[j3])) <  to_rep1(((s__split_fields108[i21])[k2])))))))))))

axiom H260 : ((not (result117 = true)) -> (result116 = false))

axiom H261 : ((result116 = true) -> ((result115 = true) <->
  (forall i21:int. (((0 <= i21) and
  (i21 <= (to_rep1(s__split_fields106) - 1))) ->
  (forall j3:int. (((0 <= j3) and
  (j3 <= (to_rep1((s__split_fields107[i21])) - 2))) ->
  (forall k2:int. ((((j3 + 1) <= k2) and
  (k2 <= (to_rep1((s__split_fields107[i21])) - 1))) ->
  (to_rep((s__split_fields105[to_rep1(((s__split_fields108[i21])[k2]))])) <= to_rep((s__split_fields105[to_rep1(((s__split_fields108[i21])[j3]))])))))))))))

axiom H262 : ((not (result116 = true)) -> (result115 = false))

axiom H263 : (result115 = true)

axiom H264 : (0 <= i3)

axiom H265 : (i3 <= (to_rep1(s__split_fields104) - 1))

 (* File "patience.ads", line 53, characters 0-0 *)
goal WP_parameter_def : (0 <= i3)
