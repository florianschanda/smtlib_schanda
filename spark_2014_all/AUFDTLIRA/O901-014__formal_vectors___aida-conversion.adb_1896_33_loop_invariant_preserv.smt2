(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant1 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(declare-fun is_digit (Int) Bool)
(declare-fun is_digit__function_guard (Bool Int) Bool)
(define-fun dynamic_invariant2 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(assert (forall ((c Int)) (! (=> (dynamic_invariant2 c true true true) (let ((result (is_digit c))) (ite (= c 48) (= result true) (ite (= c 49) (= result true) (ite (= c 50) (= result true) (ite (= c 51) (= result true) (ite (= c 52) (= result true) (ite (= c 53) (= result true) (ite (= c 54) (= result true) (ite (= c 55) (= result true) (ite (= c 56) (= result true) (ite (= c 57) (= result true) (ite (< 57 c) (not (= result true)) (=> (< c 48) (not (= result true)))))))))))))))) :pattern ((is_digit c)))))
(declare-fun convert_character_digit_to_integer (Int) Int)
(declare-fun convert_character_digit_to_integer__function_guard (Int Int) Bool)
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int integer))))))
(declare-fun slide1 ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int integer) Int Int (Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (integer Int) (Array Int integer))
(assert (forall ((v integer)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq2 ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep1 (select a temp___idx_132)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep1 (select a temp___idx_132)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare1 ((Array Int integer) Int Int (Array Int integer) Int Int) Int)
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq2 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq2 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq2 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const source us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((tint_arrayD1__ref (mk_tint_arrayD1__ref (tint_arrayD1__content integer)))))
(define-fun tint_arrayD1__ref___19__projection ((a tint_arrayD1__ref)) integer (tint_arrayD1__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int integer)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int integer) (elts1 a))
(define-fun of_array1 ((a (Array Int integer)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int integer)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int integer)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int integer)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq2 (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq5 (us_t1 us_t1) Bool)
(declare-const dummy5 us_t1)
(declare-datatypes () ((tint_arrayT__ref (mk_tint_arrayT__ref (tint_arrayT__content us_t1)))))
(define-fun tint_arrayT__ref___19__projection ((a tint_arrayT__ref)) us_t1 (tint_arrayT__content a))
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t636b__ref (mk_t636b__ref (t636b__content integer)))))
(define-fun t636b__ref___projection ((a t636b__ref)) integer (t636b__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int integer)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int integer) (elts2 a))
(define-fun of_array2 ((a (Array Int integer)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int integer)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int integer)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int integer)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq4 ((x us_t2) (y us_t2)) Bool (bool_eq2 (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((t637b__ref (mk_t637b__ref (t637b__content us_t2)))))
(define-fun t637b__ref___projection ((a t637b__ref)) us_t2 (t637b__content a))
(declare-const int_array__first integer)
(declare-const int_array__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_property5 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((tnumber_array_typeD1__ref (mk_tnumber_array_typeD1__ref (tnumber_array_typeD1__content integer)))))
(define-fun tnumber_array_typeD1__ref___28__projection ((a tnumber_array_typeD1__ref)) integer (tnumber_array_typeD1__content a))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first6 (mk3 f l))) f) (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property5 range_first range_last low) (dynamic_property5 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int integer)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int integer) (elts3 a))
(define-fun of_array3 ((a (Array Int integer)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int integer)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int integer)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int integer)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq5 ((x us_t3) (y us_t3)) Bool (bool_eq2 (elts3 x) (to_rep1 (first6 (rt3 x))) (to_rep1 (last6 (rt3 x))) (elts3 y) (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))
(declare-fun user_eq9 (us_t3 us_t3) Bool)
(declare-const dummy9 us_t3)
(declare-datatypes () ((number_array_type__ref (mk_number_array_type__ref (number_array_type__content us_t3)))))
(define-fun number_array_type__ref___28__projection ((a number_array_type__ref)) us_t3 (number_array_type__content a))
(define-fun dynamic_property7 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t640b__ref (mk_t640b__ref (t640b__content integer)))))
(define-fun t640b__ref___projection ((a t640b__ref)) integer (t640b__content a))
(declare-sort t4 0)
(declare-fun first8 (t4) integer)
(declare-fun last8 (t4) integer)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first8 (mk4 f l))) f) (= (to_rep1 (last8 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property7 range_first range_last low) (dynamic_property7 range_first range_last high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int integer)) (rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int integer) (elts4 a))
(define-fun of_array4 ((a (Array Int integer)) (f Int) (l Int)) us_t4 (mk___t4 a (mk4 f l)))
(define-fun first9 ((a us_t4)) Int (to_rep1 (first8 (rt4 a))))
(define-fun last9 ((a us_t4)) Int (to_rep1 (last8 (rt4 a))))
(define-fun length4 ((a us_t4)) Int (ite (<= (first9 a) (last9 a)) (+ (- (last9 a) (first9 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int integer)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int integer)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int integer)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq6 ((x us_t4) (y us_t4)) Bool (bool_eq2 (elts4 x) (to_rep1 (first8 (rt4 x))) (to_rep1 (last8 (rt4 x))) (elts4 y) (to_rep1 (first8 (rt4 y))) (to_rep1 (last8 (rt4 y)))))
(declare-fun user_eq11 (us_t4 us_t4) Bool)
(declare-const dummy11 us_t4)
(declare-datatypes () ((t641b__ref (mk_t641b__ref (t641b__content us_t4)))))
(define-fun t641b__ref___projection ((a t641b__ref)) us_t4 (t641b__content a))
(declare-const n__first integer)
(declare-const n__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_property9 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq12 (integer integer) Bool)
(declare-const dummy12 integer)
(declare-datatypes () ((t642b__ref (mk_t642b__ref (t642b__content integer)))))
(define-fun t642b__ref___projection ((a t642b__ref)) integer (t642b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-sort t5 0)
(declare-fun first10 (t5) integer)
(declare-fun last10 (t5) integer)
(declare-fun mk5 (Int Int) t5)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first10 (mk5 f l))) f) (= (to_rep1 (last10 (mk5 f l))) l)))) :pattern ((mk5 f l)))))
(define-fun dynamic_property10 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t5 (mk___t5 (elts5 (Array Int integer)) (rt5 t5)))))
(define-fun to_array5 ((a us_t5)) (Array Int integer) (elts5 a))
(define-fun of_array5 ((a (Array Int integer)) (f Int) (l Int)) us_t5 (mk___t5 a (mk5 f l)))
(define-fun first11 ((a us_t5)) Int (to_rep1 (first10 (rt5 a))))
(define-fun last11 ((a us_t5)) Int (to_rep1 (last10 (rt5 a))))
(define-fun length5 ((a us_t5)) Int (ite (<= (first11 a) (last11 a)) (+ (- (last11 a) (first11 a)) 1) 0))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int integer)) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 ((Array Int integer)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int integer)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment5 a))))
(define-fun bool_eq7 ((x us_t5) (y us_t5)) Bool (bool_eq2 (elts5 x) (to_rep1 (first10 (rt5 x))) (to_rep1 (last10 (rt5 x))) (elts5 y) (to_rep1 (first10 (rt5 y))) (to_rep1 (last10 (rt5 y)))))
(declare-fun user_eq13 (us_t5 us_t5) Bool)
(declare-const dummy13 us_t5)
(declare-datatypes () ((tint_arrayB__ref (mk_tint_arrayB__ref (tint_arrayB__content us_t5)))))
(define-fun tint_arrayB__ref___19__projection ((a tint_arrayB__ref)) us_t5 (tint_arrayB__content a))
(declare-fun aida__conversion__calculate_negative_target_length_10__int_array__aggregate_def (Int Int Int Int Int Int Int Int Int Int Int) us_t2)
(assert (forall ((temp___2176 Int) (temp___2177 Int) (temp___2178 Int) (temp___2179 Int) (temp___2180 Int) (temp___2181 Int) (temp___2182 Int) (temp___2183 Int) (temp___2184 Int) (temp___2185 Int) (temp___2186 Int)) (let ((temp___2175 (aida__conversion__calculate_negative_target_length_10__int_array__aggregate_def temp___2176 temp___2177 temp___2178 temp___2179 temp___2180 temp___2181 temp___2182 temp___2183 temp___2184 temp___2185 temp___2186))) (and (=> (dynamic_property10 (+ (first1 source) 1) (+ (first1 source) 9) temp___2185 temp___2186) (and (= (first5 temp___2175) temp___2185) (= (last5 temp___2175) temp___2186))) (and (and (and (and (and (and (and (and (= (select (to_array2 temp___2175) (+ (+ (first1 source) 1) 0)) (of_rep1 temp___2176)) (= (select (to_array2 temp___2175) (+ (+ (first1 source) 1) 1)) (of_rep1 temp___2177))) (= (select (to_array2 temp___2175) (+ (+ (first1 source) 1) 2)) (of_rep1 temp___2178))) (= (select (to_array2 temp___2175) (+ (+ (first1 source) 1) 3)) (of_rep1 temp___2179))) (= (select (to_array2 temp___2175) (+ (+ (first1 source) 1) 4)) (of_rep1 temp___2180))) (= (select (to_array2 temp___2175) (+ (+ (first1 source) 1) 5)) (of_rep1 temp___2181))) (= (select (to_array2 temp___2175) (+ (+ (first1 source) 1) 6)) (of_rep1 temp___2182))) (= (select (to_array2 temp___2175) (+ (+ (first1 source) 1) 7)) (of_rep1 temp___2183))) (= (select (to_array2 temp___2175) (+ (+ (first1 source) 1) 8)) (of_rep1 temp___2184)))))))
(declare-sort t6 0)
(declare-fun first12 (t6) integer)
(declare-fun last12 (t6) integer)
(declare-fun mk6 (Int Int) t6)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first12 (mk6 f l))) f) (= (to_rep1 (last12 (mk6 f l))) l)))) :pattern ((mk6 f l)))))
(define-fun dynamic_property11 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property5 range_first range_last low) (dynamic_property5 range_first range_last high))))))
(declare-datatypes () ((us_t6 (mk___t6 (elts6 (Array Int integer)) (rt6 t6)))))
(define-fun to_array6 ((a us_t6)) (Array Int integer) (elts6 a))
(define-fun of_array6 ((a (Array Int integer)) (f Int) (l Int)) us_t6 (mk___t6 a (mk6 f l)))
(define-fun first13 ((a us_t6)) Int (to_rep1 (first12 (rt6 a))))
(define-fun last13 ((a us_t6)) Int (to_rep1 (last12 (rt6 a))))
(define-fun length6 ((a us_t6)) Int (ite (<= (first13 a) (last13 a)) (+ (- (last13 a) (first13 a)) 1) 0))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int integer)) Int)
(declare-const value__component__size6 Int)
(declare-fun object__component__size6 ((Array Int integer)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int integer)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size6))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment6 a))))
(define-fun bool_eq8 ((x us_t6) (y us_t6)) Bool (bool_eq2 (elts6 x) (to_rep1 (first12 (rt6 x))) (to_rep1 (last12 (rt6 x))) (elts6 y) (to_rep1 (first12 (rt6 y))) (to_rep1 (last12 (rt6 y)))))
(declare-fun user_eq14 (us_t6 us_t6) Bool)
(declare-const dummy14 us_t6)
(declare-datatypes () ((tnumber_array_typeB__ref (mk_tnumber_array_typeB__ref (tnumber_array_typeB__content us_t6)))))
(define-fun tnumber_array_typeB__ref___28__projection ((a tnumber_array_typeB__ref)) us_t6 (tnumber_array_typeB__content a))
(declare-fun aida__conversion__calculate_negative_target_length_10__n__aggregate_def (Int Int Int) us_t4)
(assert (forall ((temp___2192 Int) (temp___2193 Int) (temp___2194 Int)) (let ((temp___2191 (aida__conversion__calculate_negative_target_length_10__n__aggregate_def temp___2192 temp___2193 temp___2194))) (and (=> (dynamic_property11 (+ (first1 source) 1) (+ (first1 source) 9) temp___2193 temp___2194) (and (= (first9 temp___2191) temp___2193) (= (last9 temp___2191) temp___2194))) (forall ((temp___2195 Int)) (= (select (to_array4 temp___2191) temp___2195) (of_rep1 temp___2192)))))))
(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant4 ((temp___expr_689 us_t3) (temp___is_init_686 Bool) (temp___skip_constant_687 Bool) (temp___do_toplevel_688 Bool)) Bool (=> (not (= temp___skip_constant_687 true)) (and (dynamic_property6 (+ (first1 source) 1) (+ (first1 source) 9) (first7 temp___expr_689) (last7 temp___expr_689)) (and (= (first7 temp___expr_689) (+ (first1 source) 1)) (= (last7 temp___expr_689) (+ (first1 source) 9))))))
(assert (forall ((source1 Int)) (! (=> (and (dynamic_invariant2 source1 true true true) (= (is_digit source1) true)) (let ((result (convert_character_digit_to_integer source1))) (and (and (and (<= 0 result) (<= result 9)) (ite (= source1 48) (= result 0) (ite (= source1 49) (= result 1) (ite (= source1 50) (= result 2) (ite (= source1 51) (= result 3) (ite (= source1 52) (= result 4) (ite (= source1 53) (= result 5) (ite (= source1 54) (= result 6) (ite (= source1 55) (= result 7) (ite (= source1 56) (= result 8) (=> (= source1 57) (= result 9)))))))))))) (dynamic_invariant result true false true)))) :pattern ((convert_character_digit_to_integer source1)))))
(declare-const target Int)
(declare-const has_failed Bool)
(declare-const int_array (Array Int integer))
(declare-const n (Array Int integer))
(declare-const index Int)
(declare-const temp___2214 Int)
(declare-const index1 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Bool)
(declare-const o3 Bool)
(declare-const o4 Bool)
(declare-const temp___2189 (Array Int integer))
(declare-const temp___21891 t2)
(declare-const aida__conversion__calculate_negative_target_length_10__int_array__assume (Array Int integer))
(declare-const aida__conversion__calculate_negative_target_length_10__int_array__assume1 t1)
(declare-const us Int)
(declare-const us1 Int)
(declare-const temp___2197 (Array Int integer))
(declare-const temp___21971 t4)
(declare-const aida__conversion__calculate_negative_target_length_10__n__assume (Array Int integer))
(declare-const aida__conversion__calculate_negative_target_length_10__n__assume1 t3)
(declare-const us2 Int)
(declare-const us3 Int)
(declare-const temp___2203 Int)
(declare-const temp___2204 Int)
(declare-const temp___2202 Int)
(declare-const temp___2200 (Array Int integer))
(declare-const o5 Int)
(declare-const o6 integer)
(declare-const o7 Int)
(declare-const aida__conversion__convert_character_digit_to_integer__2__target Int)
(declare-const o8 Int)
(declare-const o9 character)
(declare-const o10 Int)
(declare-const o11 integer)
(declare-const o12 Int)
(declare-const o13 (Array Int integer))
(declare-const i Int)
(declare-const o14 Int)
(declare-const o15 Bool)
(declare-const o16 Int)
(declare-const o17 integer)
(declare-const o18 Int)
(declare-const o19 Bool)
(declare-const j Int)
(declare-const o20 Int)
(declare-const o21 Bool)
(declare-const o22 Int)
(declare-const o23 integer)
(declare-const o24 Int)
(declare-const o25 Int)
(declare-const o26 integer)
(declare-const o27 Int)
(declare-const aida__conversion__convert_character_digit_to_integer__2__target1 Int)
(declare-const o28 Int)
(declare-const o29 character)
(declare-const o30 Int)
(declare-const o31 integer)
(declare-const o32 Int)
(declare-const o33 (Array Int integer))
(declare-const i1 Int)
(declare-const o34 Int)
(declare-const o35 integer)
(declare-const o36 Int)
(declare-const o37 integer)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const o40 Bool)
(declare-const temp___2205 Int)
(declare-const o41 Int)
(declare-const o42 integer)
(declare-const o43 Int)
(declare-const o44 Int)
(declare-const o45 Int)
(declare-const temp___2206 Int)
(declare-const o46 Int)
(declare-const o47 integer)
(declare-const o48 Int)
(declare-const o49 Int)
(declare-const o50 Int)
(declare-const o51 Int)
(declare-const o52 Int)
(declare-const temp___2207 Int)
(declare-const o53 Int)
(declare-const o54 integer)
(declare-const o55 Int)
(declare-const o56 Int)
(declare-const o57 Int)
(declare-const o58 Int)
(declare-const o59 Int)
(declare-const temp___2208 Int)
(declare-const o60 Int)
(declare-const o61 integer)
(declare-const o62 Int)
(declare-const o63 Int)
(declare-const o64 Int)
(declare-const o65 Int)
(declare-const o66 Int)
(declare-const temp___2209 Int)
(declare-const o67 Int)
(declare-const o68 integer)
(declare-const o69 Int)
(declare-const o70 Int)
(declare-const o71 Int)
(declare-const o72 Int)
(declare-const o73 Int)
(declare-const temp___2210 Int)
(declare-const o74 Int)
(declare-const o75 integer)
(declare-const o76 Int)
(declare-const o77 Int)
(declare-const o78 Int)
(declare-const o79 Int)
(declare-const o80 Int)
(declare-const temp___2211 Int)
(declare-const o81 Int)
(declare-const o82 integer)
(declare-const o83 Int)
(declare-const o84 Int)
(declare-const o85 Int)
(declare-const o86 Int)
(declare-const o87 Int)
(declare-const temp___2212 Int)
(declare-const o88 Int)
(declare-const o89 integer)
(declare-const o90 Int)
(declare-const o91 Int)
(declare-const o92 Int)
(declare-const o93 Int)
(declare-const o94 Int)
(declare-const temp___2213 Int)
(declare-const o95 Int)
(declare-const o96 integer)
(declare-const o97 Int)
(declare-const o98 Int)
(declare-const o99 Int)
(declare-const o100 Int)
(declare-const o101 Int)
(declare-const result Bool)
(declare-const result1 (Array Int integer))
(declare-const int_array1 (Array Int integer))
(declare-const result2 (Array Int integer))
(declare-const n1 (Array Int integer))
(declare-const result3 Int)
(declare-const index2 Int)
(declare-const aida__conversion__convert_character_digit_to_integer__2__target2 Int)
(declare-const result4 (Array Int integer))
(declare-const n2 (Array Int integer))
(declare-const n3 (Array Int integer))
(declare-const index3 Int)
(declare-const result5 Bool)
(declare-const result6 Bool)
(declare-const result7 Int)
(declare-const index4 Int)
(declare-const aida__conversion__convert_character_digit_to_integer__2__target3 Int)
(declare-const result8 (Array Int integer))
(declare-const n4 (Array Int integer))
(declare-const n5 (Array Int integer))
(declare-const index5 Int)
(declare-const n6 (Array Int integer))
(declare-const index6 Int)
(declare-const n7 map__ref1)
(declare-const index7 int__ref)
(declare-const n8 (Array Int integer))
(declare-const index8 Int)
(declare-const result9 int__ref)
(declare-const target1 Int)
(declare-const result10 int__ref)
(declare-const target2 Int)
(declare-const result11 int__ref)
(declare-const target3 Int)
(declare-const result12 int__ref)
(declare-const target4 Int)
(declare-const result13 int__ref)
(declare-const target5 Int)
(declare-const result14 int__ref)
(declare-const target6 Int)
(declare-const result15 int__ref)
(declare-const target7 Int)
(declare-const result16 int__ref)
(declare-const target8 Int)
(declare-const result17 int__ref)
(declare-const target9 Int)
(declare-const result18 bool__ref)
(declare-const has_failed1 Bool)
(declare-const target10 int__ref)
(declare-const has_failed2 bool__ref)
(declare-const int_array2 map__ref1)
(declare-const n9 map__ref1)
(declare-const index9 int__ref)
(declare-const target11 Int)
(declare-const has_failed3 Bool)
(declare-const int_array3 (Array Int integer))
(declare-const n10 (Array Int integer))
(declare-const index10 Int)
(assert (dynamic_invariant1 source true false true))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 target)))
(assert (and (= (length source) 10) (and (= (to_rep (select (elts source) (+ (to_rep1 (first (rt source))) 0))) 45) (forall ((index11 Int)) (=> (and (<= (+ (to_rep1 (first (rt source))) 1) index11) (<= index11 (+ (to_rep1 (first (rt source))) 9))) (= (is_digit (to_rep (select (elts source) index11))) true))))))
(assert (= (to_rep1 (first4 (rt2 (aida__conversion__calculate_negative_target_length_10__int_array__aggregate_def 9 9 9 9 9 9 9 9 9 (+ (to_rep1 (first (rt source))) 1) (+ (+ (to_rep1 (first (rt source))) 1) 8))))) (+ (to_rep1 (first (rt source))) 1)))
(assert (= (to_rep1 (last4 (rt2 (aida__conversion__calculate_negative_target_length_10__int_array__aggregate_def 9 9 9 9 9 9 9 9 9 (+ (to_rep1 (first (rt source))) 1) (+ (+ (to_rep1 (first (rt source))) 1) 8))))) (+ (+ (to_rep1 (first (rt source))) 1) 8)))
(assert (= (mk___t2 temp___2189 temp___21891) (aida__conversion__calculate_negative_target_length_10__int_array__aggregate_def 9 9 9 9 9 9 9 9 9 (+ (to_rep1 (first (rt source))) 1) (+ (+ (to_rep1 (first (rt source))) 1) 8))))
(assert (= (ite (<= (to_rep1 (first4 temp___21891)) (to_rep1 (last4 temp___21891))) (+ (- (to_rep1 (last4 temp___21891)) (to_rep1 (first4 temp___21891))) 1) 0) (ite (<= (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1 (first (rt source))) 9)) (+ (- (+ (to_rep1 (first (rt source))) 9) (+ (to_rep1 (first (rt source))) 1)) 1) 0)))
(assert (= (slide1 temp___2189 (to_rep1 (first4 temp___21891)) (+ (to_rep1 (first (rt source))) 1)) aida__conversion__calculate_negative_target_length_10__int_array__assume))
(assert (= (mk1 (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1 (first (rt source))) 9)) aida__conversion__calculate_negative_target_length_10__int_array__assume1))
(assert (= (mk_map__ref1 result1) (mk_map__ref1 int_array)))
(assert (= int_array1 aida__conversion__calculate_negative_target_length_10__int_array__assume))
(assert (= (to_rep1 int_array__first) (to_rep1 (first2 aida__conversion__calculate_negative_target_length_10__int_array__assume1))))
(assert (= (to_rep1 int_array__last) (to_rep1 (last2 aida__conversion__calculate_negative_target_length_10__int_array__assume1))))
(assert (and (dynamic_property2 (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1 (first (rt source))) 9) (to_rep1 int_array__first) (to_rep1 int_array__last)) (and (= (to_rep1 int_array__first) (+ (to_rep1 (first (rt source))) 1)) (= (to_rep1 int_array__last) (+ (to_rep1 (first (rt source))) 9)))))
(assert (= (to_rep1 (first8 (rt4 (aida__conversion__calculate_negative_target_length_10__n__aggregate_def 0 (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1 (first (rt source))) 9))))) (+ (to_rep1 (first (rt source))) 1)))
(assert (= (to_rep1 (last8 (rt4 (aida__conversion__calculate_negative_target_length_10__n__aggregate_def 0 (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1 (first (rt source))) 9))))) (+ (to_rep1 (first (rt source))) 9)))
(assert (= (mk___t4 temp___2197 temp___21971) (aida__conversion__calculate_negative_target_length_10__n__aggregate_def 0 (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1 (first (rt source))) 9))))
(assert (= (ite (<= (to_rep1 (first8 temp___21971)) (to_rep1 (last8 temp___21971))) (+ (- (to_rep1 (last8 temp___21971)) (to_rep1 (first8 temp___21971))) 1) 0) (ite (<= (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1 (first (rt source))) 9)) (+ (- (+ (to_rep1 (first (rt source))) 9) (+ (to_rep1 (first (rt source))) 1)) 1) 0)))
(assert (= (slide1 temp___2197 (to_rep1 (first8 temp___21971)) (+ (to_rep1 (first (rt source))) 1)) aida__conversion__calculate_negative_target_length_10__n__assume))
(assert (= (mk3 (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1 (first (rt source))) 9)) aida__conversion__calculate_negative_target_length_10__n__assume1))
(assert (= (mk_map__ref1 result2) (mk_map__ref1 n)))
(assert (= n1 aida__conversion__calculate_negative_target_length_10__n__assume))
(assert (= (to_rep1 n__first) (to_rep1 (first6 aida__conversion__calculate_negative_target_length_10__n__assume1))))
(assert (= (to_rep1 n__last) (to_rep1 (last6 aida__conversion__calculate_negative_target_length_10__n__assume1))))
(assert (and (dynamic_property6 (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1 (first (rt source))) 9) (to_rep1 n__first) (to_rep1 n__last)) (and (= (to_rep1 n__first) (+ (to_rep1 (first (rt source))) 1)) (= (to_rep1 n__last) (+ (to_rep1 (first (rt source))) 9)))))
(assert (and (= temp___2203 (+ (to_rep1 (first (rt source))) 1)) (in_range1 (+ (to_rep1 (first (rt source))) 1))))
(assert (and (= temp___2204 (+ (to_rep1 (first (rt source))) 9)) (in_range1 (+ (to_rep1 (first (rt source))) 9))))
(assert (= (mk_int__ref result3) (mk_int__ref index)))
(assert (= index2 temp___2203))
(assert (<= temp___2203 index2))
(assert (<= index2 temp___2204))
(assert (and (<= (to_rep1 n__first) index2) (<= index2 (to_rep1 n__last))))
(assert (= o5 index2))
(assert (= o6 (select n1 o5)))
(assert (= o7 (to_rep1 o6)))
(assert (= o7 aida__conversion__convert_character_digit_to_integer__2__target))
(assert (and (<= (to_rep1 (first (rt source))) index2) (<= index2 (to_rep1 (last (rt source))))))
(assert (= o8 index2))
(assert (= o9 (select (elts source) o8)))
(assert (= o10 (to_rep o9)))
(assert (and (and (and (and (<= 0 aida__conversion__convert_character_digit_to_integer__2__target2) (<= aida__conversion__convert_character_digit_to_integer__2__target2 9)) (= aida__conversion__convert_character_digit_to_integer__2__target2 (convert_character_digit_to_integer o10))) (ite (= (= o10 48) true) (= aida__conversion__convert_character_digit_to_integer__2__target2 0) (ite (= (= o10 49) true) (= aida__conversion__convert_character_digit_to_integer__2__target2 1) (ite (= (= o10 50) true) (= aida__conversion__convert_character_digit_to_integer__2__target2 2) (ite (= (= o10 51) true) (= aida__conversion__convert_character_digit_to_integer__2__target2 3) (ite (= (= o10 52) true) (= aida__conversion__convert_character_digit_to_integer__2__target2 4) (ite (= (= o10 53) true) (= aida__conversion__convert_character_digit_to_integer__2__target2 5) (ite (= (= o10 54) true) (= aida__conversion__convert_character_digit_to_integer__2__target2 6) (ite (= (= o10 55) true) (= aida__conversion__convert_character_digit_to_integer__2__target2 7) (ite (= (= o10 56) true) (= aida__conversion__convert_character_digit_to_integer__2__target2 8) (=> (= (= o10 57) true) (= aida__conversion__convert_character_digit_to_integer__2__target2 9)))))))))))) (in_range1 aida__conversion__convert_character_digit_to_integer__2__target2)))
(assert (= (to_rep1 o11) aida__conversion__convert_character_digit_to_integer__2__target2))
(assert (and (<= (to_rep1 n__first) index2) (<= index2 (to_rep1 n__last))))
(assert (= o12 index2))
(assert (= o13 (store n1 o12 o11)))
(assert (= n1 result4))
(assert (= n2 o13))
(assert (forall ((i2 Int)) (=> (and (<= (+ (to_rep1 (first (rt source))) 1) i2) (<= i2 index3)) (and (<= 0 (to_rep1 (select n3 i2))) (<= (to_rep1 (select n3 i2)) 9)))))
(assert (forall ((j1 Int)) (=> (and (<= (+ (to_rep1 (first (rt source))) 1) j1) (<= j1 index3)) (<= (to_rep1 (select n3 j1)) (to_rep1 (select int_array1 j1))))))
(assert (and (and (forall ((temp___2201 Int)) (=> (and (<= (to_rep1 n__first) temp___2201) (<= temp___2201 (to_rep1 n__last))) (=> (< index3 temp___2201) (= (select n3 temp___2201) (select n1 temp___2201))))) (=> (<= (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1 (first (rt source))) 9)) (dynamic_property9 (+ (to_rep1 (first (rt source))) 1) (+ (to_rep1 (first (rt source))) 9) index3))) (and (<= (+ (to_rep1 (first (rt source))) 1) index3) (<= index3 (+ (to_rep1 (first (rt source))) 9)))))
(assert (not (= index3 temp___2204)))
(assert (= index3 result7))
(assert (= index4 (+ index3 1)))
(assert (and (<= (to_rep1 n__first) index4) (<= index4 (to_rep1 n__last))))
(assert (= o25 index4))
(assert (= o26 (select n3 o25)))
(assert (= o27 (to_rep1 o26)))
(assert (= o27 aida__conversion__convert_character_digit_to_integer__2__target1))
(assert (and (<= (to_rep1 (first (rt source))) index4) (<= index4 (to_rep1 (last (rt source))))))
(assert (= o28 index4))
(assert (= o29 (select (elts source) o28)))
(assert (= o30 (to_rep o29)))
(assert (and (and (and (and (<= 0 aida__conversion__convert_character_digit_to_integer__2__target3) (<= aida__conversion__convert_character_digit_to_integer__2__target3 9)) (= aida__conversion__convert_character_digit_to_integer__2__target3 (convert_character_digit_to_integer o30))) (ite (= (= o30 48) true) (= aida__conversion__convert_character_digit_to_integer__2__target3 0) (ite (= (= o30 49) true) (= aida__conversion__convert_character_digit_to_integer__2__target3 1) (ite (= (= o30 50) true) (= aida__conversion__convert_character_digit_to_integer__2__target3 2) (ite (= (= o30 51) true) (= aida__conversion__convert_character_digit_to_integer__2__target3 3) (ite (= (= o30 52) true) (= aida__conversion__convert_character_digit_to_integer__2__target3 4) (ite (= (= o30 53) true) (= aida__conversion__convert_character_digit_to_integer__2__target3 5) (ite (= (= o30 54) true) (= aida__conversion__convert_character_digit_to_integer__2__target3 6) (ite (= (= o30 55) true) (= aida__conversion__convert_character_digit_to_integer__2__target3 7) (ite (= (= o30 56) true) (= aida__conversion__convert_character_digit_to_integer__2__target3 8) (=> (= (= o30 57) true) (= aida__conversion__convert_character_digit_to_integer__2__target3 9)))))))))))) (in_range1 aida__conversion__convert_character_digit_to_integer__2__target3)))
(assert (= (to_rep1 o31) aida__conversion__convert_character_digit_to_integer__2__target3))
(assert (and (<= (to_rep1 n__first) index4) (<= index4 (to_rep1 n__last))))
(assert (= o32 index4))
(assert (= o33 (store n3 o32 o31)))
(assert (= result8 n3))
(assert (= n4 o33))
(declare-const i2 Int)
(assert (<= (+ (to_rep1 (first (rt source))) 1) i2))
(assert (<= i2 index4))
(assert (not (<= 0 (to_rep1 (select n4 i2)))))
(check-sat)
(exit)
