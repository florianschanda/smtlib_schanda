(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(declare-fun to_rep (positive) Int)
(declare-fun of_rep (Int) positive)
(assert (forall ((x positive)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x positive)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep1 (character) Int)
(declare-fun of_rep1 (Int) character)
(assert (forall ((x character)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep1 (select a temp___idx_91)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep1 (select a temp___idx_91)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-fun to_rep2 (integer) Int)
(declare-fun of_rep2 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep2 (first (mk f l))) f) (= (to_rep2 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep2 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep2 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep2 (first (rt x))) (to_rep2 (last (rt x))) (elts y) (to_rep2 (first (rt y))) (to_rep2 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((text__ref (mk_text__ref (text__content us_t)))))
(define-fun text__ref___projection ((a text__ref)) us_t (text__content a))
(define-fun dynamic_invariant2 ((temp___expr_159 us_t) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (and (=> (not (= temp___skip_constant_156 true)) (dynamic_property 1 2147483647 (first1 temp___expr_159) (last1 temp___expr_159))) (=> (= temp___do_toplevel_157 true) (=> (= temp___is_init_155 true) (= (first1 temp___expr_159) 1)))))
(define-fun dynamic_predicate ((temp___162 us_t)) Bool (= (first1 temp___162) 1))
(declare-fun match_at (us_t us_t Int) Bool)
(declare-fun match_at__function_guard (Bool us_t us_t Int) Bool)
(declare-fun partial_match_at (us_t us_t Int Int) Bool)
(declare-fun partial_match_at__function_guard (Bool us_t us_t Int Int) Bool)
(assert true)
(assert (forall ((needle us_t) (haystack us_t)) (forall ((loc Int)) (! (= (= (match_at needle haystack loc) true) (and (<= (- loc 1) (- (length haystack) (length needle))) (= (partial_match_at needle haystack loc (length needle)) true))) :pattern ((match_at needle haystack loc))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int positive))))))
(declare-fun slide1 ((Array Int positive) Int Int) (Array Int positive))
(assert (forall ((a (Array Int positive))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int positive))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int positive)) (a__first Int) (a__last Int) (b (Array Int positive)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int positive)) (b (Array Int positive))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-const needle us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const haystack us_t)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((t54b__ref (mk_t54b__ref (t54b__content integer)))))
(define-fun t54b__ref___projection ((a t54b__ref)) integer (t54b__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep2 (first2 (mk1 f l))) f) (= (to_rep2 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep2 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep2 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep2 (first2 (rt1 x))) (to_rep2 (last2 (rt1 x))) (elts1 y) (to_rep2 (first2 (rt1 y))) (to_rep2 (last2 (rt1 y)))))
(declare-fun user_eq5 (us_t1 us_t1) Bool)
(declare-const dummy5 us_t1)
(declare-datatypes () ((t55b__ref (mk_t55b__ref (t55b__content us_t1)))))
(define-fun t55b__ref___projection ((a t55b__ref)) us_t1 (t55b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t60b__ref (mk_t60b__ref (t60b__content integer)))))
(define-fun t60b__ref___projection ((a t60b__ref)) integer (t60b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-sort natural 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (natural natural) Bool)
(declare-const dummy7 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range4 temp___expr_39)))
(define-fun dynamic_invariant4 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(assert true)
(assert (forall ((needle1 us_t) (haystack1 us_t)) (forall ((loc Int) (len Int)) (! (= (= (partial_match_at needle1 haystack1 loc len) true) (forall ((i Int)) (=> (and (<= 1 i) (<= i len)) (= (to_rep1 (select (to_array needle1) i)) (to_rep1 (select (to_array haystack1) (+ loc (- i 1)))))))) :pattern ((partial_match_at needle1 haystack1 loc len))))))
(declare-const i Int)
(declare-const r52b Int)
(declare-const r53b Int)
(declare-const shift Int)
(declare-const r58b Int)
(declare-const r59b Int)
(declare-const k Int)
(declare-const string_search__qs__result Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const temp___340 Int)
(declare-const temp___339 Int)
(declare-const temp___338 Int)
(declare-const temp___337 Int)
(declare-const temp___336 Int)
(declare-const temp___335 Int)
(declare-const temp___342 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 (Array Int character))
(declare-const temp___327 (Array Int character))
(declare-const temp___3271 t1)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 Int)
(declare-const o17 Int)
(declare-const temp___328 Int)
(declare-const o18 Int)
(declare-const o19 character)
(declare-const o20 Int)
(declare-const o21 positive)
(declare-const o22 Int)
(declare-const o23 Int)
(declare-const o24 Int)
(declare-const o25 Int)
(declare-const temp___331 Int)
(declare-const o26 Int)
(declare-const o27 Int)
(declare-const temp___334 Int)
(declare-const o28 Int)
(declare-const o29 character)
(declare-const o30 Int)
(declare-const o31 positive)
(declare-const o32 Int)
(declare-const o33 Int)
(declare-const o34 Int)
(declare-const o35 Int)
(declare-const o36 Int)
(declare-const o37 Int)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const o40 Int)
(declare-const o41 Bool)
(declare-const o42 Int)
(declare-const o43 Int)
(declare-const o44 Int)
(declare-const o45 (Array Int character))
(declare-const temp___3272 (Array Int character))
(declare-const temp___3273 t1)
(declare-const o46 Int)
(declare-const o47 Int)
(declare-const o48 Int)
(declare-const o49 Int)
(declare-const o50 Int)
(declare-const o51 Int)
(declare-const o52 Int)
(declare-const r52b1 Int)
(declare-const r53b1 Int)
(declare-const shift1 Int)
(declare-const r58b1 Int)
(declare-const r59b1 Int)
(declare-const k1 Int)
(declare-const string_search__qs__result1 Int)
(declare-const bad_shift (Array Int positive))
(declare-const result Int)
(declare-const i1 Int)
(declare-const result1 Bool)
(declare-const temp___3421 Int)
(declare-const result2 Int)
(declare-const r52b2 Int)
(declare-const result3 Int)
(declare-const r53b2 Int)
(declare-const result4 Bool)
(declare-const result5 Int)
(declare-const string_search__qs__result2 Int)
(declare-const result6 Bool)
(declare-const result7 Int)
(declare-const shift2 Int)
(declare-const result8 Int)
(declare-const r58b2 Int)
(declare-const result9 Int)
(declare-const r59b2 Int)
(declare-const result10 Int)
(declare-const k2 Int)
(declare-const k3 Int)
(declare-const k4 int__ref)
(declare-const k5 Int)
(declare-const k6 int__ref)
(declare-const k7 Int)
(declare-const i2 Int)
(declare-const r52b3 Int)
(declare-const r53b3 Int)
(declare-const shift3 Int)
(declare-const r58b3 Int)
(declare-const r59b3 Int)
(declare-const k8 Int)
(declare-const string_search__qs__result3 Int)
(declare-const temp___3422 Int)
(declare-const result11 int__ref)
(declare-const temp___3423 Int)
(declare-const result12 int__ref)
(declare-const i3 Int)
(declare-const result13 Bool)
(declare-const result14 int__ref)
(declare-const r52b4 Int)
(declare-const result15 int__ref)
(declare-const r53b4 Int)
(declare-const result16 Bool)
(declare-const result17 int__ref)
(declare-const string_search__qs__result4 Int)
(declare-const string_search__qs__result5 int__ref)
(declare-const string_search__qs__result6 Int)
(declare-const result18 Bool)
(declare-const r52b5 int__ref)
(declare-const r53b5 int__ref)
(declare-const string_search__qs__result7 int__ref)
(declare-const r52b6 Int)
(declare-const r53b6 Int)
(declare-const string_search__qs__result8 Int)
(declare-const i4 int__ref)
(declare-const r52b7 int__ref)
(declare-const r53b7 int__ref)
(declare-const shift4 int__ref)
(declare-const r58b4 int__ref)
(declare-const r59b4 int__ref)
(declare-const k9 int__ref)
(declare-const string_search__qs__result9 int__ref)
(declare-const temp___3424 int__ref)
(declare-const i5 Int)
(declare-const r52b8 Int)
(declare-const r53b8 Int)
(declare-const shift5 Int)
(declare-const r58b5 Int)
(declare-const r59b5 Int)
(declare-const k10 Int)
(declare-const string_search__qs__result10 Int)
(declare-const temp___3425 Int)
(declare-const i6 int__ref)
(declare-const r52b9 int__ref)
(declare-const r53b9 int__ref)
(declare-const shift6 int__ref)
(declare-const r58b6 int__ref)
(declare-const r59b6 int__ref)
(declare-const k11 int__ref)
(declare-const string_search__qs__result11 int__ref)
(declare-const temp___3426 int__ref)
(declare-const i7 Int)
(declare-const r52b10 Int)
(declare-const r53b10 Int)
(declare-const shift7 Int)
(declare-const r58b7 Int)
(declare-const r59b7 Int)
(declare-const k12 Int)
(declare-const string_search__qs__result12 Int)
(declare-const temp___3427 Int)
(declare-const i8 int__ref)
(declare-const r52b11 int__ref)
(declare-const r53b11 int__ref)
(declare-const shift8 int__ref)
(declare-const r58b8 int__ref)
(declare-const r59b8 int__ref)
(declare-const k13 int__ref)
(declare-const string_search__qs__result13 int__ref)
(declare-const i9 Int)
(declare-const r52b12 Int)
(declare-const r53b12 Int)
(declare-const shift9 Int)
(declare-const r58b9 Int)
(declare-const r59b9 Int)
(declare-const k14 Int)
(declare-const string_search__qs__result14 Int)
(declare-const i10 int__ref)
(declare-const r52b13 int__ref)
(declare-const r53b13 int__ref)
(declare-const shift10 int__ref)
(declare-const r58b10 int__ref)
(declare-const r59b10 int__ref)
(declare-const k15 int__ref)
(declare-const string_search__qs__result15 int__ref)
(declare-const i11 Int)
(declare-const r52b14 Int)
(declare-const r53b14 Int)
(declare-const shift11 Int)
(declare-const r58b11 Int)
(declare-const r59b11 Int)
(declare-const k16 Int)
(declare-const string_search__qs__result16 Int)
(declare-const result19 int__ref)
(declare-const string_search__qs__result17 Int)
(declare-const string_search__qs__result18 int__ref)
(declare-const string_search__qs__result19 Int)
(declare-const i12 int__ref)
(declare-const r52b15 int__ref)
(declare-const r53b15 int__ref)
(declare-const shift12 int__ref)
(declare-const r58b12 int__ref)
(declare-const r59b12 int__ref)
(declare-const k17 int__ref)
(declare-const string_search__qs__result20 int__ref)
(declare-const i13 Int)
(declare-const r52b16 Int)
(declare-const r53b16 Int)
(declare-const shift13 Int)
(declare-const r58b13 Int)
(declare-const r59b13 Int)
(declare-const k18 Int)
(declare-const string_search__qs__result21 Int)
(declare-const bad_shift1 map__ref1)
(declare-const i14 int__ref)
(declare-const r52b17 int__ref)
(declare-const r53b17 int__ref)
(declare-const shift14 int__ref)
(declare-const r58b14 int__ref)
(declare-const r59b14 int__ref)
(declare-const k19 int__ref)
(declare-const string_search__qs__result22 int__ref)
(declare-const bad_shift2 (Array Int positive))
(declare-const i15 Int)
(declare-const r52b18 Int)
(declare-const r53b18 Int)
(declare-const shift15 Int)
(declare-const r58b15 Int)
(declare-const r59b15 Int)
(declare-const k20 Int)
(declare-const string_search__qs__result23 Int)
(define-fun result20 () int__ref (mk_int__ref result10))
(define-fun result21 () int__ref (mk_int__ref result9))
(define-fun result22 () int__ref (mk_int__ref result8))
(define-fun result23 () int__ref (mk_int__ref result7))
(define-fun result24 () int__ref (mk_int__ref result3))
(define-fun result25 () int__ref (mk_int__ref result2))
(define-fun temp___3428 () int__ref (mk_int__ref temp___342))
(define-fun string_search__qs__result24 () int__ref (mk_int__ref string_search__qs__result))
(define-fun k21 () int__ref (mk_int__ref k))
(define-fun r59b16 () int__ref (mk_int__ref r59b))
(define-fun r58b16 () int__ref (mk_int__ref r58b))
(define-fun shift16 () int__ref (mk_int__ref shift))
(define-fun r53b19 () int__ref (mk_int__ref r53b))
(define-fun r52b19 () int__ref (mk_int__ref r52b))
(assert (dynamic_invariant2 needle true false true true))
(assert (dynamic_invariant2 haystack true false true true))
(assert (and (< (length needle) 2147483647) (and (< (length haystack) 2147483646) (and (<= 1 (length needle)) (<= (length needle) (length haystack))))))
(assert (=> (<= 1 2147483647) (in_range2 i)))
(assert (and (forall ((c Int)) (=> (and (<= 0 c) (<= c 255)) (and (<= 1 (to_rep (select bad_shift c))) (<= (to_rep (select bad_shift c)) (+ (length needle) 1))))) (forall ((c Int)) (=> (and (<= 0 c) (<= c 255)) (ite (= (to_rep (select bad_shift c)) (+ (length needle) 1)) (forall ((k22 Int)) (=> (and (<= (to_rep2 (first (rt needle))) k22) (<= k22 (to_rep2 (last (rt needle))))) (not (= c (to_rep1 (select (elts needle) k22)))))) (and (= (to_rep1 (select (elts needle) (+ (- (length needle) (to_rep (select bad_shift c))) 1))) c) (forall ((k22 Int)) (=> (and (<= (+ (- (length needle) (to_rep (select bad_shift c))) 2) k22) (<= k22 (to_rep2 (last (rt needle))))) (not (= (to_rep1 (select (elts needle) k22)) c))))))))))
(assert (= (mk_int__ref result) (mk_int__ref i)))
(assert (= i1 1))
(assert (or (and (and (and (= string_search__qs__result20 string_search__qs__result11) (and (= k17 k11) (and (= r59b12 r59b6) (and (= r58b12 r58b6) (and (= shift12 shift6) (and (= r53b15 r53b9) (and (= r52b15 r52b9) (= i12 i6)))))))) (and (= string_search__qs__result21 string_search__qs__result12) (and (= k18 k12) (and (= r59b13 r59b7) (and (= r58b13 r58b7) (and (= shift13 shift7) (and (= r53b16 r53b10) (and (= r52b16 r52b10) (= i13 i7))))))))) (and (and (and (and (and (and (and (= o (length needle)) (in_range1 (length needle))) (and (and (= o1 (length haystack)) (in_range1 (length haystack))) (= o2 (- o1 o)))) (and (= o3 o2) (in_range1 o2))) (= o4 (+ o3 1))) (and (= o5 o4) (in_range1 o4))) (= result1 (ite (<= i1 o5) true false))) (and (= result1 true) (and (= temp___340 r59b) (and (= temp___339 r58b) (and (= temp___338 r53b) (and (= temp___337 r52b) (and (= temp___336 shift) (and (= temp___335 i1) (and (= 0 temp___342) (and (and (and (= result25 r52b19) (= r52b2 i1)) (in_range2 r52b2)) (and (and (and (and (and (and (= o6 (- (to_rep2 (last (rt needle))) 1)) (in_range1 (- (to_rep2 (last (rt needle))) 1))) (= o7 (+ i1 o6))) (and (= o8 o7) (in_range1 o7))) (and (= result24 r53b19) (= r53b2 o8))) (in_range1 r53b2)) (or (and (and (and (= temp___3426 temp___3428) (and (= string_search__qs__result11 (mk_int__ref string_search__qs__result2)) (and (= k11 k21) (and (= r59b6 r59b16) (and (= r58b6 r58b16) (and (= shift6 shift16) (and (= r53b9 (mk_int__ref r53b2)) (and (= r52b9 (mk_int__ref r52b2)) (= i6 (mk_int__ref i1)))))))))) (and (= temp___3427 temp___3421) (and (= string_search__qs__result12 string_search__qs__result2) (and (= k12 k1) (and (= r59b7 r59b1) (and (= r58b7 r58b1) (and (= shift7 shift1) (and (= r53b10 r53b2) (and (= r52b10 r52b2) (= i7 i1)))))))))) (and (and (and (and (=> (<= r52b2 r53b2) (and (and (<= (to_rep2 (first (rt haystack))) r52b2) (<= r52b2 (to_rep2 (last (rt haystack))))) (and (<= (to_rep2 (first (rt haystack))) r53b2) (<= r53b2 (to_rep2 (last (rt haystack))))))) (= o9 (elts haystack))) (and (= o9 temp___327) (= (mk1 r52b2 r53b2) temp___3271))) (= result4 (bool_eq (elts needle) (to_rep2 (first (rt needle))) (to_rep2 (last (rt needle))) temp___327 (to_rep2 (first2 temp___3271)) (to_rep2 (last2 temp___3271))))) (and (= result4 true) (and (= (mk_int__ref result5) string_search__qs__result24) (= string_search__qs__result2 i1))))) (and (and (and (and (and (=> (<= r52b2 r53b2) (and (and (<= (to_rep2 (first (rt haystack))) r52b2) (<= r52b2 (to_rep2 (last (rt haystack))))) (and (<= (to_rep2 (first (rt haystack))) r53b2) (<= r53b2 (to_rep2 (last (rt haystack))))))) (= o9 (elts haystack))) (and (= o9 temp___327) (= (mk1 r52b2 r53b2) temp___3271))) (= result4 (bool_eq (elts needle) (to_rep2 (first (rt needle))) (to_rep2 (last (rt needle))) temp___327 (to_rep2 (first2 temp___3271)) (to_rep2 (last2 temp___3271))))) (and (not (= result4 true)) (and (= string_search__qs__result2 string_search__qs__result) (= string_search__qs__result2 string_search__qs__result1)))) (and (and (and (= temp___3426 (mk_int__ref temp___3423)) (and (= string_search__qs__result11 (mk_int__ref string_search__qs__result4)) (and (= k11 (mk_int__ref k8)) (and (= r59b6 (mk_int__ref r59b3)) (and (= r58b6 (mk_int__ref r58b3)) (and (= shift6 (mk_int__ref shift3)) (and (= r53b9 (mk_int__ref r53b4)) (and (= r52b9 (mk_int__ref r52b4)) (= i6 (mk_int__ref i3)))))))))) (and (= temp___3427 temp___3423) (and (= string_search__qs__result12 string_search__qs__result4) (and (= k12 k8) (and (= r59b7 r59b3) (and (= r58b7 r58b3) (and (= shift7 shift3) (and (= r53b10 r53b4) (and (= r52b10 r52b4) (= i7 i3)))))))))) (and (and (and (and (and (and (and (and (= o10 (length needle)) (in_range1 (length needle))) (and (and (= o11 (length haystack)) (in_range1 (length haystack))) (= o12 (- o11 o10)))) (and (= o13 o12) (in_range1 o12))) (= o14 (+ o13 1))) (and (= o15 o14) (in_range1 o14))) (= result6 (ite (= i1 o15) true false))) (not (= result6 true))) (and (and (and (and (and (and (and (and (and (and (and (= o16 (length needle)) (in_range1 (length needle))) (= o17 (+ i1 o16))) (and (= temp___328 o17) (in_range1 o17))) (and (and (<= (to_rep2 (first (rt haystack))) temp___328) (<= temp___328 (to_rep2 (last (rt haystack))))) (= o18 temp___328))) (= o19 (select (elts haystack) o18))) (= o20 (to_rep1 o19))) (= o21 (select bad_shift o20))) (= o22 (to_rep o21))) (and (= result23 shift16) (= shift2 o22))) (in_range2 shift2)) (and (and (and (and (= o23 (+ i1 1)) (in_range1 (+ i1 1))) (and (= result22 r58b16) (= r58b2 o23))) (in_range1 r58b2)) (and (and (and (and (and (= o24 (+ i1 shift2)) (in_range1 (+ i1 shift2))) (= o25 (- o24 1))) (and (= result21 r59b16) (= r59b2 o25))) (in_range1 r59b2)) (and (and (and (= result20 k21) (= k2 r58b2)) (ite (and (<= r58b2 k2) (<= k2 r59b2)) (and (and (and (= temp___331 k2) (and (not (= (to_rep1 (select (elts haystack) (+ i1 (length needle)))) (to_rep1 (select (elts needle) (+ (- (+ i1 (length needle)) k2) 1))))) (and (forall ((l Int)) (=> (and (<= 1 l) (<= l k3)) (not (= (match_at needle haystack l) true)))) (and (and (=> (<= r58b2 r59b2) (dynamic_property3 r58b2 r59b2 k3)) (and (<= r58b2 k3) (<= k3 r59b2))) (= k3 r59b2))))) (and (= k4 (mk_int__ref k3)) (= k5 k3))) (and (= k6 k4) (= k7 k5))) (and (= k6 (mk_int__ref k2)) (= k7 k2)))) (and (and (<= i2 (- (length haystack) (length needle))) (forall ((k22 Int)) (=> (and (<= 1 k22) (<= k22 (- (+ i2 (to_rep (select bad_shift (to_rep1 (select (elts haystack) (+ i2 (length needle))))))) 1))) (not (= (match_at needle haystack k22) true))))) (and (and (and (and (and (and (=> (<= 1 2147483647) (in_range2 i2)) (=> (<= 1 2147483647) (in_range2 shift3))) (=> (<= 1 2147483647) (in_range2 r52b3))) (=> (<= (- 2147483648) 2147483647) (in_range1 r53b3))) (=> (<= (- 2147483648) 2147483647) (in_range1 r58b3))) (=> (<= (- 2147483648) 2147483647) (in_range1 r59b3))) (and (and (= result11 (mk_int__ref temp___3422)) (= temp___3423 i2)) (and (and (and (and (and (and (and (and (and (and (and (and (= o26 (length needle)) (in_range1 (length needle))) (= o27 (+ i2 o26))) (and (= temp___334 o27) (in_range1 o27))) (and (and (<= (to_rep2 (first (rt haystack))) temp___334) (<= temp___334 (to_rep2 (last (rt haystack))))) (= o28 temp___334))) (= o29 (select (elts haystack) o28))) (= o30 (to_rep1 o29))) (= o31 (select bad_shift o30))) (= o32 (to_rep o31))) (= o33 (+ i2 o32))) (and (= o34 o33) (in_range1 o33))) (and (= result12 (mk_int__ref i2)) (= i3 o34))) (and (and (and (and (and (and (and (and (and (= o35 (length needle)) (in_range1 (length needle))) (and (and (= o36 (length haystack)) (in_range1 (length haystack))) (= o37 (- o36 o35)))) (and (= o38 o37) (in_range1 o37))) (= o39 (+ o38 1))) (and (= o40 o39) (in_range1 o39))) (= o41 (ite (<= i3 o40) true false))) (= result13 (ite (not (= o41 true)) true false))) (not (= result13 true))) (and (and (and (= result14 (mk_int__ref r52b3)) (= r52b4 i3)) (in_range2 r52b4)) (and (and (and (and (and (and (= o42 (- (to_rep2 (last (rt needle))) 1)) (in_range1 (- (to_rep2 (last (rt needle))) 1))) (= o43 (+ i3 o42))) (and (= o44 o43) (in_range1 o43))) (and (= result15 (mk_int__ref r53b3)) (= r53b4 o44))) (in_range1 r53b4)) (and (and (and (and (=> (<= r52b4 r53b4) (and (and (<= (to_rep2 (first (rt haystack))) r52b4) (<= r52b4 (to_rep2 (last (rt haystack))))) (and (<= (to_rep2 (first (rt haystack))) r53b4) (<= r53b4 (to_rep2 (last (rt haystack))))))) (= o45 (elts haystack))) (and (= o45 temp___3272) (= (mk1 r52b4 r53b4) temp___3273))) (= result16 (bool_eq (elts needle) (to_rep2 (first (rt needle))) (to_rep2 (last (rt needle))) temp___3272 (to_rep2 (first2 temp___3273)) (to_rep2 (last2 temp___3273))))) (and (= result16 true) (and (= result17 (mk_int__ref string_search__qs__result3)) (= string_search__qs__result4 i3))))))))))))))))))))))))))))))) (and (and (and (and (and (and (and (and (= o (length needle)) (in_range1 (length needle))) (and (and (= o1 (length haystack)) (in_range1 (length haystack))) (= o2 (- o1 o)))) (and (= o3 o2) (in_range1 o2))) (= o4 (+ o3 1))) (and (= o5 o4) (in_range1 o4))) (= result1 (ite (<= i1 o5) true false))) (ite (= result1 true) (and (and (and (= temp___340 r59b) (and (= temp___339 r58b) (and (= temp___338 r53b) (and (= temp___337 r52b) (and (= temp___336 shift) (and (= temp___335 i1) (and (= 0 temp___342) (and (and (and (= result25 r52b19) (= r52b2 i1)) (in_range2 r52b2)) (and (and (and (and (and (and (= o6 (- (to_rep2 (last (rt needle))) 1)) (in_range1 (- (to_rep2 (last (rt needle))) 1))) (= o7 (+ i1 o6))) (and (= o8 o7) (in_range1 o7))) (and (= result24 r53b19) (= r53b2 o8))) (in_range1 r53b2)) (and (and (and (and (and (=> (<= r52b2 r53b2) (and (and (<= (to_rep2 (first (rt haystack))) r52b2) (<= r52b2 (to_rep2 (last (rt haystack))))) (and (<= (to_rep2 (first (rt haystack))) r53b2) (<= r53b2 (to_rep2 (last (rt haystack))))))) (= o9 (elts haystack))) (and (= o9 temp___327) (= (mk1 r52b2 r53b2) temp___3271))) (= result4 (bool_eq (elts needle) (to_rep2 (first (rt needle))) (to_rep2 (last (rt needle))) temp___327 (to_rep2 (first2 temp___3271)) (to_rep2 (last2 temp___3271))))) (and (not (= result4 true)) (and (= string_search__qs__result2 string_search__qs__result) (= string_search__qs__result2 string_search__qs__result1)))) (or (and (and (and (= temp___3424 temp___3428) (and (= string_search__qs__result9 (mk_int__ref string_search__qs__result2)) (and (= k9 k21) (and (= r59b4 r59b16) (and (= r58b4 r58b16) (and (= shift4 shift16) (and (= r53b7 (mk_int__ref r53b2)) (and (= r52b7 (mk_int__ref r52b2)) (= i4 (mk_int__ref i1)))))))))) (and (= temp___3425 temp___3421) (and (= string_search__qs__result10 string_search__qs__result2) (and (= k10 k1) (and (= r59b5 r59b1) (and (= r58b5 r58b1) (and (= shift5 shift1) (and (= r53b8 r53b2) (and (= r52b8 r52b2) (= i5 i1)))))))))) (and (and (and (and (and (and (and (= o10 (length needle)) (in_range1 (length needle))) (and (and (= o11 (length haystack)) (in_range1 (length haystack))) (= o12 (- o11 o10)))) (and (= o13 o12) (in_range1 o12))) (= o14 (+ o13 1))) (and (= o15 o14) (in_range1 o14))) (= result6 (ite (= i1 o15) true false))) (= result6 true))) (and (and (and (and (and (and (and (and (= o10 (length needle)) (in_range1 (length needle))) (and (and (= o11 (length haystack)) (in_range1 (length haystack))) (= o12 (- o11 o10)))) (and (= o13 o12) (in_range1 o12))) (= o14 (+ o13 1))) (and (= o15 o14) (in_range1 o14))) (= result6 (ite (= i1 o15) true false))) (not (= result6 true))) (and (and (and (= temp___3424 (mk_int__ref temp___3423)) (and (= string_search__qs__result9 string_search__qs__result7) (and (= k9 (mk_int__ref k8)) (and (= r59b4 (mk_int__ref r59b3)) (and (= r58b4 (mk_int__ref r58b3)) (and (= shift4 (mk_int__ref shift3)) (and (= r53b7 r53b5) (and (= r52b7 r52b5) (= i4 (mk_int__ref i3)))))))))) (and (= temp___3425 temp___3423) (and (= string_search__qs__result10 string_search__qs__result8) (and (= k10 k8) (and (= r59b5 r59b3) (and (= r58b5 r58b3) (and (= shift5 shift3) (and (= r53b8 r53b6) (and (= r52b8 r52b6) (= i5 i3)))))))))) (and (and (and (and (and (and (and (and (and (and (and (= o16 (length needle)) (in_range1 (length needle))) (= o17 (+ i1 o16))) (and (= temp___328 o17) (in_range1 o17))) (and (and (<= (to_rep2 (first (rt haystack))) temp___328) (<= temp___328 (to_rep2 (last (rt haystack))))) (= o18 temp___328))) (= o19 (select (elts haystack) o18))) (= o20 (to_rep1 o19))) (= o21 (select bad_shift o20))) (= o22 (to_rep o21))) (and (= result23 shift16) (= shift2 o22))) (in_range2 shift2)) (and (and (and (and (= o23 (+ i1 1)) (in_range1 (+ i1 1))) (and (= result22 r58b16) (= r58b2 o23))) (in_range1 r58b2)) (and (and (and (and (and (= o24 (+ i1 shift2)) (in_range1 (+ i1 shift2))) (= o25 (- o24 1))) (and (= result21 r59b16) (= r59b2 o25))) (in_range1 r59b2)) (and (and (and (= result20 k21) (= k2 r58b2)) (ite (and (<= r58b2 k2) (<= k2 r59b2)) (and (and (and (= temp___331 k2) (and (not (= (to_rep1 (select (elts haystack) (+ i1 (length needle)))) (to_rep1 (select (elts needle) (+ (- (+ i1 (length needle)) k2) 1))))) (and (forall ((l Int)) (=> (and (<= 1 l) (<= l k3)) (not (= (match_at needle haystack l) true)))) (and (and (=> (<= r58b2 r59b2) (dynamic_property3 r58b2 r59b2 k3)) (and (<= r58b2 k3) (<= k3 r59b2))) (= k3 r59b2))))) (and (= k4 (mk_int__ref k3)) (= k5 k3))) (and (= k6 k4) (= k7 k5))) (and (= k6 (mk_int__ref k2)) (= k7 k2)))) (and (and (<= i2 (- (length haystack) (length needle))) (forall ((k22 Int)) (=> (and (<= 1 k22) (<= k22 (- (+ i2 (to_rep (select bad_shift (to_rep1 (select (elts haystack) (+ i2 (length needle))))))) 1))) (not (= (match_at needle haystack k22) true))))) (and (and (and (and (and (and (=> (<= 1 2147483647) (in_range2 i2)) (=> (<= 1 2147483647) (in_range2 shift3))) (=> (<= 1 2147483647) (in_range2 r52b3))) (=> (<= (- 2147483648) 2147483647) (in_range1 r53b3))) (=> (<= (- 2147483648) 2147483647) (in_range1 r58b3))) (=> (<= (- 2147483648) 2147483647) (in_range1 r59b3))) (and (and (= result11 (mk_int__ref temp___3422)) (= temp___3423 i2)) (and (and (and (and (and (and (and (and (and (and (and (and (= o26 (length needle)) (in_range1 (length needle))) (= o27 (+ i2 o26))) (and (= temp___334 o27) (in_range1 o27))) (and (and (<= (to_rep2 (first (rt haystack))) temp___334) (<= temp___334 (to_rep2 (last (rt haystack))))) (= o28 temp___334))) (= o29 (select (elts haystack) o28))) (= o30 (to_rep1 o29))) (= o31 (select bad_shift o30))) (= o32 (to_rep o31))) (= o33 (+ i2 o32))) (and (= o34 o33) (in_range1 o33))) (and (= result12 (mk_int__ref i2)) (= i3 o34))) (or (and (and (and (= string_search__qs__result7 (mk_int__ref string_search__qs__result3)) (and (= r53b5 (mk_int__ref r53b3)) (= r52b5 (mk_int__ref r52b3)))) (and (= string_search__qs__result8 string_search__qs__result3) (and (= r53b6 r53b3) (= r52b6 r52b3)))) (and (and (and (and (and (and (and (and (= o35 (length needle)) (in_range1 (length needle))) (and (and (= o36 (length haystack)) (in_range1 (length haystack))) (= o37 (- o36 o35)))) (and (= o38 o37) (in_range1 o37))) (= o39 (+ o38 1))) (and (= o40 o39) (in_range1 o39))) (= o41 (ite (<= i3 o40) true false))) (= result13 (ite (not (= o41 true)) true false))) (= result13 true))) (and (and (and (and (and (and (and (and (and (= o35 (length needle)) (in_range1 (length needle))) (and (and (= o36 (length haystack)) (in_range1 (length haystack))) (= o37 (- o36 o35)))) (and (= o38 o37) (in_range1 o37))) (= o39 (+ o38 1))) (and (= o40 o39) (in_range1 o39))) (= o41 (ite (<= i3 o40) true false))) (= result13 (ite (not (= o41 true)) true false))) (not (= result13 true))) (and (and (and (= string_search__qs__result7 string_search__qs__result5) (and (= r53b5 (mk_int__ref r53b4)) (= r52b5 (mk_int__ref r52b4)))) (and (= string_search__qs__result8 string_search__qs__result6) (and (= r53b6 r53b4) (= r52b6 r52b4)))) (and (and (and (= result14 (mk_int__ref r52b3)) (= r52b4 i3)) (in_range2 r52b4)) (and (and (and (and (and (and (= o42 (- (to_rep2 (last (rt needle))) 1)) (in_range1 (- (to_rep2 (last (rt needle))) 1))) (= o43 (+ i3 o42))) (and (= o44 o43) (in_range1 o43))) (and (= result15 (mk_int__ref r53b3)) (= r53b4 o44))) (in_range1 r53b4)) (and (and (and (and (and (=> (<= r52b4 r53b4) (and (and (<= (to_rep2 (first (rt haystack))) r52b4) (<= r52b4 (to_rep2 (last (rt haystack))))) (and (<= (to_rep2 (first (rt haystack))) r53b4) (<= r53b4 (to_rep2 (last (rt haystack))))))) (= o45 (elts haystack))) (and (= o45 temp___3272) (= (mk1 r52b4 r53b4) temp___3273))) (= result16 (bool_eq (elts needle) (to_rep2 (first (rt needle))) (to_rep2 (last (rt needle))) temp___3272 (to_rep2 (first2 temp___3273)) (to_rep2 (last2 temp___3273))))) (and (not (= result16 true)) (and (= string_search__qs__result5 (mk_int__ref string_search__qs__result3)) (= string_search__qs__result6 string_search__qs__result3)))) (and (and (and (and (and (and (and (= o46 (length needle)) (in_range1 (length needle))) (and (and (= o47 (length haystack)) (in_range1 (length haystack))) (= o48 (- o47 o46)))) (and (= o49 o48) (in_range1 o48))) (= o50 (+ o49 1))) (and (= o51 o50) (in_range1 o50))) (= result18 (ite (= i3 o51) true false))) (= result18 true))))))))))))))))))))))))))))) (and (and (= string_search__qs__result13 string_search__qs__result9) (and (= k13 k9) (and (= r59b8 r59b4) (and (= r58b8 r58b4) (and (= shift8 shift4) (and (= r53b11 r53b7) (and (= r52b11 r52b7) (= i8 i4)))))))) (and (= string_search__qs__result14 string_search__qs__result10) (and (= k14 k10) (and (= r59b9 r59b5) (and (= r58b9 r58b5) (and (= shift9 shift5) (and (= r53b12 r53b8) (and (= r52b12 r52b8) (= i9 i5)))))))))) (and (and (= string_search__qs__result15 string_search__qs__result13) (and (= k15 k13) (and (= r59b10 r59b8) (and (= r58b10 r58b8) (and (= shift10 shift8) (and (= r53b13 r53b11) (and (= r52b13 r52b11) (= i10 i8)))))))) (and (= string_search__qs__result16 string_search__qs__result14) (and (= k16 k14) (and (= r59b11 r59b9) (and (= r58b11 r58b9) (and (= shift11 shift9) (and (= r53b14 r53b12) (and (= r52b14 r52b12) (= i11 i9)))))))))) (and (and (= string_search__qs__result15 string_search__qs__result24) (and (= k15 k21) (and (= r59b10 r59b16) (and (= r58b10 r58b16) (and (= shift10 shift16) (and (= r53b13 r53b19) (and (= r52b13 r52b19) (= i10 (mk_int__ref i1))))))))) (and (= string_search__qs__result16 string_search__qs__result1) (and (= k16 k1) (and (= r59b11 r59b1) (and (= r58b11 r58b1) (and (= shift11 shift1) (and (= r53b14 r53b1) (and (= r52b14 r52b1) (= i11 i1))))))))))) (and (and (and (= string_search__qs__result20 string_search__qs__result18) (and (= k17 k15) (and (= r59b12 r59b10) (and (= r58b12 r58b10) (and (= shift12 shift10) (and (= r53b15 r53b13) (and (= r52b15 r52b13) (= i12 i10)))))))) (and (= string_search__qs__result21 string_search__qs__result19) (and (= k18 k16) (and (= r59b13 r59b11) (and (= r58b13 r58b11) (and (= shift13 shift11) (and (= r53b16 r53b14) (and (= r52b16 r52b14) (= i13 i11))))))))) (and (and (= string_search__qs__result18 (mk_int__ref string_search__qs__result17)) (= string_search__qs__result19 string_search__qs__result17)) (and (= result19 string_search__qs__result15) (= string_search__qs__result17 0)))))))
(assert (= string_search__qs__result22 string_search__qs__result20))
(assert (= k19 k17))
(assert (= r59b14 r59b12))
(assert (= r58b14 r58b12))
(assert (= shift14 shift12))
(assert (= r53b17 r53b15))
(assert (= r52b17 r52b15))
(assert (= i14 i12))
(assert (= bad_shift1 (mk_map__ref1 bad_shift)))
(assert (= string_search__qs__result23 string_search__qs__result21))
(assert (= k20 k18))
(assert (= r59b15 r59b13))
(assert (= r58b15 r58b13))
(assert (= shift15 shift13))
(assert (= r53b18 r53b16))
(assert (= r52b18 r52b16))
(assert (= i15 i13))
(assert (= bad_shift2 bad_shift))
(assert (and (= o52 (length needle)) (in_range1 (length needle))))
(assert (not (in_range1 (length haystack))))
(check-sat)
(exit)
