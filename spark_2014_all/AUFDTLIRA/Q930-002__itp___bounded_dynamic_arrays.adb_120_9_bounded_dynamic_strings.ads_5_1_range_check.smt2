(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort character 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (character character) Bool)
(declare-const dummy character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-sort integer 0)
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (integer integer) Bool)
(declare-const dummy1 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (positive positive) Bool)
(declare-const dummy2 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (in_range3 low) (in_range3 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((list__ref (mk_list__ref (list__content us_t)))))
(define-fun list__ref___projection ((a list__ref)) us_t (list__content a))
(declare-sort natural_index 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (natural_index natural_index) Bool)
(declare-const dummy4 natural_index)
(declare-datatypes () ((natural_index__ref (mk_natural_index__ref (natural_index__content natural_index)))))
(define-fun natural_index__ref___projection ((a natural_index__ref)) natural_index (natural_index__content a))
(define-fun dynamic_invariant ((temp___expr_195 Int) (temp___is_init_192 Bool) (temp___skip_constant_193 Bool) (temp___do_toplevel_194 Bool)) Bool (=> (or (= temp___is_init_192 true) (<= 0 2147483647)) (in_range4 temp___expr_195)))
(declare-fun to_rep2 (natural_index) Int)
(declare-fun of_rep2 (Int) natural_index)
(assert (forall ((x natural_index)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x natural_index)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort index 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (index index) Bool)
(declare-const dummy5 index)
(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t48s__ref (mk_t48s__ref (t48s__content integer)))))
(define-fun t48s__ref___projection ((a t48s__ref)) integer (t48s__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq7 (us_t1 us_t1) Bool)
(declare-const dummy7 us_t1)
(declare-datatypes () ((t49s__ref (mk_t49s__ref (t49s__content us_t1)))))
(define-fun t49s__ref___projection ((a t49s__ref)) us_t1 (t49s__content a))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__bounded_dynamic_strings__sequence__capacity natural_index)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural_index (rec__bounded_dynamic_strings__sequence__capacity a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__bounded_dynamic_strings__sequence__current_length natural_index) (rec__bounded_dynamic_strings__sequence__content us_t1)))))
(define-fun us_split_fields_Current_Length__projection ((a us_split_fields)) natural_index (rec__bounded_dynamic_strings__sequence__current_length a))
(define-fun us_split_fields_Content__projection ((a us_split_fields)) us_t1 (rec__bounded_dynamic_strings__sequence__content a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq3 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep2 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 a))) (to_rep2 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 b)))) (and (= (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 a))) (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 b)))) (= (bool_eq2 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 a)) (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 b))) true))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const bounded_dynamic_strings__sequence__capacity__first__bit Int)
(declare-const bounded_dynamic_strings__sequence__capacity__last__bit Int)
(declare-const bounded_dynamic_strings__sequence__capacity__position Int)
(assert (<= 0 bounded_dynamic_strings__sequence__capacity__first__bit))
(assert (< bounded_dynamic_strings__sequence__capacity__first__bit bounded_dynamic_strings__sequence__capacity__last__bit))
(assert (<= 0 bounded_dynamic_strings__sequence__capacity__position))
(declare-const bounded_dynamic_strings__sequence__current_length__first__bit Int)
(declare-const bounded_dynamic_strings__sequence__current_length__last__bit Int)
(declare-const bounded_dynamic_strings__sequence__current_length__position Int)
(assert (<= 0 bounded_dynamic_strings__sequence__current_length__first__bit))
(assert (< bounded_dynamic_strings__sequence__current_length__first__bit bounded_dynamic_strings__sequence__current_length__last__bit))
(assert (<= 0 bounded_dynamic_strings__sequence__current_length__position))
(declare-const bounded_dynamic_strings__sequence__content__first__bit Int)
(declare-const bounded_dynamic_strings__sequence__content__last__bit Int)
(declare-const bounded_dynamic_strings__sequence__content__position Int)
(assert (<= 0 bounded_dynamic_strings__sequence__content__first__bit))
(assert (< bounded_dynamic_strings__sequence__content__first__bit bounded_dynamic_strings__sequence__content__last__bit))
(assert (<= 0 bounded_dynamic_strings__sequence__content__position))
(declare-fun user_eq8 (us_rep us_rep) Bool)
(declare-const dummy8 us_rep)
(declare-datatypes () ((sequence__ref (mk_sequence__ref (sequence__content us_rep)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep (sequence__content a))
(define-fun dynamic_invariant1 ((temp___expr_207 us_rep) (temp___is_init_204 Bool) (temp___skip_constant_205 Bool) (temp___do_toplevel_206 Bool)) Bool (and (=> (= temp___do_toplevel_206 true) (=> (= temp___is_init_204 true) (and (<= 0 (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 temp___expr_207)))) (<= (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 temp___expr_207))) (to_rep2 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 temp___expr_207))))))) (let ((temp___209 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 temp___expr_207)))) (and (dynamic_property2 1 (to_rep2 temp___209) (first3 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 temp___expr_207))) (last3 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 temp___expr_207)))) (and (= (first3 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 temp___expr_207))) 1) (= (last3 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 temp___expr_207))) (to_rep2 temp___209)))))))
(define-fun dynamic_predicate ((temp___211 us_rep)) Bool (and (<= 0 (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 temp___211)))) (<= (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 temp___211))) (to_rep2 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 temp___211))))))
(declare-fun length2 (us_rep) Int)
(declare-fun length__function_guard (Int us_rep) Bool)
(assert (forall ((this us_rep)) (! (=> (dynamic_invariant1 this true true true) (dynamic_invariant (length2 this) true false true)) :pattern ((length2 this)))))
(assert (forall ((this us_rep)) (! (=> (dynamic_invariant1 this true true true) (= (length2 this) (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 this))))) :pattern ((length2 this)))))
(declare-fun value (us_rep) us_t)
(declare-fun value__function_guard (us_t us_rep) Bool)
(define-fun dynamic_invariant2 ((temp___expr_181 us_t) (temp___is_init_178 Bool) (temp___skip_constant_179 Bool) (temp___do_toplevel_180 Bool)) Bool (=> (not (= temp___skip_constant_179 true)) (dynamic_property 1 2147483647 (first1 temp___expr_181) (last1 temp___expr_181))))
(declare-fun empty (us_rep) Bool)
(declare-fun empty__function_guard (Bool us_rep) Bool)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (integer integer) Bool)
(declare-const dummy9 integer)
(declare-datatypes () ((t59s__ref (mk_t59s__ref (t59s__content integer)))))
(define-fun t59s__ref___projection ((a t59s__ref)) integer (t59s__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int character)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))
(define-fun of_array2 ((a (Array Int character)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length3 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int character)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq4 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq10 (us_t2 us_t2) Bool)
(declare-const dummy10 us_t2)
(declare-datatypes () ((t60s__ref (mk_t60s__ref (t60s__content us_t2)))))
(define-fun t60s__ref___projection ((a t60s__ref)) us_t2 (t60s__content a))
(assert (forall ((this us_rep)) (! (=> (dynamic_invariant1 this true true true) (let ((result (value this))) (and (and (and (and (= (length result) (length2 this)) (= (first1 result) 1)) (= (last1 result) (length2 this))) (= (< 0 (length2 this)) (not (= (empty this) true)))) (dynamic_invariant2 result true false true)))) :pattern ((value this)))))
(assert (forall ((this us_rep)) (! (=> (dynamic_invariant1 this true true true) (= (value this) (let ((temp___234 (let ((temp___232 (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 this))))) (let ((temp___231 1)) (let ((temp___233 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 this)))) (of_array2 (to_array1 temp___233) temp___231 temp___232)))))) (of_array (to_array2 temp___234) (first5 temp___234) (last5 temp___234))))) :pattern ((value this)))))
(declare-fun oeq__2 (us_rep us_rep) Bool)
(declare-fun oeq__2__function_guard (Bool us_rep us_rep) Bool)
(assert true)
(assert (forall ((left us_rep) (right us_rep)) (! (= (= (oeq__2 left right) true) (= (let ((temp___282 (value right))) (let ((temp___281 (value left))) (bool_eq (to_array temp___281) (first1 temp___281) (last1 temp___281) (to_array temp___282) (first1 temp___282) (last1 temp___282)))) true)) :pattern ((oeq__2 left right)))))
(declare-const source us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const to____split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const i52s us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const last6 Int)
(define-fun dynamic_property5 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq11 (integer integer) Bool)
(declare-const dummy11 integer)
(declare-datatypes () ((current_range__ref (mk_current_range__ref (current_range__content integer)))))
(define-fun current_range__ref___projection ((a current_range__ref)) integer (current_range__content a))
(declare-const r118b Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last7 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first6 (mk3 f l))) f) (= (to_rep1 (last7 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property5 range_first range_last low) (dynamic_property5 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int character)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int character) (elts3 a))
(define-fun of_array3 ((a (Array Int character)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))
(define-fun last8 ((a us_t3)) Int (to_rep1 (last7 (rt3 a))))
(define-fun length4 ((a us_t3)) Int (ite (<= (first7 a) (last8 a)) (+ (- (last8 a) (first7 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int character)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int character)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int character)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq5 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first6 (rt3 x))) (to_rep1 (last7 (rt3 x))) (elts3 y) (to_rep1 (first6 (rt3 y))) (to_rep1 (last7 (rt3 y)))))
(declare-fun user_eq12 (us_t3 us_t3) Bool)
(declare-const dummy12 us_t3)
(declare-datatypes () ((t119b__ref (mk_t119b__ref (t119b__content us_t3)))))
(define-fun t119b__ref___projection ((a t119b__ref)) us_t3 (t119b__content a))
(declare-sort t4 0)
(declare-fun first8 (t4) integer)
(declare-fun last9 (t4) integer)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first8 (mk4 f l))) f) (= (to_rep1 (last9 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property7 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property5 range_first range_last low) (dynamic_property5 range_first range_last high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int character)) (rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int character) (elts4 a))
(define-fun of_array4 ((a (Array Int character)) (f Int) (l Int)) us_t4 (mk___t4 a (mk4 f l)))
(define-fun first9 ((a us_t4)) Int (to_rep1 (first8 (rt4 a))))
(define-fun last10 ((a us_t4)) Int (to_rep1 (last9 (rt4 a))))
(define-fun length5 ((a us_t4)) Int (ite (<= (first9 a) (last10 a)) (+ (- (last10 a) (first9 a)) 1) 0))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int character)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int character)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int character)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int character))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment5 a))))
(define-fun bool_eq6 ((x us_t4) (y us_t4)) Bool (bool_eq (elts4 x) (to_rep1 (first8 (rt4 x))) (to_rep1 (last9 (rt4 x))) (elts4 y) (to_rep1 (first8 (rt4 y))) (to_rep1 (last9 (rt4 y)))))
(declare-fun user_eq13 (us_t4 us_t4) Bool)
(declare-const dummy13 us_t4)
(declare-datatypes () ((t121b__ref (mk_t121b__ref (t121b__content us_t4)))))
(define-fun t121b__ref___projection ((a t121b__ref)) us_t4 (t121b__content a))
(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range3 temp___expr_39)))
(define-fun dynamic_invariant4 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range1 temp___expr_63)))
(define-fun dynamic_invariant5 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range2 temp___expr_15)))
(define-fun dynamic_invariant6 ((temp___expr_201 Int) (temp___is_init_198 Bool) (temp___skip_constant_199 Bool) (temp___do_toplevel_200 Bool)) Bool (=> (or (= temp___is_init_198 true) (<= 1 2147483647)) (in_range5 temp___expr_201)))
(assert (forall ((this us_rep)) (! (=> (dynamic_invariant1 this true true true) (= (= (empty this) true) (= (length2 this) 0))) :pattern ((empty this)))))
(assert (forall ((this us_rep)) (! (= (= (empty this) true) (= (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 this))) 0)) :pattern ((empty this)))))
(define-fun dynamic_invariant7 ((temp___expr_659 Int) (temp___is_init_656 Bool) (temp___skip_constant_657 Bool) (temp___do_toplevel_658 Bool)) Bool (=> (or (= temp___is_init_656 true) (<= 1 last6)) (dynamic_property5 1 last6 temp___expr_659)))
(assert (= last6 (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 source)))))
(declare-const to____split_fields natural_index)
(declare-const to____split_fields1 (Array Int character))
(declare-const to____split_fields2 t1)
(declare-const us Int)
(declare-const o (Array Int character))
(declare-const temp___1024 (Array Int character))
(declare-const temp___10241 t4)
(declare-const temp___1025 (Array Int character))
(declare-const temp___10251 t3)
(declare-const o1 (Array Int character))
(declare-const temp___1029 (Array Int character))
(declare-const temp___10291 t3)
(declare-const temp___1031 (Array Int character))
(declare-const temp___10311 t3)
(declare-const o2 (Array Int character))
(declare-const o3 t1)
(declare-const o4 natural_index)
(declare-const o5 (Array Int character))
(declare-const o6 t1)
(declare-const temp___1034 natural_index)
(declare-const temp___10341 natural_index)
(declare-const temp___10342 (Array Int character))
(declare-const temp___10343 t1)
(declare-const temp___1035 natural_index)
(declare-const temp___10351 natural_index)
(declare-const temp___10352 (Array Int character))
(declare-const temp___10353 t1)
(declare-const o7 natural_index)
(declare-const o8 natural_index)
(declare-const o9 (Array Int character))
(declare-const o10 t1)
(declare-const temp___1037 natural_index)
(declare-const temp___10371 natural_index)
(declare-const temp___10372 (Array Int character))
(declare-const temp___10373 t1)
(declare-const temp___1038 us_rep)
(declare-const result us_split_fields__ref)
(declare-const to____split_fields3 us_split_fields)
(declare-const result1 us_split_fields__ref)
(declare-const to____split_fields4 us_split_fields)
(declare-const to____split_fields5 us_split_fields__ref)
(declare-const to____split_fields6 us_split_fields)
(assert (dynamic_invariant1 i52s true false true))
(assert (dynamic_invariant1 source true false true))
(assert (dynamic_invariant1 (mk___rep to____split_discrs (mk___split_fields to____split_fields (mk___t1 to____split_fields1 to____split_fields2))) true false true))
(assert (<= (length2 source) (to_rep2 (rec__bounded_dynamic_strings__sequence__capacity to____split_discrs))))
(assert (and (= us (to_rep2 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 source)))) (in_range4 (to_rep2 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 source))))))
(assert (= (to_rep2 (rec__bounded_dynamic_strings__sequence__capacity to____split_discrs)) r118b))
(assert (in_range4 r118b))
(assert (=> (<= 1 (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 source)))) (and (and (<= (to_rep1 (first2 (rt1 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 source))))) 1) (<= 1 (to_rep1 (last2 (rt1 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 source))))))) (and (<= (to_rep1 (first2 (rt1 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 source))))) (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 source)))) (<= (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 source))) (to_rep1 (last2 (rt1 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 source))))))))))
(assert (= o (elts1 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 source)))))
(assert (= o temp___1024))
(assert (= (mk4 1 (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 source)))) temp___10241))
(assert (= (ite (<= (to_rep1 (first8 temp___10241)) (to_rep1 (last9 temp___10241))) (+ (- (to_rep1 (last9 temp___10241)) (to_rep1 (first8 temp___10241))) 1) 0) (ite (<= 1 last6) (+ (- last6 1) 1) 0)))
(assert (= temp___1024 temp___1025))
(assert (= (mk3 (to_rep1 (first8 temp___10241)) (to_rep1 (last9 temp___10241))) temp___10251))
(assert (<= 1 (to_rep2 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 source)))))
(assert (not (<= (to_rep1 (first2 to____split_fields2)) 1)))
(check-sat)
(exit)
