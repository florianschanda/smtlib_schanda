(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-sort cardindex 0)
(declare-fun cardindexqtint (cardindex) Int)
(assert (forall ((i cardindex)) (and (<= (- 1) (cardindexqtint i)) (<= (cardindexqtint i) 100))))
(define-fun in_range2 ((x Int)) Bool (and (<= (- 1) x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (cardindex cardindex) Bool)
(declare-const dummy1 cardindex)
(declare-datatypes () ((cardindex__ref (mk_cardindex__ref (cardindex__content cardindex)))))
(define-fun cardindex__ref___projection ((a cardindex__ref)) cardindex (cardindex__content a))
(define-fun to_rep ((x cardindex)) Int (cardindexqtint x))
(declare-fun of_rep (Int) cardindex)
(assert (forall ((x cardindex)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x cardindex)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort card1 0)
(declare-fun cardqtint (card1) Int)
(assert (forall ((i card1)) (and (<= 1 (cardqtint i)) (<= (cardqtint i) 52))))
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 52)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (card1 card1) Bool)
(declare-const dummy2 card1)
(declare-datatypes () ((card__ref (mk_card__ref (card__content card1)))))
(define-fun card__ref___projection ((a card__ref)) card1 (card__content a))
(define-fun to_rep1 ((x card1)) Int (cardqtint x))
(declare-fun of_rep1 (Int) card1)
(assert (forall ((x card1)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x card1)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int card1))))))
(declare-fun slide ((Array Int card1) Int Int) (Array Int card1))
(assert (forall ((a (Array Int card1))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int card1))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int card1)) (a__first Int) (a__last Int) (b (Array Int card1)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int card1)) (b (Array Int card1))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-const dummy3 (Array Int card1))
(declare-const value__size Int)
(declare-fun object__size ((Array Int card1)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int card1)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int card1)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int card1))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int card1))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int card1))) (<= 0 (object__alignment a))))
(declare-fun user_eq3 ((Array Int card1) (Array Int card1)) Bool)
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int cardindex))))))
(declare-fun slide1 ((Array Int cardindex) Int Int) (Array Int cardindex))
(assert (forall ((a (Array Int cardindex))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int cardindex))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int cardindex)) (a__first Int) (a__last Int) (b (Array Int cardindex)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (to_rep (select a temp___idx_155)) (to_rep (select b (+ (- b__first a__first) temp___idx_155))))))) true false))
(assert (forall ((a (Array Int cardindex)) (b (Array Int cardindex))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (to_rep (select a temp___idx_155)) (to_rep (select b (+ (- b__first a__first) temp___idx_155)))))))))))
(declare-const dummy4 (Array Int cardindex))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int cardindex)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int cardindex)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int cardindex)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int cardindex))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int cardindex))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int cardindex))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq4 ((Array Int cardindex) (Array Int cardindex)) Bool)
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int (Array Int cardindex)))))))
(declare-fun slide2 ((Array Int (Array Int cardindex)) Int Int) (Array Int (Array Int cardindex)))
(assert (forall ((a (Array Int (Array Int cardindex)))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int (Array Int cardindex)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int (Array Int cardindex))) (a__first Int) (a__last Int) (b (Array Int (Array Int cardindex))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (bool_eq1 (select a temp___idx_156) 0 99 (select b (+ (- b__first a__first) temp___idx_156)) 0 99) true)))) true false))
(assert (forall ((a (Array Int (Array Int cardindex))) (b (Array Int (Array Int cardindex)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (bool_eq1 (select a temp___idx_156) 0 99 (select b (+ (- b__first a__first) temp___idx_156)) 0 99) true))))))))
(declare-const dummy5 (Array Int (Array Int cardindex)))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int (Array Int cardindex))) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int (Array Int cardindex))) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int (Array Int cardindex))) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq5 ((Array Int (Array Int cardindex)) (Array Int (Array Int cardindex))) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__patience__state__numelts cardindex) (rec__patience__state__values (Array Int card1)) (rec__patience__state__numstacks cardindex) (rec__patience__state__stacksizes (Array Int cardindex)) (rec__patience__state__stacks (Array Int (Array Int cardindex))) (rec__patience__state__posstack (Array Int cardindex)) (rec__patience__state__posheight (Array Int cardindex)) (rec__patience__state__preds (Array Int cardindex))))))
(define-fun us_split_fields_NumElts__projection ((a us_split_fields)) cardindex (rec__patience__state__numelts a))
(define-fun us_split_fields_Values__projection ((a us_split_fields)) (Array Int card1) (rec__patience__state__values a))
(define-fun us_split_fields_NumStacks__projection ((a us_split_fields)) cardindex (rec__patience__state__numstacks a))
(define-fun us_split_fields_StackSizes__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__stacksizes a))
(define-fun us_split_fields_Stacks__projection ((a us_split_fields)) (Array Int (Array Int cardindex)) (rec__patience__state__stacks a))
(define-fun us_split_fields_PosStack__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__posstack a))
(define-fun us_split_fields_PosHeight__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__posheight a))
(define-fun us_split_fields_Preds__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__preds a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq3 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (and (and (and (and (= (to_rep (rec__patience__state__numelts (us_split_fields1 a))) (to_rep (rec__patience__state__numelts (us_split_fields1 b)))) (= (bool_eq (rec__patience__state__values (us_split_fields1 a)) 0 99 (rec__patience__state__values (us_split_fields1 b)) 0 99) true)) (= (to_rep (rec__patience__state__numstacks (us_split_fields1 a))) (to_rep (rec__patience__state__numstacks (us_split_fields1 b))))) (= (bool_eq1 (rec__patience__state__stacksizes (us_split_fields1 a)) 0 99 (rec__patience__state__stacksizes (us_split_fields1 b)) 0 99) true)) (= (bool_eq2 (rec__patience__state__stacks (us_split_fields1 a)) 0 99 (rec__patience__state__stacks (us_split_fields1 b)) 0 99) true)) (= (bool_eq1 (rec__patience__state__posstack (us_split_fields1 a)) 0 99 (rec__patience__state__posstack (us_split_fields1 b)) 0 99) true)) (= (bool_eq1 (rec__patience__state__posheight (us_split_fields1 a)) 0 99 (rec__patience__state__posheight (us_split_fields1 b)) 0 99) true)) (= (bool_eq1 (rec__patience__state__preds (us_split_fields1 a)) 0 99 (rec__patience__state__preds (us_split_fields1 b)) 0 99) true)) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const patience__state__numelts__first__bit Int)
(declare-const patience__state__numelts__last__bit Int)
(declare-const patience__state__numelts__position Int)
(assert (<= 0 patience__state__numelts__first__bit))
(assert (< patience__state__numelts__first__bit patience__state__numelts__last__bit))
(assert (<= 0 patience__state__numelts__position))
(declare-const patience__state__values__first__bit Int)
(declare-const patience__state__values__last__bit Int)
(declare-const patience__state__values__position Int)
(assert (<= 0 patience__state__values__first__bit))
(assert (< patience__state__values__first__bit patience__state__values__last__bit))
(assert (<= 0 patience__state__values__position))
(declare-const patience__state__numstacks__first__bit Int)
(declare-const patience__state__numstacks__last__bit Int)
(declare-const patience__state__numstacks__position Int)
(assert (<= 0 patience__state__numstacks__first__bit))
(assert (< patience__state__numstacks__first__bit patience__state__numstacks__last__bit))
(assert (<= 0 patience__state__numstacks__position))
(declare-const patience__state__stacksizes__first__bit Int)
(declare-const patience__state__stacksizes__last__bit Int)
(declare-const patience__state__stacksizes__position Int)
(assert (<= 0 patience__state__stacksizes__first__bit))
(assert (< patience__state__stacksizes__first__bit patience__state__stacksizes__last__bit))
(assert (<= 0 patience__state__stacksizes__position))
(declare-const patience__state__stacks__first__bit Int)
(declare-const patience__state__stacks__last__bit Int)
(declare-const patience__state__stacks__position Int)
(assert (<= 0 patience__state__stacks__first__bit))
(assert (< patience__state__stacks__first__bit patience__state__stacks__last__bit))
(assert (<= 0 patience__state__stacks__position))
(declare-const patience__state__posstack__first__bit Int)
(declare-const patience__state__posstack__last__bit Int)
(declare-const patience__state__posstack__position Int)
(assert (<= 0 patience__state__posstack__first__bit))
(assert (< patience__state__posstack__first__bit patience__state__posstack__last__bit))
(assert (<= 0 patience__state__posstack__position))
(declare-const patience__state__posheight__first__bit Int)
(declare-const patience__state__posheight__last__bit Int)
(declare-const patience__state__posheight__position Int)
(assert (<= 0 patience__state__posheight__first__bit))
(assert (< patience__state__posheight__first__bit patience__state__posheight__last__bit))
(assert (<= 0 patience__state__posheight__position))
(declare-const patience__state__preds__first__bit Int)
(declare-const patience__state__preds__last__bit Int)
(declare-const patience__state__preds__position Int)
(assert (<= 0 patience__state__preds__first__bit))
(assert (< patience__state__preds__first__bit patience__state__preds__last__bit))
(assert (<= 0 patience__state__preds__position))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((state__ref (mk_state__ref (state__content us_rep)))))
(define-fun state__ref___projection ((a state__ref)) us_rep (state__content a))
(declare-fun inv (us_rep) Bool)
(declare-fun inv__function_guard (Bool us_rep) Bool)
(assert true)
(assert (forall ((s us_rep)) (! (= (= (inv s) true) (and (and (and (and (and (and (and (and (and (<= 0 (to_rep (rec__patience__state__numstacks (us_split_fields1 s)))) (<= (to_rep (rec__patience__state__numstacks (us_split_fields1 s))) (to_rep (rec__patience__state__numelts (us_split_fields1 s))))) (<= (to_rep (rec__patience__state__numelts (us_split_fields1 s))) 100)) (or (= (to_rep (rec__patience__state__numelts (us_split_fields1 s))) 0) (< 0 (to_rep (rec__patience__state__numstacks (us_split_fields1 s)))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (and (and (<= 1 (to_rep (let ((temp___335 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___335 i)))) (<= (to_rep (let ((temp___336 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___336 i))) (to_rep (rec__patience__state__numelts (us_split_fields1 s))))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep (let ((temp___337 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___337 i))) 1))) (and (<= 0 (to_rep (let ((temp___339 (let ((temp___338 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___338 i)))) (select temp___339 j)))) (< (to_rep (let ((temp___341 (let ((temp___340 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___340 i)))) (select temp___341 j))) (to_rep (rec__patience__state__numelts (us_split_fields1 s))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep (rec__patience__state__numelts (us_split_fields1 s))) 1))) (and (and (and (<= 0 (to_rep (let ((temp___342 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___342 i)))) (<= (to_rep (let ((temp___342 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___342 i))) (- (to_rep (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (and (<= 0 (to_rep (let ((temp___343 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___343 i)))) (<= (to_rep (let ((temp___343 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___343 i))) (- (to_rep (let ((temp___344 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___344 (to_rep (let ((temp___345 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___345 i)))))) 1)))) (= (to_rep (let ((temp___348 (let ((temp___346 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___346 (to_rep (let ((temp___347 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___347 i))))))) (select temp___348 (to_rep (let ((temp___349 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___349 i)))))) i))))) (forall ((ist Int)) (=> (and (<= 0 ist) (<= ist (- (to_rep (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (forall ((ip Int)) (=> (and (<= 0 ip) (<= ip (- (to_rep (let ((temp___350 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___350 ist))) 1))) (and (= ist (to_rep (let ((temp___351 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___351 (to_rep (let ((temp___353 (let ((temp___352 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___352 ist)))) (select temp___353 ip))))))) (= ip (to_rep (let ((temp___354 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___354 (to_rep (let ((temp___356 (let ((temp___355 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___355 ist)))) (select temp___356 ip))))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep (let ((temp___357 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___357 i))) 2))) (forall ((k Int)) (=> (and (<= (+ j 1) k) (<= k (- (to_rep (let ((temp___358 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___358 i))) 1))) (< (to_rep (let ((temp___360 (let ((temp___359 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___359 i)))) (select temp___360 j))) (to_rep (let ((temp___362 (let ((temp___361 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___361 i)))) (select temp___362 k))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep (let ((temp___363 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___363 i))) 2))) (forall ((k Int)) (=> (and (<= (+ j 1) k) (<= k (- (to_rep (let ((temp___364 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___364 i))) 1))) (<= (to_rep1 (let ((temp___368 (rec__patience__state__values (us_split_fields1 s)))) (select temp___368 (to_rep (let ((temp___370 (let ((temp___369 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___369 i)))) (select temp___370 k)))))) (to_rep1 (let ((temp___365 (rec__patience__state__values (us_split_fields1 s)))) (select temp___365 (to_rep (let ((temp___367 (let ((temp___366 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___366 i)))) (select temp___367 j)))))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep (rec__patience__state__numelts (us_split_fields1 s))) 1))) (and (and (and (<= (- 1) (to_rep (let ((temp___371 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___371 i)))) (<= (to_rep (let ((temp___371 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___371 i))) (- (to_rep (rec__patience__state__numelts (us_split_fields1 s))) 1))) (< (to_rep (let ((temp___372 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___372 i))) i)) (ite (< (to_rep (let ((temp___381 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___381 i))) 0) (= (to_rep (let ((temp___373 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___373 i))) 0) (and (and (< (to_rep1 (let ((temp___374 (rec__patience__state__values (us_split_fields1 s)))) (select temp___374 (to_rep (let ((temp___375 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___375 i)))))) (to_rep1 (let ((temp___376 (rec__patience__state__values (us_split_fields1 s)))) (select temp___376 i)))) (< 0 (to_rep (let ((temp___377 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___377 i))))) (= (to_rep (let ((temp___378 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___378 (to_rep (let ((temp___379 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___379 i)))))) (- (to_rep (let ((temp___380 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___380 i))) 1))))))))) :pattern ((inv s)))))
(define-fun dynamic_invariant1 ((temp___expr_189 Int) (temp___is_init_185 Bool) (temp___skip_constant_186 Bool) (temp___do_toplevel_187 Bool) (temp___do_typ_inv_188 Bool)) Bool (=> (or (= temp___is_init_185 true) (<= 1 52)) (in_range3 temp___expr_189)))
(define-fun dynamic_invariant2 ((temp___expr_202 Int) (temp___is_init_198 Bool) (temp___skip_constant_199 Bool) (temp___do_toplevel_200 Bool) (temp___do_typ_inv_201 Bool)) Bool (=> (or (= temp___is_init_198 true) (<= (- 1) 100)) (in_range2 temp___expr_202)))
(declare-sort tcardarrayD1 0)
(declare-fun tcardarrayD1qtint (tcardarrayD1) Int)
(assert (forall ((i tcardarrayD1)) (and (<= 0 (tcardarrayD1qtint i)) (<= (tcardarrayD1qtint i) 99))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 99)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq7 (tcardarrayD1 tcardarrayD1) Bool)
(declare-const dummy7 tcardarrayD1)
(declare-datatypes () ((tcardarrayD1__ref (mk_tcardarrayD1__ref (tcardarrayD1__content tcardarrayD1)))))
(define-fun tcardarrayD1__ref___projection ((a tcardarrayD1__ref)) tcardarrayD1 (tcardarrayD1__content a))
(declare-sort tindexarrayD1 0)
(declare-fun tindexarrayD1qtint (tindexarrayD1) Int)
(assert (forall ((i tindexarrayD1)) (and (<= 0 (tindexarrayD1qtint i)) (<= (tindexarrayD1qtint i) 99))))
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 99)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq8 (tindexarrayD1 tindexarrayD1) Bool)
(declare-const dummy8 tindexarrayD1)
(declare-datatypes () ((tindexarrayD1__ref (mk_tindexarrayD1__ref (tindexarrayD1__content tindexarrayD1)))))
(define-fun tindexarrayD1__ref___projection ((a tindexarrayD1__ref)) tindexarrayD1 (tindexarrayD1__content a))
(declare-sort tindexmatrixD1 0)
(declare-fun tindexmatrixD1qtint (tindexmatrixD1) Int)
(assert (forall ((i tindexmatrixD1)) (and (<= 0 (tindexmatrixD1qtint i)) (<= (tindexmatrixD1qtint i) 99))))
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 99)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq9 (tindexmatrixD1 tindexmatrixD1) Bool)
(declare-const dummy9 tindexmatrixD1)
(declare-datatypes () ((tindexmatrixD1__ref (mk_tindexmatrixD1__ref (tindexmatrixD1__content tindexmatrixD1)))))
(define-fun tindexmatrixD1__ref___projection ((a tindexmatrixD1__ref)) tindexmatrixD1 (tindexmatrixD1__content a))
(declare-const c Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const rliteral cardindex)
(assert (= (cardindexqtint rliteral) 1))
(declare-const rliteral1 cardindex)
(assert (= (cardindexqtint rliteral1) 0))
(declare-const s__split_fields cardindex)
(declare-const s__split_fields1 (Array Int card1))
(declare-const s__split_fields2 cardindex)
(declare-const s__split_fields3 (Array Int cardindex))
(declare-const s__split_fields4 (Array Int (Array Int cardindex)))
(declare-const s__split_fields5 (Array Int cardindex))
(declare-const s__split_fields6 (Array Int cardindex))
(declare-const s__split_fields7 (Array Int cardindex))
(declare-const idx Int)
(declare-const pred Int)
(declare-const i Int)
(declare-const stackisize Int)
(declare-const topstacki Int)
(declare-const temp___598 Int)
(declare-const temp___597 Int)
(declare-const temp___596 Int)
(declare-const temp___595 Int)
(declare-const o Int)
(declare-const o1 cardindex)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const temp___565 (Array Int cardindex))
(declare-const o4 Int)
(declare-const o5 cardindex)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 card1)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 card1)
(declare-const o12 Int)
(declare-const o13 (Array Int card1))
(declare-const o14 cardindex)
(declare-const o15 (Array Int card1))
(declare-const o16 cardindex)
(declare-const o17 (Array Int cardindex))
(declare-const o18 (Array Int (Array Int cardindex)))
(declare-const o19 (Array Int cardindex))
(declare-const o20 (Array Int cardindex))
(declare-const o21 (Array Int cardindex))
(declare-const temp___614 cardindex)
(declare-const temp___6141 (Array Int card1))
(declare-const temp___6142 cardindex)
(declare-const temp___6143 (Array Int cardindex))
(declare-const temp___6144 (Array Int (Array Int cardindex)))
(declare-const temp___6145 (Array Int cardindex))
(declare-const temp___6146 (Array Int cardindex))
(declare-const temp___6147 (Array Int cardindex))
(declare-const o22 Int)
(declare-const o23 Int)
(declare-const o24 cardindex)
(declare-const o25 cardindex)
(declare-const o26 (Array Int card1))
(declare-const o27 cardindex)
(declare-const o28 (Array Int cardindex))
(declare-const o29 (Array Int (Array Int cardindex)))
(declare-const o30 (Array Int cardindex))
(declare-const o31 (Array Int cardindex))
(declare-const o32 (Array Int cardindex))
(declare-const temp___616 cardindex)
(declare-const temp___6161 (Array Int card1))
(declare-const temp___6162 cardindex)
(declare-const temp___6163 (Array Int cardindex))
(declare-const temp___6164 (Array Int (Array Int cardindex)))
(declare-const temp___6165 (Array Int cardindex))
(declare-const temp___6166 (Array Int cardindex))
(declare-const temp___6167 (Array Int cardindex))
(declare-const o33 Int)
(declare-const o34 cardindex)
(declare-const o35 Int)
(declare-const o36 (Array Int cardindex))
(declare-const o37 cardindex)
(declare-const o38 (Array Int card1))
(declare-const o39 cardindex)
(declare-const o40 (Array Int cardindex))
(declare-const o41 (Array Int (Array Int cardindex)))
(declare-const o42 (Array Int cardindex))
(declare-const o43 (Array Int cardindex))
(declare-const o44 (Array Int cardindex))
(declare-const temp___619 cardindex)
(declare-const temp___6191 (Array Int card1))
(declare-const temp___6192 cardindex)
(declare-const temp___6193 (Array Int cardindex))
(declare-const temp___6194 (Array Int (Array Int cardindex)))
(declare-const temp___6195 (Array Int cardindex))
(declare-const temp___6196 (Array Int cardindex))
(declare-const temp___6197 (Array Int cardindex))
(declare-const o45 Int)
(declare-const o46 cardindex)
(declare-const o47 cardindex)
(declare-const o48 (Array Int card1))
(declare-const o49 cardindex)
(declare-const o50 (Array Int cardindex))
(declare-const o51 (Array Int (Array Int cardindex)))
(declare-const o52 (Array Int cardindex))
(declare-const o53 (Array Int cardindex))
(declare-const o54 (Array Int cardindex))
(declare-const temp___636 cardindex)
(declare-const temp___6361 (Array Int card1))
(declare-const temp___6362 cardindex)
(declare-const temp___6363 (Array Int cardindex))
(declare-const temp___6364 (Array Int (Array Int cardindex)))
(declare-const temp___6365 (Array Int cardindex))
(declare-const temp___6366 (Array Int cardindex))
(declare-const temp___6367 (Array Int cardindex))
(declare-const o55 Int)
(declare-const o56 (Array Int cardindex))
(declare-const o57 cardindex)
(declare-const o58 (Array Int card1))
(declare-const o59 cardindex)
(declare-const o60 (Array Int cardindex))
(declare-const o61 (Array Int (Array Int cardindex)))
(declare-const o62 (Array Int cardindex))
(declare-const o63 (Array Int cardindex))
(declare-const o64 (Array Int cardindex))
(declare-const temp___639 cardindex)
(declare-const temp___6391 (Array Int card1))
(declare-const temp___6392 cardindex)
(declare-const temp___6393 (Array Int cardindex))
(declare-const temp___6394 (Array Int (Array Int cardindex)))
(declare-const temp___6395 (Array Int cardindex))
(declare-const temp___6396 (Array Int cardindex))
(declare-const temp___6397 (Array Int cardindex))
(declare-const o65 Int)
(declare-const o66 cardindex)
(declare-const o67 (Array Int cardindex))
(declare-const o68 Int)
(declare-const o69 (Array Int (Array Int cardindex)))
(declare-const o70 us_split_fields)
(declare-const temp___644 us_rep)
(declare-const o71 Int)
(declare-const o72 cardindex)
(declare-const o73 Int)
(declare-const o74 (Array Int cardindex))
(declare-const o75 us_split_fields)
(declare-const temp___647 us_rep)
(declare-const o76 Int)
(declare-const o77 (Array Int cardindex))
(declare-const o78 us_split_fields)
(declare-const temp___650 us_rep)
(declare-const o79 Int)
(declare-const o80 cardindex)
(declare-const o81 Int)
(declare-const o82 Int)
(declare-const o83 cardindex)
(declare-const o84 Int)
(declare-const o85 (Array Int cardindex))
(declare-const o86 us_split_fields)
(declare-const temp___623 us_rep)
(declare-const o87 Int)
(declare-const o88 cardindex)
(declare-const o89 Int)
(declare-const o90 (Array Int cardindex))
(declare-const o91 Int)
(declare-const o92 (Array Int (Array Int cardindex)))
(declare-const o93 us_split_fields)
(declare-const temp___628 us_rep)
(declare-const o94 Int)
(declare-const o95 cardindex)
(declare-const o96 Int)
(declare-const o97 (Array Int cardindex))
(declare-const o98 us_split_fields)
(declare-const temp___631 us_rep)
(declare-const o99 cardindex)
(declare-const o100 Int)
(declare-const o101 (Array Int cardindex))
(declare-const o102 us_split_fields)
(declare-const temp___634 us_rep)
(declare-const i1 Int)
(declare-const stackisize1 Int)
(declare-const topstacki1 Int)
(declare-const result int__ref)
(declare-const pred1 Int)
(declare-const result1 int__ref)
(declare-const i2 Int)
(declare-const pred2 Int)
(declare-const i3 Int)
(declare-const stackisize2 Int)
(declare-const topstacki2 Int)
(declare-const result2 int__ref)
(declare-const stackisize3 Int)
(declare-const result3 int__ref)
(declare-const topstacki3 Int)
(declare-const result4 Bool)
(declare-const result5 int__ref)
(declare-const pred3 Int)
(declare-const result6 int__ref)
(declare-const i4 Int)
(declare-const pred4 int__ref)
(declare-const i5 int__ref)
(declare-const pred5 Int)
(declare-const i6 Int)
(declare-const pred6 int__ref)
(declare-const i7 int__ref)
(declare-const stackisize4 int__ref)
(declare-const topstacki4 int__ref)
(declare-const pred7 Int)
(declare-const i8 Int)
(declare-const stackisize5 Int)
(declare-const topstacki5 Int)
(declare-const pred8 int__ref)
(declare-const i9 int__ref)
(declare-const stackisize6 int__ref)
(declare-const topstacki6 int__ref)
(declare-const pred9 Int)
(declare-const i10 Int)
(declare-const stackisize7 Int)
(declare-const topstacki7 Int)
(declare-const result7 int__ref)
(declare-const idx1 Int)
(declare-const result8 us_split_fields__ref)
(declare-const s__split_fields8 us_split_fields)
(declare-const result9 us_split_fields__ref)
(declare-const s__split_fields9 us_split_fields)
(declare-const result10 us_split_fields__ref)
(declare-const s__split_fields10 us_split_fields)
(declare-const result11 int__ref)
(declare-const i11 Int)
(declare-const result12 us_split_fields__ref)
(declare-const s__split_fields11 us_split_fields)
(declare-const result13 us_split_fields__ref)
(declare-const s__split_fields12 us_split_fields)
(declare-const result14 us_split_fields__ref)
(declare-const s__split_fields13 us_split_fields)
(declare-const result15 us_split_fields__ref)
(declare-const s__split_fields14 us_split_fields)
(declare-const result16 us_split_fields__ref)
(declare-const s__split_fields15 us_split_fields)
(declare-const result17 int__ref)
(declare-const stackisize8 Int)
(declare-const result18 us_split_fields__ref)
(declare-const s__split_fields16 us_split_fields)
(declare-const result19 us_split_fields__ref)
(declare-const s__split_fields17 us_split_fields)
(declare-const result20 us_split_fields__ref)
(declare-const s__split_fields18 us_split_fields)
(declare-const result21 us_split_fields__ref)
(declare-const s__split_fields19 us_split_fields)
(declare-const s__split_fields20 us_split_fields__ref)
(declare-const i12 int__ref)
(declare-const stackisize9 int__ref)
(declare-const s__split_fields21 us_split_fields)
(declare-const i13 Int)
(declare-const stackisize10 Int)
(declare-const result22 Bool)
(declare-const result23 Bool)
(declare-const result24 Bool)
(declare-const result25 Bool)
(assert (in_range3 c))
(assert (and (= (inv (mk___rep (mk___split_fields s__split_fields s__split_fields1 s__split_fields2 s__split_fields3 s__split_fields4 s__split_fields5 s__split_fields6 s__split_fields7))) true) (< (to_rep s__split_fields) 100)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 idx)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 pred)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 i)))
(assert (=> (<= (- 1) 100) (in_range2 stackisize)))
(assert (=> (<= (- 1) 100) (in_range2 topstacki)))
(assert (= result (mk_int__ref pred)))
(assert (= pred1 (- 1)))
(assert (= result1 (mk_int__ref i)))
(assert (= i2 0))
(assert (=> (< i2 (to_rep s__split_fields2)) (= temp___598 topstacki)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= temp___597 stackisize)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= temp___596 i2)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= temp___595 pred1)))
(assert (=> (< i2 (to_rep s__split_fields2)) (and (<= 0 i3) (<= i3 (to_rep s__split_fields2)))))
(assert (=> (< i2 (to_rep s__split_fields2)) (ite (= i3 0) (= pred2 (- 1)) (and (and (and (and (<= 0 pred2) (<= pred2 (- (to_rep s__split_fields) 1))) (= pred2 (to_rep (select (select s__split_fields4 (- i3 1)) (- (to_rep (select s__split_fields3 (- i3 1))) 1))))) (< (to_rep1 (select s__split_fields1 pred2)) c)) (= (to_rep (select s__split_fields5 pred2)) (- i3 1))))))
(assert (=> (< i2 (to_rep s__split_fields2)) (and (and (and (and (=> (<= (- 2147483648) 2147483647) (in_range1 pred2)) (=> (<= (- 2147483648) 2147483647) (in_range1 i3))) (=> (<= (- 1) 100) (in_range2 stackisize2))) (=> (<= (- 1) 100) (in_range2 topstacki2))) (< i3 (to_rep s__split_fields2)))))
(assert (=> (< i2 (to_rep s__split_fields2)) (and (<= 0 i3) (<= i3 99))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= o i3)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= o1 (select s__split_fields3 o))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= o2 (to_rep o1))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= result2 (mk_int__ref stackisize2))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= stackisize3 o2)))
(assert (=> (< i2 (to_rep s__split_fields2)) (and (<= 0 i3) (<= i3 99))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= o3 i3)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= temp___565 (select s__split_fields4 o3))))
(assert (=> (< i2 (to_rep s__split_fields2)) (and (<= 0 (- stackisize3 1)) (<= (- stackisize3 1) 99))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= o4 (- stackisize3 1))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= o5 (select temp___565 o4))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= o6 (to_rep o5))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= result3 (mk_int__ref topstacki2))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= topstacki3 o6)))
(assert (=> (< i2 (to_rep s__split_fields2)) (or (and (and (and (= i5 (mk_int__ref i3)) (= pred4 (mk_int__ref pred2))) (and (= i6 i3) (= pred5 pred2))) (and (and (and (and (and (and (<= 0 topstacki3) (<= topstacki3 99)) (= o7 topstacki3)) (= o8 (select s__split_fields1 o7))) (= o9 (to_rep1 o8))) (= result4 (ite (<= c o9) true false))) (= result4 true))) (and (and (and (and (and (and (and (<= 0 topstacki3) (<= topstacki3 99)) (= o7 topstacki3)) (= o8 (select s__split_fields1 o7))) (= o9 (to_rep1 o8))) (= result4 (ite (<= c o9) true false))) (not (= result4 true))) (and (and (and (= i5 (mk_int__ref i4)) (= pred4 (mk_int__ref pred3))) (and (= i6 i4) (= pred5 pred3))) (and (and (<= 0 topstacki3) (< topstacki3 (to_rep s__split_fields))) (and (and (and (and (and (and (and (<= 0 (to_rep (select s__split_fields5 topstacki3))) (< (to_rep (select s__split_fields5 topstacki3)) (to_rep s__split_fields2))) (<= 0 (to_rep (select s__split_fields6 topstacki3)))) (< (to_rep (select s__split_fields6 topstacki3)) (to_rep (select s__split_fields3 (to_rep (select s__split_fields5 topstacki3)))))) (= (to_rep (select (select s__split_fields4 (to_rep (select s__split_fields5 topstacki3))) (to_rep (select s__split_fields6 topstacki3)))) topstacki3)) (= (to_rep (select s__split_fields5 topstacki3)) i3)) (= (to_rep (select s__split_fields6 topstacki3)) (- stackisize3 1))) (and (and (= result5 (mk_int__ref pred2)) (= pred3 topstacki3)) (and (and (and (= o10 (+ i3 1)) (in_range1 (+ i3 1))) (and (= result6 (mk_int__ref i3)) (= i4 o10))) (not (< i4 (to_rep s__split_fields2))))))))))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= topstacki4 (mk_int__ref topstacki3))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= stackisize4 (mk_int__ref stackisize3))))
(assert (=> (< i2 (to_rep s__split_fields2)) (= i7 i5)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= pred6 pred4)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= topstacki5 topstacki3)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= stackisize5 stackisize3)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= i8 i6)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= pred7 pred5)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= topstacki6 topstacki4)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= stackisize6 stackisize4)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= i9 i7)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= pred8 pred6)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= topstacki7 topstacki5)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= stackisize7 stackisize5)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= i10 i8)))
(assert (=> (< i2 (to_rep s__split_fields2)) (= pred9 pred7)))
(assert (=> (not (< i2 (to_rep s__split_fields2))) (= topstacki6 (mk_int__ref topstacki))))
(assert (=> (not (< i2 (to_rep s__split_fields2))) (= stackisize6 (mk_int__ref stackisize))))
(assert (=> (not (< i2 (to_rep s__split_fields2))) (= i9 (mk_int__ref i2))))
(assert (=> (not (< i2 (to_rep s__split_fields2))) (= pred8 (mk_int__ref pred1))))
(assert (=> (not (< i2 (to_rep s__split_fields2))) (= topstacki7 topstacki1)))
(assert (=> (not (< i2 (to_rep s__split_fields2))) (= stackisize7 stackisize1)))
(assert (=> (not (< i2 (to_rep s__split_fields2))) (= i10 i2)))
(assert (=> (not (< i2 (to_rep s__split_fields2))) (= pred9 pred1)))
(assert (= result7 (mk_int__ref idx)))
(assert (= idx1 (to_rep s__split_fields)))
(assert (= (to_rep1 o11) c))
(assert (and (<= 0 idx1) (<= idx1 99)))
(assert (= o12 idx1))
(assert (= o13 (store s__split_fields1 o12 o11)))
(assert (= s__split_fields o14))
(assert (= o13 o15))
(assert (= s__split_fields2 o16))
(assert (= s__split_fields3 o17))
(assert (= s__split_fields4 o18))
(assert (= s__split_fields5 o19))
(assert (= s__split_fields6 o20))
(assert (= s__split_fields7 o21))
(assert (= temp___614 o14))
(assert (= temp___6141 o15))
(assert (= temp___6142 o16))
(assert (= temp___6143 o17))
(assert (= temp___6144 o18))
(assert (= temp___6145 o19))
(assert (= temp___6146 o20))
(assert (= temp___6147 o21))
(assert (= result8 (mk___split_fields__ref (mk___split_fields s__split_fields s__split_fields1 s__split_fields2 s__split_fields3 s__split_fields4 s__split_fields5 s__split_fields6 s__split_fields7))))
(assert (= s__split_fields8 (mk___split_fields temp___614 temp___6141 temp___6142 temp___6143 temp___6144 temp___6145 temp___6146 temp___6147)))
(assert (and (= o22 (+ idx1 1)) (in_range1 (+ idx1 1))))
(assert (and (= o23 o22) (in_range2 o22)))
(assert (= (to_rep o24) o23))
(assert (= o24 o25))
(assert (= (rec__patience__state__values s__split_fields8) o26))
(assert (= (rec__patience__state__numstacks s__split_fields8) o27))
(assert (= (rec__patience__state__stacksizes s__split_fields8) o28))
(assert (= (rec__patience__state__stacks s__split_fields8) o29))
(assert (= (rec__patience__state__posstack s__split_fields8) o30))
(assert (= (rec__patience__state__posheight s__split_fields8) o31))
(assert (= (rec__patience__state__preds s__split_fields8) o32))
(assert (= temp___616 o25))
(assert (= temp___6161 o26))
(assert (= temp___6162 o27))
(assert (= temp___6163 o28))
(assert (= temp___6164 o29))
(assert (= temp___6165 o30))
(assert (= temp___6166 o31))
(assert (= temp___6167 o32))
(assert (= result9 (mk___split_fields__ref s__split_fields8)))
(assert (= s__split_fields9 (mk___split_fields temp___616 temp___6161 temp___6162 temp___6163 temp___6164 temp___6165 temp___6166 temp___6167)))
(assert (and (= o33 (int__content pred8)) (in_range2 (int__content pred8))))
(assert (= (to_rep o34) o33))
(assert (and (<= 0 idx1) (<= idx1 99)))
(assert (= o35 idx1))
(assert (= o36 (store (rec__patience__state__preds s__split_fields9) o35 o34)))
(assert (= (rec__patience__state__numelts s__split_fields9) o37))
(assert (= (rec__patience__state__values s__split_fields9) o38))
(assert (= (rec__patience__state__numstacks s__split_fields9) o39))
(assert (= (rec__patience__state__stacksizes s__split_fields9) o40))
(assert (= (rec__patience__state__stacks s__split_fields9) o41))
(assert (= (rec__patience__state__posstack s__split_fields9) o42))
(assert (= (rec__patience__state__posheight s__split_fields9) o43))
(assert (= o36 o44))
(assert (= temp___619 o37))
(assert (= temp___6191 o38))
(assert (= temp___6192 o39))
(assert (= temp___6193 o40))
(assert (= temp___6194 o41))
(assert (= temp___6195 o42))
(assert (= temp___6196 o43))
(assert (= temp___6197 o44))
(assert (= result10 (mk___split_fields__ref s__split_fields9)))
(assert (= s__split_fields10 (mk___split_fields temp___619 temp___6191 temp___6192 temp___6193 temp___6194 temp___6195 temp___6196 temp___6197)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= result11 i9)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= i11 (to_rep (rec__patience__state__numstacks s__split_fields10)))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (and (= o45 (+ (to_rep (rec__patience__state__numstacks s__split_fields10)) 1)) (in_range2 (+ (to_rep (rec__patience__state__numstacks s__split_fields10)) 1)))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (to_rep o46) o45)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__numelts s__split_fields10) o47)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__values s__split_fields10) o48)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o46 o49)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__stacksizes s__split_fields10) o50)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__stacks s__split_fields10) o51)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__posstack s__split_fields10) o52)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__posheight s__split_fields10) o53)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__preds s__split_fields10) o54)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___636 o47)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6361 o48)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6362 o49)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6363 o50)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6364 o51)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6365 o52)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6366 o53)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6367 o54)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= result12 (mk___split_fields__ref s__split_fields10))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields11 (mk___split_fields temp___636 temp___6361 temp___6362 temp___6363 temp___6364 temp___6365 temp___6366 temp___6367))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (and (<= 0 i11) (<= i11 99))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o55 i11)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o56 (store (rec__patience__state__stacksizes s__split_fields11) o55 rliteral))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__numelts s__split_fields11) o57)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__values s__split_fields11) o58)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__numstacks s__split_fields11) o59)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o56 o60)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__stacks s__split_fields11) o61)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__posstack s__split_fields11) o62)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__posheight s__split_fields11) o63)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__preds s__split_fields11) o64)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___639 o57)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6391 o58)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6392 o59)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6393 o60)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6394 o61)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6395 o62)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6396 o63)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___6397 o64)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= result13 (mk___split_fields__ref s__split_fields11))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields12 (mk___split_fields temp___639 temp___6391 temp___6392 temp___6393 temp___6394 temp___6395 temp___6396 temp___6397))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (and (= o65 idx1) (in_range2 idx1))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (to_rep o66) o65)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o67 (store (select (rec__patience__state__stacks s__split_fields12) i11) 0 o66))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (and (<= 0 i11) (<= i11 99))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o68 i11)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o69 (store (rec__patience__state__stacks s__split_fields12) o68 o67))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o70 (mk___split_fields (rec__patience__state__numelts s__split_fields12) (rec__patience__state__values s__split_fields12) (rec__patience__state__numstacks s__split_fields12) (rec__patience__state__stacksizes s__split_fields12) o69 (rec__patience__state__posstack s__split_fields12) (rec__patience__state__posheight s__split_fields12) (rec__patience__state__preds s__split_fields12)))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___644 (mk___rep o70))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= result14 (mk___split_fields__ref s__split_fields12))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields13 (us_split_fields1 temp___644))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (and (= o71 i11) (in_range2 i11))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= (to_rep o72) o71)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (and (<= 0 idx1) (<= idx1 99))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o73 idx1)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o74 (store (rec__patience__state__posstack s__split_fields13) o73 o72))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o75 (mk___split_fields (rec__patience__state__numelts s__split_fields13) (rec__patience__state__values s__split_fields13) (rec__patience__state__numstacks s__split_fields13) (rec__patience__state__stacksizes s__split_fields13) (rec__patience__state__stacks s__split_fields13) o74 (rec__patience__state__posheight s__split_fields13) (rec__patience__state__preds s__split_fields13)))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___647 (mk___rep o75))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= result15 (mk___split_fields__ref s__split_fields13))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields14 (us_split_fields1 temp___647))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (and (<= 0 idx1) (<= idx1 99))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o76 idx1)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o77 (store (rec__patience__state__posheight s__split_fields14) o76 rliteral1))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= o78 (mk___split_fields (rec__patience__state__numelts s__split_fields14) (rec__patience__state__values s__split_fields14) (rec__patience__state__numstacks s__split_fields14) (rec__patience__state__stacksizes s__split_fields14) (rec__patience__state__stacks s__split_fields14) (rec__patience__state__posstack s__split_fields14) o77 (rec__patience__state__preds s__split_fields14)))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= temp___650 (mk___rep o78))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= result16 (mk___split_fields__ref s__split_fields14))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields15 (us_split_fields1 temp___650))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= stackisize9 stackisize6)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= i12 (mk_int__ref i11))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields20 (mk___split_fields__ref s__split_fields15))))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= stackisize10 stackisize7)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= i13 i11)))
(assert (=> (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields21 s__split_fields15)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (and (<= 0 (int__content i9)) (<= (int__content i9) 99))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o79 (int__content i9))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o80 (select (rec__patience__state__stacksizes s__split_fields10) o79))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o81 (to_rep o80))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= result17 stackisize6)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= stackisize8 o81)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (and (= o82 (+ stackisize8 1)) (in_range2 (+ stackisize8 1)))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= (to_rep o83) o82)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (and (<= 0 (int__content i9)) (<= (int__content i9) 99))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o84 (int__content i9))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o85 (store (rec__patience__state__stacksizes s__split_fields10) o84 o83))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o86 (mk___split_fields (rec__patience__state__numelts s__split_fields10) (rec__patience__state__values s__split_fields10) (rec__patience__state__numstacks s__split_fields10) o85 (rec__patience__state__stacks s__split_fields10) (rec__patience__state__posstack s__split_fields10) (rec__patience__state__posheight s__split_fields10) (rec__patience__state__preds s__split_fields10)))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= temp___623 (mk___rep o86))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= result18 (mk___split_fields__ref s__split_fields10))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= s__split_fields16 (us_split_fields1 temp___623))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (and (= o87 idx1) (in_range2 idx1))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= (to_rep o88) o87)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (and (<= 0 stackisize8) (<= stackisize8 99))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o89 stackisize8)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o90 (store (select (rec__patience__state__stacks s__split_fields16) (int__content i9)) o89 o88))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (and (<= 0 (int__content i9)) (<= (int__content i9) 99))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o91 (int__content i9))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o92 (store (rec__patience__state__stacks s__split_fields16) o91 o90))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o93 (mk___split_fields (rec__patience__state__numelts s__split_fields16) (rec__patience__state__values s__split_fields16) (rec__patience__state__numstacks s__split_fields16) (rec__patience__state__stacksizes s__split_fields16) o92 (rec__patience__state__posstack s__split_fields16) (rec__patience__state__posheight s__split_fields16) (rec__patience__state__preds s__split_fields16)))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= temp___628 (mk___rep o93))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= result19 (mk___split_fields__ref s__split_fields16))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= s__split_fields17 (us_split_fields1 temp___628))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (and (= o94 (int__content i9)) (in_range2 (int__content i9)))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= (to_rep o95) o94)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (and (<= 0 idx1) (<= idx1 99))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o96 idx1)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o97 (store (rec__patience__state__posstack s__split_fields17) o96 o95))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o98 (mk___split_fields (rec__patience__state__numelts s__split_fields17) (rec__patience__state__values s__split_fields17) (rec__patience__state__numstacks s__split_fields17) (rec__patience__state__stacksizes s__split_fields17) (rec__patience__state__stacks s__split_fields17) o97 (rec__patience__state__posheight s__split_fields17) (rec__patience__state__preds s__split_fields17)))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= temp___631 (mk___rep o98))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= result20 (mk___split_fields__ref s__split_fields17))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= s__split_fields18 (us_split_fields1 temp___631))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= (to_rep o99) stackisize8)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (and (<= 0 idx1) (<= idx1 99))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o100 idx1)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o101 (store (rec__patience__state__posheight s__split_fields18) o100 o99))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= o102 (mk___split_fields (rec__patience__state__numelts s__split_fields18) (rec__patience__state__values s__split_fields18) (rec__patience__state__numstacks s__split_fields18) (rec__patience__state__stacksizes s__split_fields18) (rec__patience__state__stacks s__split_fields18) (rec__patience__state__posstack s__split_fields18) o101 (rec__patience__state__preds s__split_fields18)))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= temp___634 (mk___rep o102))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= result21 (mk___split_fields__ref s__split_fields18))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= s__split_fields19 (us_split_fields1 temp___634))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= stackisize9 (mk_int__ref stackisize8))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= i12 i9)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= s__split_fields20 (mk___split_fields__ref s__split_fields19))))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= stackisize10 stackisize8)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= i13 i10)))
(assert (=> (not (= (int__content i9) (to_rep (rec__patience__state__numstacks s__split_fields10)))) (= s__split_fields21 s__split_fields19)))
(assert (and (and (and (<= 0 (to_rep (rec__patience__state__numstacks (us_split_fields__content s__split_fields20)))) (<= (to_rep (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) (to_rep (rec__patience__state__numelts (us_split_fields__content s__split_fields20))))) (<= (to_rep (rec__patience__state__numelts (us_split_fields__content s__split_fields20))) 100)) (or (= (to_rep (rec__patience__state__numelts (us_split_fields__content s__split_fields20))) 0) (< 0 (to_rep (rec__patience__state__numstacks (us_split_fields__content s__split_fields20)))))))
(assert (forall ((i14 Int)) (=> (and (<= 0 i14) (<= i14 (- (to_rep (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) 1))) (<= 1 (to_rep (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i14))))))
(assert (forall ((i14 Int)) (=> (and (<= 0 i14) (<= i14 (- (to_rep (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) 1))) (and (<= (to_rep (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i14)) (to_rep (rec__patience__state__numelts (us_split_fields__content s__split_fields20)))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i14)) 1))) (and (<= 0 (to_rep (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) i14) j))) (< (to_rep (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) i14) j)) (to_rep (rec__patience__state__numelts (us_split_fields__content s__split_fields20)))))))))))
(assert (= (= result25 true) (forall ((i14 Int)) (=> (and (<= 0 i14) (<= i14 (- (to_rep (rec__patience__state__numelts (us_split_fields__content s__split_fields20))) 1))) (and (and (and (<= 0 (to_rep (select (rec__patience__state__posstack (us_split_fields__content s__split_fields20)) i14))) (<= (to_rep (select (rec__patience__state__posstack (us_split_fields__content s__split_fields20)) i14)) (- (to_rep (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) 1))) (and (<= 0 (to_rep (select (rec__patience__state__posheight (us_split_fields__content s__split_fields20)) i14))) (<= (to_rep (select (rec__patience__state__posheight (us_split_fields__content s__split_fields20)) i14)) (- (to_rep (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) (to_rep (select (rec__patience__state__posstack (us_split_fields__content s__split_fields20)) i14)))) 1)))) (= (to_rep (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) (to_rep (select (rec__patience__state__posstack (us_split_fields__content s__split_fields20)) i14))) (to_rep (select (rec__patience__state__posheight (us_split_fields__content s__split_fields20)) i14)))) i14))))))
(assert (=> (= result25 true) (= (= result24 true) (forall ((ist Int)) (=> (and (<= 0 ist) (<= ist (- (to_rep (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) 1))) (forall ((ip Int)) (=> (and (<= 0 ip) (<= ip (- (to_rep (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) ist)) 1))) (and (= ist (to_rep (select (rec__patience__state__posstack (us_split_fields__content s__split_fields20)) (to_rep (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) ist) ip))))) (= ip (to_rep (select (rec__patience__state__posheight (us_split_fields__content s__split_fields20)) (to_rep (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) ist) ip)))))))))))))
(assert (=> (not (= result25 true)) (= result24 false)))
(assert (=> (= result24 true) (= (= result23 true) (forall ((i14 Int)) (=> (and (<= 0 i14) (<= i14 (- (to_rep (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) 1))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i14)) 2))) (forall ((k Int)) (=> (and (<= (+ j 1) k) (<= k (- (to_rep (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i14)) 1))) (< (to_rep (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) i14) j)) (to_rep (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) i14) k))))))))))))
(assert (=> (not (= result24 true)) (= result23 false)))
(assert (=> (= result23 true) (= (= result22 true) (forall ((i14 Int)) (=> (and (<= 0 i14) (<= i14 (- (to_rep (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) 1))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i14)) 2))) (forall ((k Int)) (=> (and (<= (+ j 1) k) (<= k (- (to_rep (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i14)) 1))) (<= (to_rep1 (select (rec__patience__state__values (us_split_fields__content s__split_fields20)) (to_rep (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) i14) k)))) (to_rep1 (select (rec__patience__state__values (us_split_fields__content s__split_fields20)) (to_rep (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) i14) j))))))))))))))
(assert (=> (not (= result23 true)) (= result22 false)))
(assert (= result22 true))
(assert (<= 0 i1))
(assert (<= i1 (- (to_rep (rec__patience__state__numelts (us_split_fields__content s__split_fields20))) 1)))
(assert (not (<= i1 99)))
(check-sat)
(exit)
