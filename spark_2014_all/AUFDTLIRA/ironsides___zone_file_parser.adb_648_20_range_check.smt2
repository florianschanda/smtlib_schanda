(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-sort rritemtype 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (rritemtype rritemtype) Bool)
(declare-const dummy2 rritemtype)
(declare-datatypes () ((rritemtype__ref (mk_rritemtype__ref (rritemtype__content rritemtype)))))
(define-fun rritemtype__ref___projection ((a rritemtype__ref)) rritemtype (rritemtype__content a))
(define-fun dynamic_invariant1 ((temp___expr_298 Int) (temp___is_init_294 Bool) (temp___skip_constant_295 Bool) (temp___do_toplevel_296 Bool) (temp___do_typ_inv_297 Bool)) Bool (=> (or (= temp___is_init_294 true) (<= 0 10)) (in_range3 temp___expr_298)))
(declare-sort linelengthindex 0)
(declare-fun linelengthindexqtint (linelengthindex) Int)
(assert (forall ((i linelengthindex)) (and (<= 1 (linelengthindexqtint i)) (<= (linelengthindexqtint i) 256))))
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 256)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (linelengthindex linelengthindex) Bool)
(declare-const dummy3 linelengthindex)
(declare-datatypes () ((linelengthindex__ref (mk_linelengthindex__ref (linelengthindex__content linelengthindex)))))
(define-fun linelengthindex__ref___projection ((a linelengthindex__ref)) linelengthindex (linelengthindex__content a))
(define-fun dynamic_invariant2 ((temp___expr_305 Int) (temp___is_init_301 Bool) (temp___skip_constant_302 Bool) (temp___do_toplevel_303 Bool) (temp___do_typ_inv_304 Bool)) Bool (=> (or (= temp___is_init_301 true) (<= 1 256)) (in_range4 temp___expr_305)))
(declare-const blankline (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun rr_type__blankline__aggregate_def (Int) (Array Int character))
(declare-sort domainnamestringtypeindex 0)
(declare-fun domainnamestringtypeindexqtint (domainnamestringtypeindex) Int)
(assert (forall ((i domainnamestringtypeindex)) (and (<= 1 (domainnamestringtypeindexqtint i)) (<= (domainnamestringtypeindexqtint i) 128))))
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (domainnamestringtypeindex domainnamestringtypeindex) Bool)
(declare-const dummy4 domainnamestringtypeindex)
(declare-datatypes () ((domainnamestringtypeindex__ref (mk_domainnamestringtypeindex__ref (domainnamestringtypeindex__content domainnamestringtypeindex)))))
(define-fun domainnamestringtypeindex__ref___projection ((a domainnamestringtypeindex__ref)) domainnamestringtypeindex (domainnamestringtypeindex__content a))
(declare-const blankdomainname (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-fun rr_type__blankdomainname__aggregate_def (Int) (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const zonefileline (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const zlength Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const r23b Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const r24b Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t25b__ref (mk_t25b__ref (t25b__content integer)))))
(define-fun t25b__ref___projection ((a t25b__ref)) integer (t25b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const r26b Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t27b__ref (mk_t27b__ref (t27b__content integer)))))
(define-fun t27b__ref___projection ((a t27b__ref)) integer (t27b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const r28b Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const r29b Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq7 (integer integer) Bool)
(declare-const dummy7 integer)
(declare-datatypes () ((t30b__ref (mk_t30b__ref (t30b__content integer)))))
(define-fun t30b__ref___projection ((a t30b__ref)) integer (t30b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-const r31b Int)
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t32b__ref (mk_t32b__ref (t32b__content integer)))))
(define-fun t32b__ref___projection ((a t32b__ref)) integer (t32b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS20 Int)
(define-fun dynamic_invariant3 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range2 temp___expr_74)))
(assert (= blankline (rr_type__blankline__aggregate_def 32)))
(assert (forall ((temp___155 Int)) (=> (dynamic_invariant3 temp___155 true true true true) (forall ((temp___156 Int)) (= (to_rep (select (rr_type__blankline__aggregate_def temp___155) temp___156)) temp___155)))))
(define-fun dynamic_invariant4 ((temp___expr_322 Int) (temp___is_init_318 Bool) (temp___skip_constant_319 Bool) (temp___do_toplevel_320 Bool) (temp___do_typ_inv_321 Bool)) Bool (=> (or (= temp___is_init_318 true) (<= 1 128)) (in_range5 temp___expr_322)))
(assert (= blankdomainname (rr_type__blankdomainname__aggregate_def 32)))
(assert (forall ((temp___158 Int)) (=> (dynamic_invariant3 temp___158 true true true true) (forall ((temp___159 Int)) (= (to_rep (select (rr_type__blankdomainname__aggregate_def temp___158) temp___159)) temp___158)))))
(declare-const newdomainname (Array Int character))
(declare-const rrstring (Array Int character))
(declare-const success Bool)
(declare-const begidx Int)
(declare-const endidx Int)
(declare-const foundtype Int)
(declare-const lengthoftoken Int)
(declare-const i Int)
(declare-const i1 Int)
(declare-const temp___1615 Int)
(declare-const temp___1614 Int)
(declare-const temp___1613 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const temp___1621 Int)
(declare-const temp___1619 (Array Int character))
(declare-const temp___1622 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const temp___1618 Int)
(declare-const o5 character)
(declare-const o6 Int)
(declare-const o7 (Array Int character))
(declare-const temp___1627 Int)
(declare-const temp___1625 (Array Int character))
(declare-const o8 character)
(declare-const o9 (Array Int character))
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const success1 Bool)
(declare-const i2 Int)
(declare-const i3 Int)
(declare-const result Int)
(declare-const begidx1 Int)
(declare-const result1 (Array Int character))
(declare-const rrstring1 (Array Int character))
(declare-const result2 (Array Int character))
(declare-const newdomainname1 (Array Int character))
(declare-const begidx2 Int)
(declare-const endidx1 Int)
(declare-const foundtype1 Int)
(declare-const begidx3 Int)
(declare-const endidx2 Int)
(declare-const foundtype2 Int)
(declare-const result3 Int)
(declare-const begidx4 Int)
(declare-const begidx5 Int)
(declare-const endidx3 Int)
(declare-const foundtype3 Int)
(declare-const begidx6 Int)
(declare-const endidx4 Int)
(declare-const foundtype4 Int)
(declare-const begidx7 Int)
(declare-const endidx5 Int)
(declare-const foundtype5 Int)
(declare-const begidx8 int__ref)
(declare-const endidx6 int__ref)
(declare-const foundtype6 int__ref)
(declare-const begidx9 Int)
(declare-const endidx7 Int)
(declare-const foundtype7 Int)
(declare-const result4 int__ref)
(declare-const begidx10 Int)
(declare-const begidx11 Int)
(declare-const endidx8 Int)
(declare-const foundtype8 Int)
(declare-const result5 int__ref)
(declare-const lengthoftoken1 Int)
(declare-const result6 bool__ref)
(declare-const success2 Bool)
(declare-const result7 int__ref)
(declare-const i4 Int)
(declare-const newdomainname2 (Array Int character))
(declare-const i5 Int)
(declare-const result8 map__ref)
(declare-const newdomainname3 (Array Int character))
(declare-const newdomainname4 map__ref)
(declare-const i6 int__ref)
(declare-const newdomainname5 (Array Int character))
(declare-const i7 Int)
(declare-const newdomainname6 map__ref)
(declare-const i8 int__ref)
(declare-const newdomainname7 (Array Int character))
(declare-const i9 Int)
(declare-const result9 int__ref)
(declare-const i10 Int)
(declare-const newdomainname8 (Array Int character))
(declare-const i11 Int)
(declare-const result10 map__ref)
(declare-const newdomainname9 (Array Int character))
(declare-const newdomainname10 map__ref)
(declare-const i12 int__ref)
(declare-const newdomainname11 (Array Int character))
(declare-const i13 Int)
(declare-const newdomainname12 map__ref)
(declare-const i14 int__ref)
(declare-const newdomainname13 (Array Int character))
(declare-const i15 Int)
(declare-const newdomainname14 map__ref)
(declare-const success3 bool__ref)
(declare-const i16 int__ref)
(declare-const i17 int__ref)
(declare-const newdomainname15 (Array Int character))
(declare-const success4 Bool)
(declare-const i18 Int)
(declare-const i19 Int)
(declare-const result11 int__ref)
(declare-const begidx12 Int)
(declare-const begidx13 Int)
(declare-const endidx9 Int)
(declare-const foundtype9 Int)
(declare-const result12 int__ref)
(declare-const lengthoftoken2 Int)
(define-fun i20 () int__ref (mk_int__ref i1))
(define-fun i21 () int__ref (mk_int__ref i))
(define-fun success5 () bool__ref (mk_bool__ref success))
(assert (= (rr_type__blankline__aggregate_def 32) blankline))
(assert (= (rr_type__blankdomainname__aggregate_def 32) blankdomainname))
(assert (in_range4 zlength))
(assert (= result begidx))
(assert (= begidx1 1))
(assert (in_range4 begidx1))
(assert (=> (<= 1 256) (in_range4 endidx)))
(assert (=> (<= 0 10) (in_range3 foundtype)))
(assert (=> (<= 1 256) (in_range4 lengthoftoken)))
(assert (= result1 rrstring))
(assert (= rrstring1 blankline))
(assert (= result2 newdomainname))
(assert (= newdomainname1 blankdomainname))
(assert (and (and (and (and (<= begidx2 endidx1) (<= begidx2 zlength)) (<= endidx1 zlength)) (=> (= foundtype1 1) (forall ((i22 Int)) (=> (and (<= begidx2 i22) (<= i22 endidx1)) (and (<= 48 (to_rep (select zonefileline i22))) (<= (to_rep (select zonefileline i22)) 57)))))) (and (and (in_range4 begidx2) (in_range4 endidx1)) (in_range3 foundtype1))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= temp___1615 begidx2)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= temp___1614 foundtype1)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= temp___1613 endidx1)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (< endidx2 zlength)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (and (and (and (=> (<= 1 256) (in_range4 endidx2)) (=> (<= 0 10) (in_range3 foundtype2))) (=> (<= 1 256) (in_range4 begidx3))) (and (not (= foundtype2 3)) (< endidx2 zlength)))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (and (= o (+ endidx2 1)) (in_range4 (+ endidx2 1)))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx3 result3)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx4 o)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (and (and (and (and (<= begidx5 endidx3) (<= begidx5 zlength)) (<= endidx3 zlength)) (=> (= foundtype3 1) (forall ((i22 Int)) (=> (and (<= begidx5 i22) (<= i22 endidx3)) (and (<= 48 (to_rep (select zonefileline i22))) (<= (to_rep (select zonefileline i22)) 57)))))) (and (and (in_range4 begidx5) (in_range4 endidx3)) (in_range3 foundtype3)))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (not (and (not (= foundtype3 3)) (< endidx3 zlength)))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= foundtype3 foundtype4)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= endidx3 endidx4)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx5 begidx6)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= foundtype5 foundtype3)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= endidx5 endidx3)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx7 begidx5)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= foundtype6 (mk_int__ref foundtype4))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= endidx6 (mk_int__ref endidx4))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx8 (mk_int__ref begidx6))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= foundtype7 foundtype5)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= endidx7 endidx5)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx9 begidx7)))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= foundtype6 (mk_int__ref foundtype1))))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= endidx6 (mk_int__ref endidx1))))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= begidx8 (mk_int__ref begidx2))))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= foundtype7 foundtype1)))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= endidx7 endidx1)))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= begidx9 begidx2)))
(assert (not (<= zlength (int__content endidx6))))
(assert (and (= o1 (+ (int__content endidx6) 1)) (in_range4 (+ (int__content endidx6) 1))))
(assert (= result4 begidx8))
(assert (= begidx10 o1))
(assert (and (and (and (and (<= begidx11 endidx8) (<= begidx11 zlength)) (<= endidx8 zlength)) (=> (= foundtype8 1) (forall ((i22 Int)) (=> (and (<= begidx11 i22) (<= i22 endidx8)) (and (<= 48 (to_rep (select zonefileline i22))) (<= (to_rep (select zonefileline i22)) 57)))))) (and (and (in_range4 begidx11) (in_range4 endidx8)) (in_range3 foundtype8))))
(assert (and (= o2 (+ (- endidx8 begidx11) 1)) (in_range4 (+ (- endidx8 begidx11) 1))))
(assert (= result5 (mk_int__ref lengthoftoken)))
(assert (= lengthoftoken1 o2))
(assert (=> (< 128 lengthoftoken1) (= result6 success5)))
(assert (=> (< 128 lengthoftoken1) (= success2 (distinct 0 0))))
(assert (=> (< 128 lengthoftoken1) (= i17 i20)))
(assert (=> (< 128 lengthoftoken1) (= i16 i21)))
(assert (=> (< 128 lengthoftoken1) (= success3 (mk_bool__ref success2))))
(assert (=> (< 128 lengthoftoken1) (= newdomainname14 (mk_map__ref newdomainname1))))
(assert (=> (< 128 lengthoftoken1) (= i19 i3)))
(assert (=> (< 128 lengthoftoken1) (= i18 i2)))
(assert (=> (< 128 lengthoftoken1) (= success4 success2)))
(assert (=> (< 128 lengthoftoken1) (= newdomainname15 newdomainname1)))
(assert (=> (not (< 128 lengthoftoken1)) (= begidx11 r23b)))
(assert (=> (not (< 128 lengthoftoken1)) (in_range4 r23b)))
(assert (=> (not (< 128 lengthoftoken1)) (= endidx8 r24b)))
(assert (=> (not (< 128 lengthoftoken1)) (in_range4 r24b)))
(assert (=> (not (< 128 lengthoftoken1)) (= result7 i21)))
(assert (=> (not (< 128 lengthoftoken1)) (= i4 r23b)))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= temp___1621 i4))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= temp___1619 newdomainname1))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= temp___1622 endidx8))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (and (and (<= 1 begidx11) (<= (+ (- endidx8 begidx11) 1) 128)) (= endidx8 temp___1622)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (and (=> (<= r23b r24b) (dynamic_property r23b r24b i5)) (and (<= r23b i5) (<= i5 r24b))))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= (to_rep o5) (to_rep (select zonefileline i5))))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (and (= o3 (+ i5 1)) (in_range1 (+ i5 1))))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= o4 (- o3 begidx11)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (and (= temp___1618 o4) (in_range1 o4)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (and (<= 1 temp___1618) (<= temp___1618 128)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= o6 temp___1618))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= o7 (store newdomainname2 o6 o5)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= result8 (mk_map__ref newdomainname2)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= newdomainname3 o7))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= i5 r24b))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= i6 (mk_int__ref i5)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= newdomainname4 (mk_map__ref newdomainname3)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= i7 i5))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= newdomainname5 newdomainname3))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= i8 i6))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= newdomainname6 newdomainname4))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= i9 i7))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r23b i4) (<= i4 r24b)) (= newdomainname7 newdomainname5))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (not (and (<= r23b i4) (<= i4 r24b))) (= i8 (mk_int__ref i4)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (not (and (<= r23b i4) (<= i4 r24b))) (= newdomainname6 (mk_map__ref newdomainname1)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (not (and (<= r23b i4) (<= i4 r24b))) (= i9 i4))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (not (and (<= r23b i4) (<= i4 r24b))) (= newdomainname7 newdomainname1))))
(assert (=> (not (< 128 lengthoftoken1)) (= (+ endidx8 1) r26b)))
(assert (=> (not (< 128 lengthoftoken1)) (in_range1 r26b)))
(assert (=> (not (< 128 lengthoftoken1)) (= result9 i20)))
(assert (=> (not (< 128 lengthoftoken1)) (= i10 r26b)))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= temp___1627 i10))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= temp___1625 (map__content newdomainname6)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (<= 1 endidx8))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (and (and (forall ((temp___1626 Int)) (=> (and (<= 1 temp___1626) (<= temp___1626 128)) (=> (or (< 128 temp___1626) (or (< temp___1626 r26b) (<= i11 temp___1626))) (= (select newdomainname8 temp___1626) (select temp___1625 temp___1626))))) (=> (<= r26b 128) (dynamic_property1 r26b 128 i11))) (and (<= r26b i11) (<= i11 128))))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= (to_rep o8) 32))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= o9 (store newdomainname8 i11 o8)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= result10 (mk_map__ref newdomainname8)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= newdomainname9 o9))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= i11 128))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= i12 (mk_int__ref i11)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= newdomainname10 (mk_map__ref newdomainname9)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= i13 i11))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= newdomainname11 newdomainname9))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= i14 i12))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= newdomainname12 newdomainname10))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= i15 i13))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (and (<= r26b i10) (<= i10 128)) (= newdomainname13 newdomainname11))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (not (and (<= r26b i10) (<= i10 128))) (= i14 (mk_int__ref i10)))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (not (and (<= r26b i10) (<= i10 128))) (= newdomainname12 newdomainname6))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (not (and (<= r26b i10) (<= i10 128))) (= i15 i10))))
(assert (=> (not (< 128 lengthoftoken1)) (=> (not (and (<= r26b i10) (<= i10 128))) (= newdomainname13 newdomainname7))))
(assert (=> (not (< 128 lengthoftoken1)) (= i17 i14)))
(assert (=> (not (< 128 lengthoftoken1)) (= i16 i8)))
(assert (=> (not (< 128 lengthoftoken1)) (= success3 success5)))
(assert (=> (not (< 128 lengthoftoken1)) (= newdomainname14 newdomainname12)))
(assert (=> (not (< 128 lengthoftoken1)) (= i19 i15)))
(assert (=> (not (< 128 lengthoftoken1)) (= i18 i9)))
(assert (=> (not (< 128 lengthoftoken1)) (= success4 success1)))
(assert (=> (not (< 128 lengthoftoken1)) (= newdomainname15 newdomainname13)))
(assert (not (<= zlength endidx8)))
(assert (and (= o10 (+ endidx8 1)) (in_range4 (+ endidx8 1))))
(assert (= result11 (mk_int__ref begidx11)))
(assert (= begidx12 o10))
(assert (and (and (and (and (<= begidx13 endidx9) (<= begidx13 zlength)) (<= endidx9 zlength)) (=> (= foundtype9 1) (forall ((i22 Int)) (=> (and (<= begidx13 i22) (<= i22 endidx9)) (and (<= 48 (to_rep (select zonefileline i22))) (<= (to_rep (select zonefileline i22)) 57)))))) (and (and (in_range4 begidx13) (in_range4 endidx9)) (in_range3 foundtype9))))
(assert (and (= o11 (+ (- endidx9 begidx13) 1)) (in_range4 (+ (- endidx9 begidx13) 1))))
(assert (= result12 (mk_int__ref lengthoftoken1)))
(assert (= lengthoftoken2 o11))
(assert (not (< 128 lengthoftoken2)))
(assert (= begidx13 r28b))
(assert (in_range4 r28b))
(assert (= endidx9 r29b))
(assert (in_range4 r29b))
(assert (<= r28b r29b))
(assert (not (<= r29b 2147483647)))
(check-sat)
(exit)
