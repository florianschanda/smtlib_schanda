(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(define-fun dynamic_invariant ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(declare-sort descriptioni 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 150)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (descriptioni descriptioni) Bool)
(declare-const dummy4 descriptioni)
(declare-datatypes () ((descriptioni__ref (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni (descriptioni__content a))
(declare-const nodescription (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun audittypes__nodescription__aggregate_def (Int) (Array Int character))
(assert (forall ((temp___133 Int)) (forall ((temp___134 Int)) (= (select (audittypes__nodescription__aggregate_def temp___133) temp___134) (of_rep temp___133)))))
(declare-const nouser (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-fun temp___String_Literal_135 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_135 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_135 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 3)) 85)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 32)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 33)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 36)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 38)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 41)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 43)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 44)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 46)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 48)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 49)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 50)) 32)) :pattern ((temp___String_Literal_135 us_void_param)))))
(declare-sort unsigned32t 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (unsigned32t unsigned32t) Bool)
(declare-const dummy5 unsigned32t)
(declare-datatypes () ((unsigned32t__ref (mk_unsigned32t__ref (unsigned32t__content unsigned32t)))))
(define-fun unsigned32t__ref___projection ((a unsigned32t__ref)) unsigned32t (unsigned32t__content a))
(define-fun dynamic_invariant1 ((temp___expr_259 Int) (temp___is_init_256 Bool) (temp___skip_constant_257 Bool) (temp___do_toplevel_258 Bool)) Bool (=> (or (= temp___is_init_256 true) (<= 0 4294967295)) (in_range5 temp___expr_259)))
(declare-sort algorithmt 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (algorithmt algorithmt) Bool)
(declare-const dummy6 algorithmt)
(declare-datatypes () ((algorithmt__ref (mk_algorithmt__ref (algorithmt__content algorithmt)))))
(define-fun algorithmt__ref___projection ((a algorithmt__ref)) algorithmt (algorithmt__content a))
(define-fun dynamic_invariant2 ((temp___expr_742 Int) (temp___is_init_739 Bool) (temp___skip_constant_740 Bool) (temp___do_toplevel_741 Bool)) Bool (=> (or (= temp___is_init_739 true) (<= 0 10)) (in_range6 temp___expr_742)))
(declare-fun valid_numberlogentries (us_private) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool us_private) Bool)
(declare-sort rawcertificatei 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 4096)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq7 (rawcertificatei rawcertificatei) Bool)
(declare-const dummy7 rawcertificatei)
(declare-datatypes () ((rawcertificatei__ref (mk_rawcertificatei__ref (rawcertificatei__content rawcertificatei)))))
(define-fun rawcertificatei__ref___projection ((a rawcertificatei__ref)) rawcertificatei (rawcertificatei__content a))
(declare-fun to_rep2 (rawcertificatei) Int)
(declare-fun of_rep2 (Int) rawcertificatei)
(assert (forall ((x rawcertificatei)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x rawcertificatei)) (! (in_range7 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-const dummy8 (Array Int character))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq8 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__certtypes__rawdatat__rawdata (Array Int character)) (rec__certtypes__rawdatat__datalength rawcertificatei)))))
(define-fun us_split_fields_RawData__projection ((a us_split_fields)) (Array Int character) (rec__certtypes__rawdatat__rawdata a))
(define-fun us_split_fields_DataLength__projection ((a us_split_fields)) rawcertificatei (rec__certtypes__rawdatat__datalength a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (bool_eq (rec__certtypes__rawdatat__rawdata (us_split_fields1 a)) 1 4096 (rec__certtypes__rawdatat__rawdata (us_split_fields1 b)) 1 4096) true) (= (to_rep2 (rec__certtypes__rawdatat__datalength (us_split_fields1 a))) (to_rep2 (rec__certtypes__rawdatat__datalength (us_split_fields1 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const certtypes__rawdatat__rawdata__first__bit Int)
(declare-const certtypes__rawdatat__rawdata__last__bit Int)
(declare-const certtypes__rawdatat__rawdata__position Int)
(assert (<= 0 certtypes__rawdatat__rawdata__first__bit))
(assert (< certtypes__rawdatat__rawdata__first__bit certtypes__rawdatat__rawdata__last__bit))
(assert (<= 0 certtypes__rawdatat__rawdata__position))
(declare-const certtypes__rawdatat__datalength__first__bit Int)
(declare-const certtypes__rawdatat__datalength__last__bit Int)
(declare-const certtypes__rawdatat__datalength__position Int)
(assert (<= 0 certtypes__rawdatat__datalength__first__bit))
(assert (< certtypes__rawdatat__datalength__first__bit certtypes__rawdatat__datalength__last__bit))
(assert (<= 0 certtypes__rawdatat__datalength__position))
(declare-fun user_eq9 (us_rep us_rep) Bool)
(declare-const dummy9 us_rep)
(declare-datatypes () ((rawdatat__ref (mk_rawdatat__ref (rawdatat__content us_rep)))))
(define-fun rawdatat__ref___projection ((a rawdatat__ref)) us_rep (rawdatat__content a))
(declare-sort sigdatai 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 4096)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq10 (sigdatai sigdatai) Bool)
(declare-const dummy10 sigdatai)
(declare-datatypes () ((sigdatai__ref (mk_sigdatai__ref (sigdatai__content sigdatai)))))
(define-fun sigdatai__ref___projection ((a sigdatai__ref)) sigdatai (sigdatai__content a))
(declare-fun to_rep3 (sigdatai) Int)
(declare-fun of_rep3 (Int) sigdatai)
(assert (forall ((x sigdatai)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x sigdatai)) (! (in_range8 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-const dummy11 (Array Int character))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int character)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq11 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__certtypes__signaturet__sigdata (Array Int character)) (rec__certtypes__signaturet__siglength sigdatai)))))
(define-fun us_split_fields_SigData__projection ((a us_split_fields2)) (Array Int character) (rec__certtypes__signaturet__sigdata a))
(define-fun us_split_fields_SigLength__projection ((a us_split_fields2)) sigdatai (rec__certtypes__signaturet__siglength a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___8__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___9__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (bool_eq (rec__certtypes__signaturet__sigdata (us_split_fields3 a)) 1 4096 (rec__certtypes__signaturet__sigdata (us_split_fields3 b)) 1 4096) true) (= (to_rep3 (rec__certtypes__signaturet__siglength (us_split_fields3 a))) (to_rep3 (rec__certtypes__signaturet__siglength (us_split_fields3 b))))) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep1) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep1) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep1)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment4 a))))
(declare-const certtypes__signaturet__sigdata__first__bit Int)
(declare-const certtypes__signaturet__sigdata__last__bit Int)
(declare-const certtypes__signaturet__sigdata__position Int)
(assert (<= 0 certtypes__signaturet__sigdata__first__bit))
(assert (< certtypes__signaturet__sigdata__first__bit certtypes__signaturet__sigdata__last__bit))
(assert (<= 0 certtypes__signaturet__sigdata__position))
(declare-const certtypes__signaturet__siglength__first__bit Int)
(declare-const certtypes__signaturet__siglength__last__bit Int)
(declare-const certtypes__signaturet__siglength__position Int)
(assert (<= 0 certtypes__signaturet__siglength__first__bit))
(assert (< certtypes__signaturet__siglength__first__bit certtypes__signaturet__siglength__last__bit))
(assert (<= 0 certtypes__signaturet__siglength__position))
(declare-fun user_eq12 (us_rep1 us_rep1) Bool)
(declare-const dummy12 us_rep1)
(declare-datatypes () ((signaturet__ref (mk_signaturet__ref (signaturet__content us_rep1)))))
(define-fun signaturet__ref___projection ((a signaturet__ref)) us_rep1 (signaturet__content a))
(declare-const rawcertdata us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-sort returnvaluet 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 28)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq13 (returnvaluet returnvaluet) Bool)
(declare-const dummy13 returnvaluet)
(declare-datatypes () ((returnvaluet__ref (mk_returnvaluet__ref (returnvaluet__content returnvaluet)))))
(define-fun returnvaluet__ref___projection ((a returnvaluet__ref)) returnvaluet (returnvaluet__content a))
(define-fun dynamic_invariant3 ((temp___expr_1038 Int) (temp___is_init_1035 Bool) (temp___skip_constant_1036 Bool) (temp___do_toplevel_1037 Bool)) Bool (=> (or (= temp___is_init_1035 true) (<= 0 28)) (in_range9 temp___expr_1038)))
(declare-fun to_rep4 (unsigned32t) Int)
(declare-fun of_rep4 (Int) unsigned32t)
(assert (forall ((x unsigned32t)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x unsigned32t)) (! (in_range5 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-fun to_rep5 (returnvaluet) Int)
(declare-fun of_rep5 (Int) returnvaluet)
(assert (forall ((x returnvaluet)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x returnvaluet)) (! (in_range9 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-sort bytet 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq14 (bytet bytet) Bool)
(declare-const dummy14 bytet)
(declare-datatypes () ((bytet__ref (mk_bytet__ref (bytet__content bytet)))))
(define-fun bytet__ref___projection ((a bytet__ref)) bytet (bytet__content a))
(declare-fun to_rep6 (bytet) Int)
(declare-fun of_rep6 (Int) bytet)
(assert (forall ((x bytet)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x bytet)) (! (in_range10 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int bytet))))))
(declare-fun slide1 ((Array Int bytet) Int Int) (Array Int bytet))
(assert (forall ((a (Array Int bytet))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int bytet))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int bytet) Int Int (Array Int bytet) Int Int) (Array Int bytet))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (bytet Int) (Array Int bytet))
(assert (forall ((v bytet)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq4 ((a (Array Int bytet)) (a__first Int) (a__last Int) (b (Array Int bytet)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_141 Int)) (=> (and (<= a__first temp___idx_141) (<= temp___idx_141 a__last)) (= (to_rep6 (select a temp___idx_141)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_141))))))) true false))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_141 Int)) (=> (and (<= a__first temp___idx_141) (<= temp___idx_141 a__last)) (= (to_rep6 (select a temp___idx_141)) (to_rep6 (select b (+ (- b__first a__first) temp___idx_141)))))))))))
(declare-fun compare1 ((Array Int bytet) Int Int (Array Int bytet) Int Int) Int)
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq4 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq4 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep6 (select a (+ i 1))) (to_rep6 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq4 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep6 (select b (+ i 1))) (to_rep6 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const dummy15 (Array Int bytet))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int bytet)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int bytet)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int bytet)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__alignment5 a))))
(declare-fun user_eq15 ((Array Int bytet) (Array Int bytet)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__keystore__interfac__digestt__digestid unsigned32t) (rec__keystore__interfac__digestt__signreturn returnvaluet) (rec__keystore__interfac__digestt__verifyreturn returnvaluet) (rec__keystore__interfac__digestt__pad (Array Int bytet))))))
(define-fun us_split_fields_DigestID__projection ((a us_split_fields4)) unsigned32t (rec__keystore__interfac__digestt__digestid a))
(define-fun us_split_fields_SignReturn__projection ((a us_split_fields4)) returnvaluet (rec__keystore__interfac__digestt__signreturn a))
(define-fun us_split_fields_VerifyReturn__projection ((a us_split_fields4)) returnvaluet (rec__keystore__interfac__digestt__verifyreturn a))
(define-fun us_split_fields_Pad__2__projection ((a us_split_fields4)) (Array Int bytet) (rec__keystore__interfac__digestt__pad a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___11__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___12__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq5 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (and (= (to_rep4 (rec__keystore__interfac__digestt__digestid (us_split_fields5 a))) (to_rep4 (rec__keystore__interfac__digestt__digestid (us_split_fields5 b)))) (= (to_rep5 (rec__keystore__interfac__digestt__signreturn (us_split_fields5 a))) (to_rep5 (rec__keystore__interfac__digestt__signreturn (us_split_fields5 b))))) (= (to_rep5 (rec__keystore__interfac__digestt__verifyreturn (us_split_fields5 a))) (to_rep5 (rec__keystore__interfac__digestt__verifyreturn (us_split_fields5 b))))) (= (bool_eq4 (rec__keystore__interfac__digestt__pad (us_split_fields5 a)) 1 20 (rec__keystore__interfac__digestt__pad (us_split_fields5 b)) 1 20) true)) true false))
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep2) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep2) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep2)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment6 a))))
(declare-const keystore__interfac__digestt__digestid__first__bit Int)
(declare-const keystore__interfac__digestt__digestid__last__bit Int)
(declare-const keystore__interfac__digestt__digestid__position Int)
(assert (<= 0 keystore__interfac__digestt__digestid__first__bit))
(assert (< keystore__interfac__digestt__digestid__first__bit keystore__interfac__digestt__digestid__last__bit))
(assert (<= 0 keystore__interfac__digestt__digestid__position))
(declare-const keystore__interfac__digestt__signreturn__first__bit Int)
(declare-const keystore__interfac__digestt__signreturn__last__bit Int)
(declare-const keystore__interfac__digestt__signreturn__position Int)
(assert (<= 0 keystore__interfac__digestt__signreturn__first__bit))
(assert (< keystore__interfac__digestt__signreturn__first__bit keystore__interfac__digestt__signreturn__last__bit))
(assert (<= 0 keystore__interfac__digestt__signreturn__position))
(declare-const keystore__interfac__digestt__verifyreturn__first__bit Int)
(declare-const keystore__interfac__digestt__verifyreturn__last__bit Int)
(declare-const keystore__interfac__digestt__verifyreturn__position Int)
(assert (<= 0 keystore__interfac__digestt__verifyreturn__first__bit))
(assert (< keystore__interfac__digestt__verifyreturn__first__bit keystore__interfac__digestt__verifyreturn__last__bit))
(assert (<= 0 keystore__interfac__digestt__verifyreturn__position))
(declare-const keystore__interfac__digestt__pad__first__bit Int)
(declare-const keystore__interfac__digestt__pad__last__bit Int)
(declare-const keystore__interfac__digestt__pad__position Int)
(assert (<= 0 keystore__interfac__digestt__pad__first__bit))
(assert (< keystore__interfac__digestt__pad__first__bit keystore__interfac__digestt__pad__last__bit))
(assert (<= 0 keystore__interfac__digestt__pad__position))
(declare-fun user_eq16 (us_rep2 us_rep2) Bool)
(declare-const dummy16 us_rep2)
(declare-datatypes () ((digestt__ref (mk_digestt__ref (digestt__content us_rep2)))))
(define-fun digestt__ref___projection ((a digestt__ref)) us_rep2 (digestt__content a))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int Bool))))))
(declare-fun slide2 ((Array Int Bool) Int Int) (Array Int Bool))
(assert (forall ((a (Array Int Bool))) (forall ((first2 Int)) (! (= (slide2 a first2 first2) a) :pattern ((slide2 a first2 first2))))))
(assert (forall ((a (Array Int Bool))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int Bool) Int Int (Array Int Bool) Int Int) (Array Int Bool))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (Bool Int) (Array Int Bool))
(assert (forall ((v Bool)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq6 ((a (Array Int Bool)) (a__first Int) (a__last Int) (b (Array Int Bool)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_157 Int)) (=> (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last)) (= (select a temp___idx_157) (select b (+ (- b__first a__first) temp___idx_157)))))) true false))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_157 Int)) (=> (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last)) (= (select a temp___idx_157) (select b (+ (- b__first a__first) temp___idx_157))))))))))
(declare-fun compare2 ((Array Int Bool) Int Int (Array Int Bool) Int Int) Int)
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare2 a a_first a_last b b_first b_last) 0) (= (bool_eq6 a a_first a_last b b_first b_last) true)) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare2 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq6 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_int1 (select a (+ i 1))) (to_int1 (select b (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare2 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq6 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_int1 (select b (+ i 1))) (to_int1 (select a (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(declare-fun xorb ((Array Int Bool) Int Int (Array Int Bool) Int Int) (Array Int Bool))
(declare-fun andb ((Array Int Bool) Int Int (Array Int Bool) Int Int) (Array Int Bool))
(declare-fun orb ((Array Int Bool) Int Int (Array Int Bool) Int Int) (Array Int Bool))
(declare-fun notb ((Array Int Bool) Int Int) (Array Int Bool))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (orb a a_first a_last b b_first b_last) i) (or (select a i) (select b (+ (- i a_first) b_first))))) :pattern ((select (orb a a_first a_last b b_first b_last) i)))))))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (andb a a_first a_last b b_first b_last) i) (and (select a i) (select b (+ (- i a_first) b_first))))) :pattern ((select (andb a a_first a_last b b_first b_last) i)))))))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (xorb a a_first a_last b b_first b_last) i) (xor (select a i) (select b (+ (- i a_first) b_first))))) :pattern ((select (xorb a a_first a_last b b_first b_last) i)))))))
(assert (forall ((a (Array Int Bool))) (forall ((a_first Int) (a_last Int)) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (notb a a_first a_last) i) (not (select a i)))) :pattern ((select (notb a a_first a_last) i)))))))
(declare-const issystem (Array Int Bool))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-fun keystore__issystem__aggregate_def (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool) (Array Int Bool))
(assert (forall ((temp___159 Bool) (temp___160 Bool) (temp___161 Bool) (temp___162 Bool) (temp___163 Bool) (temp___164 Bool) (temp___165 Bool) (temp___166 Bool) (temp___167 Bool) (temp___168 Bool) (temp___169 Bool) (temp___170 Bool) (temp___171 Bool) (temp___172 Bool) (temp___173 Bool) (temp___174 Bool) (temp___175 Bool) (temp___176 Bool) (temp___177 Bool) (temp___178 Bool) (temp___179 Bool) (temp___180 Bool) (temp___181 Bool) (temp___182 Bool) (temp___183 Bool) (temp___184 Bool) (temp___185 Bool) (temp___186 Bool) (temp___187 Bool)) (let ((temp___158 (keystore__issystem__aggregate_def temp___159 temp___160 temp___161 temp___162 temp___163 temp___164 temp___165 temp___166 temp___167 temp___168 temp___169 temp___170 temp___171 temp___172 temp___173 temp___174 temp___175 temp___176 temp___177 temp___178 temp___179 temp___180 temp___181 temp___182 temp___183 temp___184 temp___185 temp___186 temp___187))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (select temp___158 0) temp___159) (= (select temp___158 1) temp___160)) (= (select temp___158 2) temp___161)) (= (select temp___158 3) temp___162)) (= (select temp___158 4) temp___163)) (= (select temp___158 5) temp___164)) (= (select temp___158 6) temp___165)) (= (select temp___158 7) temp___166)) (= (select temp___158 8) temp___167)) (= (select temp___158 9) temp___168)) (= (select temp___158 10) temp___169)) (= (select temp___158 11) temp___170)) (= (select temp___158 12) temp___171)) (= (select temp___158 13) temp___172)) (= (select temp___158 14) temp___173)) (= (select temp___158 15) temp___174)) (= (select temp___158 16) temp___175)) (= (select temp___158 17) temp___176)) (= (select temp___158 18) temp___177)) (= (select temp___158 19) temp___178)) (= (select temp___158 20) temp___179)) (= (select temp___158 21) temp___180)) (= (select temp___158 22) temp___181)) (= (select temp___158 23) temp___182)) (= (select temp___158 24) temp___183)) (= (select temp___158 25) temp___184)) (= (select temp___158 26) temp___185)) (= (select temp___158 27) temp___186)) (= (select temp___158 28) temp___187)))))
(declare-const mechanism Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const c135b Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const thestring us_t)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq17 (integer integer) Bool)
(declare-const dummy17 integer)
(declare-datatypes () ((t141b__ref (mk_t141b__ref (t141b__content integer)))))
(define-fun t141b__ref___projection ((a t141b__ref)) integer (t141b__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size7 Int)
(declare-fun object__size7 ((Array Int character)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int character)) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 ((Array Int character)) Int)
(assert (<= 0 value__size7))
(assert (forall ((a (Array Int character))) (<= 0 (object__size7 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment7 a))))
(define-fun bool_eq7 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq18 (us_t1 us_t1) Bool)
(declare-const dummy18 us_t1)
(declare-datatypes () ((t142b__ref (mk_t142b__ref (t142b__content us_t1)))))
(define-fun t142b__ref___projection ((a t142b__ref)) us_t1 (t142b__content a))
(declare-fun temp___1159 (Int) (Array Int character))
(assert (forall ((temp___1161 Int)) (forall ((temp___1162 Int)) (= (select (temp___1159 temp___1161) temp___1162) (of_rep temp___1161)))))
(declare-fun temp___String_Literal_1164 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (= (to_rep (select (temp___String_Literal_1164 us_void_param) 1)) 83) (= (to_rep (select (temp___String_Literal_1164 us_void_param) 2)) 105)) (= (to_rep (select (temp___String_Literal_1164 us_void_param) 3)) 103)) (= (to_rep (select (temp___String_Literal_1164 us_void_param) 4)) 110)) :pattern ((temp___String_Literal_1164 us_void_param)))))
(declare-fun temp___String_Literal_1174 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1174 us_void_param) 1)) 67) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 2)) 114)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 3)) 121)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 4)) 112)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 5)) 116)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 6)) 111)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 8)) 76)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 9)) 105)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 10)) 98)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 11)) 114)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 12)) 97)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 13)) 114)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 14)) 121)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 16)) 69)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 17)) 114)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 18)) 114)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 19)) 111)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 20)) 114)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 22)) 105)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 23)) 110)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 25)) 83)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 26)) 105)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 27)) 103)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 28)) 110)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 30)) 58)) (= (to_rep (select (temp___String_Literal_1174 us_void_param) 31)) 32)) :pattern ((temp___String_Literal_1174 us_void_param)))))
(define-fun dynamic_invariant4 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant5 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant6 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(assert (= issystem (keystore__issystem__aggregate_def (of_int 0) (of_int 1) (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1) (of_int 1))))
(assert (= mechanism 8))
(define-fun dynamic_invariant7 ((temp___expr_271 Int) (temp___is_init_268 Bool) (temp___skip_constant_269 Bool) (temp___do_toplevel_270 Bool)) Bool (=> (or (= temp___is_init_268 true) (<= 0 255)) (in_range10 temp___expr_271)))
(define-fun dynamic_invariant8 ((temp___expr_880 Int) (temp___is_init_877 Bool) (temp___skip_constant_878 Bool) (temp___do_toplevel_879 Bool)) Bool (=> (or (= temp___is_init_877 true) (<= 1 4096)) (in_range7 temp___expr_880)))
(define-fun dynamic_invariant9 ((temp___expr_912 Int) (temp___is_init_909 Bool) (temp___skip_constant_910 Bool) (temp___do_toplevel_911 Bool)) Bool (=> (or (= temp___is_init_909 true) (<= 1 4096)) (in_range8 temp___expr_912)))
(define-fun dynamic_invariant10 ((temp___expr_217 Int) (temp___is_init_214 Bool) (temp___skip_constant_215 Bool) (temp___do_toplevel_216 Bool)) Bool (=> (or (= temp___is_init_214 true) (<= 1 150)) (in_range4 temp___expr_217)))
(assert (= nodescription (audittypes__nodescription__aggregate_def 32)))
(assert (= nouser (temp___String_Literal_135 Tuple0)))
(assert true)
(declare-const signed Bool)
(declare-const theprivatekeyh Int)
(declare-const retval Int)
(declare-const result__ (Array Int character))
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const keystore__sign__B139b__thestring__assume (Array Int character))
(declare-const keystore__sign__B139b__thestring__assume1 t)
(declare-const o6 Int)
(declare-const digested Bool)
(declare-const theprivatekeyh1 Int)
(declare-const retval1 Int)
(declare-const result Bool)
(declare-const signed1 Bool)
(declare-const result1 (Array Int character))
(declare-const result__1 (Array Int character))
(declare-const result2 Bool)
(assert (= (keystore__issystem__aggregate_def (of_int 0) (of_int 1) (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1) (of_int 0) (of_int 0) (of_int 0) (of_int 0) (of_int 1) (of_int 1) (of_int 1)) issystem))
(assert (= (audittypes__nodescription__aggregate_def 32) nodescription))
(assert (= (temp___String_Literal_135 Tuple0) nouser))
(assert (in_range6 mechanism))
(assert (=> (<= 0 4294967295) (in_range5 theprivatekeyh)))
(assert (=> (<= 0 28) (in_range9 retval)))
(assert (= digested true))
(assert (in_range5 theprivatekeyh1))
(assert (in_range9 retval1))
(assert (= result signed))
(assert (= signed1 (ite (= retval1 0) true false)))
(assert (= (select issystem retval1) true))
(assert (= retval1 c135b))
(assert (in_range9 c135b))
(assert (= (mk_map__ref result1) (mk_map__ref result__)))
(assert (= result__1 nodescription))
(assert (=> (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE9 c135b))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE9 c135b)))))) (= o (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE9 c135b))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE9 c135b)))))) 1))))
(assert (=> (not (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE9 c135b))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE9 c135b))))))) (= o 0)))
(assert (=> (<= 1 31) (= o1 (+ (- 31 1) 1))))
(assert (=> (not (<= 1 31)) (= o1 0)))
(assert (= o2 (+ o1 o)))
(assert (= o3 (+ 1 o2)))
(assert (= o4 (- o3 1)))
(assert (and (= o5 o4) (in_range2 o4)))
(assert (= (concat1 (temp___String_Literal_1174 Tuple0) 1 31 (elts (to_string (attr__ATTRIBUTE_IMAGE9 c135b))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE9 c135b))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE9 c135b)))))) keystore__sign__B139b__thestring__assume))
(assert (= (mk 1 o5) keystore__sign__B139b__thestring__assume1))
(assert (= (mk___t keystore__sign__B139b__thestring__assume keystore__sign__B139b__thestring__assume1) thestring))
(assert (dynamic_invariant thestring true false true))
(assert (and (= o6 (length thestring)) (in_range1 (length thestring))))
(assert (= result2 (ite (<= o6 150) true false)))
(assert (= result2 true))
(assert (not (= (ite (<= (to_rep1 (first (rt thestring))) (to_rep1 (last (rt thestring)))) (+ (- (to_rep1 (last (rt thestring))) (to_rep1 (first (rt thestring)))) 1) 0) (ite (<= 1 (length thestring)) (+ (- (length thestring) 1) 1) 0))))
(check-sat)
(exit)
