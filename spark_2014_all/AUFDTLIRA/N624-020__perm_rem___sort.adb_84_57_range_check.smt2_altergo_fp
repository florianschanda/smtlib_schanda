(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type natural

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref___projection(a: natural__ref) : natural =
  (a).natural__content

logic to_rep : natural -> int

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type positive

predicate in_range3(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : positive, positive -> bool

logic dummy2 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type true_bool

predicate in_range4(x: int) = ((1 <= x) and (x <= 1))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : true_bool, true_bool -> bool

logic dummy3 : true_bool

type true_bool__ref = { true_bool__content : true_bool
}

function true_bool__ref___projection(a: true_bool__ref) : true_bool =
  (a).true_bool__content

type index

predicate in_range5(x: int) = ((1 <= x) and (x <= 100))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq4 : index, index -> bool

logic dummy4 : index

type index__ref = { index__content : index
}

function index__ref___projection(a: index__ref) : index = (a).index__content

type map__ref = { map__content : (int,natural) farray
}

logic slide : (int,natural) farray, int, int -> (int,natural) farray

axiom slide_eq :
  (forall a:(int,natural) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,natural) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq7 : (int,natural) farray, int, int, (int,natural) farray, int,
  int -> bool

axiom bool_eq_def6 :
  (forall a:(int,natural) farray. forall a__first:int. forall a__last:int.
  forall b:(int,natural) farray. forall b__first:int. forall b__last:int
  [bool_eq7(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_154:int. ((((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) and
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))) or
  (not ((a__first <= temp___idx_154) and (temp___idx_154 <= a__last)))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)]))))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range5(low) and in_range5(high)))))

type us_t = { elts : (int,natural) farray; rt : t
}

function to_array(a: us_t) : (int,natural) farray = (a).elts

function of_array(a: (int,natural) farray, f: int, l: int) : us_t = { elts =
  a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,natural) farray -> int

logic value__component__size : int

logic object__component__size : (int,natural) farray -> int

logic value__alignment : int

logic object__alignment : (int,natural) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,natural) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,natural) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,natural) farray. (0 <= object__alignment(a)))

function bool_eq8(x: us_t, y: us_t) : bool = bool_eq7((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq5 : us_t, us_t -> bool

logic dummy5 : (int,natural) farray

logic dummy6 : t

type nat_array__ref = { nat_array__content : us_t
}

function nat_array__ref___projection(a: nat_array__ref) : us_t =
  (a).nat_array__content

logic remove : us_t, int -> us_t

logic remove__function_guard : us_t, us_t, int -> prop

logic invariant__ : us_t -> bool

logic invariant____function_guard : bool, us_t -> prop

axiom remove__post_axiom :
  (forall a:(int,natural) farray. forall a1:t.
  (forall i:int [remove({ elts = a; rt = a1 }, i)]. ((in_range5(i) and
  ((invariant__({ elts = a; rt = a1 }) = true) and
  ((to_rep1(first(a1)) <= i) and (i <= to_rep1(last(a1)))))) ->
  (((invariant__(remove({ elts = a; rt = a1 }, i)) = true) and
  ((to_rep1(last((remove({ elts = a; rt = a1 },
  i)).rt)) = (to_rep1(last(a1)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (i - 1))) ->
   (to_rep((a[k])) = to_rep(((remove({ elts = a; rt = a1 }, i)).elts[k]))))) and
  ((forall k:int. ((((i + 1) <= k) and (k <= to_rep1(last(a1)))) ->
   (to_rep((a[k])) = to_rep(((remove({ elts = a; rt = a1 },
   i)).elts[(k - 1)]))))) and
  (forall k:int. (((i <= k) and (k <= (to_rep1(last(a1)) - 1))) ->
  (to_rep((a[(k + 1)])) = to_rep(((remove({ elts = a; rt = a1 },
  i)).elts[k]))))))))) and dynamic_property(1, 100, to_rep1(first((remove({
  elts = a; rt = a1 }, i)).rt)), to_rep1(last((remove({ elts = a; rt = a1 },
  i)).rt)))))))

logic remove_swap : us_t, int, int -> int

logic remove_swap__function_guard : int, us_t, int, int -> prop

axiom remove_swap__post_axiom :
  (forall a:(int,natural) farray. forall a1:t.
  (forall i1:int. forall i2:int [remove_swap({ elts = a; rt = a1 }, i1, i2)].
  (((in_range5(i1) and in_range5(i2)) and ((invariant__({ elts = a; rt = a1
  }) = true) and (((to_rep1(first(a1)) <= i1) and
  (i1 <= to_rep1(last(a1)))) and (((to_rep1(first(a1)) <= i2) and
  (i2 <= to_rep1(last(a1)))) and (i1 <  i2))))) -> (((of_int(remove_swap({
  elts = a; rt = a1 }, i1, i2)) = true) -> (bool_eq7((remove(remove({ elts =
  a; rt = a1 }, i1), (i2 - 1))).elts, to_rep1(first((remove(remove({ elts =
  a; rt = a1 }, i1), (i2 - 1))).rt)), to_rep1(last((remove(remove({ elts = a;
  rt = a1 }, i1), (i2 - 1))).rt)), (remove(remove({ elts = a; rt = a1 }, i2),
  i1)).elts, to_rep1(first((remove(remove({ elts = a; rt = a1 }, i2),
  i1)).rt)), to_rep1(last((remove(remove({ elts = a; rt = a1 }, i2),
  i1)).rt))) = true)) and in_range4(remove_swap({ elts = a; rt = a1 }, i1,
  i2))))))

logic remove_eq : us_t, us_t, int -> int

logic remove_eq__function_guard : int, us_t, us_t, int -> prop

axiom remove_eq__post_axiom :
  (forall a:(int,natural) farray. forall a1:t. forall b:(int,natural) farray.
  forall b1:t.
  (forall i:int [remove_eq({ elts = a; rt = a1 }, { elts = b; rt = b1 }, i)].
  ((in_range5(i) and ((invariant__({ elts = a; rt = a1 }) = true) and
  ((invariant__({ elts = b; rt = b1 }) = true) and
  (((to_rep1(first(a1)) <= i) and (i <= to_rep1(last(a1)))) and (bool_eq7(a,
  to_rep1(first(a1)), to_rep1(last(a1)), b, to_rep1(first(b1)),
  to_rep1(last(b1))) = true))))) -> (((of_int(remove_eq({ elts = a; rt = a1
  }, { elts = b; rt = b1 }, i)) = true) -> (bool_eq7((remove({ elts = a; rt =
  a1 }, i)).elts, to_rep1(first((remove({ elts = a; rt = a1 }, i)).rt)),
  to_rep1(last((remove({ elts = a; rt = a1 }, i)).rt)), (remove({ elts = b;
  rt = b1 }, i)).elts, to_rep1(first((remove({ elts = b; rt = b1 }, i)).rt)),
  to_rep1(last((remove({ elts = b; rt = b1 }, i)).rt))) = true)) and
  in_range4(remove_eq({ elts = a; rt = a1 }, { elts = b; rt = b1 }, i))))))

logic is_perm : us_t, us_t -> bool

logic is_perm__function_guard : bool, us_t, us_t -> prop

axiom is_perm__def_axiom :
  (forall a:(int,natural) farray. forall a1:t. forall b:(int,natural) farray.
  forall b1:t [is_perm({ elts = a; rt = a1 }, { elts = b; rt = b1 })].
  ((is_perm({ elts = a; rt = a1 }, { elts = b; rt = b1 }) = true) <->
  (((length({ elts = a; rt = a1 }) = 0) and (length({ elts = b; rt = b1
  }) = 0)) or
  (exists ia:int. (((to_rep1(first(a1)) <= ia) and
  (ia <= to_rep1(last(a1)))) and
  (exists ib:int. (((to_rep1(first(b1)) <= ib) and
  (ib <= to_rep1(last(b1)))) and ((to_rep((a[ia])) = to_rep((b[ib]))) and
  (is_perm(remove({ elts = a; rt = a1 }, ia), remove({ elts = b; rt = b1 },
  ib)) = true)))))))))

logic perm_reflexive : us_t, us_t -> int

logic perm_reflexive__function_guard : int, us_t, us_t -> prop

axiom perm_reflexive__post_axiom :
  (forall a:(int,natural) farray. forall a1:t. forall b:(int,natural) farray.
  forall b1:t [perm_reflexive({ elts = a; rt = a1 }, { elts = b; rt = b1 })].
  (((invariant__({ elts = a; rt = a1 }) = true) and ((invariant__({ elts = b;
  rt = b1 }) = true) and (bool_eq7(a, to_rep1(first(a1)), to_rep1(last(a1)),
  b, to_rep1(first(b1)), to_rep1(last(b1))) = true))) ->
  (((of_int(perm_reflexive({ elts = a; rt = a1 }, { elts = b; rt = b1
  })) = true) -> (is_perm({ elts = a; rt = a1 }, { elts = b; rt = b1
  }) = true)) and in_range4(perm_reflexive({ elts = a; rt = a1 }, { elts = b;
  rt = b1 })))))

logic perm_transitive : us_t, us_t, us_t -> int

logic perm_transitive__function_guard : int, us_t, us_t, us_t -> prop

axiom perm_transitive__post_axiom :
  (forall a:(int,natural) farray. forall a1:t. forall b:(int,natural) farray.
  forall b1:t. forall c:(int,natural) farray. forall c1:t [perm_transitive({
  elts = a; rt = a1 }, { elts = b; rt = b1 }, { elts = c; rt = c1 })].
  (((invariant__({ elts = a; rt = a1 }) = true) and ((invariant__({ elts = b;
  rt = b1 }) = true) and ((invariant__({ elts = c; rt = c1 }) = true) and
  ((is_perm({ elts = a; rt = a1 }, { elts = b; rt = b1 }) = true) and
  (is_perm({ elts = b; rt = b1 }, { elts = c; rt = c1 }) = true))))) ->
  (((of_int(perm_transitive({ elts = a; rt = a1 }, { elts = b; rt = b1 }, {
  elts = c; rt = c1 })) = true) -> (is_perm({ elts = a; rt = a1 }, { elts =
  c; rt = c1 }) = true)) and in_range4(perm_transitive({ elts = a; rt = a1 },
  { elts = b; rt = b1 }, { elts = c; rt = c1 })))))

type tarray_typeP1

predicate in_range6(x: int) = ((1 <= x) and (x <= 100))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : tarray_typeP1, tarray_typeP1 -> bool

logic dummy7 : tarray_typeP1

type tarray_typeP1__ref = { tarray_typeP1__content : tarray_typeP1
}

function tarray_typeP1__ref___projection(a: tarray_typeP1__ref) : tarray_typeP1 =
  (a).tarray_typeP1__content

logic attr__ATTRIBUTE_ADDRESS : int

logic x : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic y : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic init : (int,natural) farray

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

axiom invariant____post_axiom : true

axiom invariant____def_axiom :
  (forall a:(int,natural) farray. forall a1:t [invariant__({ elts = a; rt =
  a1 })]. ((invariant__({ elts = a; rt = a1 }) = true) <->
  ((to_rep1(first(a1)) = 1) and (0 <= to_rep1(last(a1))))))

 (* File "sort.ads", line 4, characters 0-0 *)
goal WP_parameter_def :
  (forall values:(int,natural) farray. forall temp:int.
  forall interm:(int,natural) farray. forall hr:int. forall hr1:int.
  forall o:int. forall o1:natural. forall o2:int. forall o3:int.
  forall o4:natural. forall o5:int. forall o6:natural. forall o7:int.
  forall o8:(int,natural) farray. forall o9:int. forall o10:natural.
  forall o11:int. forall o12:(int,natural) farray. forall o13:int.
  forall o14:us_t. forall o15:int. forall o16:us_t. forall o17:int.
  forall o18:us_t. forall o19:int. forall o20:us_t. forall o21:int.
  forall o22:int. forall o23:int. forall o24:int. forall o25:int.
  forall o26:us_t. forall o27:int. forall o28:us_t. forall o29:int.
  forall o30:us_t. forall o31:int. forall o32:us_t. forall o33:int.
  forall o34:int. forall o35:int. forall o36:us_t. forall o37:int.
  forall o38:us_t. forall result:int__ref. forall temp1:int.
  forall result1:map__ref. forall values1:(int,natural) farray.
  forall result2:map__ref. forall interm1:(int,natural) farray.
  forall result3:map__ref. forall values2:(int,natural) farray.
  forall result4:int__ref. forall hr2:int. forall result5:int__ref.
  forall hr3:int. forall result6:int__ref. forall hr4:int. (in_range3(x) ->
  (in_range3(y) -> ((((1 <= x) and (x <= 100)) and (((1 <= y) and
  (y <= 100)) and (not (x = y)))) -> ((((- 2147483648) <= 2147483647) ->
  in_range1(temp)) -> ((values = init) -> (((1 <= 1) -> in_range4(hr)) ->
  (((((((1 <= x) and (x <= 100)) and (o = x)) and (o1 = (values[o]))) and
  (o2 = to_rep(o1))) and ((result = { int__content = temp }) and
  (temp1 = o2))) -> (((((((((1 <= y) and (y <= 100)) and (o3 = y)) and
  (o4 = (values[o3]))) and (o5 = to_rep(o4))) and (to_rep(o6) = o5)) and
  ((((1 <= x) and (x <= 100)) and (o7 = x)) and
  (o8 = (values[o7 <- o6])))) and ((result1 = { map__content = values }) and
  (values1 = o8))) -> (((result2 = { map__content = interm }) and
  (interm1 = values1)) -> ((bool_eq7((remove({ elts = init; rt = mk(1, 100)
  }, x)).elts, to_rep1(first((remove({ elts = init; rt = mk(1, 100) },
  x)).rt)), to_rep1(last((remove({ elts = init; rt = mk(1, 100) }, x)).rt)),
  (remove({ elts = interm1; rt = mk(1, 100) }, x)).elts,
  to_rep1(first((remove({ elts = interm1; rt = mk(1, 100) }, x)).rt)),
  to_rep1(last((remove({ elts = interm1; rt = mk(1, 100) },
  x)).rt))) = true) -> ((((((o9 = temp1) and in_range2(temp1)) and
  (to_rep(o10) = o9)) and ((((1 <= y) and (y <= 100)) and (o11 = y)) and
  (o12 = (values1[o11 <- o10])))) and ((result3 = { map__content = values1
  }) and (values2 = o12))) -> ((bool_eq7((remove({ elts = interm1; rt = mk(1,
  100) }, y)).elts, to_rep1(first((remove({ elts = interm1; rt = mk(1, 100)
  }, y)).rt)), to_rep1(last((remove({ elts = interm1; rt = mk(1, 100) },
  y)).rt)), (remove({ elts = values2; rt = mk(1, 100) }, y)).elts,
  to_rep1(first((remove({ elts = values2; rt = mk(1, 100) }, y)).rt)),
  to_rep1(last((remove({ elts = values2; rt = mk(1, 100) },
  y)).rt))) = true) -> ((not (y <  x)) -> ((((1 <= 1) -> in_range4(hr1)) and
  (bool_eq7((remove(remove({ elts = init; rt = mk(1, 100) }, x),
  (y - 1))).elts, to_rep1(first((remove(remove({ elts = init; rt = mk(1, 100)
  }, x), (y - 1))).rt)), to_rep1(last((remove(remove({ elts = init; rt =
  mk(1, 100) }, x), (y - 1))).rt)), (remove(remove({ elts = values2; rt =
  mk(1, 100) }, x), (y - 1))).elts, to_rep1(first((remove(remove({ elts =
  values2; rt = mk(1, 100) }, x), (y - 1))).rt)),
  to_rep1(last((remove(remove({ elts = values2; rt = mk(1, 100) }, x),
  (y - 1))).rt))) = true)) -> ((((((o19 = (y - 1)) and
  in_range5((y - 1))) and ((((o17 = x) and in_range5(x)) and ((o18 = remove({
  elts = values2; rt = mk(1, 100) }, o17)) and (dynamic_property(1, 100,
  to_rep1(first((o18).rt)), to_rep1(last((o18).rt))) and
  ((invariant__(o18) = true) and
  ((to_rep1(last((o18).rt)) = (to_rep1(last(mk(1, 100))) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o17 - 1))) ->
   (to_rep((values2[k])) = to_rep(((o18).elts[k]))))) and
  ((forall k:int. ((((o17 + 1) <= k) and (k <= to_rep1(last(mk(1, 100))))) ->
   (to_rep((values2[k])) = to_rep(((o18).elts[(k - 1)]))))) and
  (forall k:int. (((o17 <= k) and (k <= (to_rep1(last(mk(1, 100))) - 1))) ->
  (to_rep((values2[(k + 1)])) = to_rep(((o18).elts[k])))))))))))) and
  ((o20 = remove(o18, o19)) and (dynamic_property(1, 100,
  to_rep1(first((o20).rt)), to_rep1(last((o20).rt))) and
  ((invariant__(o20) = true) and
  ((to_rep1(last((o20).rt)) = (to_rep1(last((o18).rt)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o19 - 1))) ->
   (to_rep(((o18).elts[k])) = to_rep(((o20).elts[k]))))) and
  ((forall k:int. ((((o19 + 1) <= k) and (k <= to_rep1(last((o18).rt)))) ->
   (to_rep(((o18).elts[k])) = to_rep(((o20).elts[(k - 1)]))))) and
  (forall k:int. (((o19 <= k) and (k <= (to_rep1(last((o18).rt)) - 1))) ->
  (to_rep(((o18).elts[(k + 1)])) = to_rep(((o20).elts[k]))))))))))))) and
  ((((o15 = (y - 1)) and in_range5((y - 1))) and ((((o13 = x) and
  in_range5(x)) and ((o14 = remove({ elts = init; rt = mk(1, 100) },
  o13)) and (dynamic_property(1, 100, to_rep1(first((o14).rt)),
  to_rep1(last((o14).rt))) and ((invariant__(o14) = true) and
  ((to_rep1(last((o14).rt)) = (to_rep1(last(mk(1, 100))) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o13 - 1))) ->
   (to_rep((init[k])) = to_rep(((o14).elts[k]))))) and
  ((forall k:int. ((((o13 + 1) <= k) and (k <= to_rep1(last(mk(1, 100))))) ->
   (to_rep((init[k])) = to_rep(((o14).elts[(k - 1)]))))) and
  (forall k:int. (((o13 <= k) and (k <= (to_rep1(last(mk(1, 100))) - 1))) ->
  (to_rep((init[(k + 1)])) = to_rep(((o14).elts[k])))))))))))) and
  ((o16 = remove(o14, o15)) and (dynamic_property(1, 100,
  to_rep1(first((o16).rt)), to_rep1(last((o16).rt))) and
  ((invariant__(o16) = true) and
  ((to_rep1(last((o16).rt)) = (to_rep1(last((o14).rt)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o15 - 1))) ->
   (to_rep(((o14).elts[k])) = to_rep(((o16).elts[k]))))) and
  ((forall k:int. ((((o15 + 1) <= k) and (k <= to_rep1(last((o14).rt)))) ->
   (to_rep(((o14).elts[k])) = to_rep(((o16).elts[(k - 1)]))))) and
  (forall k:int. (((o15 <= k) and (k <= (to_rep1(last((o14).rt)) - 1))) ->
  (to_rep(((o14).elts[(k + 1)])) = to_rep(((o16).elts[k]))))))))))))) and
  ((o21 = perm_reflexive(o16, o20)) and (in_range4(o21) and
  ((of_int(o21) = true) -> (is_perm(o16, o20) = true)))))) and ((result4 = {
  int__content = hr }) and (hr2 = o21))) -> (((((o23 = y) and
  in_range5(y)) and (((o22 = x) and in_range5(x)) and ((o24 = remove_swap({
  elts = values2; rt = mk(1, 100) }, o22, o23)) and (in_range4(o24) and
  ((of_int(o24) = true) -> (bool_eq7((remove(remove({ elts = values2; rt =
  mk(1, 100) }, o22), (o23 - 1))).elts, to_rep1(first((remove(remove({ elts =
  values2; rt = mk(1, 100) }, o22), (o23 - 1))).rt)),
  to_rep1(last((remove(remove({ elts = values2; rt = mk(1, 100) }, o22),
  (o23 - 1))).rt)), (remove(remove({ elts = values2; rt = mk(1, 100) }, o23),
  o22)).elts, to_rep1(first((remove(remove({ elts = values2; rt = mk(1, 100)
  }, o23), o22)).rt)), to_rep1(last((remove(remove({ elts = values2; rt =
  mk(1, 100) }, o23), o22)).rt))) = true)))))) and ((result5 = {
  int__content = hr2 }) and (hr3 = o24))) -> ((((((o31 = x) and
  in_range5(x)) and ((((o29 = y) and in_range5(y)) and ((o30 = remove({
  elts = values2; rt = mk(1, 100) }, o29)) and (dynamic_property(1, 100,
  to_rep1(first((o30).rt)), to_rep1(last((o30).rt))) and
  ((invariant__(o30) = true) and
  ((to_rep1(last((o30).rt)) = (to_rep1(last(mk(1, 100))) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o29 - 1))) ->
   (to_rep((values2[k])) = to_rep(((o30).elts[k]))))) and
  ((forall k:int. ((((o29 + 1) <= k) and (k <= to_rep1(last(mk(1, 100))))) ->
   (to_rep((values2[k])) = to_rep(((o30).elts[(k - 1)]))))) and
  (forall k:int. (((o29 <= k) and (k <= (to_rep1(last(mk(1, 100))) - 1))) ->
  (to_rep((values2[(k + 1)])) = to_rep(((o30).elts[k])))))))))))) and
  ((o32 = remove(o30, o31)) and (dynamic_property(1, 100,
  to_rep1(first((o32).rt)), to_rep1(last((o32).rt))) and
  ((invariant__(o32) = true) and
  ((to_rep1(last((o32).rt)) = (to_rep1(last((o30).rt)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o31 - 1))) ->
   (to_rep(((o30).elts[k])) = to_rep(((o32).elts[k]))))) and
  ((forall k:int. ((((o31 + 1) <= k) and (k <= to_rep1(last((o30).rt)))) ->
   (to_rep(((o30).elts[k])) = to_rep(((o32).elts[(k - 1)]))))) and
  (forall k:int. (((o31 <= k) and (k <= (to_rep1(last((o30).rt)) - 1))) ->
  (to_rep(((o30).elts[(k + 1)])) = to_rep(((o32).elts[k]))))))))))))) and
  ((((o27 = (y - 1)) and in_range5((y - 1))) and ((((o25 = x) and
  in_range5(x)) and ((o26 = remove({ elts = values2; rt = mk(1, 100) },
  o25)) and (dynamic_property(1, 100, to_rep1(first((o26).rt)),
  to_rep1(last((o26).rt))) and ((invariant__(o26) = true) and
  ((to_rep1(last((o26).rt)) = (to_rep1(last(mk(1, 100))) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o25 - 1))) ->
   (to_rep((values2[k])) = to_rep(((o26).elts[k]))))) and
  ((forall k:int. ((((o25 + 1) <= k) and (k <= to_rep1(last(mk(1, 100))))) ->
   (to_rep((values2[k])) = to_rep(((o26).elts[(k - 1)]))))) and
  (forall k:int. (((o25 <= k) and (k <= (to_rep1(last(mk(1, 100))) - 1))) ->
  (to_rep((values2[(k + 1)])) = to_rep(((o26).elts[k])))))))))))) and
  ((o28 = remove(o26, o27)) and (dynamic_property(1, 100,
  to_rep1(first((o28).rt)), to_rep1(last((o28).rt))) and
  ((invariant__(o28) = true) and
  ((to_rep1(last((o28).rt)) = (to_rep1(last((o26).rt)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o27 - 1))) ->
   (to_rep(((o26).elts[k])) = to_rep(((o28).elts[k]))))) and
  ((forall k:int. ((((o27 + 1) <= k) and (k <= to_rep1(last((o26).rt)))) ->
   (to_rep(((o26).elts[k])) = to_rep(((o28).elts[(k - 1)]))))) and
  (forall k:int. (((o27 <= k) and (k <= (to_rep1(last((o26).rt)) - 1))) ->
  (to_rep(((o26).elts[(k + 1)])) = to_rep(((o28).elts[k]))))))))))))) and
  ((o33 = perm_reflexive(o28, o32)) and (in_range4(o33) and
  ((of_int(o33) = true) -> (is_perm(o28, o32) = true)))))) and ((result6 = {
  int__content = hr3 }) and (hr4 = o33))) -> ((((o37 = x) and
  in_range5(x)) and ((((o35 = y) and in_range5(y)) and ((o36 = remove({
  elts = values2; rt = mk(1, 100) }, o35)) and (dynamic_property(1, 100,
  to_rep1(first((o36).rt)), to_rep1(last((o36).rt))) and
  ((invariant__(o36) = true) and
  ((to_rep1(last((o36).rt)) = (to_rep1(last(mk(1, 100))) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o35 - 1))) ->
   (to_rep((values2[k])) = to_rep(((o36).elts[k]))))) and
  ((forall k:int. ((((o35 + 1) <= k) and (k <= to_rep1(last(mk(1, 100))))) ->
   (to_rep((values2[k])) = to_rep(((o36).elts[(k - 1)]))))) and
  (forall k:int. (((o35 <= k) and (k <= (to_rep1(last(mk(1, 100))) - 1))) ->
  (to_rep((values2[(k + 1)])) = to_rep(((o36).elts[k])))))))))))) and
  ((o38 = remove(o36, o37)) and (dynamic_property(1, 100,
  to_rep1(first((o38).rt)), to_rep1(last((o38).rt))) and
  ((invariant__(o38) = true) and
  ((to_rep1(last((o38).rt)) = (to_rep1(last((o36).rt)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o37 - 1))) ->
   (to_rep(((o36).elts[k])) = to_rep(((o38).elts[k]))))) and
  ((forall k:int. ((((o37 + 1) <= k) and (k <= to_rep1(last((o36).rt)))) ->
   (to_rep(((o36).elts[k])) = to_rep(((o38).elts[(k - 1)]))))) and
  (forall k:int. (((o37 <= k) and (k <= (to_rep1(last((o36).rt)) - 1))) ->
  (to_rep(((o36).elts[(k + 1)])) = to_rep(((o38).elts[k]))))))))))))) ->
  (((o34 = (y - 1)) and in_range5((y - 1))) ->
  in_range5(x)))))))))))))))))))))
