(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq1 : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq5 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def4 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_78:int. ((((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) and
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))) or
  (not ((a__first <= temp___idx_78) and (temp___idx_78 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))))))))

logic compare : (int,character) farray, int, int, (int,character) farray,
  int, int -> int

axiom compare_def_eq :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq5(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq5(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq5(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,character) farray -> int

logic value__component__size : int

logic object__component__size : (int,character) farray -> int

logic value__alignment : int

logic object__alignment : (int,character) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,character) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,character) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,character) farray. (0 <= object__alignment(a)))

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : (int,character) farray

logic dummy4 : t

logic to_string : us_image -> us_t

logic from_string : us_t -> us_image

type string__ref = { string__content : us_t
}

function string__ref___projection(a: string__ref) : us_t =
  (a).string__content

logic is_digit : int -> bool

logic is_digit__function_guard : bool, int -> prop

axiom is_digit__post_axiom :
  (forall c:int [is_digit(c)]. (in_range3(c) -> (((c = 48) ->
  (is_digit(c) = true)) and ((not (c = 48)) -> (((c = 49) ->
  (is_digit(c) = true)) and ((not (c = 49)) -> (((c = 50) ->
  (is_digit(c) = true)) and ((not (c = 50)) -> (((c = 51) ->
  (is_digit(c) = true)) and ((not (c = 51)) -> (((c = 52) ->
  (is_digit(c) = true)) and ((not (c = 52)) -> (((c = 53) ->
  (is_digit(c) = true)) and ((not (c = 53)) -> (((c = 54) ->
  (is_digit(c) = true)) and ((not (c = 54)) -> (((c = 55) ->
  (is_digit(c) = true)) and ((not (c = 55)) -> (((c = 56) ->
  (is_digit(c) = true)) and ((not (c = 56)) -> (((c = 57) ->
  (is_digit(c) = true)) and ((not (c = 57)) -> (((57 <  c) ->
  (not (is_digit(c) = true))) and ((not (57 <  c)) -> ((c <  48) ->
  (not (is_digit(c) = true)))))))))))))))))))))))))))

logic source : (int,character) farray

logic source1 : t

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic target : int

logic has_failed : bool

logic index : int

logic us : int

logic o : int

logic o1 : bool

logic o2 : bool

logic temp___1082 : int

logic o3 : int

logic o4 : character

logic o5 : int

logic temp___1083 : int

logic o6 : int

logic o7 : character

logic o8 : int

logic temp___1084 : int

logic o9 : int

logic o10 : character

logic o11 : int

logic temp___1085 : int

logic o12 : int

logic o13 : character

logic o14 : int

logic temp___1086 : int

logic o15 : int

logic o16 : character

logic o17 : int

logic temp___1087 : int

logic o18 : int

logic o19 : character

logic o20 : int

logic temp___1088 : int

logic o21 : int

logic o22 : character

logic o23 : int

logic temp___1089 : int

logic o24 : int

logic o25 : character

logic o26 : int

logic temp___1090 : int

logic o27 : int

logic o28 : character

logic o29 : int

logic temp___1091 : int

logic o30 : int

logic o31 : character

logic o32 : int

logic temp___1092 : int

logic o33 : int

logic o34 : character

logic o35 : int

logic temp___1093 : int

logic o36 : int

logic o37 : character

logic o38 : int

logic temp___1094 : int

logic o39 : int

logic o40 : character

logic o41 : int

logic temp___1095 : int

logic o42 : int

logic o43 : character

logic o44 : int

logic temp___1096 : int

logic o45 : int

logic o46 : character

logic o47 : int

logic temp___1097 : int

logic o48 : int

logic o49 : character

logic o50 : int

logic temp___1098 : int

logic o51 : int

logic o52 : character

logic o53 : int

logic temp___1099 : int

logic o54 : int

logic o55 : character

logic o56 : int

logic temp___1100 : int

logic o57 : int

logic o58 : character

logic o59 : int

logic temp___1101 : int

logic temp___1102 : int

logic o60 : int

logic o61 : character

logic o62 : int

logic o63 : bool

logic temp___1103 : int

logic o64 : int

logic o65 : character

logic o66 : int

logic o67 : bool

logic temp___1104 : int

logic o68 : int

logic o69 : character

logic o70 : int

logic o71 : bool

logic temp___1105 : int

logic o72 : int

logic o73 : character

logic o74 : int

logic o75 : bool

logic temp___1106 : int

logic o76 : int

logic o77 : character

logic o78 : int

logic o79 : bool

logic temp___1107 : int

logic o80 : int

logic o81 : character

logic o82 : int

logic o83 : bool

logic temp___1108 : int

logic o84 : int

logic o85 : character

logic o86 : int

logic o87 : bool

logic temp___1109 : int

logic o88 : int

logic o89 : character

logic o90 : int

logic o91 : bool

logic temp___1110 : int

logic o92 : int

logic o93 : character

logic o94 : int

logic o95 : bool

logic temp___1111 : int

logic o96 : int

logic o97 : character

logic o98 : int

logic temp___1112 : int

logic o99 : int

logic o100 : character

logic o101 : int

logic o102 : bool

logic o103 : bool

logic temp___1113 : int

logic o104 : int

logic o105 : character

logic o106 : int

logic o107 : bool

logic o108 : bool

logic temp___1114 : int

logic o109 : int

logic o110 : character

logic o111 : int

logic o112 : bool

logic o113 : bool

logic temp___1115 : int

logic o114 : int

logic o115 : character

logic o116 : int

logic o117 : bool

logic o118 : bool

logic temp___1116 : int

logic o119 : int

logic o120 : character

logic o121 : int

logic o122 : bool

logic o123 : bool

logic temp___1117 : int

logic o124 : int

logic o125 : character

logic o126 : int

logic o127 : bool

logic o128 : bool

logic temp___1118 : int

logic o129 : int

logic o130 : character

logic o131 : int

logic o132 : bool

logic o133 : bool

logic temp___1119 : int

logic o134 : int

logic o135 : character

logic o136 : int

logic o137 : bool

logic o138 : bool

logic o139 : bool

logic temp___1120 : int

logic o140 : int

logic o141 : character

logic o142 : int

logic temp___1121 : int

logic o143 : int

logic o144 : character

logic o145 : int

logic o146 : bool

logic o147 : bool

logic temp___1122 : int

logic o148 : int

logic o149 : character

logic o150 : int

logic o151 : bool

logic o152 : bool

logic temp___1123 : int

logic o153 : int

logic o154 : character

logic o155 : int

logic o156 : bool

logic o157 : bool

logic temp___1124 : int

logic o158 : int

logic o159 : character

logic o160 : int

logic o161 : bool

logic o162 : bool

logic temp___1125 : int

logic o163 : int

logic o164 : character

logic o165 : int

logic o166 : bool

logic o167 : bool

logic temp___1126 : int

logic o168 : int

logic o169 : character

logic o170 : int

logic o171 : bool

logic o172 : bool

logic temp___1127 : int

logic o173 : int

logic o174 : character

logic o175 : int

logic o176 : bool

logic o177 : bool

logic o178 : bool

logic temp___1128 : int

logic o179 : int

logic o180 : character

logic o181 : int

logic temp___1129 : int

logic o182 : int

logic o183 : character

logic o184 : int

logic o185 : bool

logic o186 : bool

logic temp___1130 : int

logic o187 : int

logic o188 : character

logic o189 : int

logic o190 : bool

logic o191 : bool

logic temp___1131 : int

logic o192 : int

logic o193 : character

logic o194 : int

logic o195 : bool

logic o196 : bool

logic temp___1132 : int

logic o197 : int

logic o198 : character

logic o199 : int

logic o200 : bool

logic o201 : bool

logic temp___1133 : int

logic o202 : int

logic o203 : character

logic o204 : int

logic o205 : bool

logic o206 : bool

logic temp___1134 : int

logic o207 : int

logic o208 : character

logic o209 : int

logic o210 : bool

logic o211 : bool

logic o212 : bool

logic temp___1135 : int

logic o213 : int

logic o214 : character

logic o215 : int

logic temp___1136 : int

logic o216 : int

logic o217 : character

logic o218 : int

logic o219 : bool

logic o220 : bool

logic temp___1137 : int

logic o221 : int

logic o222 : character

logic o223 : int

logic o224 : bool

logic o225 : bool

logic temp___1138 : int

logic o226 : int

logic o227 : character

logic o228 : int

logic o229 : bool

logic o230 : bool

logic temp___1139 : int

logic o231 : int

logic o232 : character

logic o233 : int

logic o234 : bool

logic o235 : bool

logic temp___1140 : int

logic o236 : int

logic o237 : character

logic o238 : int

logic o239 : bool

logic o240 : bool

logic o241 : bool

logic temp___1141 : int

logic o242 : int

logic o243 : character

logic o244 : int

logic temp___1142 : int

logic o245 : int

logic o246 : character

logic o247 : int

logic o248 : bool

logic o249 : bool

logic temp___1143 : int

logic o250 : int

logic o251 : character

logic o252 : int

logic o253 : bool

logic o254 : bool

logic temp___1144 : int

logic o255 : int

logic o256 : character

logic o257 : int

logic o258 : bool

logic o259 : bool

logic temp___1145 : int

logic o260 : int

logic o261 : character

logic o262 : int

logic o263 : bool

logic o264 : bool

logic o265 : bool

logic temp___1146 : int

logic o266 : int

logic o267 : character

logic o268 : int

logic temp___1147 : int

logic o269 : int

logic o270 : character

logic o271 : int

logic o272 : bool

logic o273 : bool

logic temp___1148 : int

logic o274 : int

logic o275 : character

logic o276 : int

logic o277 : bool

logic o278 : bool

logic temp___1149 : int

logic o279 : int

logic o280 : character

logic o281 : int

logic o282 : bool

logic o283 : bool

logic o284 : bool

logic temp___1150 : int

logic o285 : int

logic o286 : character

logic o287 : int

logic temp___1151 : int

logic o288 : int

logic o289 : character

logic o290 : int

logic o291 : bool

logic o292 : bool

logic temp___1152 : int

logic o293 : int

logic o294 : character

logic o295 : int

logic o296 : bool

logic o297 : bool

logic o298 : bool

logic temp___1153 : int

logic o299 : int

logic o300 : character

logic o301 : int

logic temp___1154 : int

logic o302 : int

logic o303 : character

logic o304 : int

logic o305 : bool

logic o306 : bool

logic o307 : bool

logic temp___1155 : int

logic o308 : int

logic o309 : character

logic o310 : int

logic o311 : bool

logic has_failed1 : bool

logic result : bool

logic result1 : int

logic target1 : int

logic result2 : bool

logic result3 : bool

logic has_failed2 : bool

logic result4 : bool

logic target2 : int

logic has_failed3 : bool

logic result5 : bool

logic result6 : bool

logic has_failed4 : bool

logic result7 : bool

logic target3 : int

logic has_failed5 : bool

logic result8 : bool

logic result9 : bool

logic has_failed6 : bool

logic result10 : bool

logic target4 : int

logic has_failed7 : bool

logic result11 : bool

logic result12 : bool

logic has_failed8 : bool

logic result13 : bool

logic target5 : int

logic has_failed9 : bool

logic result14 : bool

logic result15 : bool

logic has_failed10 : bool

logic result16 : bool

logic target6 : int

logic has_failed11 : bool

logic result17 : bool

logic result18 : bool

logic has_failed12 : bool

logic result19 : bool

logic target7 : int

logic has_failed13 : bool

logic result20 : bool

logic result21 : bool

logic has_failed14 : bool

logic result22 : bool

logic target8 : int

logic has_failed15 : bool

logic result23 : bool

logic result24 : bool

logic has_failed16 : bool

logic result25 : bool

logic target9 : int

logic has_failed17 : bool

logic result26 : bool

logic result27 : bool

logic has_failed18 : bool

logic result28 : bool

logic target10 : int

logic has_failed19 : bool

logic result29 : bool

logic result30 : bool

logic has_failed20 : bool

logic target11 : int

logic has_failed21 : bool

logic target12 : int

logic has_failed22 : bool

logic target13 : int

logic has_failed23 : bool

logic target14 : int

logic has_failed24 : bool

logic target15 : int

logic has_failed25 : bool

logic target16 : int

logic has_failed26 : bool

logic target17 : int

logic has_failed27 : bool

logic target18 : int

logic has_failed28 : bool

logic target19 : int

logic has_failed29 : bool

logic target20 : int

logic has_failed30 : bool

logic target21 : int

logic has_failed31 : bool

logic target22 : int

logic has_failed32 : bool

logic target23 : int

logic has_failed33 : bool

logic target24 : int

logic has_failed34 : bool

logic target25 : int

logic has_failed35 : bool

logic target26 : int

logic has_failed36 : bool

logic target27 : int

logic has_failed37 : bool

logic target28 : int

logic has_failed38 : bool

logic target29 : int

logic has_failed39 : bool

logic target30 : int

logic has_failed40 : bool

logic target31 : int

logic has_failed41 : bool

logic target32 : int

logic has_failed42 : bool

logic target33 : int

logic has_failed43 : bool

logic target34 : int

logic has_failed44 : bool

logic target35 : int

logic has_failed45 : bool

logic target36 : int

logic has_failed46 : bool

logic target37 : int

logic has_failed47 : bool

logic target38 : int

logic has_failed48 : bool

logic target39 : int

logic has_failed49 : bool

logic target40 : int

logic has_failed50 : bool

logic target41 : int

logic has_failed51 : bool

logic target42 : int

logic has_failed52 : bool

logic target43 : int

logic has_failed53 : bool

logic target44 : int

logic has_failed54 : bool

logic target45 : int

logic has_failed55 : bool

logic target46 : int

logic has_failed56 : bool

logic target47 : int

logic has_failed57 : bool

logic target48 : int

logic has_failed58 : bool

logic target49 : int

logic has_failed59 : bool

logic target50 : int

logic has_failed60 : bool

logic target51 : int

logic has_failed61 : bool

logic target52 : int

logic has_failed62 : bool

axiom H : dynamic_property(1, 2147483647, to_rep1(first(source1)),
  to_rep1(last(source1)))

axiom H1 : (((- 2147483648) <= 2147483647) -> in_range1(target))

axiom H2 : ((length({ elts = source; rt = source1 }) <= 11) and
  ((2 <= length({ elts = source; rt = source1 })) and
  ((to_rep((source[to_rep1(first(source1))])) = 45) and
  (forall index1:int. ((((to_rep1(first(source1)) + 1) <= index1) and
  (index1 <= to_rep1(last(source1)))) ->
  (is_digit(to_rep((source[index1]))) = true))))))

axiom H3 : (result1 = target)

axiom H4 : (target1 = 0)

axiom H5 : (length({ elts = source; rt = source1 }) = 11)

axiom H6 : ((temp___1082 = (to_rep1(first(source1)) + 1)) and
  in_range1((to_rep1(first(source1)) + 1)))

axiom H7 : ((to_rep1(first(source1)) <= temp___1082) and
  (temp___1082 <= to_rep1(last(source1))))

axiom H8 : (o3 = temp___1082)

axiom H9 : (o4 = (source[o3]))

axiom H10 : (o5 = to_rep(o4))

axiom H11 : (((50 <  o5) -> (result2 = true)) and ((not (50 <  o5)) ->
  (result2 = false)))

axiom H12 : (not (result2 = true))

axiom H13 : (has_failed2 = has_failed)

axiom H14 : (has_failed2 = has_failed1)

axiom H15 : ((temp___1083 = (to_rep1(first(source1)) + 1)) and
  in_range1((to_rep1(first(source1)) + 1)))

axiom H16 : ((to_rep1(first(source1)) <= temp___1083) and
  (temp___1083 <= to_rep1(last(source1))))

axiom H17 : (o6 = temp___1083)

axiom H18 : (o7 = (source[o6]))

axiom H19 : (o8 = to_rep(o7))

axiom H20 : (((o8 <  50) -> (result4 = true)) and ((not (o8 <  50)) ->
  (result4 = false)))

axiom H21 : ((result4 = true) -> ((not (has_failed3 = true)) and
  in_range1(target2)))

axiom H22 : (not (result4 = true))

axiom H23 : ((not (result4 = true)) -> (has_failed3 = has_failed2))

axiom H24 : ((not (result4 = true)) -> (target2 = target1))

axiom H25 : ((temp___1084 = (to_rep1(first(source1)) + 2)) and
  in_range1((to_rep1(first(source1)) + 2)))

axiom H26 : ((to_rep1(first(source1)) <= temp___1084) and
  (temp___1084 <= to_rep1(last(source1))))

axiom H27 : (o9 = temp___1084)

axiom H28 : (o10 = (source[o9]))

axiom H29 : (o11 = to_rep(o10))

axiom H30 : (((49 <  o11) -> (result5 = true)) and ((not (49 <  o11)) ->
  (result5 = false)))

axiom H31 : (not (result5 = true))

axiom H32 : (has_failed4 = has_failed3)

axiom H33 : ((temp___1085 = (to_rep1(first(source1)) + 2)) and
  in_range1((to_rep1(first(source1)) + 2)))

axiom H34 : ((to_rep1(first(source1)) <= temp___1085) and
  (temp___1085 <= to_rep1(last(source1))))

axiom H35 : (o12 = temp___1085)

axiom H36 : (o13 = (source[o12]))

axiom H37 : (o14 = to_rep(o13))

axiom H38 : (((o14 <  49) -> (result7 = true)) and ((not (o14 <  49)) ->
  (result7 = false)))

axiom H39 : ((result7 = true) -> ((not (has_failed5 = true)) and
  in_range1(target3)))

axiom H40 : (not (result7 = true))

axiom H41 : ((not (result7 = true)) -> (has_failed5 = has_failed4))

axiom H42 : ((not (result7 = true)) -> (target3 = target2))

axiom H43 : ((temp___1086 = (to_rep1(first(source1)) + 3)) and
  in_range1((to_rep1(first(source1)) + 3)))

axiom H44 : ((to_rep1(first(source1)) <= temp___1086) and
  (temp___1086 <= to_rep1(last(source1))))

axiom H45 : (o15 = temp___1086)

axiom H46 : (o16 = (source[o15]))

axiom H47 : (o17 = to_rep(o16))

axiom H48 : (((52 <  o17) -> (result8 = true)) and ((not (52 <  o17)) ->
  (result8 = false)))

axiom H49 : (not (result8 = true))

axiom H50 : (has_failed6 = has_failed5)

axiom H51 : ((temp___1087 = (to_rep1(first(source1)) + 3)) and
  in_range1((to_rep1(first(source1)) + 3)))

axiom H52 : ((to_rep1(first(source1)) <= temp___1087) and
  (temp___1087 <= to_rep1(last(source1))))

axiom H53 : (o18 = temp___1087)

axiom H54 : (o19 = (source[o18]))

axiom H55 : (o20 = to_rep(o19))

axiom H56 : (((o20 <  52) -> (result10 = true)) and ((not (o20 <  52)) ->
  (result10 = false)))

axiom H57 : ((result10 = true) -> ((not (has_failed7 = true)) and
  in_range1(target4)))

axiom H58 : (not (result10 = true))

axiom H59 : ((not (result10 = true)) -> (has_failed7 = has_failed6))

axiom H60 : ((not (result10 = true)) -> (target4 = target3))

axiom H61 : ((temp___1088 = (to_rep1(first(source1)) + 4)) and
  in_range1((to_rep1(first(source1)) + 4)))

axiom H62 : ((to_rep1(first(source1)) <= temp___1088) and
  (temp___1088 <= to_rep1(last(source1))))

axiom H63 : (o21 = temp___1088)

axiom H64 : (o22 = (source[o21]))

axiom H65 : (o23 = to_rep(o22))

axiom H66 : (((55 <  o23) -> (result11 = true)) and ((not (55 <  o23)) ->
  (result11 = false)))

axiom H67 : (not (result11 = true))

axiom H68 : (has_failed8 = has_failed7)

axiom H69 : ((temp___1089 = (to_rep1(first(source1)) + 4)) and
  in_range1((to_rep1(first(source1)) + 4)))

axiom H70 : ((to_rep1(first(source1)) <= temp___1089) and
  (temp___1089 <= to_rep1(last(source1))))

axiom H71 : (o24 = temp___1089)

axiom H72 : (o25 = (source[o24]))

axiom H73 : (o26 = to_rep(o25))

axiom H74 : (((o26 <  55) -> (result13 = true)) and ((not (o26 <  55)) ->
  (result13 = false)))

axiom H75 : ((result13 = true) -> ((not (has_failed9 = true)) and
  in_range1(target5)))

axiom H76 : (not (result13 = true))

axiom H77 : ((not (result13 = true)) -> (has_failed9 = has_failed8))

axiom H78 : ((not (result13 = true)) -> (target5 = target4))

axiom H79 : ((temp___1090 = (to_rep1(first(source1)) + 5)) and
  in_range1((to_rep1(first(source1)) + 5)))

axiom H80 : ((to_rep1(first(source1)) <= temp___1090) and
  (temp___1090 <= to_rep1(last(source1))))

axiom H81 : (o27 = temp___1090)

axiom H82 : (o28 = (source[o27]))

axiom H83 : (o29 = to_rep(o28))

axiom H84 : (((52 <  o29) -> (result14 = true)) and ((not (52 <  o29)) ->
  (result14 = false)))

axiom H85 : (not (result14 = true))

axiom H86 : (has_failed10 = has_failed9)

axiom H87 : ((temp___1091 = (to_rep1(first(source1)) + 5)) and
  in_range1((to_rep1(first(source1)) + 5)))

axiom H88 : ((to_rep1(first(source1)) <= temp___1091) and
  (temp___1091 <= to_rep1(last(source1))))

axiom H89 : (o30 = temp___1091)

axiom H90 : (o31 = (source[o30]))

axiom H91 : (o32 = to_rep(o31))

axiom H92 : (((o32 <  52) -> (result16 = true)) and ((not (o32 <  52)) ->
  (result16 = false)))

axiom H93 : ((result16 = true) -> ((not (has_failed11 = true)) and
  in_range1(target6)))

axiom H94 : (not (result16 = true))

axiom H95 : ((not (result16 = true)) -> (has_failed11 = has_failed10))

axiom H96 : ((not (result16 = true)) -> (target6 = target5))

axiom H97 : ((temp___1092 = (to_rep1(first(source1)) + 6)) and
  in_range1((to_rep1(first(source1)) + 6)))

axiom H98 : ((to_rep1(first(source1)) <= temp___1092) and
  (temp___1092 <= to_rep1(last(source1))))

axiom H99 : (o33 = temp___1092)

axiom H100 : (o34 = (source[o33]))

axiom H101 : (o35 = to_rep(o34))

axiom H102 : (((56 <  o35) -> (result17 = true)) and ((not (56 <  o35)) ->
  (result17 = false)))

axiom H103 : (not (result17 = true))

axiom H104 : (has_failed12 = has_failed11)

axiom H105 : ((temp___1093 = (to_rep1(first(source1)) + 6)) and
  in_range1((to_rep1(first(source1)) + 6)))

axiom H106 : ((to_rep1(first(source1)) <= temp___1093) and
  (temp___1093 <= to_rep1(last(source1))))

axiom H107 : (o36 = temp___1093)

axiom H108 : (o37 = (source[o36]))

axiom H109 : (o38 = to_rep(o37))

axiom H110 : (((o38 <  56) -> (result19 = true)) and ((not (o38 <  56)) ->
  (result19 = false)))

axiom H111 : ((result19 = true) -> ((not (has_failed13 = true)) and
  in_range1(target7)))

axiom H112 : (not (result19 = true))

axiom H113 : ((not (result19 = true)) -> (has_failed13 = has_failed12))

axiom H114 : ((not (result19 = true)) -> (target7 = target6))

axiom H115 : ((temp___1094 = (to_rep1(first(source1)) + 7)) and
  in_range1((to_rep1(first(source1)) + 7)))

axiom H116 : ((to_rep1(first(source1)) <= temp___1094) and
  (temp___1094 <= to_rep1(last(source1))))

axiom H117 : (o39 = temp___1094)

axiom H118 : (o40 = (source[o39]))

axiom H119 : (o41 = to_rep(o40))

axiom H120 : (((51 <  o41) -> (result20 = true)) and ((not (51 <  o41)) ->
  (result20 = false)))

axiom H121 : (not (result20 = true))

axiom H122 : (has_failed14 = has_failed13)

axiom H123 : ((temp___1095 = (to_rep1(first(source1)) + 7)) and
  in_range1((to_rep1(first(source1)) + 7)))

axiom H124 : ((to_rep1(first(source1)) <= temp___1095) and
  (temp___1095 <= to_rep1(last(source1))))

axiom H125 : (o42 = temp___1095)

axiom H126 : (o43 = (source[o42]))

axiom H127 : (o44 = to_rep(o43))

axiom H128 : (((o44 <  51) -> (result22 = true)) and ((not (o44 <  51)) ->
  (result22 = false)))

axiom H129 : ((result22 = true) -> ((not (has_failed15 = true)) and
  in_range1(target8)))

axiom H130 : (not (result22 = true))

axiom H131 : ((not (result22 = true)) -> (has_failed15 = has_failed14))

axiom H132 : ((not (result22 = true)) -> (target8 = target7))

axiom H133 : ((temp___1096 = (to_rep1(first(source1)) + 8)) and
  in_range1((to_rep1(first(source1)) + 8)))

axiom H134 : ((to_rep1(first(source1)) <= temp___1096) and
  (temp___1096 <= to_rep1(last(source1))))

axiom H135 : (o45 = temp___1096)

axiom H136 : (o46 = (source[o45]))

axiom H137 : (o47 = to_rep(o46))

axiom H138 : (((54 <  o47) -> (result23 = true)) and ((not (54 <  o47)) ->
  (result23 = false)))

axiom H139 : (not (result23 = true))

axiom H140 : (has_failed16 = has_failed15)

axiom H141 : ((temp___1097 = (to_rep1(first(source1)) + 8)) and
  in_range1((to_rep1(first(source1)) + 8)))

axiom H142 : ((to_rep1(first(source1)) <= temp___1097) and
  (temp___1097 <= to_rep1(last(source1))))

axiom H143 : (o48 = temp___1097)

axiom H144 : (o49 = (source[o48]))

axiom H145 : (o50 = to_rep(o49))

axiom H146 : (((o50 <  54) -> (result25 = true)) and ((not (o50 <  54)) ->
  (result25 = false)))

axiom H147 : ((result25 = true) -> ((not (has_failed17 = true)) and
  in_range1(target9)))

axiom H148 : (not (result25 = true))

axiom H149 : ((not (result25 = true)) -> (has_failed17 = has_failed16))

axiom H150 : ((not (result25 = true)) -> (target9 = target8))

axiom H151 : ((temp___1098 = (to_rep1(first(source1)) + 9)) and
  in_range1((to_rep1(first(source1)) + 9)))

axiom H152 : ((to_rep1(first(source1)) <= temp___1098) and
  (temp___1098 <= to_rep1(last(source1))))

axiom H153 : (o51 = temp___1098)

axiom H154 : (o52 = (source[o51]))

axiom H155 : (o53 = to_rep(o52))

axiom H156 : (((52 <  o53) -> (result26 = true)) and ((not (52 <  o53)) ->
  (result26 = false)))

axiom H157 : (not (result26 = true))

axiom H158 : (has_failed18 = has_failed17)

axiom H159 : ((temp___1099 = (to_rep1(first(source1)) + 9)) and
  in_range1((to_rep1(first(source1)) + 9)))

axiom H160 : ((to_rep1(first(source1)) <= temp___1099) and
  (temp___1099 <= to_rep1(last(source1))))

axiom H161 : (o54 = temp___1099)

axiom H162 : (o55 = (source[o54]))

axiom H163 : (o56 = to_rep(o55))

axiom H164 : (((o56 <  52) -> (result28 = true)) and ((not (o56 <  52)) ->
  (result28 = false)))

axiom H165 : ((result28 = true) -> ((not (has_failed19 = true)) and
  in_range1(target10)))

axiom H166 : (not (result28 = true))

axiom H167 : ((not (result28 = true)) -> (has_failed19 = has_failed18))

axiom H168 : ((not (result28 = true)) -> (target10 = target9))

axiom H169 : ((temp___1100 = (to_rep1(first(source1)) + 10)) and
  in_range1((to_rep1(first(source1)) + 10)))

axiom H170 : ((to_rep1(first(source1)) <= temp___1100) and
  (temp___1100 <= to_rep1(last(source1))))

axiom H171 : (o57 = temp___1100)

axiom H172 : (o58 = (source[o57]))

axiom H173 : (o59 = to_rep(o58))

axiom H174 : (((56 <  o59) -> (result29 = true)) and ((not (56 <  o59)) ->
  (result29 = false)))

axiom H175 : (not (result29 = true))

axiom H176 : (has_failed20 = has_failed19)

 (* File "system.ads", line 1, characters 0-0 *)
goal WP_parameter_def : (length({ elts = source; rt = source1 }) = 11)
