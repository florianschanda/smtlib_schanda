(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort cell 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (cell cell) Bool)
(declare-const dummy cell)
(declare-datatypes () ((cell__ref (mk_cell__ref (cell__content cell)))))
(define-fun cell__ref___projection ((a cell__ref)) cell (cell__content a))
(declare-fun to_rep (cell) Int)
(declare-fun of_rep (Int) cell)
(assert (forall ((x cell)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x cell)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int cell))))))
(declare-fun slide ((Array Int cell) Int Int) (Array Int cell))
(assert (forall ((a (Array Int cell))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int cell))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int cell)) (a__first Int) (a__last Int) (b (Array Int cell)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int cell)) (b (Array Int cell))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-const dummy1 (Array Int cell))
(declare-const value__size Int)
(declare-fun object__size ((Array Int cell)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int cell)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int cell)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int cell))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int cell))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int cell))) (<= 0 (object__alignment a))))
(declare-fun user_eq1 ((Array Int cell) (Array Int cell)) Bool)
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int (Array Int cell)))))))
(declare-fun slide1 ((Array Int (Array Int cell)) Int Int) (Array Int (Array Int cell)))
(assert (forall ((a (Array Int (Array Int cell)))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int (Array Int cell)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int (Array Int cell))) (a__first Int) (a__last Int) (b (Array Int (Array Int cell))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq (select a temp___idx_155) 1 10 (select b (+ (- b__first a__first) temp___idx_155)) 1 10) true)))) true false))
(assert (forall ((a (Array Int (Array Int cell))) (b (Array Int (Array Int cell)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq (select a temp___idx_155) 1 10 (select b (+ (- b__first a__first) temp___idx_155)) 1 10) true))))))))
(declare-fun is_empty ((Array Int (Array Int cell)) Int Int) Bool)
(declare-fun is_empty__function_guard (Bool (Array Int (Array Int cell)) Int Int) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (integer integer) Bool)
(declare-const dummy2 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range2 temp___expr_18)))
(declare-sort x_coord 0)
(declare-fun x_coordqtint (x_coord) Int)
(assert (forall ((i x_coord)) (and (<= 1 (x_coordqtint i)) (<= (x_coordqtint i) 10))))
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (x_coord x_coord) Bool)
(declare-const dummy3 x_coord)
(declare-datatypes () ((x_coord__ref (mk_x_coord__ref (x_coord__content x_coord)))))
(define-fun x_coord__ref___projection ((a x_coord__ref)) x_coord (x_coord__content a))
(declare-sort y_coord 0)
(declare-fun y_coordqtint (y_coord) Int)
(assert (forall ((i y_coord)) (and (<= 1 (y_coordqtint i)) (<= (y_coordqtint i) 50))))
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 50)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (y_coord y_coord) Bool)
(declare-const dummy4 y_coord)
(declare-datatypes () ((y_coord__ref (mk_y_coord__ref (y_coord__content y_coord)))))
(define-fun y_coord__ref___projection ((a y_coord__ref)) y_coord (y_coord__content a))
(assert true)
(assert (forall ((b (Array Int (Array Int cell)))) (forall ((y Int) (x Int)) (! (= (= (is_empty b y x) true) (and (and (in_range3 x) (in_range4 y)) (= (to_rep (let ((temp___666 (select b y))) (select temp___666 x))) 0))) :pattern ((is_empty b y x))))))
(declare-sort shape 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (shape shape) Bool)
(declare-const dummy5 shape)
(declare-datatypes () ((shape__ref (mk_shape__ref (shape__content shape)))))
(define-fun shape__ref___projection ((a shape__ref)) shape (shape__content a))
(declare-fun to_rep1 (shape) Int)
(declare-fun of_rep1 (Int) shape)
(assert (forall ((x shape)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x shape)) (! (in_range5 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort px_coord 0)
(declare-fun px_coordqtint (px_coord) Int)
(assert (forall ((i px_coord)) (and (<= (- 1) (px_coordqtint i)) (<= (px_coordqtint i) 9))))
(define-fun in_range6 ((x Int)) Bool (and (<= (- 1) x) (<= x 9)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (px_coord px_coord) Bool)
(declare-const dummy6 px_coord)
(declare-datatypes () ((px_coord__ref (mk_px_coord__ref (px_coord__content px_coord)))))
(define-fun px_coord__ref___projection ((a px_coord__ref)) px_coord (px_coord__content a))
(define-fun to_rep2 ((x px_coord)) Int (px_coordqtint x))
(declare-fun of_rep2 (Int) px_coord)
(assert (forall ((x px_coord)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x px_coord)) (! (in_range6 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort py_coord 0)
(declare-fun py_coordqtint (py_coord) Int)
(assert (forall ((i py_coord)) (and (<= (- 1) (py_coordqtint i)) (<= (py_coordqtint i) 49))))
(define-fun in_range7 ((x Int)) Bool (and (<= (- 1) x) (<= x 49)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq7 (py_coord py_coord) Bool)
(declare-const dummy7 py_coord)
(declare-datatypes () ((py_coord__ref (mk_py_coord__ref (py_coord__content py_coord)))))
(define-fun py_coord__ref___projection ((a py_coord__ref)) py_coord (py_coord__content a))
(define-fun to_rep3 ((x py_coord)) Int (py_coordqtint x))
(declare-fun of_rep3 (Int) py_coord)
(assert (forall ((x py_coord)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x py_coord)) (! (in_range7 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort direction 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq8 (direction direction) Bool)
(declare-const dummy8 direction)
(declare-datatypes () ((direction__ref (mk_direction__ref (direction__content direction)))))
(define-fun direction__ref___projection ((a direction__ref)) direction (direction__content a))
(declare-fun to_rep4 (direction) Int)
(declare-fun of_rep4 (Int) direction)
(assert (forall ((x direction)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x direction)) (! (in_range8 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__tetris_initial__piece__s shape) (rec__tetris_initial__piece__d direction) (rec__tetris_initial__piece__x px_coord) (rec__tetris_initial__piece__y py_coord)))))
(define-fun us_split_fields_S__projection ((a us_split_fields)) shape (rec__tetris_initial__piece__s a))
(define-fun us_split_fields_D__projection ((a us_split_fields)) direction (rec__tetris_initial__piece__d a))
(define-fun us_split_fields_X__projection ((a us_split_fields)) px_coord (rec__tetris_initial__piece__x a))
(define-fun us_split_fields_Y__projection ((a us_split_fields)) py_coord (rec__tetris_initial__piece__y a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (to_rep1 (rec__tetris_initial__piece__s (us_split_fields1 a))) (to_rep1 (rec__tetris_initial__piece__s (us_split_fields1 b)))) (= (to_rep4 (rec__tetris_initial__piece__d (us_split_fields1 a))) (to_rep4 (rec__tetris_initial__piece__d (us_split_fields1 b))))) (= (to_rep2 (rec__tetris_initial__piece__x (us_split_fields1 a))) (to_rep2 (rec__tetris_initial__piece__x (us_split_fields1 b))))) (= (to_rep3 (rec__tetris_initial__piece__y (us_split_fields1 a))) (to_rep3 (rec__tetris_initial__piece__y (us_split_fields1 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const tetris_initial__piece__s__first__bit Int)
(declare-const tetris_initial__piece__s__last__bit Int)
(declare-const tetris_initial__piece__s__position Int)
(assert (<= 0 tetris_initial__piece__s__first__bit))
(assert (< tetris_initial__piece__s__first__bit tetris_initial__piece__s__last__bit))
(assert (<= 0 tetris_initial__piece__s__position))
(declare-const tetris_initial__piece__d__first__bit Int)
(declare-const tetris_initial__piece__d__last__bit Int)
(declare-const tetris_initial__piece__d__position Int)
(assert (<= 0 tetris_initial__piece__d__first__bit))
(assert (< tetris_initial__piece__d__first__bit tetris_initial__piece__d__last__bit))
(assert (<= 0 tetris_initial__piece__d__position))
(declare-const tetris_initial__piece__x__first__bit Int)
(declare-const tetris_initial__piece__x__last__bit Int)
(declare-const tetris_initial__piece__x__position Int)
(assert (<= 0 tetris_initial__piece__x__first__bit))
(assert (< tetris_initial__piece__x__first__bit tetris_initial__piece__x__last__bit))
(assert (<= 0 tetris_initial__piece__x__position))
(declare-const tetris_initial__piece__y__first__bit Int)
(declare-const tetris_initial__piece__y__last__bit Int)
(declare-const tetris_initial__piece__y__position Int)
(assert (<= 0 tetris_initial__piece__y__first__bit))
(assert (< tetris_initial__piece__y__first__bit tetris_initial__piece__y__last__bit))
(assert (<= 0 tetris_initial__piece__y__position))
(declare-fun user_eq9 (us_rep us_rep) Bool)
(declare-const dummy9 us_rep)
(declare-datatypes () ((piece__ref (mk_piece__ref (piece__content us_rep)))))
(define-fun piece__ref___projection ((a piece__ref)) us_rep (piece__content a))
(declare-sort three_shape 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 3 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq10 (three_shape three_shape) Bool)
(declare-const dummy10 three_shape)
(declare-datatypes () ((three_shape__ref (mk_three_shape__ref (three_shape__content three_shape)))))
(define-fun three_shape__ref___projection ((a three_shape__ref)) three_shape (three_shape__content a))
(declare-sort map1 0)
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 map1)))))
(declare-fun get (map1 Int Int) Bool)
(declare-fun set (map1 Int Int Bool) map1)
(assert (forall ((m map1)) (forall ((i Int)) (forall ((j Int)) (forall ((a Bool)) (! (= (get (set m i j a) i j) a) :pattern ((set m i j a))))))))
(assert (forall ((m map1)) (forall ((i Int) (i2 Int)) (forall ((j Int) (j2 Int)) (forall ((a Bool)) (! (=> (not (and (= i i2) (= j j2))) (= (get (set m i j a) i2 j2) (get m i2 j2))) :pattern ((get (set m i j a) i2 j2)) :pattern ((set m i j a) (get m i2 j2))))))))
(declare-fun slide2 (map1 Int Int Int Int) map1)
(assert (forall ((a map1)) (forall ((new_first Int) (old_first Int)) (forall ((new_first_2 Int) (old_first_2 Int)) (forall ((i Int)) (forall ((j Int)) (! (= (get (slide2 a old_first new_first old_first_2 new_first_2) i j) (get a (- i (- new_first old_first)) (- j (- new_first_2 old_first_2)))) :pattern ((get (slide2 a old_first new_first old_first_2 new_first_2) i j)))))))))
(define-fun bool_eq3 ((a map1) (a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int) (b map1) (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int)) Bool (ite (and (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (ite (<= a__first_2 a__last_2) (and (<= b__first_2 b__last_2) (= (- a__last_2 a__first_2) (- b__last_2 b__first_2))) (< b__last_2 b__first_2))) (forall ((temp___idx_156 Int) (temp___idx_157 Int)) (=> (and (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (and (<= a__first_2 temp___idx_157) (<= temp___idx_157 a__last_2))) (= (get a temp___idx_156 temp___idx_157) (get b (+ (- b__first a__first) temp___idx_156) (+ (- b__first_2 a__first_2) temp___idx_157)))))) true false))
(assert (forall ((a map1) (b map1)) (forall ((a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int) (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int)) (=> (= (bool_eq3 b b__first b__last b__first_2 b__last_2 a a__first a__last a__first_2 a__last_2) true) (and (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (ite (<= a__first_2 a__last_2) (and (<= b__first_2 b__last_2) (= (- a__last_2 a__first_2) (- b__last_2 b__first_2))) (< b__last_2 b__first_2))) (forall ((temp___idx_156 Int) (temp___idx_157 Int)) (=> (and (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (and (<= a__first_2 temp___idx_157) (<= temp___idx_157 a__last_2))) (= (get a temp___idx_156 temp___idx_157) (get b (+ (- b__first a__first) temp___idx_156) (+ (- b__first_2 a__first_2) temp___idx_157))))))))))
(declare-const dummy11 map1)
(declare-const value__size2 Int)
(declare-fun object__size2 (map1) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 (map1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (map1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a map1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a map1)) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a map1)) (<= 0 (object__alignment2 a))))
(declare-fun user_eq11 (map1 map1) Bool)
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int map1))))))
(declare-fun slide3 ((Array Int map1) Int Int) (Array Int map1))
(assert (forall ((a (Array Int map1))) (forall ((first Int)) (! (= (slide3 a first first) a) :pattern ((slide3 a first first))))))
(assert (forall ((a (Array Int map1))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq4 ((a (Array Int map1)) (a__first Int) (a__last Int) (b (Array Int map1)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_158 Int)) (=> (and (<= a__first temp___idx_158) (<= temp___idx_158 a__last)) (= (bool_eq3 (select a temp___idx_158) 0 3 0 3 (select b (+ (- b__first a__first) temp___idx_158)) 0 3 0 3) true)))) true false))
(assert (forall ((a (Array Int map1)) (b (Array Int map1))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_158 Int)) (=> (and (<= a__first temp___idx_158) (<= temp___idx_158 a__last)) (= (bool_eq3 (select a temp___idx_158) 0 3 0 3 (select b (+ (- b__first a__first) temp___idx_158)) 0 3 0 3) true))))))))
(declare-const possible_i_shapes (Array Int map1))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun tetris_initial__possible_i_shapes__aggregate_def (map1 map1 map1 map1) (Array Int map1))
(declare-fun temp_____aggregate_def_165 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_185 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_205 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_225 (Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-const dummy12 map1)
(declare-const value__size3 Int)
(declare-fun object__size3 (map1) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 (map1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (map1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a map1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a map1)) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a map1)) (<= 0 (object__alignment3 a))))
(declare-fun user_eq12 (map1 map1) Bool)
(declare-sort map2 0)
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 map2)))))
(declare-fun get1 (map2 Int Int) map1)
(declare-fun set1 (map2 Int Int map1) map2)
(assert (forall ((m map2)) (forall ((i Int)) (forall ((j Int)) (forall ((a map1)) (! (= (get1 (set1 m i j a) i j) a) :pattern ((set1 m i j a))))))))
(assert (forall ((m map2)) (forall ((i Int) (i2 Int)) (forall ((j Int) (j2 Int)) (forall ((a map1)) (! (=> (not (and (= i i2) (= j j2))) (= (get1 (set1 m i j a) i2 j2) (get1 m i2 j2))) :pattern ((get1 (set1 m i j a) i2 j2)) :pattern ((set1 m i j a) (get1 m i2 j2))))))))
(declare-fun slide4 (map2 Int Int Int Int) map2)
(assert (forall ((a map2)) (forall ((new_first Int) (old_first Int)) (forall ((new_first_2 Int) (old_first_2 Int)) (forall ((i Int)) (forall ((j Int)) (! (= (get1 (slide4 a old_first new_first old_first_2 new_first_2) i j) (get1 a (- i (- new_first old_first)) (- j (- new_first_2 old_first_2)))) :pattern ((get1 (slide4 a old_first new_first old_first_2 new_first_2) i j)))))))))
(define-fun bool_eq5 ((a map2) (a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int) (b map2) (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int)) Bool (ite (and (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (ite (<= a__first_2 a__last_2) (and (<= b__first_2 b__last_2) (= (- a__last_2 a__first_2) (- b__last_2 b__first_2))) (< b__last_2 b__first_2))) (forall ((temp___idx_245 Int) (temp___idx_246 Int)) (=> (and (and (<= a__first temp___idx_245) (<= temp___idx_245 a__last)) (and (<= a__first_2 temp___idx_246) (<= temp___idx_246 a__last_2))) (= (bool_eq3 (get1 a temp___idx_245 temp___idx_246) 0 2 0 2 (get1 b (+ (- b__first a__first) temp___idx_245) (+ (- b__first_2 a__first_2) temp___idx_246)) 0 2 0 2) true)))) true false))
(assert (forall ((a map2) (b map2)) (forall ((a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int) (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int)) (=> (= (bool_eq5 b b__first b__last b__first_2 b__last_2 a a__first a__last a__first_2 a__last_2) true) (and (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (ite (<= a__first_2 a__last_2) (and (<= b__first_2 b__last_2) (= (- a__last_2 a__first_2) (- b__last_2 b__first_2))) (< b__last_2 b__first_2))) (forall ((temp___idx_245 Int) (temp___idx_246 Int)) (=> (and (and (<= a__first temp___idx_245) (<= temp___idx_245 a__last)) (and (<= a__first_2 temp___idx_246) (<= temp___idx_246 a__last_2))) (= (bool_eq3 (get1 a temp___idx_245 temp___idx_246) 0 2 0 2 (get1 b (+ (- b__first a__first) temp___idx_245) (+ (- b__first_2 a__first_2) temp___idx_246)) 0 2 0 2) true))))))))
(declare-const possible_three_shapes map2)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-fun tetris_initial__possible_three_shapes__aggregate_def (map1 map1 map1 map1 map1 map1 map1 map1 map1 map1 map1 map1 map1 map1 map1 map1 map1 map1 map1 map1) map2)
(declare-fun temp_____aggregate_def_270 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_283 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_296 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_309 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_322 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_335 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_348 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_361 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_374 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_387 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_400 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_413 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_426 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_439 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_452 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_465 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_478 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_491 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_504 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-fun temp_____aggregate_def_517 (Bool Bool Bool Bool Bool Bool Bool Bool Bool) map1)
(declare-const b (Array Int (Array Int cell)))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const p us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_invariant1 ((temp___expr_537 Int) (temp___is_init_533 Bool) (temp___skip_constant_534 Bool) (temp___do_toplevel_535 Bool) (temp___do_typ_inv_536 Bool)) Bool (=> (or (= temp___is_init_533 true) (<= 0 7)) (in_range1 temp___expr_537)))
(define-fun dynamic_invariant2 ((temp___expr_544 Int) (temp___is_init_540 Bool) (temp___skip_constant_541 Bool) (temp___do_toplevel_542 Bool) (temp___do_typ_inv_543 Bool)) Bool (=> (or (= temp___is_init_540 true) (<= 1 7)) (in_range5 temp___expr_544)))
(define-fun dynamic_invariant3 ((temp___expr_551 Int) (temp___is_init_547 Bool) (temp___skip_constant_548 Bool) (temp___do_toplevel_549 Bool) (temp___do_typ_inv_550 Bool)) Bool (=> (or (= temp___is_init_547 true) (<= 3 7)) (in_range9 temp___expr_551)))
(define-fun dynamic_invariant4 ((temp___expr_558 Int) (temp___is_init_554 Bool) (temp___skip_constant_555 Bool) (temp___do_toplevel_556 Bool) (temp___do_typ_inv_557 Bool)) Bool (=> (or (= temp___is_init_554 true) (<= 1 10)) (in_range3 temp___expr_558)))
(define-fun dynamic_invariant5 ((temp___expr_565 Int) (temp___is_init_561 Bool) (temp___skip_constant_562 Bool) (temp___do_toplevel_563 Bool) (temp___do_typ_inv_564 Bool)) Bool (=> (or (= temp___is_init_561 true) (<= 1 50)) (in_range4 temp___expr_565)))
(define-fun dynamic_invariant6 ((temp___expr_595 Int) (temp___is_init_591 Bool) (temp___skip_constant_592 Bool) (temp___do_toplevel_593 Bool) (temp___do_typ_inv_594 Bool)) Bool (=> (or (= temp___is_init_591 true) (<= (- 1) 9)) (in_range6 temp___expr_595)))
(define-fun dynamic_invariant7 ((temp___expr_602 Int) (temp___is_init_598 Bool) (temp___skip_constant_599 Bool) (temp___do_toplevel_600 Bool) (temp___do_typ_inv_601 Bool)) Bool (=> (or (= temp___is_init_598 true) (<= (- 1) 49)) (in_range7 temp___expr_602)))
(define-fun dynamic_invariant8 ((temp___expr_609 Int) (temp___is_init_605 Bool) (temp___skip_constant_606 Bool) (temp___do_toplevel_607 Bool) (temp___do_typ_inv_608 Bool)) Bool (=> (or (= temp___is_init_605 true) (<= 0 3)) (in_range8 temp___expr_609)))
(assert (= possible_i_shapes (tetris_initial__possible_i_shapes__aggregate_def (temp_____aggregate_def_165 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_185 (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_205 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_225 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0)))))
(assert (forall ((temp___167 Bool) (temp___168 Bool) (temp___169 Bool) (temp___170 Bool) (temp___171 Bool) (temp___172 Bool) (temp___173 Bool) (temp___174 Bool) (temp___175 Bool) (temp___176 Bool) (temp___177 Bool) (temp___178 Bool) (temp___179 Bool) (temp___180 Bool) (temp___181 Bool) (temp___182 Bool)) (let ((temp___166 (temp_____aggregate_def_165 temp___167 temp___168 temp___169 temp___170 temp___171 temp___172 temp___173 temp___174 temp___175 temp___176 temp___177 temp___178 temp___179 temp___180 temp___181 temp___182))) (and (and (and (and (and (and (= (get temp___166 0 0) temp___167) (= (get temp___166 0 1) temp___168)) (= (get temp___166 0 2) temp___169)) (= (get temp___166 0 3) temp___170)) (and (and (and (= (get temp___166 1 0) temp___171) (= (get temp___166 1 1) temp___172)) (= (get temp___166 1 2) temp___173)) (= (get temp___166 1 3) temp___174))) (and (and (and (= (get temp___166 2 0) temp___175) (= (get temp___166 2 1) temp___176)) (= (get temp___166 2 2) temp___177)) (= (get temp___166 2 3) temp___178))) (and (and (and (= (get temp___166 3 0) temp___179) (= (get temp___166 3 1) temp___180)) (= (get temp___166 3 2) temp___181)) (= (get temp___166 3 3) temp___182))))))
(assert (forall ((temp___160 map1) (temp___161 map1) (temp___162 map1) (temp___163 map1)) (let ((temp___159 (tetris_initial__possible_i_shapes__aggregate_def temp___160 temp___161 temp___162 temp___163))) (and (and (and (= (select temp___159 0) temp___160) (= (select temp___159 1) temp___161)) (= (select temp___159 2) temp___162)) (= (select temp___159 3) temp___163)))))
(assert (forall ((temp___187 Bool) (temp___188 Bool) (temp___189 Bool) (temp___190 Bool) (temp___191 Bool) (temp___192 Bool) (temp___193 Bool) (temp___194 Bool) (temp___195 Bool) (temp___196 Bool) (temp___197 Bool) (temp___198 Bool) (temp___199 Bool) (temp___200 Bool) (temp___201 Bool) (temp___202 Bool)) (let ((temp___186 (temp_____aggregate_def_185 temp___187 temp___188 temp___189 temp___190 temp___191 temp___192 temp___193 temp___194 temp___195 temp___196 temp___197 temp___198 temp___199 temp___200 temp___201 temp___202))) (and (and (and (and (and (and (= (get temp___186 0 0) temp___187) (= (get temp___186 0 1) temp___188)) (= (get temp___186 0 2) temp___189)) (= (get temp___186 0 3) temp___190)) (and (and (and (= (get temp___186 1 0) temp___191) (= (get temp___186 1 1) temp___192)) (= (get temp___186 1 2) temp___193)) (= (get temp___186 1 3) temp___194))) (and (and (and (= (get temp___186 2 0) temp___195) (= (get temp___186 2 1) temp___196)) (= (get temp___186 2 2) temp___197)) (= (get temp___186 2 3) temp___198))) (and (and (and (= (get temp___186 3 0) temp___199) (= (get temp___186 3 1) temp___200)) (= (get temp___186 3 2) temp___201)) (= (get temp___186 3 3) temp___202))))))
(assert (forall ((temp___207 Bool) (temp___208 Bool) (temp___209 Bool) (temp___210 Bool) (temp___211 Bool) (temp___212 Bool) (temp___213 Bool) (temp___214 Bool) (temp___215 Bool) (temp___216 Bool) (temp___217 Bool) (temp___218 Bool) (temp___219 Bool) (temp___220 Bool) (temp___221 Bool) (temp___222 Bool)) (let ((temp___206 (temp_____aggregate_def_205 temp___207 temp___208 temp___209 temp___210 temp___211 temp___212 temp___213 temp___214 temp___215 temp___216 temp___217 temp___218 temp___219 temp___220 temp___221 temp___222))) (and (and (and (and (and (and (= (get temp___206 0 0) temp___207) (= (get temp___206 0 1) temp___208)) (= (get temp___206 0 2) temp___209)) (= (get temp___206 0 3) temp___210)) (and (and (and (= (get temp___206 1 0) temp___211) (= (get temp___206 1 1) temp___212)) (= (get temp___206 1 2) temp___213)) (= (get temp___206 1 3) temp___214))) (and (and (and (= (get temp___206 2 0) temp___215) (= (get temp___206 2 1) temp___216)) (= (get temp___206 2 2) temp___217)) (= (get temp___206 2 3) temp___218))) (and (and (and (= (get temp___206 3 0) temp___219) (= (get temp___206 3 1) temp___220)) (= (get temp___206 3 2) temp___221)) (= (get temp___206 3 3) temp___222))))))
(assert (forall ((temp___227 Bool) (temp___228 Bool) (temp___229 Bool) (temp___230 Bool) (temp___231 Bool) (temp___232 Bool) (temp___233 Bool) (temp___234 Bool) (temp___235 Bool) (temp___236 Bool) (temp___237 Bool) (temp___238 Bool) (temp___239 Bool) (temp___240 Bool) (temp___241 Bool) (temp___242 Bool)) (let ((temp___226 (temp_____aggregate_def_225 temp___227 temp___228 temp___229 temp___230 temp___231 temp___232 temp___233 temp___234 temp___235 temp___236 temp___237 temp___238 temp___239 temp___240 temp___241 temp___242))) (and (and (and (and (and (and (= (get temp___226 0 0) temp___227) (= (get temp___226 0 1) temp___228)) (= (get temp___226 0 2) temp___229)) (= (get temp___226 0 3) temp___230)) (and (and (and (= (get temp___226 1 0) temp___231) (= (get temp___226 1 1) temp___232)) (= (get temp___226 1 2) temp___233)) (= (get temp___226 1 3) temp___234))) (and (and (and (= (get temp___226 2 0) temp___235) (= (get temp___226 2 1) temp___236)) (= (get temp___226 2 2) temp___237)) (= (get temp___226 2 3) temp___238))) (and (and (and (= (get temp___226 3 0) temp___239) (= (get temp___226 3 1) temp___240)) (= (get temp___226 3 2) temp___241)) (= (get temp___226 3 3) temp___242))))))
(assert (= possible_three_shapes (tetris_initial__possible_three_shapes__aggregate_def (temp_____aggregate_def_270 (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_283 (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_296 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0)) (temp_____aggregate_def_309 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_322 (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_335 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0)) (temp_____aggregate_def_348 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_361 (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_374 (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_387 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0)) (temp_____aggregate_def_400 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_413 (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_426 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_439 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_452 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_465 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_478 (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_491 (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_504 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0)) (temp_____aggregate_def_517 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0)))))
(assert (forall ((temp___272 Bool) (temp___273 Bool) (temp___274 Bool) (temp___275 Bool) (temp___276 Bool) (temp___277 Bool) (temp___278 Bool) (temp___279 Bool) (temp___280 Bool)) (let ((temp___271 (temp_____aggregate_def_270 temp___272 temp___273 temp___274 temp___275 temp___276 temp___277 temp___278 temp___279 temp___280))) (and (and (and (and (= (get temp___271 0 0) temp___272) (= (get temp___271 0 1) temp___273)) (= (get temp___271 0 2) temp___274)) (and (and (= (get temp___271 1 0) temp___275) (= (get temp___271 1 1) temp___276)) (= (get temp___271 1 2) temp___277))) (and (and (= (get temp___271 2 0) temp___278) (= (get temp___271 2 1) temp___279)) (= (get temp___271 2 2) temp___280))))))
(assert (forall ((temp___285 Bool) (temp___286 Bool) (temp___287 Bool) (temp___288 Bool) (temp___289 Bool) (temp___290 Bool) (temp___291 Bool) (temp___292 Bool) (temp___293 Bool)) (let ((temp___284 (temp_____aggregate_def_283 temp___285 temp___286 temp___287 temp___288 temp___289 temp___290 temp___291 temp___292 temp___293))) (and (and (and (and (= (get temp___284 0 0) temp___285) (= (get temp___284 0 1) temp___286)) (= (get temp___284 0 2) temp___287)) (and (and (= (get temp___284 1 0) temp___288) (= (get temp___284 1 1) temp___289)) (= (get temp___284 1 2) temp___290))) (and (and (= (get temp___284 2 0) temp___291) (= (get temp___284 2 1) temp___292)) (= (get temp___284 2 2) temp___293))))))
(assert (forall ((temp___298 Bool) (temp___299 Bool) (temp___300 Bool) (temp___301 Bool) (temp___302 Bool) (temp___303 Bool) (temp___304 Bool) (temp___305 Bool) (temp___306 Bool)) (let ((temp___297 (temp_____aggregate_def_296 temp___298 temp___299 temp___300 temp___301 temp___302 temp___303 temp___304 temp___305 temp___306))) (and (and (and (and (= (get temp___297 0 0) temp___298) (= (get temp___297 0 1) temp___299)) (= (get temp___297 0 2) temp___300)) (and (and (= (get temp___297 1 0) temp___301) (= (get temp___297 1 1) temp___302)) (= (get temp___297 1 2) temp___303))) (and (and (= (get temp___297 2 0) temp___304) (= (get temp___297 2 1) temp___305)) (= (get temp___297 2 2) temp___306))))))
(assert (forall ((temp___311 Bool) (temp___312 Bool) (temp___313 Bool) (temp___314 Bool) (temp___315 Bool) (temp___316 Bool) (temp___317 Bool) (temp___318 Bool) (temp___319 Bool)) (let ((temp___310 (temp_____aggregate_def_309 temp___311 temp___312 temp___313 temp___314 temp___315 temp___316 temp___317 temp___318 temp___319))) (and (and (and (and (= (get temp___310 0 0) temp___311) (= (get temp___310 0 1) temp___312)) (= (get temp___310 0 2) temp___313)) (and (and (= (get temp___310 1 0) temp___314) (= (get temp___310 1 1) temp___315)) (= (get temp___310 1 2) temp___316))) (and (and (= (get temp___310 2 0) temp___317) (= (get temp___310 2 1) temp___318)) (= (get temp___310 2 2) temp___319))))))
(assert (forall ((temp___248 map1) (temp___249 map1) (temp___250 map1) (temp___251 map1) (temp___252 map1) (temp___253 map1) (temp___254 map1) (temp___255 map1) (temp___256 map1) (temp___257 map1) (temp___258 map1) (temp___259 map1) (temp___260 map1) (temp___261 map1) (temp___262 map1) (temp___263 map1) (temp___264 map1) (temp___265 map1) (temp___266 map1) (temp___267 map1)) (let ((temp___247 (tetris_initial__possible_three_shapes__aggregate_def temp___248 temp___249 temp___250 temp___251 temp___252 temp___253 temp___254 temp___255 temp___256 temp___257 temp___258 temp___259 temp___260 temp___261 temp___262 temp___263 temp___264 temp___265 temp___266 temp___267))) (and (and (and (and (and (and (and (= (get1 temp___247 3 0) temp___248) (= (get1 temp___247 3 1) temp___249)) (= (get1 temp___247 3 2) temp___250)) (= (get1 temp___247 3 3) temp___251)) (and (and (and (= (get1 temp___247 4 0) temp___252) (= (get1 temp___247 4 1) temp___253)) (= (get1 temp___247 4 2) temp___254)) (= (get1 temp___247 4 3) temp___255))) (and (and (and (= (get1 temp___247 5 0) temp___256) (= (get1 temp___247 5 1) temp___257)) (= (get1 temp___247 5 2) temp___258)) (= (get1 temp___247 5 3) temp___259))) (and (and (and (= (get1 temp___247 6 0) temp___260) (= (get1 temp___247 6 1) temp___261)) (= (get1 temp___247 6 2) temp___262)) (= (get1 temp___247 6 3) temp___263))) (and (and (and (= (get1 temp___247 7 0) temp___264) (= (get1 temp___247 7 1) temp___265)) (= (get1 temp___247 7 2) temp___266)) (= (get1 temp___247 7 3) temp___267))))))
(assert (forall ((temp___324 Bool) (temp___325 Bool) (temp___326 Bool) (temp___327 Bool) (temp___328 Bool) (temp___329 Bool) (temp___330 Bool) (temp___331 Bool) (temp___332 Bool)) (let ((temp___323 (temp_____aggregate_def_322 temp___324 temp___325 temp___326 temp___327 temp___328 temp___329 temp___330 temp___331 temp___332))) (and (and (and (and (= (get temp___323 0 0) temp___324) (= (get temp___323 0 1) temp___325)) (= (get temp___323 0 2) temp___326)) (and (and (= (get temp___323 1 0) temp___327) (= (get temp___323 1 1) temp___328)) (= (get temp___323 1 2) temp___329))) (and (and (= (get temp___323 2 0) temp___330) (= (get temp___323 2 1) temp___331)) (= (get temp___323 2 2) temp___332))))))
(assert (forall ((temp___337 Bool) (temp___338 Bool) (temp___339 Bool) (temp___340 Bool) (temp___341 Bool) (temp___342 Bool) (temp___343 Bool) (temp___344 Bool) (temp___345 Bool)) (let ((temp___336 (temp_____aggregate_def_335 temp___337 temp___338 temp___339 temp___340 temp___341 temp___342 temp___343 temp___344 temp___345))) (and (and (and (and (= (get temp___336 0 0) temp___337) (= (get temp___336 0 1) temp___338)) (= (get temp___336 0 2) temp___339)) (and (and (= (get temp___336 1 0) temp___340) (= (get temp___336 1 1) temp___341)) (= (get temp___336 1 2) temp___342))) (and (and (= (get temp___336 2 0) temp___343) (= (get temp___336 2 1) temp___344)) (= (get temp___336 2 2) temp___345))))))
(assert (forall ((temp___350 Bool) (temp___351 Bool) (temp___352 Bool) (temp___353 Bool) (temp___354 Bool) (temp___355 Bool) (temp___356 Bool) (temp___357 Bool) (temp___358 Bool)) (let ((temp___349 (temp_____aggregate_def_348 temp___350 temp___351 temp___352 temp___353 temp___354 temp___355 temp___356 temp___357 temp___358))) (and (and (and (and (= (get temp___349 0 0) temp___350) (= (get temp___349 0 1) temp___351)) (= (get temp___349 0 2) temp___352)) (and (and (= (get temp___349 1 0) temp___353) (= (get temp___349 1 1) temp___354)) (= (get temp___349 1 2) temp___355))) (and (and (= (get temp___349 2 0) temp___356) (= (get temp___349 2 1) temp___357)) (= (get temp___349 2 2) temp___358))))))
(assert (forall ((temp___363 Bool) (temp___364 Bool) (temp___365 Bool) (temp___366 Bool) (temp___367 Bool) (temp___368 Bool) (temp___369 Bool) (temp___370 Bool) (temp___371 Bool)) (let ((temp___362 (temp_____aggregate_def_361 temp___363 temp___364 temp___365 temp___366 temp___367 temp___368 temp___369 temp___370 temp___371))) (and (and (and (and (= (get temp___362 0 0) temp___363) (= (get temp___362 0 1) temp___364)) (= (get temp___362 0 2) temp___365)) (and (and (= (get temp___362 1 0) temp___366) (= (get temp___362 1 1) temp___367)) (= (get temp___362 1 2) temp___368))) (and (and (= (get temp___362 2 0) temp___369) (= (get temp___362 2 1) temp___370)) (= (get temp___362 2 2) temp___371))))))
(assert (forall ((temp___376 Bool) (temp___377 Bool) (temp___378 Bool) (temp___379 Bool) (temp___380 Bool) (temp___381 Bool) (temp___382 Bool) (temp___383 Bool) (temp___384 Bool)) (let ((temp___375 (temp_____aggregate_def_374 temp___376 temp___377 temp___378 temp___379 temp___380 temp___381 temp___382 temp___383 temp___384))) (and (and (and (and (= (get temp___375 0 0) temp___376) (= (get temp___375 0 1) temp___377)) (= (get temp___375 0 2) temp___378)) (and (and (= (get temp___375 1 0) temp___379) (= (get temp___375 1 1) temp___380)) (= (get temp___375 1 2) temp___381))) (and (and (= (get temp___375 2 0) temp___382) (= (get temp___375 2 1) temp___383)) (= (get temp___375 2 2) temp___384))))))
(assert (forall ((temp___389 Bool) (temp___390 Bool) (temp___391 Bool) (temp___392 Bool) (temp___393 Bool) (temp___394 Bool) (temp___395 Bool) (temp___396 Bool) (temp___397 Bool)) (let ((temp___388 (temp_____aggregate_def_387 temp___389 temp___390 temp___391 temp___392 temp___393 temp___394 temp___395 temp___396 temp___397))) (and (and (and (and (= (get temp___388 0 0) temp___389) (= (get temp___388 0 1) temp___390)) (= (get temp___388 0 2) temp___391)) (and (and (= (get temp___388 1 0) temp___392) (= (get temp___388 1 1) temp___393)) (= (get temp___388 1 2) temp___394))) (and (and (= (get temp___388 2 0) temp___395) (= (get temp___388 2 1) temp___396)) (= (get temp___388 2 2) temp___397))))))
(assert (forall ((temp___402 Bool) (temp___403 Bool) (temp___404 Bool) (temp___405 Bool) (temp___406 Bool) (temp___407 Bool) (temp___408 Bool) (temp___409 Bool) (temp___410 Bool)) (let ((temp___401 (temp_____aggregate_def_400 temp___402 temp___403 temp___404 temp___405 temp___406 temp___407 temp___408 temp___409 temp___410))) (and (and (and (and (= (get temp___401 0 0) temp___402) (= (get temp___401 0 1) temp___403)) (= (get temp___401 0 2) temp___404)) (and (and (= (get temp___401 1 0) temp___405) (= (get temp___401 1 1) temp___406)) (= (get temp___401 1 2) temp___407))) (and (and (= (get temp___401 2 0) temp___408) (= (get temp___401 2 1) temp___409)) (= (get temp___401 2 2) temp___410))))))
(assert (forall ((temp___415 Bool) (temp___416 Bool) (temp___417 Bool) (temp___418 Bool) (temp___419 Bool) (temp___420 Bool) (temp___421 Bool) (temp___422 Bool) (temp___423 Bool)) (let ((temp___414 (temp_____aggregate_def_413 temp___415 temp___416 temp___417 temp___418 temp___419 temp___420 temp___421 temp___422 temp___423))) (and (and (and (and (= (get temp___414 0 0) temp___415) (= (get temp___414 0 1) temp___416)) (= (get temp___414 0 2) temp___417)) (and (and (= (get temp___414 1 0) temp___418) (= (get temp___414 1 1) temp___419)) (= (get temp___414 1 2) temp___420))) (and (and (= (get temp___414 2 0) temp___421) (= (get temp___414 2 1) temp___422)) (= (get temp___414 2 2) temp___423))))))
(assert (forall ((temp___428 Bool) (temp___429 Bool) (temp___430 Bool) (temp___431 Bool) (temp___432 Bool) (temp___433 Bool) (temp___434 Bool) (temp___435 Bool) (temp___436 Bool)) (let ((temp___427 (temp_____aggregate_def_426 temp___428 temp___429 temp___430 temp___431 temp___432 temp___433 temp___434 temp___435 temp___436))) (and (and (and (and (= (get temp___427 0 0) temp___428) (= (get temp___427 0 1) temp___429)) (= (get temp___427 0 2) temp___430)) (and (and (= (get temp___427 1 0) temp___431) (= (get temp___427 1 1) temp___432)) (= (get temp___427 1 2) temp___433))) (and (and (= (get temp___427 2 0) temp___434) (= (get temp___427 2 1) temp___435)) (= (get temp___427 2 2) temp___436))))))
(assert (forall ((temp___441 Bool) (temp___442 Bool) (temp___443 Bool) (temp___444 Bool) (temp___445 Bool) (temp___446 Bool) (temp___447 Bool) (temp___448 Bool) (temp___449 Bool)) (let ((temp___440 (temp_____aggregate_def_439 temp___441 temp___442 temp___443 temp___444 temp___445 temp___446 temp___447 temp___448 temp___449))) (and (and (and (and (= (get temp___440 0 0) temp___441) (= (get temp___440 0 1) temp___442)) (= (get temp___440 0 2) temp___443)) (and (and (= (get temp___440 1 0) temp___444) (= (get temp___440 1 1) temp___445)) (= (get temp___440 1 2) temp___446))) (and (and (= (get temp___440 2 0) temp___447) (= (get temp___440 2 1) temp___448)) (= (get temp___440 2 2) temp___449))))))
(assert (forall ((temp___454 Bool) (temp___455 Bool) (temp___456 Bool) (temp___457 Bool) (temp___458 Bool) (temp___459 Bool) (temp___460 Bool) (temp___461 Bool) (temp___462 Bool)) (let ((temp___453 (temp_____aggregate_def_452 temp___454 temp___455 temp___456 temp___457 temp___458 temp___459 temp___460 temp___461 temp___462))) (and (and (and (and (= (get temp___453 0 0) temp___454) (= (get temp___453 0 1) temp___455)) (= (get temp___453 0 2) temp___456)) (and (and (= (get temp___453 1 0) temp___457) (= (get temp___453 1 1) temp___458)) (= (get temp___453 1 2) temp___459))) (and (and (= (get temp___453 2 0) temp___460) (= (get temp___453 2 1) temp___461)) (= (get temp___453 2 2) temp___462))))))
(assert (forall ((temp___467 Bool) (temp___468 Bool) (temp___469 Bool) (temp___470 Bool) (temp___471 Bool) (temp___472 Bool) (temp___473 Bool) (temp___474 Bool) (temp___475 Bool)) (let ((temp___466 (temp_____aggregate_def_465 temp___467 temp___468 temp___469 temp___470 temp___471 temp___472 temp___473 temp___474 temp___475))) (and (and (and (and (= (get temp___466 0 0) temp___467) (= (get temp___466 0 1) temp___468)) (= (get temp___466 0 2) temp___469)) (and (and (= (get temp___466 1 0) temp___470) (= (get temp___466 1 1) temp___471)) (= (get temp___466 1 2) temp___472))) (and (and (= (get temp___466 2 0) temp___473) (= (get temp___466 2 1) temp___474)) (= (get temp___466 2 2) temp___475))))))
(assert (forall ((temp___480 Bool) (temp___481 Bool) (temp___482 Bool) (temp___483 Bool) (temp___484 Bool) (temp___485 Bool) (temp___486 Bool) (temp___487 Bool) (temp___488 Bool)) (let ((temp___479 (temp_____aggregate_def_478 temp___480 temp___481 temp___482 temp___483 temp___484 temp___485 temp___486 temp___487 temp___488))) (and (and (and (and (= (get temp___479 0 0) temp___480) (= (get temp___479 0 1) temp___481)) (= (get temp___479 0 2) temp___482)) (and (and (= (get temp___479 1 0) temp___483) (= (get temp___479 1 1) temp___484)) (= (get temp___479 1 2) temp___485))) (and (and (= (get temp___479 2 0) temp___486) (= (get temp___479 2 1) temp___487)) (= (get temp___479 2 2) temp___488))))))
(assert (forall ((temp___493 Bool) (temp___494 Bool) (temp___495 Bool) (temp___496 Bool) (temp___497 Bool) (temp___498 Bool) (temp___499 Bool) (temp___500 Bool) (temp___501 Bool)) (let ((temp___492 (temp_____aggregate_def_491 temp___493 temp___494 temp___495 temp___496 temp___497 temp___498 temp___499 temp___500 temp___501))) (and (and (and (and (= (get temp___492 0 0) temp___493) (= (get temp___492 0 1) temp___494)) (= (get temp___492 0 2) temp___495)) (and (and (= (get temp___492 1 0) temp___496) (= (get temp___492 1 1) temp___497)) (= (get temp___492 1 2) temp___498))) (and (and (= (get temp___492 2 0) temp___499) (= (get temp___492 2 1) temp___500)) (= (get temp___492 2 2) temp___501))))))
(assert (forall ((temp___506 Bool) (temp___507 Bool) (temp___508 Bool) (temp___509 Bool) (temp___510 Bool) (temp___511 Bool) (temp___512 Bool) (temp___513 Bool) (temp___514 Bool)) (let ((temp___505 (temp_____aggregate_def_504 temp___506 temp___507 temp___508 temp___509 temp___510 temp___511 temp___512 temp___513 temp___514))) (and (and (and (and (= (get temp___505 0 0) temp___506) (= (get temp___505 0 1) temp___507)) (= (get temp___505 0 2) temp___508)) (and (and (= (get temp___505 1 0) temp___509) (= (get temp___505 1 1) temp___510)) (= (get temp___505 1 2) temp___511))) (and (and (= (get temp___505 2 0) temp___512) (= (get temp___505 2 1) temp___513)) (= (get temp___505 2 2) temp___514))))))
(assert (forall ((temp___519 Bool) (temp___520 Bool) (temp___521 Bool) (temp___522 Bool) (temp___523 Bool) (temp___524 Bool) (temp___525 Bool) (temp___526 Bool) (temp___527 Bool)) (let ((temp___518 (temp_____aggregate_def_517 temp___519 temp___520 temp___521 temp___522 temp___523 temp___524 temp___525 temp___526 temp___527))) (and (and (and (and (= (get temp___518 0 0) temp___519) (= (get temp___518 0 1) temp___520)) (= (get temp___518 0 2) temp___521)) (and (and (= (get temp___518 1 0) temp___522) (= (get temp___518 1 1) temp___523)) (= (get temp___518 1 2) temp___524))) (and (and (= (get temp___518 2 0) temp___525) (= (get temp___518 2 1) temp___526)) (= (get temp___518 2 2) temp___527))))))
(declare-const y Int)
(declare-const x Int)
(assert (= (tetris_initial__possible_i_shapes__aggregate_def (temp_____aggregate_def_165 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_185 (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_205 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_225 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0))) possible_i_shapes))
(assert (= (tetris_initial__possible_three_shapes__aggregate_def (temp_____aggregate_def_270 (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_283 (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_296 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0)) (temp_____aggregate_def_309 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_322 (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_335 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0)) (temp_____aggregate_def_348 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_361 (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_374 (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_387 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0)) (temp_____aggregate_def_400 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_413 (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_426 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_439 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_452 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_465 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_478 (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 0 0)) (temp_____aggregate_def_491 (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_504 (distinct 0 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 0 0) (distinct 1 0) (distinct 1 0)) (temp_____aggregate_def_517 (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 1 0) (distinct 0 0) (distinct 1 0) (distinct 0 0) (distinct 0 0))) possible_three_shapes))
(assert (not (= (to_rep1 (rec__tetris_initial__piece__s (us_split_fields1 p))) 2)))
(assert (not (= (to_rep1 (rec__tetris_initial__piece__s (us_split_fields1 p))) 1)))
(assert (<= 0 y))
(assert (<= y 2))
(assert (<= 0 x))
(assert (<= x 2))
(assert (not (<= 3 (to_rep1 (rec__tetris_initial__piece__s (us_split_fields1 p))))))
(check-sat)
(exit)
