(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(declare-sort index 0)
(declare-fun indexqtint (index) Int)
(assert (forall ((i index)) (and (<= 1 (indexqtint i)) (<= (indexqtint i) 8))))
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 8)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (index index) Bool)
(declare-const dummy1 index)
(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))
(define-fun dynamic_invariant1 ((temp___expr_164 Int) (temp___is_init_160 Bool) (temp___skip_constant_161 Bool) (temp___do_toplevel_162 Bool) (temp___do_typ_inv_163 Bool)) Bool (=> (or (= temp___is_init_160 true) (<= 1 8)) (in_range1 temp___expr_164)))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const i Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-fun temp_____aggregate_def_340 ((Array Int integer) Int Int Int Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_349 (Int) (Array Int integer))
(declare-fun temp_____aggregate_def_476 (Int) (Array Int integer))
(declare-fun temp_____aggregate_def_480 ((Array Int integer) Int Int Int Int Int) (Array Int integer))
(declare-const rliteral integer)
(assert (= (integerqtint rliteral) 1))
(assert (forall ((temp___478 Int)) (=> (dynamic_invariant temp___478 true true true true) (forall ((temp___479 Int)) (= (select (temp_____aggregate_def_476 temp___478) temp___479) rliteral)))))
(declare-const rliteral1 integer)
(assert (= (integerqtint rliteral1) 2))
(assert (forall ((temp___482 (Array Int integer))) (forall ((temp___483 Int) (temp___484 Int) (temp___485 Int) (temp___486 Int) (temp___487 Int)) (let ((temp___481 (temp_____aggregate_def_480 temp___482 temp___483 temp___484 temp___485 temp___486 temp___487))) (=> (and (and (and (and (dynamic_invariant1 temp___483 true true true true) (dynamic_invariant temp___484 true true true true)) (dynamic_invariant1 temp___485 true true true true)) (dynamic_invariant1 temp___486 true true true true)) (dynamic_invariant temp___487 true true true true)) (forall ((temp___488 Int)) (ite (and (<= temp___485 temp___488) (<= temp___488 temp___486)) (= (to_rep (select temp___481 temp___488)) temp___487) (ite (= temp___488 temp___483) (= (select temp___481 temp___488) rliteral1) (= (select temp___481 temp___488) (select temp___482 temp___488))))))))))
(assert (forall ((temp___351 Int)) (=> (dynamic_invariant temp___351 true true true true) (forall ((temp___352 Int)) (= (select (temp_____aggregate_def_349 temp___351) temp___352) rliteral)))))
(assert (forall ((temp___342 (Array Int integer))) (forall ((temp___343 Int) (temp___344 Int) (temp___345 Int) (temp___346 Int) (temp___347 Int)) (let ((temp___341 (temp_____aggregate_def_340 temp___342 temp___343 temp___344 temp___345 temp___346 temp___347))) (=> (and (and (and (and (dynamic_invariant1 temp___343 true true true true) (dynamic_invariant temp___344 true true true true)) (dynamic_invariant1 temp___345 true true true true)) (dynamic_invariant1 temp___346 true true true true)) (dynamic_invariant temp___347 true true true true)) (forall ((temp___348 Int)) (ite (and (<= temp___345 temp___348) (<= temp___348 temp___346)) (= (to_rep (select temp___341 temp___348)) temp___347) (ite (= temp___348 temp___343) (= (select temp___341 temp___348) rliteral1) (= (select temp___341 temp___348) (select temp___342 temp___348))))))))))
(declare-const x Int)
(declare-const a (Array Int integer))
(declare-const result (Array Int integer))
(declare-const a1 (Array Int integer))
(declare-const result1 (Array Int integer))
(declare-const a2 (Array Int integer))
(declare-const a3 (Array Int integer))
(declare-const a4 (Array Int integer))
(assert (in_range x))
(assert (in_range1 i))
(assert (= result a))
(assert (= a1 (temp_____aggregate_def_476 1)))
(assert (= result1 a1))
(assert (= a2 (temp_____aggregate_def_480 a1 i 2 4 5 x)))
(assert (= a2 a3))
(assert (= a4 a2))
(assert (not (= (bool_eq a3 1 8 (temp_____aggregate_def_340 (temp_____aggregate_def_349 1) i 2 4 5 x) 1 8) true)))
(check-sat)
(exit)
