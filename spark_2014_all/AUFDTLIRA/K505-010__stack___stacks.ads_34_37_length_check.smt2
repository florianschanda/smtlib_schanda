(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (positive positive) Bool)
(declare-const dummy positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range temp___expr_46)))
(define-fun to_rep ((x positive)) Int (positiveqtint x))
(declare-fun of_rep (Int) positive)
(assert (forall ((x positive)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x positive)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (integer integer) Bool)
(declare-const dummy1 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort element 0)
(declare-fun elementqtint (element) Int)
(assert (forall ((i element)) (and (<= (- 2147483648) (elementqtint i)) (<= (elementqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (element element) Bool)
(declare-const dummy2 element)
(declare-datatypes () ((element__ref (mk_element__ref (element__content element)))))
(define-fun element__ref___projection ((a element__ref)) element (element__content a))
(define-fun to_rep2 ((x element)) Int (elementqtint x))
(declare-fun of_rep2 (Int) element)
(assert (forall ((x element)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x element)) (! (in_range2 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int element))))))
(declare-fun slide ((Array Int element) Int Int) (Array Int element))
(assert (forall ((a (Array Int element))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int element))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int element)) (a__first Int) (a__last Int) (b (Array Int element)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (to_rep2 (select a temp___idx_155)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_155))))))) true false))
(assert (forall ((a (Array Int element)) (b (Array Int element))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (to_rep2 (select a temp___idx_155)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_155)))))))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((t7s__ref (mk_t7s__ref (t7s__content integer)))))
(define-fun t7s__ref___projection ((a t7s__ref)) integer (t7s__content a))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int element)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int element) (elts a))
(define-fun of_array ((a (Array Int element)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int element)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int element)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int element)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int element))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq4 (us_t us_t) Bool)
(declare-const dummy4 us_t)
(declare-datatypes () ((t8s__ref (mk_t8s__ref (t8s__content us_t)))))
(define-fun t8s__ref___projection ((a t8s__ref)) us_t (t8s__content a))
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t9s__ref (mk_t9s__ref (t9s__content integer)))))
(define-fun t9s__ref___projection ((a t9s__ref)) integer (t9s__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int element)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int element) (elts1 a))
(define-fun of_array1 ((a (Array Int element)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int element)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int element)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int element)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int element))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq6 (us_t1 us_t1) Bool)
(declare-const dummy6 us_t1)
(declare-datatypes () ((t10s__ref (mk_t10s__ref (t10s__content us_t1)))))
(define-fun t10s__ref___projection ((a t10s__ref)) us_t1 (t10s__content a))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq7 (natural natural) Bool)
(declare-const dummy7 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun to_rep3 ((x natural)) Int (naturalqtint x))
(declare-fun of_rep3 (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x natural)) (! (in_range3 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__stacks__stack__max positive)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) positive (rec__stacks__stack__max a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__stacks__stack__top natural) (rec__stacks__stack__data us_t) (rec__ext__ us_private)))))
(define-fun us_split_fields_Top__projection ((a us_split_fields)) natural (rec__stacks__stack__top a))
(define-fun us_split_fields_Data__projection ((a us_split_fields)) us_t (rec__stacks__stack__data a))
(define-fun us_split_fields___projection ((a us_split_fields)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields) (attr__tag Int)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___3__projection ((a us_rep)) Int (attr__tag a))
(define-fun bool_eq3 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep (rec__stacks__stack__max (us_split_discrs1 a))) (to_rep (rec__stacks__stack__max (us_split_discrs1 b)))) (and (= (to_rep3 (rec__stacks__stack__top (us_split_fields1 a))) (to_rep3 (rec__stacks__stack__top (us_split_fields1 b)))) (= (bool_eq1 (rec__stacks__stack__data (us_split_fields1 a)) (rec__stacks__stack__data (us_split_fields1 b))) true))) true false))
(declare-fun us_dispatch_eq (us_rep us_rep) Bool)
(declare-const us_tag Int)
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const stacks__stack__max__first__bit Int)
(declare-const stacks__stack__max__last__bit Int)
(declare-const stacks__stack__max__position Int)
(assert (<= 0 stacks__stack__max__first__bit))
(assert (< stacks__stack__max__first__bit stacks__stack__max__last__bit))
(assert (<= 0 stacks__stack__max__position))
(declare-const stacks__stack__top__first__bit Int)
(declare-const stacks__stack__top__last__bit Int)
(declare-const stacks__stack__top__position Int)
(assert (<= 0 stacks__stack__top__first__bit))
(assert (< stacks__stack__top__first__bit stacks__stack__top__last__bit))
(assert (<= 0 stacks__stack__top__position))
(declare-const stacks__stack__data__first__bit Int)
(declare-const stacks__stack__data__last__bit Int)
(declare-const stacks__stack__data__position Int)
(assert (<= 0 stacks__stack__data__first__bit))
(assert (< stacks__stack__data__first__bit stacks__stack__data__last__bit))
(assert (<= 0 stacks__stack__data__position))
(declare-fun user_eq8 (us_rep us_rep) Bool)
(declare-const dummy8 us_rep)
(declare-datatypes () ((stack__ref (mk_stack__ref (stack__content us_rep)))))
(define-fun stack__ref___projection ((a stack__ref)) us_rep (stack__content a))
(declare-fun temp_____aggregate_def_222 (Int Int Int) us_t1)
(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range3 temp___expr_39)))
(define-fun dynamic_invariant3 ((temp___expr_167 Int) (temp___is_init_163 Bool) (temp___skip_constant_164 Bool) (temp___do_toplevel_165 Bool) (temp___do_typ_inv_166 Bool)) Bool (=> (or (= temp___is_init_163 true) (<= (- 2147483648) 2147483647)) (in_range2 temp___expr_167)))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int element)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int element) (elts2 a))
(define-fun of_array2 ((a (Array Int element)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int element)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int element)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int element)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int element))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq4 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq9 (us_t2 us_t2) Bool)
(declare-const dummy9 us_t2)
(declare-datatypes () ((elements__ref (mk_elements__ref (elements__content us_t2)))))
(define-fun elements__ref___projection ((a elements__ref)) us_t2 (elements__content a))
(define-fun dynamic_invariant4 ((temp___expr_174 us_t2) (temp___is_init_170 Bool) (temp___skip_constant_171 Bool) (temp___do_toplevel_172 Bool) (temp___do_typ_inv_173 Bool)) Bool (=> (not (= temp___skip_constant_171 true)) (dynamic_property4 (- 2147483648) 2147483647 (first5 temp___expr_174) (last5 temp___expr_174))))
(define-fun dynamic_invariant5 ((temp___expr_180 us_rep) (temp___is_init_176 Bool) (temp___skip_constant_177 Bool) (temp___do_toplevel_178 Bool) (temp___do_typ_inv_179 Bool)) Bool (let ((temp___181 (rec__stacks__stack__max (us_split_discrs1 temp___expr_180)))) (and (dynamic_property1 1 (to_rep temp___181) (first1 (rec__stacks__stack__data (us_split_fields1 temp___expr_180))) (last1 (rec__stacks__stack__data (us_split_fields1 temp___expr_180)))) (and (= (first1 (rec__stacks__stack__data (us_split_fields1 temp___expr_180))) 1) (= (last1 (rec__stacks__stack__data (us_split_fields1 temp___expr_180))) (to_rep temp___181))))))
(declare-const rliteral element)
(assert (= (elementqtint rliteral) 0))
(assert (forall ((temp___224 Int) (temp___225 Int) (temp___226 Int)) (let ((temp___223 (temp_____aggregate_def_222 temp___224 temp___225 temp___226))) (=> (dynamic_invariant3 temp___224 true true true true) (and (=> (dynamic_property4 (- 2147483648) 2147483647 temp___225 temp___226) (and (= (first3 temp___223) temp___225) (= (last3 temp___223) temp___226))) (forall ((temp___227 Int)) (= (select (to_array1 temp___223) temp___227) rliteral)))))))
(declare-const temp___221 Int)
(declare-const temp___220 positive)
(declare-const temp___229 (Array Int element))
(declare-const temp___2291 t1)
(assert (in_range temp___221))
(assert (= temp___221 (to_rep temp___220)))
(assert (= (to_rep1 (first2 (rt1 (temp_____aggregate_def_222 0 1 temp___221)))) 1))
(assert (= (to_rep1 (last2 (rt1 (temp_____aggregate_def_222 0 1 temp___221)))) temp___221))
(assert (= (mk___t1 temp___229 temp___2291) (temp_____aggregate_def_222 0 1 temp___221)))
(assert (not (= (ite (<= (to_rep1 (first2 temp___2291)) (to_rep1 (last2 temp___2291))) (+ (- (to_rep1 (last2 temp___2291)) (to_rep1 (first2 temp___2291))) 1) 0) (ite (<= 1 temp___221) (+ (- temp___221 1) 1) 0))))
(check-sat)
(exit)
