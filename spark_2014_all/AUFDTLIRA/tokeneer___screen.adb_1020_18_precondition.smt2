(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort statust 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (statust statust) Bool)
(declare-const dummy4 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant ((temp___expr_208 Int) (temp___is_init_205 Bool) (temp___skip_constant_206 Bool) (temp___do_toplevel_207 Bool)) Bool (=> (or (= temp___is_init_205 true) (<= 0 1)) (in_range4 temp___expr_208)))
(declare-const nouser (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun temp___String_Literal_135 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_135 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_135 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 3)) 85)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 13)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 18)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 20)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 21)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 23)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 24)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 25)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 26)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 27)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 28)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 29)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 30)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 31)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 32)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 33)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 34)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 35)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 36)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 37)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 38)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 39)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 40)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 41)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 42)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 43)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 44)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 45)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 46)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 47)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 48)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 49)) 32)) (= (to_rep (select (temp___String_Literal_135 us_void_param) 50)) 32)) :pattern ((temp___String_Literal_135 us_void_param)))))
(declare-fun valid_numberlogentries (us_private) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool us_private) Bool)
(declare-fun theauditalarm (us_private) Int)
(declare-fun theauditalarm__function_guard (Int us_private) Bool)
(assert (forall ((auditlog__state us_private)) (! (dynamic_invariant (theauditalarm auditlog__state) true false true) :pattern ((theauditalarm auditlog__state)))))
(declare-fun thedooralarm (us_private) Int)
(declare-fun thedooralarm__function_guard (Int us_private) Bool)
(assert (forall ((door__state us_private)) (! (dynamic_invariant (thedooralarm door__state) true false true) :pattern ((thedooralarm door__state)))))
(declare-sort statscount 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (statscount statscount) Bool)
(declare-const dummy5 statscount)
(declare-datatypes () ((statscount__ref (mk_statscount__ref (statscount__content statscount)))))
(define-fun statscount__ref___projection ((a statscount__ref)) statscount (statscount__content a))
(declare-fun to_rep2 (statscount) Int)
(declare-fun of_rep2 (Int) statscount)
(assert (forall ((x statscount)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x statscount)) (! (in_range5 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__stats__t__successentry statscount) (rec__stats__t__failentry statscount) (rec__stats__t__successbio statscount) (rec__stats__t__failbio statscount)))))
(define-fun us_split_fields_SuccessEntry__projection ((a us_split_fields)) statscount (rec__stats__t__successentry a))
(define-fun us_split_fields_FailEntry__projection ((a us_split_fields)) statscount (rec__stats__t__failentry a))
(define-fun us_split_fields_SuccessBio__projection ((a us_split_fields)) statscount (rec__stats__t__successbio a))
(define-fun us_split_fields_FailBio__projection ((a us_split_fields)) statscount (rec__stats__t__failbio a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (to_rep2 (rec__stats__t__successentry (us_split_fields1 a))) (to_rep2 (rec__stats__t__successentry (us_split_fields1 b)))) (= (to_rep2 (rec__stats__t__failentry (us_split_fields1 a))) (to_rep2 (rec__stats__t__failentry (us_split_fields1 b))))) (= (to_rep2 (rec__stats__t__successbio (us_split_fields1 a))) (to_rep2 (rec__stats__t__successbio (us_split_fields1 b))))) (= (to_rep2 (rec__stats__t__failbio (us_split_fields1 a))) (to_rep2 (rec__stats__t__failbio (us_split_fields1 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const stats__t__successentry__first__bit Int)
(declare-const stats__t__successentry__last__bit Int)
(declare-const stats__t__successentry__position Int)
(assert (<= 0 stats__t__successentry__first__bit))
(assert (< stats__t__successentry__first__bit stats__t__successentry__last__bit))
(assert (<= 0 stats__t__successentry__position))
(declare-const stats__t__failentry__first__bit Int)
(declare-const stats__t__failentry__last__bit Int)
(declare-const stats__t__failentry__position Int)
(assert (<= 0 stats__t__failentry__first__bit))
(assert (< stats__t__failentry__first__bit stats__t__failentry__last__bit))
(assert (<= 0 stats__t__failentry__position))
(declare-const stats__t__successbio__first__bit Int)
(declare-const stats__t__successbio__last__bit Int)
(declare-const stats__t__successbio__position Int)
(assert (<= 0 stats__t__successbio__first__bit))
(assert (< stats__t__successbio__first__bit stats__t__successbio__last__bit))
(assert (<= 0 stats__t__successbio__position))
(declare-const stats__t__failbio__first__bit Int)
(declare-const stats__t__failbio__last__bit Int)
(declare-const stats__t__failbio__position Int)
(assert (<= 0 stats__t__failbio__first__bit))
(assert (< stats__t__failbio__first__bit stats__t__failbio__last__bit))
(assert (<= 0 stats__t__failbio__position))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___4__projection ((a t__ref)) us_rep (t__content a))
(declare-sort privileget 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (privileget privileget) Bool)
(declare-const dummy7 privileget)
(declare-datatypes () ((privileget__ref (mk_privileget__ref (privileget__content privileget)))))
(define-fun privileget__ref___projection ((a privileget__ref)) privileget (privileget__content a))
(declare-fun to_rep3 (privileget) Int)
(declare-fun of_rep3 (Int) privileget)
(assert (forall ((x privileget)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x privileget)) (! (in_range6 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort opandnullt 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 4)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq8 (opandnullt opandnullt) Bool)
(declare-const dummy8 opandnullt)
(declare-datatypes () ((opandnullt__ref (mk_opandnullt__ref (opandnullt__content opandnullt)))))
(define-fun opandnullt__ref___projection ((a opandnullt__ref)) opandnullt (opandnullt__content a))
(declare-fun to_rep4 (opandnullt) Int)
(declare-fun of_rep4 (Int) opandnullt)
(assert (forall ((x opandnullt)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x opandnullt)) (! (in_range7 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__admin__t__rolepresent privileget) (rec__admin__t__currentop opandnullt)))))
(define-fun us_split_fields_RolePresent__projection ((a us_split_fields2)) privileget (rec__admin__t__rolepresent a))
(define-fun us_split_fields_CurrentOp__projection ((a us_split_fields2)) opandnullt (rec__admin__t__currentop a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___9__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___10__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep3 (rec__admin__t__rolepresent (us_split_fields3 a))) (to_rep3 (rec__admin__t__rolepresent (us_split_fields3 b)))) (= (to_rep4 (rec__admin__t__currentop (us_split_fields3 a))) (to_rep4 (rec__admin__t__currentop (us_split_fields3 b))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const admin__t__rolepresent__first__bit Int)
(declare-const admin__t__rolepresent__last__bit Int)
(declare-const admin__t__rolepresent__position Int)
(assert (<= 0 admin__t__rolepresent__first__bit))
(assert (< admin__t__rolepresent__first__bit admin__t__rolepresent__last__bit))
(assert (<= 0 admin__t__rolepresent__position))
(declare-const admin__t__currentop__first__bit Int)
(declare-const admin__t__currentop__last__bit Int)
(declare-const admin__t__currentop__position Int)
(assert (<= 0 admin__t__currentop__first__bit))
(assert (< admin__t__currentop__first__bit admin__t__currentop__last__bit))
(assert (<= 0 admin__t__currentop__position))
(declare-fun user_eq9 (us_rep1 us_rep1) Bool)
(declare-const dummy9 us_rep1)
(declare-datatypes () ((t__ref1 (mk_t__ref1 (t__content1 us_rep1)))))
(define-fun t__ref___5__projection ((a t__ref1)) us_rep1 (t__content1 a))
(declare-fun ispresent (us_rep1) Bool)
(declare-fun ispresent__function_guard (Bool us_rep1) Bool)
(assert true)
(declare-fun securityofficerispresent (us_rep1) Bool)
(declare-fun securityofficerispresent__function_guard (Bool us_rep1) Bool)
(assert true)
(declare-sort msgtextt 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 14)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq10 (msgtextt msgtextt) Bool)
(declare-const dummy10 msgtextt)
(declare-datatypes () ((msgtextt__ref (mk_msgtextt__ref (msgtextt__content msgtextt)))))
(define-fun msgtextt__ref___projection ((a msgtextt__ref)) msgtextt (msgtextt__content a))
(define-fun dynamic_invariant1 ((temp___expr_995 Int) (temp___is_init_992 Bool) (temp___skip_constant_993 Bool) (temp___do_toplevel_994 Bool)) Bool (=> (or (= temp___is_init_992 true) (<= 0 14)) (in_range8 temp___expr_995)))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const thestats us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const theadmin us_rep1)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__screen__screenstatst__isdisplayed Bool) (rec__screen__screenstatst__data us_rep)))))
(define-fun us_split_fields_IsDisplayed__projection ((a us_split_fields4)) Bool (rec__screen__screenstatst__isdisplayed a))
(define-fun us_split_fields_Data__projection ((a us_split_fields4)) us_rep (rec__screen__screenstatst__data a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___11__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___12__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq4 ((a us_rep2) (b us_rep2)) Bool (ite (and (= (rec__screen__screenstatst__isdisplayed (us_split_fields5 a)) (rec__screen__screenstatst__isdisplayed (us_split_fields5 b))) (= (bool_eq2 (rec__screen__screenstatst__data (us_split_fields5 a)) (rec__screen__screenstatst__data (us_split_fields5 b))) true)) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep2) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep2) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep2)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment3 a))))
(declare-const screen__screenstatst__isdisplayed__first__bit Int)
(declare-const screen__screenstatst__isdisplayed__last__bit Int)
(declare-const screen__screenstatst__isdisplayed__position Int)
(assert (<= 0 screen__screenstatst__isdisplayed__first__bit))
(assert (< screen__screenstatst__isdisplayed__first__bit screen__screenstatst__isdisplayed__last__bit))
(assert (<= 0 screen__screenstatst__isdisplayed__position))
(declare-const screen__screenstatst__data__first__bit Int)
(declare-const screen__screenstatst__data__last__bit Int)
(declare-const screen__screenstatst__data__position Int)
(assert (<= 0 screen__screenstatst__data__first__bit))
(assert (< screen__screenstatst__data__first__bit screen__screenstatst__data__last__bit))
(assert (<= 0 screen__screenstatst__data__position))
(declare-fun user_eq11 (us_rep2 us_rep2) Bool)
(declare-const dummy11 us_rep2)
(declare-datatypes () ((screenstatst__ref (mk_screenstatst__ref (screenstatst__content us_rep2)))))
(define-fun screenstatst__ref___projection ((a screenstatst__ref)) us_rep2 (screenstatst__content a))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-sort filesizet 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 4194304)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq12 (filesizet filesizet) Bool)
(declare-const dummy12 filesizet)
(declare-datatypes () ((filesizet__ref (mk_filesizet__ref (filesizet__content filesizet)))))
(define-fun filesizet__ref___projection ((a filesizet__ref)) filesizet (filesizet__content a))
(declare-fun to_rep5 (filesizet) Int)
(declare-fun of_rep5 (Int) filesizet)
(assert (forall ((x filesizet)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x filesizet)) (! (in_range9 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range9 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-sort durationt 0)
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 864000)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq13 (durationt durationt) Bool)
(declare-const dummy13 durationt)
(declare-datatypes () ((durationt__ref (mk_durationt__ref (durationt__content durationt)))))
(define-fun durationt__ref___projection ((a durationt__ref)) durationt (durationt__content a))
(declare-fun to_rep6 (durationt) Int)
(declare-fun of_rep6 (Int) durationt)
(assert (forall ((x durationt)) (! (= (of_rep6 (to_rep6 x)) x) :pattern ((to_rep6 x)))))
(assert (forall ((x durationt)) (! (in_range10 (to_rep6 x)) :pattern ((to_rep6 x)))))
(assert (forall ((x Int)) (! (=> (in_range10 x) (= (to_rep6 (of_rep6 x)) x)) :pattern ((to_rep6 (of_rep6 x))))))
(declare-sort fart 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq14 (fart fart) Bool)
(declare-const dummy14 fart)
(declare-datatypes () ((fart__ref (mk_fart__ref (fart__content fart)))))
(define-fun fart__ref___projection ((a fart__ref)) fart (fart__content a))
(declare-fun to_rep7 (fart) Int)
(declare-fun of_rep7 (Int) fart)
(assert (forall ((x fart)) (! (= (of_rep7 (to_rep7 x)) x) :pattern ((to_rep7 x)))))
(assert (forall ((x fart)) (! (in_range11 (to_rep7 x)) :pattern ((to_rep7 x)))))
(assert (forall ((x Int)) (! (=> (in_range11 x) (= (to_rep7 (of_rep7 x)) x)) :pattern ((to_rep7 (of_rep7 x))))))
(declare-sort classt 0)
(define-fun in_range12 ((x Int)) Bool (and (<= 0 x) (<= x 5)))
(declare-fun attr__ATTRIBUTE_IMAGE12 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check12 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE12 (us_image) Int)
(declare-fun user_eq15 (classt classt) Bool)
(declare-const dummy15 classt)
(declare-datatypes () ((classt__ref (mk_classt__ref (classt__content classt)))))
(define-fun classt__ref___projection ((a classt__ref)) classt (classt__content a))
(declare-fun to_rep8 (classt) Int)
(declare-fun of_rep8 (Int) classt)
(assert (forall ((x classt)) (! (= (of_rep8 (to_rep8 x)) x) :pattern ((to_rep8 x)))))
(assert (forall ((x classt)) (! (in_range12 (to_rep8 x)) :pattern ((to_rep8 x)))))
(assert (forall ((x Int)) (! (=> (in_range12 x) (= (to_rep8 (of_rep8 x)) x)) :pattern ((to_rep8 (of_rep8 x))))))
(declare-sort accesspolicyt 0)
(define-fun in_range13 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE13 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check13 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE13 (us_image) Int)
(declare-fun user_eq16 (accesspolicyt accesspolicyt) Bool)
(declare-const dummy16 accesspolicyt)
(declare-datatypes () ((accesspolicyt__ref (mk_accesspolicyt__ref (accesspolicyt__content accesspolicyt)))))
(define-fun accesspolicyt__ref___projection ((a accesspolicyt__ref)) accesspolicyt (accesspolicyt__content a))
(declare-fun to_rep9 (accesspolicyt) Int)
(declare-fun of_rep9 (Int) accesspolicyt)
(assert (forall ((x accesspolicyt)) (! (= (of_rep9 (to_rep9 x)) x) :pattern ((to_rep9 x)))))
(assert (forall ((x accesspolicyt)) (! (in_range13 (to_rep9 x)) :pattern ((to_rep9 x)))))
(assert (forall ((x Int)) (! (=> (in_range13 x) (= (to_rep9 (of_rep9 x)) x)) :pattern ((to_rep9 (of_rep9 x))))))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__screen__displayedconfigt__latchunlock durationt) (rec__screen__displayedconfigt__alarmsilent durationt) (rec__screen__displayedconfigt__fingerwait durationt) (rec__screen__displayedconfigt__tokenremove durationt) (rec__screen__displayedconfigt__workstart durationt) (rec__screen__displayedconfigt__workend durationt) (rec__screen__displayedconfigt__authduration durationt) (rec__screen__displayedconfigt__policy accesspolicyt) (rec__screen__displayedconfigt__minpreservedlog filesizet) (rec__screen__displayedconfigt__alarmthreshold filesizet) (rec__screen__displayedconfigt__minentry classt) (rec__screen__displayedconfigt__clearance classt) (rec__screen__displayedconfigt__maxfar fart)))))
(define-fun us_split_fields_LatchUnlock__projection ((a us_split_fields6)) durationt (rec__screen__displayedconfigt__latchunlock a))
(define-fun us_split_fields_AlarmSilent__projection ((a us_split_fields6)) durationt (rec__screen__displayedconfigt__alarmsilent a))
(define-fun us_split_fields_FingerWait__projection ((a us_split_fields6)) durationt (rec__screen__displayedconfigt__fingerwait a))
(define-fun us_split_fields_TokenRemove__projection ((a us_split_fields6)) durationt (rec__screen__displayedconfigt__tokenremove a))
(define-fun us_split_fields_WorkStart__projection ((a us_split_fields6)) durationt (rec__screen__displayedconfigt__workstart a))
(define-fun us_split_fields_WorkEnd__projection ((a us_split_fields6)) durationt (rec__screen__displayedconfigt__workend a))
(define-fun us_split_fields_AuthDuration__projection ((a us_split_fields6)) durationt (rec__screen__displayedconfigt__authduration a))
(define-fun us_split_fields_Policy__projection ((a us_split_fields6)) accesspolicyt (rec__screen__displayedconfigt__policy a))
(define-fun us_split_fields_MinPreservedLog__projection ((a us_split_fields6)) filesizet (rec__screen__displayedconfigt__minpreservedlog a))
(define-fun us_split_fields_AlarmThreshold__projection ((a us_split_fields6)) filesizet (rec__screen__displayedconfigt__alarmthreshold a))
(define-fun us_split_fields_MinEntry__projection ((a us_split_fields6)) classt (rec__screen__displayedconfigt__minentry a))
(define-fun us_split_fields_Clearance__projection ((a us_split_fields6)) classt (rec__screen__displayedconfigt__clearance a))
(define-fun us_split_fields_MaxFAR__projection ((a us_split_fields6)) fart (rec__screen__displayedconfigt__maxfar a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___12__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep3 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___13__projection ((a us_rep3)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq5 ((a us_rep3) (b us_rep3)) Bool (ite (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep6 (rec__screen__displayedconfigt__latchunlock (us_split_fields7 a))) (to_rep6 (rec__screen__displayedconfigt__latchunlock (us_split_fields7 b)))) (= (to_rep6 (rec__screen__displayedconfigt__alarmsilent (us_split_fields7 a))) (to_rep6 (rec__screen__displayedconfigt__alarmsilent (us_split_fields7 b))))) (= (to_rep6 (rec__screen__displayedconfigt__fingerwait (us_split_fields7 a))) (to_rep6 (rec__screen__displayedconfigt__fingerwait (us_split_fields7 b))))) (= (to_rep6 (rec__screen__displayedconfigt__tokenremove (us_split_fields7 a))) (to_rep6 (rec__screen__displayedconfigt__tokenremove (us_split_fields7 b))))) (= (to_rep6 (rec__screen__displayedconfigt__workstart (us_split_fields7 a))) (to_rep6 (rec__screen__displayedconfigt__workstart (us_split_fields7 b))))) (= (to_rep6 (rec__screen__displayedconfigt__workend (us_split_fields7 a))) (to_rep6 (rec__screen__displayedconfigt__workend (us_split_fields7 b))))) (= (to_rep6 (rec__screen__displayedconfigt__authduration (us_split_fields7 a))) (to_rep6 (rec__screen__displayedconfigt__authduration (us_split_fields7 b))))) (= (to_rep9 (rec__screen__displayedconfigt__policy (us_split_fields7 a))) (to_rep9 (rec__screen__displayedconfigt__policy (us_split_fields7 b))))) (= (to_rep5 (rec__screen__displayedconfigt__minpreservedlog (us_split_fields7 a))) (to_rep5 (rec__screen__displayedconfigt__minpreservedlog (us_split_fields7 b))))) (= (to_rep5 (rec__screen__displayedconfigt__alarmthreshold (us_split_fields7 a))) (to_rep5 (rec__screen__displayedconfigt__alarmthreshold (us_split_fields7 b))))) (= (to_rep8 (rec__screen__displayedconfigt__minentry (us_split_fields7 a))) (to_rep8 (rec__screen__displayedconfigt__minentry (us_split_fields7 b))))) (= (to_rep8 (rec__screen__displayedconfigt__clearance (us_split_fields7 a))) (to_rep8 (rec__screen__displayedconfigt__clearance (us_split_fields7 b))))) (= (to_rep7 (rec__screen__displayedconfigt__maxfar (us_split_fields7 a))) (to_rep7 (rec__screen__displayedconfigt__maxfar (us_split_fields7 b))))) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep3) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep3) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep3)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment4 a))))
(declare-const screen__displayedconfigt__latchunlock__first__bit Int)
(declare-const screen__displayedconfigt__latchunlock__last__bit Int)
(declare-const screen__displayedconfigt__latchunlock__position Int)
(assert (<= 0 screen__displayedconfigt__latchunlock__first__bit))
(assert (< screen__displayedconfigt__latchunlock__first__bit screen__displayedconfigt__latchunlock__last__bit))
(assert (<= 0 screen__displayedconfigt__latchunlock__position))
(declare-const screen__displayedconfigt__alarmsilent__first__bit Int)
(declare-const screen__displayedconfigt__alarmsilent__last__bit Int)
(declare-const screen__displayedconfigt__alarmsilent__position Int)
(assert (<= 0 screen__displayedconfigt__alarmsilent__first__bit))
(assert (< screen__displayedconfigt__alarmsilent__first__bit screen__displayedconfigt__alarmsilent__last__bit))
(assert (<= 0 screen__displayedconfigt__alarmsilent__position))
(declare-const screen__displayedconfigt__fingerwait__first__bit Int)
(declare-const screen__displayedconfigt__fingerwait__last__bit Int)
(declare-const screen__displayedconfigt__fingerwait__position Int)
(assert (<= 0 screen__displayedconfigt__fingerwait__first__bit))
(assert (< screen__displayedconfigt__fingerwait__first__bit screen__displayedconfigt__fingerwait__last__bit))
(assert (<= 0 screen__displayedconfigt__fingerwait__position))
(declare-const screen__displayedconfigt__tokenremove__first__bit Int)
(declare-const screen__displayedconfigt__tokenremove__last__bit Int)
(declare-const screen__displayedconfigt__tokenremove__position Int)
(assert (<= 0 screen__displayedconfigt__tokenremove__first__bit))
(assert (< screen__displayedconfigt__tokenremove__first__bit screen__displayedconfigt__tokenremove__last__bit))
(assert (<= 0 screen__displayedconfigt__tokenremove__position))
(declare-const screen__displayedconfigt__workstart__first__bit Int)
(declare-const screen__displayedconfigt__workstart__last__bit Int)
(declare-const screen__displayedconfigt__workstart__position Int)
(assert (<= 0 screen__displayedconfigt__workstart__first__bit))
(assert (< screen__displayedconfigt__workstart__first__bit screen__displayedconfigt__workstart__last__bit))
(assert (<= 0 screen__displayedconfigt__workstart__position))
(declare-const screen__displayedconfigt__workend__first__bit Int)
(declare-const screen__displayedconfigt__workend__last__bit Int)
(declare-const screen__displayedconfigt__workend__position Int)
(assert (<= 0 screen__displayedconfigt__workend__first__bit))
(assert (< screen__displayedconfigt__workend__first__bit screen__displayedconfigt__workend__last__bit))
(assert (<= 0 screen__displayedconfigt__workend__position))
(declare-const screen__displayedconfigt__authduration__first__bit Int)
(declare-const screen__displayedconfigt__authduration__last__bit Int)
(declare-const screen__displayedconfigt__authduration__position Int)
(assert (<= 0 screen__displayedconfigt__authduration__first__bit))
(assert (< screen__displayedconfigt__authduration__first__bit screen__displayedconfigt__authduration__last__bit))
(assert (<= 0 screen__displayedconfigt__authduration__position))
(declare-const screen__displayedconfigt__policy__first__bit Int)
(declare-const screen__displayedconfigt__policy__last__bit Int)
(declare-const screen__displayedconfigt__policy__position Int)
(assert (<= 0 screen__displayedconfigt__policy__first__bit))
(assert (< screen__displayedconfigt__policy__first__bit screen__displayedconfigt__policy__last__bit))
(assert (<= 0 screen__displayedconfigt__policy__position))
(declare-const screen__displayedconfigt__minpreservedlog__first__bit Int)
(declare-const screen__displayedconfigt__minpreservedlog__last__bit Int)
(declare-const screen__displayedconfigt__minpreservedlog__position Int)
(assert (<= 0 screen__displayedconfigt__minpreservedlog__first__bit))
(assert (< screen__displayedconfigt__minpreservedlog__first__bit screen__displayedconfigt__minpreservedlog__last__bit))
(assert (<= 0 screen__displayedconfigt__minpreservedlog__position))
(declare-const screen__displayedconfigt__alarmthreshold__first__bit Int)
(declare-const screen__displayedconfigt__alarmthreshold__last__bit Int)
(declare-const screen__displayedconfigt__alarmthreshold__position Int)
(assert (<= 0 screen__displayedconfigt__alarmthreshold__first__bit))
(assert (< screen__displayedconfigt__alarmthreshold__first__bit screen__displayedconfigt__alarmthreshold__last__bit))
(assert (<= 0 screen__displayedconfigt__alarmthreshold__position))
(declare-const screen__displayedconfigt__minentry__first__bit Int)
(declare-const screen__displayedconfigt__minentry__last__bit Int)
(declare-const screen__displayedconfigt__minentry__position Int)
(assert (<= 0 screen__displayedconfigt__minentry__first__bit))
(assert (< screen__displayedconfigt__minentry__first__bit screen__displayedconfigt__minentry__last__bit))
(assert (<= 0 screen__displayedconfigt__minentry__position))
(declare-const screen__displayedconfigt__clearance__first__bit Int)
(declare-const screen__displayedconfigt__clearance__last__bit Int)
(declare-const screen__displayedconfigt__clearance__position Int)
(assert (<= 0 screen__displayedconfigt__clearance__first__bit))
(assert (< screen__displayedconfigt__clearance__first__bit screen__displayedconfigt__clearance__last__bit))
(assert (<= 0 screen__displayedconfigt__clearance__position))
(declare-const screen__displayedconfigt__maxfar__first__bit Int)
(declare-const screen__displayedconfigt__maxfar__last__bit Int)
(declare-const screen__displayedconfigt__maxfar__position Int)
(assert (<= 0 screen__displayedconfigt__maxfar__first__bit))
(assert (< screen__displayedconfigt__maxfar__first__bit screen__displayedconfigt__maxfar__last__bit))
(assert (<= 0 screen__displayedconfigt__maxfar__position))
(declare-fun user_eq17 (us_rep3 us_rep3) Bool)
(declare-const dummy17 us_rep3)
(declare-datatypes () ((displayedconfigt__ref (mk_displayedconfigt__ref (displayedconfigt__content us_rep3)))))
(define-fun displayedconfigt__ref___projection ((a displayedconfigt__ref)) us_rep3 (displayedconfigt__content a))
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__screen__screenconfigt__isdisplayed Bool) (rec__screen__screenconfigt__data us_rep3)))))
(define-fun us_split_fields_IsDisplayed__2__projection ((a us_split_fields8)) Bool (rec__screen__screenconfigt__isdisplayed a))
(define-fun us_split_fields_Data__2__projection ((a us_split_fields8)) us_rep3 (rec__screen__screenconfigt__data a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___13__projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep4 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___14__projection ((a us_rep4)) us_split_fields8 (us_split_fields9 a))
(define-fun bool_eq6 ((a us_rep4) (b us_rep4)) Bool (ite (and (= (rec__screen__screenconfigt__isdisplayed (us_split_fields9 a)) (rec__screen__screenconfigt__isdisplayed (us_split_fields9 b))) (= (bool_eq5 (rec__screen__screenconfigt__data (us_split_fields9 a)) (rec__screen__screenconfigt__data (us_split_fields9 b))) true)) true false))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep4) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep4) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep4)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment5 a))))
(declare-const screen__screenconfigt__isdisplayed__first__bit Int)
(declare-const screen__screenconfigt__isdisplayed__last__bit Int)
(declare-const screen__screenconfigt__isdisplayed__position Int)
(assert (<= 0 screen__screenconfigt__isdisplayed__first__bit))
(assert (< screen__screenconfigt__isdisplayed__first__bit screen__screenconfigt__isdisplayed__last__bit))
(assert (<= 0 screen__screenconfigt__isdisplayed__position))
(declare-const screen__screenconfigt__data__first__bit Int)
(declare-const screen__screenconfigt__data__last__bit Int)
(declare-const screen__screenconfigt__data__position Int)
(assert (<= 0 screen__screenconfigt__data__first__bit))
(assert (< screen__screenconfigt__data__first__bit screen__screenconfigt__data__last__bit))
(assert (<= 0 screen__screenconfigt__data__position))
(declare-fun user_eq18 (us_rep4 us_rep4) Bool)
(declare-const dummy18 us_rep4)
(declare-datatypes () ((screenconfigt__ref (mk_screenconfigt__ref (screenconfigt__content us_rep4)))))
(define-fun screenconfigt__ref___projection ((a screenconfigt__ref)) us_rep4 (screenconfigt__content a))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-fun temp___String_Literal_1231 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1231 us_void_param) 1)) 83) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 2)) 99)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 3)) 114)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 4)) 101)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 6)) 110)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 8)) 85)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 9)) 112)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 10)) 100)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 11)) 97)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 12)) 116)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 13)) 101)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 15)) 70)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 16)) 97)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 17)) 105)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 18)) 108)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 19)) 117)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 20)) 114)) (= (to_rep (select (temp___String_Literal_1231 us_void_param) 21)) 101)) :pattern ((temp___String_Literal_1231 us_void_param)))))
(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant3 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant4 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant5 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant6 ((temp___expr_950 Int) (temp___is_init_947 Bool) (temp___skip_constant_948 Bool) (temp___do_toplevel_949 Bool)) Bool (=> (or (= temp___is_init_947 true) (<= 0 4)) (in_range7 temp___expr_950)))
(define-fun dynamic_invariant7 ((temp___expr_848 Int) (temp___is_init_845 Bool) (temp___skip_constant_846 Bool) (temp___do_toplevel_847 Bool)) Bool (=> (or (= temp___is_init_845 true) (<= 0 3)) (in_range6 temp___expr_848)))
(define-fun dynamic_invariant8 ((temp___expr_860 Int) (temp___is_init_857 Bool) (temp___skip_constant_858 Bool) (temp___do_toplevel_859 Bool)) Bool (=> (or (= temp___is_init_857 true) (<= 0 5)) (in_range12 temp___expr_860)))
(assert true)
(assert (= nouser (temp___String_Literal_135 Tuple0)))
(define-fun dynamic_invariant9 ((temp___expr_256 Int) (temp___is_init_253 Bool) (temp___skip_constant_254 Bool) (temp___do_toplevel_255 Bool)) Bool (=> (or (= temp___is_init_253 true) (<= 0 4194304)) (in_range9 temp___expr_256)))
(define-fun dynamic_invariant10 ((temp___expr_322 Int) (temp___is_init_319 Bool) (temp___skip_constant_320 Bool) (temp___do_toplevel_321 Bool)) Bool (=> (or (= temp___is_init_319 true) (<= 0 864000)) (in_range10 temp___expr_322)))
(define-fun dynamic_invariant11 ((temp___expr_879 Int) (temp___is_init_876 Bool) (temp___skip_constant_877 Bool) (temp___do_toplevel_878 Bool)) Bool (=> (or (= temp___is_init_876 true) (<= 0 1)) (in_range13 temp___expr_879)))
(define-fun dynamic_invariant12 ((temp___expr_784 Int) (temp___is_init_781 Bool) (temp___skip_constant_782 Bool) (temp___do_toplevel_783 Bool)) Bool (=> (or (= temp___is_init_781 true) (<= 0 2147483647)) (in_range11 temp___expr_784)))
(define-fun dynamic_invariant13 ((temp___expr_901 Int) (temp___is_init_898 Bool) (temp___skip_constant_899 Bool) (temp___do_toplevel_900 Bool)) Bool (=> (or (= temp___is_init_898 true) (<= 0 2147483647)) (in_range5 temp___expr_901)))
(declare-const themsg Int)
(declare-const currentmsg Int)
(declare-const currentstats__split_fields Bool)
(declare-const currentstats__split_fields1 statscount)
(declare-const currentstats__split_fields2 statscount)
(declare-const currentstats__split_fields3 statscount)
(declare-const currentstats__split_fields4 statscount)
(declare-const currentconfig__split_fields Bool)
(declare-const currentconfig__split_fields1 durationt)
(declare-const currentconfig__split_fields2 durationt)
(declare-const currentconfig__split_fields3 durationt)
(declare-const currentconfig__split_fields4 durationt)
(declare-const currentconfig__split_fields5 durationt)
(declare-const currentconfig__split_fields6 durationt)
(declare-const currentconfig__split_fields7 durationt)
(declare-const currentconfig__split_fields8 accesspolicyt)
(declare-const currentconfig__split_fields9 filesizet)
(declare-const currentconfig__split_fields10 filesizet)
(declare-const currentconfig__split_fields11 classt)
(declare-const currentconfig__split_fields12 classt)
(declare-const currentconfig__split_fields13 fart)
(declare-const currentdooralarm Int)
(declare-const currentlogalarm Int)
(declare-const shoulddisplaystats Bool)
(declare-const shoulddisplayconfig Bool)
(declare-const state us_private)
(declare-const state1 us_private)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Bool)
(declare-const o3 Bool)
(declare-const currentconfig__split_fields14 Bool)
(declare-const currentconfig__split_fields15 durationt)
(declare-const currentconfig__split_fields16 durationt)
(declare-const currentconfig__split_fields17 durationt)
(declare-const currentconfig__split_fields18 durationt)
(declare-const currentconfig__split_fields19 durationt)
(declare-const currentconfig__split_fields20 durationt)
(declare-const currentconfig__split_fields21 durationt)
(declare-const currentconfig__split_fields22 accesspolicyt)
(declare-const currentconfig__split_fields23 filesizet)
(declare-const currentconfig__split_fields24 filesizet)
(declare-const currentconfig__split_fields25 classt)
(declare-const currentconfig__split_fields26 classt)
(declare-const currentconfig__split_fields27 fart)
(declare-const screenok Bool)
(declare-const currentmsg1 Int)
(declare-const writeok Bool)
(declare-const result bool__ref)
(declare-const screenok1 Bool)
(declare-const currentdooralarm1 Int)
(declare-const currentlogalarm1 Int)
(declare-const writeok1 Bool)
(declare-const output us_private)
(declare-const result1 bool__ref)
(declare-const screenok2 Bool)
(declare-const result2 bool__ref)
(declare-const shoulddisplaystats1 Bool)
(declare-const writeok2 Bool)
(declare-const output1 us_private)
(declare-const result3 bool__ref)
(declare-const screenok3 Bool)
(declare-const writeok3 Bool)
(declare-const output2 us_private)
(declare-const result4 bool__ref)
(declare-const screenok4 Bool)
(declare-const writeok4 Bool)
(declare-const output3 us_private)
(declare-const result5 bool__ref)
(declare-const screenok5 Bool)
(declare-const result6 us_split_fields__ref2)
(declare-const currentstats__split_fields5 us_split_fields4)
(declare-const result7 bool__ref)
(declare-const shoulddisplayconfig1 Bool)
(declare-const writeok5 Bool)
(declare-const output4 us_private)
(declare-const result8 bool__ref)
(declare-const screenok6 Bool)
(declare-const currentconfig__split_fields28 us_split_fields8)
(declare-const writeok6 Bool)
(declare-const output5 us_private)
(declare-const result9 bool__ref)
(declare-const screenok7 Bool)
(declare-const writeok7 Bool)
(declare-const output6 us_private)
(declare-const result10 bool__ref)
(declare-const screenok8 Bool)
(declare-const result11 us_split_fields__ref4)
(declare-const currentconfig__split_fields29 us_split_fields8)
(assert (= (temp___String_Literal_135 Tuple0) nouser))
(assert (in_range8 themsg))
(assert (in_range8 currentmsg))
(assert (in_range4 currentdooralarm))
(assert (in_range4 currentlogalarm))
(assert (in_range8 currentmsg1))
(assert (= result (mk_bool__ref screenok)))
(assert (= screenok1 (ite (= writeok true) screenok false)))
(assert (and (= o1 (theauditalarm state)) (in_range4 o1)))
(assert (and (= o (thedooralarm state1)) (in_range4 o)))
(assert (and (in_range4 currentdooralarm1) (in_range4 currentlogalarm1)))
(assert (= result1 (mk_bool__ref screenok1)))
(assert (= screenok2 (ite (= writeok1 true) screenok1 false)))
(assert (= o2 (ispresent theadmin)))
(assert (= result2 (mk_bool__ref shoulddisplaystats)))
(assert (= shoulddisplaystats1 o2))
(assert (=> (= shoulddisplaystats1 true) (=> (not (= currentstats__split_fields true)) (= result3 (mk_bool__ref screenok2)))))
(assert (=> (= shoulddisplaystats1 true) (=> (not (= currentstats__split_fields true)) (= screenok3 (ite (= writeok2 true) screenok2 false)))))
(assert (=> (= shoulddisplaystats1 true) (=> (not (not (= currentstats__split_fields true))) (= output1 output))))
(assert (=> (= shoulddisplaystats1 true) (=> (not (not (= currentstats__split_fields true))) (= writeok2 writeok1))))
(assert (=> (= shoulddisplaystats1 true) (=> (not (not (= currentstats__split_fields true))) (= screenok3 screenok2))))
(assert (=> (= shoulddisplaystats1 true) (= result4 (mk_bool__ref screenok3))))
(assert (=> (= shoulddisplaystats1 true) (= screenok4 (ite (= writeok3 true) screenok3 false))))
(assert (=> (not (= shoulddisplaystats1 true)) (=> (= currentstats__split_fields true) (= result5 (mk_bool__ref screenok2)))))
(assert (=> (not (= shoulddisplaystats1 true)) (=> (= currentstats__split_fields true) (= screenok5 (ite (= writeok4 true) screenok2 false)))))
(assert (=> (not (= shoulddisplaystats1 true)) (=> (not (= currentstats__split_fields true)) (= output3 output))))
(assert (=> (not (= shoulddisplaystats1 true)) (=> (not (= currentstats__split_fields true)) (= writeok4 writeok1))))
(assert (=> (not (= shoulddisplaystats1 true)) (=> (not (= currentstats__split_fields true)) (= screenok5 screenok2))))
(assert (=> (not (= shoulddisplaystats1 true)) (= output2 output3)))
(assert (=> (not (= shoulddisplaystats1 true)) (= writeok3 writeok4)))
(assert (=> (not (= shoulddisplaystats1 true)) (= screenok4 screenok5)))
(assert (= result6 (mk___split_fields__ref2 (mk___split_fields2 currentstats__split_fields (mk___rep (mk___split_fields currentstats__split_fields1 currentstats__split_fields2 currentstats__split_fields3 currentstats__split_fields4))))))
(assert (= currentstats__split_fields5 (mk___split_fields2 shoulddisplaystats1 thestats)))
(assert (= o3 (securityofficerispresent theadmin)))
(assert (= result7 (mk_bool__ref shoulddisplayconfig)))
(assert (= shoulddisplayconfig1 o3))
(assert (=> (= shoulddisplayconfig1 true) (=> (not (= currentconfig__split_fields true)) (= result8 (mk_bool__ref screenok4)))))
(assert (=> (= shoulddisplayconfig1 true) (=> (not (= currentconfig__split_fields true)) (= screenok6 (ite (= writeok5 true) screenok4 false)))))
(assert (=> (= shoulddisplayconfig1 true) (=> (not (not (= currentconfig__split_fields true))) (= output4 output2))))
(assert (=> (= shoulddisplayconfig1 true) (=> (not (not (= currentconfig__split_fields true))) (= writeok5 writeok3))))
(assert (=> (= shoulddisplayconfig1 true) (=> (not (not (= currentconfig__split_fields true))) (= screenok6 screenok4))))
(assert (=> (= shoulddisplayconfig1 true) (= result9 (mk_bool__ref screenok6))))
(assert (=> (= shoulddisplayconfig1 true) (= screenok7 (ite (= writeok6 true) screenok6 false))))
(assert (=> (not (= shoulddisplayconfig1 true)) (=> (= currentconfig__split_fields true) (= result10 (mk_bool__ref screenok4)))))
(assert (=> (not (= shoulddisplayconfig1 true)) (=> (= currentconfig__split_fields true) (= screenok8 (ite (= writeok7 true) screenok4 false)))))
(assert (=> (not (= shoulddisplayconfig1 true)) (=> (not (= currentconfig__split_fields true)) (= output6 output2))))
(assert (=> (not (= shoulddisplayconfig1 true)) (=> (not (= currentconfig__split_fields true)) (= writeok7 writeok3))))
(assert (=> (not (= shoulddisplayconfig1 true)) (=> (not (= currentconfig__split_fields true)) (= screenok8 screenok4))))
(assert (=> (not (= shoulddisplayconfig1 true)) (= output5 output6)))
(assert (=> (not (= shoulddisplayconfig1 true)) (= writeok6 writeok7)))
(assert (=> (not (= shoulddisplayconfig1 true)) (= screenok7 screenok8)))
(assert (=> (not (= shoulddisplayconfig1 true)) (= currentconfig__split_fields28 (mk___split_fields4 currentconfig__split_fields (mk___rep3 (mk___split_fields3 currentconfig__split_fields1 currentconfig__split_fields2 currentconfig__split_fields3 currentconfig__split_fields4 currentconfig__split_fields5 currentconfig__split_fields6 currentconfig__split_fields7 currentconfig__split_fields8 currentconfig__split_fields9 currentconfig__split_fields10 currentconfig__split_fields11 currentconfig__split_fields12 currentconfig__split_fields13))))))
(assert (=> (not (= shoulddisplayconfig1 true)) (= output5 output6)))
(assert (=> (not (= shoulddisplayconfig1 true)) (= writeok6 writeok7)))
(assert (=> (not (= shoulddisplayconfig1 true)) (= screenok7 screenok8)))
(assert (=> (not (= shoulddisplayconfig1 true)) (= currentconfig__split_fields28 (mk___split_fields4 currentconfig__split_fields14 (mk___rep3 (mk___split_fields3 currentconfig__split_fields15 currentconfig__split_fields16 currentconfig__split_fields17 currentconfig__split_fields18 currentconfig__split_fields19 currentconfig__split_fields20 currentconfig__split_fields21 currentconfig__split_fields22 currentconfig__split_fields23 currentconfig__split_fields24 currentconfig__split_fields25 currentconfig__split_fields26 currentconfig__split_fields27))))))
(assert (= result11 (mk___split_fields__ref4 currentconfig__split_fields28)))
(assert (= currentconfig__split_fields29 (mk___split_fields4 shoulddisplayconfig1 (rec__screen__screenconfigt__data currentconfig__split_fields28))))
(assert (not (= screenok7 true)))
(assert (not (= (valid_numberlogentries state) true)))
(check-sat)
(exit)
