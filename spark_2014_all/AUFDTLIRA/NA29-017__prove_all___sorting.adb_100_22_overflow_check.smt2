(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range2 temp___expr_39)))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq2 (us_t us_t) Bool)
(declare-const dummy2 us_t)
(declare-datatypes () ((int_array__ref (mk_int_array__ref (int_array__content us_t)))))
(define-fun int_array__ref___projection ((a int_array__ref)) us_t (int_array__content a))
(declare-fun sorted (us_t Int Int) Bool)
(declare-fun sorted__function_guard (Bool us_t Int Int) Bool)
(define-fun dynamic_invariant1 ((temp___expr_159 us_t) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (=> (not (= temp___skip_constant_156 true)) (dynamic_property 0 2147483647 (first1 temp___expr_159) (last1 temp___expr_159))))
(assert true)
(declare-fun perm (us_t us_t Int Int) Bool)
(declare-fun perm__function_guard (Bool us_t us_t Int Int) Bool)
(assert true)
(declare-fun perm2 (us_t us_t Int Int Int Int Int) Bool)
(declare-fun perm2__function_guard (Bool us_t us_t Int Int Int Int Int) Bool)
(assert true)
(declare-fun le_array (us_t us_t Int Int Int Int) Bool)
(declare-fun le_array__function_guard (Bool us_t us_t Int Int Int Int) Bool)
(assert true)
(declare-const a__first integer)
(declare-const a__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const b__first integer)
(declare-const b__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const a_first Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const length1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const length2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(define-fun dynamic_invariant2 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-const a (Array Int integer))
(declare-const i Int)
(declare-const j Int)
(declare-const temp___286 Int)
(declare-const o Int)
(declare-const o1 integer)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const temp___287 Int)
(declare-const o4 Int)
(declare-const o5 integer)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const temp___288 Int)
(declare-const o10 Int)
(declare-const o11 integer)
(declare-const o12 Int)
(declare-const o13 integer)
(declare-const result Int)
(declare-const i1 Int)
(declare-const result1 Int)
(declare-const j1 Int)
(declare-const b (Array Int integer))
(declare-const i2 Int)
(declare-const j2 Int)
(declare-const result2 Bool)
(assert (dynamic_property 0 2147483647 (to_rep a__first) (to_rep a__last)))
(assert (dynamic_property 0 2147483647 (to_rep b__first) (to_rep b__last)))
(assert (in_range2 a_first))
(assert (in_range2 length1))
(assert (in_range2 length2))
(assert (and (and (and (and (and (and (<= (to_rep a__first) a_first) (<= (+ (+ a_first length1) length2) (+ (to_rep a__last) 1))) (<= (+ length1 length2) (ite (<= (to_rep b__first) (to_rep b__last)) (+ (- (to_rep b__last) (to_rep b__first)) 1) 0))) (<= (+ length1 length2) 2147483647)) (= (sorted (mk___t a (mk (to_rep a__first) (to_rep a__last))) a_first length1) true)) (= (sorted (mk___t a (mk (to_rep a__first) (to_rep a__last))) (+ a_first length1) length2) true)) (<= (to_rep b__first) (to_rep b__last))))
(assert (=> (<= 0 2147483647) (in_range2 i)))
(assert (=> (<= 0 2147483647) (in_range2 j)))
(assert (= (mk_int__ref result) (mk_int__ref i)))
(assert (= i1 0))
(assert (= (mk_int__ref result1) (mk_int__ref j)))
(assert (= j1 0))
(assert (and (and (and (and (and (and (<= i2 length1) (<= j2 length2)) (= (sorted (mk___t b (mk (to_rep b__first) (to_rep b__last))) (to_rep b__first) (+ i2 j2)) true)) (= (perm2 (mk___t a (mk (to_rep a__first) (to_rep a__last))) (mk___t b (mk (to_rep b__first) (to_rep b__last))) a_first (+ a_first length1) (to_rep b__first) i2 j2) true)) (= (le_array (mk___t b (mk (to_rep b__first) (to_rep b__last))) (mk___t a (mk (to_rep a__first) (to_rep a__last))) (to_rep b__first) (+ a_first i2) (+ i2 j2) (- length1 i2)) true)) (= (le_array (mk___t b (mk (to_rep b__first) (to_rep b__last))) (mk___t a (mk (to_rep a__first) (to_rep a__last))) (to_rep b__first) (+ (+ a_first length1) j2) (+ i2 j2) (- length2 j2)) true)) (= (bool_eq a (to_rep a__first) (to_rep a__last) a (to_rep a__first) (to_rep a__last)) true)))
(assert (and (=> (<= 0 2147483647) (in_range2 i2)) (=> (<= 0 2147483647) (in_range2 j2))))
(assert (or (< i2 length1) (< j2 length2)))
(assert (=> (= j2 length2) (= result2 true)))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (and (= o2 (+ a_first length1)) (in_range1 (+ a_first length1))))))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (= o3 (+ o2 j2)))))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (and (= temp___287 o3) (in_range1 o3)))))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (and (<= (to_rep a__first) temp___287) (<= temp___287 (to_rep a__last))))))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (= o4 temp___287))))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (= o5 (select a o4)))))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (= o6 (to_rep o5)))))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (and (= temp___286 (+ a_first i2)) (in_range1 (+ a_first i2))))))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (and (<= (to_rep a__first) temp___286) (<= temp___286 (to_rep a__last))))))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (= o temp___286))))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (= o1 (select a o)))))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (= o7 (to_rep o1)))))
(assert (=> (not (= j2 length2)) (=> (< i2 length1) (= result2 (ite (<= o7 o6) true false)))))
(assert (=> (not (= j2 length2)) (=> (not (< i2 length1)) (= result2 false))))
(assert (= result2 true))
(assert (and (= temp___288 (+ a_first i2)) (in_range1 (+ a_first i2))))
(assert (and (<= (to_rep a__first) temp___288) (<= temp___288 (to_rep a__last))))
(assert (= o10 temp___288))
(assert (= o11 (select a o10)))
(assert (= o12 (to_rep o11)))
(assert (= (to_rep o13) o12))
(assert (and (= o8 (+ i2 j2)) (in_range1 (+ i2 j2))))
(assert (= o9 (+ (to_rep b__first) o8)))
(assert (not (in_range1 o9)))
(check-sat)
(exit)
