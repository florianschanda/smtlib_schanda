(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range2 temp___expr_39)))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort index 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 1000000)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (index index) Bool)
(declare-const dummy2 index)
(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range3 low) (in_range3 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((text__ref (mk_text__ref (text__content us_t)))))
(define-fun text__ref___projection ((a text__ref)) us_t (text__content a))
(define-fun dynamic_invariant2 ((temp___expr_166 us_t) (temp___is_init_162 Bool) (temp___skip_constant_163 Bool) (temp___do_toplevel_164 Bool) (temp___do_typ_inv_165 Bool)) Bool (=> (not (= temp___skip_constant_163 true)) (dynamic_property 1 1000000 (first1 temp___expr_166) (last1 temp___expr_166))))
(declare-const a us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const x Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const y Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((t5s__ref (mk_t5s__ref (t5s__content integer)))))
(define-fun t5s__ref___projection ((a1 t5s__ref)) integer (t5s__content a1))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int integer)) (rt1 t1)))))
(define-fun to_array1 ((a1 us_t1)) (Array Int integer) (elts1 a1))
(define-fun of_array1 ((a1 (Array Int integer)) (f Int) (l Int)) us_t1 (mk___t1 a1 (mk1 f l)))
(define-fun first3 ((a1 us_t1)) Int (to_rep (first2 (rt1 a1))))
(define-fun last3 ((a1 us_t1)) Int (to_rep (last2 (rt1 a1))))
(define-fun length1 ((a1 us_t1)) Int (ite (<= (first3 a1) (last3 a1)) (+ (- (last3 a1) (first3 a1)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int integer)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int integer)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int integer)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__size1 a1))))
(assert (<= 0 value__component__size1))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__component__size1 a1))))
(assert (<= 0 value__alignment1))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__alignment1 a1))))
(define-fun bool_eq2 ((x1 us_t1) (y1 us_t1)) Bool (bool_eq (elts1 x1) (to_rep (first2 (rt1 x1))) (to_rep (last2 (rt1 x1))) (elts1 y1) (to_rep (first2 (rt1 y1))) (to_rep (last2 (rt1 y1)))))
(declare-fun user_eq5 (us_t1 us_t1) Bool)
(declare-const dummy5 us_t1)
(declare-datatypes () ((t6s__ref (mk_t6s__ref (t6s__content us_t1)))))
(define-fun t6s__ref___projection ((a1 t6s__ref)) us_t1 (t6s__content a1))
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t7s__ref (mk_t7s__ref (t7s__content integer)))))
(define-fun t7s__ref___projection ((a1 t7s__ref)) integer (t7s__content a1))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first4 (mk2 f l))) f) (= (to_rep (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int integer)) (rt2 t2)))))
(define-fun to_array2 ((a1 us_t2)) (Array Int integer) (elts2 a1))
(define-fun of_array2 ((a1 (Array Int integer)) (f Int) (l Int)) us_t2 (mk___t2 a1 (mk2 f l)))
(define-fun first5 ((a1 us_t2)) Int (to_rep (first4 (rt2 a1))))
(define-fun last5 ((a1 us_t2)) Int (to_rep (last4 (rt2 a1))))
(define-fun length2 ((a1 us_t2)) Int (ite (<= (first5 a1) (last5 a1)) (+ (- (last5 a1) (first5 a1)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int integer)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int integer)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int integer)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__size2 a1))))
(assert (<= 0 value__component__size2))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__component__size2 a1))))
(assert (<= 0 value__alignment2))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__alignment2 a1))))
(define-fun bool_eq3 ((x1 us_t2) (y1 us_t2)) Bool (bool_eq (elts2 x1) (to_rep (first4 (rt2 x1))) (to_rep (last4 (rt2 x1))) (elts2 y1) (to_rep (first4 (rt2 y1))) (to_rep (last4 (rt2 y1)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((t8s__ref (mk_t8s__ref (t8s__content us_t2)))))
(define-fun t8s__ref___projection ((a1 t8s__ref)) us_t2 (t8s__content a1))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_property5 ((first_int Int) (last_int Int) (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t7b__ref (mk_t7b__ref (t7b__content integer)))))
(define-fun t7b__ref___projection ((a1 t7b__ref)) integer (t7b__content a1))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first6 (mk3 f l))) f) (= (to_rep (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property5 range_first range_last low) (dynamic_property5 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int integer)) (rt3 t3)))))
(define-fun to_array3 ((a1 us_t3)) (Array Int integer) (elts3 a1))
(define-fun of_array3 ((a1 (Array Int integer)) (f Int) (l Int)) us_t3 (mk___t3 a1 (mk3 f l)))
(define-fun first7 ((a1 us_t3)) Int (to_rep (first6 (rt3 a1))))
(define-fun last7 ((a1 us_t3)) Int (to_rep (last6 (rt3 a1))))
(define-fun length3 ((a1 us_t3)) Int (ite (<= (first7 a1) (last7 a1)) (+ (- (last7 a1) (first7 a1)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int integer)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int integer)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int integer)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__size3 a1))))
(assert (<= 0 value__component__size3))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__component__size3 a1))))
(assert (<= 0 value__alignment3))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__alignment3 a1))))
(define-fun bool_eq4 ((x1 us_t3) (y1 us_t3)) Bool (bool_eq (elts3 x1) (to_rep (first6 (rt3 x1))) (to_rep (last6 (rt3 x1))) (elts3 y1) (to_rep (first6 (rt3 y1))) (to_rep (last6 (rt3 y1)))))
(declare-fun user_eq9 (us_t3 us_t3) Bool)
(declare-const dummy9 us_t3)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content us_t3)))))
(define-fun t8b__ref___projection ((a1 t8b__ref)) us_t3 (t8b__content a1))
(define-fun dynamic_property7 ((first_int Int) (last_int Int) (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t10b__ref (mk_t10b__ref (t10b__content integer)))))
(define-fun t10b__ref___projection ((a1 t10b__ref)) integer (t10b__content a1))
(declare-sort t4 0)
(declare-fun first8 (t4) integer)
(declare-fun last8 (t4) integer)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first8 (mk4 f l))) f) (= (to_rep (last8 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property7 range_first range_last low) (dynamic_property7 range_first range_last high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int integer)) (rt4 t4)))))
(define-fun to_array4 ((a1 us_t4)) (Array Int integer) (elts4 a1))
(define-fun of_array4 ((a1 (Array Int integer)) (f Int) (l Int)) us_t4 (mk___t4 a1 (mk4 f l)))
(define-fun first9 ((a1 us_t4)) Int (to_rep (first8 (rt4 a1))))
(define-fun last9 ((a1 us_t4)) Int (to_rep (last8 (rt4 a1))))
(define-fun length4 ((a1 us_t4)) Int (ite (<= (first9 a1) (last9 a1)) (+ (- (last9 a1) (first9 a1)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int integer)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int integer)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int integer)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__size4 a1))))
(assert (<= 0 value__component__size4))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__component__size4 a1))))
(assert (<= 0 value__alignment4))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__alignment4 a1))))
(define-fun bool_eq5 ((x1 us_t4) (y1 us_t4)) Bool (bool_eq (elts4 x1) (to_rep (first8 (rt4 x1))) (to_rep (last8 (rt4 x1))) (elts4 y1) (to_rep (first8 (rt4 y1))) (to_rep (last8 (rt4 y1)))))
(declare-fun user_eq11 (us_t4 us_t4) Bool)
(declare-const dummy11 us_t4)
(declare-datatypes () ((t11b__ref (mk_t11b__ref (t11b__content us_t4)))))
(define-fun t11b__ref___projection ((a1 t11b__ref)) us_t4 (t11b__content a1))
(define-fun dynamic_invariant3 ((temp___expr_159 Int) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (=> (or (= temp___is_init_155 true) (<= 1 1000000)) (in_range3 temp___expr_159)))
(declare-const l Int)
(declare-const r6b Int)
(declare-const r9b Int)
(declare-const lcp__result Int)
(declare-const temp___199 Int)
(declare-const o Int)
(declare-const o1 integer)
(declare-const temp___200 Int)
(declare-const o2 Int)
(declare-const o3 integer)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const temp___193 Int)
(declare-const temp___192 Int)
(declare-const temp___191 Int)
(declare-const temp___198 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const temp___1991 Int)
(declare-const o15 Int)
(declare-const o16 integer)
(declare-const temp___2001 Int)
(declare-const o17 Int)
(declare-const o18 integer)
(declare-const o19 Int)
(declare-const o20 Int)
(declare-const o21 Int)
(declare-const o22 Int)
(declare-const o23 Bool)
(declare-const o24 Int)
(declare-const o25 Int)
(declare-const o26 Int)
(declare-const o27 Int)
(declare-const temp___204 Int)
(declare-const o28 (Array Int integer))
(declare-const temp___206 (Array Int integer))
(declare-const temp___2061 t2)
(declare-const o29 Int)
(declare-const o30 Int)
(declare-const temp___203 Int)
(declare-const o31 (Array Int integer))
(declare-const temp___205 (Array Int integer))
(declare-const temp___2051 t1)
(declare-const r6b1 Int)
(declare-const r9b1 Int)
(declare-const result Int)
(declare-const l1 Int)
(declare-const result1 Bool)
(declare-const result2 Bool)
(declare-const result3 Bool)
(declare-const result4 Int)
(declare-const r6b2 Int)
(declare-const result5 Int)
(declare-const r9b2 Int)
(declare-const l2 Int)
(declare-const r6b3 Int)
(declare-const r9b3 Int)
(declare-const temp___1981 Int)
(declare-const result6 Int)
(declare-const temp___1982 Int)
(declare-const result7 Int)
(declare-const l3 Int)
(declare-const result8 Bool)
(declare-const result9 Bool)
(declare-const result10 Bool)
(declare-const l4 Int)
(declare-const r6b4 Int)
(declare-const r9b4 int__ref)
(declare-const l5 Int)
(declare-const r6b5 Int)
(declare-const r9b5 Int)
(declare-const l6 int__ref)
(declare-const r6b6 int__ref)
(declare-const r9b6 int__ref)
(declare-const l7 Int)
(declare-const r6b7 Int)
(declare-const r9b7 Int)
(declare-const result11 int__ref)
(declare-const lcp__result1 Int)
(declare-const lcp__result2 int__ref)
(declare-const lcp__result3 Int)
(declare-const l8 int__ref)
(declare-const r6b8 int__ref)
(declare-const r9b8 int__ref)
(declare-const lcp__result4 int__ref)
(declare-const l9 Int)
(declare-const r6b9 Int)
(declare-const r9b9 Int)
(declare-const lcp__result5 Int)
(declare-const result12 Bool)
(declare-const result13 Bool)
(define-fun r9b10 () int__ref (mk_int__ref r9b))
(define-fun r6b10 () int__ref (mk_int__ref r6b))
(assert (dynamic_invariant2 a true false true true))
(assert (in_range1 x))
(assert (in_range1 y))
(assert (and (and (<= (to_rep (first (rt a))) x) (<= x (to_rep (last (rt a))))) (and (<= (to_rep (first (rt a))) y) (<= y (to_rep (last (rt a)))))))
(assert (=> (<= 0 2147483647) (in_range2 l)))
(assert (= (mk_int__ref result) (mk_int__ref l)))
(assert (= l1 0))
(assert (and (= o7 (+ x l1)) (in_range1 (+ x l1))))
(assert (= result3 (ite (<= o7 (to_rep (last (rt a)))) true false)))
(assert (=> (= result3 true) (and (= o6 (+ y l1)) (in_range1 (+ y l1)))))
(assert (=> (= result3 true) (= result2 (ite (<= o6 (to_rep (last (rt a)))) true false))))
(assert (=> (not (= result3 true)) (= result2 false)))
(assert (=> (= result2 true) (and (= temp___200 (+ y l1)) (in_range1 (+ y l1)))))
(assert (=> (= result2 true) (and (<= (to_rep (first (rt a))) temp___200) (<= temp___200 (to_rep (last (rt a)))))))
(assert (=> (= result2 true) (= o2 temp___200)))
(assert (=> (= result2 true) (= o3 (select (elts a) o2))))
(assert (=> (= result2 true) (= o4 (to_rep o3))))
(assert (=> (= result2 true) (and (= temp___199 (+ x l1)) (in_range1 (+ x l1)))))
(assert (=> (= result2 true) (and (<= (to_rep (first (rt a))) temp___199) (<= temp___199 (to_rep (last (rt a)))))))
(assert (=> (= result2 true) (= o temp___199)))
(assert (=> (= result2 true) (= o1 (select (elts a) o))))
(assert (=> (= result2 true) (= o5 (to_rep o1))))
(assert (=> (= result2 true) (= result1 (ite (= o5 o4) true false))))
(assert (=> (not (= result2 true)) (= result1 false)))
(assert (=> (= result1 true) (= temp___193 r9b)))
(assert (=> (= result1 true) (= temp___192 l1)))
(assert (=> (= result1 true) (= temp___191 r6b)))
(assert (=> (= result1 true) (= 0 temp___198)))
(assert (=> (= result1 true) (and (= o8 (+ x l1)) (in_range1 (+ x l1)))))
(assert (=> (= result1 true) (= o9 (- o8 1))))
(assert (=> (= result1 true) (and (= o10 o9) (in_range1 o9))))
(assert (=> (= result1 true) (= (mk_int__ref result4) r6b10)))
(assert (=> (= result1 true) (= r6b2 o10)))
(assert (=> (= result1 true) (in_range1 r6b2)))
(assert (=> (= result1 true) (and (= o11 (+ y l1)) (in_range1 (+ y l1)))))
(assert (=> (= result1 true) (= o12 (- o11 1))))
(assert (=> (= result1 true) (and (= o13 o12) (in_range1 o12))))
(assert (=> (= result1 true) (= (mk_int__ref result5) r9b10)))
(assert (=> (= result1 true) (= r9b2 o13)))
(assert (=> (= result1 true) (in_range1 r9b2)))
(assert (=> (= result1 true) (= (bool_eq (elts a) (to_rep (first6 (mk3 x r6b3))) (to_rep (last6 (mk3 x r6b3))) (elts a) (to_rep (first8 (mk4 y r9b3))) (to_rep (last8 (mk4 y r9b3)))) true)))
(assert (=> (= result1 true) (and (and (=> (<= (- 2147483648) 2147483647) (in_range1 r6b3)) (=> (<= 0 2147483647) (in_range2 l2))) (=> (<= (- 2147483648) 2147483647) (in_range1 r9b3)))))
(assert (=> (= result1 true) (= temp___1981 result6)))
(assert (=> (= result1 true) (= temp___1982 l2)))
(assert (=> (= result1 true) (and (= o14 (+ l2 1)) (in_range1 (+ l2 1)))))
(assert (=> (= result1 true) (= l2 result7)))
(assert (=> (= result1 true) (= l3 o14)))
(assert (=> (= result1 true) (and (= o22 (+ x l3)) (in_range1 (+ x l3)))))
(assert (=> (= result1 true) (= result10 (ite (<= o22 (to_rep (last (rt a)))) true false))))
(assert (=> (= result1 true) (=> (= result10 true) (and (= o21 (+ y l3)) (in_range1 (+ y l3))))))
(assert (=> (= result1 true) (=> (= result10 true) (= result9 (ite (<= o21 (to_rep (last (rt a)))) true false)))))
(assert (=> (= result1 true) (=> (not (= result10 true)) (= result9 false))))
(assert (=> (= result1 true) (=> (= result9 true) (and (= temp___2001 (+ y l3)) (in_range1 (+ y l3))))))
(assert (=> (= result1 true) (=> (= result9 true) (and (<= (to_rep (first (rt a))) temp___2001) (<= temp___2001 (to_rep (last (rt a))))))))
(assert (=> (= result1 true) (=> (= result9 true) (= o17 temp___2001))))
(assert (=> (= result1 true) (=> (= result9 true) (= o18 (select (elts a) o17)))))
(assert (=> (= result1 true) (=> (= result9 true) (= o19 (to_rep o18)))))
(assert (=> (= result1 true) (=> (= result9 true) (and (= temp___1991 (+ x l3)) (in_range1 (+ x l3))))))
(assert (=> (= result1 true) (=> (= result9 true) (and (<= (to_rep (first (rt a))) temp___1991) (<= temp___1991 (to_rep (last (rt a))))))))
(assert (=> (= result1 true) (=> (= result9 true) (= o15 temp___1991))))
(assert (=> (= result1 true) (=> (= result9 true) (= o16 (select (elts a) o15)))))
(assert (=> (= result1 true) (=> (= result9 true) (= o20 (to_rep o16)))))
(assert (=> (= result1 true) (=> (= result9 true) (= o23 (ite (= o20 o19) true false)))))
(assert (=> (= result1 true) (=> (not (= result9 true)) (= o23 false))))
(assert (=> (= result1 true) (= result8 (ite (not (= o23 true)) true false))))
(assert (=> (= result1 true) (= result8 true)))
(assert (=> (= result1 true) (= r9b4 (mk_int__ref r9b3))))
(assert (=> (= result1 true) (= r6b3 r6b4)))
(assert (=> (= result1 true) (= l3 l4)))
(assert (=> (= result1 true) (= r9b5 r9b3)))
(assert (=> (= result1 true) (= r6b5 r6b3)))
(assert (=> (= result1 true) (= l5 l3)))
(assert (=> (= result1 true) (= r9b6 r9b4)))
(assert (=> (= result1 true) (= r6b6 (mk_int__ref r6b4))))
(assert (=> (= result1 true) (= l6 (mk_int__ref l4))))
(assert (=> (= result1 true) (= r9b7 r9b5)))
(assert (=> (= result1 true) (= r6b7 r6b5)))
(assert (=> (= result1 true) (= l7 l5)))
(assert (=> (not (= result1 true)) (= r9b6 r9b10)))
(assert (=> (not (= result1 true)) (= r6b6 r6b10)))
(assert (=> (not (= result1 true)) (= l6 (mk_int__ref l1))))
(assert (=> (not (= result1 true)) (= r9b7 r9b1)))
(assert (=> (not (= result1 true)) (= r6b7 r6b1)))
(assert (=> (not (= result1 true)) (= l7 l1)))
(assert (= lcp__result2 (mk_int__ref lcp__result1)))
(assert (= lcp__result3 lcp__result1))
(assert (= result11 (mk_int__ref lcp__result)))
(assert (= lcp__result1 (int__content l6)))
(assert (= lcp__result4 lcp__result2))
(assert (= r9b8 r9b6))
(assert (= r6b8 r6b6))
(assert (= l8 l6))
(assert (= lcp__result5 lcp__result3))
(assert (= r9b9 r9b7))
(assert (= r6b9 r6b7))
(assert (= l9 l7))
(assert (and (= o26 (+ y (int__content lcp__result4))) (in_range1 (+ y (int__content lcp__result4)))))
(assert (= o27 (- o26 1)))
(assert (and (= temp___204 o27) (in_range1 o27)))
(assert (=> (<= y temp___204) (and (and (<= (to_rep (first (rt a))) y) (<= y (to_rep (last (rt a))))) (and (<= (to_rep (first (rt a))) temp___204) (<= temp___204 (to_rep (last (rt a))))))))
(assert (= o28 (elts a)))
(assert (= o28 temp___206))
(assert (= (mk2 y temp___204) temp___2061))
(assert (and (= o29 (+ x (int__content lcp__result4))) (in_range1 (+ x (int__content lcp__result4)))))
(assert (= o30 (- o29 1)))
(assert (and (= temp___203 o30) (in_range1 o30)))
(assert (=> (<= x temp___203) (and (and (<= (to_rep (first (rt a))) x) (<= x (to_rep (last (rt a))))) (and (<= (to_rep (first (rt a))) temp___203) (<= temp___203 (to_rep (last (rt a))))))))
(assert (= o31 (elts a)))
(assert (= o31 temp___205))
(assert (= (mk1 x temp___203) temp___2051))
(assert (= result12 (bool_eq temp___205 (to_rep (first2 temp___2051)) (to_rep (last2 temp___2051)) temp___206 (to_rep (first4 temp___2061)) (to_rep (last4 temp___2061)))))
(assert (= result12 true))
(assert (and (= o24 (+ (to_rep (last (rt a))) 1)) (in_range1 (+ (to_rep (last (rt a))) 1))))
(assert (and (= o25 (+ x (int__content lcp__result4))) (in_range1 (+ x (int__content lcp__result4)))))
(assert (= result13 (ite (= o25 o24) true false)))
(assert (not (= result13 true)))
(assert (not (in_range1 (+ (to_rep (last (rt a))) 1))))
(check-sat)
(exit)
