(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort index_type 0)
(define-fun in_range ((x Int)) Bool (and (<= 1 x) (<= x 65536)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (index_type index_type) Bool)
(declare-const dummy index_type)
(declare-datatypes () ((index_type__ref (mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref___projection ((a index_type__ref)) index_type (index_type__content a))
(declare-fun to_rep (index_type) Int)
(declare-fun of_rep (Int) index_type)
(assert (forall ((x index_type)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x index_type)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort length_type 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 65536)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (length_type length_type) Bool)
(declare-const dummy1 length_type)
(declare-datatypes () ((length_type__ref (mk_length_type__ref (length_type__content length_type)))))
(define-fun length_type__ref___projection ((a length_type__ref)) length_type (length_type__content a))
(declare-fun to_rep1 (length_type) Int)
(declare-fun of_rep1 (Int) length_type)
(assert (forall ((x length_type)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x length_type)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort integer 0)
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (integer integer) Bool)
(declare-const dummy2 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (character character) Bool)
(declare-const dummy3 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep2 (character) Int)
(declare-fun of_rep2 (Int) character)
(assert (forall ((x character)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep2 (select a temp___idx_91)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep2 (select a temp___idx_91)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-fun to_rep3 (integer) Int)
(declare-fun of_rep3 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x integer)) (! (in_range2 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((t4s__ref (mk_t4s__ref (t4s__content integer)))))
(define-fun t4s__ref___projection ((a t4s__ref)) integer (t4s__content a))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep3 (first (mk f l))) f) (= (to_rep3 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep3 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep3 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep3 (first (rt x))) (to_rep3 (last (rt x))) (elts y) (to_rep3 (first (rt y))) (to_rep3 (last (rt y)))))
(declare-fun user_eq5 (us_t us_t) Bool)
(declare-const dummy5 us_t)
(declare-datatypes () ((t5s__ref (mk_t5s__ref (t5s__content us_t)))))
(define-fun t5s__ref___projection ((a t5s__ref)) us_t (t5s__content a))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__bounded_strings__bounded_string__bound index_type)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) index_type (rec__bounded_strings__bounded_string__bound a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__bounded_strings__bounded_string__text us_t) (rec__bounded_strings__bounded_string__length length_type)))))
(define-fun us_split_fields_Text__projection ((a us_split_fields)) us_t (rec__bounded_strings__bounded_string__text a))
(define-fun us_split_fields_Length__projection ((a us_split_fields)) length_type (rec__bounded_strings__bounded_string__length a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep (rec__bounded_strings__bounded_string__bound (us_split_discrs1 a))) (to_rep (rec__bounded_strings__bounded_string__bound (us_split_discrs1 b)))) (and (= (bool_eq1 (rec__bounded_strings__bounded_string__text (us_split_fields1 a)) (rec__bounded_strings__bounded_string__text (us_split_fields1 b))) true) (= (to_rep1 (rec__bounded_strings__bounded_string__length (us_split_fields1 a))) (to_rep1 (rec__bounded_strings__bounded_string__length (us_split_fields1 b)))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const bounded_strings__bounded_string__bound__first__bit Int)
(declare-const bounded_strings__bounded_string__bound__last__bit Int)
(declare-const bounded_strings__bounded_string__bound__position Int)
(assert (<= 0 bounded_strings__bounded_string__bound__first__bit))
(assert (< bounded_strings__bounded_string__bound__first__bit bounded_strings__bounded_string__bound__last__bit))
(assert (<= 0 bounded_strings__bounded_string__bound__position))
(declare-const bounded_strings__bounded_string__text__first__bit Int)
(declare-const bounded_strings__bounded_string__text__last__bit Int)
(declare-const bounded_strings__bounded_string__text__position Int)
(assert (<= 0 bounded_strings__bounded_string__text__first__bit))
(assert (< bounded_strings__bounded_string__text__first__bit bounded_strings__bounded_string__text__last__bit))
(assert (<= 0 bounded_strings__bounded_string__text__position))
(declare-const bounded_strings__bounded_string__length__first__bit Int)
(declare-const bounded_strings__bounded_string__length__last__bit Int)
(declare-const bounded_strings__bounded_string__length__position Int)
(assert (<= 0 bounded_strings__bounded_string__length__first__bit))
(assert (< bounded_strings__bounded_string__length__first__bit bounded_strings__bounded_string__length__last__bit))
(assert (<= 0 bounded_strings__bounded_string__length__position))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((bounded_string__ref (mk_bounded_string__ref (bounded_string__content us_rep)))))
(define-fun bounded_string__ref___projection ((a bounded_string__ref)) us_rep (bounded_string__content a))
(define-fun dynamic_invariant ((temp___expr_173 us_rep) (temp___is_init_169 Bool) (temp___skip_constant_170 Bool) (temp___do_toplevel_171 Bool) (temp___do_typ_inv_172 Bool)) Bool (let ((temp___174 (rec__bounded_strings__bounded_string__bound (us_split_discrs1 temp___expr_173)))) (and (dynamic_property1 1 (to_rep temp___174) (first1 (rec__bounded_strings__bounded_string__text (us_split_fields1 temp___expr_173))) (last1 (rec__bounded_strings__bounded_string__text (us_split_fields1 temp___expr_173)))) (and (= (first1 (rec__bounded_strings__bounded_string__text (us_split_fields1 temp___expr_173))) 1) (= (last1 (rec__bounded_strings__bounded_string__text (us_split_fields1 temp___expr_173))) (to_rep temp___174))))))
(declare-fun length1 (us_rep) Int)
(declare-fun length__function_guard (Int us_rep) Bool)
(declare-sort tT2sP1 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 60)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq7 (tT2sP1 tT2sP1) Bool)
(declare-const dummy7 tT2sP1)
(declare-datatypes () ((tT2sP1__ref (mk_tT2sP1__ref (tT2sP1__content tT2sP1)))))
(define-fun tT2sP1__ref___projection ((a tT2sP1__ref)) tT2sP1 (tT2sP1__content a))
(declare-const dummy8 (Array Int character))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq8 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__bounded_strings__bounded_string__text1 (Array Int character)) (rec__bounded_strings__bounded_string__length1 length_type)))))
(define-fun us_split_fields_Text__2__projection ((a us_split_fields2)) (Array Int character) (rec__bounded_strings__bounded_string__text1 a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields2)) length_type (rec__bounded_strings__bounded_string__length1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs2 us_split_discrs) (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_discrs (us_split_discrs2 a))
(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a) (mk___split_fields (of_array (rec__bounded_strings__bounded_string__text1 (us_split_fields3 a)) 1 60) (rec__bounded_strings__bounded_string__length1 (us_split_fields3 a)))))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r) (mk___split_fields1 (let ((temp___154 (rec__bounded_strings__bounded_string__text (us_split_fields1 r)))) (to_array temp___154)) (rec__bounded_strings__bounded_string__length (us_split_fields1 r)))))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep (rec__bounded_strings__bounded_string__bound (us_split_discrs2 a))) (to_rep (rec__bounded_strings__bounded_string__bound (us_split_discrs2 b)))) (and (= (bool_eq (rec__bounded_strings__bounded_string__text1 (us_split_fields3 a)) 1 60 (rec__bounded_strings__bounded_string__text1 (us_split_fields3 b)) 1 60) true) (= (to_rep1 (rec__bounded_strings__bounded_string__length1 (us_split_fields3 a))) (to_rep1 (rec__bounded_strings__bounded_string__length1 (us_split_fields3 b)))))) true false))
(define-fun in_range5 ((rec__bounded_strings__bounded_string__bound1 Int) (a us_rep)) Bool (= rec__bounded_strings__bounded_string__bound1 (to_rep (rec__bounded_strings__bounded_string__bound (us_split_discrs1 a)))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const bounded_strings__bounded_string__bound__first__bit1 Int)
(declare-const bounded_strings__bounded_string__bound__last__bit1 Int)
(declare-const bounded_strings__bounded_string__bound__position1 Int)
(assert (<= 0 bounded_strings__bounded_string__bound__first__bit1))
(assert (< bounded_strings__bounded_string__bound__first__bit1 bounded_strings__bounded_string__bound__last__bit1))
(assert (<= 0 bounded_strings__bounded_string__bound__position1))
(declare-const bounded_strings__bounded_string__text__first__bit1 Int)
(declare-const bounded_strings__bounded_string__text__last__bit1 Int)
(declare-const bounded_strings__bounded_string__text__position1 Int)
(assert (<= 0 bounded_strings__bounded_string__text__first__bit1))
(assert (< bounded_strings__bounded_string__text__first__bit1 bounded_strings__bounded_string__text__last__bit1))
(assert (<= 0 bounded_strings__bounded_string__text__position1))
(declare-const bounded_strings__bounded_string__length__first__bit1 Int)
(declare-const bounded_strings__bounded_string__length__last__bit1 Int)
(declare-const bounded_strings__bounded_string__length__position1 Int)
(assert (<= 0 bounded_strings__bounded_string__length__first__bit1))
(assert (< bounded_strings__bounded_string__length__first__bit1 bounded_strings__bounded_string__length__last__bit1))
(assert (<= 0 bounded_strings__bounded_string__length__position1))
(declare-fun user_eq9 (us_rep1 us_rep1) Bool)
(declare-const dummy9 us_rep1)
(declare-datatypes () ((t1s__ref (mk_t1s__ref (t1s__content us_rep1)))))
(define-fun t1s__ref___projection ((a t1s__ref)) us_rep1 (t1s__content a))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__test__tlv_record__filestore_message us_rep1)))))
(define-fun us_split_fields_Filestore_Message__projection ((a us_split_fields4)) us_rep1 (rec__test__tlv_record__filestore_message a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___5__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq4 ((a us_rep2) (b us_rep2)) Bool (ite (= (bool_eq3 (rec__test__tlv_record__filestore_message (us_split_fields5 a)) (rec__test__tlv_record__filestore_message (us_split_fields5 b))) true) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep2) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep2) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))
(declare-const test__tlv_record__filestore_message__first__bit Int)
(declare-const test__tlv_record__filestore_message__last__bit Int)
(declare-const test__tlv_record__filestore_message__position Int)
(assert (<= 0 test__tlv_record__filestore_message__first__bit))
(assert (< test__tlv_record__filestore_message__first__bit test__tlv_record__filestore_message__last__bit))
(assert (<= 0 test__tlv_record__filestore_message__position))
(declare-fun user_eq10 (us_rep2 us_rep2) Bool)
(declare-const dummy10 us_rep2)
(declare-datatypes () ((tlv_record__ref (mk_tlv_record__ref (tlv_record__content us_rep2)))))
(define-fun tlv_record__ref___projection ((a tlv_record__ref)) us_rep2 (tlv_record__content a))
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq11 (integer integer) Bool)
(declare-const dummy11 integer)
(declare-datatypes () ((t6s__ref (mk_t6s__ref (t6s__content integer)))))
(define-fun t6s__ref___projection ((a t6s__ref)) integer (t6s__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep3 (first2 (mk1 f l))) f) (= (to_rep3 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep3 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep3 (last2 (rt1 a))))
(define-fun length2 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int character)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int character))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment5 a))))
(define-fun bool_eq5 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep3 (first2 (rt1 x))) (to_rep3 (last2 (rt1 x))) (elts1 y) (to_rep3 (first2 (rt1 y))) (to_rep3 (last2 (rt1 y)))))
(declare-fun user_eq12 (us_t1 us_t1) Bool)
(declare-const dummy12 us_t1)
(declare-datatypes () ((t7s__ref (mk_t7s__ref (t7s__content us_t1)))))
(define-fun t7s__ref___projection ((a t7s__ref)) us_t1 (t7s__content a))
(declare-fun temp___197 (Int Int Int) us_t1)
(define-fun dynamic_invariant1 ((temp___expr_190 us_rep2) (temp___is_init_186 Bool) (temp___skip_constant_187 Bool) (temp___do_toplevel_188 Bool) (temp___do_typ_inv_189 Bool)) Bool (in_range5 60 (to_base (rec__test__tlv_record__filestore_message (us_split_fields5 temp___expr_190)))))
(define-fun default_initial_assumption ((temp___expr_193 us_rep2) (temp___skip_top_level_194 Bool)) Bool (and (and (and (= (to_rep (rec__bounded_strings__bounded_string__bound (us_split_discrs2 (rec__test__tlv_record__filestore_message (us_split_fields5 temp___expr_193))))) 60) (= (rec__bounded_strings__bounded_string__text1 (us_split_fields3 (rec__test__tlv_record__filestore_message (us_split_fields5 temp___expr_193)))) (let ((temp___203 (temp___197 32 1 (to_rep (rec__bounded_strings__bounded_string__bound (us_split_discrs2 (rec__test__tlv_record__filestore_message (us_split_fields5 temp___expr_193)))))))) (to_array1 temp___203)))) (= (to_rep1 (rec__bounded_strings__bounded_string__length1 (us_split_fields3 (rec__test__tlv_record__filestore_message (us_split_fields5 temp___expr_193))))) 0)) (= (length1 (to_base (rec__test__tlv_record__filestore_message (us_split_fields5 temp___expr_193)))) 0)))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort positive 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq13 (positive positive) Bool)
(declare-const dummy13 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant2 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range6 temp___expr_46)))
(define-fun dynamic_invariant3 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep3 (first4 (mk2 f l))) f) (= (to_rep3 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (in_range6 low) (in_range6 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int character)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))
(define-fun of_array2 ((a (Array Int character)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep3 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep3 (last4 (rt2 a))))
(define-fun length3 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int character)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int character)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int character)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int character))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment6 a))))
(define-fun bool_eq6 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep3 (first4 (rt2 x))) (to_rep3 (last4 (rt2 x))) (elts2 y) (to_rep3 (first4 (rt2 y))) (to_rep3 (last4 (rt2 y)))))
(declare-fun user_eq14 (us_t2 us_t2) Bool)
(declare-const dummy14 us_t2)
(declare-fun to_string (us_image) us_t2)
(declare-fun from_string (us_t2) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t2)))))
(define-fun string__ref___projection ((a string__ref)) us_t2 (string__content a))
(define-fun dynamic_invariant4 ((temp___expr_96 us_t2) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property4 1 2147483647 (first5 temp___expr_96) (last5 temp___expr_96))))
(define-fun dynamic_invariant5 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range2 temp___expr_18)))
(define-fun dynamic_invariant6 ((temp___expr_159 Int) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (=> (or (= temp___is_init_155 true) (<= 1 65536)) (in_range temp___expr_159)))
(define-fun dynamic_invariant7 ((temp___expr_166 Int) (temp___is_init_162 Bool) (temp___skip_constant_163 Bool) (temp___do_toplevel_164 Bool) (temp___do_typ_inv_165 Bool)) Bool (=> (or (= temp___is_init_162 true) (<= 0 65536)) (in_range1 temp___expr_166)))
(assert (forall ((source us_rep)) (! (=> (dynamic_invariant source true true true true) (dynamic_invariant7 (length1 source) true false true true)) :pattern ((length1 source)))))
(assert (forall ((source us_rep)) (! (=> (dynamic_invariant source true true true true) (= (length1 source) (to_rep1 (rec__bounded_strings__bounded_string__length (us_split_fields1 source))))) :pattern ((length1 source)))))
(assert (forall ((temp___199 Int) (temp___200 Int) (temp___201 Int)) (let ((temp___198 (temp___197 temp___199 temp___200 temp___201))) (=> (dynamic_invariant3 temp___199 true true true true) (and (=> (dynamic_property4 1 2147483647 temp___200 temp___201) (and (= (first3 temp___198) temp___200) (= (last3 temp___198) temp___201))) (forall ((temp___202 Int)) (= (to_rep2 (select (to_array1 temp___198) temp___202)) temp___199)))))))
(declare-const tlv_information__split_fields index_type)
(declare-const tlv_information__split_fields1 (Array Int character))
(declare-const tlv_information__split_fields2 length_type)
(assert (= 60 (to_rep tlv_information__split_fields)))
(assert (not (<= (+ (length1 (mk___rep (mk___split_discrs tlv_information__split_fields) (mk___split_fields (mk___t tlv_information__split_fields1 (mk 1 60)) tlv_information__split_fields2))) 1) (to_rep tlv_information__split_fields))))
(check-sat)
(exit)
