(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range2 temp___expr_33)))
(declare-sort tintarrayD1 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (tintarrayD1 tintarrayD1) Bool)
(declare-const dummy2 tintarrayD1)
(declare-datatypes () ((tintarrayD1__ref (mk_tintarrayD1__ref (tintarrayD1__content tintarrayD1)))))
(define-fun tintarrayD1__ref___projection ((a tintarrayD1__ref)) tintarrayD1 (tintarrayD1__content a))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (integer Int) (Array Int integer))
(assert (forall ((v integer)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int Int) Int)
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const b1 (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const b2 (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const c1 (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const c2 (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const k1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const k2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(define-fun dynamic_invariant1 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-const a1 (Array Int integer))
(declare-const a2 (Array Int integer))
(declare-const i Int)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const i3 Int)
(declare-const temp___195 (Array Int integer))
(declare-const o Int)
(declare-const o1 integer)
(declare-const o2 Int)
(declare-const o3 integer)
(declare-const o4 Int)
(declare-const o5 (Array Int integer))
(declare-const temp___202 Int)
(declare-const temp___200 (Array Int integer))
(declare-const temp___199 Int)
(declare-const o6 Int)
(declare-const o7 integer)
(declare-const o8 Int)
(declare-const o9 integer)
(declare-const o10 Int)
(declare-const o11 (Array Int integer))
(declare-const temp___204 (Array Int integer))
(declare-const o12 Int)
(declare-const o13 integer)
(declare-const o14 Int)
(declare-const o15 integer)
(declare-const o16 Int)
(declare-const o17 (Array Int integer))
(declare-const temp___211 Int)
(declare-const temp___208 Int)
(declare-const o18 Int)
(declare-const o19 integer)
(declare-const o20 Int)
(declare-const o21 integer)
(declare-const a11 (Array Int integer))
(declare-const a21 (Array Int integer))
(declare-const result Int)
(declare-const i4 Int)
(declare-const a12 (Array Int integer))
(declare-const i5 Int)
(declare-const result1 (Array Int integer))
(declare-const a13 (Array Int integer))
(declare-const a14 (Array Int integer))
(declare-const i6 Int)
(declare-const a15 (Array Int integer))
(declare-const i7 Int)
(declare-const a16 (Array Int integer))
(declare-const i8 Int)
(declare-const a17 (Array Int integer))
(declare-const i9 Int)
(declare-const result2 Int)
(declare-const i10 Int)
(declare-const a18 (Array Int integer))
(declare-const i11 Int)
(declare-const result3 (Array Int integer))
(declare-const a19 (Array Int integer))
(declare-const a110 (Array Int integer))
(declare-const i12 Int)
(declare-const a111 (Array Int integer))
(declare-const i13 Int)
(declare-const a112 (Array Int integer))
(declare-const i14 int__ref)
(declare-const a113 (Array Int integer))
(declare-const i15 Int)
(declare-const result4 int__ref)
(declare-const i16 Int)
(declare-const a22 (Array Int integer))
(declare-const i17 Int)
(declare-const result5 map__ref)
(declare-const a23 (Array Int integer))
(declare-const a24 map__ref)
(declare-const i18 int__ref)
(declare-const a25 (Array Int integer))
(declare-const i19 Int)
(declare-const a26 map__ref)
(declare-const i20 int__ref)
(declare-const a27 (Array Int integer))
(declare-const i21 Int)
(declare-const result6 int__ref)
(declare-const i22 Int)
(declare-const a28 (Array Int integer))
(declare-const i23 Int)
(define-fun a114 () map__ref (mk_map__ref a112))
(define-fun a115 () map__ref (mk_map__ref a16))
(assert (in_range2 k1))
(assert (in_range2 k2))
(assert (and (= k1 k2) (and (<= 0 k1) (and (<= k1 100) (and (<= 0 k2) (and (<= k2 100) (and (forall ((i24 Int)) (=> (and (<= 0 i24) (<= i24 k1)) (= (to_rep (select b1 i24)) (to_rep (select b2 i24))))) (forall ((i24 Int)) (=> (and (<= (+ k1 1) i24) (<= i24 100)) (= (to_rep (select c1 (- i24 k1))) (to_rep (select c2 (- i24 k2)))))))))))))
(assert (= (mk_int__ref result) (mk_int__ref i)))
(assert (= i4 0))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= temp___195 a1)))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (and (forall ((temp___196 Int)) (=> (and (<= 0 temp___196) (<= temp___196 100)) (=> (<= i5 temp___196) (= (select a12 temp___196) (select temp___195 temp___196))))) (and (<= 0 i5) (<= i5 k1)))))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (and (<= 0 i5) (<= i5 100))))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= o i5)))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= o1 (select b1 o))))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= o2 (to_rep o1))))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= (to_rep o3) o2)))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (and (<= 0 i5) (<= i5 100))))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= o4 i5)))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= o5 (store a12 o4 o3))))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= a12 result1)))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= a13 o5)))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= i5 k1)))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= i5 i6)))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= a13 a14)))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= i7 i5)))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= a15 a13)))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= (mk_int__ref i8) (mk_int__ref i6))))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= a115 (mk_map__ref a14))))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= i9 i7)))
(assert (=> (and (<= 0 i4) (<= i4 k1)) (= a17 a15)))
(assert (=> (not (and (<= 0 i4) (<= i4 k1))) (= i4 i8)))
(assert (=> (not (and (<= 0 i4) (<= i4 k1))) (= a115 (mk_map__ref a1))))
(assert (=> (not (and (<= 0 i4) (<= i4 k1))) (= i9 i4)))
(assert (=> (not (and (<= 0 i4) (<= i4 k1))) (= a17 a11)))
(assert (and (= temp___202 (+ k1 1)) (in_range1 (+ k1 1))))
(assert (= (mk_int__ref result2) (mk_int__ref i1)))
(assert (= i10 temp___202))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= temp___200 a16)))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (and (forall ((temp___201 Int)) (=> (and (<= 0 temp___201) (<= temp___201 100)) (=> (<= i11 temp___201) (= (select a18 temp___201) (select temp___200 temp___201))))) (and (<= (+ k1 1) i11) (<= i11 0)))))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (and (= temp___199 (- i11 k1)) (in_range1 (- i11 k1)))))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (and (<= 0 temp___199) (<= temp___199 100))))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= o6 temp___199)))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= o7 (select c1 o6))))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= o8 (to_rep o7))))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= (to_rep o9) o8)))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (and (<= 0 i11) (<= i11 100))))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= o10 i11)))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= o11 (store a18 o10 o9))))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= a18 result3)))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= a19 o11)))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= i11 0)))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= i11 i12)))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= a19 a110)))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= i13 i11)))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= a111 a19)))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= i14 (mk_int__ref i12))))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= a114 (mk_map__ref a110))))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= i15 i13)))
(assert (=> (and (<= temp___202 i10) (<= i10 0)) (= a113 a111)))
(assert (=> (not (and (<= temp___202 i10) (<= i10 0))) (= i14 (mk_int__ref i10))))
(assert (=> (not (and (<= temp___202 i10) (<= i10 0))) (= a114 a115)))
(assert (=> (not (and (<= temp___202 i10) (<= i10 0))) (= i15 i10)))
(assert (=> (not (and (<= temp___202 i10) (<= i10 0))) (= a113 a17)))
(assert (= result4 (mk_int__ref i2)))
(assert (= i16 0))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= temp___204 a2)))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (and (forall ((temp___205 Int)) (=> (and (<= 0 temp___205) (<= temp___205 100)) (=> (<= i17 temp___205) (= (select a22 temp___205) (select temp___204 temp___205))))) (and (<= 0 i17) (<= i17 k2)))))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (and (<= 0 i17) (<= i17 100))))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= o12 i17)))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= o13 (select b2 o12))))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= o14 (to_rep o13))))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= (to_rep o15) o14)))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (and (<= 0 i17) (<= i17 100))))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= o16 i17)))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= o17 (store a22 o16 o15))))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= result5 (mk_map__ref a22))))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= a23 o17)))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= i17 k2)))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= i18 (mk_int__ref i17))))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= a24 (mk_map__ref a23))))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= i19 i17)))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= a25 a23)))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= i20 i18)))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= a26 a24)))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= i21 i19)))
(assert (=> (and (<= 0 i16) (<= i16 k2)) (= a27 a25)))
(assert (=> (not (and (<= 0 i16) (<= i16 k2))) (= i20 (mk_int__ref i16))))
(assert (=> (not (and (<= 0 i16) (<= i16 k2))) (= a26 (mk_map__ref a2))))
(assert (=> (not (and (<= 0 i16) (<= i16 k2))) (= i21 i16)))
(assert (=> (not (and (<= 0 i16) (<= i16 k2))) (= a27 a21)))
(assert (and (= temp___211 (+ k2 1)) (in_range1 (+ k2 1))))
(assert (= result6 (mk_int__ref i3)))
(assert (= i22 temp___211))
(assert (<= temp___211 i22))
(assert (<= i22 100))
(assert (and (forall ((temp___210 Int)) (=> (and (<= 0 temp___210) (<= temp___210 100)) (=> (<= i23 temp___210) (= (select a28 temp___210) (select (map__content a26) temp___210))))) (and (<= (+ k2 1) i23) (<= i23 100))))
(assert (and (= temp___208 (- i23 k2)) (in_range1 (- i23 k2))))
(assert (and (<= 0 temp___208) (<= temp___208 100)))
(assert (= o18 temp___208))
(assert (= o19 (select c2 o18)))
(assert (= o20 (to_rep o19)))
(assert (= (to_rep o21) o20))
(assert (not (<= 0 i23)))
(check-sat)
(exit)
