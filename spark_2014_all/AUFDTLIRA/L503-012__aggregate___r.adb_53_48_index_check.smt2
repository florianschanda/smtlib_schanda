(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-sort int5 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 5)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (int5 int5) Bool)
(declare-const dummy1 int5)
(declare-datatypes () ((int5__ref (mk_int5__ref (int5__content int5)))))
(define-fun int5__ref___projection ((a int5__ref)) int5 (int5__content a))
(declare-fun to_rep (int5) Int)
(declare-fun of_rep (Int) int5)
(assert (forall ((x int5)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x int5)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort int6 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 6)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (int6 int6) Bool)
(declare-const dummy2 int6)
(declare-datatypes () ((int6__ref (mk_int6__ref (int6__content int6)))))
(define-fun int6__ref___projection ((a int6__ref)) int6 (int6__content a))
(define-fun dynamic_invariant1 ((temp___expr_210 Int) (temp___is_init_206 Bool) (temp___skip_constant_207 Bool) (temp___do_toplevel_208 Bool) (temp___do_typ_inv_209 Bool)) Bool (=> (or (= temp___is_init_206 true) (<= 1 6)) (in_range3 temp___expr_210)))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int int5))))))
(declare-fun slide ((Array Int int5) Int Int) (Array Int int5))
(assert (forall ((a (Array Int int5))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int int5))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int int5)) (a__first Int) (a__last Int) (b (Array Int int5)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int int5)) (b (Array Int int5))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort ta26P1 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 2 x) (<= x 6)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (ta26P1 ta26P1) Bool)
(declare-const dummy3 ta26P1)
(declare-datatypes () ((ta26P1__ref (mk_ta26P1__ref (ta26P1__content ta26P1)))))
(define-fun ta26P1__ref___projection ((a ta26P1__ref)) ta26P1 (ta26P1__content a))
(declare-const dummy4 (Array Int int5))
(declare-const value__size Int)
(declare-fun object__size ((Array Int int5)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int int5)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int int5)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int int5))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int int5))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int int5))) (<= 0 (object__alignment a))))
(declare-fun user_eq4 ((Array Int int5) (Array Int int5)) Bool)
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int (Array Int int5)))))))
(declare-fun slide1 ((Array Int (Array Int int5)) Int Int) (Array Int (Array Int int5)))
(assert (forall ((a (Array Int (Array Int int5)))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int (Array Int int5)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int (Array Int int5))) (a__first Int) (a__last Int) (b (Array Int (Array Int int5))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (bool_eq (select a temp___idx_156) 2 6 (select b (+ (- b__first a__first) temp___idx_156)) 2 6) true)))) true false))
(assert (forall ((a (Array Int (Array Int int5))) (b (Array Int (Array Int int5)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (bool_eq (select a temp___idx_156) 2 6 (select b (+ (- b__first a__first) temp___idx_156)) 2 6) true))))))))
(declare-sort tar37P1 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 3 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (tar37P1 tar37P1) Bool)
(declare-const dummy5 tar37P1)
(declare-datatypes () ((tar37P1__ref (mk_tar37P1__ref (tar37P1__content tar37P1)))))
(define-fun tar37P1__ref___projection ((a tar37P1__ref)) tar37P1 (tar37P1__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const n Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-fun temp___341 ((Array Int int5)) (Array Int (Array Int int5)))
(declare-fun temp___345 (Int Int) (Array Int int5))
(define-fun dynamic_invariant2 ((temp___expr_203 Int) (temp___is_init_199 Bool) (temp___skip_constant_200 Bool) (temp___do_toplevel_201 Bool) (temp___do_typ_inv_202 Bool)) Bool (=> (or (= temp___is_init_199 true) (<= 1 5)) (in_range2 temp___expr_203)))
(assert (forall ((temp___343 (Array Int int5))) (forall ((temp___344 Int)) (= (select (temp___341 temp___343) temp___344) temp___343))))
(assert (forall ((temp___347 Int) (temp___348 Int)) (let ((temp___346 (temp___345 temp___347 temp___348))) (=> (and (dynamic_invariant2 temp___347 true true true true) (dynamic_invariant2 temp___348 true true true true)) (forall ((temp___349 Int)) (ite (= temp___349 3) (= (to_rep (select temp___346 temp___349)) temp___347) (= (to_rep (select temp___346 temp___349)) temp___348)))))))
(declare-const a (Array Int (Array Int int5)))
(declare-const i Int)
(declare-const o Int)
(declare-const temp___340 (Array Int int5))
(declare-const o1 Int)
(declare-const o2 int5)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const temp___350 (Array Int int5))
(declare-const result Int)
(declare-const i1 Int)
(assert (in_range1 n))
(assert (and (<= 2 n) (<= n 6)))
(assert (and (<= 3 n) (<= n 7)))
(assert (= o n))
(assert (= temp___340 (select a o)))
(assert (and (<= 2 n) (<= n 6)))
(assert (= o1 n))
(assert (= o2 (select temp___340 o1)))
(assert (= o3 (to_rep o2)))
(assert (and (= o4 o3) (in_range3 o3)))
(assert (= result i))
(assert (= i1 o4))
(assert (in_range3 i1))
(assert (and (<= 3 n) (<= n 7)))
(assert (= o5 n))
(assert (= temp___350 (select a o5)))
(assert (not (<= 2 n)))
(check-sat)
(exit)
