(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort fart 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq4 (fart fart) Bool)
(declare-const dummy4 fart)
(declare-datatypes () ((fart__ref (mk_fart__ref (fart__content fart)))))
(define-fun fart__ref___projection ((a fart__ref)) fart (fart__content a))
(define-fun dynamic_invariant ((temp___expr_252 Int) (temp___is_init_249 Bool) (temp___skip_constant_250 Bool) (temp___do_toplevel_251 Bool)) Bool (=> (or (= temp___is_init_249 true) (<= 0 2147483647)) (in_range3 temp___expr_252)))
(declare-fun to_rep2 (fart) Int)
(declare-fun of_rep2 (Int) fart)
(assert (forall ((x fart)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x fart)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort matchresultt 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (matchresultt matchresultt) Bool)
(declare-const dummy5 matchresultt)
(declare-datatypes () ((matchresultt__ref (mk_matchresultt__ref (matchresultt__content matchresultt)))))
(define-fun matchresultt__ref___projection ((a matchresultt__ref)) matchresultt (matchresultt__content a))
(define-fun dynamic_invariant1 ((temp___expr_258 Int) (temp___is_init_255 Bool) (temp___skip_constant_256 Bool) (temp___do_toplevel_257 Bool)) Bool (=> (or (= temp___is_init_255 true) (<= 0 1)) (in_range4 temp___expr_258)))
(declare-sort bytet 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (bytet bytet) Bool)
(declare-const dummy6 bytet)
(declare-datatypes () ((bytet__ref (mk_bytet__ref (bytet__content bytet)))))
(define-fun bytet__ref___projection ((a bytet__ref)) bytet (bytet__content a))
(declare-fun to_rep3 (bytet) Int)
(declare-fun of_rep3 (Int) bytet)
(assert (forall ((x bytet)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x bytet)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int bytet))))))
(declare-fun slide1 ((Array Int bytet) Int Int) (Array Int bytet))
(assert (forall ((a (Array Int bytet))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int bytet))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int bytet) Int Int (Array Int bytet) Int Int) (Array Int bytet))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (bytet Int) (Array Int bytet))
(assert (forall ((v bytet)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq2 ((a (Array Int bytet)) (a__first Int) (a__last Int) (b (Array Int bytet)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_135 Int)) (=> (and (<= a__first temp___idx_135) (<= temp___idx_135 a__last)) (= (to_rep3 (select a temp___idx_135)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_135))))))) true false))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_135 Int)) (=> (and (<= a__first temp___idx_135) (<= temp___idx_135 a__last)) (= (to_rep3 (select a temp___idx_135)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_135)))))))))))
(declare-fun compare1 ((Array Int bytet) Int Int (Array Int bytet) Int Int) Int)
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq2 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq2 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep3 (select a (+ i 1))) (to_rep3 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int bytet)) (b (Array Int bytet))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq2 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep3 (select b (+ i 1))) (to_rep3 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const dummy7 (Array Int bytet))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int bytet)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int bytet)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int bytet)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int bytet))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq7 ((Array Int bytet) (Array Int bytet)) Bool)
(declare-sort templatelengtht 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (templatelengtht templatelengtht) Bool)
(declare-const dummy8 templatelengtht)
(declare-datatypes () ((templatelengtht__ref (mk_templatelengtht__ref (templatelengtht__content templatelengtht)))))
(define-fun templatelengtht__ref___projection ((a templatelengtht__ref)) templatelengtht (templatelengtht__content a))
(declare-fun to_rep4 (templatelengtht) Int)
(declare-fun of_rep4 (Int) templatelengtht)
(assert (forall ((x templatelengtht)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x templatelengtht)) (! (in_range6 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-const dummy9 (Array Int character))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq9 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__iandatypes__templatet__length templatelengtht) (rec__iandatypes__templatet__requiredmaxfar fart) (rec__iandatypes__templatet__id (Array Int character)) (rec__iandatypes__templatet__pad (Array Int bytet))))))
(define-fun us_split_fields_Length__projection ((a us_split_fields)) templatelengtht (rec__iandatypes__templatet__length a))
(define-fun us_split_fields_RequiredMaxFAR__projection ((a us_split_fields)) fart (rec__iandatypes__templatet__requiredmaxfar a))
(define-fun us_split_fields_ID__2__projection ((a us_split_fields)) (Array Int character) (rec__iandatypes__templatet__id a))
(define-fun us_split_fields_Pad__projection ((a us_split_fields)) (Array Int bytet) (rec__iandatypes__templatet__pad a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___3__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq3 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (to_rep4 (rec__iandatypes__templatet__length (us_split_fields1 a))) (to_rep4 (rec__iandatypes__templatet__length (us_split_fields1 b)))) (= (to_rep2 (rec__iandatypes__templatet__requiredmaxfar (us_split_fields1 a))) (to_rep2 (rec__iandatypes__templatet__requiredmaxfar (us_split_fields1 b))))) (= (bool_eq (rec__iandatypes__templatet__id (us_split_fields1 a)) 1 40 (rec__iandatypes__templatet__id (us_split_fields1 b)) 1 40) true)) (= (bool_eq2 (rec__iandatypes__templatet__pad (us_split_fields1 a)) 1 452 (rec__iandatypes__templatet__pad (us_split_fields1 b)) 1 452) true)) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const iandatypes__templatet__length__first__bit Int)
(declare-const iandatypes__templatet__length__last__bit Int)
(declare-const iandatypes__templatet__length__position Int)
(assert (<= 0 iandatypes__templatet__length__first__bit))
(assert (< iandatypes__templatet__length__first__bit iandatypes__templatet__length__last__bit))
(assert (<= 0 iandatypes__templatet__length__position))
(declare-const iandatypes__templatet__requiredmaxfar__first__bit Int)
(declare-const iandatypes__templatet__requiredmaxfar__last__bit Int)
(declare-const iandatypes__templatet__requiredmaxfar__position Int)
(assert (<= 0 iandatypes__templatet__requiredmaxfar__first__bit))
(assert (< iandatypes__templatet__requiredmaxfar__first__bit iandatypes__templatet__requiredmaxfar__last__bit))
(assert (<= 0 iandatypes__templatet__requiredmaxfar__position))
(declare-const iandatypes__templatet__id__first__bit Int)
(declare-const iandatypes__templatet__id__last__bit Int)
(declare-const iandatypes__templatet__id__position Int)
(assert (<= 0 iandatypes__templatet__id__first__bit))
(assert (< iandatypes__templatet__id__first__bit iandatypes__templatet__id__last__bit))
(assert (<= 0 iandatypes__templatet__id__position))
(declare-const iandatypes__templatet__pad__first__bit Int)
(declare-const iandatypes__templatet__pad__last__bit Int)
(declare-const iandatypes__templatet__pad__position Int)
(assert (<= 0 iandatypes__templatet__pad__first__bit))
(assert (< iandatypes__templatet__pad__first__bit iandatypes__templatet__pad__last__bit))
(assert (<= 0 iandatypes__templatet__pad__position))
(declare-fun user_eq10 (us_rep us_rep) Bool)
(declare-const dummy10 us_rep)
(declare-datatypes () ((templatet__ref (mk_templatet__ref (templatet__content us_rep)))))
(define-fun templatet__ref___projection ((a templatet__ref)) us_rep (templatet__content a))
(declare-sort descriptioni 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 150)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq11 (descriptioni descriptioni) Bool)
(declare-const dummy11 descriptioni)
(declare-datatypes () ((descriptioni__ref (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni (descriptioni__content a))
(declare-fun thesystemmaxfar (us_private) Int)
(declare-fun thesystemmaxfar__function_guard (Int us_private) Bool)
(assert (forall ((configdata__state us_private)) (! (dynamic_invariant (thesystemmaxfar configdata__state) true false true) :pattern ((thesystemmaxfar configdata__state)))))
(declare-fun valid_numberlogentries (us_private) Bool)
(declare-fun valid_numberlogentries__function_guard (Bool us_private) Bool)
(declare-sort statscount 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq12 (statscount statscount) Bool)
(declare-const dummy12 statscount)
(declare-datatypes () ((statscount__ref (mk_statscount__ref (statscount__content statscount)))))
(define-fun statscount__ref___projection ((a statscount__ref)) statscount (statscount__content a))
(declare-fun to_rep5 (statscount) Int)
(declare-fun of_rep5 (Int) statscount)
(assert (forall ((x statscount)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x statscount)) (! (in_range8 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range8 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__stats__t__successentry statscount) (rec__stats__t__failentry statscount) (rec__stats__t__successbio statscount) (rec__stats__t__failbio statscount)))))
(define-fun us_split_fields_SuccessEntry__projection ((a us_split_fields2)) statscount (rec__stats__t__successentry a))
(define-fun us_split_fields_FailEntry__projection ((a us_split_fields2)) statscount (rec__stats__t__failentry a))
(define-fun us_split_fields_SuccessBio__projection ((a us_split_fields2)) statscount (rec__stats__t__successbio a))
(define-fun us_split_fields_FailBio__projection ((a us_split_fields2)) statscount (rec__stats__t__failbio a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___13__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___14__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq4 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (to_rep5 (rec__stats__t__successentry (us_split_fields3 a))) (to_rep5 (rec__stats__t__successentry (us_split_fields3 b)))) (= (to_rep5 (rec__stats__t__failentry (us_split_fields3 a))) (to_rep5 (rec__stats__t__failentry (us_split_fields3 b))))) (= (to_rep5 (rec__stats__t__successbio (us_split_fields3 a))) (to_rep5 (rec__stats__t__successbio (us_split_fields3 b))))) (= (to_rep5 (rec__stats__t__failbio (us_split_fields3 a))) (to_rep5 (rec__stats__t__failbio (us_split_fields3 b))))) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep1) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep1) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep1)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment4 a))))
(declare-const stats__t__successentry__first__bit Int)
(declare-const stats__t__successentry__last__bit Int)
(declare-const stats__t__successentry__position Int)
(assert (<= 0 stats__t__successentry__first__bit))
(assert (< stats__t__successentry__first__bit stats__t__successentry__last__bit))
(assert (<= 0 stats__t__successentry__position))
(declare-const stats__t__failentry__first__bit Int)
(declare-const stats__t__failentry__last__bit Int)
(declare-const stats__t__failentry__position Int)
(assert (<= 0 stats__t__failentry__first__bit))
(assert (< stats__t__failentry__first__bit stats__t__failentry__last__bit))
(assert (<= 0 stats__t__failentry__position))
(declare-const stats__t__successbio__first__bit Int)
(declare-const stats__t__successbio__last__bit Int)
(declare-const stats__t__successbio__position Int)
(assert (<= 0 stats__t__successbio__first__bit))
(assert (< stats__t__successbio__first__bit stats__t__successbio__last__bit))
(assert (<= 0 stats__t__successbio__position))
(declare-const stats__t__failbio__first__bit Int)
(declare-const stats__t__failbio__last__bit Int)
(declare-const stats__t__failbio__position Int)
(assert (<= 0 stats__t__failbio__first__bit))
(assert (< stats__t__failbio__first__bit stats__t__failbio__last__bit))
(assert (<= 0 stats__t__failbio__position))
(declare-fun user_eq13 (us_rep1 us_rep1) Bool)
(declare-const dummy13 us_rep1)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep1)))))
(define-fun t__ref___4__projection ((a t__ref)) us_rep1 (t__content a))
(declare-fun extractuser (us_private) (Array Int character))
(declare-fun extractuser__function_guard ((Array Int character) us_private) Bool)
(assert true)
(declare-fun ispresent (us_private) Bool)
(declare-fun ispresent__function_guard (Bool us_private) Bool)
(assert true)
(declare-fun getiandatemplate (us_private) us_rep)
(declare-fun getiandatemplate__function_guard (us_rep us_private) Bool)
(assert true)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort statust 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq14 (statust statust) Bool)
(declare-const dummy14 statust)
(declare-datatypes () ((statust__ref (mk_statust__ref (statust__content statust)))))
(define-fun statust__ref___2__projection ((a statust__ref)) statust (statust__content a))
(define-fun dynamic_invariant2 ((temp___expr_1683 Int) (temp___is_init_1680 Bool) (temp___skip_constant_1681 Bool) (temp___do_toplevel_1682 Bool)) Bool (=> (or (= temp___is_init_1680 true) (<= 0 7)) (in_range9 temp___expr_1683)))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-fun achievedfardescription (Int) (Array Int character))
(declare-fun achievedfardescription__function_guard ((Array Int character) Int) Bool)
(assert true)
(define-fun dynamic_invariant3 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range1 temp___expr_39)))
(define-fun dynamic_invariant4 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range2 temp___expr_63)))
(define-fun dynamic_invariant5 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant6 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_15)))
(assert true)
(define-fun dynamic_invariant7 ((temp___expr_334 Int) (temp___is_init_331 Bool) (temp___skip_constant_332 Bool) (temp___do_toplevel_333 Bool)) Bool (=> (or (= temp___is_init_331 true) (<= 1 150)) (in_range7 temp___expr_334)))
(define-fun dynamic_invariant8 ((temp___expr_168 Int) (temp___is_init_165 Bool) (temp___skip_constant_166 Bool) (temp___do_toplevel_167 Bool)) Bool (=> (or (= temp___is_init_165 true) (<= 0 255)) (in_range5 temp___expr_168)))
(define-fun dynamic_invariant9 ((temp___expr_279 Int) (temp___is_init_276 Bool) (temp___skip_constant_277 Bool) (temp___do_toplevel_278 Bool)) Bool (=> (or (= temp___is_init_276 true) (<= 0 4294967295)) (in_range6 temp___expr_279)))
(define-fun dynamic_invariant10 ((temp___expr_1028 Int) (temp___is_init_1025 Bool) (temp___skip_constant_1026 Bool) (temp___do_toplevel_1027 Bool)) Bool (=> (or (= temp___is_init_1025 true) (<= 0 2147483647)) (in_range8 temp___expr_1028)))
(declare-const status Int)
(declare-const thetemplate__split_fields templatelengtht)
(declare-const thetemplate__split_fields1 fart)
(declare-const thetemplate__split_fields2 (Array Int character))
(declare-const thetemplate__split_fields3 (Array Int bytet))
(declare-const matchresult Int)
(declare-const achievedfar Int)
(declare-const maxfar Int)
(declare-const state us_private)
(declare-const state1 us_private)
(declare-const o Bool)
(declare-const temp___1701 templatelengtht)
(declare-const temp___17011 fart)
(declare-const temp___17012 (Array Int character))
(declare-const temp___17013 (Array Int bytet))
(declare-const o1 Int)
(declare-const o2 (Array Int character))
(declare-const o3 (Array Int character))
(declare-const o4 (Array Int character))
(declare-const o5 t)
(declare-const result Bool)
(declare-const result1 templatelengtht)
(declare-const result2 fart)
(declare-const result3 (Array Int character))
(declare-const result4 (Array Int bytet))
(declare-const thetemplate__split_fields4 templatelengtht)
(declare-const thetemplate__split_fields5 fart)
(declare-const thetemplate__split_fields6 (Array Int character))
(declare-const thetemplate__split_fields7 (Array Int bytet))
(declare-const result5 Int)
(declare-const maxfar1 Int)
(declare-const result6 Int)
(declare-const maxfar2 Int)
(declare-const matchresult1 Int)
(declare-const achievedfar1 Int)
(declare-const state2 us_private)
(assert (=> (<= 0 7) (in_range9 status)))
(assert (=> (<= 0 1) (in_range4 matchresult)))
(assert (=> (<= 0 2147483647) (in_range3 achievedfar)))
(assert (=> (<= 0 2147483647) (in_range3 maxfar)))
(assert (= o (ispresent state1)))
(assert (= result (ite (not (= o true)) true false)))
(assert (not (= result true)))
(assert (= (mk___rep (mk___split_fields temp___1701 temp___17011 temp___17012 temp___17013)) (getiandatemplate state1)))
(assert (= result1 thetemplate__split_fields))
(assert (= result2 thetemplate__split_fields1))
(assert (= result3 thetemplate__split_fields2))
(assert (= result4 thetemplate__split_fields3))
(assert (= temp___1701 thetemplate__split_fields4))
(assert (= temp___17011 thetemplate__split_fields5))
(assert (= temp___17012 thetemplate__split_fields6))
(assert (= temp___17013 thetemplate__split_fields7))
(assert (and (= o1 (thesystemmaxfar state)) (in_range3 o1)))
(assert (= result5 maxfar))
(assert (= maxfar1 o1))
(assert (=> (< (to_rep2 thetemplate__split_fields5) maxfar1) (= result6 maxfar1)))
(assert (=> (< (to_rep2 thetemplate__split_fields5) maxfar1) (= maxfar2 (to_rep2 thetemplate__split_fields5))))
(assert (=> (not (< (to_rep2 thetemplate__split_fields5) maxfar1)) (= maxfar2 maxfar1)))
(assert (and (in_range4 matchresult1) (in_range3 achievedfar1)))
(assert (not (= matchresult1 0)))
(assert (= o3 (achievedfardescription achievedfar1)))
(assert (= o3 o4))
(assert (= (mk 1 150) o5))
(assert (= o2 (extractuser state1)))
(assert (not (= (valid_numberlogentries state2) true)))
(check-sat)
(exit)
