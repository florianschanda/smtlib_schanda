(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (to_rep (select a temp___idx_155)) (to_rep (select b (+ (- b__first a__first) temp___idx_155))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (to_rep (select a temp___idx_155)) (to_rep (select b (+ (- b__first a__first) temp___idx_155)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const i Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const j Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const k Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const a_old (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-fun temp___267 ((Array Int integer) Int Int Int Int Int Int) (Array Int integer))
(declare-fun temp___360 ((Array Int integer) Int Int Int Int Int Int) (Array Int integer))
(declare-fun temp___370 ((Array Int integer) Int Int Int Int Int Int) (Array Int integer))
(declare-fun temp___384 ((Array Int integer) Int Int Int Int Int Int) (Array Int integer))
(declare-fun temp___394 ((Array Int integer) Int Int Int Int Int Int) (Array Int integer))
(declare-fun temp___408 ((Array Int integer) Int Int Int Int Int Int) (Array Int integer))
(declare-fun temp___418 ((Array Int integer) Int Int Int Int Int Int) (Array Int integer))
(assert (forall ((temp___269 (Array Int integer))) (forall ((temp___270 Int) (temp___271 Int) (temp___272 Int) (temp___273 Int) (temp___274 Int) (temp___275 Int)) (let ((temp___268 (temp___267 temp___269 temp___270 temp___271 temp___272 temp___273 temp___274 temp___275))) (=> (and (and (and (and (and (dynamic_invariant temp___270 true true true true) (dynamic_invariant temp___271 true true true true)) (dynamic_invariant temp___272 true true true true)) (dynamic_invariant temp___273 true true true true)) (dynamic_invariant temp___274 true true true true)) (dynamic_invariant temp___275 true true true true)) (forall ((temp___276 Int)) (ite (= temp___276 temp___274) (= (to_rep (select temp___268 temp___276)) temp___275) (ite (= temp___276 temp___272) (= (to_rep (select temp___268 temp___276)) temp___273) (ite (= temp___276 temp___270) (= (to_rep (select temp___268 temp___276)) temp___271) (= (select temp___268 temp___276) (select temp___269 temp___276)))))))))))
(assert (forall ((temp___362 (Array Int integer))) (forall ((temp___363 Int) (temp___364 Int) (temp___365 Int) (temp___366 Int) (temp___367 Int) (temp___368 Int)) (let ((temp___361 (temp___360 temp___362 temp___363 temp___364 temp___365 temp___366 temp___367 temp___368))) (=> (and (and (and (and (and (dynamic_invariant temp___363 true true true true) (dynamic_invariant temp___364 true true true true)) (dynamic_invariant temp___365 true true true true)) (dynamic_invariant temp___366 true true true true)) (dynamic_invariant temp___367 true true true true)) (dynamic_invariant temp___368 true true true true)) (forall ((temp___369 Int)) (ite (= temp___369 temp___367) (= (to_rep (select temp___361 temp___369)) temp___368) (ite (= temp___369 temp___365) (= (to_rep (select temp___361 temp___369)) temp___366) (ite (= temp___369 temp___363) (= (to_rep (select temp___361 temp___369)) temp___364) (= (select temp___361 temp___369) (select temp___362 temp___369)))))))))))
(assert (forall ((temp___372 (Array Int integer))) (forall ((temp___373 Int) (temp___374 Int) (temp___375 Int) (temp___376 Int) (temp___377 Int) (temp___378 Int)) (let ((temp___371 (temp___370 temp___372 temp___373 temp___374 temp___375 temp___376 temp___377 temp___378))) (=> (and (and (and (and (and (dynamic_invariant temp___373 true true true true) (dynamic_invariant temp___374 true true true true)) (dynamic_invariant temp___375 true true true true)) (dynamic_invariant temp___376 true true true true)) (dynamic_invariant temp___377 true true true true)) (dynamic_invariant temp___378 true true true true)) (forall ((temp___379 Int)) (ite (= temp___379 temp___377) (= (to_rep (select temp___371 temp___379)) temp___378) (ite (= temp___379 temp___375) (= (to_rep (select temp___371 temp___379)) temp___376) (ite (= temp___379 temp___373) (= (to_rep (select temp___371 temp___379)) temp___374) (= (select temp___371 temp___379) (select temp___372 temp___379)))))))))))
(assert (forall ((temp___386 (Array Int integer))) (forall ((temp___387 Int) (temp___388 Int) (temp___389 Int) (temp___390 Int) (temp___391 Int) (temp___392 Int)) (let ((temp___385 (temp___384 temp___386 temp___387 temp___388 temp___389 temp___390 temp___391 temp___392))) (=> (and (and (and (and (and (dynamic_invariant temp___387 true true true true) (dynamic_invariant temp___388 true true true true)) (dynamic_invariant temp___389 true true true true)) (dynamic_invariant temp___390 true true true true)) (dynamic_invariant temp___391 true true true true)) (dynamic_invariant temp___392 true true true true)) (forall ((temp___393 Int)) (ite (= temp___393 temp___391) (= (to_rep (select temp___385 temp___393)) temp___392) (ite (= temp___393 temp___389) (= (to_rep (select temp___385 temp___393)) temp___390) (ite (= temp___393 temp___387) (= (to_rep (select temp___385 temp___393)) temp___388) (= (select temp___385 temp___393) (select temp___386 temp___393)))))))))))
(assert (forall ((temp___396 (Array Int integer))) (forall ((temp___397 Int) (temp___398 Int) (temp___399 Int) (temp___400 Int) (temp___401 Int) (temp___402 Int)) (let ((temp___395 (temp___394 temp___396 temp___397 temp___398 temp___399 temp___400 temp___401 temp___402))) (=> (and (and (and (and (and (dynamic_invariant temp___397 true true true true) (dynamic_invariant temp___398 true true true true)) (dynamic_invariant temp___399 true true true true)) (dynamic_invariant temp___400 true true true true)) (dynamic_invariant temp___401 true true true true)) (dynamic_invariant temp___402 true true true true)) (forall ((temp___403 Int)) (ite (= temp___403 temp___401) (= (to_rep (select temp___395 temp___403)) temp___402) (ite (= temp___403 temp___399) (= (to_rep (select temp___395 temp___403)) temp___400) (ite (= temp___403 temp___397) (= (to_rep (select temp___395 temp___403)) temp___398) (= (select temp___395 temp___403) (select temp___396 temp___403)))))))))))
(assert (forall ((temp___410 (Array Int integer))) (forall ((temp___411 Int) (temp___412 Int) (temp___413 Int) (temp___414 Int) (temp___415 Int) (temp___416 Int)) (let ((temp___409 (temp___408 temp___410 temp___411 temp___412 temp___413 temp___414 temp___415 temp___416))) (=> (and (and (and (and (and (dynamic_invariant temp___411 true true true true) (dynamic_invariant temp___412 true true true true)) (dynamic_invariant temp___413 true true true true)) (dynamic_invariant temp___414 true true true true)) (dynamic_invariant temp___415 true true true true)) (dynamic_invariant temp___416 true true true true)) (forall ((temp___417 Int)) (ite (= temp___417 temp___415) (= (to_rep (select temp___409 temp___417)) temp___416) (ite (= temp___417 temp___413) (= (to_rep (select temp___409 temp___417)) temp___414) (ite (= temp___417 temp___411) (= (to_rep (select temp___409 temp___417)) temp___412) (= (select temp___409 temp___417) (select temp___410 temp___417)))))))))))
(assert (forall ((temp___420 (Array Int integer))) (forall ((temp___421 Int) (temp___422 Int) (temp___423 Int) (temp___424 Int) (temp___425 Int) (temp___426 Int)) (let ((temp___419 (temp___418 temp___420 temp___421 temp___422 temp___423 temp___424 temp___425 temp___426))) (=> (and (and (and (and (and (dynamic_invariant temp___421 true true true true) (dynamic_invariant temp___422 true true true true)) (dynamic_invariant temp___423 true true true true)) (dynamic_invariant temp___424 true true true true)) (dynamic_invariant temp___425 true true true true)) (dynamic_invariant temp___426 true true true true)) (forall ((temp___427 Int)) (ite (= temp___427 temp___425) (= (to_rep (select temp___419 temp___427)) temp___426) (ite (= temp___427 temp___423) (= (to_rep (select temp___419 temp___427)) temp___424) (ite (= temp___427 temp___421) (= (to_rep (select temp___419 temp___427)) temp___422) (= (select temp___419 temp___427) (select temp___420 temp___427)))))))))))
(declare-const a (Array Int integer))
(declare-const o integer)
(declare-const o1 (Array Int integer))
(declare-const o2 integer)
(declare-const o3 (Array Int integer))
(declare-const o4 integer)
(declare-const o5 (Array Int integer))
(declare-const result (Array Int integer))
(declare-const a1 (Array Int integer))
(declare-const result1 (Array Int integer))
(declare-const a2 (Array Int integer))
(declare-const result2 (Array Int integer))
(declare-const a3 (Array Int integer))
(assert (in_range1 i))
(assert (in_range1 j))
(assert (in_range1 k))
(assert (and (and (not (= i j)) (not (= j k))) (not (= k i))))
(assert (= a a_old))
(assert (= (to_rep o) 3))
(assert (= o1 (store a k o)))
(assert (= (mk_map__ref result) (mk_map__ref a)))
(assert (= a1 o1))
(assert (= (to_rep o2) 2))
(assert (= o3 (store a1 j o2)))
(assert (= a1 result1))
(assert (= a2 o3))
(assert (= (to_rep o4) 1))
(assert (= o5 (store a2 i o4)))
(assert (= a2 result2))
(assert (= a3 o5))
(assert (= (bool_eq (temp___360 a_old i 1 j 2 k 3) (- 2147483648) 2147483647 (temp___370 a_old i 1 k 3 j 2) (- 2147483648) 2147483647) true))
(assert (= (bool_eq (temp___384 a_old i 1 k 3 j 2) (- 2147483648) 2147483647 (temp___394 a_old k 3 i 1 j 2) (- 2147483648) 2147483647) true))
(assert (not (= (bool_eq (temp___408 a_old k 3 i 1 j 2) (- 2147483648) 2147483647 (temp___418 a_old k 3 j 2 i 1) (- 2147483648) 2147483647) true)))
(check-sat)
(exit)
