(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort index_t 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 1000)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (index_t index_t) Bool)
(declare-const dummy index_t)
(declare-datatypes () ((index_t__ref (mk_index_t__ref (index_t__content index_t)))))
(define-fun index_t__ref___projection ((a index_t__ref)) index_t (index_t__content a))
(define-fun dynamic_invariant ((temp___expr_215 Int) (temp___is_init_211 Bool) (temp___skip_constant_212 Bool) (temp___do_toplevel_213 Bool) (temp___do_typ_inv_214 Bool)) Bool (=> (or (= temp___is_init_211 true) (<= 1 1000)) (in_range1 temp___expr_215)))
(declare-sort component_t 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (component_t component_t) Bool)
(declare-const dummy1 component_t)
(declare-datatypes () ((component_t__ref (mk_component_t__ref (component_t__content component_t)))))
(define-fun component_t__ref___projection ((a component_t__ref)) component_t (component_t__content a))
(declare-fun to_rep (component_t) Int)
(declare-fun of_rep (Int) component_t)
(assert (forall ((x component_t)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x component_t)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int component_t))))))
(declare-fun slide ((Array Int component_t) Int Int) (Array Int component_t))
(assert (forall ((a (Array Int component_t))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int component_t))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int component_t)) (a__first Int) (a__last Int) (b (Array Int component_t)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int component_t)) (b (Array Int component_t))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const first Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const last Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-sort integer 0)
(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (integer integer) Bool)
(declare-const dummy2 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((t2b__ref (mk_t2b__ref (t2b__content integer)))))
(define-fun t2b__ref___projection ((a t2b__ref)) integer (t2b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-fun temp___599 ((Array Int component_t) Int Int Int) (Array Int component_t))
(declare-fun temp___621 ((Array Int component_t) Int Int Int) (Array Int component_t))
(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range3 temp___expr_18)))
(define-fun dynamic_invariant2 ((temp___expr_229 Int) (temp___is_init_225 Bool) (temp___skip_constant_226 Bool) (temp___do_toplevel_227 Bool) (temp___do_typ_inv_228 Bool)) Bool (=> (or (= temp___is_init_225 true) (<= 0 2147483647)) (in_range2 temp___expr_229)))
(assert (forall ((temp___623 (Array Int component_t))) (forall ((temp___624 Int) (temp___625 Int) (temp___626 Int)) (let ((temp___622 (temp___621 temp___623 temp___624 temp___625 temp___626))) (=> (and (and (dynamic_invariant temp___624 true true true true) (dynamic_invariant temp___625 true true true true)) (dynamic_invariant2 temp___626 true true true true)) (forall ((temp___627 Int)) (ite (and (<= temp___624 temp___627) (<= temp___627 temp___625)) (= (to_rep (select temp___622 temp___627)) temp___626) (= (select temp___622 temp___627) (select temp___623 temp___627)))))))))
(assert (forall ((temp___601 (Array Int component_t))) (forall ((temp___602 Int) (temp___603 Int) (temp___604 Int)) (let ((temp___600 (temp___599 temp___601 temp___602 temp___603 temp___604))) (=> (and (and (dynamic_invariant temp___602 true true true true) (dynamic_invariant temp___603 true true true true)) (dynamic_invariant2 temp___604 true true true true)) (forall ((temp___605 Int)) (ite (and (<= temp___602 temp___605) (<= temp___605 temp___603)) (= (to_rep (select temp___600 temp___605)) temp___604) (= (select temp___600 temp___605) (select temp___601 temp___605)))))))))
(declare-const a (Array Int component_t))
(declare-const a_loop_entry (Array Int component_t))
(declare-const j Int)
(declare-const o component_t)
(declare-const o1 (Array Int component_t))
(declare-const result (Array Int component_t))
(declare-const a_loop_entry1 (Array Int component_t))
(declare-const result1 Int)
(declare-const j1 Int)
(declare-const result2 (Array Int component_t))
(declare-const a1 (Array Int component_t))
(assert (in_range1 first))
(assert (in_range1 last))
(assert (= (mk_map__ref result) (mk_map__ref a_loop_entry)))
(assert (= a_loop_entry1 a))
(assert (= (mk_int__ref result1) (mk_int__ref j)))
(assert (= j1 first))
(assert (<= first j1))
(assert (<= j1 last))
(assert (= (to_rep o) 0))
(assert (= o1 (store a j1 o)))
(assert (= (mk_map__ref result2) (mk_map__ref a)))
(assert (= a1 o1))
(assert (not (= (bool_eq a1 1 1000 (temp___621 a_loop_entry1 first j1 0) 1 1000) true)))
(check-sat)
(exit)
