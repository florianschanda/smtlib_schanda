(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (natural natural) Bool)
(declare-const dummy4 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range4 temp___expr_39)))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep 0)
(declare-fun bool_eq2 (us_rep us_rep) Bool)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))
(declare-sort classt 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 5)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (classt classt) Bool)
(declare-const dummy6 classt)
(declare-datatypes () ((classt__ref (mk_classt__ref (classt__content classt)))))
(define-fun classt__ref___projection ((a classt__ref)) classt (classt__content a))
(define-fun dynamic_invariant1 ((temp___expr_536 Int) (temp___is_init_532 Bool) (temp___skip_constant_533 Bool) (temp___do_toplevel_534 Bool) (temp___do_typ_inv_535 Bool)) Bool (=> (or (= temp___is_init_532 true) (<= 0 5)) (in_range5 temp___expr_536)))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort classtexti 0)
(declare-fun classtextiqtint (classtexti) Int)
(assert (forall ((i classtexti)) (and (<= 1 (classtextiqtint i)) (<= (classtextiqtint i) 12))))
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 12)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (classtexti classtexti) Bool)
(declare-const dummy7 classtexti)
(declare-datatypes () ((classtexti__ref (mk_classtexti__ref (classtexti__content classtexti)))))
(define-fun classtexti__ref___projection ((a classtexti__ref)) classtexti (classtexti__content a))
(define-fun to_rep2 ((x classtexti)) Int (classtextiqtint x))
(declare-fun of_rep2 (Int) classtexti)
(assert (forall ((x classtexti)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x classtexti)) (! (in_range6 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-const dummy8 (Array Int character))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq8 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__configdata__classstringt__text (Array Int character)) (rec__configdata__classstringt__length classtexti)))))
(define-fun us_split_fields_Text__projection ((a us_split_fields)) (Array Int character) (rec__configdata__classstringt__text a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields)) classtexti (rec__configdata__classstringt__length a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep1 (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___8__projection ((a us_rep1)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (bool_eq (rec__configdata__classstringt__text (us_split_fields1 a)) 1 12 (rec__configdata__classstringt__text (us_split_fields1 b)) 1 12) true) (= (to_rep2 (rec__configdata__classstringt__length (us_split_fields1 a))) (to_rep2 (rec__configdata__classstringt__length (us_split_fields1 b))))) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const configdata__classstringt__text__first__bit Int)
(declare-const configdata__classstringt__text__last__bit Int)
(declare-const configdata__classstringt__text__position Int)
(assert (<= 0 configdata__classstringt__text__first__bit))
(assert (< configdata__classstringt__text__first__bit configdata__classstringt__text__last__bit))
(assert (<= 0 configdata__classstringt__text__position))
(declare-const configdata__classstringt__length__first__bit Int)
(declare-const configdata__classstringt__length__last__bit Int)
(declare-const configdata__classstringt__length__position Int)
(assert (<= 0 configdata__classstringt__length__first__bit))
(assert (< configdata__classstringt__length__first__bit configdata__classstringt__length__last__bit))
(assert (<= 0 configdata__classstringt__length__position))
(declare-fun user_eq9 (us_rep1 us_rep1) Bool)
(declare-const dummy9 us_rep1)
(declare-datatypes () ((classstringt__ref (mk_classstringt__ref (classstringt__content us_rep1)))))
(define-fun classstringt__ref___projection ((a classstringt__ref)) us_rep1 (classstringt__content a))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int us_rep1))))))
(declare-fun slide1 ((Array Int us_rep1) Int Int) (Array Int us_rep1))
(assert (forall ((a (Array Int us_rep1))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int us_rep1))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq4 ((a (Array Int us_rep1)) (a__first Int) (a__last Int) (b (Array Int us_rep1)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_185 Int)) (=> (and (<= a__first temp___idx_185) (<= temp___idx_185 a__last)) (= (bool_eq3 (select a temp___idx_185) (select b (+ (- b__first a__first) temp___idx_185))) true)))) true false))
(assert (forall ((a (Array Int us_rep1)) (b (Array Int us_rep1))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_185 Int)) (=> (and (<= a__first temp___idx_185) (<= temp___idx_185 a__last)) (= (bool_eq3 (select a temp___idx_185) (select b (+ (- b__first a__first) temp___idx_185))) true))))))))
(declare-const classstringlookup (Array Int us_rep1))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-fun configdata__classstringlookup__aggregate_def (us_rep1 us_rep1 us_rep1 us_rep1 us_rep1 us_rep1) (Array Int us_rep1))
(declare-fun temp___String_Literal_194 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_194 us_void_param) 1)) 117) (= (to_rep (select (temp___String_Literal_194 us_void_param) 2)) 110)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 3)) 109)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 4)) 97)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 5)) 114)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 6)) 107)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 7)) 101)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 8)) 100)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_194 us_void_param) 12)) 32)) :pattern ((temp___String_Literal_194 us_void_param)))))
(declare-fun temp___String_Literal_195 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_195 us_void_param) 1)) 117) (= (to_rep (select (temp___String_Literal_195 us_void_param) 2)) 110)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 3)) 99)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 4)) 108)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 5)) 97)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 6)) 115)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 7)) 115)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 8)) 105)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 9)) 102)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 10)) 105)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 11)) 101)) (= (to_rep (select (temp___String_Literal_195 us_void_param) 12)) 100)) :pattern ((temp___String_Literal_195 us_void_param)))))
(declare-fun temp___String_Literal_196 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_196 us_void_param) 1)) 114) (= (to_rep (select (temp___String_Literal_196 us_void_param) 2)) 101)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 3)) 115)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 4)) 116)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 5)) 114)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 6)) 105)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 7)) 99)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 8)) 116)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 9)) 101)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 10)) 100)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_196 us_void_param) 12)) 32)) :pattern ((temp___String_Literal_196 us_void_param)))))
(declare-fun temp___String_Literal_197 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_197 us_void_param) 1)) 99) (= (to_rep (select (temp___String_Literal_197 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 3)) 110)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 4)) 102)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 5)) 105)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 6)) 100)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 7)) 101)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 8)) 110)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 9)) 116)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 10)) 105)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 11)) 97)) (= (to_rep (select (temp___String_Literal_197 us_void_param) 12)) 108)) :pattern ((temp___String_Literal_197 us_void_param)))))
(declare-fun temp___String_Literal_198 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_198 us_void_param) 1)) 115) (= (to_rep (select (temp___String_Literal_198 us_void_param) 2)) 101)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 3)) 99)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 4)) 114)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 6)) 116)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_198 us_void_param) 12)) 32)) :pattern ((temp___String_Literal_198 us_void_param)))))
(declare-fun temp___String_Literal_199 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_199 us_void_param) 1)) 116) (= (to_rep (select (temp___String_Literal_199 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 3)) 112)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 6)) 99)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 7)) 114)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 8)) 101)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 9)) 116)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_199 us_void_param) 12)) 32)) :pattern ((temp___String_Literal_199 us_void_param)))))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t31b__ref (mk_t31b__ref (t31b__content integer)))))
(define-fun t31b__ref___projection ((a t31b__ref)) integer (t31b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(define-fun dynamic_invariant2 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant3 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant4 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant5 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant6 ((temp___expr_1395 Int) (temp___is_init_1391 Bool) (temp___skip_constant_1392 Bool) (temp___do_toplevel_1393 Bool) (temp___do_typ_inv_1394 Bool)) Bool (=> (or (= temp___is_init_1391 true) (<= 1 12)) (in_range6 temp___expr_1395)))
(declare-const rliteral classtexti)
(assert (= (classtextiqtint rliteral) 8))
(declare-const rliteral1 classtexti)
(assert (= (classtextiqtint rliteral1) 12))
(declare-const rliteral2 classtexti)
(assert (= (classtextiqtint rliteral2) 10))
(declare-const rliteral3 classtexti)
(assert (= (classtextiqtint rliteral3) 6))
(declare-const rliteral4 classtexti)
(assert (= (classtextiqtint rliteral4) 9))
(assert (= classstringlookup (configdata__classstringlookup__aggregate_def (mk___rep (mk___split_fields (temp___String_Literal_194 Tuple0) rliteral)) (mk___rep (mk___split_fields (temp___String_Literal_195 Tuple0) rliteral1)) (mk___rep (mk___split_fields (temp___String_Literal_196 Tuple0) rliteral2)) (mk___rep (mk___split_fields (temp___String_Literal_197 Tuple0) rliteral1)) (mk___rep (mk___split_fields (temp___String_Literal_198 Tuple0) rliteral3)) (mk___rep (mk___split_fields (temp___String_Literal_199 Tuple0) rliteral4)))))
(assert (forall ((temp___187 us_rep1) (temp___188 us_rep1) (temp___189 us_rep1) (temp___190 us_rep1) (temp___191 us_rep1) (temp___192 us_rep1)) (let ((temp___186 (configdata__classstringlookup__aggregate_def temp___187 temp___188 temp___189 temp___190 temp___191 temp___192))) (and (and (and (and (and (= (select temp___186 0) temp___187) (= (select temp___186 1) temp___188)) (= (select temp___186 2) temp___189)) (= (select temp___186 3) temp___190)) (= (select temp___186 4) temp___191)) (= (select temp___186 5) temp___192)))))
(declare-const value Int)
(declare-const rawclass (Array Int character))
(declare-const stop Int)
(declare-const matched Bool)
(declare-const c Int)
(declare-const r30b Int)
(declare-const i Int)
(declare-const o integer)
(declare-const o1 integer)
(declare-const o2 Int)
(declare-const o3 character)
(declare-const o4 Int)
(declare-const o5 character)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Bool)
(declare-const result Bool)
(declare-const matched1 Bool)
(declare-const result1 Int)
(declare-const value1 Int)
(declare-const stop1 Int)
(declare-const file__getline__item (Array Int character))
(declare-const result2 (Array Int character))
(declare-const rawclass1 (Array Int character))
(declare-const result3 Int)
(declare-const c1 Int)
(declare-const result4 Bool)
(declare-const matched2 Bool)
(declare-const result5 Int)
(declare-const r30b1 Int)
(declare-const result6 Int)
(declare-const i1 Int)
(declare-const matched3 Bool)
(declare-const i2 Int)
(declare-const result7 Bool)
(declare-const matched4 Bool)
(declare-const result8 Int)
(declare-const i3 Int)
(assert (= (configdata__classstringlookup__aggregate_def (mk___rep (mk___split_fields (temp___String_Literal_194 Tuple0) rliteral)) (mk___rep (mk___split_fields (temp___String_Literal_195 Tuple0) rliteral1)) (mk___rep (mk___split_fields (temp___String_Literal_196 Tuple0) rliteral2)) (mk___rep (mk___split_fields (temp___String_Literal_197 Tuple0) rliteral1)) (mk___rep (mk___split_fields (temp___String_Literal_198 Tuple0) rliteral3)) (mk___rep (mk___split_fields (temp___String_Literal_199 Tuple0) rliteral4))) classstringlookup))
(assert (=> (<= 0 5) (in_range5 value)))
(assert (=> (<= 0 2147483647) (in_range4 stop)))
(assert (= result matched))
(assert (= matched1 (distinct 0 0)))
(assert (= result1 value))
(assert (= value1 0))
(assert (= (to_rep1 o1) 12))
(assert (= (to_rep1 o) 1))
(assert (in_range4 stop1))
(assert (= result2 rawclass))
(assert (= rawclass1 (slide file__getline__item (to_rep1 (first (mk 1 12))) 1)))
(assert (= result3 c))
(assert (= c1 0))
(assert (= stop1 (to_rep2 (rec__configdata__classstringt__length (us_split_fields1 (select classstringlookup c1))))))
(assert (= matched1 result4))
(assert (= matched2 (distinct 1 0)))
(assert (= (mk_int__ref result5) (mk_int__ref r30b)))
(assert (= r30b1 stop1))
(assert (in_range4 r30b1))
(assert (= (mk_int__ref result6) (mk_int__ref i)))
(assert (= i1 1))
(assert (<= 1 i1))
(assert (<= i1 r30b1))
(assert (<= i2 stop1))
(assert (and (=> (<= 1 r30b1) (dynamic_property1 1 r30b1 i2)) (and (<= 1 i2) (<= i2 r30b1))))
(assert (and (<= 1 i2) (<= i2 12)))
(assert (= o4 i2))
(assert (= o5 (select rawclass1 o4)))
(assert (= o6 (to_rep o5)))
(assert (and (<= 1 i2) (<= i2 12)))
(assert (= o2 i2))
(assert (= o3 (select (rec__configdata__classstringt__text (us_split_fields1 (select classstringlookup c1))) o2)))
(assert (= o7 (to_rep o3)))
(assert (= o8 (ite (= o7 o6) true false)))
(assert (= result7 (ite (not (= o8 true)) true false)))
(assert (not (= result7 true)))
(assert (= matched4 matched3))
(assert (not (= i2 r30b1)))
(assert (= result8 i2))
(assert (= i3 (+ i2 1)))
(assert (not (<= i3 stop1)))
(check-sat)
(exit)
