(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((-2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq5 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def4 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_78:int. ((((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) and
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))) or
  (not ((a__first <= temp___idx_78) and (temp___idx_78 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))))))))

logic compare : (int,character) farray, int, int, (int,character) farray,
  int, int -> int

axiom compare_def_eq :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq5(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq5(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq5(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,character) farray -> int

logic value__component__size : int

logic object__component__size : (int,character) farray -> int

logic value__alignment : int

logic object__alignment : (int,character) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,character) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,character) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,character) farray. (0 <= object__alignment(a)))

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : (int,character) farray

logic dummy4 : t

logic to_string : us_image -> us_t

logic from_string : us_t -> us_image

type string__ref = { string__content : us_t
}

function string__ref___projection(a: string__ref) : us_t =
  (a).string__content

type statust

predicate in_range4(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : statust, statust -> bool

logic dummy5 : statust

type statust__ref = { statust__content : statust
}

function statust__ref___projection(a: statust__ref) : statust =
  (a).statust__content

logic nouser : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS : int

logic temp___String_Literal_135 : unit -> (int,character) farray

axiom temp___String_Literal_135__def_axiom :
  ((((((((((((((((((((((((((((((((((((((((((((((((((to_rep((temp___String_Literal_135(void)[1])) = 78) and
  (to_rep((temp___String_Literal_135(void)[2])) = 111)) and
  (to_rep((temp___String_Literal_135(void)[3])) = 85)) and
  (to_rep((temp___String_Literal_135(void)[4])) = 115)) and
  (to_rep((temp___String_Literal_135(void)[5])) = 101)) and
  (to_rep((temp___String_Literal_135(void)[6])) = 114)) and
  (to_rep((temp___String_Literal_135(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[8])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[9])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[10])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[11])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[12])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[13])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[19])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[20])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[23])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[24])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[25])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[26])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[27])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[28])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[29])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[30])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[31])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[32])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[33])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[34])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[35])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[36])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[37])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[38])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[39])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[40])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[41])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[42])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[43])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[44])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[45])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[46])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[47])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[48])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[49])) = 32)) and
  (to_rep((temp___String_Literal_135(void)[50])) = 32))

logic valid_numberlogentries : us_private -> bool

logic valid_numberlogentries__function_guard : bool, us_private -> prop

logic theauditalarm : us_private -> int

logic theauditalarm__function_guard : int, us_private -> prop

axiom theauditalarm__post_axiom :
  (forall auditlog__state:us_private [theauditalarm(auditlog__state)].
  in_range4(theauditalarm(auditlog__state)))

logic thedooralarm : us_private -> int

logic thedooralarm__function_guard : int, us_private -> prop

axiom thedooralarm__post_axiom :
  (forall door__state:us_private [thedooralarm(door__state)].
  in_range4(thedooralarm(door__state)))

type statscount

predicate in_range5(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : statscount, statscount -> bool

logic dummy6 : statscount

type statscount__ref = { statscount__content : statscount
}

function statscount__ref___projection(a: statscount__ref) : statscount =
  (a).statscount__content

logic to_rep2 : statscount -> int

logic of_rep2 : int -> statscount

axiom inversion_axiom2 :
  (forall x:statscount [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:statscount [to_rep2(x)]. in_range5(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range5(x) ->
  (to_rep2(of_rep2(x)) = x)))

type us_split_fields = { rec__stats__t__successentry : statscount;
rec__stats__t__failentry : statscount; rec__stats__t__successbio :
statscount; rec__stats__t__failbio : statscount
}

function us_split_fields_SuccessEntry__projection(a: us_split_fields) : statscount =
  (a).rec__stats__t__successentry

function us_split_fields_FailEntry__projection(a: us_split_fields) : statscount =
  (a).rec__stats__t__failentry

function us_split_fields_SuccessBio__projection(a: us_split_fields) : statscount =
  (a).rec__stats__t__successbio

function us_split_fields_FailBio__projection(a: us_split_fields) : statscount =
  (a).rec__stats__t__failbio

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___7__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___8__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq9 : us_rep, us_rep -> bool

axiom bool_eq_def7 :
  (forall a:us_rep. forall b:us_rep [bool_eq9(a, b)].
  ((((((to_rep2(((a).us_split_fields1).rec__stats__t__successentry) = to_rep2(((b).us_split_fields1).rec__stats__t__successentry)) and
  (to_rep2(((a).us_split_fields1).rec__stats__t__failentry) = to_rep2(((b).us_split_fields1).rec__stats__t__failentry))) and
  (to_rep2(((a).us_split_fields1).rec__stats__t__successbio) = to_rep2(((b).us_split_fields1).rec__stats__t__successbio))) and
  (to_rep2(((a).us_split_fields1).rec__stats__t__failbio) = to_rep2(((b).us_split_fields1).rec__stats__t__failbio))) ->
  (bool_eq9(a, b) = true)) and
  ((not ((((to_rep2(((a).us_split_fields1).rec__stats__t__successentry) = to_rep2(((b).us_split_fields1).rec__stats__t__successentry)) and
  (to_rep2(((a).us_split_fields1).rec__stats__t__failentry) = to_rep2(((b).us_split_fields1).rec__stats__t__failentry))) and
  (to_rep2(((a).us_split_fields1).rec__stats__t__successbio) = to_rep2(((b).us_split_fields1).rec__stats__t__successbio))) and
  (to_rep2(((a).us_split_fields1).rec__stats__t__failbio) = to_rep2(((b).us_split_fields1).rec__stats__t__failbio)))) ->
  (bool_eq9(a, b) = false))))

logic value__size1 : int

logic object__size1 : us_rep -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:statscount. forall a1:statscount. forall a2:statscount.
  forall a3:statscount. (0 <= object__size1({ us_split_fields1 = {
  rec__stats__t__successentry = a; rec__stats__t__failentry = a1;
  rec__stats__t__successbio = a2; rec__stats__t__failbio = a3 } })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:statscount. forall a1:statscount. forall a2:statscount.
  forall a3:statscount. (0 <= object__alignment1({ us_split_fields1 = {
  rec__stats__t__successentry = a; rec__stats__t__failentry = a1;
  rec__stats__t__successbio = a2; rec__stats__t__failbio = a3 } })))

logic stats__t__successentry__first__bit : int

logic stats__t__successentry__last__bit : int

logic stats__t__successentry__position : int

axiom stats__t__successentry__first__bit_axiom :
  (0 <= stats__t__successentry__first__bit)

axiom stats__t__successentry__last__bit_axiom :
  (stats__t__successentry__first__bit <  stats__t__successentry__last__bit)

axiom stats__t__successentry__position_axiom :
  (0 <= stats__t__successentry__position)

logic stats__t__failentry__first__bit : int

logic stats__t__failentry__last__bit : int

logic stats__t__failentry__position : int

axiom stats__t__failentry__first__bit_axiom :
  (0 <= stats__t__failentry__first__bit)

axiom stats__t__failentry__last__bit_axiom :
  (stats__t__failentry__first__bit <  stats__t__failentry__last__bit)

axiom stats__t__failentry__position_axiom :
  (0 <= stats__t__failentry__position)

logic stats__t__successbio__first__bit : int

logic stats__t__successbio__last__bit : int

logic stats__t__successbio__position : int

axiom stats__t__successbio__first__bit_axiom :
  (0 <= stats__t__successbio__first__bit)

axiom stats__t__successbio__last__bit_axiom :
  (stats__t__successbio__first__bit <  stats__t__successbio__last__bit)

axiom stats__t__successbio__position_axiom :
  (0 <= stats__t__successbio__position)

logic stats__t__failbio__first__bit : int

logic stats__t__failbio__last__bit : int

logic stats__t__failbio__position : int

axiom stats__t__failbio__first__bit_axiom :
  (0 <= stats__t__failbio__first__bit)

axiom stats__t__failbio__last__bit_axiom :
  (stats__t__failbio__first__bit <  stats__t__failbio__last__bit)

axiom stats__t__failbio__position_axiom : (0 <= stats__t__failbio__position)

logic user_eq6 : us_rep, us_rep -> bool

logic dummy7 : statscount

logic dummy8 : statscount

logic dummy9 : statscount

logic dummy10 : statscount

type t__ref = { t__content : us_rep
}

function t__ref___4__projection(a: t__ref) : us_rep = (a).t__content

type privileget

predicate in_range6(x: int) = ((0 <= x) and (x <= 3))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq7 : privileget, privileget -> bool

logic dummy11 : privileget

type privileget__ref = { privileget__content : privileget
}

function privileget__ref___projection(a: privileget__ref) : privileget =
  (a).privileget__content

logic to_rep3 : privileget -> int

logic of_rep3 : int -> privileget

axiom inversion_axiom3 :
  (forall x:privileget [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:privileget [to_rep3(x)]. in_range6(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range6(x) ->
  (to_rep3(of_rep3(x)) = x)))

type opandnullt

predicate in_range7(x: int) = ((0 <= x) and (x <= 4))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq8 : opandnullt, opandnullt -> bool

logic dummy12 : opandnullt

type opandnullt__ref = { opandnullt__content : opandnullt
}

function opandnullt__ref___projection(a: opandnullt__ref) : opandnullt =
  (a).opandnullt__content

logic to_rep4 : opandnullt -> int

logic of_rep4 : int -> opandnullt

axiom inversion_axiom4 :
  (forall x:opandnullt [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 :
  (forall x:opandnullt [to_rep4(x)]. in_range7(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range7(x) ->
  (to_rep4(of_rep4(x)) = x)))

type us_split_fields2 = { rec__admin__t__rolepresent : privileget;
rec__admin__t__currentop : opandnullt
}

function us_split_fields_RolePresent__projection(a: us_split_fields2) : privileget =
  (a).rec__admin__t__rolepresent

function us_split_fields_CurrentOp__projection(a: us_split_fields2) : opandnullt =
  (a).rec__admin__t__currentop

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___9__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2
}

function us_rep___10__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

logic bool_eq12 : us_rep1, us_rep1 -> bool

axiom bool_eq_def10 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq12(a, b)].
  ((((to_rep3(((a).us_split_fields3).rec__admin__t__rolepresent) = to_rep3(((b).us_split_fields3).rec__admin__t__rolepresent)) and
  (to_rep4(((a).us_split_fields3).rec__admin__t__currentop) = to_rep4(((b).us_split_fields3).rec__admin__t__currentop))) ->
  (bool_eq12(a, b) = true)) and
  ((not ((to_rep3(((a).us_split_fields3).rec__admin__t__rolepresent) = to_rep3(((b).us_split_fields3).rec__admin__t__rolepresent)) and
  (to_rep4(((a).us_split_fields3).rec__admin__t__currentop) = to_rep4(((b).us_split_fields3).rec__admin__t__currentop)))) ->
  (bool_eq12(a, b) = false))))

logic value__size2 : int

logic object__size2 : us_rep1 -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep1 -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:privileget. forall a1:opandnullt. (0 <= object__size2({
  us_split_fields3 = { rec__admin__t__rolepresent = a;
  rec__admin__t__currentop = a1 } })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:privileget. forall a1:opandnullt. (0 <= object__alignment2({
  us_split_fields3 = { rec__admin__t__rolepresent = a;
  rec__admin__t__currentop = a1 } })))

logic admin__t__rolepresent__first__bit : int

logic admin__t__rolepresent__last__bit : int

logic admin__t__rolepresent__position : int

axiom admin__t__rolepresent__first__bit_axiom :
  (0 <= admin__t__rolepresent__first__bit)

axiom admin__t__rolepresent__last__bit_axiom :
  (admin__t__rolepresent__first__bit <  admin__t__rolepresent__last__bit)

axiom admin__t__rolepresent__position_axiom :
  (0 <= admin__t__rolepresent__position)

logic admin__t__currentop__first__bit : int

logic admin__t__currentop__last__bit : int

logic admin__t__currentop__position : int

axiom admin__t__currentop__first__bit_axiom :
  (0 <= admin__t__currentop__first__bit)

axiom admin__t__currentop__last__bit_axiom :
  (admin__t__currentop__first__bit <  admin__t__currentop__last__bit)

axiom admin__t__currentop__position_axiom :
  (0 <= admin__t__currentop__position)

logic user_eq9 : us_rep1, us_rep1 -> bool

logic dummy13 : privileget

logic dummy14 : opandnullt

type t__ref1 = { t__content1 : us_rep1
}

function t__ref___5__projection(a: t__ref1) : us_rep1 = (a).t__content1

logic ispresent : us_rep1 -> bool

logic ispresent__function_guard : bool, us_rep1 -> prop

axiom ispresent__post_axiom : true

logic securityofficerispresent : us_rep1 -> bool

logic securityofficerispresent__function_guard : bool, us_rep1 -> prop

axiom securityofficerispresent__post_axiom : true

type msgtextt

predicate in_range8(x: int) = ((0 <= x) and (x <= 14))

logic bool_eq13 : int, int -> bool

axiom bool_eq_def11 :
  (forall x:int. forall y:int [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq10 : msgtextt, msgtextt -> bool

logic dummy15 : msgtextt

type msgtextt__ref = { msgtextt__content : msgtextt
}

function msgtextt__ref___projection(a: msgtextt__ref) : msgtextt =
  (a).msgtextt__content

logic attr__ATTRIBUTE_ADDRESS1 : int

logic thestats : statscount

logic thestats1 : statscount

logic thestats2 : statscount

logic thestats3 : statscount

logic attr__ATTRIBUTE_ADDRESS2 : int

logic theadmin : privileget

logic theadmin1 : opandnullt

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

type us_split_fields4 = { rec__screen__screenstatst__isdisplayed : bool;
rec__screen__screenstatst__data : us_rep
}

function us_split_fields_IsDisplayed__projection(a: us_split_fields4) : bool =
  (a).rec__screen__screenstatst__isdisplayed

function us_split_fields_Data__projection(a: us_split_fields4) : us_rep =
  (a).rec__screen__screenstatst__data

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___11__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_fields5 : us_split_fields4
}

function us_rep___12__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

logic bool_eq14 : us_rep2, us_rep2 -> bool

axiom bool_eq_def12 :
  (forall a:us_rep2. forall b:us_rep2 [bool_eq14(a, b)].
  ((((((a).us_split_fields5).rec__screen__screenstatst__isdisplayed = ((b).us_split_fields5).rec__screen__screenstatst__isdisplayed) and
  (bool_eq9(((a).us_split_fields5).rec__screen__screenstatst__data,
  ((b).us_split_fields5).rec__screen__screenstatst__data) = true)) ->
  (bool_eq14(a, b) = true)) and
  ((not ((((a).us_split_fields5).rec__screen__screenstatst__isdisplayed = ((b).us_split_fields5).rec__screen__screenstatst__isdisplayed) and
  (bool_eq9(((a).us_split_fields5).rec__screen__screenstatst__data,
  ((b).us_split_fields5).rec__screen__screenstatst__data) = true))) ->
  (bool_eq14(a, b) = false))))

logic value__size3 : int

logic object__size3 : us_rep2 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep2 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:bool. forall a1:statscount. forall a2:statscount.
  forall a3:statscount. forall a4:statscount. (0 <= object__size3({
  us_split_fields5 = { rec__screen__screenstatst__isdisplayed = a;
  rec__screen__screenstatst__data = { us_split_fields1 = {
  rec__stats__t__successentry = a1; rec__stats__t__failentry = a2;
  rec__stats__t__successbio = a3; rec__stats__t__failbio = a4 } } } })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:bool. forall a1:statscount. forall a2:statscount.
  forall a3:statscount. forall a4:statscount. (0 <= object__alignment3({
  us_split_fields5 = { rec__screen__screenstatst__isdisplayed = a;
  rec__screen__screenstatst__data = { us_split_fields1 = {
  rec__stats__t__successentry = a1; rec__stats__t__failentry = a2;
  rec__stats__t__successbio = a3; rec__stats__t__failbio = a4 } } } })))

logic screen__screenstatst__isdisplayed__first__bit : int

logic screen__screenstatst__isdisplayed__last__bit : int

logic screen__screenstatst__isdisplayed__position : int

axiom screen__screenstatst__isdisplayed__first__bit_axiom :
  (0 <= screen__screenstatst__isdisplayed__first__bit)

axiom screen__screenstatst__isdisplayed__last__bit_axiom :
  (screen__screenstatst__isdisplayed__first__bit <  screen__screenstatst__isdisplayed__last__bit)

axiom screen__screenstatst__isdisplayed__position_axiom :
  (0 <= screen__screenstatst__isdisplayed__position)

logic screen__screenstatst__data__first__bit : int

logic screen__screenstatst__data__last__bit : int

logic screen__screenstatst__data__position : int

axiom screen__screenstatst__data__first__bit_axiom :
  (0 <= screen__screenstatst__data__first__bit)

axiom screen__screenstatst__data__last__bit_axiom :
  (screen__screenstatst__data__first__bit <  screen__screenstatst__data__last__bit)

axiom screen__screenstatst__data__position_axiom :
  (0 <= screen__screenstatst__data__position)

logic user_eq11 : us_rep2, us_rep2 -> bool

logic dummy16 : bool

logic dummy17 : statscount

logic dummy18 : statscount

logic dummy19 : statscount

logic dummy20 : statscount

type screenstatst__ref = { screenstatst__content : us_rep2
}

function screenstatst__ref___projection(a: screenstatst__ref) : us_rep2 =
  (a).screenstatst__content

logic attr__ATTRIBUTE_ADDRESS5 : int

type filesizet

predicate in_range9(x: int) = ((0 <= x) and (x <= 4194304))

logic bool_eq15 : int, int -> bool

axiom bool_eq_def13 :
  (forall x:int. forall y:int [bool_eq15(x, y)]. (((x = y) -> (bool_eq15(x,
  y) = true)) and ((not (x = y)) -> (bool_eq15(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq12 : filesizet, filesizet -> bool

logic dummy21 : filesizet

type filesizet__ref = { filesizet__content : filesizet
}

function filesizet__ref___projection(a: filesizet__ref) : filesizet =
  (a).filesizet__content

logic to_rep5 : filesizet -> int

logic of_rep5 : int -> filesizet

axiom inversion_axiom5 :
  (forall x:filesizet [to_rep5(x)]. (of_rep5(to_rep5(x)) = x))

axiom range_axiom5 : (forall x:filesizet [to_rep5(x)]. in_range9(to_rep5(x)))

axiom coerce_axiom5 :
  (forall x:int [to_rep5(of_rep5(x))]. (in_range9(x) ->
  (to_rep5(of_rep5(x)) = x)))

type durationt

predicate in_range10(x: int) = ((0 <= x) and (x <= 864000))

logic bool_eq16 : int, int -> bool

axiom bool_eq_def14 :
  (forall x:int. forall y:int [bool_eq16(x, y)]. (((x = y) -> (bool_eq16(x,
  y) = true)) and ((not (x = y)) -> (bool_eq16(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq13 : durationt, durationt -> bool

logic dummy22 : durationt

type durationt__ref = { durationt__content : durationt
}

function durationt__ref___projection(a: durationt__ref) : durationt =
  (a).durationt__content

logic to_rep6 : durationt -> int

logic of_rep6 : int -> durationt

axiom inversion_axiom6 :
  (forall x:durationt [to_rep6(x)]. (of_rep6(to_rep6(x)) = x))

axiom range_axiom6 :
  (forall x:durationt [to_rep6(x)]. in_range10(to_rep6(x)))

axiom coerce_axiom6 :
  (forall x:int [to_rep6(of_rep6(x))]. (in_range10(x) ->
  (to_rep6(of_rep6(x)) = x)))

type fart

predicate in_range11(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq17 : int, int -> bool

axiom bool_eq_def15 :
  (forall x:int. forall y:int [bool_eq17(x, y)]. (((x = y) -> (bool_eq17(x,
  y) = true)) and ((not (x = y)) -> (bool_eq17(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq14 : fart, fart -> bool

logic dummy23 : fart

type fart__ref = { fart__content : fart
}

function fart__ref___projection(a: fart__ref) : fart = (a).fart__content

logic to_rep7 : fart -> int

logic of_rep7 : int -> fart

axiom inversion_axiom7 :
  (forall x:fart [to_rep7(x)]. (of_rep7(to_rep7(x)) = x))

axiom range_axiom7 : (forall x:fart [to_rep7(x)]. in_range11(to_rep7(x)))

axiom coerce_axiom7 :
  (forall x:int [to_rep7(of_rep7(x))]. (in_range11(x) ->
  (to_rep7(of_rep7(x)) = x)))

type classt

predicate in_range12(x: int) = ((0 <= x) and (x <= 5))

logic bool_eq18 : int, int -> bool

axiom bool_eq_def16 :
  (forall x:int. forall y:int [bool_eq18(x, y)]. (((x = y) -> (bool_eq18(x,
  y) = true)) and ((not (x = y)) -> (bool_eq18(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq15 : classt, classt -> bool

logic dummy24 : classt

type classt__ref = { classt__content : classt
}

function classt__ref___projection(a: classt__ref) : classt =
  (a).classt__content

logic to_rep8 : classt -> int

logic of_rep8 : int -> classt

axiom inversion_axiom8 :
  (forall x:classt [to_rep8(x)]. (of_rep8(to_rep8(x)) = x))

axiom range_axiom8 : (forall x:classt [to_rep8(x)]. in_range12(to_rep8(x)))

axiom coerce_axiom8 :
  (forall x:int [to_rep8(of_rep8(x))]. (in_range12(x) ->
  (to_rep8(of_rep8(x)) = x)))

type accesspolicyt

predicate in_range13(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq19 : int, int -> bool

axiom bool_eq_def17 :
  (forall x:int. forall y:int [bool_eq19(x, y)]. (((x = y) -> (bool_eq19(x,
  y) = true)) and ((not (x = y)) -> (bool_eq19(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE13 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check13 : us_image -> prop

logic attr__ATTRIBUTE_VALUE13 : us_image -> int

logic user_eq16 : accesspolicyt, accesspolicyt -> bool

logic dummy25 : accesspolicyt

type accesspolicyt__ref = { accesspolicyt__content : accesspolicyt
}

function accesspolicyt__ref___projection(a: accesspolicyt__ref) : accesspolicyt =
  (a).accesspolicyt__content

logic to_rep9 : accesspolicyt -> int

logic of_rep9 : int -> accesspolicyt

axiom inversion_axiom9 :
  (forall x:accesspolicyt [to_rep9(x)]. (of_rep9(to_rep9(x)) = x))

axiom range_axiom9 :
  (forall x:accesspolicyt [to_rep9(x)]. in_range13(to_rep9(x)))

axiom coerce_axiom9 :
  (forall x:int [to_rep9(of_rep9(x))]. (in_range13(x) ->
  (to_rep9(of_rep9(x)) = x)))

type us_split_fields6 = { rec__screen__displayedconfigt__latchunlock :
durationt; rec__screen__displayedconfigt__alarmsilent : durationt;
rec__screen__displayedconfigt__fingerwait : durationt;
rec__screen__displayedconfigt__tokenremove : durationt;
rec__screen__displayedconfigt__workstart : durationt;
rec__screen__displayedconfigt__workend : durationt;
rec__screen__displayedconfigt__authduration : durationt;
rec__screen__displayedconfigt__policy : accesspolicyt;
rec__screen__displayedconfigt__minpreservedlog : filesizet;
rec__screen__displayedconfigt__alarmthreshold : filesizet;
rec__screen__displayedconfigt__minentry : classt;
rec__screen__displayedconfigt__clearance : classt;
rec__screen__displayedconfigt__maxfar : fart
}

function us_split_fields_LatchUnlock__projection(a: us_split_fields6) : durationt =
  (a).rec__screen__displayedconfigt__latchunlock

function us_split_fields_AlarmSilent__projection(a: us_split_fields6) : durationt =
  (a).rec__screen__displayedconfigt__alarmsilent

function us_split_fields_FingerWait__projection(a: us_split_fields6) : durationt =
  (a).rec__screen__displayedconfigt__fingerwait

function us_split_fields_TokenRemove__projection(a: us_split_fields6) : durationt =
  (a).rec__screen__displayedconfigt__tokenremove

function us_split_fields_WorkStart__projection(a: us_split_fields6) : durationt =
  (a).rec__screen__displayedconfigt__workstart

function us_split_fields_WorkEnd__projection(a: us_split_fields6) : durationt =
  (a).rec__screen__displayedconfigt__workend

function us_split_fields_AuthDuration__projection(a: us_split_fields6) : durationt =
  (a).rec__screen__displayedconfigt__authduration

function us_split_fields_Policy__projection(a: us_split_fields6) : accesspolicyt =
  (a).rec__screen__displayedconfigt__policy

function us_split_fields_MinPreservedLog__projection(a: us_split_fields6) : filesizet =
  (a).rec__screen__displayedconfigt__minpreservedlog

function us_split_fields_AlarmThreshold__projection(a: us_split_fields6) : filesizet =
  (a).rec__screen__displayedconfigt__alarmthreshold

function us_split_fields_MinEntry__projection(a: us_split_fields6) : classt =
  (a).rec__screen__displayedconfigt__minentry

function us_split_fields_Clearance__projection(a: us_split_fields6) : classt =
  (a).rec__screen__displayedconfigt__clearance

function us_split_fields_MaxFAR__projection(a: us_split_fields6) : fart =
  (a).rec__screen__displayedconfigt__maxfar

type us_split_fields__ref3 = { us_split_fields__content3 : us_split_fields6
}

function us_split_fields__ref___12__projection(a: us_split_fields__ref3) : us_split_fields6 =
  (a).us_split_fields__content3

type us_rep3 = { us_split_fields7 : us_split_fields6
}

function us_rep___13__projection(a: us_rep3) : us_split_fields6 =
  (a).us_split_fields7

logic bool_eq20 : us_rep3, us_rep3 -> bool

axiom bool_eq_def18 :
  (forall a:us_rep3. forall b:us_rep3 [bool_eq20(a, b)].
  (((((((((((((((to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__latchunlock) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__latchunlock)) and
  (to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__alarmsilent) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__alarmsilent))) and
  (to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__fingerwait) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__fingerwait))) and
  (to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__tokenremove) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__tokenremove))) and
  (to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__workstart) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__workstart))) and
  (to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__workend) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__workend))) and
  (to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__authduration) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__authduration))) and
  (to_rep9(((a).us_split_fields7).rec__screen__displayedconfigt__policy) = to_rep9(((b).us_split_fields7).rec__screen__displayedconfigt__policy))) and
  (to_rep5(((a).us_split_fields7).rec__screen__displayedconfigt__minpreservedlog) = to_rep5(((b).us_split_fields7).rec__screen__displayedconfigt__minpreservedlog))) and
  (to_rep5(((a).us_split_fields7).rec__screen__displayedconfigt__alarmthreshold) = to_rep5(((b).us_split_fields7).rec__screen__displayedconfigt__alarmthreshold))) and
  (to_rep8(((a).us_split_fields7).rec__screen__displayedconfigt__minentry) = to_rep8(((b).us_split_fields7).rec__screen__displayedconfigt__minentry))) and
  (to_rep8(((a).us_split_fields7).rec__screen__displayedconfigt__clearance) = to_rep8(((b).us_split_fields7).rec__screen__displayedconfigt__clearance))) and
  (to_rep7(((a).us_split_fields7).rec__screen__displayedconfigt__maxfar) = to_rep7(((b).us_split_fields7).rec__screen__displayedconfigt__maxfar))) ->
  (bool_eq20(a, b) = true)) and
  ((not (((((((((((((to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__latchunlock) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__latchunlock)) and
  (to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__alarmsilent) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__alarmsilent))) and
  (to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__fingerwait) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__fingerwait))) and
  (to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__tokenremove) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__tokenremove))) and
  (to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__workstart) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__workstart))) and
  (to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__workend) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__workend))) and
  (to_rep6(((a).us_split_fields7).rec__screen__displayedconfigt__authduration) = to_rep6(((b).us_split_fields7).rec__screen__displayedconfigt__authduration))) and
  (to_rep9(((a).us_split_fields7).rec__screen__displayedconfigt__policy) = to_rep9(((b).us_split_fields7).rec__screen__displayedconfigt__policy))) and
  (to_rep5(((a).us_split_fields7).rec__screen__displayedconfigt__minpreservedlog) = to_rep5(((b).us_split_fields7).rec__screen__displayedconfigt__minpreservedlog))) and
  (to_rep5(((a).us_split_fields7).rec__screen__displayedconfigt__alarmthreshold) = to_rep5(((b).us_split_fields7).rec__screen__displayedconfigt__alarmthreshold))) and
  (to_rep8(((a).us_split_fields7).rec__screen__displayedconfigt__minentry) = to_rep8(((b).us_split_fields7).rec__screen__displayedconfigt__minentry))) and
  (to_rep8(((a).us_split_fields7).rec__screen__displayedconfigt__clearance) = to_rep8(((b).us_split_fields7).rec__screen__displayedconfigt__clearance))) and
  (to_rep7(((a).us_split_fields7).rec__screen__displayedconfigt__maxfar) = to_rep7(((b).us_split_fields7).rec__screen__displayedconfigt__maxfar)))) ->
  (bool_eq20(a, b) = false))))

logic value__size4 : int

logic object__size4 : us_rep3 -> int

logic value__alignment4 : int

logic object__alignment4 : us_rep3 -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:durationt. forall a1:durationt. forall a2:durationt.
  forall a3:durationt. forall a4:durationt. forall a5:durationt.
  forall a6:durationt. forall a7:accesspolicyt. forall a8:filesizet.
  forall a9:filesizet. forall a10:classt. forall a11:classt. forall a12:fart.
  (0 <= object__size4({ us_split_fields7 = {
  rec__screen__displayedconfigt__latchunlock = a;
  rec__screen__displayedconfigt__alarmsilent = a1;
  rec__screen__displayedconfigt__fingerwait = a2;
  rec__screen__displayedconfigt__tokenremove = a3;
  rec__screen__displayedconfigt__workstart = a4;
  rec__screen__displayedconfigt__workend = a5;
  rec__screen__displayedconfigt__authduration = a6;
  rec__screen__displayedconfigt__policy = a7;
  rec__screen__displayedconfigt__minpreservedlog = a8;
  rec__screen__displayedconfigt__alarmthreshold = a9;
  rec__screen__displayedconfigt__minentry = a10;
  rec__screen__displayedconfigt__clearance = a11;
  rec__screen__displayedconfigt__maxfar = a12 } })))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:durationt. forall a1:durationt. forall a2:durationt.
  forall a3:durationt. forall a4:durationt. forall a5:durationt.
  forall a6:durationt. forall a7:accesspolicyt. forall a8:filesizet.
  forall a9:filesizet. forall a10:classt. forall a11:classt. forall a12:fart.
  (0 <= object__alignment4({ us_split_fields7 = {
  rec__screen__displayedconfigt__latchunlock = a;
  rec__screen__displayedconfigt__alarmsilent = a1;
  rec__screen__displayedconfigt__fingerwait = a2;
  rec__screen__displayedconfigt__tokenremove = a3;
  rec__screen__displayedconfigt__workstart = a4;
  rec__screen__displayedconfigt__workend = a5;
  rec__screen__displayedconfigt__authduration = a6;
  rec__screen__displayedconfigt__policy = a7;
  rec__screen__displayedconfigt__minpreservedlog = a8;
  rec__screen__displayedconfigt__alarmthreshold = a9;
  rec__screen__displayedconfigt__minentry = a10;
  rec__screen__displayedconfigt__clearance = a11;
  rec__screen__displayedconfigt__maxfar = a12 } })))

logic screen__displayedconfigt__latchunlock__first__bit : int

logic screen__displayedconfigt__latchunlock__last__bit : int

logic screen__displayedconfigt__latchunlock__position : int

axiom screen__displayedconfigt__latchunlock__first__bit_axiom :
  (0 <= screen__displayedconfigt__latchunlock__first__bit)

axiom screen__displayedconfigt__latchunlock__last__bit_axiom :
  (screen__displayedconfigt__latchunlock__first__bit <  screen__displayedconfigt__latchunlock__last__bit)

axiom screen__displayedconfigt__latchunlock__position_axiom :
  (0 <= screen__displayedconfigt__latchunlock__position)

logic screen__displayedconfigt__alarmsilent__first__bit : int

logic screen__displayedconfigt__alarmsilent__last__bit : int

logic screen__displayedconfigt__alarmsilent__position : int

axiom screen__displayedconfigt__alarmsilent__first__bit_axiom :
  (0 <= screen__displayedconfigt__alarmsilent__first__bit)

axiom screen__displayedconfigt__alarmsilent__last__bit_axiom :
  (screen__displayedconfigt__alarmsilent__first__bit <  screen__displayedconfigt__alarmsilent__last__bit)

axiom screen__displayedconfigt__alarmsilent__position_axiom :
  (0 <= screen__displayedconfigt__alarmsilent__position)

logic screen__displayedconfigt__fingerwait__first__bit : int

logic screen__displayedconfigt__fingerwait__last__bit : int

logic screen__displayedconfigt__fingerwait__position : int

axiom screen__displayedconfigt__fingerwait__first__bit_axiom :
  (0 <= screen__displayedconfigt__fingerwait__first__bit)

axiom screen__displayedconfigt__fingerwait__last__bit_axiom :
  (screen__displayedconfigt__fingerwait__first__bit <  screen__displayedconfigt__fingerwait__last__bit)

axiom screen__displayedconfigt__fingerwait__position_axiom :
  (0 <= screen__displayedconfigt__fingerwait__position)

logic screen__displayedconfigt__tokenremove__first__bit : int

logic screen__displayedconfigt__tokenremove__last__bit : int

logic screen__displayedconfigt__tokenremove__position : int

axiom screen__displayedconfigt__tokenremove__first__bit_axiom :
  (0 <= screen__displayedconfigt__tokenremove__first__bit)

axiom screen__displayedconfigt__tokenremove__last__bit_axiom :
  (screen__displayedconfigt__tokenremove__first__bit <  screen__displayedconfigt__tokenremove__last__bit)

axiom screen__displayedconfigt__tokenremove__position_axiom :
  (0 <= screen__displayedconfigt__tokenremove__position)

logic screen__displayedconfigt__workstart__first__bit : int

logic screen__displayedconfigt__workstart__last__bit : int

logic screen__displayedconfigt__workstart__position : int

axiom screen__displayedconfigt__workstart__first__bit_axiom :
  (0 <= screen__displayedconfigt__workstart__first__bit)

axiom screen__displayedconfigt__workstart__last__bit_axiom :
  (screen__displayedconfigt__workstart__first__bit <  screen__displayedconfigt__workstart__last__bit)

axiom screen__displayedconfigt__workstart__position_axiom :
  (0 <= screen__displayedconfigt__workstart__position)

logic screen__displayedconfigt__workend__first__bit : int

logic screen__displayedconfigt__workend__last__bit : int

logic screen__displayedconfigt__workend__position : int

axiom screen__displayedconfigt__workend__first__bit_axiom :
  (0 <= screen__displayedconfigt__workend__first__bit)

axiom screen__displayedconfigt__workend__last__bit_axiom :
  (screen__displayedconfigt__workend__first__bit <  screen__displayedconfigt__workend__last__bit)

axiom screen__displayedconfigt__workend__position_axiom :
  (0 <= screen__displayedconfigt__workend__position)

logic screen__displayedconfigt__authduration__first__bit : int

logic screen__displayedconfigt__authduration__last__bit : int

logic screen__displayedconfigt__authduration__position : int

axiom screen__displayedconfigt__authduration__first__bit_axiom :
  (0 <= screen__displayedconfigt__authduration__first__bit)

axiom screen__displayedconfigt__authduration__last__bit_axiom :
  (screen__displayedconfigt__authduration__first__bit <  screen__displayedconfigt__authduration__last__bit)

axiom screen__displayedconfigt__authduration__position_axiom :
  (0 <= screen__displayedconfigt__authduration__position)

logic screen__displayedconfigt__policy__first__bit : int

logic screen__displayedconfigt__policy__last__bit : int

logic screen__displayedconfigt__policy__position : int

axiom screen__displayedconfigt__policy__first__bit_axiom :
  (0 <= screen__displayedconfigt__policy__first__bit)

axiom screen__displayedconfigt__policy__last__bit_axiom :
  (screen__displayedconfigt__policy__first__bit <  screen__displayedconfigt__policy__last__bit)

axiom screen__displayedconfigt__policy__position_axiom :
  (0 <= screen__displayedconfigt__policy__position)

logic screen__displayedconfigt__minpreservedlog__first__bit : int

logic screen__displayedconfigt__minpreservedlog__last__bit : int

logic screen__displayedconfigt__minpreservedlog__position : int

axiom screen__displayedconfigt__minpreservedlog__first__bit_axiom :
  (0 <= screen__displayedconfigt__minpreservedlog__first__bit)

axiom screen__displayedconfigt__minpreservedlog__last__bit_axiom :
  (screen__displayedconfigt__minpreservedlog__first__bit <  screen__displayedconfigt__minpreservedlog__last__bit)

axiom screen__displayedconfigt__minpreservedlog__position_axiom :
  (0 <= screen__displayedconfigt__minpreservedlog__position)

logic screen__displayedconfigt__alarmthreshold__first__bit : int

logic screen__displayedconfigt__alarmthreshold__last__bit : int

logic screen__displayedconfigt__alarmthreshold__position : int

axiom screen__displayedconfigt__alarmthreshold__first__bit_axiom :
  (0 <= screen__displayedconfigt__alarmthreshold__first__bit)

axiom screen__displayedconfigt__alarmthreshold__last__bit_axiom :
  (screen__displayedconfigt__alarmthreshold__first__bit <  screen__displayedconfigt__alarmthreshold__last__bit)

axiom screen__displayedconfigt__alarmthreshold__position_axiom :
  (0 <= screen__displayedconfigt__alarmthreshold__position)

logic screen__displayedconfigt__minentry__first__bit : int

logic screen__displayedconfigt__minentry__last__bit : int

logic screen__displayedconfigt__minentry__position : int

axiom screen__displayedconfigt__minentry__first__bit_axiom :
  (0 <= screen__displayedconfigt__minentry__first__bit)

axiom screen__displayedconfigt__minentry__last__bit_axiom :
  (screen__displayedconfigt__minentry__first__bit <  screen__displayedconfigt__minentry__last__bit)

axiom screen__displayedconfigt__minentry__position_axiom :
  (0 <= screen__displayedconfigt__minentry__position)

logic screen__displayedconfigt__clearance__first__bit : int

logic screen__displayedconfigt__clearance__last__bit : int

logic screen__displayedconfigt__clearance__position : int

axiom screen__displayedconfigt__clearance__first__bit_axiom :
  (0 <= screen__displayedconfigt__clearance__first__bit)

axiom screen__displayedconfigt__clearance__last__bit_axiom :
  (screen__displayedconfigt__clearance__first__bit <  screen__displayedconfigt__clearance__last__bit)

axiom screen__displayedconfigt__clearance__position_axiom :
  (0 <= screen__displayedconfigt__clearance__position)

logic screen__displayedconfigt__maxfar__first__bit : int

logic screen__displayedconfigt__maxfar__last__bit : int

logic screen__displayedconfigt__maxfar__position : int

axiom screen__displayedconfigt__maxfar__first__bit_axiom :
  (0 <= screen__displayedconfigt__maxfar__first__bit)

axiom screen__displayedconfigt__maxfar__last__bit_axiom :
  (screen__displayedconfigt__maxfar__first__bit <  screen__displayedconfigt__maxfar__last__bit)

axiom screen__displayedconfigt__maxfar__position_axiom :
  (0 <= screen__displayedconfigt__maxfar__position)

logic user_eq17 : us_rep3, us_rep3 -> bool

logic dummy26 : durationt

logic dummy27 : durationt

logic dummy28 : durationt

logic dummy29 : durationt

logic dummy30 : durationt

logic dummy31 : durationt

logic dummy32 : durationt

logic dummy33 : accesspolicyt

logic dummy34 : filesizet

logic dummy35 : filesizet

logic dummy36 : classt

logic dummy37 : classt

logic dummy38 : fart

type displayedconfigt__ref = { displayedconfigt__content : us_rep3
}

function displayedconfigt__ref___projection(a: displayedconfigt__ref) : us_rep3 =
  (a).displayedconfigt__content

type us_split_fields8 = { rec__screen__screenconfigt__isdisplayed : bool;
rec__screen__screenconfigt__data : us_rep3
}

function us_split_fields_IsDisplayed__2__projection(a: us_split_fields8) : bool =
  (a).rec__screen__screenconfigt__isdisplayed

function us_split_fields_Data__2__projection(a: us_split_fields8) : us_rep3 =
  (a).rec__screen__screenconfigt__data

type us_split_fields__ref4 = { us_split_fields__content4 : us_split_fields8
}

function us_split_fields__ref___13__projection(a: us_split_fields__ref4) : us_split_fields8 =
  (a).us_split_fields__content4

type us_rep4 = { us_split_fields9 : us_split_fields8
}

function us_rep___14__projection(a: us_rep4) : us_split_fields8 =
  (a).us_split_fields9

logic bool_eq21 : us_rep4, us_rep4 -> bool

axiom bool_eq_def19 :
  (forall a:us_rep4. forall b:us_rep4 [bool_eq21(a, b)].
  ((((((a).us_split_fields9).rec__screen__screenconfigt__isdisplayed = ((b).us_split_fields9).rec__screen__screenconfigt__isdisplayed) and
  (bool_eq20(((a).us_split_fields9).rec__screen__screenconfigt__data,
  ((b).us_split_fields9).rec__screen__screenconfigt__data) = true)) ->
  (bool_eq21(a, b) = true)) and
  ((not ((((a).us_split_fields9).rec__screen__screenconfigt__isdisplayed = ((b).us_split_fields9).rec__screen__screenconfigt__isdisplayed) and
  (bool_eq20(((a).us_split_fields9).rec__screen__screenconfigt__data,
  ((b).us_split_fields9).rec__screen__screenconfigt__data) = true))) ->
  (bool_eq21(a, b) = false))))

logic value__size5 : int

logic object__size5 : us_rep4 -> int

logic value__alignment5 : int

logic object__alignment5 : us_rep4 -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 :
  (forall a:bool. forall a1:durationt. forall a2:durationt.
  forall a3:durationt. forall a4:durationt. forall a5:durationt.
  forall a6:durationt. forall a7:durationt. forall a8:accesspolicyt.
  forall a9:filesizet. forall a10:filesizet. forall a11:classt.
  forall a12:classt. forall a13:fart. (0 <= object__size5({
  us_split_fields9 = { rec__screen__screenconfigt__isdisplayed = a;
  rec__screen__screenconfigt__data = { us_split_fields7 = {
  rec__screen__displayedconfigt__latchunlock = a1;
  rec__screen__displayedconfigt__alarmsilent = a2;
  rec__screen__displayedconfigt__fingerwait = a3;
  rec__screen__displayedconfigt__tokenremove = a4;
  rec__screen__displayedconfigt__workstart = a5;
  rec__screen__displayedconfigt__workend = a6;
  rec__screen__displayedconfigt__authduration = a7;
  rec__screen__displayedconfigt__policy = a8;
  rec__screen__displayedconfigt__minpreservedlog = a9;
  rec__screen__displayedconfigt__alarmthreshold = a10;
  rec__screen__displayedconfigt__minentry = a11;
  rec__screen__displayedconfigt__clearance = a12;
  rec__screen__displayedconfigt__maxfar = a13 } } } })))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:bool. forall a1:durationt. forall a2:durationt.
  forall a3:durationt. forall a4:durationt. forall a5:durationt.
  forall a6:durationt. forall a7:durationt. forall a8:accesspolicyt.
  forall a9:filesizet. forall a10:filesizet. forall a11:classt.
  forall a12:classt. forall a13:fart. (0 <= object__alignment5({
  us_split_fields9 = { rec__screen__screenconfigt__isdisplayed = a;
  rec__screen__screenconfigt__data = { us_split_fields7 = {
  rec__screen__displayedconfigt__latchunlock = a1;
  rec__screen__displayedconfigt__alarmsilent = a2;
  rec__screen__displayedconfigt__fingerwait = a3;
  rec__screen__displayedconfigt__tokenremove = a4;
  rec__screen__displayedconfigt__workstart = a5;
  rec__screen__displayedconfigt__workend = a6;
  rec__screen__displayedconfigt__authduration = a7;
  rec__screen__displayedconfigt__policy = a8;
  rec__screen__displayedconfigt__minpreservedlog = a9;
  rec__screen__displayedconfigt__alarmthreshold = a10;
  rec__screen__displayedconfigt__minentry = a11;
  rec__screen__displayedconfigt__clearance = a12;
  rec__screen__displayedconfigt__maxfar = a13 } } } })))

logic screen__screenconfigt__isdisplayed__first__bit : int

logic screen__screenconfigt__isdisplayed__last__bit : int

logic screen__screenconfigt__isdisplayed__position : int

axiom screen__screenconfigt__isdisplayed__first__bit_axiom :
  (0 <= screen__screenconfigt__isdisplayed__first__bit)

axiom screen__screenconfigt__isdisplayed__last__bit_axiom :
  (screen__screenconfigt__isdisplayed__first__bit <  screen__screenconfigt__isdisplayed__last__bit)

axiom screen__screenconfigt__isdisplayed__position_axiom :
  (0 <= screen__screenconfigt__isdisplayed__position)

logic screen__screenconfigt__data__first__bit : int

logic screen__screenconfigt__data__last__bit : int

logic screen__screenconfigt__data__position : int

axiom screen__screenconfigt__data__first__bit_axiom :
  (0 <= screen__screenconfigt__data__first__bit)

axiom screen__screenconfigt__data__last__bit_axiom :
  (screen__screenconfigt__data__first__bit <  screen__screenconfigt__data__last__bit)

axiom screen__screenconfigt__data__position_axiom :
  (0 <= screen__screenconfigt__data__position)

logic user_eq18 : us_rep4, us_rep4 -> bool

logic dummy39 : bool

logic dummy40 : durationt

logic dummy41 : durationt

logic dummy42 : durationt

logic dummy43 : durationt

logic dummy44 : durationt

logic dummy45 : durationt

logic dummy46 : durationt

logic dummy47 : accesspolicyt

logic dummy48 : filesizet

logic dummy49 : filesizet

logic dummy50 : classt

logic dummy51 : classt

logic dummy52 : fart

type screenconfigt__ref = { screenconfigt__content : us_rep4
}

function screenconfigt__ref___projection(a: screenconfigt__ref) : us_rep4 =
  (a).screenconfigt__content

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic temp___String_Literal_1231 : unit -> (int,character) farray

axiom temp___String_Literal_1231__def_axiom :
  (((((((((((((((((((((to_rep((temp___String_Literal_1231(void)[1])) = 83) and
  (to_rep((temp___String_Literal_1231(void)[2])) = 99)) and
  (to_rep((temp___String_Literal_1231(void)[3])) = 114)) and
  (to_rep((temp___String_Literal_1231(void)[4])) = 101)) and
  (to_rep((temp___String_Literal_1231(void)[5])) = 101)) and
  (to_rep((temp___String_Literal_1231(void)[6])) = 110)) and
  (to_rep((temp___String_Literal_1231(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_1231(void)[8])) = 85)) and
  (to_rep((temp___String_Literal_1231(void)[9])) = 112)) and
  (to_rep((temp___String_Literal_1231(void)[10])) = 100)) and
  (to_rep((temp___String_Literal_1231(void)[11])) = 97)) and
  (to_rep((temp___String_Literal_1231(void)[12])) = 116)) and
  (to_rep((temp___String_Literal_1231(void)[13])) = 101)) and
  (to_rep((temp___String_Literal_1231(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_1231(void)[15])) = 70)) and
  (to_rep((temp___String_Literal_1231(void)[16])) = 97)) and
  (to_rep((temp___String_Literal_1231(void)[17])) = 105)) and
  (to_rep((temp___String_Literal_1231(void)[18])) = 108)) and
  (to_rep((temp___String_Literal_1231(void)[19])) = 117)) and
  (to_rep((temp___String_Literal_1231(void)[20])) = 114)) and
  (to_rep((temp___String_Literal_1231(void)[21])) = 101))

axiom valid_numberlogentries__post_axiom : true

axiom nouser__def_axiom : (nouser = temp___String_Literal_135(void))

 (* File "screen.adb", line 871, characters 0-0 *)
goal WP_parameter_def :
  (forall themsg:int. forall currentmsg:int.
  forall currentstats__split_fields:bool.
  forall currentstats__split_fields1:statscount.
  forall currentstats__split_fields2:statscount.
  forall currentstats__split_fields3:statscount.
  forall currentstats__split_fields4:statscount.
  forall currentconfig__split_fields:bool.
  forall currentconfig__split_fields1:durationt.
  forall currentconfig__split_fields2:durationt.
  forall currentconfig__split_fields3:durationt.
  forall currentconfig__split_fields4:durationt.
  forall currentconfig__split_fields5:durationt.
  forall currentconfig__split_fields6:durationt.
  forall currentconfig__split_fields7:durationt.
  forall currentconfig__split_fields8:accesspolicyt.
  forall currentconfig__split_fields9:filesizet.
  forall currentconfig__split_fields10:filesizet.
  forall currentconfig__split_fields11:classt.
  forall currentconfig__split_fields12:classt.
  forall currentconfig__split_fields13:fart. forall currentdooralarm:int.
  forall currentlogalarm:int. forall shoulddisplaystats:bool.
  forall shoulddisplayconfig:bool. forall state:us_private.
  forall state1:us_private. forall o:int. forall o1:int. forall o2:bool.
  forall o3:bool. forall currentconfig__split_fields14:bool.
  forall currentconfig__split_fields15:durationt.
  forall currentconfig__split_fields16:durationt.
  forall currentconfig__split_fields17:durationt.
  forall currentconfig__split_fields18:durationt.
  forall currentconfig__split_fields19:durationt.
  forall currentconfig__split_fields20:durationt.
  forall currentconfig__split_fields21:durationt.
  forall currentconfig__split_fields22:accesspolicyt.
  forall currentconfig__split_fields23:filesizet.
  forall currentconfig__split_fields24:filesizet.
  forall currentconfig__split_fields25:classt.
  forall currentconfig__split_fields26:classt.
  forall currentconfig__split_fields27:fart. forall screenok:bool.
  forall currentmsg1:int. forall writeok:bool. forall result:bool.
  forall screenok1:bool. forall currentdooralarm1:int.
  forall currentlogalarm1:int. forall writeok1:bool.
  forall output:us_private. forall result1:bool. forall screenok2:bool.
  forall result2:bool. forall shoulddisplaystats1:bool. forall writeok2:bool.
  forall output1:us_private. forall result3:bool. forall screenok3:bool.
  forall writeok3:bool. forall output2:us_private. forall result4:bool.
  forall screenok4:bool. forall writeok4:bool. forall output3:us_private.
  forall result5:bool. forall screenok5:bool. forall result6:bool.
  forall result7:statscount. forall result8:statscount.
  forall result9:statscount. forall result10:statscount.
  forall currentstats__split_fields5:bool.
  forall currentstats__split_fields6:statscount.
  forall currentstats__split_fields7:statscount.
  forall currentstats__split_fields8:statscount.
  forall currentstats__split_fields9:statscount. forall result11:bool.
  forall shoulddisplayconfig1:bool. forall writeok5:bool.
  forall output4:us_private. forall result12:bool. forall screenok6:bool.
  forall currentconfig__split_fields28:bool.
  forall currentconfig__split_fields29:durationt.
  forall currentconfig__split_fields30:durationt.
  forall currentconfig__split_fields31:durationt.
  forall currentconfig__split_fields32:durationt.
  forall currentconfig__split_fields33:durationt.
  forall currentconfig__split_fields34:durationt.
  forall currentconfig__split_fields35:durationt.
  forall currentconfig__split_fields36:accesspolicyt.
  forall currentconfig__split_fields37:filesizet.
  forall currentconfig__split_fields38:filesizet.
  forall currentconfig__split_fields39:classt.
  forall currentconfig__split_fields40:classt.
  forall currentconfig__split_fields41:fart. forall writeok6:bool.
  forall output5:us_private. forall result13:bool. forall screenok7:bool.
  forall writeok7:bool. forall output6:us_private. forall result14:bool.
  forall screenok8:bool. forall result15:bool. forall result16:durationt.
  forall result17:durationt. forall result18:durationt.
  forall result19:durationt. forall result20:durationt.
  forall result21:durationt. forall result22:durationt.
  forall result23:accesspolicyt. forall result24:filesizet.
  forall result25:filesizet. forall result26:classt. forall result27:classt.
  forall result28:fart.
  forall currentconfig__split_fields42:us_split_fields8.
  ((temp___String_Literal_135(void) = nouser) -> (in_range8(themsg) ->
  (in_range8(currentmsg) -> (in_range4(currentdooralarm) ->
  (in_range4(currentlogalarm) -> (in_range8(currentmsg1) ->
  (((result = screenok) and (screenok1 = match_bool(writeok, screenok,
  false))) -> ((((o1 = theauditalarm(state)) and in_range4(o1)) and
  (((o = thedooralarm(state1)) and in_range4(o)) and
  (in_range4(currentdooralarm1) and in_range4(currentlogalarm1)))) ->
  (((result1 = screenok1) and (screenok2 = match_bool(writeok1, screenok1,
  false))) -> (((o2 = ispresent({ us_split_fields3 = {
  rec__admin__t__rolepresent = theadmin; rec__admin__t__currentop = theadmin1
  } })) and ((result2 = shoulddisplaystats) and
  (shoulddisplaystats1 = o2))) -> ((((shoulddisplaystats1 = true) and
  ((((not (currentstats__split_fields = true)) and ((result3 = screenok2) and
  (screenok3 = match_bool(writeok2, screenok2, false)))) or
  ((currentstats__split_fields = true) and ((output1 = output) and
  ((writeok2 = writeok1) and (screenok3 = screenok2))))) and
  ((result4 = screenok3) and (screenok4 = match_bool(writeok3, screenok3,
  false))))) or ((not (shoulddisplaystats1 = true)) and
  ((((currentstats__split_fields = true) and ((result5 = screenok2) and
  (screenok5 = match_bool(writeok4, screenok2, false)))) or
  ((not (currentstats__split_fields = true)) and ((output3 = output) and
  ((writeok4 = writeok1) and (screenok5 = screenok2))))) and
  ((output2 = output3) and ((writeok3 = writeok4) and
  (screenok4 = screenok5)))))) ->
  ((((result6 = currentstats__split_fields) and
  ((result7 = currentstats__split_fields1) and
  ((result8 = currentstats__split_fields2) and
  ((result9 = currentstats__split_fields3) and
  (result10 = currentstats__split_fields4))))) and
  ((currentstats__split_fields5 = shoulddisplaystats1) and
  ((currentstats__split_fields6 = thestats) and
  ((currentstats__split_fields7 = thestats1) and
  ((currentstats__split_fields8 = thestats2) and
  (currentstats__split_fields9 = thestats3)))))) ->
  (((o3 = securityofficerispresent({ us_split_fields3 = {
  rec__admin__t__rolepresent = theadmin; rec__admin__t__currentop = theadmin1
  } })) and ((result11 = shoulddisplayconfig) and
  (shoulddisplayconfig1 = o3))) -> ((((shoulddisplayconfig1 = true) and
  ((((not (currentconfig__split_fields = true)) and
  ((result12 = screenok4) and (screenok6 = match_bool(writeok5, screenok4,
  false)))) or ((currentconfig__split_fields = true) and
  ((output4 = output2) and ((writeok5 = writeok3) and
  (screenok6 = screenok4))))) and ((result13 = screenok6) and
  (screenok7 = match_bool(writeok6, screenok6, false))))) or
  ((not (shoulddisplayconfig1 = true)) and
  ((((currentconfig__split_fields = true) and ((result14 = screenok4) and
  (screenok8 = match_bool(writeok7, screenok4, false)))) or
  ((not (currentconfig__split_fields = true)) and ((output6 = output2) and
  ((writeok7 = writeok3) and (screenok8 = screenok4))))) and
  (((output5 = output6) and ((writeok6 = writeok7) and
  ((screenok7 = screenok8) and
  ((currentconfig__split_fields = currentconfig__split_fields28) and
  ((currentconfig__split_fields1 = currentconfig__split_fields29) and
  ((currentconfig__split_fields2 = currentconfig__split_fields30) and
  ((currentconfig__split_fields3 = currentconfig__split_fields31) and
  ((currentconfig__split_fields4 = currentconfig__split_fields32) and
  ((currentconfig__split_fields5 = currentconfig__split_fields33) and
  ((currentconfig__split_fields6 = currentconfig__split_fields34) and
  ((currentconfig__split_fields7 = currentconfig__split_fields35) and
  ((currentconfig__split_fields8 = currentconfig__split_fields36) and
  ((currentconfig__split_fields9 = currentconfig__split_fields37) and
  ((currentconfig__split_fields10 = currentconfig__split_fields38) and
  ((currentconfig__split_fields11 = currentconfig__split_fields39) and
  ((currentconfig__split_fields12 = currentconfig__split_fields40) and
  (currentconfig__split_fields13 = currentconfig__split_fields41))))))))))))))))) and
  ((output5 = output6) and ((writeok6 = writeok7) and
  ((screenok7 = screenok8) and
  ((currentconfig__split_fields14 = currentconfig__split_fields28) and
  ((currentconfig__split_fields15 = currentconfig__split_fields29) and
  ((currentconfig__split_fields16 = currentconfig__split_fields30) and
  ((currentconfig__split_fields17 = currentconfig__split_fields31) and
  ((currentconfig__split_fields18 = currentconfig__split_fields32) and
  ((currentconfig__split_fields19 = currentconfig__split_fields33) and
  ((currentconfig__split_fields20 = currentconfig__split_fields34) and
  ((currentconfig__split_fields21 = currentconfig__split_fields35) and
  ((currentconfig__split_fields22 = currentconfig__split_fields36) and
  ((currentconfig__split_fields23 = currentconfig__split_fields37) and
  ((currentconfig__split_fields24 = currentconfig__split_fields38) and
  ((currentconfig__split_fields25 = currentconfig__split_fields39) and
  ((currentconfig__split_fields26 = currentconfig__split_fields40) and
  (currentconfig__split_fields27 = currentconfig__split_fields41))))))))))))))))))))) ->
  ((((result15 = currentconfig__split_fields28) and
  ((result16 = currentconfig__split_fields29) and
  ((result17 = currentconfig__split_fields30) and
  ((result18 = currentconfig__split_fields31) and
  ((result19 = currentconfig__split_fields32) and
  ((result20 = currentconfig__split_fields33) and
  ((result21 = currentconfig__split_fields34) and
  ((result22 = currentconfig__split_fields35) and
  ((result23 = currentconfig__split_fields36) and
  ((result24 = currentconfig__split_fields37) and
  ((result25 = currentconfig__split_fields38) and
  ((result26 = currentconfig__split_fields39) and
  ((result27 = currentconfig__split_fields40) and
  (result28 = currentconfig__split_fields41)))))))))))))) and
  (currentconfig__split_fields42 = {
  rec__screen__screenconfigt__isdisplayed = shoulddisplayconfig1;
  rec__screen__screenconfigt__data = { us_split_fields7 = {
  rec__screen__displayedconfigt__latchunlock = currentconfig__split_fields29;
  rec__screen__displayedconfigt__alarmsilent = currentconfig__split_fields30;
  rec__screen__displayedconfigt__fingerwait = currentconfig__split_fields31;
  rec__screen__displayedconfigt__tokenremove = currentconfig__split_fields32;
  rec__screen__displayedconfigt__workstart = currentconfig__split_fields33;
  rec__screen__displayedconfigt__workend = currentconfig__split_fields34;
  rec__screen__displayedconfigt__authduration =
  currentconfig__split_fields35; rec__screen__displayedconfigt__policy =
  currentconfig__split_fields36;
  rec__screen__displayedconfigt__minpreservedlog =
  currentconfig__split_fields37;
  rec__screen__displayedconfigt__alarmthreshold =
  currentconfig__split_fields38; rec__screen__displayedconfigt__minentry =
  currentconfig__split_fields39; rec__screen__displayedconfigt__clearance =
  currentconfig__split_fields40; rec__screen__displayedconfigt__maxfar =
  currentconfig__split_fields41 } } })) -> ((not (screenok7 = true)) ->
  (valid_numberlogentries(state) = true))))))))))))))))))
