(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

logic to_rep : integer -> int

logic of_rep : int -> integer

axiom inversion_axiom :
  (forall x:integer [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:integer [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

logic a : int

logic attr__ATTRIBUTE_ADDRESS : int

logic b : int

logic attr__ATTRIBUTE_ADDRESS1 : int

type map__ref = { map__content : (int,integer) farray
}

logic slide : (int,integer) farray, int, int -> (int,integer) farray

axiom slide_eq :
  (forall a1:(int,integer) farray.
  (forall first:int [slide(a1, first, first)]. (slide(a1, first,
  first) = a1)))

axiom slide_def :
  (forall a1:(int,integer) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a1, old_first, new_first)[i])]. ((slide(a1,
  old_first, new_first)[i]) = (a1[(i - (new_first - old_first))]))))))

logic concat : (int,integer) farray, int, int, (int,integer) farray, int,
  int -> (int,integer) farray

axiom concat_def :
  (forall a1:(int,integer) farray. forall b1:(int,integer) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a1, a_first, a_last, b1, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a1, a_first, a_last, b1,
  b_first, b_last)[i]) = (a1[i]))) and ((a_last <  i) -> ((concat(a1,
  a_first, a_last, b1, b_first,
  b_last)[i]) = (b1[((i - a_last) + (b_first - 1))])))))))

logic singleton : integer, int -> (int,integer) farray

axiom singleton_def :
  (forall v:integer.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq3 : (int,integer) farray, int, int, (int,integer) farray, int,
  int -> bool

axiom bool_eq_def2 :
  (forall a1:(int,integer) farray. forall a__first:int. forall a__last:int.
  forall b1:(int,integer) farray. forall b__first:int. forall b__last:int
  [bool_eq3(a1, a__first, a__last, b1, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_132:int. ((((a__first <= temp___idx_132) and
  (temp___idx_132 <= a__last)) and
  (to_rep((a1[temp___idx_132])) = to_rep((b1[((b__first - a__first) + temp___idx_132)])))) or
  (not ((a__first <= temp___idx_132) and (temp___idx_132 <= a__last)))))) ->
  (bool_eq3(a1, a__first, a__last, b1, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_132:int. (((a__first <= temp___idx_132) and
  (temp___idx_132 <= a__last)) ->
  (to_rep((a1[temp___idx_132])) = to_rep((b1[((b__first - a__first) + temp___idx_132)]))))))) ->
  (bool_eq3(a1, a__first, a__last, b1, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a1:(int,integer) farray. forall b1:(int,integer) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b1, b__first, b__last, a1, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_132:int. (((a__first <= temp___idx_132) and
  (temp___idx_132 <= a__last)) ->
  (to_rep((a1[temp___idx_132])) = to_rep((b1[((b__first - a__first) + temp___idx_132)])))))))))

logic compare : (int,integer) farray, int, int, (int,integer) farray, int,
  int -> int

axiom compare_def_eq :
  (forall a1:(int,integer) farray. forall b1:(int,integer) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a1, a_first, a_last, b1, b_first, b_last)].
  ((compare(a1, a_first, a_last, b1, b_first, b_last) = 0) <-> (bool_eq3(a1,
  a_first, a_last, b1, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a1:(int,integer) farray. forall b1:(int,integer) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a1, a_first, a_last, b1, b_first, b_last)].
  ((compare(a1, a_first, a_last, b1, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq3(a1, a_first, i, b1, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a1[(i + 1)])) <  to_rep((b1[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a1:(int,integer) farray. forall b1:(int,integer) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a1, a_first, a_last, b1, b_first, b_last)].
  ((0 <  compare(a1, a_first, a_last, b1, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq3(a1, a_first, j, b1, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b1[(i + 1)])) <  to_rep((a1[(j + 1)]))))))))))))

predicate dynamic_property(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : integer, integer -> bool

logic dummy1 : integer

type ttD1__ref = { ttD1__content : integer
}

function ttD1__ref___projection(a1: ttD1__ref) : integer = (a1).ttD1__content

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep(first(mk(f, l))) = f) and (to_rep(last(mk(f, l))) = l)))))

predicate dynamic_property1(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (dynamic_property(range_first, range_last, low) and
  dynamic_property(range_first, range_last, high)))))

type us_t = { elts : (int,integer) farray; rt : t
}

function to_array(a1: us_t) : (int,integer) farray = (a1).elts

function of_array(a1: (int,integer) farray, f: int, l: int) : us_t = { elts =
  a1; rt = mk(f, l) }

function first1(a1: us_t) : int = to_rep(first((a1).rt))

function last1(a1: us_t) : int = to_rep(last((a1).rt))

logic length : us_t -> int

axiom length_def :
  (forall a1:us_t [length(a1)]. (((first1(a1) <= last1(a1)) ->
  (length(a1) = ((last1(a1) - first1(a1)) + 1))) and
  ((not (first1(a1) <= last1(a1))) -> (length(a1) = 0))))

logic value__size : int

logic object__size : (int,integer) farray -> int

logic value__component__size : int

logic object__component__size : (int,integer) farray -> int

logic value__alignment : int

logic object__alignment : (int,integer) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a1:(int,integer) farray. (0 <= object__size(a1)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a1:(int,integer) farray. (0 <= object__component__size(a1)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a1:(int,integer) farray. (0 <= object__alignment(a1)))

function bool_eq5(x: us_t, y: us_t) : bool = bool_eq3((x).elts,
  to_rep(first((x).rt)), to_rep(last((x).rt)), (y).elts,
  to_rep(first((y).rt)), to_rep(last((y).rt)))

logic user_eq2 : us_t, us_t -> bool

logic dummy2 : (int,integer) farray

logic dummy3 : t

type t__ref = { t__content : us_t
}

function t__ref___projection(a1: t__ref) : us_t = (a1).t__content

logic tab__first : integer

logic tab__last : integer

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic tab : (int,integer) farray

logic j : int

logic k : int

logic temp___147 : int

logic temp___145 : (int,integer) farray

logic temp___148 : int

logic o : integer

logic o1 : int

logic o2 : (int,integer) farray

logic o3 : int

logic o4 : integer

logic o5 : int

logic o6 : (int,integer) farray

logic o7 : int

logic o8 : int

logic temp___154 : int

logic temp___153 : int

logic temp___151 : (int,integer) farray

logic temp___156 : int

logic temp___155 : int

logic temp___149 : int

logic o9 : integer

logic o10 : int

logic o11 : (int,integer) farray

logic o12 : int

logic o13 : int

logic o14 : int

logic o15 : bool

logic temp___1491 : int

logic o16 : integer

logic o17 : int

logic o18 : (int,integer) farray

logic o19 : int

logic o20 : int

logic temp___161 : int

logic temp___160 : int

logic temp___158 : (int,integer) farray

logic temp___163 : int

logic temp___162 : int

logic o21 : integer

logic o22 : int

logic o23 : (int,integer) farray

logic o24 : int

logic o25 : int

logic o26 : integer

logic o27 : int

logic o28 : (int,integer) farray

logic o29 : int

logic o30 : int

logic temp___167 : int

logic temp___165 : (int,integer) farray

logic temp___168 : int

logic o31 : integer

logic o32 : int

logic o33 : (int,integer) farray

logic o34 : int

logic l : int

logic o35 : int

logic o36 : bool

logic o37 : integer

logic o38 : int

logic o39 : (int,integer) farray

logic o40 : int

logic temp___172 : int

logic temp___170 : (int,integer) farray

logic temp___173 : int

logic o41 : integer

logic o42 : int

logic o43 : (int,integer) farray

logic o44 : int

logic l1 : int

logic o45 : int

logic o46 : bool

logic o47 : integer

logic o48 : int

logic o49 : (int,integer) farray

logic o50 : int

logic temp___178 : int

logic temp___177 : int

logic temp___175 : (int,integer) farray

logic temp___180 : int

logic temp___179 : int

logic o51 : integer

logic o52 : int

logic o53 : (int,integer) farray

logic o54 : int

logic o55 : int

logic o56 : int

logic l2 : int

logic o57 : int

logic o58 : bool

logic l3 : int

logic o59 : int

logic o60 : int

logic o61 : int

logic o62 : bool

logic o63 : integer

logic o64 : int

logic o65 : (int,integer) farray

logic o66 : int

logic o67 : int

logic temp___185 : int

logic temp___184 : int

logic temp___182 : (int,integer) farray

logic temp___187 : int

logic temp___186 : int

logic o68 : integer

logic o69 : int

logic o70 : (int,integer) farray

logic o71 : int

logic o72 : int

logic o73 : int

logic l4 : int

logic o74 : int

logic o75 : bool

logic l5 : int

logic o76 : int

logic o77 : int

logic o78 : int

logic o79 : bool

logic o80 : integer

logic o81 : int

logic o82 : (int,integer) farray

logic o83 : int

logic o84 : int

logic o85 : integer

logic o86 : int

logic o87 : (int,integer) farray

logic o88 : int

logic o89 : int

logic o90 : int

logic l6 : int

logic o91 : int

logic o92 : bool

logic l7 : int

logic o93 : int

logic o94 : int

logic o95 : int

logic o96 : bool

logic o97 : integer

logic o98 : int

logic o99 : (int,integer) farray

logic o100 : int

logic o101 : int

logic tab1 : (int,integer) farray

logic result : int

logic j1 : int

logic result1 : (int,integer) farray

logic tab2 : (int,integer) farray

logic result2 : int

logic j2 : int

logic tab3 : (int,integer) farray

logic j3 : int

logic temp___1481 : int

logic result3 : int

logic temp___1482 : int

logic result4 : (int,integer) farray

logic tab4 : (int,integer) farray

logic result5 : int

logic j4 : int

logic tab5 : (int,integer) farray

logic j5 : int

logic tab6 : (int,integer) farray

logic j6 : int

logic tab7 : (int,integer) farray

logic j7 : int

logic tab8 : (int,integer) farray

logic j8 : int

logic result6 : int

logic j9 : int

logic result7 : int

logic k1 : int

logic result8 : bool

logic result9 : (int,integer) farray

logic tab9 : (int,integer) farray

logic result10 : int

logic j10 : int

logic result11 : int

logic k2 : int

logic j11 : int

logic k3 : int

logic j12 : int

logic k4 : int

logic tab10 : (int,integer) farray

logic j13 : int

logic k5 : int

logic temp___1561 : int

logic temp___1551 : int

logic result12 : int

logic temp___1562 : int

logic result13 : int

logic temp___1552 : int

logic result14 : bool

logic result15 : (int,integer) farray

logic tab11 : (int,integer) farray

logic result16 : int

logic j14 : int

logic result17 : int

logic k6 : int

logic j15 : int

logic k7 : int

logic j16 : int

logic k8 : int

logic tab12 : (int,integer) farray

logic j17 : int

logic k9 : int

logic tab13 : (int,integer) farray

logic j18 : int

logic k10 : int

logic tab14 : (int,integer) farray

logic j19 : int

logic k11 : int

logic tab15 : (int,integer) farray

logic j20 : int

logic k12 : int

logic result18 : int

logic j21 : int

logic result19 : int

logic k13 : int

logic result20 : (int,integer) farray

logic tab16 : (int,integer) farray

logic result21 : int

logic j22 : int

logic result22 : int

logic k14 : int

logic tab17 : (int,integer) farray

logic j23 : int

logic k15 : int

logic temp___1631 : int

logic temp___1621 : int

logic result23 : int

logic temp___1622 : int

logic result24 : int

logic temp___1632 : int

logic result25 : (int,integer) farray

logic tab18 : (int,integer) farray

logic result26 : int

logic j24 : int

logic result27 : int

logic k16 : int

logic tab19 : (int,integer) farray

logic j25 : int

logic k17 : int

logic tab20 : (int,integer) farray

logic j26 : int

logic k18 : int

logic tab21 : (int,integer) farray

logic j27 : int

logic k19 : int

logic tab22 : (int,integer) farray

logic j28 : int

logic k20 : int

logic result28 : int

logic j29 : int

logic result29 : (int,integer) farray

logic tab23 : (int,integer) farray

logic result30 : int

logic j30 : int

logic tab24 : (int,integer) farray

logic j31 : int

logic temp___1681 : int

logic result31 : bool

logic result32 : int

logic temp___1682 : int

logic result33 : (int,integer) farray

logic tab25 : (int,integer) farray

logic result34 : int

logic j32 : int

logic tab26 : (int,integer) farray

logic j33 : int

logic temp___1683 : int

logic tab27 : (int,integer) farray

logic j34 : int

logic temp___1684 : int

logic tab28 : (int,integer) farray

logic j35 : int

logic temp___1685 : int

logic tab29 : (int,integer) farray

logic j36 : int

logic temp___1686 : int

logic tab30 : (int,integer) farray

logic j37 : int

logic tab31 : (int,integer) farray

logic j38 : int

logic tab32 : (int,integer) farray

logic j39 : int

logic tab33 : (int,integer) farray

logic j40 : int

logic result35 : int

logic j41 : int

logic result36 : (int,integer) farray

logic tab34 : (int,integer) farray

logic result37 : int

logic j42 : int

logic tab35 : (int,integer) farray

logic j43 : int

logic temp___1731 : int

logic result38 : bool

logic result39 : int

logic temp___1732 : int

logic result40 : (int,integer) farray

logic tab36 : (int,integer) farray

logic result41 : int

logic j44 : int

logic tab37 : (int,integer) farray

logic j45 : int

logic temp___1733 : int

logic tab38 : (int,integer) farray

logic j46 : int

logic temp___1734 : int

logic tab39 : (int,integer) farray

logic j47 : int

logic temp___1735 : int

logic tab40 : (int,integer) farray

logic j48 : int

logic temp___1736 : int

logic tab41 : (int,integer) farray

logic j49 : int

logic tab42 : (int,integer) farray

logic j50 : int

logic tab43 : (int,integer) farray

logic j51 : int

logic tab44 : (int,integer) farray

logic j52 : int

logic result42 : int

logic j53 : int

logic result43 : int

logic k21 : int

logic result44 : (int,integer) farray

logic tab45 : (int,integer) farray

logic result45 : int

logic j54 : int

logic result46 : int

logic k22 : int

logic tab46 : (int,integer) farray

logic j55 : int

logic k23 : int

logic temp___1801 : int

logic temp___1791 : int

logic result47 : bool

logic result48 : bool

logic result49 : int

logic temp___1792 : int

logic result50 : int

logic temp___1802 : int

logic result51 : (int,integer) farray

logic tab47 : (int,integer) farray

logic result52 : int

logic j56 : int

logic result53 : int

logic k24 : int

logic tab48 : (int,integer) farray

logic j57 : int

logic k25 : int

logic temp___1803 : int

logic temp___1793 : int

logic tab49 : (int,integer) farray

logic j58 : int

logic k26 : int

logic temp___1804 : int

logic temp___1794 : int

logic tab50 : (int,integer) farray

logic j59 : int

logic k27 : int

logic tab51 : (int,integer) farray

logic j60 : int

logic k28 : int

logic tab52 : (int,integer) farray

logic j61 : int

logic k29 : int

logic tab53 : (int,integer) farray

logic j62 : int

logic k30 : int

logic result54 : int

logic j63 : int

logic result55 : int

logic k31 : int

logic result56 : (int,integer) farray

logic tab54 : (int,integer) farray

logic result57 : int

logic j64 : int

logic result58 : int

logic k32 : int

logic tab55 : (int,integer) farray

logic j65 : int

logic k33 : int

logic temp___1871 : int

logic temp___1861 : int

logic result59 : bool

logic result60 : bool

logic result61 : int

logic temp___1862 : int

logic result62 : int

logic temp___1872 : int

logic result63 : (int,integer) farray

logic tab56 : (int,integer) farray

logic result64 : int

logic j66 : int

logic result65 : int

logic k34 : int

logic tab57 : (int,integer) farray

logic j67 : int

logic k35 : int

logic temp___1873 : int

logic temp___1863 : int

logic tab58 : (int,integer) farray

logic j68 : int

logic k36 : int

logic temp___1874 : int

logic temp___1864 : int

logic tab59 : (int,integer) farray

logic j69 : int

logic k37 : int

logic tab60 : (int,integer) farray

logic j70 : int

logic k38 : int

logic tab61 : (int,integer) farray

logic j71 : int

logic k39 : int

logic tab62 : (int,integer) farray

logic j72 : int

logic k40 : int

logic result66 : int

logic j73 : int

logic result67 : int

logic k41 : int

logic result68 : (int,integer) farray

logic tab63 : (int,integer) farray

logic result69 : int

logic j74 : int

logic result70 : int

logic k42 : int

logic tab64 : (int,integer) farray

logic j75 : int

logic k43 : int

logic temp___194 : int

logic temp___193 : int

logic result71 : bool

logic result72 : bool

logic result73 : int

logic temp___1931 : int

logic result74 : int

logic temp___1941 : int

logic result75 : (int,integer) farray

logic tab65 : (int,integer) farray

logic result76 : int

logic j76 : int

logic result77 : int

logic k44 : int

logic tab66 : (int,integer) farray

logic j77 : int

logic k45 : int

logic temp___1942 : int

logic temp___1932 : int

logic tab67 : (int,integer) farray

logic j78 : int

logic k46 : int

logic temp___1943 : int

logic temp___1933 : int

axiom H : in_range1(a)

axiom H1 : in_range1(b)

axiom H2 : (dynamic_property1(a, b, to_rep(tab__first),
  to_rep(tab__last)) and ((to_rep(tab__first) = a) and
  (to_rep(tab__last) = b)))

axiom H3 : (((- 2147483648) <= 2147483647) -> in_range1(j))

axiom H4 : (((- 2147483648) <= 2147483647) -> in_range1(k))

axiom H5 : (result = j)

axiom H6 : (j1 = a)

axiom H7 : ((j1 <= b) -> (temp___147 = j1))

axiom H8 : ((j1 <= b) -> (temp___145 = tab))

axiom H9 : ((j1 <= b) -> (0 = temp___148))

axiom H10 : ((j1 <= b) -> (to_rep(o) = j1))

axiom H11 : ((j1 <= b) -> ((to_rep(tab__first) <= j1) and
  (j1 <= to_rep(tab__last))))

axiom H12 : ((j1 <= b) -> (o1 = j1))

axiom H13 : ((j1 <= b) -> (o2 = (tab[o1 <- o])))

axiom H14 : ((j1 <= b) -> (result1 = tab))

axiom H15 : ((j1 <= b) -> (tab2 = o2))

axiom H16 : ((j1 <= b) -> ((o3 = (j1 + 1)) and in_range1((j1 + 1))))

axiom H17 : ((j1 <= b) -> (j1 = result2))

axiom H18 : ((j1 <= b) -> (j2 = o3))

axiom H19 : ((j1 <= b) -> (((- 2147483648) <= 2147483647) -> in_range1(j3)))

axiom H20 : ((j1 <= b) -> (temp___1481 = result3))

axiom H21 : ((j1 <= b) -> (temp___1482 = j3))

axiom H22 : ((j1 <= b) -> (not (j3 <= b)))

axiom H23 : ((j1 <= b) -> (j5 = j3))

axiom H24 : ((j1 <= b) -> (tab5 = tab3))

axiom H25 : ((j1 <= b) -> (j6 = j3))

axiom H26 : ((j1 <= b) -> (tab6 = tab3))

axiom H27 : ((j1 <= b) -> (j7 = j5))

axiom H28 : ((j1 <= b) -> (tab7 = tab5))

axiom H29 : ((j1 <= b) -> (j8 = j6))

axiom H30 : ((j1 <= b) -> (tab8 = tab6))

axiom H31 : ((not (j1 <= b)) -> (j7 = j1))

axiom H32 : ((not (j1 <= b)) -> (tab7 = tab))

axiom H33 : ((not (j1 <= b)) -> (j8 = j1))

axiom H34 : ((not (j1 <= b)) -> (tab8 = tab1))

axiom H35 : (result6 = j7)

axiom H36 : (j9 = a)

axiom H37 : (result7 = k)

axiom H38 : (k1 = 0)

axiom H39 : ((o8 = (j9 + k1)) and in_range1((j9 + k1)))

axiom H40 : (((o8 <= b) -> (result8 = true)) and ((not (o8 <= b)) ->
  (result8 = false)))

axiom H41 : ((result8 = true) -> (temp___154 = k1))

axiom H42 : ((result8 = true) -> (temp___153 = j9))

axiom H43 : ((result8 = true) -> (temp___151 = tab7))

axiom H44 : ((result8 = true) -> (0 = temp___156))

axiom H45 : ((result8 = true) -> (0 = temp___155))

axiom H46 : ((result8 = true) -> (to_rep(o9) = 0))

axiom H47 : ((result8 = true) -> ((temp___149 = (j9 + k1)) and
  in_range1((j9 + k1))))

axiom H48 : ((result8 = true) -> ((to_rep(tab__first) <= temp___149) and
  (temp___149 <= to_rep(tab__last))))

axiom H49 : ((result8 = true) -> (o10 = temp___149))

axiom H50 : ((result8 = true) -> (o11 = (tab7[o10 <- o9])))

axiom H51 : ((result8 = true) -> (result9 = tab7))

axiom H52 : ((result8 = true) -> (tab9 = o11))

axiom H53 : ((result8 = true) -> ((j9 <  100) -> ((o12 = (j9 + 1)) and
  in_range1((j9 + 1)))))

axiom H54 : ((result8 = true) -> ((j9 <  100) -> (result10 = j9)))

axiom H55 : ((result8 = true) -> ((j9 <  100) -> (j10 = o12)))

axiom H56 : ((result8 = true) -> ((j9 <  100) -> (k3 = k1)))

axiom H57 : ((result8 = true) -> ((j9 <  100) -> (j11 = j10)))

axiom H58 : ((result8 = true) -> ((j9 <  100) -> (k4 = k1)))

axiom H59 : ((result8 = true) -> ((j9 <  100) -> (j12 = j10)))

axiom H60 : ((result8 = true) -> ((not (j9 <  100)) -> ((o13 = (k1 + 1)) and
  in_range1((k1 + 1)))))

axiom H61 : ((result8 = true) -> ((not (j9 <  100)) -> (result11 = k1)))

axiom H62 : ((result8 = true) -> ((not (j9 <  100)) -> (k2 = o13)))

axiom H63 : ((result8 = true) -> ((not (j9 <  100)) -> (k3 = k2)))

axiom H64 : ((result8 = true) -> ((not (j9 <  100)) -> (j11 = j9)))

axiom H65 : ((result8 = true) -> ((not (j9 <  100)) -> (k4 = k2)))

axiom H66 : ((result8 = true) -> ((not (j9 <  100)) -> (j12 = j9)))

axiom H67 : ((result8 = true) -> ((((- 2147483648) <= 2147483647) ->
  in_range1(j13)) and (((- 2147483648) <= 2147483647) -> in_range1(k5))))

axiom H68 : ((result8 = true) -> (result12 = temp___1561))

axiom H69 : ((result8 = true) -> (temp___1562 = j13))

axiom H70 : ((result8 = true) -> (result13 = temp___1551))

axiom H71 : ((result8 = true) -> (temp___1552 = k5))

axiom H72 : ((result8 = true) -> ((o14 = (j13 + k5)) and
  in_range1((j13 + k5))))

axiom H73 : ((result8 = true) -> (((o14 <= b) -> (o15 = true)) and
  ((not (o14 <= b)) -> (o15 = false))))

axiom H74 : ((result8 = true) -> (((not (o15 = true)) ->
  (result14 = true)) and ((o15 = true) -> (result14 = false))))

axiom H75 : ((result8 = true) -> (result14 = true))

axiom H76 : ((result8 = true) -> (k9 = k5))

axiom H77 : ((result8 = true) -> (j17 = j13))

axiom H78 : ((result8 = true) -> (tab12 = tab10))

axiom H79 : ((result8 = true) -> (k10 = k5))

axiom H80 : ((result8 = true) -> (j18 = j13))

axiom H81 : ((result8 = true) -> (tab13 = tab10))

axiom H82 : ((result8 = true) -> (k11 = k9))

axiom H83 : ((result8 = true) -> (j19 = j17))

axiom H84 : ((result8 = true) -> (tab14 = tab12))

axiom H85 : ((result8 = true) -> (k12 = k10))

axiom H86 : ((result8 = true) -> (j20 = j18))

axiom H87 : ((result8 = true) -> (tab15 = tab13))

axiom H88 : ((not (result8 = true)) -> (k11 = k1))

axiom H89 : ((not (result8 = true)) -> (j19 = j9))

axiom H90 : ((not (result8 = true)) -> (tab14 = tab7))

axiom H91 : ((not (result8 = true)) -> (k12 = k1))

axiom H92 : ((not (result8 = true)) -> (j20 = j9))

axiom H93 : ((not (result8 = true)) -> (tab15 = tab8))

axiom H94 : (result18 = j19)

axiom H95 : (j21 = a)

axiom H96 : (result19 = k11)

axiom H97 : (k13 = 0)

axiom H98 : ((j21 <= b) -> (temp___161 = k13))

axiom H99 : ((j21 <= b) -> (temp___160 = j21))

axiom H100 : ((j21 <= b) -> (temp___158 = tab14))

axiom H101 : ((j21 <= b) -> (0 = temp___163))

axiom H102 : ((j21 <= b) -> (0 = temp___162))

axiom H103 : ((j21 <= b) -> (to_rep(o21) = j21))

axiom H104 : ((j21 <= b) -> ((to_rep(tab__first) <= j21) and
  (j21 <= to_rep(tab__last))))

axiom H105 : ((j21 <= b) -> (o22 = j21))

axiom H106 : ((j21 <= b) -> (o23 = (tab14[o22 <- o21])))

axiom H107 : ((j21 <= b) -> (result20 = tab14))

axiom H108 : ((j21 <= b) -> (tab16 = o23))

axiom H109 : ((j21 <= b) -> ((o24 = (j21 + 1)) and in_range1((j21 + 1))))

axiom H110 : ((j21 <= b) -> (result21 = j21))

axiom H111 : ((j21 <= b) -> (j22 = o24))

axiom H112 : ((j21 <= b) -> ((o25 = (k13 + 1)) and in_range1((k13 + 1))))

axiom H113 : ((j21 <= b) -> (result22 = k13))

axiom H114 : ((j21 <= b) -> (k14 = o25))

axiom H115 : ((j21 <= b) -> ((((- 2147483648) <= 2147483647) ->
  in_range1(j23)) and (((- 2147483648) <= 2147483647) -> in_range1(k15))))

axiom H116 : ((j21 <= b) -> (result23 = temp___1621))

axiom H117 : ((j21 <= b) -> (temp___1622 = j23))

axiom H118 : ((j21 <= b) -> (result24 = temp___1631))

axiom H119 : ((j21 <= b) -> (temp___1632 = k15))

axiom H120 : ((j21 <= b) -> (not (j23 <= b)))

axiom H121 : ((j21 <= b) -> (k17 = k15))

axiom H122 : ((j21 <= b) -> (j25 = j23))

axiom H123 : ((j21 <= b) -> (tab19 = tab17))

axiom H124 : ((j21 <= b) -> (k18 = k15))

axiom H125 : ((j21 <= b) -> (j26 = j23))

axiom H126 : ((j21 <= b) -> (tab20 = tab17))

axiom H127 : ((j21 <= b) -> (k19 = k17))

axiom H128 : ((j21 <= b) -> (j27 = j25))

axiom H129 : ((j21 <= b) -> (tab21 = tab19))

axiom H130 : ((j21 <= b) -> (k20 = k18))

axiom H131 : ((j21 <= b) -> (j28 = j26))

axiom H132 : ((j21 <= b) -> (tab22 = tab20))

axiom H133 : ((not (j21 <= b)) -> (k19 = k13))

axiom H134 : ((not (j21 <= b)) -> (j27 = j21))

axiom H135 : ((not (j21 <= b)) -> (tab21 = tab14))

axiom H136 : ((not (j21 <= b)) -> (k20 = k13))

axiom H137 : ((not (j21 <= b)) -> (j28 = j21))

axiom H138 : ((not (j21 <= b)) -> (tab22 = tab15))

axiom H139 : (result28 = j27)

axiom H140 : (j29 = a)

axiom H141 : ((j29 <= b) -> (((temp___167 = j29) and
  ((temp___165 = tab21) and ((0 = temp___168) and ((((to_rep(o31) = j29) and
  ((((to_rep(tab__first) <= j29) and (j29 <= to_rep(tab__last))) and
  (o32 = j29)) and (o33 = (tab21[o32 <- o31])))) and ((result29 = tab21) and
  (tab23 = o33))) and ((((o34 = (j29 + 1)) and in_range1((j29 + 1))) and
  ((result30 = j29) and (j30 = o34))) and
  ((forall l8:int. (((a <= l8) and (l8 <= (j31 - 1))) ->
   (to_rep((tab24[l8])) = l8))) and ((((- 2147483648) <= 2147483647) ->
  in_range1(j31)) and (((result32 = temp___1681) and (temp___1682 = j31)) and
  (not (j31 <= b)))))))))) and (((j37 = j31) and (tab30 = tab24)) and
  ((j38 = j31) and (tab31 = tab24)))))

axiom H142 : ((j29 <= b) -> (j39 = j37))

axiom H143 : ((j29 <= b) -> (tab32 = tab30))

axiom H144 : ((j29 <= b) -> (j40 = j38))

axiom H145 : ((j29 <= b) -> (tab33 = tab31))

axiom H146 : ((not (j29 <= b)) -> (j39 = j29))

axiom H147 : ((not (j29 <= b)) -> (tab32 = tab21))

axiom H148 : ((not (j29 <= b)) -> (j40 = j29))

axiom H149 : ((not (j29 <= b)) -> (tab33 = tab22))

axiom H150 : (result35 = j39)

axiom H151 : (j41 = a)

axiom H152 : ((j41 <= b) -> (((temp___172 = j41) and
  ((temp___170 = tab32) and ((0 = temp___173) and ((((to_rep(o41) = j41) and
  ((((to_rep(tab__first) <= j41) and (j41 <= to_rep(tab__last))) and
  (o42 = j41)) and (o43 = (tab32[o42 <- o41])))) and ((result36 = tab32) and
  (tab34 = o43))) and ((((o44 = (j41 + 1)) and in_range1((j41 + 1))) and
  ((result37 = j41) and (j42 = o44))) and
  ((forall l8:int. (((a <= l8) and (l8 <= (j43 - 1))) ->
   (to_rep((tab35[l8])) = l8))) and ((((- 2147483648) <= 2147483647) ->
  in_range1(j43)) and (((result39 = temp___1731) and (temp___1732 = j43)) and
  (not (j43 <= b)))))))))) and (((j49 = j43) and (tab41 = tab35)) and
  ((j50 = j43) and (tab42 = tab35)))))

axiom H153 : ((j41 <= b) -> (j51 = j49))

axiom H154 : ((j41 <= b) -> (tab43 = tab41))

axiom H155 : ((j41 <= b) -> (j52 = j50))

axiom H156 : ((j41 <= b) -> (tab44 = tab42))

axiom H157 : ((not (j41 <= b)) -> (j51 = j41))

axiom H158 : ((not (j41 <= b)) -> (tab43 = tab32))

axiom H159 : ((not (j41 <= b)) -> (j52 = j41))

axiom H160 : ((not (j41 <= b)) -> (tab44 = tab33))

axiom H161 : (result42 = j51)

axiom H162 : (j53 = a)

axiom H163 : (result43 = k19)

axiom H164 : (k21 = 0)

axiom H165 : ((j53 <= b) -> (temp___178 = k21))

axiom H166 : ((j53 <= b) -> (temp___177 = j53))

axiom H167 : ((j53 <= b) -> (temp___175 = tab43))

axiom H168 : ((j53 <= b) -> (0 = temp___180))

axiom H169 : ((j53 <= b) -> (0 = temp___179))

axiom H170 : ((j53 <= b) -> (to_rep(o51) = j53))

axiom H171 : ((j53 <= b) -> ((to_rep(tab__first) <= j53) and
  (j53 <= to_rep(tab__last))))

axiom H172 : ((j53 <= b) -> (o52 = j53))

axiom H173 : ((j53 <= b) -> (o53 = (tab43[o52 <- o51])))

axiom H174 : ((j53 <= b) -> (result44 = tab43))

axiom H175 : ((j53 <= b) -> (tab45 = o53))

axiom H176 : ((j53 <= b) -> ((o54 = (j53 + 1)) and in_range1((j53 + 1))))

axiom H177 : ((j53 <= b) -> (result45 = j53))

axiom H178 : ((j53 <= b) -> (j54 = o54))

axiom H179 : ((j53 <= b) -> ((o55 = (k21 + 1)) and in_range1((k21 + 1))))

axiom H180 : ((j53 <= b) -> (result46 = k21))

axiom H181 : ((j53 <= b) -> (k22 = o55))

axiom H182 : ((j53 <= b) -> (j55 = (a + k23)))

axiom H183 : ((j53 <= b) ->
  (forall l8:int. (((a <= l8) and (l8 <= (j55 - 1))) ->
  (to_rep((tab46[l8])) = l8))))

axiom H184 : ((j53 <= b) ->
  (forall l8:int. (((a <= l8) and (l8 <= ((a + k23) - 1))) ->
  (to_rep((tab46[l8])) = l8))))

axiom H185 : ((j53 <= b) -> ((((- 2147483648) <= 2147483647) ->
  in_range1(j55)) and (((- 2147483648) <= 2147483647) -> in_range1(k23))))

axiom H186 : ((j53 <= b) -> (result49 = temp___1791))

axiom H187 : ((j53 <= b) -> (temp___1792 = j55))

axiom H188 : ((j53 <= b) -> (result50 = temp___1801))

axiom H189 : ((j53 <= b) -> (temp___1802 = k23))

axiom H190 : ((j53 <= b) -> (not (j55 <= b)))

axiom H191 : ((j53 <= b) -> (k27 = k23))

axiom H192 : ((j53 <= b) -> (j59 = j55))

axiom H193 : ((j53 <= b) -> (tab50 = tab46))

axiom H194 : ((j53 <= b) -> (k28 = k23))

axiom H195 : ((j53 <= b) -> (j60 = j55))

axiom H196 : ((j53 <= b) -> (tab51 = tab46))

axiom H197 : ((j53 <= b) -> (k29 = k27))

axiom H198 : ((j53 <= b) -> (j61 = j59))

axiom H199 : ((j53 <= b) -> (tab52 = tab50))

axiom H200 : ((j53 <= b) -> (k30 = k28))

axiom H201 : ((j53 <= b) -> (j62 = j60))

axiom H202 : ((j53 <= b) -> (tab53 = tab51))

axiom H203 : ((not (j53 <= b)) -> (k29 = k21))

axiom H204 : ((not (j53 <= b)) -> (j61 = j53))

axiom H205 : ((not (j53 <= b)) -> (tab52 = tab43))

axiom H206 : ((not (j53 <= b)) -> (k30 = k21))

axiom H207 : ((not (j53 <= b)) -> (j62 = j53))

axiom H208 : ((not (j53 <= b)) -> (tab53 = tab44))

axiom H209 : (result54 = j61)

axiom H210 : (j63 = a)

axiom H211 : (result55 = k29)

axiom H212 : (k31 = 0)

axiom H213 : (j63 <= b)

axiom H214 : (to_rep(o68) = j63)

 (* File "system.ads", line 1, characters 0-0 *)
goal WP_parameter_def : (to_rep(tab__first) <= j63)
