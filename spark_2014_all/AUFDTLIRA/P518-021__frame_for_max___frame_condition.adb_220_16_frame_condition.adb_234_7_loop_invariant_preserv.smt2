(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range2 temp___expr_33)))
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort positive 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (positive positive) Bool)
(declare-const dummy2 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range3 temp___expr_39)))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__frame_condition__cell__value natural) (rec__frame_condition__cell__max_left natural) (rec__frame_condition__cell__max_right natural)))))
(define-fun us_split_fields_Value__projection ((a us_split_fields)) natural (rec__frame_condition__cell__value a))
(define-fun us_split_fields_Max_Left__projection ((a us_split_fields)) natural (rec__frame_condition__cell__max_left a))
(define-fun us_split_fields_Max_Right__projection ((a us_split_fields)) natural (rec__frame_condition__cell__max_right a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (and (= (to_rep (rec__frame_condition__cell__value (us_split_fields1 a))) (to_rep (rec__frame_condition__cell__value (us_split_fields1 b)))) (= (to_rep (rec__frame_condition__cell__max_left (us_split_fields1 a))) (to_rep (rec__frame_condition__cell__max_left (us_split_fields1 b))))) (= (to_rep (rec__frame_condition__cell__max_right (us_split_fields1 a))) (to_rep (rec__frame_condition__cell__max_right (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const frame_condition__cell__value__first__bit Int)
(declare-const frame_condition__cell__value__last__bit Int)
(declare-const frame_condition__cell__value__position Int)
(assert (<= 0 frame_condition__cell__value__first__bit))
(assert (< frame_condition__cell__value__first__bit frame_condition__cell__value__last__bit))
(assert (<= 0 frame_condition__cell__value__position))
(declare-const frame_condition__cell__max_left__first__bit Int)
(declare-const frame_condition__cell__max_left__last__bit Int)
(declare-const frame_condition__cell__max_left__position Int)
(assert (<= 0 frame_condition__cell__max_left__first__bit))
(assert (< frame_condition__cell__max_left__first__bit frame_condition__cell__max_left__last__bit))
(assert (<= 0 frame_condition__cell__max_left__position))
(declare-const frame_condition__cell__max_right__first__bit Int)
(declare-const frame_condition__cell__max_right__last__bit Int)
(declare-const frame_condition__cell__max_right__position Int)
(assert (<= 0 frame_condition__cell__max_right__first__bit))
(assert (< frame_condition__cell__max_right__first__bit frame_condition__cell__max_right__last__bit))
(assert (<= 0 frame_condition__cell__max_right__position))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((cell__ref (mk_cell__ref (cell__content us_rep)))))
(define-fun cell__ref___projection ((a cell__ref)) us_rep (cell__content a))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int us_rep))))))
(declare-fun slide ((Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int us_rep))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int us_rep) Int Int (Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (us_rep Int) (Array Int us_rep))
(assert (forall ((v us_rep)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq1 ((a (Array Int us_rep)) (a__first Int) (a__last Int) (b (Array Int us_rep)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (bool_eq (select a temp___idx_132) (select b (+ (- b__first a__first) temp___idx_132))) true)))) true false))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (bool_eq (select a temp___idx_132) (select b (+ (- b__first a__first) temp___idx_132))) true))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range3 low) (in_range3 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int us_rep)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int us_rep) (elts a))
(define-fun of_array ((a (Array Int us_rep)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int us_rep)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int us_rep)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int us_rep)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t) (y us_t)) Bool (bool_eq1 (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq4 (us_t us_t) Bool)
(declare-const dummy4 us_t)
(declare-datatypes () ((cell_array__ref (mk_cell_array__ref (cell_array__content us_t)))))
(define-fun cell_array__ref___projection ((a cell_array__ref)) us_t (cell_array__content a))
(declare-const a__first integer)
(declare-const a__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort max_kind 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (max_kind max_kind) Bool)
(declare-const dummy5 max_kind)
(declare-datatypes () ((max_kind__ref (mk_max_kind__ref (max_kind__content max_kind)))))
(define-fun max_kind__ref___projection ((a max_kind__ref)) max_kind (max_kind__content a))
(define-fun dynamic_invariant2 ((temp___expr_220 Int) (temp___is_init_217 Bool) (temp___skip_constant_218 Bool) (temp___do_toplevel_219 Bool)) Bool (=> (or (= temp___is_init_217 true) (<= 0 1)) (in_range4 temp___expr_220)))
(declare-const c164b Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const not_kind Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const first2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const last2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const c166b Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const c198b Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const c201b Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const not_kind1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const first3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const last3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const c203b Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(declare-const c235b Int)
(declare-const attr__ATTRIBUTE_ADDRESS20 Int)
(define-fun dynamic_invariant3 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant4 ((temp___expr_145 us_t) (temp___is_init_142 Bool) (temp___skip_constant_143 Bool) (temp___do_toplevel_144 Bool)) Bool (=> (not (= temp___skip_constant_143 true)) (dynamic_property 1 2147483647 (first1 temp___expr_145) (last1 temp___expr_145))))
(declare-const a (Array Int us_rep))
(declare-const k Int)
(declare-const max Int)
(declare-const c167b Int)
(declare-const c168b Int)
(declare-const k1 Int)
(declare-const max1 Int)
(declare-const c204b Int)
(declare-const c205b Int)
(declare-const o Int)
(declare-const frame_condition__update_max_3__B165b__first__assume Int)
(declare-const frame_condition__update_max_3__B165b__last__assume Int)
(declare-const temp___253 Int)
(declare-const temp___249 Int)
(declare-const temp___251 (Array Int us_rep))
(declare-const temp___248 Int)
(declare-const temp___247 Int)
(declare-const temp___254 (Array Int us_rep))
(declare-const o1 Int)
(declare-const o2 natural)
(declare-const o3 natural)
(declare-const o4 natural)
(declare-const o5 natural)
(declare-const o6 natural)
(declare-const o7 natural)
(declare-const o8 natural)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 natural)
(declare-const o12 natural)
(declare-const o13 natural)
(declare-const o14 natural)
(declare-const o15 natural)
(declare-const o16 natural)
(declare-const o17 natural)
(declare-const o18 Int)
(declare-const o19 natural)
(declare-const o20 natural)
(declare-const o21 natural)
(declare-const o22 natural)
(declare-const o23 natural)
(declare-const o24 natural)
(declare-const o25 natural)
(declare-const o26 Int)
(declare-const o27 (Array Int us_rep))
(declare-const frame_condition__update_max_3__B202b__first__assume Int)
(declare-const frame_condition__update_max_3__B202b__last__assume Int)
(declare-const o28 Int)
(declare-const o29 us_rep)
(declare-const o30 us_split_fields)
(declare-const o31 natural)
(declare-const o32 Int)
(declare-const o33 Int)
(declare-const o34 us_rep)
(declare-const o35 us_split_fields)
(declare-const o36 natural)
(declare-const o37 Int)
(declare-const o38 natural)
(declare-const o39 us_split_fields)
(declare-const o40 us_rep)
(declare-const o41 Int)
(declare-const o42 (Array Int us_rep))
(declare-const o43 natural)
(declare-const o44 us_split_fields)
(declare-const o45 us_rep)
(declare-const o46 Int)
(declare-const o47 (Array Int us_rep))
(declare-const o48 Int)
(declare-const o49 Int)
(declare-const o50 Int)
(declare-const o51 us_rep)
(declare-const o52 us_split_fields)
(declare-const o53 natural)
(declare-const o54 Int)
(declare-const o55 Int)
(declare-const o56 us_rep)
(declare-const o57 us_split_fields)
(declare-const o58 natural)
(declare-const o59 Int)
(declare-const o60 natural)
(declare-const o61 us_split_fields)
(declare-const o62 us_rep)
(declare-const o63 Int)
(declare-const o64 (Array Int us_rep))
(declare-const o65 natural)
(declare-const o66 us_split_fields)
(declare-const o67 us_rep)
(declare-const o68 Int)
(declare-const o69 (Array Int us_rep))
(declare-const result Bool)
(declare-const result1 int__ref)
(declare-const k2 Int)
(declare-const result2 int__ref)
(declare-const max2 Int)
(declare-const result3 Bool)
(declare-const result4 int__ref)
(declare-const max3 Int)
(declare-const result5 int__ref)
(declare-const c167b1 Int)
(declare-const result6 int__ref)
(declare-const c168b1 Int)
(declare-const result7 map__ref)
(declare-const a1 (Array Int us_rep))
(declare-const a2 (Array Int us_rep))
(declare-const k3 Int)
(declare-const max4 Int)
(declare-const c167b2 Int)
(declare-const c168b2 Int)
(declare-const k4 int__ref)
(declare-const k5 Int)
(declare-const a3 map__ref)
(declare-const k6 int__ref)
(declare-const max5 int__ref)
(declare-const c167b3 int__ref)
(declare-const c168b3 int__ref)
(declare-const a4 (Array Int us_rep))
(declare-const k7 Int)
(declare-const max6 Int)
(declare-const c167b4 Int)
(declare-const c168b4 Int)
(declare-const a5 map__ref)
(declare-const k8 int__ref)
(declare-const max7 int__ref)
(declare-const c167b5 int__ref)
(declare-const c168b5 int__ref)
(declare-const a6 (Array Int us_rep))
(declare-const k9 Int)
(declare-const max8 Int)
(declare-const c167b6 Int)
(declare-const c168b6 Int)
(declare-const result8 int__ref)
(declare-const k10 Int)
(declare-const result9 int__ref)
(declare-const max9 Int)
(declare-const result10 Bool)
(declare-const result11 int__ref)
(declare-const max10 Int)
(declare-const max11 int__ref)
(declare-const max12 Int)
(declare-const result12 int__ref)
(declare-const c204b1 Int)
(declare-const result13 int__ref)
(declare-const c205b1 Int)
(declare-const result14 map__ref)
(declare-const a7 (Array Int us_rep))
(declare-const result15 map__ref)
(declare-const a8 (Array Int us_rep))
(declare-const a9 map__ref)
(declare-const a10 (Array Int us_rep))
(declare-const a11 (Array Int us_rep))
(declare-const k11 Int)
(declare-const max13 Int)
(declare-const c204b2 Int)
(declare-const c205b2 Int)
(declare-const result16 int__ref)
(declare-const k12 Int)
(declare-const result17 int__ref)
(declare-const k13 Int)
(declare-const k14 int__ref)
(declare-const k15 Int)
(declare-const result18 Bool)
(declare-const result19 int__ref)
(declare-const max14 Int)
(declare-const max15 int__ref)
(declare-const max16 Int)
(declare-const result20 int__ref)
(declare-const c204b3 Int)
(declare-const result21 int__ref)
(declare-const c205b3 Int)
(declare-const result22 map__ref)
(declare-const a12 (Array Int us_rep))
(declare-const result23 map__ref)
(declare-const a13 (Array Int us_rep))
(declare-const a14 map__ref)
(declare-const a15 (Array Int us_rep))
(declare-const a16 map__ref)
(declare-const k16 int__ref)
(declare-const max17 int__ref)
(declare-const c204b4 int__ref)
(declare-const c205b4 int__ref)
(declare-const a17 (Array Int us_rep))
(declare-const k17 Int)
(declare-const max18 Int)
(declare-const c204b5 Int)
(declare-const c205b5 Int)
(assert (dynamic_property 1 2147483647 (to_rep1 a__first) (to_rep1 a__last)))
(assert (=> (<= (to_rep1 a__first) (to_rep1 a__last)) (= o (+ (- (to_rep1 a__last) (to_rep1 a__first)) 1))))
(assert (=> (not (<= (to_rep1 a__first) (to_rep1 a__last))) (= o 0)))
(assert (= result (ite (= o 0) true false)))
(assert (not (= result true)))
(assert (in_range4 c164b))
(assert (in_range4 not_kind))
(assert (and (= frame_condition__update_max_3__B165b__first__assume (to_rep1 a__first)) (in_range3 (to_rep1 a__first))))
(assert (= frame_condition__update_max_3__B165b__first__assume first2))
(assert (in_range3 first2))
(assert (and (= frame_condition__update_max_3__B165b__last__assume (to_rep1 a__last)) (in_range3 (to_rep1 a__last))))
(assert (= frame_condition__update_max_3__B165b__last__assume last2))
(assert (in_range3 last2))
(assert (= result1 (mk_int__ref k)))
(assert (= k2 first2))
(assert (in_range3 k2))
(assert (= result2 (mk_int__ref max)))
(assert (= max2 0))
(assert (in_range2 max2))
(assert (= temp___253 max2))
(assert (= temp___249 k2))
(assert (= temp___251 a))
(assert (= temp___248 c168b))
(assert (= temp___247 c167b))
(assert (= temp___254 a))
(assert (and (<= (to_rep1 a__first) k2) (<= k2 (to_rep1 a__last))))
(assert (= o1 k2))
(assert (= (mk___rep (mk___split_fields o2 o3 o4)) (select a o1)))
(assert (= o2 o5))
(assert (= o3 o6))
(assert (= o4 o7))
(assert (= o8 o5))
(assert (= o9 (to_rep o8)))
(assert (= result3 (ite (< max2 o9) true false)))
(assert (=> (= result3 true) (and (<= (to_rep1 a__first) k2) (<= k2 (to_rep1 a__last)))))
(assert (=> (= result3 true) (= o10 k2)))
(assert (=> (= result3 true) (= (mk___rep (mk___split_fields o11 o12 o13)) (select a o10))))
(assert (=> (= result3 true) (= o11 o14)))
(assert (=> (= result3 true) (= o12 o15)))
(assert (=> (= result3 true) (= o13 o16)))
(assert (=> (= result3 true) (= o17 o14)))
(assert (=> (= result3 true) (= o18 (to_rep o17))))
(assert (=> (= result3 true) (= result4 (mk_int__ref max2))))
(assert (=> (= result3 true) (= max3 o18)))
(assert (=> (not (= result3 true)) (= max3 max2)))
(assert (in_range4 c166b))
(assert (= result5 (mk_int__ref c167b)))
(assert (= c167b1 k2))
(assert (in_range3 c167b1))
(assert (= result6 (mk_int__ref c168b)))
(assert (= c168b1 max3))
(assert (in_range2 c168b1))
(assert (= (to_rep o19) c168b1))
(assert (= (rec__frame_condition__cell__value (us_split_fields1 (select a c167b1))) o20))
(assert (= o19 o21))
(assert (= (rec__frame_condition__cell__max_right (us_split_fields1 (select a c167b1))) o22))
(assert (= o23 o20))
(assert (= o24 o21))
(assert (= o25 o22))
(assert (and (<= (to_rep1 a__first) c167b1) (<= c167b1 (to_rep1 a__last))))
(assert (= o26 c167b1))
(assert (= o27 (store a o26 (mk___rep (mk___split_fields o23 o24 o25)))))
(assert (= result7 (mk_map__ref a)))
(assert (= a1 o27))
(assert (and (<= (to_rep1 a__first) k3) (<= k3 (to_rep1 a__last))))
(assert (and (forall ((i Int)) (=> (and (<= first2 i) (<= i k3)) (<= (to_rep (rec__frame_condition__cell__value (us_split_fields1 (select a2 i)))) max4))) (forall ((i Int)) (=> (and (<= k3 i) (<= i first2)) (<= (to_rep (rec__frame_condition__cell__value (us_split_fields1 (select a2 i)))) max4)))))
(assert (forall ((i Int)) (=> (and (<= (to_rep1 a__first) i) (<= i k3)) (forall ((j Int)) (=> (and (<= i j) (<= j k3)) (<= (to_rep (rec__frame_condition__cell__value (us_split_fields1 (select a2 i)))) (to_rep (rec__frame_condition__cell__max_left (us_split_fields1 (select a2 j))))))))))
(assert (and (and (and (and (=> (<= 1 2147483647) (in_range3 c167b2)) (=> (<= 0 2147483647) (in_range2 c168b2))) (=> (<= 1 2147483647) (in_range3 k3))) (forall ((temp___252 Int)) (=> (and (<= (to_rep1 a__first) temp___252) (<= temp___252 (to_rep1 a__last))) (= (rec__frame_condition__cell__value (us_split_fields1 (select a2 temp___252))) (rec__frame_condition__cell__value (us_split_fields1 (select temp___251 temp___252))))))) (=> (<= 0 2147483647) (in_range2 max4))))
(assert (= k4 (mk_int__ref k3)))
(assert (= k5 k3))
(assert (= k3 last2))
(assert (= c168b3 (mk_int__ref c168b2)))
(assert (= c167b3 (mk_int__ref c167b2)))
(assert (= max5 (mk_int__ref max4)))
(assert (= k6 k4))
(assert (= a3 (mk_map__ref a2)))
(assert (= c168b4 c168b2))
(assert (= c167b4 c167b2))
(assert (= max6 max4))
(assert (= k7 k5))
(assert (= a4 a2))
(assert (= c168b5 c168b3))
(assert (= c167b5 c167b3))
(assert (= max7 max5))
(assert (= k8 k6))
(assert (= a5 a3))
(assert (= c168b6 c168b4))
(assert (= c167b6 c167b4))
(assert (= max8 max6))
(assert (= k9 k7))
(assert (= a6 a4))
(assert (in_range4 c201b))
(assert (in_range4 not_kind1))
(assert (=> (= 1 0) (and (= frame_condition__update_max_3__B202b__first__assume (to_rep1 a__first)) (in_range3 (to_rep1 a__first)))))
(assert (=> (not (= 1 0)) (and (= frame_condition__update_max_3__B202b__first__assume (to_rep1 a__last)) (in_range3 (to_rep1 a__last)))))
(assert (= frame_condition__update_max_3__B202b__first__assume first3))
(assert (in_range3 first3))
(assert (=> (= 1 0) (and (= frame_condition__update_max_3__B202b__last__assume (to_rep1 a__last)) (in_range3 (to_rep1 a__last)))))
(assert (=> (not (= 1 0)) (and (= frame_condition__update_max_3__B202b__last__assume (to_rep1 a__first)) (in_range3 (to_rep1 a__first)))))
(assert (= frame_condition__update_max_3__B202b__last__assume last3))
(assert (in_range3 last3))
(assert (= result8 (mk_int__ref k1)))
(assert (= k10 first3))
(assert (in_range3 k10))
(assert (= result9 (mk_int__ref max1)))
(assert (= max9 0))
(assert (in_range2 max9))
(assert (and (<= (to_rep1 a__first) k10) (<= k10 (to_rep1 a__last))))
(assert (= o28 k10))
(assert (= o29 (select (map__content a5) o28)))
(assert (= o30 (us_split_fields1 o29)))
(assert (= o31 (rec__frame_condition__cell__value o30)))
(assert (= o32 (to_rep o31)))
(assert (= result10 (ite (< max9 o32) true false)))
(assert (=> (= result10 true) (and (<= (to_rep1 a__first) k10) (<= k10 (to_rep1 a__last)))))
(assert (=> (= result10 true) (= o33 k10)))
(assert (=> (= result10 true) (= o34 (select (map__content a5) o33))))
(assert (=> (= result10 true) (= o35 (us_split_fields1 o34))))
(assert (=> (= result10 true) (= o36 (rec__frame_condition__cell__value o35))))
(assert (=> (= result10 true) (= o37 (to_rep o36))))
(assert (=> (= result10 true) (= result11 (mk_int__ref max9))))
(assert (=> (= result10 true) (= max10 o37)))
(assert (=> (= result10 true) (= max11 (mk_int__ref max10))))
(assert (=> (= result10 true) (= max12 max10)))
(assert (=> (not (= result10 true)) (= max11 (mk_int__ref max9))))
(assert (=> (not (= result10 true)) (= max12 max9)))
(assert (in_range4 c203b))
(assert (= result12 (mk_int__ref c204b)))
(assert (= c204b1 k10))
(assert (in_range3 c204b1))
(assert (= result13 (mk_int__ref c205b)))
(assert (= c205b1 (int__content max11)))
(assert (in_range2 c205b1))
(assert (=> (= 1 0) (= (to_rep o38) c205b1)))
(assert (=> (= 1 0) (= o39 (mk___split_fields (rec__frame_condition__cell__value (us_split_fields1 (select (map__content a5) c204b1))) o38 (rec__frame_condition__cell__max_right (us_split_fields1 (select (map__content a5) c204b1)))))))
(assert (=> (= 1 0) (= o40 (mk___rep o39))))
(assert (=> (= 1 0) (and (<= (to_rep1 a__first) c204b1) (<= c204b1 (to_rep1 a__last)))))
(assert (=> (= 1 0) (= o41 c204b1)))
(assert (=> (= 1 0) (= o42 (store (map__content a5) o41 o40))))
(assert (=> (= 1 0) (= result14 a5)))
(assert (=> (= 1 0) (= a7 o42)))
(assert (=> (= 1 0) (= a9 (mk_map__ref a7))))
(assert (=> (= 1 0) (= a10 a7)))
(assert (=> (not (= 1 0)) (= (to_rep o43) c205b1)))
(assert (=> (not (= 1 0)) (= o44 (mk___split_fields (rec__frame_condition__cell__value (us_split_fields1 (select (map__content a5) c204b1))) (rec__frame_condition__cell__max_left (us_split_fields1 (select (map__content a5) c204b1))) o43))))
(assert (=> (not (= 1 0)) (= o45 (mk___rep o44))))
(assert (=> (not (= 1 0)) (and (<= (to_rep1 a__first) c204b1) (<= c204b1 (to_rep1 a__last)))))
(assert (=> (not (= 1 0)) (= o46 c204b1)))
(assert (=> (not (= 1 0)) (= o47 (store (map__content a5) o46 o45))))
(assert (=> (not (= 1 0)) (= result15 a5)))
(assert (=> (not (= 1 0)) (= a8 o47)))
(assert (=> (not (= 1 0)) (= a9 (mk_map__ref a8))))
(assert (=> (not (= 1 0)) (= a10 a8)))
(assert (and (<= (to_rep1 a__first) k11) (<= k11 (to_rep1 a__last))))
(assert (and (forall ((i Int)) (=> (and (<= first3 i) (<= i k11)) (<= (to_rep (rec__frame_condition__cell__value (us_split_fields1 (select a11 i)))) max13))) (forall ((i Int)) (=> (and (<= k11 i) (<= i first3)) (<= (to_rep (rec__frame_condition__cell__value (us_split_fields1 (select a11 i)))) max13)))))
(assert (forall ((i Int)) (=> (and (<= k11 i) (<= i (to_rep1 a__last))) (forall ((j Int)) (=> (and (<= i j) (<= j (to_rep1 a__last))) (<= (to_rep (rec__frame_condition__cell__value (us_split_fields1 (select a11 j)))) (to_rep (rec__frame_condition__cell__max_right (us_split_fields1 (select a11 i))))))))))
(assert (forall ((i Int)) (=> (and (<= (to_rep1 a__first) i) (<= i (to_rep1 a__last))) (= (to_rep (rec__frame_condition__cell__max_left (us_split_fields1 (select a11 i)))) (to_rep (rec__frame_condition__cell__max_left (us_split_fields1 (select (map__content a5) i))))))))
(assert (and (and (and (and (=> (<= 0 2147483647) (in_range2 max13)) (=> (<= 1 2147483647) (in_range3 c204b2))) (forall ((temp___261 Int)) (=> (and (<= (to_rep1 a__first) temp___261) (<= temp___261 (to_rep1 a__last))) (= (rec__frame_condition__cell__value (us_split_fields1 (select a11 temp___261))) (rec__frame_condition__cell__value (us_split_fields1 (select (map__content a5) temp___261))))))) (=> (<= 0 2147483647) (in_range2 c205b2))) (=> (<= 1 2147483647) (in_range3 k11))))
(assert (not (= k11 last3)))
(assert (in_range4 c235b))
(assert (=> (= 1 0) (and (= o48 (+ k11 1)) (in_range1 (+ k11 1)))))
(assert (=> (= 1 0) (= result16 (mk_int__ref k11))))
(assert (=> (= 1 0) (= k12 o48)))
(assert (=> (= 1 0) (= k14 (mk_int__ref k12))))
(assert (=> (= 1 0) (= k15 k12)))
(assert (=> (not (= 1 0)) (and (= o49 (- k11 1)) (in_range3 (- k11 1)))))
(assert (=> (not (= 1 0)) (= result17 (mk_int__ref k11))))
(assert (=> (not (= 1 0)) (= k13 o49)))
(assert (=> (not (= 1 0)) (= k14 (mk_int__ref k13))))
(assert (=> (not (= 1 0)) (= k15 k13)))
(assert (and (<= (to_rep1 a__first) (int__content k14)) (<= (int__content k14) (to_rep1 a__last))))
(assert (= o50 (int__content k14)))
(assert (= o51 (select a11 o50)))
(assert (= o52 (us_split_fields1 o51)))
(assert (= o53 (rec__frame_condition__cell__value o52)))
(assert (= o54 (to_rep o53)))
(assert (= result18 (ite (< max13 o54) true false)))
(assert (=> (= result18 true) (and (<= (to_rep1 a__first) (int__content k14)) (<= (int__content k14) (to_rep1 a__last)))))
(assert (=> (= result18 true) (= o55 (int__content k14))))
(assert (=> (= result18 true) (= o56 (select a11 o55))))
(assert (=> (= result18 true) (= o57 (us_split_fields1 o56))))
(assert (=> (= result18 true) (= o58 (rec__frame_condition__cell__value o57))))
(assert (=> (= result18 true) (= o59 (to_rep o58))))
(assert (=> (= result18 true) (= result19 (mk_int__ref max13))))
(assert (=> (= result18 true) (= max14 o59)))
(assert (=> (= result18 true) (= max15 (mk_int__ref max14))))
(assert (=> (= result18 true) (= max16 max14)))
(assert (=> (not (= result18 true)) (= max15 (mk_int__ref max13))))
(assert (=> (not (= result18 true)) (= max16 max13)))
(assert (in_range4 c203b))
(assert (= result20 (mk_int__ref c204b2)))
(assert (= c204b3 (int__content k14)))
(assert (in_range3 c204b3))
(assert (= result21 (mk_int__ref c205b2)))
(assert (= c205b3 (int__content max15)))
(assert (in_range2 c205b3))
(assert (=> (= 1 0) (= (to_rep o60) c205b3)))
(assert (=> (= 1 0) (= o61 (mk___split_fields (rec__frame_condition__cell__value (us_split_fields1 (select a11 c204b3))) o60 (rec__frame_condition__cell__max_right (us_split_fields1 (select a11 c204b3)))))))
(assert (=> (= 1 0) (= o62 (mk___rep o61))))
(assert (=> (= 1 0) (and (<= (to_rep1 a__first) c204b3) (<= c204b3 (to_rep1 a__last)))))
(assert (=> (= 1 0) (= o63 c204b3)))
(assert (=> (= 1 0) (= o64 (store a11 o63 o62))))
(assert (=> (= 1 0) (= result22 (mk_map__ref a11))))
(assert (=> (= 1 0) (= a12 o64)))
(assert (=> (= 1 0) (= a14 (mk_map__ref a12))))
(assert (=> (= 1 0) (= a15 a12)))
(assert (=> (not (= 1 0)) (= (to_rep o65) c205b3)))
(assert (=> (not (= 1 0)) (= o66 (mk___split_fields (rec__frame_condition__cell__value (us_split_fields1 (select a11 c204b3))) (rec__frame_condition__cell__max_left (us_split_fields1 (select a11 c204b3))) o65))))
(assert (=> (not (= 1 0)) (= o67 (mk___rep o66))))
(assert (=> (not (= 1 0)) (and (<= (to_rep1 a__first) c204b3) (<= c204b3 (to_rep1 a__last)))))
(assert (=> (not (= 1 0)) (= o68 c204b3)))
(assert (=> (not (= 1 0)) (= o69 (store a11 o68 o67))))
(assert (=> (not (= 1 0)) (= result23 (mk_map__ref a11))))
(assert (=> (not (= 1 0)) (= a13 o69)))
(assert (=> (not (= 1 0)) (= a14 (mk_map__ref a13))))
(assert (=> (not (= 1 0)) (= a15 a13)))
(assert (= c205b4 (mk_int__ref c205b3)))
(assert (= c204b4 (mk_int__ref c204b3)))
(assert (= max17 max15))
(assert (= k16 k14))
(assert (= a16 a14))
(assert (= c205b5 c205b3))
(assert (= c204b5 c204b3))
(assert (= max18 max16))
(assert (= k17 k15))
(assert (= a17 a15))
(declare-const i Int)
(assert (<= (to_rep1 a__first) i))
(assert (<= i (to_rep1 a__last)))
(assert (not (= (to_rep (rec__frame_condition__cell__max_left (us_split_fields1 (select (map__content a16) i)))) (to_rep (rec__frame_condition__cell__max_left (us_split_fields1 (select (map__content a5) i)))))))
(check-sat)
(exit)
