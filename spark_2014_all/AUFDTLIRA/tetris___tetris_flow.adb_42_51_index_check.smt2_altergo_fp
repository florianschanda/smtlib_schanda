(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type cell

predicate in_range1(x: int) = ((0 <= x) and (x <= 7))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : cell, cell -> bool

logic dummy : cell

type cell__ref = { cell__content : cell
}

function cell__ref___projection(a: cell__ref) : cell = (a).cell__content

logic to_rep : cell -> int

logic of_rep : int -> cell

axiom inversion_axiom : (forall x:cell [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:cell [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type shape

predicate in_range2(x: int) = ((1 <= x) and (x <= 7))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : shape, shape -> bool

logic dummy1 : shape

type shape__ref = { shape__content : shape
}

function shape__ref___projection(a: shape__ref) : shape = (a).shape__content

logic to_rep1 : shape -> int

logic of_rep1 : int -> shape

axiom inversion_axiom1 :
  (forall x:shape [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:shape [to_rep1(x)]. in_range2(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range2(x) ->
  (to_rep1(of_rep1(x)) = x)))

type three_shape

predicate in_range3(x: int) = ((3 <= x) and (x <= 7))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : three_shape, three_shape -> bool

logic dummy2 : three_shape

type three_shape__ref = { three_shape__content : three_shape
}

function three_shape__ref___projection(a: three_shape__ref) : three_shape =
  (a).three_shape__content

type x_coord

predicate in_range4(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : x_coord, x_coord -> bool

logic dummy3 : x_coord

type x_coord__ref = { x_coord__content : x_coord
}

function x_coord__ref___projection(a: x_coord__ref) : x_coord =
  (a).x_coord__content

type y_coord

predicate in_range5(x: int) = ((1 <= x) and (x <= 50))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq4 : y_coord, y_coord -> bool

logic dummy4 : y_coord

type y_coord__ref = { y_coord__content : y_coord
}

function y_coord__ref___projection(a: y_coord__ref) : y_coord =
  (a).y_coord__content

type map__ref = { map__content : (int,cell) farray
}

logic slide : (int,cell) farray, int, int -> (int,cell) farray

axiom slide_eq :
  (forall a:(int,cell) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,cell) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq7 : (int,cell) farray, int, int, (int,cell) farray, int,
  int -> bool

axiom bool_eq_def6 :
  (forall a:(int,cell) farray. forall a__first:int. forall a__last:int.
  forall b:(int,cell) farray. forall b__first:int. forall b__last:int
  [bool_eq7(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_154:int. ((((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) and
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))) or
  (not ((a__first <= temp___idx_154) and (temp___idx_154 <= a__last)))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)]))))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,cell) farray. forall b:(int,cell) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))))))))

logic dummy5 : (int,cell) farray

logic value__size : int

logic object__size : (int,cell) farray -> int

logic value__component__size : int

logic object__component__size : (int,cell) farray -> int

logic value__alignment : int

logic object__alignment : (int,cell) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,cell) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,cell) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,cell) farray. (0 <= object__alignment(a)))

logic user_eq5 : (int,cell) farray, (int,cell) farray -> bool

type map__ref1 = { map__content1 : (int,(int,cell) farray) farray
}

logic slide1 : (int,(int,cell) farray) farray, int,
  int -> (int,(int,cell) farray) farray

axiom slide_eq1 :
  (forall a:(int,(int,cell) farray) farray.
  (forall first:int [slide1(a, first, first)]. (slide1(a, first, first) = a)))

axiom slide_def1 :
  (forall a:(int,(int,cell) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq8 : (int,(int,cell) farray) farray, int, int,
  (int,(int,cell) farray) farray, int, int -> bool

axiom bool_eq_def7 :
  (forall a:(int,(int,cell) farray) farray. forall a__first:int.
  forall a__last:int. forall b:(int,(int,cell) farray) farray.
  forall b__first:int. forall b__last:int [bool_eq8(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_155:int. ((((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) and (bool_eq7((a[temp___idx_155]), 1, 10,
  (b[((b__first - a__first) + temp___idx_155)]), 1, 10) = true)) or
  (not ((a__first <= temp___idx_155) and (temp___idx_155 <= a__last)))))) ->
  (bool_eq8(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq7((a[temp___idx_155]), 1, 10,
  (b[((b__first - a__first) + temp___idx_155)]), 1, 10) = true))))) ->
  (bool_eq8(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,(int,cell) farray) farray.
  forall b:(int,(int,cell) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq7((a[temp___idx_155]), 1, 10,
  (b[((b__first - a__first) + temp___idx_155)]), 1, 10) = true)))))))

logic attr__ATTRIBUTE_ADDRESS : int

type px_coord

predicate in_range6(x: int) = (((- 1) <= x) and (x <= 9))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : px_coord, px_coord -> bool

logic dummy6 : px_coord

type px_coord__ref = { px_coord__content : px_coord
}

function px_coord__ref___projection(a: px_coord__ref) : px_coord =
  (a).px_coord__content

logic to_rep2 : px_coord -> int

logic of_rep2 : int -> px_coord

axiom inversion_axiom2 :
  (forall x:px_coord [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:px_coord [to_rep2(x)]. in_range6(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range6(x) ->
  (to_rep2(of_rep2(x)) = x)))

type py_coord

predicate in_range7(x: int) = (((- 1) <= x) and (x <= 49))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq7 : py_coord, py_coord -> bool

logic dummy7 : py_coord

type py_coord__ref = { py_coord__content : py_coord
}

function py_coord__ref___projection(a: py_coord__ref) : py_coord =
  (a).py_coord__content

logic to_rep3 : py_coord -> int

logic of_rep3 : int -> py_coord

axiom inversion_axiom3 :
  (forall x:py_coord [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 : (forall x:py_coord [to_rep3(x)]. in_range7(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range7(x) ->
  (to_rep3(of_rep3(x)) = x)))

type direction

predicate in_range8(x: int) = ((0 <= x) and (x <= 3))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq8 : direction, direction -> bool

logic dummy8 : direction

type direction__ref = { direction__content : direction
}

function direction__ref___projection(a: direction__ref) : direction =
  (a).direction__content

logic to_rep4 : direction -> int

logic of_rep4 : int -> direction

axiom inversion_axiom4 :
  (forall x:direction [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 : (forall x:direction [to_rep4(x)]. in_range8(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range8(x) ->
  (to_rep4(of_rep4(x)) = x)))

type us_split_fields = { rec__tetris_flow__piece__s : shape;
rec__tetris_flow__piece__d : direction; rec__tetris_flow__piece__x :
px_coord; rec__tetris_flow__piece__y : py_coord
}

function us_split_fields_S__projection(a: us_split_fields) : shape =
  (a).rec__tetris_flow__piece__s

function us_split_fields_D__projection(a: us_split_fields) : direction =
  (a).rec__tetris_flow__piece__d

function us_split_fields_X__projection(a: us_split_fields) : px_coord =
  (a).rec__tetris_flow__piece__x

function us_split_fields_Y__projection(a: us_split_fields) : py_coord =
  (a).rec__tetris_flow__piece__y

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq12 : us_rep, us_rep -> bool

axiom bool_eq_def11 :
  (forall a:us_rep. forall b:us_rep [bool_eq12(a, b)].
  ((((((to_rep1(((a).us_split_fields1).rec__tetris_flow__piece__s) = to_rep1(((b).us_split_fields1).rec__tetris_flow__piece__s)) and
  (to_rep4(((a).us_split_fields1).rec__tetris_flow__piece__d) = to_rep4(((b).us_split_fields1).rec__tetris_flow__piece__d))) and
  (to_rep2(((a).us_split_fields1).rec__tetris_flow__piece__x) = to_rep2(((b).us_split_fields1).rec__tetris_flow__piece__x))) and
  (to_rep3(((a).us_split_fields1).rec__tetris_flow__piece__y) = to_rep3(((b).us_split_fields1).rec__tetris_flow__piece__y))) ->
  (bool_eq12(a, b) = true)) and
  ((not ((((to_rep1(((a).us_split_fields1).rec__tetris_flow__piece__s) = to_rep1(((b).us_split_fields1).rec__tetris_flow__piece__s)) and
  (to_rep4(((a).us_split_fields1).rec__tetris_flow__piece__d) = to_rep4(((b).us_split_fields1).rec__tetris_flow__piece__d))) and
  (to_rep2(((a).us_split_fields1).rec__tetris_flow__piece__x) = to_rep2(((b).us_split_fields1).rec__tetris_flow__piece__x))) and
  (to_rep3(((a).us_split_fields1).rec__tetris_flow__piece__y) = to_rep3(((b).us_split_fields1).rec__tetris_flow__piece__y)))) ->
  (bool_eq12(a, b) = false))))

logic value__size1 : int

logic object__size1 : us_rep -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:shape. forall a1:direction. forall a2:px_coord.
  forall a3:py_coord. (0 <= object__size1({ us_split_fields1 = {
  rec__tetris_flow__piece__s = a; rec__tetris_flow__piece__d = a1;
  rec__tetris_flow__piece__x = a2; rec__tetris_flow__piece__y = a3 } })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:shape. forall a1:direction. forall a2:px_coord.
  forall a3:py_coord. (0 <= object__alignment1({ us_split_fields1 = {
  rec__tetris_flow__piece__s = a; rec__tetris_flow__piece__d = a1;
  rec__tetris_flow__piece__x = a2; rec__tetris_flow__piece__y = a3 } })))

logic tetris_flow__piece__s__first__bit : int

logic tetris_flow__piece__s__last__bit : int

logic tetris_flow__piece__s__position : int

axiom tetris_flow__piece__s__first__bit_axiom :
  (0 <= tetris_flow__piece__s__first__bit)

axiom tetris_flow__piece__s__last__bit_axiom :
  (tetris_flow__piece__s__first__bit <  tetris_flow__piece__s__last__bit)

axiom tetris_flow__piece__s__position_axiom :
  (0 <= tetris_flow__piece__s__position)

logic tetris_flow__piece__d__first__bit : int

logic tetris_flow__piece__d__last__bit : int

logic tetris_flow__piece__d__position : int

axiom tetris_flow__piece__d__first__bit_axiom :
  (0 <= tetris_flow__piece__d__first__bit)

axiom tetris_flow__piece__d__last__bit_axiom :
  (tetris_flow__piece__d__first__bit <  tetris_flow__piece__d__last__bit)

axiom tetris_flow__piece__d__position_axiom :
  (0 <= tetris_flow__piece__d__position)

logic tetris_flow__piece__x__first__bit : int

logic tetris_flow__piece__x__last__bit : int

logic tetris_flow__piece__x__position : int

axiom tetris_flow__piece__x__first__bit_axiom :
  (0 <= tetris_flow__piece__x__first__bit)

axiom tetris_flow__piece__x__last__bit_axiom :
  (tetris_flow__piece__x__first__bit <  tetris_flow__piece__x__last__bit)

axiom tetris_flow__piece__x__position_axiom :
  (0 <= tetris_flow__piece__x__position)

logic tetris_flow__piece__y__first__bit : int

logic tetris_flow__piece__y__last__bit : int

logic tetris_flow__piece__y__position : int

axiom tetris_flow__piece__y__first__bit_axiom :
  (0 <= tetris_flow__piece__y__first__bit)

axiom tetris_flow__piece__y__last__bit_axiom :
  (tetris_flow__piece__y__first__bit <  tetris_flow__piece__y__last__bit)

axiom tetris_flow__piece__y__position_axiom :
  (0 <= tetris_flow__piece__y__position)

logic user_eq9 : us_rep, us_rep -> bool

logic dummy9 : shape

logic dummy10 : direction

logic dummy11 : px_coord

logic dummy12 : py_coord

type piece__ref = { piece__content : us_rep
}

function piece__ref___projection(a: piece__ref) : us_rep = (a).piece__content

logic attr__ATTRIBUTE_ADDRESS1 : int

type map

type map__ref2 = { map__content2 : map
}

logic get : map, int, int -> bool

logic set : map, int, int, bool -> map

axiom Select_eq :
  (forall m:map.
  (forall i:int.
  (forall j:int.
  (forall a:bool [set(m, i, j, a)]. (get(set(m, i, j, a), i, j) = a)))))

axiom Select_neq :
  (forall m:map.
  (forall i:int. forall i2:int.
  (forall j:int. forall j2:int.
  (forall a:bool [get(set(m, i, j, a), i2, j2)| set(m, i, j, a), get(m, i2,
  j2)]. ((not ((i = i2) and (j = j2))) -> (get(set(m, i, j, a), i2,
  j2) = get(m, i2, j2)))))))

logic slide2 : map, int, int, int, int -> map

axiom slide_def2 :
  (forall a:map.
  (forall new_first:int. forall old_first:int.
  (forall new_first_2:int. forall old_first_2:int.
  (forall i:int.
  (forall j:int [get(slide2(a, old_first, new_first, old_first_2,
  new_first_2), i, j)]. (get(slide2(a, old_first, new_first, old_first_2,
  new_first_2), i, j) = get(a, (i - (new_first - old_first)),
  (j - (new_first_2 - old_first_2)))))))))

logic bool_eq13 : map, int, int, int, int, map, int, int, int, int -> bool

axiom bool_eq_def12 :
  (forall a:map. forall a__first:int. forall a__last:int.
  forall a__first_2:int. forall a__last_2:int. forall b:map.
  forall b__first:int. forall b__last:int. forall b__first_2:int.
  forall b__last_2:int [bool_eq13(a, a__first, a__last, a__first_2,
  a__last_2, b, b__first, b__last, b__first_2, b__last_2)].
  (((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (((a__first_2 <= a__last_2) and ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2)))) or
  ((not (a__first_2 <= a__last_2)) and (b__last_2 <  b__first_2)))) and
  (forall temp___idx_156:int. forall temp___idx_157:int.
  (((((a__first <= temp___idx_156) and (temp___idx_156 <= a__last)) and
  ((a__first_2 <= temp___idx_157) and (temp___idx_157 <= a__last_2))) and
  (get(a, temp___idx_156, temp___idx_157) = get(b,
  ((b__first - a__first) + temp___idx_156),
  ((b__first_2 - a__first_2) + temp___idx_157)))) or
  (not (((a__first <= temp___idx_156) and (temp___idx_156 <= a__last)) and
  ((a__first_2 <= temp___idx_157) and (temp___idx_157 <= a__last_2))))))) ->
  (bool_eq13(a, a__first, a__last, a__first_2, a__last_2, b, b__first,
  b__last, b__first_2, b__last_2) = true)) and
  ((not (((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (((a__first_2 <= a__last_2) -> ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2)))) and
  ((not (a__first_2 <= a__last_2)) -> (b__last_2 <  b__first_2)))) and
  (forall temp___idx_156:int. forall temp___idx_157:int.
  ((((a__first <= temp___idx_156) and (temp___idx_156 <= a__last)) and
  ((a__first_2 <= temp___idx_157) and (temp___idx_157 <= a__last_2))) ->
  (get(a, temp___idx_156, temp___idx_157) = get(b,
  ((b__first - a__first) + temp___idx_156),
  ((b__first_2 - a__first_2) + temp___idx_157))))))) -> (bool_eq13(a,
  a__first, a__last, a__first_2, a__last_2, b, b__first, b__last, b__first_2,
  b__last_2) = false))))

axiom bool_eq_rev2 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq13(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> (((((a__first <= a__last) ->
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (((a__first_2 <= a__last_2) -> ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2)))) and
  ((not (a__first_2 <= a__last_2)) -> (b__last_2 <  b__first_2)))) and
  (forall temp___idx_156:int. forall temp___idx_157:int.
  ((((a__first <= temp___idx_156) and (temp___idx_156 <= a__last)) and
  ((a__first_2 <= temp___idx_157) and (temp___idx_157 <= a__last_2))) ->
  (get(a, temp___idx_156, temp___idx_157) = get(b,
  ((b__first - a__first) + temp___idx_156),
  ((b__first_2 - a__first_2) + temp___idx_157)))))))))

logic dummy13 : map

logic value__size2 : int

logic object__size2 : map -> int

logic value__component__size1 : int

logic object__component__size1 : map -> int

logic value__alignment2 : int

logic object__alignment2 : map -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (forall a:map. (0 <= object__size2(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:map. (0 <= object__component__size1(a)))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 : (forall a:map. (0 <= object__alignment2(a)))

logic user_eq10 : map, map -> bool

type map__ref3 = { map__content3 : (int,map) farray
}

logic slide3 : (int,map) farray, int, int -> (int,map) farray

axiom slide_eq2 :
  (forall a:(int,map) farray.
  (forall first:int [slide3(a, first, first)]. (slide3(a, first, first) = a)))

axiom slide_def3 :
  (forall a:(int,map) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide3(a, old_first, new_first)[i])]. ((slide3(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq14 : (int,map) farray, int, int, (int,map) farray, int,
  int -> bool

axiom bool_eq_def13 :
  (forall a:(int,map) farray. forall a__first:int. forall a__last:int.
  forall b:(int,map) farray. forall b__first:int. forall b__last:int
  [bool_eq14(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_158:int. ((((a__first <= temp___idx_158) and
  (temp___idx_158 <= a__last)) and (bool_eq13((a[temp___idx_158]), 0, 3, 0,
  3, (b[((b__first - a__first) + temp___idx_158)]), 0, 3, 0, 3) = true)) or
  (not ((a__first <= temp___idx_158) and (temp___idx_158 <= a__last)))))) ->
  (bool_eq14(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_158:int. (((a__first <= temp___idx_158) and
  (temp___idx_158 <= a__last)) -> (bool_eq13((a[temp___idx_158]), 0, 3, 0, 3,
  (b[((b__first - a__first) + temp___idx_158)]), 0, 3, 0, 3) = true))))) ->
  (bool_eq14(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev3 :
  (forall a:(int,map) farray. forall b:(int,map) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq14(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_158:int. (((a__first <= temp___idx_158) and
  (temp___idx_158 <= a__last)) -> (bool_eq13((a[temp___idx_158]), 0, 3, 0, 3,
  (b[((b__first - a__first) + temp___idx_158)]), 0, 3, 0, 3) = true)))))))

logic possible_i_shapes : (int,map) farray

logic attr__ATTRIBUTE_ADDRESS2 : int

logic tetris_flow__possible_i_shapes__aggregate_def : map, map, map,
  map -> (int,map) farray

logic temp___165 : bool, bool, bool, bool, bool, bool, bool, bool, bool,
  bool, bool, bool, bool, bool, bool, bool -> map

logic temp___185 : bool, bool, bool, bool, bool, bool, bool, bool, bool,
  bool, bool, bool, bool, bool, bool, bool -> map

logic temp___205 : bool, bool, bool, bool, bool, bool, bool, bool, bool,
  bool, bool, bool, bool, bool, bool, bool -> map

logic temp___225 : bool, bool, bool, bool, bool, bool, bool, bool, bool,
  bool, bool, bool, bool, bool, bool, bool -> map

logic dummy14 : map

logic value__size3 : int

logic object__size3 : map -> int

logic value__component__size2 : int

logic object__component__size2 : map -> int

logic value__alignment3 : int

logic object__alignment3 : map -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (forall a:map. (0 <= object__size3(a)))

axiom value__component__size_axiom2 : (0 <= value__component__size2)

axiom object__component__size_axiom2 :
  (forall a:map. (0 <= object__component__size2(a)))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 : (forall a:map. (0 <= object__alignment3(a)))

logic user_eq11 : map, map -> bool

type map1

type map__ref4 = { map__content4 : map1
}

logic get1 : map1, int, int -> map

logic set1 : map1, int, int, map -> map1

axiom Select_eq1 :
  (forall m:map1.
  (forall i:int.
  (forall j:int.
  (forall a:map [set1(m, i, j, a)]. (get1(set1(m, i, j, a), i, j) = a)))))

axiom Select_neq1 :
  (forall m:map1.
  (forall i:int. forall i2:int.
  (forall j:int. forall j2:int.
  (forall a:map [get1(set1(m, i, j, a), i2, j2)| set1(m, i, j, a), get1(m,
  i2, j2)]. ((not ((i = i2) and (j = j2))) -> (get1(set1(m, i, j, a), i2,
  j2) = get1(m, i2, j2)))))))

logic slide4 : map1, int, int, int, int -> map1

axiom slide_def4 :
  (forall a:map1.
  (forall new_first:int. forall old_first:int.
  (forall new_first_2:int. forall old_first_2:int.
  (forall i:int.
  (forall j:int [get1(slide4(a, old_first, new_first, old_first_2,
  new_first_2), i, j)]. (get1(slide4(a, old_first, new_first, old_first_2,
  new_first_2), i, j) = get1(a, (i - (new_first - old_first)),
  (j - (new_first_2 - old_first_2)))))))))

logic bool_eq15 : map1, int, int, int, int, map1, int, int, int, int -> bool

axiom bool_eq_def14 :
  (forall a:map1. forall a__first:int. forall a__last:int.
  forall a__first_2:int. forall a__last_2:int. forall b:map1.
  forall b__first:int. forall b__last:int. forall b__first_2:int.
  forall b__last_2:int [bool_eq15(a, a__first, a__last, a__first_2,
  a__last_2, b, b__first, b__last, b__first_2, b__last_2)].
  (((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (((a__first_2 <= a__last_2) and ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2)))) or
  ((not (a__first_2 <= a__last_2)) and (b__last_2 <  b__first_2)))) and
  (forall temp___idx_245:int. forall temp___idx_246:int.
  (((((a__first <= temp___idx_245) and (temp___idx_245 <= a__last)) and
  ((a__first_2 <= temp___idx_246) and (temp___idx_246 <= a__last_2))) and
  (bool_eq13(get1(a, temp___idx_245, temp___idx_246), 0, 2, 0, 2, get1(b,
  ((b__first - a__first) + temp___idx_245),
  ((b__first_2 - a__first_2) + temp___idx_246)), 0, 2, 0, 2) = true)) or
  (not (((a__first <= temp___idx_245) and (temp___idx_245 <= a__last)) and
  ((a__first_2 <= temp___idx_246) and (temp___idx_246 <= a__last_2))))))) ->
  (bool_eq15(a, a__first, a__last, a__first_2, a__last_2, b, b__first,
  b__last, b__first_2, b__last_2) = true)) and
  ((not (((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (((a__first_2 <= a__last_2) -> ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2)))) and
  ((not (a__first_2 <= a__last_2)) -> (b__last_2 <  b__first_2)))) and
  (forall temp___idx_245:int. forall temp___idx_246:int.
  ((((a__first <= temp___idx_245) and (temp___idx_245 <= a__last)) and
  ((a__first_2 <= temp___idx_246) and (temp___idx_246 <= a__last_2))) ->
  (bool_eq13(get1(a, temp___idx_245, temp___idx_246), 0, 2, 0, 2, get1(b,
  ((b__first - a__first) + temp___idx_245),
  ((b__first_2 - a__first_2) + temp___idx_246)), 0, 2, 0, 2) = true))))) ->
  (bool_eq15(a, a__first, a__last, a__first_2, a__last_2, b, b__first,
  b__last, b__first_2, b__last_2) = false))))

axiom bool_eq_rev4 :
  (forall a:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq15(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> (((((a__first <= a__last) ->
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (((a__first_2 <= a__last_2) -> ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2)))) and
  ((not (a__first_2 <= a__last_2)) -> (b__last_2 <  b__first_2)))) and
  (forall temp___idx_245:int. forall temp___idx_246:int.
  ((((a__first <= temp___idx_245) and (temp___idx_245 <= a__last)) and
  ((a__first_2 <= temp___idx_246) and (temp___idx_246 <= a__last_2))) ->
  (bool_eq13(get1(a, temp___idx_245, temp___idx_246), 0, 2, 0, 2, get1(b,
  ((b__first - a__first) + temp___idx_245),
  ((b__first_2 - a__first_2) + temp___idx_246)), 0, 2, 0, 2) = true)))))))

logic possible_three_shapes : map1

logic attr__ATTRIBUTE_ADDRESS3 : int

logic tetris_flow__possible_three_shapes__aggregate_def : map, map, map, map,
  map, map, map, map, map, map, map, map, map, map, map, map, map, map, map,
  map -> map1

logic temp___270 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___283 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___296 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___309 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___322 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___335 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___348 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___361 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___374 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___387 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___400 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___413 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___426 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___439 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___452 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___465 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___478 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___491 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___504 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___517 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

axiom possible_i_shapes__def_axiom :
  (possible_i_shapes = tetris_flow__possible_i_shapes__aggregate_def(temp___165(of_int(0),
  of_int(0), of_int(0), of_int(0), of_int(1), of_int(1), of_int(1),
  of_int(1), of_int(0), of_int(0), of_int(0), of_int(0), of_int(0),
  of_int(0), of_int(0), of_int(0)), temp___185(of_int(0), of_int(0),
  of_int(1), of_int(0), of_int(0), of_int(0), of_int(1), of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(0), of_int(0), of_int(0),
  of_int(1), of_int(0)), temp___205(of_int(0), of_int(0), of_int(0),
  of_int(0), of_int(0), of_int(0), of_int(0), of_int(0), of_int(1),
  of_int(1), of_int(1), of_int(1), of_int(0), of_int(0), of_int(0),
  of_int(0)), temp___225(of_int(0), of_int(1), of_int(0), of_int(0),
  of_int(0), of_int(1), of_int(0), of_int(0), of_int(0), of_int(1),
  of_int(0), of_int(0), of_int(0), of_int(1), of_int(0), of_int(0))))

axiom def_axiom :
  (forall temp___167:bool. forall temp___168:bool. forall temp___169:bool.
  forall temp___170:bool. forall temp___171:bool. forall temp___172:bool.
  forall temp___173:bool. forall temp___174:bool. forall temp___175:bool.
  forall temp___176:bool. forall temp___177:bool. forall temp___178:bool.
  forall temp___179:bool. forall temp___180:bool. forall temp___181:bool.
  forall temp___182:bool. (((((((get(temp___165(temp___167, temp___168,
  temp___169, temp___170, temp___171, temp___172, temp___173, temp___174,
  temp___175, temp___176, temp___177, temp___178, temp___179, temp___180,
  temp___181, temp___182), 0, 0) = temp___167) and
  (get(temp___165(temp___167, temp___168, temp___169, temp___170, temp___171,
  temp___172, temp___173, temp___174, temp___175, temp___176, temp___177,
  temp___178, temp___179, temp___180, temp___181, temp___182), 0,
  1) = temp___168)) and (get(temp___165(temp___167, temp___168, temp___169,
  temp___170, temp___171, temp___172, temp___173, temp___174, temp___175,
  temp___176, temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182), 0, 2) = temp___169)) and (get(temp___165(temp___167,
  temp___168, temp___169, temp___170, temp___171, temp___172, temp___173,
  temp___174, temp___175, temp___176, temp___177, temp___178, temp___179,
  temp___180, temp___181, temp___182), 0, 3) = temp___170)) and
  ((((get(temp___165(temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181, temp___182), 1,
  0) = temp___171) and (get(temp___165(temp___167, temp___168, temp___169,
  temp___170, temp___171, temp___172, temp___173, temp___174, temp___175,
  temp___176, temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182), 1, 1) = temp___172)) and (get(temp___165(temp___167,
  temp___168, temp___169, temp___170, temp___171, temp___172, temp___173,
  temp___174, temp___175, temp___176, temp___177, temp___178, temp___179,
  temp___180, temp___181, temp___182), 1, 2) = temp___173)) and
  (get(temp___165(temp___167, temp___168, temp___169, temp___170, temp___171,
  temp___172, temp___173, temp___174, temp___175, temp___176, temp___177,
  temp___178, temp___179, temp___180, temp___181, temp___182), 1,
  3) = temp___174))) and ((((get(temp___165(temp___167, temp___168,
  temp___169, temp___170, temp___171, temp___172, temp___173, temp___174,
  temp___175, temp___176, temp___177, temp___178, temp___179, temp___180,
  temp___181, temp___182), 2, 0) = temp___175) and
  (get(temp___165(temp___167, temp___168, temp___169, temp___170, temp___171,
  temp___172, temp___173, temp___174, temp___175, temp___176, temp___177,
  temp___178, temp___179, temp___180, temp___181, temp___182), 2,
  1) = temp___176)) and (get(temp___165(temp___167, temp___168, temp___169,
  temp___170, temp___171, temp___172, temp___173, temp___174, temp___175,
  temp___176, temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182), 2, 2) = temp___177)) and (get(temp___165(temp___167,
  temp___168, temp___169, temp___170, temp___171, temp___172, temp___173,
  temp___174, temp___175, temp___176, temp___177, temp___178, temp___179,
  temp___180, temp___181, temp___182), 2, 3) = temp___178))) and
  ((((get(temp___165(temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181, temp___182), 3,
  0) = temp___179) and (get(temp___165(temp___167, temp___168, temp___169,
  temp___170, temp___171, temp___172, temp___173, temp___174, temp___175,
  temp___176, temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182), 3, 1) = temp___180)) and (get(temp___165(temp___167,
  temp___168, temp___169, temp___170, temp___171, temp___172, temp___173,
  temp___174, temp___175, temp___176, temp___177, temp___178, temp___179,
  temp___180, temp___181, temp___182), 3, 2) = temp___181)) and
  (get(temp___165(temp___167, temp___168, temp___169, temp___170, temp___171,
  temp___172, temp___173, temp___174, temp___175, temp___176, temp___177,
  temp___178, temp___179, temp___180, temp___181, temp___182), 3,
  3) = temp___182))))

axiom def_axiom1 :
  (forall temp___160:map. forall temp___161:map. forall temp___162:map.
  forall temp___163:map.
  (((((tetris_flow__possible_i_shapes__aggregate_def(temp___160, temp___161,
  temp___162, temp___163)[0]) = temp___160) and
  ((tetris_flow__possible_i_shapes__aggregate_def(temp___160, temp___161,
  temp___162, temp___163)[1]) = temp___161)) and
  ((tetris_flow__possible_i_shapes__aggregate_def(temp___160, temp___161,
  temp___162, temp___163)[2]) = temp___162)) and
  ((tetris_flow__possible_i_shapes__aggregate_def(temp___160, temp___161,
  temp___162, temp___163)[3]) = temp___163)))

axiom def_axiom2 :
  (forall temp___187:bool. forall temp___188:bool. forall temp___189:bool.
  forall temp___190:bool. forall temp___191:bool. forall temp___192:bool.
  forall temp___193:bool. forall temp___194:bool. forall temp___195:bool.
  forall temp___196:bool. forall temp___197:bool. forall temp___198:bool.
  forall temp___199:bool. forall temp___200:bool. forall temp___201:bool.
  forall temp___202:bool. (((((((get(temp___185(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202), 0, 0) = temp___187) and
  (get(temp___185(temp___187, temp___188, temp___189, temp___190, temp___191,
  temp___192, temp___193, temp___194, temp___195, temp___196, temp___197,
  temp___198, temp___199, temp___200, temp___201, temp___202), 0,
  1) = temp___188)) and (get(temp___185(temp___187, temp___188, temp___189,
  temp___190, temp___191, temp___192, temp___193, temp___194, temp___195,
  temp___196, temp___197, temp___198, temp___199, temp___200, temp___201,
  temp___202), 0, 2) = temp___189)) and (get(temp___185(temp___187,
  temp___188, temp___189, temp___190, temp___191, temp___192, temp___193,
  temp___194, temp___195, temp___196, temp___197, temp___198, temp___199,
  temp___200, temp___201, temp___202), 0, 3) = temp___190)) and
  ((((get(temp___185(temp___187, temp___188, temp___189, temp___190,
  temp___191, temp___192, temp___193, temp___194, temp___195, temp___196,
  temp___197, temp___198, temp___199, temp___200, temp___201, temp___202), 1,
  0) = temp___191) and (get(temp___185(temp___187, temp___188, temp___189,
  temp___190, temp___191, temp___192, temp___193, temp___194, temp___195,
  temp___196, temp___197, temp___198, temp___199, temp___200, temp___201,
  temp___202), 1, 1) = temp___192)) and (get(temp___185(temp___187,
  temp___188, temp___189, temp___190, temp___191, temp___192, temp___193,
  temp___194, temp___195, temp___196, temp___197, temp___198, temp___199,
  temp___200, temp___201, temp___202), 1, 2) = temp___193)) and
  (get(temp___185(temp___187, temp___188, temp___189, temp___190, temp___191,
  temp___192, temp___193, temp___194, temp___195, temp___196, temp___197,
  temp___198, temp___199, temp___200, temp___201, temp___202), 1,
  3) = temp___194))) and ((((get(temp___185(temp___187, temp___188,
  temp___189, temp___190, temp___191, temp___192, temp___193, temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202), 2, 0) = temp___195) and
  (get(temp___185(temp___187, temp___188, temp___189, temp___190, temp___191,
  temp___192, temp___193, temp___194, temp___195, temp___196, temp___197,
  temp___198, temp___199, temp___200, temp___201, temp___202), 2,
  1) = temp___196)) and (get(temp___185(temp___187, temp___188, temp___189,
  temp___190, temp___191, temp___192, temp___193, temp___194, temp___195,
  temp___196, temp___197, temp___198, temp___199, temp___200, temp___201,
  temp___202), 2, 2) = temp___197)) and (get(temp___185(temp___187,
  temp___188, temp___189, temp___190, temp___191, temp___192, temp___193,
  temp___194, temp___195, temp___196, temp___197, temp___198, temp___199,
  temp___200, temp___201, temp___202), 2, 3) = temp___198))) and
  ((((get(temp___185(temp___187, temp___188, temp___189, temp___190,
  temp___191, temp___192, temp___193, temp___194, temp___195, temp___196,
  temp___197, temp___198, temp___199, temp___200, temp___201, temp___202), 3,
  0) = temp___199) and (get(temp___185(temp___187, temp___188, temp___189,
  temp___190, temp___191, temp___192, temp___193, temp___194, temp___195,
  temp___196, temp___197, temp___198, temp___199, temp___200, temp___201,
  temp___202), 3, 1) = temp___200)) and (get(temp___185(temp___187,
  temp___188, temp___189, temp___190, temp___191, temp___192, temp___193,
  temp___194, temp___195, temp___196, temp___197, temp___198, temp___199,
  temp___200, temp___201, temp___202), 3, 2) = temp___201)) and
  (get(temp___185(temp___187, temp___188, temp___189, temp___190, temp___191,
  temp___192, temp___193, temp___194, temp___195, temp___196, temp___197,
  temp___198, temp___199, temp___200, temp___201, temp___202), 3,
  3) = temp___202))))

axiom def_axiom3 :
  (forall temp___207:bool. forall temp___208:bool. forall temp___209:bool.
  forall temp___210:bool. forall temp___211:bool. forall temp___212:bool.
  forall temp___213:bool. forall temp___214:bool. forall temp___215:bool.
  forall temp___216:bool. forall temp___217:bool. forall temp___218:bool.
  forall temp___219:bool. forall temp___220:bool. forall temp___221:bool.
  forall temp___222:bool. (((((((get(temp___205(temp___207, temp___208,
  temp___209, temp___210, temp___211, temp___212, temp___213, temp___214,
  temp___215, temp___216, temp___217, temp___218, temp___219, temp___220,
  temp___221, temp___222), 0, 0) = temp___207) and
  (get(temp___205(temp___207, temp___208, temp___209, temp___210, temp___211,
  temp___212, temp___213, temp___214, temp___215, temp___216, temp___217,
  temp___218, temp___219, temp___220, temp___221, temp___222), 0,
  1) = temp___208)) and (get(temp___205(temp___207, temp___208, temp___209,
  temp___210, temp___211, temp___212, temp___213, temp___214, temp___215,
  temp___216, temp___217, temp___218, temp___219, temp___220, temp___221,
  temp___222), 0, 2) = temp___209)) and (get(temp___205(temp___207,
  temp___208, temp___209, temp___210, temp___211, temp___212, temp___213,
  temp___214, temp___215, temp___216, temp___217, temp___218, temp___219,
  temp___220, temp___221, temp___222), 0, 3) = temp___210)) and
  ((((get(temp___205(temp___207, temp___208, temp___209, temp___210,
  temp___211, temp___212, temp___213, temp___214, temp___215, temp___216,
  temp___217, temp___218, temp___219, temp___220, temp___221, temp___222), 1,
  0) = temp___211) and (get(temp___205(temp___207, temp___208, temp___209,
  temp___210, temp___211, temp___212, temp___213, temp___214, temp___215,
  temp___216, temp___217, temp___218, temp___219, temp___220, temp___221,
  temp___222), 1, 1) = temp___212)) and (get(temp___205(temp___207,
  temp___208, temp___209, temp___210, temp___211, temp___212, temp___213,
  temp___214, temp___215, temp___216, temp___217, temp___218, temp___219,
  temp___220, temp___221, temp___222), 1, 2) = temp___213)) and
  (get(temp___205(temp___207, temp___208, temp___209, temp___210, temp___211,
  temp___212, temp___213, temp___214, temp___215, temp___216, temp___217,
  temp___218, temp___219, temp___220, temp___221, temp___222), 1,
  3) = temp___214))) and ((((get(temp___205(temp___207, temp___208,
  temp___209, temp___210, temp___211, temp___212, temp___213, temp___214,
  temp___215, temp___216, temp___217, temp___218, temp___219, temp___220,
  temp___221, temp___222), 2, 0) = temp___215) and
  (get(temp___205(temp___207, temp___208, temp___209, temp___210, temp___211,
  temp___212, temp___213, temp___214, temp___215, temp___216, temp___217,
  temp___218, temp___219, temp___220, temp___221, temp___222), 2,
  1) = temp___216)) and (get(temp___205(temp___207, temp___208, temp___209,
  temp___210, temp___211, temp___212, temp___213, temp___214, temp___215,
  temp___216, temp___217, temp___218, temp___219, temp___220, temp___221,
  temp___222), 2, 2) = temp___217)) and (get(temp___205(temp___207,
  temp___208, temp___209, temp___210, temp___211, temp___212, temp___213,
  temp___214, temp___215, temp___216, temp___217, temp___218, temp___219,
  temp___220, temp___221, temp___222), 2, 3) = temp___218))) and
  ((((get(temp___205(temp___207, temp___208, temp___209, temp___210,
  temp___211, temp___212, temp___213, temp___214, temp___215, temp___216,
  temp___217, temp___218, temp___219, temp___220, temp___221, temp___222), 3,
  0) = temp___219) and (get(temp___205(temp___207, temp___208, temp___209,
  temp___210, temp___211, temp___212, temp___213, temp___214, temp___215,
  temp___216, temp___217, temp___218, temp___219, temp___220, temp___221,
  temp___222), 3, 1) = temp___220)) and (get(temp___205(temp___207,
  temp___208, temp___209, temp___210, temp___211, temp___212, temp___213,
  temp___214, temp___215, temp___216, temp___217, temp___218, temp___219,
  temp___220, temp___221, temp___222), 3, 2) = temp___221)) and
  (get(temp___205(temp___207, temp___208, temp___209, temp___210, temp___211,
  temp___212, temp___213, temp___214, temp___215, temp___216, temp___217,
  temp___218, temp___219, temp___220, temp___221, temp___222), 3,
  3) = temp___222))))

axiom def_axiom4 :
  (forall temp___227:bool. forall temp___228:bool. forall temp___229:bool.
  forall temp___230:bool. forall temp___231:bool. forall temp___232:bool.
  forall temp___233:bool. forall temp___234:bool. forall temp___235:bool.
  forall temp___236:bool. forall temp___237:bool. forall temp___238:bool.
  forall temp___239:bool. forall temp___240:bool. forall temp___241:bool.
  forall temp___242:bool. (((((((get(temp___225(temp___227, temp___228,
  temp___229, temp___230, temp___231, temp___232, temp___233, temp___234,
  temp___235, temp___236, temp___237, temp___238, temp___239, temp___240,
  temp___241, temp___242), 0, 0) = temp___227) and
  (get(temp___225(temp___227, temp___228, temp___229, temp___230, temp___231,
  temp___232, temp___233, temp___234, temp___235, temp___236, temp___237,
  temp___238, temp___239, temp___240, temp___241, temp___242), 0,
  1) = temp___228)) and (get(temp___225(temp___227, temp___228, temp___229,
  temp___230, temp___231, temp___232, temp___233, temp___234, temp___235,
  temp___236, temp___237, temp___238, temp___239, temp___240, temp___241,
  temp___242), 0, 2) = temp___229)) and (get(temp___225(temp___227,
  temp___228, temp___229, temp___230, temp___231, temp___232, temp___233,
  temp___234, temp___235, temp___236, temp___237, temp___238, temp___239,
  temp___240, temp___241, temp___242), 0, 3) = temp___230)) and
  ((((get(temp___225(temp___227, temp___228, temp___229, temp___230,
  temp___231, temp___232, temp___233, temp___234, temp___235, temp___236,
  temp___237, temp___238, temp___239, temp___240, temp___241, temp___242), 1,
  0) = temp___231) and (get(temp___225(temp___227, temp___228, temp___229,
  temp___230, temp___231, temp___232, temp___233, temp___234, temp___235,
  temp___236, temp___237, temp___238, temp___239, temp___240, temp___241,
  temp___242), 1, 1) = temp___232)) and (get(temp___225(temp___227,
  temp___228, temp___229, temp___230, temp___231, temp___232, temp___233,
  temp___234, temp___235, temp___236, temp___237, temp___238, temp___239,
  temp___240, temp___241, temp___242), 1, 2) = temp___233)) and
  (get(temp___225(temp___227, temp___228, temp___229, temp___230, temp___231,
  temp___232, temp___233, temp___234, temp___235, temp___236, temp___237,
  temp___238, temp___239, temp___240, temp___241, temp___242), 1,
  3) = temp___234))) and ((((get(temp___225(temp___227, temp___228,
  temp___229, temp___230, temp___231, temp___232, temp___233, temp___234,
  temp___235, temp___236, temp___237, temp___238, temp___239, temp___240,
  temp___241, temp___242), 2, 0) = temp___235) and
  (get(temp___225(temp___227, temp___228, temp___229, temp___230, temp___231,
  temp___232, temp___233, temp___234, temp___235, temp___236, temp___237,
  temp___238, temp___239, temp___240, temp___241, temp___242), 2,
  1) = temp___236)) and (get(temp___225(temp___227, temp___228, temp___229,
  temp___230, temp___231, temp___232, temp___233, temp___234, temp___235,
  temp___236, temp___237, temp___238, temp___239, temp___240, temp___241,
  temp___242), 2, 2) = temp___237)) and (get(temp___225(temp___227,
  temp___228, temp___229, temp___230, temp___231, temp___232, temp___233,
  temp___234, temp___235, temp___236, temp___237, temp___238, temp___239,
  temp___240, temp___241, temp___242), 2, 3) = temp___238))) and
  ((((get(temp___225(temp___227, temp___228, temp___229, temp___230,
  temp___231, temp___232, temp___233, temp___234, temp___235, temp___236,
  temp___237, temp___238, temp___239, temp___240, temp___241, temp___242), 3,
  0) = temp___239) and (get(temp___225(temp___227, temp___228, temp___229,
  temp___230, temp___231, temp___232, temp___233, temp___234, temp___235,
  temp___236, temp___237, temp___238, temp___239, temp___240, temp___241,
  temp___242), 3, 1) = temp___240)) and (get(temp___225(temp___227,
  temp___228, temp___229, temp___230, temp___231, temp___232, temp___233,
  temp___234, temp___235, temp___236, temp___237, temp___238, temp___239,
  temp___240, temp___241, temp___242), 3, 2) = temp___241)) and
  (get(temp___225(temp___227, temp___228, temp___229, temp___230, temp___231,
  temp___232, temp___233, temp___234, temp___235, temp___236, temp___237,
  temp___238, temp___239, temp___240, temp___241, temp___242), 3,
  3) = temp___242))))

axiom possible_three_shapes__def_axiom :
  (possible_three_shapes = tetris_flow__possible_three_shapes__aggregate_def(temp___270(of_int(1),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(0)), temp___283(of_int(0), of_int(1), of_int(1),
  of_int(0), of_int(1), of_int(0), of_int(0), of_int(1), of_int(0)),
  temp___296(of_int(0), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(1), of_int(0), of_int(0), of_int(1)), temp___309(of_int(0),
  of_int(1), of_int(0), of_int(0), of_int(1), of_int(0), of_int(1),
  of_int(1), of_int(0)), temp___322(of_int(0), of_int(0), of_int(1),
  of_int(1), of_int(1), of_int(1), of_int(0), of_int(0), of_int(0)),
  temp___335(of_int(0), of_int(1), of_int(0), of_int(0), of_int(1),
  of_int(0), of_int(0), of_int(1), of_int(1)), temp___348(of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(1), of_int(1),
  of_int(0), of_int(0)), temp___361(of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(1), of_int(0), of_int(0), of_int(1), of_int(0)),
  temp___374(of_int(0), of_int(1), of_int(1), of_int(1), of_int(1),
  of_int(0), of_int(0), of_int(0), of_int(0)), temp___387(of_int(0),
  of_int(1), of_int(0), of_int(0), of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(1)), temp___400(of_int(0), of_int(0), of_int(0),
  of_int(0), of_int(1), of_int(1), of_int(1), of_int(1), of_int(0)),
  temp___413(of_int(1), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(0), of_int(0), of_int(1), of_int(0)), temp___426(of_int(0),
  of_int(1), of_int(0), of_int(1), of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(0)), temp___439(of_int(0), of_int(1), of_int(0),
  of_int(0), of_int(1), of_int(1), of_int(0), of_int(1), of_int(0)),
  temp___452(of_int(0), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(1), of_int(0), of_int(1), of_int(0)), temp___465(of_int(0),
  of_int(1), of_int(0), of_int(1), of_int(1), of_int(0), of_int(0),
  of_int(1), of_int(0)), temp___478(of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(1), of_int(1), of_int(0), of_int(0), of_int(0)),
  temp___491(of_int(0), of_int(0), of_int(1), of_int(0), of_int(1),
  of_int(1), of_int(0), of_int(1), of_int(0)), temp___504(of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(0), of_int(0),
  of_int(1), of_int(1)), temp___517(of_int(0), of_int(1), of_int(0),
  of_int(1), of_int(1), of_int(0), of_int(1), of_int(0), of_int(0))))

axiom def_axiom5 :
  (forall temp___272:bool. forall temp___273:bool. forall temp___274:bool.
  forall temp___275:bool. forall temp___276:bool. forall temp___277:bool.
  forall temp___278:bool. forall temp___279:bool. forall temp___280:bool.
  (((((get(temp___270(temp___272, temp___273, temp___274, temp___275,
  temp___276, temp___277, temp___278, temp___279, temp___280), 0,
  0) = temp___272) and (get(temp___270(temp___272, temp___273, temp___274,
  temp___275, temp___276, temp___277, temp___278, temp___279, temp___280), 0,
  1) = temp___273)) and (get(temp___270(temp___272, temp___273, temp___274,
  temp___275, temp___276, temp___277, temp___278, temp___279, temp___280), 0,
  2) = temp___274)) and (((get(temp___270(temp___272, temp___273, temp___274,
  temp___275, temp___276, temp___277, temp___278, temp___279, temp___280), 1,
  0) = temp___275) and (get(temp___270(temp___272, temp___273, temp___274,
  temp___275, temp___276, temp___277, temp___278, temp___279, temp___280), 1,
  1) = temp___276)) and (get(temp___270(temp___272, temp___273, temp___274,
  temp___275, temp___276, temp___277, temp___278, temp___279, temp___280), 1,
  2) = temp___277))) and (((get(temp___270(temp___272, temp___273,
  temp___274, temp___275, temp___276, temp___277, temp___278, temp___279,
  temp___280), 2, 0) = temp___278) and (get(temp___270(temp___272,
  temp___273, temp___274, temp___275, temp___276, temp___277, temp___278,
  temp___279, temp___280), 2, 1) = temp___279)) and
  (get(temp___270(temp___272, temp___273, temp___274, temp___275, temp___276,
  temp___277, temp___278, temp___279, temp___280), 2, 2) = temp___280))))

axiom def_axiom6 :
  (forall temp___285:bool. forall temp___286:bool. forall temp___287:bool.
  forall temp___288:bool. forall temp___289:bool. forall temp___290:bool.
  forall temp___291:bool. forall temp___292:bool. forall temp___293:bool.
  (((((get(temp___283(temp___285, temp___286, temp___287, temp___288,
  temp___289, temp___290, temp___291, temp___292, temp___293), 0,
  0) = temp___285) and (get(temp___283(temp___285, temp___286, temp___287,
  temp___288, temp___289, temp___290, temp___291, temp___292, temp___293), 0,
  1) = temp___286)) and (get(temp___283(temp___285, temp___286, temp___287,
  temp___288, temp___289, temp___290, temp___291, temp___292, temp___293), 0,
  2) = temp___287)) and (((get(temp___283(temp___285, temp___286, temp___287,
  temp___288, temp___289, temp___290, temp___291, temp___292, temp___293), 1,
  0) = temp___288) and (get(temp___283(temp___285, temp___286, temp___287,
  temp___288, temp___289, temp___290, temp___291, temp___292, temp___293), 1,
  1) = temp___289)) and (get(temp___283(temp___285, temp___286, temp___287,
  temp___288, temp___289, temp___290, temp___291, temp___292, temp___293), 1,
  2) = temp___290))) and (((get(temp___283(temp___285, temp___286,
  temp___287, temp___288, temp___289, temp___290, temp___291, temp___292,
  temp___293), 2, 0) = temp___291) and (get(temp___283(temp___285,
  temp___286, temp___287, temp___288, temp___289, temp___290, temp___291,
  temp___292, temp___293), 2, 1) = temp___292)) and
  (get(temp___283(temp___285, temp___286, temp___287, temp___288, temp___289,
  temp___290, temp___291, temp___292, temp___293), 2, 2) = temp___293))))

axiom def_axiom7 :
  (forall temp___298:bool. forall temp___299:bool. forall temp___300:bool.
  forall temp___301:bool. forall temp___302:bool. forall temp___303:bool.
  forall temp___304:bool. forall temp___305:bool. forall temp___306:bool.
  (((((get(temp___296(temp___298, temp___299, temp___300, temp___301,
  temp___302, temp___303, temp___304, temp___305, temp___306), 0,
  0) = temp___298) and (get(temp___296(temp___298, temp___299, temp___300,
  temp___301, temp___302, temp___303, temp___304, temp___305, temp___306), 0,
  1) = temp___299)) and (get(temp___296(temp___298, temp___299, temp___300,
  temp___301, temp___302, temp___303, temp___304, temp___305, temp___306), 0,
  2) = temp___300)) and (((get(temp___296(temp___298, temp___299, temp___300,
  temp___301, temp___302, temp___303, temp___304, temp___305, temp___306), 1,
  0) = temp___301) and (get(temp___296(temp___298, temp___299, temp___300,
  temp___301, temp___302, temp___303, temp___304, temp___305, temp___306), 1,
  1) = temp___302)) and (get(temp___296(temp___298, temp___299, temp___300,
  temp___301, temp___302, temp___303, temp___304, temp___305, temp___306), 1,
  2) = temp___303))) and (((get(temp___296(temp___298, temp___299,
  temp___300, temp___301, temp___302, temp___303, temp___304, temp___305,
  temp___306), 2, 0) = temp___304) and (get(temp___296(temp___298,
  temp___299, temp___300, temp___301, temp___302, temp___303, temp___304,
  temp___305, temp___306), 2, 1) = temp___305)) and
  (get(temp___296(temp___298, temp___299, temp___300, temp___301, temp___302,
  temp___303, temp___304, temp___305, temp___306), 2, 2) = temp___306))))

axiom def_axiom8 :
  (forall temp___311:bool. forall temp___312:bool. forall temp___313:bool.
  forall temp___314:bool. forall temp___315:bool. forall temp___316:bool.
  forall temp___317:bool. forall temp___318:bool. forall temp___319:bool.
  (((((get(temp___309(temp___311, temp___312, temp___313, temp___314,
  temp___315, temp___316, temp___317, temp___318, temp___319), 0,
  0) = temp___311) and (get(temp___309(temp___311, temp___312, temp___313,
  temp___314, temp___315, temp___316, temp___317, temp___318, temp___319), 0,
  1) = temp___312)) and (get(temp___309(temp___311, temp___312, temp___313,
  temp___314, temp___315, temp___316, temp___317, temp___318, temp___319), 0,
  2) = temp___313)) and (((get(temp___309(temp___311, temp___312, temp___313,
  temp___314, temp___315, temp___316, temp___317, temp___318, temp___319), 1,
  0) = temp___314) and (get(temp___309(temp___311, temp___312, temp___313,
  temp___314, temp___315, temp___316, temp___317, temp___318, temp___319), 1,
  1) = temp___315)) and (get(temp___309(temp___311, temp___312, temp___313,
  temp___314, temp___315, temp___316, temp___317, temp___318, temp___319), 1,
  2) = temp___316))) and (((get(temp___309(temp___311, temp___312,
  temp___313, temp___314, temp___315, temp___316, temp___317, temp___318,
  temp___319), 2, 0) = temp___317) and (get(temp___309(temp___311,
  temp___312, temp___313, temp___314, temp___315, temp___316, temp___317,
  temp___318, temp___319), 2, 1) = temp___318)) and
  (get(temp___309(temp___311, temp___312, temp___313, temp___314, temp___315,
  temp___316, temp___317, temp___318, temp___319), 2, 2) = temp___319))))

axiom def_axiom9 :
  (forall temp___248:map. forall temp___249:map. forall temp___250:map.
  forall temp___251:map. forall temp___252:map. forall temp___253:map.
  forall temp___254:map. forall temp___255:map. forall temp___256:map.
  forall temp___257:map. forall temp___258:map. forall temp___259:map.
  forall temp___260:map. forall temp___261:map. forall temp___262:map.
  forall temp___263:map. forall temp___264:map. forall temp___265:map.
  forall temp___266:map. forall temp___267:map.
  ((((((((get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 3, 0) = temp___248) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 3, 1) = temp___249)) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 3, 2) = temp___250)) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 3, 3) = temp___251)) and
  ((((get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 4, 0) = temp___252) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 4, 1) = temp___253)) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 4, 2) = temp___254)) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 4, 3) = temp___255))) and
  ((((get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 5, 0) = temp___256) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 5, 1) = temp___257)) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 5, 2) = temp___258)) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 5, 3) = temp___259))) and
  ((((get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 6, 0) = temp___260) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 6, 1) = temp___261)) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 6, 2) = temp___262)) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 6, 3) = temp___263))) and
  ((((get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 7, 0) = temp___264) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 7, 1) = temp___265)) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 7, 2) = temp___266)) and
  (get1(tetris_flow__possible_three_shapes__aggregate_def(temp___248,
  temp___249, temp___250, temp___251, temp___252, temp___253, temp___254,
  temp___255, temp___256, temp___257, temp___258, temp___259, temp___260,
  temp___261, temp___262, temp___263, temp___264, temp___265, temp___266,
  temp___267), 7, 3) = temp___267))))

axiom def_axiom10 :
  (forall temp___324:bool. forall temp___325:bool. forall temp___326:bool.
  forall temp___327:bool. forall temp___328:bool. forall temp___329:bool.
  forall temp___330:bool. forall temp___331:bool. forall temp___332:bool.
  (((((get(temp___322(temp___324, temp___325, temp___326, temp___327,
  temp___328, temp___329, temp___330, temp___331, temp___332), 0,
  0) = temp___324) and (get(temp___322(temp___324, temp___325, temp___326,
  temp___327, temp___328, temp___329, temp___330, temp___331, temp___332), 0,
  1) = temp___325)) and (get(temp___322(temp___324, temp___325, temp___326,
  temp___327, temp___328, temp___329, temp___330, temp___331, temp___332), 0,
  2) = temp___326)) and (((get(temp___322(temp___324, temp___325, temp___326,
  temp___327, temp___328, temp___329, temp___330, temp___331, temp___332), 1,
  0) = temp___327) and (get(temp___322(temp___324, temp___325, temp___326,
  temp___327, temp___328, temp___329, temp___330, temp___331, temp___332), 1,
  1) = temp___328)) and (get(temp___322(temp___324, temp___325, temp___326,
  temp___327, temp___328, temp___329, temp___330, temp___331, temp___332), 1,
  2) = temp___329))) and (((get(temp___322(temp___324, temp___325,
  temp___326, temp___327, temp___328, temp___329, temp___330, temp___331,
  temp___332), 2, 0) = temp___330) and (get(temp___322(temp___324,
  temp___325, temp___326, temp___327, temp___328, temp___329, temp___330,
  temp___331, temp___332), 2, 1) = temp___331)) and
  (get(temp___322(temp___324, temp___325, temp___326, temp___327, temp___328,
  temp___329, temp___330, temp___331, temp___332), 2, 2) = temp___332))))

axiom def_axiom11 :
  (forall temp___337:bool. forall temp___338:bool. forall temp___339:bool.
  forall temp___340:bool. forall temp___341:bool. forall temp___342:bool.
  forall temp___343:bool. forall temp___344:bool. forall temp___345:bool.
  (((((get(temp___335(temp___337, temp___338, temp___339, temp___340,
  temp___341, temp___342, temp___343, temp___344, temp___345), 0,
  0) = temp___337) and (get(temp___335(temp___337, temp___338, temp___339,
  temp___340, temp___341, temp___342, temp___343, temp___344, temp___345), 0,
  1) = temp___338)) and (get(temp___335(temp___337, temp___338, temp___339,
  temp___340, temp___341, temp___342, temp___343, temp___344, temp___345), 0,
  2) = temp___339)) and (((get(temp___335(temp___337, temp___338, temp___339,
  temp___340, temp___341, temp___342, temp___343, temp___344, temp___345), 1,
  0) = temp___340) and (get(temp___335(temp___337, temp___338, temp___339,
  temp___340, temp___341, temp___342, temp___343, temp___344, temp___345), 1,
  1) = temp___341)) and (get(temp___335(temp___337, temp___338, temp___339,
  temp___340, temp___341, temp___342, temp___343, temp___344, temp___345), 1,
  2) = temp___342))) and (((get(temp___335(temp___337, temp___338,
  temp___339, temp___340, temp___341, temp___342, temp___343, temp___344,
  temp___345), 2, 0) = temp___343) and (get(temp___335(temp___337,
  temp___338, temp___339, temp___340, temp___341, temp___342, temp___343,
  temp___344, temp___345), 2, 1) = temp___344)) and
  (get(temp___335(temp___337, temp___338, temp___339, temp___340, temp___341,
  temp___342, temp___343, temp___344, temp___345), 2, 2) = temp___345))))

axiom def_axiom12 :
  (forall temp___350:bool. forall temp___351:bool. forall temp___352:bool.
  forall temp___353:bool. forall temp___354:bool. forall temp___355:bool.
  forall temp___356:bool. forall temp___357:bool. forall temp___358:bool.
  (((((get(temp___348(temp___350, temp___351, temp___352, temp___353,
  temp___354, temp___355, temp___356, temp___357, temp___358), 0,
  0) = temp___350) and (get(temp___348(temp___350, temp___351, temp___352,
  temp___353, temp___354, temp___355, temp___356, temp___357, temp___358), 0,
  1) = temp___351)) and (get(temp___348(temp___350, temp___351, temp___352,
  temp___353, temp___354, temp___355, temp___356, temp___357, temp___358), 0,
  2) = temp___352)) and (((get(temp___348(temp___350, temp___351, temp___352,
  temp___353, temp___354, temp___355, temp___356, temp___357, temp___358), 1,
  0) = temp___353) and (get(temp___348(temp___350, temp___351, temp___352,
  temp___353, temp___354, temp___355, temp___356, temp___357, temp___358), 1,
  1) = temp___354)) and (get(temp___348(temp___350, temp___351, temp___352,
  temp___353, temp___354, temp___355, temp___356, temp___357, temp___358), 1,
  2) = temp___355))) and (((get(temp___348(temp___350, temp___351,
  temp___352, temp___353, temp___354, temp___355, temp___356, temp___357,
  temp___358), 2, 0) = temp___356) and (get(temp___348(temp___350,
  temp___351, temp___352, temp___353, temp___354, temp___355, temp___356,
  temp___357, temp___358), 2, 1) = temp___357)) and
  (get(temp___348(temp___350, temp___351, temp___352, temp___353, temp___354,
  temp___355, temp___356, temp___357, temp___358), 2, 2) = temp___358))))

axiom def_axiom13 :
  (forall temp___363:bool. forall temp___364:bool. forall temp___365:bool.
  forall temp___366:bool. forall temp___367:bool. forall temp___368:bool.
  forall temp___369:bool. forall temp___370:bool. forall temp___371:bool.
  (((((get(temp___361(temp___363, temp___364, temp___365, temp___366,
  temp___367, temp___368, temp___369, temp___370, temp___371), 0,
  0) = temp___363) and (get(temp___361(temp___363, temp___364, temp___365,
  temp___366, temp___367, temp___368, temp___369, temp___370, temp___371), 0,
  1) = temp___364)) and (get(temp___361(temp___363, temp___364, temp___365,
  temp___366, temp___367, temp___368, temp___369, temp___370, temp___371), 0,
  2) = temp___365)) and (((get(temp___361(temp___363, temp___364, temp___365,
  temp___366, temp___367, temp___368, temp___369, temp___370, temp___371), 1,
  0) = temp___366) and (get(temp___361(temp___363, temp___364, temp___365,
  temp___366, temp___367, temp___368, temp___369, temp___370, temp___371), 1,
  1) = temp___367)) and (get(temp___361(temp___363, temp___364, temp___365,
  temp___366, temp___367, temp___368, temp___369, temp___370, temp___371), 1,
  2) = temp___368))) and (((get(temp___361(temp___363, temp___364,
  temp___365, temp___366, temp___367, temp___368, temp___369, temp___370,
  temp___371), 2, 0) = temp___369) and (get(temp___361(temp___363,
  temp___364, temp___365, temp___366, temp___367, temp___368, temp___369,
  temp___370, temp___371), 2, 1) = temp___370)) and
  (get(temp___361(temp___363, temp___364, temp___365, temp___366, temp___367,
  temp___368, temp___369, temp___370, temp___371), 2, 2) = temp___371))))

axiom def_axiom14 :
  (forall temp___376:bool. forall temp___377:bool. forall temp___378:bool.
  forall temp___379:bool. forall temp___380:bool. forall temp___381:bool.
  forall temp___382:bool. forall temp___383:bool. forall temp___384:bool.
  (((((get(temp___374(temp___376, temp___377, temp___378, temp___379,
  temp___380, temp___381, temp___382, temp___383, temp___384), 0,
  0) = temp___376) and (get(temp___374(temp___376, temp___377, temp___378,
  temp___379, temp___380, temp___381, temp___382, temp___383, temp___384), 0,
  1) = temp___377)) and (get(temp___374(temp___376, temp___377, temp___378,
  temp___379, temp___380, temp___381, temp___382, temp___383, temp___384), 0,
  2) = temp___378)) and (((get(temp___374(temp___376, temp___377, temp___378,
  temp___379, temp___380, temp___381, temp___382, temp___383, temp___384), 1,
  0) = temp___379) and (get(temp___374(temp___376, temp___377, temp___378,
  temp___379, temp___380, temp___381, temp___382, temp___383, temp___384), 1,
  1) = temp___380)) and (get(temp___374(temp___376, temp___377, temp___378,
  temp___379, temp___380, temp___381, temp___382, temp___383, temp___384), 1,
  2) = temp___381))) and (((get(temp___374(temp___376, temp___377,
  temp___378, temp___379, temp___380, temp___381, temp___382, temp___383,
  temp___384), 2, 0) = temp___382) and (get(temp___374(temp___376,
  temp___377, temp___378, temp___379, temp___380, temp___381, temp___382,
  temp___383, temp___384), 2, 1) = temp___383)) and
  (get(temp___374(temp___376, temp___377, temp___378, temp___379, temp___380,
  temp___381, temp___382, temp___383, temp___384), 2, 2) = temp___384))))

axiom def_axiom15 :
  (forall temp___389:bool. forall temp___390:bool. forall temp___391:bool.
  forall temp___392:bool. forall temp___393:bool. forall temp___394:bool.
  forall temp___395:bool. forall temp___396:bool. forall temp___397:bool.
  (((((get(temp___387(temp___389, temp___390, temp___391, temp___392,
  temp___393, temp___394, temp___395, temp___396, temp___397), 0,
  0) = temp___389) and (get(temp___387(temp___389, temp___390, temp___391,
  temp___392, temp___393, temp___394, temp___395, temp___396, temp___397), 0,
  1) = temp___390)) and (get(temp___387(temp___389, temp___390, temp___391,
  temp___392, temp___393, temp___394, temp___395, temp___396, temp___397), 0,
  2) = temp___391)) and (((get(temp___387(temp___389, temp___390, temp___391,
  temp___392, temp___393, temp___394, temp___395, temp___396, temp___397), 1,
  0) = temp___392) and (get(temp___387(temp___389, temp___390, temp___391,
  temp___392, temp___393, temp___394, temp___395, temp___396, temp___397), 1,
  1) = temp___393)) and (get(temp___387(temp___389, temp___390, temp___391,
  temp___392, temp___393, temp___394, temp___395, temp___396, temp___397), 1,
  2) = temp___394))) and (((get(temp___387(temp___389, temp___390,
  temp___391, temp___392, temp___393, temp___394, temp___395, temp___396,
  temp___397), 2, 0) = temp___395) and (get(temp___387(temp___389,
  temp___390, temp___391, temp___392, temp___393, temp___394, temp___395,
  temp___396, temp___397), 2, 1) = temp___396)) and
  (get(temp___387(temp___389, temp___390, temp___391, temp___392, temp___393,
  temp___394, temp___395, temp___396, temp___397), 2, 2) = temp___397))))

axiom def_axiom16 :
  (forall temp___402:bool. forall temp___403:bool. forall temp___404:bool.
  forall temp___405:bool. forall temp___406:bool. forall temp___407:bool.
  forall temp___408:bool. forall temp___409:bool. forall temp___410:bool.
  (((((get(temp___400(temp___402, temp___403, temp___404, temp___405,
  temp___406, temp___407, temp___408, temp___409, temp___410), 0,
  0) = temp___402) and (get(temp___400(temp___402, temp___403, temp___404,
  temp___405, temp___406, temp___407, temp___408, temp___409, temp___410), 0,
  1) = temp___403)) and (get(temp___400(temp___402, temp___403, temp___404,
  temp___405, temp___406, temp___407, temp___408, temp___409, temp___410), 0,
  2) = temp___404)) and (((get(temp___400(temp___402, temp___403, temp___404,
  temp___405, temp___406, temp___407, temp___408, temp___409, temp___410), 1,
  0) = temp___405) and (get(temp___400(temp___402, temp___403, temp___404,
  temp___405, temp___406, temp___407, temp___408, temp___409, temp___410), 1,
  1) = temp___406)) and (get(temp___400(temp___402, temp___403, temp___404,
  temp___405, temp___406, temp___407, temp___408, temp___409, temp___410), 1,
  2) = temp___407))) and (((get(temp___400(temp___402, temp___403,
  temp___404, temp___405, temp___406, temp___407, temp___408, temp___409,
  temp___410), 2, 0) = temp___408) and (get(temp___400(temp___402,
  temp___403, temp___404, temp___405, temp___406, temp___407, temp___408,
  temp___409, temp___410), 2, 1) = temp___409)) and
  (get(temp___400(temp___402, temp___403, temp___404, temp___405, temp___406,
  temp___407, temp___408, temp___409, temp___410), 2, 2) = temp___410))))

axiom def_axiom17 :
  (forall temp___415:bool. forall temp___416:bool. forall temp___417:bool.
  forall temp___418:bool. forall temp___419:bool. forall temp___420:bool.
  forall temp___421:bool. forall temp___422:bool. forall temp___423:bool.
  (((((get(temp___413(temp___415, temp___416, temp___417, temp___418,
  temp___419, temp___420, temp___421, temp___422, temp___423), 0,
  0) = temp___415) and (get(temp___413(temp___415, temp___416, temp___417,
  temp___418, temp___419, temp___420, temp___421, temp___422, temp___423), 0,
  1) = temp___416)) and (get(temp___413(temp___415, temp___416, temp___417,
  temp___418, temp___419, temp___420, temp___421, temp___422, temp___423), 0,
  2) = temp___417)) and (((get(temp___413(temp___415, temp___416, temp___417,
  temp___418, temp___419, temp___420, temp___421, temp___422, temp___423), 1,
  0) = temp___418) and (get(temp___413(temp___415, temp___416, temp___417,
  temp___418, temp___419, temp___420, temp___421, temp___422, temp___423), 1,
  1) = temp___419)) and (get(temp___413(temp___415, temp___416, temp___417,
  temp___418, temp___419, temp___420, temp___421, temp___422, temp___423), 1,
  2) = temp___420))) and (((get(temp___413(temp___415, temp___416,
  temp___417, temp___418, temp___419, temp___420, temp___421, temp___422,
  temp___423), 2, 0) = temp___421) and (get(temp___413(temp___415,
  temp___416, temp___417, temp___418, temp___419, temp___420, temp___421,
  temp___422, temp___423), 2, 1) = temp___422)) and
  (get(temp___413(temp___415, temp___416, temp___417, temp___418, temp___419,
  temp___420, temp___421, temp___422, temp___423), 2, 2) = temp___423))))

axiom def_axiom18 :
  (forall temp___428:bool. forall temp___429:bool. forall temp___430:bool.
  forall temp___431:bool. forall temp___432:bool. forall temp___433:bool.
  forall temp___434:bool. forall temp___435:bool. forall temp___436:bool.
  (((((get(temp___426(temp___428, temp___429, temp___430, temp___431,
  temp___432, temp___433, temp___434, temp___435, temp___436), 0,
  0) = temp___428) and (get(temp___426(temp___428, temp___429, temp___430,
  temp___431, temp___432, temp___433, temp___434, temp___435, temp___436), 0,
  1) = temp___429)) and (get(temp___426(temp___428, temp___429, temp___430,
  temp___431, temp___432, temp___433, temp___434, temp___435, temp___436), 0,
  2) = temp___430)) and (((get(temp___426(temp___428, temp___429, temp___430,
  temp___431, temp___432, temp___433, temp___434, temp___435, temp___436), 1,
  0) = temp___431) and (get(temp___426(temp___428, temp___429, temp___430,
  temp___431, temp___432, temp___433, temp___434, temp___435, temp___436), 1,
  1) = temp___432)) and (get(temp___426(temp___428, temp___429, temp___430,
  temp___431, temp___432, temp___433, temp___434, temp___435, temp___436), 1,
  2) = temp___433))) and (((get(temp___426(temp___428, temp___429,
  temp___430, temp___431, temp___432, temp___433, temp___434, temp___435,
  temp___436), 2, 0) = temp___434) and (get(temp___426(temp___428,
  temp___429, temp___430, temp___431, temp___432, temp___433, temp___434,
  temp___435, temp___436), 2, 1) = temp___435)) and
  (get(temp___426(temp___428, temp___429, temp___430, temp___431, temp___432,
  temp___433, temp___434, temp___435, temp___436), 2, 2) = temp___436))))

axiom def_axiom19 :
  (forall temp___441:bool. forall temp___442:bool. forall temp___443:bool.
  forall temp___444:bool. forall temp___445:bool. forall temp___446:bool.
  forall temp___447:bool. forall temp___448:bool. forall temp___449:bool.
  (((((get(temp___439(temp___441, temp___442, temp___443, temp___444,
  temp___445, temp___446, temp___447, temp___448, temp___449), 0,
  0) = temp___441) and (get(temp___439(temp___441, temp___442, temp___443,
  temp___444, temp___445, temp___446, temp___447, temp___448, temp___449), 0,
  1) = temp___442)) and (get(temp___439(temp___441, temp___442, temp___443,
  temp___444, temp___445, temp___446, temp___447, temp___448, temp___449), 0,
  2) = temp___443)) and (((get(temp___439(temp___441, temp___442, temp___443,
  temp___444, temp___445, temp___446, temp___447, temp___448, temp___449), 1,
  0) = temp___444) and (get(temp___439(temp___441, temp___442, temp___443,
  temp___444, temp___445, temp___446, temp___447, temp___448, temp___449), 1,
  1) = temp___445)) and (get(temp___439(temp___441, temp___442, temp___443,
  temp___444, temp___445, temp___446, temp___447, temp___448, temp___449), 1,
  2) = temp___446))) and (((get(temp___439(temp___441, temp___442,
  temp___443, temp___444, temp___445, temp___446, temp___447, temp___448,
  temp___449), 2, 0) = temp___447) and (get(temp___439(temp___441,
  temp___442, temp___443, temp___444, temp___445, temp___446, temp___447,
  temp___448, temp___449), 2, 1) = temp___448)) and
  (get(temp___439(temp___441, temp___442, temp___443, temp___444, temp___445,
  temp___446, temp___447, temp___448, temp___449), 2, 2) = temp___449))))

axiom def_axiom20 :
  (forall temp___454:bool. forall temp___455:bool. forall temp___456:bool.
  forall temp___457:bool. forall temp___458:bool. forall temp___459:bool.
  forall temp___460:bool. forall temp___461:bool. forall temp___462:bool.
  (((((get(temp___452(temp___454, temp___455, temp___456, temp___457,
  temp___458, temp___459, temp___460, temp___461, temp___462), 0,
  0) = temp___454) and (get(temp___452(temp___454, temp___455, temp___456,
  temp___457, temp___458, temp___459, temp___460, temp___461, temp___462), 0,
  1) = temp___455)) and (get(temp___452(temp___454, temp___455, temp___456,
  temp___457, temp___458, temp___459, temp___460, temp___461, temp___462), 0,
  2) = temp___456)) and (((get(temp___452(temp___454, temp___455, temp___456,
  temp___457, temp___458, temp___459, temp___460, temp___461, temp___462), 1,
  0) = temp___457) and (get(temp___452(temp___454, temp___455, temp___456,
  temp___457, temp___458, temp___459, temp___460, temp___461, temp___462), 1,
  1) = temp___458)) and (get(temp___452(temp___454, temp___455, temp___456,
  temp___457, temp___458, temp___459, temp___460, temp___461, temp___462), 1,
  2) = temp___459))) and (((get(temp___452(temp___454, temp___455,
  temp___456, temp___457, temp___458, temp___459, temp___460, temp___461,
  temp___462), 2, 0) = temp___460) and (get(temp___452(temp___454,
  temp___455, temp___456, temp___457, temp___458, temp___459, temp___460,
  temp___461, temp___462), 2, 1) = temp___461)) and
  (get(temp___452(temp___454, temp___455, temp___456, temp___457, temp___458,
  temp___459, temp___460, temp___461, temp___462), 2, 2) = temp___462))))

axiom def_axiom21 :
  (forall temp___467:bool. forall temp___468:bool. forall temp___469:bool.
  forall temp___470:bool. forall temp___471:bool. forall temp___472:bool.
  forall temp___473:bool. forall temp___474:bool. forall temp___475:bool.
  (((((get(temp___465(temp___467, temp___468, temp___469, temp___470,
  temp___471, temp___472, temp___473, temp___474, temp___475), 0,
  0) = temp___467) and (get(temp___465(temp___467, temp___468, temp___469,
  temp___470, temp___471, temp___472, temp___473, temp___474, temp___475), 0,
  1) = temp___468)) and (get(temp___465(temp___467, temp___468, temp___469,
  temp___470, temp___471, temp___472, temp___473, temp___474, temp___475), 0,
  2) = temp___469)) and (((get(temp___465(temp___467, temp___468, temp___469,
  temp___470, temp___471, temp___472, temp___473, temp___474, temp___475), 1,
  0) = temp___470) and (get(temp___465(temp___467, temp___468, temp___469,
  temp___470, temp___471, temp___472, temp___473, temp___474, temp___475), 1,
  1) = temp___471)) and (get(temp___465(temp___467, temp___468, temp___469,
  temp___470, temp___471, temp___472, temp___473, temp___474, temp___475), 1,
  2) = temp___472))) and (((get(temp___465(temp___467, temp___468,
  temp___469, temp___470, temp___471, temp___472, temp___473, temp___474,
  temp___475), 2, 0) = temp___473) and (get(temp___465(temp___467,
  temp___468, temp___469, temp___470, temp___471, temp___472, temp___473,
  temp___474, temp___475), 2, 1) = temp___474)) and
  (get(temp___465(temp___467, temp___468, temp___469, temp___470, temp___471,
  temp___472, temp___473, temp___474, temp___475), 2, 2) = temp___475))))

axiom def_axiom22 :
  (forall temp___480:bool. forall temp___481:bool. forall temp___482:bool.
  forall temp___483:bool. forall temp___484:bool. forall temp___485:bool.
  forall temp___486:bool. forall temp___487:bool. forall temp___488:bool.
  (((((get(temp___478(temp___480, temp___481, temp___482, temp___483,
  temp___484, temp___485, temp___486, temp___487, temp___488), 0,
  0) = temp___480) and (get(temp___478(temp___480, temp___481, temp___482,
  temp___483, temp___484, temp___485, temp___486, temp___487, temp___488), 0,
  1) = temp___481)) and (get(temp___478(temp___480, temp___481, temp___482,
  temp___483, temp___484, temp___485, temp___486, temp___487, temp___488), 0,
  2) = temp___482)) and (((get(temp___478(temp___480, temp___481, temp___482,
  temp___483, temp___484, temp___485, temp___486, temp___487, temp___488), 1,
  0) = temp___483) and (get(temp___478(temp___480, temp___481, temp___482,
  temp___483, temp___484, temp___485, temp___486, temp___487, temp___488), 1,
  1) = temp___484)) and (get(temp___478(temp___480, temp___481, temp___482,
  temp___483, temp___484, temp___485, temp___486, temp___487, temp___488), 1,
  2) = temp___485))) and (((get(temp___478(temp___480, temp___481,
  temp___482, temp___483, temp___484, temp___485, temp___486, temp___487,
  temp___488), 2, 0) = temp___486) and (get(temp___478(temp___480,
  temp___481, temp___482, temp___483, temp___484, temp___485, temp___486,
  temp___487, temp___488), 2, 1) = temp___487)) and
  (get(temp___478(temp___480, temp___481, temp___482, temp___483, temp___484,
  temp___485, temp___486, temp___487, temp___488), 2, 2) = temp___488))))

axiom def_axiom23 :
  (forall temp___493:bool. forall temp___494:bool. forall temp___495:bool.
  forall temp___496:bool. forall temp___497:bool. forall temp___498:bool.
  forall temp___499:bool. forall temp___500:bool. forall temp___501:bool.
  (((((get(temp___491(temp___493, temp___494, temp___495, temp___496,
  temp___497, temp___498, temp___499, temp___500, temp___501), 0,
  0) = temp___493) and (get(temp___491(temp___493, temp___494, temp___495,
  temp___496, temp___497, temp___498, temp___499, temp___500, temp___501), 0,
  1) = temp___494)) and (get(temp___491(temp___493, temp___494, temp___495,
  temp___496, temp___497, temp___498, temp___499, temp___500, temp___501), 0,
  2) = temp___495)) and (((get(temp___491(temp___493, temp___494, temp___495,
  temp___496, temp___497, temp___498, temp___499, temp___500, temp___501), 1,
  0) = temp___496) and (get(temp___491(temp___493, temp___494, temp___495,
  temp___496, temp___497, temp___498, temp___499, temp___500, temp___501), 1,
  1) = temp___497)) and (get(temp___491(temp___493, temp___494, temp___495,
  temp___496, temp___497, temp___498, temp___499, temp___500, temp___501), 1,
  2) = temp___498))) and (((get(temp___491(temp___493, temp___494,
  temp___495, temp___496, temp___497, temp___498, temp___499, temp___500,
  temp___501), 2, 0) = temp___499) and (get(temp___491(temp___493,
  temp___494, temp___495, temp___496, temp___497, temp___498, temp___499,
  temp___500, temp___501), 2, 1) = temp___500)) and
  (get(temp___491(temp___493, temp___494, temp___495, temp___496, temp___497,
  temp___498, temp___499, temp___500, temp___501), 2, 2) = temp___501))))

axiom def_axiom24 :
  (forall temp___506:bool. forall temp___507:bool. forall temp___508:bool.
  forall temp___509:bool. forall temp___510:bool. forall temp___511:bool.
  forall temp___512:bool. forall temp___513:bool. forall temp___514:bool.
  (((((get(temp___504(temp___506, temp___507, temp___508, temp___509,
  temp___510, temp___511, temp___512, temp___513, temp___514), 0,
  0) = temp___506) and (get(temp___504(temp___506, temp___507, temp___508,
  temp___509, temp___510, temp___511, temp___512, temp___513, temp___514), 0,
  1) = temp___507)) and (get(temp___504(temp___506, temp___507, temp___508,
  temp___509, temp___510, temp___511, temp___512, temp___513, temp___514), 0,
  2) = temp___508)) and (((get(temp___504(temp___506, temp___507, temp___508,
  temp___509, temp___510, temp___511, temp___512, temp___513, temp___514), 1,
  0) = temp___509) and (get(temp___504(temp___506, temp___507, temp___508,
  temp___509, temp___510, temp___511, temp___512, temp___513, temp___514), 1,
  1) = temp___510)) and (get(temp___504(temp___506, temp___507, temp___508,
  temp___509, temp___510, temp___511, temp___512, temp___513, temp___514), 1,
  2) = temp___511))) and (((get(temp___504(temp___506, temp___507,
  temp___508, temp___509, temp___510, temp___511, temp___512, temp___513,
  temp___514), 2, 0) = temp___512) and (get(temp___504(temp___506,
  temp___507, temp___508, temp___509, temp___510, temp___511, temp___512,
  temp___513, temp___514), 2, 1) = temp___513)) and
  (get(temp___504(temp___506, temp___507, temp___508, temp___509, temp___510,
  temp___511, temp___512, temp___513, temp___514), 2, 2) = temp___514))))

axiom def_axiom25 :
  (forall temp___519:bool. forall temp___520:bool. forall temp___521:bool.
  forall temp___522:bool. forall temp___523:bool. forall temp___524:bool.
  forall temp___525:bool. forall temp___526:bool. forall temp___527:bool.
  (((((get(temp___517(temp___519, temp___520, temp___521, temp___522,
  temp___523, temp___524, temp___525, temp___526, temp___527), 0,
  0) = temp___519) and (get(temp___517(temp___519, temp___520, temp___521,
  temp___522, temp___523, temp___524, temp___525, temp___526, temp___527), 0,
  1) = temp___520)) and (get(temp___517(temp___519, temp___520, temp___521,
  temp___522, temp___523, temp___524, temp___525, temp___526, temp___527), 0,
  2) = temp___521)) and (((get(temp___517(temp___519, temp___520, temp___521,
  temp___522, temp___523, temp___524, temp___525, temp___526, temp___527), 1,
  0) = temp___522) and (get(temp___517(temp___519, temp___520, temp___521,
  temp___522, temp___523, temp___524, temp___525, temp___526, temp___527), 1,
  1) = temp___523)) and (get(temp___517(temp___519, temp___520, temp___521,
  temp___522, temp___523, temp___524, temp___525, temp___526, temp___527), 1,
  2) = temp___524))) and (((get(temp___517(temp___519, temp___520,
  temp___521, temp___522, temp___523, temp___524, temp___525, temp___526,
  temp___527), 2, 0) = temp___525) and (get(temp___517(temp___519,
  temp___520, temp___521, temp___522, temp___523, temp___524, temp___525,
  temp___526, temp___527), 2, 1) = temp___526)) and
  (get(temp___517(temp___519, temp___520, temp___521, temp___522, temp___523,
  temp___524, temp___525, temp___526, temp___527), 2, 2) = temp___527))))

 (* File "tetris_flow.adb", line 107, characters 0-0 *)
goal WP_parameter_def :
  (forall cur_board:(int,(int,cell) farray) farray.
  forall cur_piece__split_fields:shape.
  forall cur_piece__split_fields1:px_coord.
  forall cur_piece__split_fields2:py_coord. forall o:cell. forall o1:int.
  forall o2:(int,cell) farray. forall o3:int.
  forall o4:(int,(int,cell) farray) farray. forall o5:cell.
  forall result:(int,(int,cell) farray) farray.
  forall cur_board1:(int,(int,cell) farray) farray.
  ((tetris_flow__possible_i_shapes__aggregate_def(temp___165(of_int(0),
  of_int(0), of_int(0), of_int(0), of_int(1), of_int(1), of_int(1),
  of_int(1), of_int(0), of_int(0), of_int(0), of_int(0), of_int(0),
  of_int(0), of_int(0), of_int(0)), temp___185(of_int(0), of_int(0),
  of_int(1), of_int(0), of_int(0), of_int(0), of_int(1), of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(0), of_int(0), of_int(0),
  of_int(1), of_int(0)), temp___205(of_int(0), of_int(0), of_int(0),
  of_int(0), of_int(0), of_int(0), of_int(0), of_int(0), of_int(1),
  of_int(1), of_int(1), of_int(1), of_int(0), of_int(0), of_int(0),
  of_int(0)), temp___225(of_int(0), of_int(1), of_int(0), of_int(0),
  of_int(0), of_int(1), of_int(0), of_int(0), of_int(0), of_int(1),
  of_int(0), of_int(0), of_int(0), of_int(1), of_int(0),
  of_int(0))) = possible_i_shapes) ->
  ((tetris_flow__possible_three_shapes__aggregate_def(temp___270(of_int(1),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(0)), temp___283(of_int(0), of_int(1), of_int(1),
  of_int(0), of_int(1), of_int(0), of_int(0), of_int(1), of_int(0)),
  temp___296(of_int(0), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(1), of_int(0), of_int(0), of_int(1)), temp___309(of_int(0),
  of_int(1), of_int(0), of_int(0), of_int(1), of_int(0), of_int(1),
  of_int(1), of_int(0)), temp___322(of_int(0), of_int(0), of_int(1),
  of_int(1), of_int(1), of_int(1), of_int(0), of_int(0), of_int(0)),
  temp___335(of_int(0), of_int(1), of_int(0), of_int(0), of_int(1),
  of_int(0), of_int(0), of_int(1), of_int(1)), temp___348(of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(1), of_int(1),
  of_int(0), of_int(0)), temp___361(of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(1), of_int(0), of_int(0), of_int(1), of_int(0)),
  temp___374(of_int(0), of_int(1), of_int(1), of_int(1), of_int(1),
  of_int(0), of_int(0), of_int(0), of_int(0)), temp___387(of_int(0),
  of_int(1), of_int(0), of_int(0), of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(1)), temp___400(of_int(0), of_int(0), of_int(0),
  of_int(0), of_int(1), of_int(1), of_int(1), of_int(1), of_int(0)),
  temp___413(of_int(1), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(0), of_int(0), of_int(1), of_int(0)), temp___426(of_int(0),
  of_int(1), of_int(0), of_int(1), of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(0)), temp___439(of_int(0), of_int(1), of_int(0),
  of_int(0), of_int(1), of_int(1), of_int(0), of_int(1), of_int(0)),
  temp___452(of_int(0), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(1), of_int(0), of_int(1), of_int(0)), temp___465(of_int(0),
  of_int(1), of_int(0), of_int(1), of_int(1), of_int(0), of_int(0),
  of_int(1), of_int(0)), temp___478(of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(1), of_int(1), of_int(0), of_int(0), of_int(0)),
  temp___491(of_int(0), of_int(0), of_int(1), of_int(0), of_int(1),
  of_int(1), of_int(0), of_int(1), of_int(0)), temp___504(of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(0), of_int(0),
  of_int(1), of_int(1)), temp___517(of_int(0), of_int(1), of_int(0),
  of_int(1), of_int(1), of_int(0), of_int(1), of_int(0),
  of_int(0))) = possible_three_shapes) ->
  ((to_rep1(cur_piece__split_fields) = 2) ->
  (((((to_rep(o) = to_rep1(cur_piece__split_fields)) and
  ((((1 <= to_rep2(cur_piece__split_fields1)) and
  (to_rep2(cur_piece__split_fields1) <= 10)) and
  (o1 = to_rep2(cur_piece__split_fields1))) and
  (o2 = ((cur_board[to_rep3(cur_piece__split_fields2)])[o1 <- o])))) and
  ((((1 <= to_rep3(cur_piece__split_fields2)) and
  (to_rep3(cur_piece__split_fields2) <= 50)) and
  (o3 = to_rep3(cur_piece__split_fields2))) and
  (o4 = (cur_board[o3 <- o2])))) and ((result = cur_board) and
  (cur_board1 = o4))) -> ((to_rep(o5) = to_rep1(cur_piece__split_fields)) ->
  (1 <= to_rep2(cur_piece__split_fields1))))))))
