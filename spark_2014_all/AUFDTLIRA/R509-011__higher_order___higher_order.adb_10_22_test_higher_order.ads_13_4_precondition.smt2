(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun to_rep ((x natural)) Int (naturalqtint x))
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (integer integer) Bool)
(declare-const dummy2 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-fun add_one (Int) Int)
(declare-fun add_one__function_guard (Int Int) Bool)
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range3 temp___expr_18)))
(assert (forall ((x Int)) (! (=> (and (dynamic_invariant x true true true true) (< x 2147483647)) (dynamic_invariant (add_one x) true false true true)) :pattern ((add_one x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant x true true true true) (= (add_one x) (+ x 1))) :pattern ((add_one x)))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int natural))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int) (b (Array Int natural)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range3 f) (=> (in_range3 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range3 low) (and (in_range3 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int natural)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))
(define-fun of_array ((a (Array Int natural)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int natural)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int natural)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int natural)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((array_2__ref (mk_array_2__ref (array_2__content us_t)))))
(define-fun array_2__ref___projection ((a array_2__ref)) us_t (array_2__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range3 f) (=> (in_range3 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range3 low) (and (in_range3 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int natural)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int natural) (elts1 a))
(define-fun of_array1 ((a (Array Int natural)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int natural)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int natural)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int natural)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq4 (us_t1 us_t1) Bool)
(declare-const dummy4 us_t1)
(declare-datatypes () ((small_enough__ref (mk_small_enough__ref (small_enough__content us_t1)))))
(define-fun small_enough__ref___projection ((a small_enough__ref)) us_t1 (small_enough__content a))
(define-fun dynamic_invariant1 ((temp___expr_167 us_t1) (temp___is_init_163 Bool) (temp___skip_constant_164 Bool) (temp___do_toplevel_165 Bool) (temp___do_typ_inv_166 Bool)) Bool (and (=> (not (= temp___skip_constant_164 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_167) (last3 temp___expr_167))) (=> (= temp___do_toplevel_165 true) (=> (= temp___is_init_163 true) (forall ((i Int)) (=> (and (<= (first3 temp___expr_167) i) (<= i (last3 temp___expr_167))) (< (to_rep (select (to_array1 temp___expr_167) i)) 2147483647)))))))
(define-fun dynamic_predicate ((temp___170 us_t1)) Bool (forall ((i Int)) (=> (and (<= (first3 temp___170) i) (<= i (last3 temp___170))) (< (to_rep (select (to_array1 temp___170) i)) 2147483647))))
(declare-const i4s us_t1)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range3 f) (=> (in_range3 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range3 low) (and (in_range3 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int natural)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int natural) (elts2 a))
(define-fun of_array2 ((a (Array Int natural)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int natural)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int natural)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int natural)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq5 (us_t2 us_t2) Bool)
(declare-const dummy5 us_t2)
(declare-datatypes () ((array_1__ref (mk_array_1__ref (array_1__content us_t2)))))
(define-fun array_1__ref___projection ((a array_1__ref)) us_t2 (array_1__content a))
(define-fun dynamic_invariant2 ((temp___expr_192 us_t2) (temp___is_init_188 Bool) (temp___skip_constant_189 Bool) (temp___do_toplevel_190 Bool) (temp___do_typ_inv_191 Bool)) Bool (and (=> (not (= temp___skip_constant_189 true)) (dynamic_property2 1 2147483647 (first5 temp___expr_192) (last5 temp___expr_192))) (=> (= temp___do_toplevel_190 true) (=> (= temp___is_init_188 true) (forall ((i Int)) (=> (and (<= (first5 temp___expr_192) i) (<= i (last5 temp___expr_192))) (< (to_rep (select (to_array2 temp___expr_192) i)) 2147483647)))))))
(define-fun dynamic_predicate1 ((temp___195 us_t2)) Bool (forall ((i Int)) (=> (and (<= (first5 temp___195) i) (<= i (last5 temp___195))) (< (to_rep (select (to_array2 temp___195) i)) 2147483647))))
(declare-const a us_t2)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((tTrSP1__ref (mk_tTrSP1__ref (tTrSP1__content integer)))))
(define-fun tTrSP1__ref___projection ((a1 tTrSP1__ref)) integer (tTrSP1__content a1))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range3 f) (=> (in_range3 l) (and (= (to_rep1 (first6 (mk3 f l))) f) (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range3 low) (and (in_range3 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int natural)) (rt3 t3)))))
(define-fun to_array3 ((a1 us_t3)) (Array Int natural) (elts3 a1))
(define-fun of_array3 ((a1 (Array Int natural)) (f Int) (l Int)) us_t3 (mk___t3 a1 (mk3 f l)))
(define-fun first7 ((a1 us_t3)) Int (to_rep1 (first6 (rt3 a1))))
(define-fun last7 ((a1 us_t3)) Int (to_rep1 (last6 (rt3 a1))))
(define-fun length3 ((a1 us_t3)) Int (ite (<= (first7 a1) (last7 a1)) (+ (- (last7 a1) (first7 a1)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int natural)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int natural)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int natural)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a1 (Array Int natural))) (<= 0 (object__size3 a1))))
(assert (<= 0 value__component__size3))
(assert (forall ((a1 (Array Int natural))) (<= 0 (object__component__size3 a1))))
(assert (<= 0 value__alignment3))
(assert (forall ((a1 (Array Int natural))) (<= 0 (object__alignment3 a1))))
(define-fun bool_eq4 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first6 (rt3 x))) (to_rep1 (last6 (rt3 x))) (elts3 y) (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))
(declare-fun user_eq7 (us_t3 us_t3) Bool)
(declare-const dummy7 us_t3)
(declare-datatypes () ((trS__ref (mk_trS__ref (trS__content us_t3)))))
(define-fun trS__ref___projection ((a1 trS__ref)) us_t3 (trS__content a1))
(define-fun dynamic_invariant3 ((temp___expr_231 us_t3) (temp___is_init_227 Bool) (temp___skip_constant_228 Bool) (temp___do_toplevel_229 Bool) (temp___do_typ_inv_230 Bool)) Bool (=> (not (= temp___skip_constant_228 true)) (and (dynamic_property4 (first5 a) (last5 a) (first7 temp___expr_231) (last7 temp___expr_231)) (and (= (first7 temp___expr_231) (first5 a)) (= (last7 temp___expr_231) (last5 a))))))
(declare-const r__first integer)
(declare-const r__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property5 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t45s__ref (mk_t45s__ref (t45s__content integer)))))
(define-fun t45s__ref___projection ((a1 t45s__ref)) integer (t45s__content a1))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_invariant4 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range1 temp___expr_39)))
(define-fun dynamic_invariant5 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant6 ((temp___expr_208 us_t) (temp___is_init_204 Bool) (temp___skip_constant_205 Bool) (temp___do_toplevel_206 Bool) (temp___do_typ_inv_207 Bool)) Bool (=> (not (= temp___skip_constant_205 true)) (dynamic_property 1 2147483647 (first1 temp___expr_208) (last1 temp___expr_208))))
(declare-const r (Array Int natural))
(declare-const i Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 natural)
(declare-const o3 (Array Int natural))
(declare-const result Int)
(declare-const i1 Int)
(declare-const result1 (Array Int natural))
(declare-const r1 (Array Int natural))
(declare-const r2 (Array Int natural))
(declare-const i2 Int)
(declare-const result2 Int)
(declare-const i3 Int)
(assert (dynamic_invariant1 i4s true false true true))
(assert (dynamic_invariant2 a true false true true))
(assert (and (dynamic_property4 (to_rep1 (first4 (rt2 a))) (to_rep1 (last4 (rt2 a))) (to_rep1 r__first) (to_rep1 r__last)) (and (= (to_rep1 r__first) (to_rep1 (first4 (rt2 a)))) (= (to_rep1 r__last) (to_rep1 (last4 (rt2 a)))))))
(assert (= (mk_int__ref result) (mk_int__ref i)))
(assert (= i1 (to_rep1 (first4 (rt2 a)))))
(assert (<= (to_rep1 (first4 (rt2 a))) i1))
(assert (<= i1 (to_rep1 (last4 (rt2 a)))))
(assert (and (= o (add_one (to_rep (select (elts2 a) i1)))) (and (in_range3 o) (= o (+ (to_rep (select (elts2 a) i1)) 1)))))
(assert (and (= o1 o) (in_range1 o)))
(assert (= (to_rep o2) o1))
(assert (= o3 (store r i1 o2)))
(assert (= (mk_map__ref result1) (mk_map__ref r)))
(assert (= r1 o3))
(assert (forall ((k Int)) (=> (and (<= (to_rep1 (first4 (rt2 a))) k) (<= k i2)) (= (to_rep (select r2 k)) (add_one (to_rep (select (elts2 a) k)))))))
(assert (and (and (=> (<= (to_rep1 (first4 (rt2 a))) (to_rep1 (last4 (rt2 a)))) (dynamic_property5 (to_rep1 (first4 (rt2 a))) (to_rep1 (last4 (rt2 a))) i2)) (forall ((temp___372 Int)) (=> (and (<= (to_rep1 r__first) temp___372) (<= temp___372 (to_rep1 r__last))) (=> (or (< (to_rep1 (last4 (rt2 a))) temp___372) (or (< temp___372 (to_rep1 (first4 (rt2 a)))) (< i2 temp___372))) (= (select r2 temp___372) (select r temp___372)))))) (and (<= (to_rep1 (first4 (rt2 a))) i2) (<= i2 (to_rep1 (last4 (rt2 a)))))))
(assert (not (= i2 (to_rep1 (last4 (rt2 a))))))
(assert (= i2 result2))
(assert (= i3 (+ i2 1)))
(assert (not (< (to_rep (select (elts2 a) i3)) 2147483647)))
(check-sat)
(exit)
