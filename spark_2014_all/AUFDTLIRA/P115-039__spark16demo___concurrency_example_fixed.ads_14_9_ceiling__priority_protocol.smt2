(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort priority 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 97)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (priority priority) Bool)
(declare-const dummy priority)
(declare-datatypes () ((priority__ref (mk_priority__ref (priority__content priority)))))
(define-fun priority__ref___projection ((a priority__ref)) priority (priority__content a))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep 0)
(declare-fun bool_eq (us_rep us_rep) Bool)
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((time__ref (mk_time__ref (time__content us_rep)))))
(define-fun time__ref___projection ((a time__ref)) us_rep (time__content a))
(declare-sort us_main_type1 0)
(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)
(declare-sort us_rep1 0)
(declare-fun bool_eq1 (us_rep1 us_rep1) Bool)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-fun user_eq2 (us_rep1 us_rep1) Bool)
(declare-const dummy2 us_rep1)
(declare-datatypes () ((time_span__ref (mk_time_span__ref (time_span__content us_rep1)))))
(define-fun time_span__ref___projection ((a time_span__ref)) us_rep1 (time_span__content a))
(declare-fun oadd (us_rep us_rep1) us_rep)
(declare-fun oadd__function_guard (us_rep us_rep us_rep1) Bool)
(assert true)
(declare-sort integer 0)
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range2 temp___expr_18)))
(declare-fun milliseconds (Int) us_rep1)
(declare-fun milliseconds__function_guard (us_rep1 Int) Bool)
(assert true)
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_220 Int)) (=> (and (<= a__first temp___idx_220) (<= temp___idx_220 a__last)) (= (to_rep (select a temp___idx_220)) (to_rep (select b (+ (- b__first a__first) temp___idx_220))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_220 Int)) (=> (and (<= a__first temp___idx_220) (<= temp___idx_220 a__last)) (= (to_rep (select a temp___idx_220)) (to_rep (select b (+ (- b__first a__first) temp___idx_220)))))))))))
(declare-const all_zeroes (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun concurrency_example_fixed__all_zeroes__aggregate_def (Int) (Array Int integer))
(declare-const all_ones (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-fun concurrency_example_fixed__all_ones__aggregate_def (Int) (Array Int integer))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__concurrency_example_fixed__dataT__value (Array Int integer))))))
(define-fun us_split_fields_Value__2__projection ((a us_split_fields)) (Array Int integer) (rec__concurrency_example_fixed__dataT__value a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___28__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep2 (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___30__projection ((a us_rep2)) us_split_fields (us_split_fields1 a))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep2) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep2) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep2)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment2 a))))
(declare-const concurrency_example_fixed__dataT__value__first__bit Int)
(declare-const concurrency_example_fixed__dataT__value__last__bit Int)
(declare-const concurrency_example_fixed__dataT__value__position Int)
(assert (<= 0 concurrency_example_fixed__dataT__value__first__bit))
(assert (< concurrency_example_fixed__dataT__value__first__bit concurrency_example_fixed__dataT__value__last__bit))
(assert (<= 0 concurrency_example_fixed__dataT__value__position))
(declare-fun user_eq4 (us_rep2 us_rep2) Bool)
(declare-datatypes () ((dataT__ref (mk_dataT__ref (dataT__content us_rep2)))))
(define-fun dataT__ref___projection ((a dataT__ref)) us_rep2 (dataT__content a))
(define-fun default_initial_assumption ((temp___expr_1954 us_rep2) (temp___skip_top_level_1955 Bool)) Bool (= (rec__concurrency_example_fixed__dataT__value (us_split_fields1 temp___expr_1954)) all_zeroes))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(assert (= all_zeroes (concurrency_example_fixed__all_zeroes__aggregate_def 0)))
(assert (forall ((temp___222 Int)) (=> (dynamic_invariant temp___222 true true true true) (forall ((temp___223 Int)) (= (to_rep (select (concurrency_example_fixed__all_zeroes__aggregate_def temp___222) temp___223)) temp___222)))))
(assert (= all_ones (concurrency_example_fixed__all_ones__aggregate_def (- 2147483648))))
(assert (forall ((temp___225 Int)) (=> (dynamic_invariant temp___225 true true true true) (forall ((temp___226 Int)) (= (to_rep (select (concurrency_example_fixed__all_ones__aggregate_def temp___225) temp___226)) temp___225)))))
(define-fun dynamic_invariant1 ((temp___expr_259 Int) (temp___is_init_255 Bool) (temp___skip_constant_256 Bool) (temp___do_toplevel_257 Bool) (temp___do_typ_inv_258 Bool)) Bool (=> (or (= temp___is_init_255 true) (<= 0 97)) (in_range1 temp___expr_259)))
(assert (= (concurrency_example_fixed__all_zeroes__aggregate_def 0) all_zeroes))
(assert (= (concurrency_example_fixed__all_ones__aggregate_def (- 2147483648)) all_ones))
(assert (not (<= 97 97)))
(check-sat)
(exit)
