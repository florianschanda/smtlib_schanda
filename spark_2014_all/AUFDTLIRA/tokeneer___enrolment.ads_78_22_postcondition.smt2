(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep 0)
(declare-fun bool_eq2 (us_rep us_rep) Bool)
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep)))))
(define-fun t__ref___projection ((a t__ref)) us_rep (t__content a))
(declare-fun endoffile (us_rep) Bool)
(declare-fun endoffile__function_guard (Bool us_rep) Bool)
(declare-fun endofline (us_rep) Bool)
(declare-fun endofline__function_guard (Bool us_rep) Bool)
(declare-fun privatekeypresent (us_private) Bool)
(declare-fun privatekeypresent__function_guard (Bool us_private) Bool)
(assert true)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_invariant1 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(declare-fun makedescription (us_t Int) (Array Int character))
(declare-fun makedescription__function_guard ((Array Int character) us_t Int) Bool)
(assert true)
(declare-fun temp___String_Literal_1046 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1046 us_void_param) 1)) 84) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 2)) 104)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 3)) 101)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 4)) 32)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 6)) 110)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 7)) 114)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 8)) 111)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 10)) 109)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 11)) 101)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 12)) 110)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 15)) 102)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 16)) 105)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 17)) 108)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 18)) 101)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 20)) 105)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 21)) 115)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 23)) 99)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 24)) 111)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 25)) 114)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 26)) 114)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 27)) 117)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 28)) 112)) (= (to_rep (select (temp___String_Literal_1046 us_void_param) 29)) 116)) :pattern ((temp___String_Literal_1046 us_void_param)))))
(declare-fun temp___String_Literal_1051 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_1051 us_void_param) 1)) 84) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 2)) 104)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 3)) 101)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 4)) 32)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 6)) 110)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 7)) 114)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 8)) 111)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 9)) 108)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 10)) 109)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 11)) 101)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 12)) 110)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 15)) 102)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 16)) 105)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 17)) 108)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 18)) 101)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 20)) 105)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 21)) 115)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 23)) 99)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 24)) 111)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 25)) 114)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 26)) 114)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 27)) 117)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 28)) 112)) (= (to_rep (select (temp___String_Literal_1051 us_void_param) 29)) 116)) :pattern ((temp___String_Literal_1051 us_void_param)))))
(define-fun dynamic_invariant2 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant3 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-const description (Array Int character))
(declare-const certno Int)
(declare-const state us_private)
(declare-const filestate us_private)
(declare-const state1 us_private)
(declare-const store1 us_private)
(declare-const o (Array Int character))
(declare-const o1 Int)
(declare-const o2 Bool)
(declare-const o3 Bool)
(declare-const temp___1050 Int)
(declare-const temp___1049 (Array Int character))
(declare-const temp___1048 Bool)
(declare-const temp___1047 us_rep)
(declare-const o4 Bool)
(declare-const o5 Int)
(declare-const o6 Bool)
(declare-const o7 Bool)
(declare-const o8 Bool)
(declare-const o9 (Array Int character))
(declare-const state2 us_private)
(declare-const filestate1 us_private)
(declare-const state3 us_private)
(declare-const store2 us_private)
(declare-const result Int)
(declare-const certno1 Int)
(declare-const thefile us_rep)
(declare-const dataok Bool)
(declare-const thefile1 us_rep)
(declare-const dataok1 Bool)
(declare-const description1 (Array Int character))
(declare-const state4 us_private)
(declare-const filestate2 us_private)
(declare-const state5 us_private)
(declare-const store3 us_private)
(declare-const result1 (Array Int character))
(declare-const description2 (Array Int character))
(declare-const result2 Int)
(declare-const certno2 Int)
(declare-const thefile2 us_rep)
(declare-const dataok2 Bool)
(declare-const description3 (Array Int character))
(declare-const state6 us_private)
(declare-const filestate3 us_private)
(declare-const state7 us_private)
(declare-const store4 us_private)
(declare-const result3 Bool)
(declare-const thefile3 us_rep)
(declare-const dataok3 Bool)
(declare-const description4 (Array Int character))
(declare-const certno3 Int)
(declare-const state8 us_private)
(declare-const filestate4 us_private)
(declare-const state9 us_private)
(declare-const store5 us_private)
(declare-const result4 Bool)
(declare-const result5 Int)
(declare-const certno4 Int)
(declare-const thefile4 us_rep)
(declare-const dataok4 Bool)
(declare-const description5 (Array Int character))
(declare-const state10 us_private)
(declare-const filestate5 us_private)
(declare-const state11 us_private)
(declare-const store6 us_private)
(declare-const thefile5 us_rep)
(declare-const result6 Bool)
(declare-const thefile6 t__ref)
(declare-const dataok5 bool__ref)
(declare-const description6 map__ref)
(declare-const certno5 int__ref)
(declare-const state12 us_private__ref)
(declare-const filestate6 us_private__ref)
(declare-const state13 us_private__ref)
(declare-const store7 us_private__ref)
(declare-const thefile7 us_rep)
(declare-const dataok6 Bool)
(declare-const description7 (Array Int character))
(declare-const certno6 Int)
(declare-const state14 us_private)
(declare-const filestate7 us_private)
(declare-const state15 us_private)
(declare-const store8 us_private)
(declare-const thefile8 t__ref)
(declare-const dataok7 bool__ref)
(declare-const description8 map__ref)
(declare-const certno7 int__ref)
(declare-const state16 us_private__ref)
(declare-const filestate8 us_private__ref)
(declare-const state17 us_private__ref)
(declare-const store9 us_private__ref)
(declare-const thefile9 us_rep)
(declare-const dataok8 Bool)
(declare-const description9 (Array Int character))
(declare-const certno8 Int)
(declare-const state18 us_private)
(declare-const filestate9 us_private)
(declare-const state19 us_private)
(declare-const store10 us_private)
(declare-const thefile10 us_rep)
(declare-const closedok Bool)
(declare-const result7 map__ref)
(declare-const description10 (Array Int character))
(declare-const result8 bool__ref)
(declare-const dataok9 Bool)
(declare-const dataok10 bool__ref)
(declare-const description11 map__ref)
(declare-const dataok11 Bool)
(declare-const description12 (Array Int character))
(declare-const state20 us_private)
(declare-const store11 us_private)
(declare-const state21 us_private__ref)
(declare-const store12 us_private__ref)
(declare-const state22 us_private)
(declare-const store13 us_private)
(declare-const thefile11 t__ref)
(declare-const dataok12 bool__ref)
(declare-const description13 map__ref)
(declare-const certno9 int__ref)
(declare-const closedok1 bool__ref)
(declare-const state23 us_private__ref)
(declare-const filestate10 us_private__ref)
(declare-const state24 us_private__ref)
(declare-const store14 us_private__ref)
(declare-const thefile12 us_rep)
(declare-const dataok13 Bool)
(declare-const description14 (Array Int character))
(declare-const certno10 Int)
(declare-const closedok2 Bool)
(declare-const state25 us_private)
(declare-const filestate11 us_private)
(declare-const state26 us_private)
(declare-const store15 us_private)
(assert (not (= (privatekeypresent state1) true)))
(assert (= (mk_int__ref result) (mk_int__ref certno)))
(assert (= certno1 1))
(assert (in_range2 certno1))
(assert (=> (= dataok true) (and (<= (to_int1 (ite (= (of_int 0) true) dataok1 false)) (to_int1 (privatekeypresent state5))) (<= (to_int1 (ite (= (ite (= (of_int 0) true) dataok1 false) false) true false)) (to_int1 (= (to_int1 (privatekeypresent state5)) (to_int1 (privatekeypresent state1))))))))
(assert (=> (not (= dataok true)) (= o (makedescription (mk___t (temp___String_Literal_1046 Tuple0) (mk 1 29)) certno1))))
(assert (=> (not (= dataok true)) (= (mk_map__ref result1) (mk_map__ref description))))
(assert (=> (not (= dataok true)) (= description2 o)))
(assert (=> (not (= dataok true)) (= store3 store1)))
(assert (=> (not (= dataok true)) (= state5 state1)))
(assert (=> (not (= dataok true)) (= filestate2 filestate)))
(assert (=> (not (= dataok true)) (= state4 state)))
(assert (=> (not (= dataok true)) (= description1 description2)))
(assert (=> (not (= dataok true)) (= dataok1 dataok)))
(assert (=> (not (= dataok true)) (= thefile1 thefile)))
(assert (=> (not (= dataok true)) (= store3 store2)))
(assert (=> (not (= dataok true)) (= state5 state3)))
(assert (=> (not (= dataok true)) (= filestate2 filestate1)))
(assert (=> (not (= dataok true)) (= state4 state2)))
(assert (=> (not (= dataok true)) (= description1 description2)))
(assert (=> (not (= dataok true)) (= dataok1 dataok)))
(assert (=> (not (= dataok true)) (= thefile1 thefile)))
(assert (=> (= dataok1 true) (and (= o1 (+ certno1 1)) (in_range1 (+ certno1 1)))))
(assert (=> (= dataok1 true) (= certno1 result2)))
(assert (=> (= dataok1 true) (= certno2 o1)))
(assert (=> (= dataok1 true) (and (<= (to_int1 (ite (= (of_int 1) true) dataok2 false)) (to_int1 (privatekeypresent state7))) (<= (to_int1 (ite (= (ite (= (of_int 1) true) dataok2 false) false) true false)) (to_int1 (= (to_int1 (privatekeypresent state7)) (to_int1 (privatekeypresent state5))))))))
(assert (=> (not (= dataok1 true)) (= store4 store3)))
(assert (=> (not (= dataok1 true)) (= state7 state5)))
(assert (=> (not (= dataok1 true)) (= filestate3 filestate2)))
(assert (=> (not (= dataok1 true)) (= state6 state4)))
(assert (=> (not (= dataok1 true)) (= certno2 certno1)))
(assert (=> (not (= dataok1 true)) (= description3 description1)))
(assert (=> (not (= dataok1 true)) (= dataok2 dataok1)))
(assert (=> (not (= dataok1 true)) (= thefile2 thefile1)))
(assert (= o2 (endoffile thefile2)))
(assert (= o3 (ite (not (= o2 true)) true false)))
(assert (= result3 (ite (= o3 true) dataok2 false)))
(assert (=> (= result3 true) (= temp___1050 certno2)))
(assert (=> (= result3 true) (= temp___1049 description3)))
(assert (=> (= result3 true) (= temp___1048 dataok2)))
(assert (=> (= result3 true) (= temp___1047 thefile2)))
(assert (=> (= result3 true) (and (=> (<= 1 2147483647) (in_range2 certno3)) (and (not (= (endoffile thefile3) true)) (= dataok3 true)))))
(assert (=> (= result3 true) (= o4 (endofline thefile3))))
(assert (=> (= result3 true) (= result4 (ite (not (= o4 true)) true false))))
(assert (=> (= result3 true) (=> (= result4 true) (and (= o5 (+ certno3 1)) (in_range1 (+ certno3 1))))))
(assert (=> (= result3 true) (=> (= result4 true) (= result5 certno3))))
(assert (=> (= result3 true) (=> (= result4 true) (= certno4 o5))))
(assert (=> (= result3 true) (=> (= result4 true) (and (<= (to_int1 (ite (= (of_int 0) true) dataok4 false)) (to_int1 (privatekeypresent state11))) (<= (to_int1 (ite (= (ite (= (of_int 0) true) dataok4 false) false) true false)) (to_int1 (= (to_int1 (privatekeypresent state11)) (to_int1 (privatekeypresent state9)))))))))
(assert (=> (= result3 true) (=> (not (= result4 true)) (= store6 store5))))
(assert (=> (= result3 true) (=> (not (= result4 true)) (= state11 state9))))
(assert (=> (= result3 true) (=> (not (= result4 true)) (= filestate5 filestate4))))
(assert (=> (= result3 true) (=> (not (= result4 true)) (= state10 state8))))
(assert (=> (= result3 true) (=> (not (= result4 true)) (= certno4 certno3))))
(assert (=> (= result3 true) (=> (not (= result4 true)) (= description5 description4))))
(assert (=> (= result3 true) (=> (not (= result4 true)) (= dataok4 dataok3))))
(assert (=> (= result3 true) (=> (not (= result4 true)) (= thefile4 thefile5))))
(assert (=> (= result3 true) (= o6 (endoffile thefile4))))
(assert (=> (= result3 true) (= o7 (ite (not (= o6 true)) true false))))
(assert (=> (= result3 true) (= o8 (ite (= o7 true) dataok4 false))))
(assert (=> (= result3 true) (= result6 (ite (not (= o8 true)) true false))))
(assert (=> (= result3 true) (= result6 true)))
(assert (=> (= result3 true) (= store7 (mk___private__ref store6))))
(assert (=> (= result3 true) (= state13 (mk___private__ref state11))))
(assert (=> (= result3 true) (= filestate6 (mk___private__ref filestate5))))
(assert (=> (= result3 true) (= state12 (mk___private__ref state10))))
(assert (=> (= result3 true) (= certno5 (mk_int__ref certno4))))
(assert (=> (= result3 true) (= description6 (mk_map__ref description5))))
(assert (=> (= result3 true) (= dataok5 (mk_bool__ref dataok4))))
(assert (=> (= result3 true) (= thefile6 (mk_t__ref thefile4))))
(assert (=> (= result3 true) (= store8 store6)))
(assert (=> (= result3 true) (= state15 state11)))
(assert (=> (= result3 true) (= filestate7 filestate5)))
(assert (=> (= result3 true) (= state14 state10)))
(assert (=> (= result3 true) (= certno6 certno4)))
(assert (=> (= result3 true) (= description7 description5)))
(assert (=> (= result3 true) (= dataok6 dataok4)))
(assert (=> (= result3 true) (= thefile7 thefile4)))
(assert (=> (= result3 true) (= store9 store7)))
(assert (=> (= result3 true) (= state17 state13)))
(assert (=> (= result3 true) (= filestate8 filestate6)))
(assert (=> (= result3 true) (= state16 state12)))
(assert (=> (= result3 true) (= certno7 certno5)))
(assert (=> (= result3 true) (= description8 description6)))
(assert (=> (= result3 true) (= dataok7 dataok5)))
(assert (=> (= result3 true) (= thefile8 thefile6)))
(assert (=> (= result3 true) (= store10 store8)))
(assert (=> (= result3 true) (= state19 state15)))
(assert (=> (= result3 true) (= filestate9 filestate7)))
(assert (=> (= result3 true) (= state18 state14)))
(assert (=> (= result3 true) (= certno8 certno6)))
(assert (=> (= result3 true) (= description9 description7)))
(assert (=> (= result3 true) (= dataok8 dataok6)))
(assert (=> (= result3 true) (= thefile9 thefile7)))
(assert (=> (not (= result3 true)) (= store9 (mk___private__ref store4))))
(assert (=> (not (= result3 true)) (= state17 (mk___private__ref state7))))
(assert (=> (not (= result3 true)) (= filestate8 (mk___private__ref filestate3))))
(assert (=> (not (= result3 true)) (= state16 (mk___private__ref state6))))
(assert (=> (not (= result3 true)) (= certno7 (mk_int__ref certno2))))
(assert (=> (not (= result3 true)) (= description8 (mk_map__ref description3))))
(assert (=> (not (= result3 true)) (= dataok7 (mk_bool__ref dataok2))))
(assert (=> (not (= result3 true)) (= thefile8 (mk_t__ref thefile2))))
(assert (=> (not (= result3 true)) (= store10 store4)))
(assert (=> (not (= result3 true)) (= state19 state7)))
(assert (=> (not (= result3 true)) (= filestate9 filestate3)))
(assert (=> (not (= result3 true)) (= state18 state6)))
(assert (=> (not (= result3 true)) (= certno8 certno2)))
(assert (=> (not (= result3 true)) (= description9 description3)))
(assert (=> (not (= result3 true)) (= dataok8 dataok2)))
(assert (=> (not (= result3 true)) (= thefile9 thefile2)))
(assert (=> (not (= closedok true)) (= o9 (makedescription (mk___t (temp___String_Literal_1051 Tuple0) (mk 1 29)) (int__content certno7)))))
(assert (=> (not (= closedok true)) (= result7 description8)))
(assert (=> (not (= closedok true)) (= description10 o9)))
(assert (=> (not (= closedok true)) (= result8 dataok7)))
(assert (=> (not (= closedok true)) (= dataok9 (of_int 0))))
(assert (=> (not (= closedok true)) (= description11 (mk_map__ref description10))))
(assert (=> (not (= closedok true)) (= dataok10 (mk_bool__ref dataok9))))
(assert (=> (not (= closedok true)) (= description12 description10)))
(assert (=> (not (= closedok true)) (= dataok11 dataok9)))
(assert (=> (not (not (= closedok true))) (= description11 description8)))
(assert (=> (not (not (= closedok true))) (= dataok10 dataok7)))
(assert (=> (not (not (= closedok true))) (= description12 description9)))
(assert (=> (not (not (= closedok true))) (= dataok11 dataok8)))
(assert (=> (not (= (bool__content dataok10) true)) (not (= (privatekeypresent state20) true))))
(assert (=> (not (= (bool__content dataok10) true)) (= store12 (mk___private__ref store11))))
(assert (=> (not (= (bool__content dataok10) true)) (= state21 (mk___private__ref state20))))
(assert (=> (not (= (bool__content dataok10) true)) (= store13 store11)))
(assert (=> (not (= (bool__content dataok10) true)) (= state22 state20)))
(assert (=> (not (not (= (bool__content dataok10) true))) (= store12 store9)))
(assert (=> (not (not (= (bool__content dataok10) true))) (= state21 state17)))
(assert (=> (not (not (= (bool__content dataok10) true))) (= store13 store10)))
(assert (=> (not (not (= (bool__content dataok10) true))) (= state22 state19)))
(assert (= store14 store12))
(assert (= state24 state21))
(assert (= filestate10 filestate8))
(assert (= state23 state16))
(assert (= closedok1 (mk_bool__ref closedok)))
(assert (= certno9 certno7))
(assert (= description13 description11))
(assert (= dataok12 dataok10))
(assert (= thefile11 (mk_t__ref thefile10)))
(assert (= store15 store13))
(assert (= state26 state22))
(assert (= filestate11 filestate9))
(assert (= state25 state18))
(assert (= closedok2 closedok))
(assert (= certno10 certno8))
(assert (= description14 description12))
(assert (= dataok13 dataok11))
(assert (= thefile12 thefile10))
(assert (= (bool__content dataok12) true))
(assert (not (= (privatekeypresent (us_private__content state24)) true)))
(check-sat)
(exit)
