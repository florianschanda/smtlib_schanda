(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type it1

predicate in_range(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq1 : int, int -> bool

axiom bool_eq_def :
  (forall x:int. forall y:int [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : it1, it1 -> bool

logic dummy : it1

type it1__ref = { it1__content : it1
}

function it1__ref___projection(a: it1__ref) : it1 = (a).it1__content

type it2

predicate in_range1(x: int) = ((5 <= x) and (x <= 50))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : it2, it2 -> bool

logic dummy1 : it2

type it2__ref = { it2__content : it2
}

function it2__ref___projection(a: it2__ref) : it2 = (a).it2__content

type it3

predicate in_range2(x: int) = ((1 <= x) and (x <= 16))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : it3, it3 -> bool

logic dummy2 : it3

type it3__ref = { it3__content : it3
}

function it3__ref___projection(a: it3__ref) : it3 = (a).it3__content

type et1

predicate in_range3(x: int) = ((0 <= x) and (x <= 99))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq3 : et1, et1 -> bool

logic dummy3 : et1

type et1__ref = { et1__content : et1
}

function et1__ref___projection(a: et1__ref) : et1 = (a).et1__content

logic to_rep : et1 -> int

logic of_rep : int -> et1

axiom inversion_axiom : (forall x:et1 [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:et1 [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,et1) farray
}

logic slide : (int,et1) farray, int, int -> (int,et1) farray

axiom slide_eq :
  (forall a:(int,et1) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,et1) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq5 : (int,et1) farray, int, int, (int,et1) farray, int,
  int -> bool

axiom bool_eq_def4 :
  (forall a:(int,et1) farray. forall a__first:int. forall a__last:int.
  forall b:(int,et1) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_154:int. ((((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) and
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))) or
  (not ((a__first <= temp___idx_154) and (temp___idx_154 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,et1) farray. forall b:(int,et1) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))))))))

logic dummy4 : (int,et1) farray

logic value__size : int

logic object__size : (int,et1) farray -> int

logic value__component__size : int

logic object__component__size : (int,et1) farray -> int

logic value__alignment : int

logic object__alignment : (int,et1) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,et1) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,et1) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,et1) farray. (0 <= object__alignment(a)))

logic user_eq4 : (int,et1) farray, (int,et1) farray -> bool

type map__ref1 = { map__content1 : (int,(int,et1) farray) farray
}

logic slide1 : (int,(int,et1) farray) farray, int,
  int -> (int,(int,et1) farray) farray

axiom slide_eq1 :
  (forall a:(int,(int,et1) farray) farray.
  (forall first:int [slide1(a, first, first)]. (slide1(a, first, first) = a)))

axiom slide_def1 :
  (forall a:(int,(int,et1) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq6 : (int,(int,et1) farray) farray, int, int,
  (int,(int,et1) farray) farray, int, int -> bool

axiom bool_eq_def5 :
  (forall a:(int,(int,et1) farray) farray. forall a__first:int.
  forall a__last:int. forall b:(int,(int,et1) farray) farray.
  forall b__first:int. forall b__last:int [bool_eq6(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_155:int. ((((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) and (bool_eq5((a[temp___idx_155]), 1, 10,
  (b[((b__first - a__first) + temp___idx_155)]), 1, 10) = true)) or
  (not ((a__first <= temp___idx_155) and (temp___idx_155 <= a__last)))))) ->
  (bool_eq6(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq5((a[temp___idx_155]), 1, 10,
  (b[((b__first - a__first) + temp___idx_155)]), 1, 10) = true))))) ->
  (bool_eq6(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,(int,et1) farray) farray.
  forall b:(int,(int,et1) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq6(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq5((a[temp___idx_155]), 1, 10,
  (b[((b__first - a__first) + temp___idx_155)]), 1, 10) = true)))))))

logic dummy5 : (int,(int,et1) farray) farray

logic value__size1 : int

logic object__size1 : (int,(int,et1) farray) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,(int,et1) farray) farray -> int

logic value__alignment1 : int

logic object__alignment1 : (int,(int,et1) farray) farray -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:(int,(int,et1) farray) farray. (0 <= object__size1(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,(int,et1) farray) farray.
  (0 <= object__component__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:(int,(int,et1) farray) farray. (0 <= object__alignment1(a)))

logic user_eq5 : (int,(int,et1) farray) farray,
  (int,(int,et1) farray) farray -> bool

type map__ref2 = { map__content2 : (int,(int,(int,et1) farray) farray) farray
}

logic slide2 : (int,(int,(int,et1) farray) farray) farray, int,
  int -> (int,(int,(int,et1) farray) farray) farray

axiom slide_eq2 :
  (forall a:(int,(int,(int,et1) farray) farray) farray.
  (forall first:int [slide2(a, first, first)]. (slide2(a, first, first) = a)))

axiom slide_def2 :
  (forall a:(int,(int,(int,et1) farray) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq7 : (int,(int,(int,et1) farray) farray) farray, int, int,
  (int,(int,(int,et1) farray) farray) farray, int, int -> bool

axiom bool_eq_def6 :
  (forall a:(int,(int,(int,et1) farray) farray) farray. forall a__first:int.
  forall a__last:int. forall b:(int,(int,(int,et1) farray) farray) farray.
  forall b__first:int. forall b__last:int [bool_eq7(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_156:int. ((((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) and (bool_eq6((a[temp___idx_156]), 5, 50,
  (b[((b__first - a__first) + temp___idx_156)]), 5, 50) = true)) or
  (not ((a__first <= temp___idx_156) and (temp___idx_156 <= a__last)))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) -> (bool_eq6((a[temp___idx_156]), 5, 50,
  (b[((b__first - a__first) + temp___idx_156)]), 5, 50) = true))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev2 :
  (forall a:(int,(int,(int,et1) farray) farray) farray.
  forall b:(int,(int,(int,et1) farray) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) -> (bool_eq6((a[temp___idx_156]), 5, 50,
  (b[((b__first - a__first) + temp___idx_156)]), 5, 50) = true)))))))

logic attr__ATTRIBUTE_ADDRESS : int

logic i : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic j : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic k : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic e : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic temp___1704 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___1712 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1719 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1727 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1734 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1743 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___1751 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1758 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1766 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1773 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1782 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___1790 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1797 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1805 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1812 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1821 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___1829 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1836 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1844 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1851 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___5380 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___5386 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___5392 : (int,et1) farray, int, int -> (int,et1) farray

axiom def_axiom :
  (forall temp___5382:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___5383:int.
  (forall temp___5384:(int,(int,et1) farray) farray.
  (in_range2(temp___5383) ->
  (forall temp___5385:int. (((temp___5385 = temp___5383) ->
  ((temp___5380(temp___5382, temp___5383,
  temp___5384)[temp___5385]) = temp___5384)) and
  ((not (temp___5385 = temp___5383)) -> ((temp___5380(temp___5382,
  temp___5383, temp___5384)[temp___5385]) = (temp___5382[temp___5385])))))))))

axiom def_axiom1 :
  (forall temp___5388:(int,(int,et1) farray) farray.
  (forall temp___5389:int.
  (forall temp___5390:(int,et1) farray. (in_range1(temp___5389) ->
  (forall temp___5391:int. (((temp___5391 = temp___5389) ->
  ((temp___5386(temp___5388, temp___5389,
  temp___5390)[temp___5391]) = temp___5390)) and
  ((not (temp___5391 = temp___5389)) -> ((temp___5386(temp___5388,
  temp___5389, temp___5390)[temp___5391]) = (temp___5388[temp___5391])))))))))

axiom def_axiom2 :
  (forall temp___5394:(int,et1) farray.
  (forall temp___5395:int. forall temp___5396:int.
  ((in_range(temp___5395) and in_range3(temp___5396)) ->
  (forall temp___5397:int. (((temp___5397 = temp___5395) ->
  (to_rep((temp___5392(temp___5394, temp___5395,
  temp___5396)[temp___5397])) = temp___5396)) and
  ((not (temp___5397 = temp___5395)) -> ((temp___5392(temp___5394,
  temp___5395, temp___5396)[temp___5397]) = (temp___5394[temp___5397]))))))))

axiom def_axiom3 :
  (forall temp___1706:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___1707:int. forall temp___1709:int.
  (forall temp___1708:(int,(int,et1) farray) farray.
  forall temp___1710:(int,(int,et1) farray) farray.
  ((in_range2(temp___1707) and in_range2(temp___1709)) ->
  (forall temp___1711:int. (((temp___1711 = temp___1709) ->
  ((temp___1704(temp___1706, temp___1707, temp___1708, temp___1709,
  temp___1710)[temp___1711]) = temp___1710)) and
  ((not (temp___1711 = temp___1709)) -> (((temp___1711 = temp___1707) ->
  ((temp___1704(temp___1706, temp___1707, temp___1708, temp___1709,
  temp___1710)[temp___1711]) = temp___1708)) and
  ((not (temp___1711 = temp___1707)) -> ((temp___1704(temp___1706,
  temp___1707, temp___1708, temp___1709,
  temp___1710)[temp___1711]) = (temp___1706[temp___1711])))))))))))

axiom def_axiom4 :
  (forall temp___1714:(int,(int,et1) farray) farray.
  (forall temp___1715:int.
  (forall temp___1716:(int,et1) farray. (in_range1(temp___1715) ->
  (forall temp___1717:int. (((temp___1717 = temp___1715) ->
  ((temp___1712(temp___1714, temp___1715,
  temp___1716)[temp___1717]) = temp___1716)) and
  ((not (temp___1717 = temp___1715)) -> ((temp___1712(temp___1714,
  temp___1715, temp___1716)[temp___1717]) = (temp___1714[temp___1717])))))))))

axiom def_axiom5 :
  (forall temp___1721:(int,et1) farray.
  (forall temp___1722:int. forall temp___1723:int.
  ((in_range(temp___1722) and in_range3(temp___1723)) ->
  (forall temp___1724:int. (((temp___1724 = temp___1722) ->
  (to_rep((temp___1719(temp___1721, temp___1722,
  temp___1723)[temp___1724])) = temp___1723)) and
  ((not (temp___1724 = temp___1722)) -> ((temp___1719(temp___1721,
  temp___1722, temp___1723)[temp___1724]) = (temp___1721[temp___1724]))))))))

axiom def_axiom6 :
  (forall temp___1729:(int,(int,et1) farray) farray.
  (forall temp___1730:int.
  (forall temp___1731:(int,et1) farray. (in_range1(temp___1730) ->
  (forall temp___1732:int. (((temp___1732 = temp___1730) ->
  ((temp___1727(temp___1729, temp___1730,
  temp___1731)[temp___1732]) = temp___1731)) and
  ((not (temp___1732 = temp___1730)) -> ((temp___1727(temp___1729,
  temp___1730, temp___1731)[temp___1732]) = (temp___1729[temp___1732])))))))))

axiom def_axiom7 :
  (forall temp___1736:(int,et1) farray.
  (forall temp___1737:int. forall temp___1738:int.
  ((in_range(temp___1737) and in_range3(temp___1738)) ->
  (forall temp___1739:int. (((temp___1739 = temp___1737) ->
  (to_rep((temp___1734(temp___1736, temp___1737,
  temp___1738)[temp___1739])) = temp___1738)) and
  ((not (temp___1739 = temp___1737)) -> ((temp___1734(temp___1736,
  temp___1737, temp___1738)[temp___1739]) = (temp___1736[temp___1739]))))))))

axiom def_axiom8 :
  (forall temp___1745:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___1746:int. forall temp___1748:int.
  (forall temp___1747:(int,(int,et1) farray) farray.
  forall temp___1749:(int,(int,et1) farray) farray.
  ((in_range2(temp___1746) and in_range2(temp___1748)) ->
  (forall temp___1750:int. (((temp___1750 = temp___1748) ->
  ((temp___1743(temp___1745, temp___1746, temp___1747, temp___1748,
  temp___1749)[temp___1750]) = temp___1749)) and
  ((not (temp___1750 = temp___1748)) -> (((temp___1750 = temp___1746) ->
  ((temp___1743(temp___1745, temp___1746, temp___1747, temp___1748,
  temp___1749)[temp___1750]) = temp___1747)) and
  ((not (temp___1750 = temp___1746)) -> ((temp___1743(temp___1745,
  temp___1746, temp___1747, temp___1748,
  temp___1749)[temp___1750]) = (temp___1745[temp___1750])))))))))))

axiom def_axiom9 :
  (forall temp___1753:(int,(int,et1) farray) farray.
  (forall temp___1754:int.
  (forall temp___1755:(int,et1) farray. (in_range1(temp___1754) ->
  (forall temp___1756:int. (((temp___1756 = temp___1754) ->
  ((temp___1751(temp___1753, temp___1754,
  temp___1755)[temp___1756]) = temp___1755)) and
  ((not (temp___1756 = temp___1754)) -> ((temp___1751(temp___1753,
  temp___1754, temp___1755)[temp___1756]) = (temp___1753[temp___1756])))))))))

axiom def_axiom10 :
  (forall temp___1760:(int,et1) farray.
  (forall temp___1761:int. forall temp___1762:int.
  ((in_range(temp___1761) and in_range3(temp___1762)) ->
  (forall temp___1763:int. (((temp___1763 = temp___1761) ->
  (to_rep((temp___1758(temp___1760, temp___1761,
  temp___1762)[temp___1763])) = temp___1762)) and
  ((not (temp___1763 = temp___1761)) -> ((temp___1758(temp___1760,
  temp___1761, temp___1762)[temp___1763]) = (temp___1760[temp___1763]))))))))

axiom def_axiom11 :
  (forall temp___1768:(int,(int,et1) farray) farray.
  (forall temp___1769:int.
  (forall temp___1770:(int,et1) farray. (in_range1(temp___1769) ->
  (forall temp___1771:int. (((temp___1771 = temp___1769) ->
  ((temp___1766(temp___1768, temp___1769,
  temp___1770)[temp___1771]) = temp___1770)) and
  ((not (temp___1771 = temp___1769)) -> ((temp___1766(temp___1768,
  temp___1769, temp___1770)[temp___1771]) = (temp___1768[temp___1771])))))))))

axiom def_axiom12 :
  (forall temp___1775:(int,et1) farray.
  (forall temp___1776:int. forall temp___1777:int.
  ((in_range(temp___1776) and in_range3(temp___1777)) ->
  (forall temp___1778:int. (((temp___1778 = temp___1776) ->
  (to_rep((temp___1773(temp___1775, temp___1776,
  temp___1777)[temp___1778])) = temp___1777)) and
  ((not (temp___1778 = temp___1776)) -> ((temp___1773(temp___1775,
  temp___1776, temp___1777)[temp___1778]) = (temp___1775[temp___1778]))))))))

axiom def_axiom13 :
  (forall temp___1784:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___1785:int. forall temp___1787:int.
  (forall temp___1786:(int,(int,et1) farray) farray.
  forall temp___1788:(int,(int,et1) farray) farray.
  ((in_range2(temp___1785) and in_range2(temp___1787)) ->
  (forall temp___1789:int. (((temp___1789 = temp___1787) ->
  ((temp___1782(temp___1784, temp___1785, temp___1786, temp___1787,
  temp___1788)[temp___1789]) = temp___1788)) and
  ((not (temp___1789 = temp___1787)) -> (((temp___1789 = temp___1785) ->
  ((temp___1782(temp___1784, temp___1785, temp___1786, temp___1787,
  temp___1788)[temp___1789]) = temp___1786)) and
  ((not (temp___1789 = temp___1785)) -> ((temp___1782(temp___1784,
  temp___1785, temp___1786, temp___1787,
  temp___1788)[temp___1789]) = (temp___1784[temp___1789])))))))))))

axiom def_axiom14 :
  (forall temp___1792:(int,(int,et1) farray) farray.
  (forall temp___1793:int.
  (forall temp___1794:(int,et1) farray. (in_range1(temp___1793) ->
  (forall temp___1795:int. (((temp___1795 = temp___1793) ->
  ((temp___1790(temp___1792, temp___1793,
  temp___1794)[temp___1795]) = temp___1794)) and
  ((not (temp___1795 = temp___1793)) -> ((temp___1790(temp___1792,
  temp___1793, temp___1794)[temp___1795]) = (temp___1792[temp___1795])))))))))

axiom def_axiom15 :
  (forall temp___1799:(int,et1) farray.
  (forall temp___1800:int. forall temp___1801:int.
  ((in_range(temp___1800) and in_range3(temp___1801)) ->
  (forall temp___1802:int. (((temp___1802 = temp___1800) ->
  (to_rep((temp___1797(temp___1799, temp___1800,
  temp___1801)[temp___1802])) = temp___1801)) and
  ((not (temp___1802 = temp___1800)) -> ((temp___1797(temp___1799,
  temp___1800, temp___1801)[temp___1802]) = (temp___1799[temp___1802]))))))))

axiom def_axiom16 :
  (forall temp___1807:(int,(int,et1) farray) farray.
  (forall temp___1808:int.
  (forall temp___1809:(int,et1) farray. (in_range1(temp___1808) ->
  (forall temp___1810:int. (((temp___1810 = temp___1808) ->
  ((temp___1805(temp___1807, temp___1808,
  temp___1809)[temp___1810]) = temp___1809)) and
  ((not (temp___1810 = temp___1808)) -> ((temp___1805(temp___1807,
  temp___1808, temp___1809)[temp___1810]) = (temp___1807[temp___1810])))))))))

axiom def_axiom17 :
  (forall temp___1814:(int,et1) farray.
  (forall temp___1815:int. forall temp___1816:int.
  ((in_range(temp___1815) and in_range3(temp___1816)) ->
  (forall temp___1817:int. (((temp___1817 = temp___1815) ->
  (to_rep((temp___1812(temp___1814, temp___1815,
  temp___1816)[temp___1817])) = temp___1816)) and
  ((not (temp___1817 = temp___1815)) -> ((temp___1812(temp___1814,
  temp___1815, temp___1816)[temp___1817]) = (temp___1814[temp___1817]))))))))

axiom def_axiom18 :
  (forall temp___1823:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___1824:int. forall temp___1826:int.
  (forall temp___1825:(int,(int,et1) farray) farray.
  forall temp___1827:(int,(int,et1) farray) farray.
  ((in_range2(temp___1824) and in_range2(temp___1826)) ->
  (forall temp___1828:int. (((temp___1828 = temp___1826) ->
  ((temp___1821(temp___1823, temp___1824, temp___1825, temp___1826,
  temp___1827)[temp___1828]) = temp___1827)) and
  ((not (temp___1828 = temp___1826)) -> (((temp___1828 = temp___1824) ->
  ((temp___1821(temp___1823, temp___1824, temp___1825, temp___1826,
  temp___1827)[temp___1828]) = temp___1825)) and
  ((not (temp___1828 = temp___1824)) -> ((temp___1821(temp___1823,
  temp___1824, temp___1825, temp___1826,
  temp___1827)[temp___1828]) = (temp___1823[temp___1828])))))))))))

axiom def_axiom19 :
  (forall temp___1831:(int,(int,et1) farray) farray.
  (forall temp___1832:int.
  (forall temp___1833:(int,et1) farray. (in_range1(temp___1832) ->
  (forall temp___1834:int. (((temp___1834 = temp___1832) ->
  ((temp___1829(temp___1831, temp___1832,
  temp___1833)[temp___1834]) = temp___1833)) and
  ((not (temp___1834 = temp___1832)) -> ((temp___1829(temp___1831,
  temp___1832, temp___1833)[temp___1834]) = (temp___1831[temp___1834])))))))))

axiom def_axiom20 :
  (forall temp___1838:(int,et1) farray.
  (forall temp___1839:int. forall temp___1840:int.
  ((in_range(temp___1839) and in_range3(temp___1840)) ->
  (forall temp___1841:int. (((temp___1841 = temp___1839) ->
  (to_rep((temp___1836(temp___1838, temp___1839,
  temp___1840)[temp___1841])) = temp___1840)) and
  ((not (temp___1841 = temp___1839)) -> ((temp___1836(temp___1838,
  temp___1839, temp___1840)[temp___1841]) = (temp___1838[temp___1841]))))))))

axiom def_axiom21 :
  (forall temp___1846:(int,(int,et1) farray) farray.
  (forall temp___1847:int.
  (forall temp___1848:(int,et1) farray. (in_range1(temp___1847) ->
  (forall temp___1849:int. (((temp___1849 = temp___1847) ->
  ((temp___1844(temp___1846, temp___1847,
  temp___1848)[temp___1849]) = temp___1848)) and
  ((not (temp___1849 = temp___1847)) -> ((temp___1844(temp___1846,
  temp___1847, temp___1848)[temp___1849]) = (temp___1846[temp___1849])))))))))

axiom def_axiom22 :
  (forall temp___1853:(int,et1) farray.
  (forall temp___1854:int. forall temp___1855:int.
  ((in_range(temp___1854) and in_range3(temp___1855)) ->
  (forall temp___1856:int. (((temp___1856 = temp___1854) ->
  (to_rep((temp___1851(temp___1853, temp___1854,
  temp___1855)[temp___1856])) = temp___1855)) and
  ((not (temp___1856 = temp___1854)) -> ((temp___1851(temp___1853,
  temp___1854, temp___1855)[temp___1856]) = (temp___1853[temp___1856]))))))))

 (* File "ar.adb", line 813, characters 0-0 *)
goal WP_parameter_def :
  (forall a:(int,(int,(int,et1) farray) farray) farray. forall k_next:int.
  forall f:int. forall t:(int,(int,(int,et1) farray) farray) farray.
  forall o:et1. forall o1:(int,et1) farray.
  forall o2:(int,(int,et1) farray) farray.
  forall o3:(int,(int,(int,et1) farray) farray) farray.
  forall result:(int,(int,(int,et1) farray) farray) farray.
  forall t1:(int,(int,(int,et1) farray) farray) farray.
  forall result1:(int,(int,(int,et1) farray) farray) farray.
  forall a1:(int,(int,(int,et1) farray) farray) farray. (in_range(i) ->
  (in_range1(j) -> (in_range2(k) -> (in_range3(e) -> (((1 <= 16) ->
  in_range2(k_next)) -> (((0 <= 99) -> in_range3(f)) -> ((((result = t) and
  (t1 = a)) and (((((to_rep(o) = e) and (o1 = (((a[k])[j])[i <- o]))) and
  (o2 = ((a[k])[j <- o1]))) and (o3 = (a[k <- o2]))) and ((result1 = a) and
  (a1 = o3)))) -> (bool_eq7(a1, 1, 16, temp___5380(t1, k,
  temp___5386((t1[k]), j, temp___5392(((t1[k])[j]), i, e))), 1,
  16) = true)))))))))
