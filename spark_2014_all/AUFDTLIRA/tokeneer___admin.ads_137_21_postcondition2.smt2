(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort datalengtht 0)
(declare-fun datalengthtqtint (datalengtht) Int)
(assert (forall ((i datalengtht)) (and (<= 0 (datalengthtqtint i)) (<= (datalengthtqtint i) 78))))
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 78)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (datalengtht datalengtht) Bool)
(declare-const dummy datalengtht)
(declare-datatypes () ((datalengtht__ref (mk_datalengtht__ref (datalengtht__content datalengtht)))))
(define-fun datalengtht__ref___projection ((a datalengtht__ref)) datalengtht (datalengtht__content a))
(define-fun to_rep ((x datalengtht)) Int (datalengthtqtint x))
(declare-fun of_rep (Int) datalengtht)
(assert (forall ((x datalengtht)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x datalengtht)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep1 (character) Int)
(declare-fun of_rep1 (Int) character)
(assert (forall ((x character)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep1 (select a temp___idx_91)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep1 (select a temp___idx_91)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-const dummy2 (Array Int character))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(declare-fun user_eq2 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__keyboard__datat__length datalengtht) (rec__keyboard__datat__text (Array Int character))))))
(define-fun us_split_fields_Length__projection ((a us_split_fields)) datalengtht (rec__keyboard__datat__length a))
(define-fun us_split_fields_Text__projection ((a us_split_fields)) (Array Int character) (rec__keyboard__datat__text a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq1 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep (rec__keyboard__datat__length (us_split_fields1 a))) (to_rep (rec__keyboard__datat__length (us_split_fields1 b)))) (= (bool_eq (rec__keyboard__datat__text (us_split_fields1 a)) 1 78 (rec__keyboard__datat__text (us_split_fields1 b)) 1 78) true)) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const keyboard__datat__length__first__bit Int)
(declare-const keyboard__datat__length__last__bit Int)
(declare-const keyboard__datat__length__position Int)
(assert (<= 0 keyboard__datat__length__first__bit))
(assert (< keyboard__datat__length__first__bit keyboard__datat__length__last__bit))
(assert (<= 0 keyboard__datat__length__position))
(declare-const keyboard__datat__text__first__bit Int)
(declare-const keyboard__datat__text__last__bit Int)
(declare-const keyboard__datat__text__position Int)
(assert (<= 0 keyboard__datat__text__first__bit))
(assert (< keyboard__datat__text__first__bit keyboard__datat__text__last__bit))
(assert (<= 0 keyboard__datat__text__position))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((datat__ref (mk_datat__ref (datat__content us_rep)))))
(define-fun datat__ref___projection ((a datat__ref)) us_rep (datat__content a))
(declare-fun str_comp (us_rep Int) Bool)
(declare-fun str_comp__function_guard (Bool us_rep Int) Bool)
(declare-sort opt 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 4)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq4 (opt opt) Bool)
(declare-const dummy4 opt)
(declare-datatypes () ((opt__ref (mk_opt__ref (opt__content opt)))))
(define-fun opt__ref___projection ((a opt__ref)) opt (opt__content a))
(define-fun dynamic_invariant ((temp___expr_479 Int) (temp___is_init_475 Bool) (temp___skip_constant_476 Bool) (temp___do_toplevel_477 Bool) (temp___do_typ_inv_478 Bool)) Bool (=> (or (= temp___is_init_475 true) (<= 1 4)) (in_range3 temp___expr_479)))
(declare-sort datalengtht1 0)
(declare-fun datalengthtqtint1 (datalengtht1) Int)
(assert (forall ((i datalengtht1)) (and (<= 0 (datalengthtqtint1 i)) (<= (datalengthtqtint1 i) 18))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 18)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (datalengtht1 datalengtht1) Bool)
(declare-const dummy5 datalengtht1)
(declare-datatypes () ((datalengtht__ref1 (mk_datalengtht__ref1 (datalengtht__content1 datalengtht1)))))
(define-fun datalengtht__ref___2__projection ((a datalengtht__ref1)) datalengtht1 (datalengtht__content1 a))
(define-fun to_rep2 ((x datalengtht1)) Int (datalengthtqtint1 x))
(declare-fun of_rep2 (Int) datalengtht1)
(assert (forall ((x datalengtht1)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x datalengtht1)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort datai 0)
(declare-fun dataiqtint (datai) Int)
(assert (forall ((i datai)) (and (<= 1 (dataiqtint i)) (<= (dataiqtint i) 18))))
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 18)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (datai datai) Bool)
(declare-const dummy6 datai)
(declare-datatypes () ((datai__ref (mk_datai__ref (datai__content datai)))))
(define-fun datai__ref___2__projection ((a datai__ref)) datai (datai__content a))
(define-fun to_rep3 ((x datai)) Int (dataiqtint x))
(declare-fun of_rep3 (Int) datai)
(assert (forall ((x datai)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x datai)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-const dummy7 (Array Int character))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq7 ((Array Int character) (Array Int character)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__admin__datat__length datalengtht1) (rec__admin__datat__minmatchlength datai) (rec__admin__datat__text (Array Int character))))))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields2)) datalengtht1 (rec__admin__datat__length a))
(define-fun us_split_fields_MinMatchLength__projection ((a us_split_fields2)) datai (rec__admin__datat__minmatchlength a))
(define-fun us_split_fields_Text__2__projection ((a us_split_fields2)) (Array Int character) (rec__admin__datat__text a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq2 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (= (to_rep2 (rec__admin__datat__length (us_split_fields3 a))) (to_rep2 (rec__admin__datat__length (us_split_fields3 b)))) (= (to_rep3 (rec__admin__datat__minmatchlength (us_split_fields3 a))) (to_rep3 (rec__admin__datat__minmatchlength (us_split_fields3 b))))) (= (bool_eq (rec__admin__datat__text (us_split_fields3 a)) 1 18 (rec__admin__datat__text (us_split_fields3 b)) 1 18) true)) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const admin__datat__length__first__bit Int)
(declare-const admin__datat__length__last__bit Int)
(declare-const admin__datat__length__position Int)
(assert (<= 0 admin__datat__length__first__bit))
(assert (< admin__datat__length__first__bit admin__datat__length__last__bit))
(assert (<= 0 admin__datat__length__position))
(declare-const admin__datat__minmatchlength__first__bit Int)
(declare-const admin__datat__minmatchlength__last__bit Int)
(declare-const admin__datat__minmatchlength__position Int)
(assert (<= 0 admin__datat__minmatchlength__first__bit))
(assert (< admin__datat__minmatchlength__first__bit admin__datat__minmatchlength__last__bit))
(assert (<= 0 admin__datat__minmatchlength__position))
(declare-const admin__datat__text__first__bit Int)
(declare-const admin__datat__text__last__bit Int)
(declare-const admin__datat__text__position Int)
(assert (<= 0 admin__datat__text__first__bit))
(assert (< admin__datat__text__first__bit admin__datat__text__last__bit))
(assert (<= 0 admin__datat__text__position))
(declare-fun user_eq8 (us_rep1 us_rep1) Bool)
(declare-const dummy8 us_rep1)
(declare-datatypes () ((datat__ref1 (mk_datat__ref1 (datat__content1 us_rep1)))))
(define-fun datat__ref___2__projection ((a datat__ref1)) us_rep1 (datat__content1 a))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int us_rep1))))))
(declare-fun slide1 ((Array Int us_rep1) Int Int) (Array Int us_rep1))
(assert (forall ((a (Array Int us_rep1))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int us_rep1))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq3 ((a (Array Int us_rep1)) (a__first Int) (a__last Int) (b (Array Int us_rep1)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_178 Int)) (=> (and (<= a__first temp___idx_178) (<= temp___idx_178 a__last)) (= (bool_eq2 (select a temp___idx_178) (select b (+ (- b__first a__first) temp___idx_178))) true)))) true false))
(assert (forall ((a (Array Int us_rep1)) (b (Array Int us_rep1))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_178 Int)) (=> (and (<= a__first temp___idx_178) (<= temp___idx_178 a__last)) (= (bool_eq2 (select a temp___idx_178) (select b (+ (- b__first a__first) temp___idx_178))) true))))))))
(declare-const optokeyed (Array Int us_rep1))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(assert true)
(assert (forall ((keyedop us_rep)) (forall ((op Int)) (! (= (= (str_comp keyedop op) true) (and (and (<= (to_rep3 (rec__admin__datat__minmatchlength (us_split_fields3 (select optokeyed op)))) (to_rep (rec__keyboard__datat__length (us_split_fields1 keyedop)))) (<= (to_rep (rec__keyboard__datat__length (us_split_fields1 keyedop))) (to_rep2 (rec__admin__datat__length (us_split_fields3 (select optokeyed op)))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i (to_rep (rec__keyboard__datat__length (us_split_fields1 keyedop))))) (= (to_rep1 (let ((temp___495 (rec__admin__datat__text (us_split_fields3 (select optokeyed op))))) (select temp___495 i))) (to_rep1 (let ((temp___496 (rec__keyboard__datat__text (us_split_fields1 keyedop)))) (select temp___496 i)))))))) :pattern ((str_comp keyedop op))))))
(declare-sort privileget 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq9 (privileget privileget) Bool)
(declare-const dummy9 privileget)
(declare-datatypes () ((privileget__ref (mk_privileget__ref (privileget__content privileget)))))
(define-fun privileget__ref___projection ((a privileget__ref)) privileget (privileget__content a))
(declare-fun to_rep4 (privileget) Int)
(declare-fun of_rep4 (Int) privileget)
(assert (forall ((x privileget)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x privileget)) (! (in_range6 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-sort opandnullt 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 4)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq10 (opandnullt opandnullt) Bool)
(declare-const dummy10 opandnullt)
(declare-datatypes () ((opandnullt__ref (mk_opandnullt__ref (opandnullt__content opandnullt)))))
(define-fun opandnullt__ref___projection ((a opandnullt__ref)) opandnullt (opandnullt__content a))
(declare-fun to_rep5 (opandnullt) Int)
(declare-fun of_rep5 (Int) opandnullt)
(assert (forall ((x opandnullt)) (! (= (of_rep5 (to_rep5 x)) x) :pattern ((to_rep5 x)))))
(assert (forall ((x opandnullt)) (! (in_range7 (to_rep5 x)) :pattern ((to_rep5 x)))))
(assert (forall ((x Int)) (! (=> (in_range7 x) (= (to_rep5 (of_rep5 x)) x)) :pattern ((to_rep5 (of_rep5 x))))))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__admin__t__rolepresent privileget) (rec__admin__t__currentop opandnullt)))))
(define-fun us_split_fields_RolePresent__projection ((a us_split_fields4)) privileget (rec__admin__t__rolepresent a))
(define-fun us_split_fields_CurrentOp__projection ((a us_split_fields4)) opandnullt (rec__admin__t__currentop a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___3__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq4 ((a us_rep2) (b us_rep2)) Bool (ite (and (= (to_rep4 (rec__admin__t__rolepresent (us_split_fields5 a))) (to_rep4 (rec__admin__t__rolepresent (us_split_fields5 b)))) (= (to_rep5 (rec__admin__t__currentop (us_split_fields5 a))) (to_rep5 (rec__admin__t__currentop (us_split_fields5 b))))) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep2) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep2) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))
(declare-const admin__t__rolepresent__first__bit Int)
(declare-const admin__t__rolepresent__last__bit Int)
(declare-const admin__t__rolepresent__position Int)
(assert (<= 0 admin__t__rolepresent__first__bit))
(assert (< admin__t__rolepresent__first__bit admin__t__rolepresent__last__bit))
(assert (<= 0 admin__t__rolepresent__position))
(declare-const admin__t__currentop__first__bit Int)
(declare-const admin__t__currentop__last__bit Int)
(declare-const admin__t__currentop__position Int)
(assert (<= 0 admin__t__currentop__first__bit))
(assert (< admin__t__currentop__first__bit admin__t__currentop__last__bit))
(assert (<= 0 admin__t__currentop__position))
(declare-fun user_eq11 (us_rep2 us_rep2) Bool)
(declare-const dummy11 us_rep2)
(declare-datatypes () ((t__ref (mk_t__ref (t__content us_rep2)))))
(define-fun t__ref___projection ((a t__ref)) us_rep2 (t__content a))
(declare-fun ispresent (us_rep2) Bool)
(declare-fun ispresent__function_guard (Bool us_rep2) Bool)
(declare-sort adminprivileget 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq12 (adminprivileget adminprivileget) Bool)
(declare-const dummy12 adminprivileget)
(declare-datatypes () ((adminprivileget__ref (mk_adminprivileget__ref (adminprivileget__content adminprivileget)))))
(define-fun adminprivileget__ref___projection ((a adminprivileget__ref)) adminprivileget (adminprivileget__content a))
(assert true)
(assert (forall ((theadmin us_rep2)) (! (= (= (ispresent theadmin) true) (in_range8 (to_rep4 (rec__admin__t__rolepresent (us_split_fields5 theadmin))))) :pattern ((ispresent theadmin)))))
(declare-fun allowedop (us_rep2 Int) Bool)
(declare-fun allowedop__function_guard (Bool us_rep2 Int) Bool)
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int Bool))))))
(declare-fun slide2 ((Array Int Bool) Int Int) (Array Int Bool))
(assert (forall ((a (Array Int Bool))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int Bool))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq5 ((a (Array Int Bool)) (a__first Int) (a__last Int) (b (Array Int Bool)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (select a temp___idx_155) (select b (+ (- b__first a__first) temp___idx_155)))))) true false))
(assert (forall ((a (Array Int Bool)) (b (Array Int Bool))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq5 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (select a temp___idx_155) (select b (+ (- b__first a__first) temp___idx_155))))))))))
(declare-const dummy13 (Array Int Bool))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int Bool)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int Bool)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int Bool)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int Bool))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int Bool))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int Bool))) (<= 0 (object__alignment5 a))))
(declare-fun user_eq13 ((Array Int Bool) (Array Int Bool)) Bool)
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int (Array Int Bool)))))))
(declare-fun slide3 ((Array Int (Array Int Bool)) Int Int) (Array Int (Array Int Bool)))
(assert (forall ((a (Array Int (Array Int Bool)))) (forall ((first Int)) (! (= (slide3 a first first) a) :pattern ((slide3 a first first))))))
(assert (forall ((a (Array Int (Array Int Bool)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq6 ((a (Array Int (Array Int Bool))) (a__first Int) (a__last Int) (b (Array Int (Array Int Bool))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (bool_eq5 (select a temp___idx_156) 1 4 (select b (+ (- b__first a__first) temp___idx_156)) 1 4) true)))) true false))
(assert (forall ((a (Array Int (Array Int Bool))) (b (Array Int (Array Int Bool)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (bool_eq5 (select a temp___idx_156) 1 4 (select b (+ (- b__first a__first) temp___idx_156)) 1 4) true))))))))
(declare-const isavailable (Array Int (Array Int Bool)))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(assert true)
(assert (forall ((theadmin us_rep2)) (forall ((op Int)) (! (= (= (allowedop theadmin op) true) (= (let ((temp___498 (select isavailable (to_rep4 (rec__admin__t__rolepresent (us_split_fields5 theadmin)))))) (select temp___498 op)) true)) :pattern ((allowedop theadmin op))))))
(define-fun dynamic_invariant1 ((temp___expr_472 Int) (temp___is_init_468 Bool) (temp___skip_constant_469 Bool) (temp___do_toplevel_470 Bool) (temp___do_typ_inv_471 Bool)) Bool (=> (or (= temp___is_init_468 true) (<= 0 4)) (in_range7 temp___expr_472)))
(declare-const theadmin us_rep2)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const keyedop us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-fun admin__isavailable__aggregate_def ((Array Int Bool) (Array Int Bool) (Array Int Bool)) (Array Int (Array Int Bool)))
(declare-fun temp_____aggregate_def_162 (Bool Bool) (Array Int Bool))
(declare-fun temp_____aggregate_def_167 (Bool Bool) (Array Int Bool))
(declare-fun temp_____aggregate_def_172 (Bool Bool Bool) (Array Int Bool))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_invariant2 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range2 temp___expr_74)))
(define-fun dynamic_invariant3 ((temp___expr_528 Int) (temp___is_init_524 Bool) (temp___skip_constant_525 Bool) (temp___do_toplevel_526 Bool) (temp___do_typ_inv_527 Bool)) Bool (=> (or (= temp___is_init_524 true) (<= 0 18)) (in_range4 temp___expr_528)))
(define-fun dynamic_invariant4 ((temp___expr_535 Int) (temp___is_init_531 Bool) (temp___skip_constant_532 Bool) (temp___do_toplevel_533 Bool) (temp___do_typ_inv_534 Bool)) Bool (=> (or (= temp___is_init_531 true) (<= 1 18)) (in_range5 temp___expr_535)))
(declare-fun admin__optokeyed__aggregate_def (us_rep1 us_rep1 us_rep1 us_rep1) (Array Int us_rep1))
(declare-fun temp___String_Literal_185 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 1)) 65) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 2)) 82)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 3)) 67)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 4)) 72)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 5)) 73)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 6)) 86)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 7)) 69)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 8)) 32)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 9)) 76)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 10)) 79)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 11)) 71)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 12)) 32)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 13)) 32)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 14)) 32)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 15)) 32)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 16)) 32)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 17)) 32)) (= (to_rep1 (select (temp___String_Literal_185 us_void_param) 18)) 32)) :pattern ((temp___String_Literal_185 us_void_param)))))
(declare-fun temp___String_Literal_186 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 1)) 85) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 2)) 80)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 3)) 68)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 4)) 65)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 5)) 84)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 6)) 69)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 7)) 32)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 8)) 67)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 9)) 79)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 10)) 78)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 11)) 70)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 12)) 73)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 13)) 71)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 14)) 32)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 15)) 68)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 16)) 65)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 17)) 84)) (= (to_rep1 (select (temp___String_Literal_186 us_void_param) 18)) 65)) :pattern ((temp___String_Literal_186 us_void_param)))))
(declare-fun temp___String_Literal_187 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 1)) 79) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 2)) 86)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 3)) 69)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 4)) 82)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 5)) 82)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 6)) 73)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 7)) 68)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 8)) 69)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 9)) 32)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 10)) 76)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 11)) 79)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 12)) 67)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 13)) 75)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 14)) 32)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 15)) 32)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 16)) 32)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 17)) 32)) (= (to_rep1 (select (temp___String_Literal_187 us_void_param) 18)) 32)) :pattern ((temp___String_Literal_187 us_void_param)))))
(declare-fun temp___String_Literal_188 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 1)) 83) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 2)) 72)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 3)) 85)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 4)) 84)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 5)) 68)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 6)) 79)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 7)) 87)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 8)) 78)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 9)) 32)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 10)) 32)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 11)) 32)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 12)) 32)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 13)) 32)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 14)) 32)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 15)) 32)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 16)) 32)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 17)) 32)) (= (to_rep1 (select (temp___String_Literal_188 us_void_param) 18)) 32)) :pattern ((temp___String_Literal_188 us_void_param)))))
(declare-const rliteral datalengtht1)
(assert (= (datalengthtqtint1 rliteral) 11))
(declare-const rliteral1 datai)
(assert (= (dataiqtint rliteral1) 7))
(declare-const rliteral2 datalengtht1)
(assert (= (datalengthtqtint1 rliteral2) 18))
(declare-const rliteral3 datai)
(assert (= (dataiqtint rliteral3) 6))
(declare-const rliteral4 datalengtht1)
(assert (= (datalengthtqtint1 rliteral4) 13))
(declare-const rliteral5 datai)
(assert (= (dataiqtint rliteral5) 8))
(declare-const rliteral6 datalengtht1)
(assert (= (datalengthtqtint1 rliteral6) 8))
(assert (= optokeyed (admin__optokeyed__aggregate_def (mk___rep1 (mk___split_fields1 rliteral rliteral1 (temp___String_Literal_185 Tuple0))) (mk___rep1 (mk___split_fields1 rliteral2 rliteral3 (temp___String_Literal_186 Tuple0))) (mk___rep1 (mk___split_fields1 rliteral4 rliteral5 (temp___String_Literal_187 Tuple0))) (mk___rep1 (mk___split_fields1 rliteral6 rliteral5 (temp___String_Literal_188 Tuple0))))))
(assert (forall ((temp___180 us_rep1) (temp___181 us_rep1) (temp___182 us_rep1) (temp___183 us_rep1)) (let ((temp___179 (admin__optokeyed__aggregate_def temp___180 temp___181 temp___182 temp___183))) (and (and (and (= (select temp___179 1) temp___180) (= (select temp___179 2) temp___181)) (= (select temp___179 3) temp___182)) (= (select temp___179 4) temp___183)))))
(assert (= isavailable (admin__isavailable__aggregate_def (temp_____aggregate_def_162 (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_167 (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_172 (distinct 1 0) (distinct 1 0) (distinct 0 0)))))
(assert (forall ((temp___158 (Array Int Bool)) (temp___159 (Array Int Bool)) (temp___160 (Array Int Bool))) (let ((temp___157 (admin__isavailable__aggregate_def temp___158 temp___159 temp___160))) (and (and (= (select temp___157 1) temp___158) (= (select temp___157 2) temp___159)) (= (select temp___157 3) temp___160)))))
(assert (forall ((temp___164 Bool) (temp___165 Bool)) (let ((temp___163 (temp_____aggregate_def_162 temp___164 temp___165))) (forall ((temp___166 Int)) (ite (= temp___166 3) (= (select temp___163 temp___166) temp___164) (= (select temp___163 temp___166) temp___165))))))
(assert (forall ((temp___169 Bool) (temp___170 Bool)) (let ((temp___168 (temp_____aggregate_def_167 temp___169 temp___170))) (forall ((temp___171 Int)) (ite (= temp___171 1) (= (select temp___168 temp___171) temp___169) (= (select temp___168 temp___171) temp___170))))))
(assert (forall ((temp___174 Bool) (temp___175 Bool) (temp___176 Bool)) (let ((temp___173 (temp_____aggregate_def_172 temp___174 temp___175 temp___176))) (forall ((temp___177 Int)) (ite (= temp___177 4) (= (select temp___173 temp___177) temp___175) (ite (= temp___177 2) (= (select temp___173 temp___177) temp___174) (= (select temp___173 temp___177) temp___176)))))))
(define-fun dynamic_invariant5 ((temp___expr_402 Int) (temp___is_init_398 Bool) (temp___skip_constant_399 Bool) (temp___do_toplevel_400 Bool) (temp___do_typ_inv_401 Bool)) Bool (=> (or (= temp___is_init_398 true) (<= 0 3)) (in_range6 temp___expr_402)))
(define-fun dynamic_invariant6 ((temp___expr_409 Int) (temp___is_init_405 Bool) (temp___skip_constant_406 Bool) (temp___do_toplevel_407 Bool) (temp___do_typ_inv_408 Bool)) Bool (=> (or (= temp___is_init_405 true) (<= 1 3)) (in_range8 temp___expr_409)))
(define-fun dynamic_invariant7 ((temp___expr_435 Int) (temp___is_init_431 Bool) (temp___skip_constant_432 Bool) (temp___do_toplevel_433 Bool) (temp___do_typ_inv_434 Bool)) Bool (=> (or (= temp___is_init_431 true) (<= 0 78)) (in_range1 temp___expr_435)))
(declare-const theop Int)
(declare-const op Int)
(declare-const admin__opisavailable__result Int)
(declare-const temp___593 Int)
(declare-const temp___592 Int)
(declare-const o Int)
(declare-const temp___591 (Array Int Bool))
(declare-const result Int)
(declare-const theop1 Int)
(declare-const result1 Int)
(declare-const op1 Int)
(declare-const theop2 Int)
(declare-const op2 Int)
(declare-const result2 Bool)
(declare-const result3 Bool)
(declare-const result4 Int)
(declare-const theop3 Int)
(declare-const theop4 Int)
(declare-const theop5 Int)
(declare-const theop6 Int)
(declare-const op3 Int)
(declare-const theop7 Int)
(declare-const op4 Int)
(declare-const theop8 Int)
(declare-const op5 Int)
(declare-const theop9 Int)
(declare-const op6 Int)
(declare-const result5 Int)
(declare-const admin__opisavailable__result1 Int)
(declare-const admin__opisavailable__result2 Int)
(declare-const admin__opisavailable__result3 Int)
(declare-const theop10 Int)
(declare-const op7 Int)
(declare-const admin__opisavailable__result4 Int)
(declare-const theop11 Int)
(declare-const op8 Int)
(declare-const admin__opisavailable__result5 Int)
(define-fun op9 () int__ref (mk_int__ref op5))
(define-fun theop12 () int__ref (mk_int__ref theop8))
(define-fun theop13 () int__ref (mk_int__ref theop6))
(declare-const result6 Int)
(assert (= (admin__isavailable__aggregate_def (temp_____aggregate_def_162 (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_167 (distinct 1 0) (distinct 0 0)) (temp_____aggregate_def_172 (distinct 1 0) (distinct 1 0) (distinct 0 0))) isavailable))
(assert (= (ispresent theadmin) true))
(assert (= (mk_int__ref result) (mk_int__ref theop)))
(assert (= theop1 0))
(assert (in_range7 theop1))
(assert (= (mk_int__ref result1) (mk_int__ref op)))
(assert (= op1 1))
(assert (=> (and (<= 1 op1) (<= op1 4)) (= temp___593 op1)))
(assert (=> (and (<= 1 op1) (<= op1 4)) (= temp___592 theop1)))
(assert (=> (and (<= 1 op1) (<= op1 4)) (= theop2 0)))
(assert (=> (and (<= 1 op1) (<= op1 4)) (and (and (=> (<= 0 4) (in_range7 theop2)) (=> (<= 1 4) (in_range3 op2))) (and (<= 1 op2) (<= op2 4)))))
(assert (=> (and (<= 1 op1) (<= op1 4)) (or (and (and (= theop3 theop4) (= theop5 theop3)) (and (and (= result2 (str_comp keyedop op2)) (= (= result2 true) (and (and (<= (to_rep3 (rec__admin__datat__minmatchlength (us_split_fields3 (select optokeyed op2)))) (to_rep (rec__keyboard__datat__length (us_split_fields1 keyedop)))) (<= (to_rep (rec__keyboard__datat__length (us_split_fields1 keyedop))) (to_rep2 (rec__admin__datat__length (us_split_fields3 (select optokeyed op2)))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i (to_rep (rec__keyboard__datat__length (us_split_fields1 keyedop))))) (= (to_rep1 (select (rec__admin__datat__text (us_split_fields3 (select optokeyed op2))) i)) (to_rep1 (select (rec__keyboard__datat__text (us_split_fields1 keyedop)) i)))))))) (and (= result2 true) (and (and (and (and (and (<= 1 (to_rep4 (rec__admin__t__rolepresent (us_split_fields5 theadmin)))) (<= (to_rep4 (rec__admin__t__rolepresent (us_split_fields5 theadmin))) 3)) (= o (to_rep4 (rec__admin__t__rolepresent (us_split_fields5 theadmin))))) (= temp___591 (select isavailable o))) (= result3 (select temp___591 op2))) (ite (= result3 true) (and (= theop2 result4) (= theop3 op2)) (= theop3 theop2)))))) (and (and (and (= result2 (str_comp keyedop op2)) (= (= result2 true) (and (and (<= (to_rep3 (rec__admin__datat__minmatchlength (us_split_fields3 (select optokeyed op2)))) (to_rep (rec__keyboard__datat__length (us_split_fields1 keyedop)))) (<= (to_rep (rec__keyboard__datat__length (us_split_fields1 keyedop))) (to_rep2 (rec__admin__datat__length (us_split_fields3 (select optokeyed op2)))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i (to_rep (rec__keyboard__datat__length (us_split_fields1 keyedop))))) (= (to_rep1 (select (rec__admin__datat__text (us_split_fields3 (select optokeyed op2))) i)) (to_rep1 (select (rec__keyboard__datat__text (us_split_fields1 keyedop)) i)))))))) (and (not (= result2 true)) (= theop3 theop2))) (and (and (= theop3 theop4) (= theop5 theop3)) (= op2 4))))))
(assert (=> (and (<= 1 op1) (<= op1 4)) (= op2 op3)))
(assert (=> (and (<= 1 op1) (<= op1 4)) (= theop13 (mk_int__ref theop4))))
(assert (=> (and (<= 1 op1) (<= op1 4)) (= op4 op2)))
(assert (=> (and (<= 1 op1) (<= op1 4)) (= theop7 theop5)))
(assert (=> (and (<= 1 op1) (<= op1 4)) (= op9 (mk_int__ref op3))))
(assert (=> (and (<= 1 op1) (<= op1 4)) (= theop12 theop13)))
(assert (=> (and (<= 1 op1) (<= op1 4)) (= op6 op4)))
(assert (=> (and (<= 1 op1) (<= op1 4)) (= theop9 theop7)))
(assert (=> (not (and (<= 1 op1) (<= op1 4))) (= op1 op5)))
(assert (=> (not (and (<= 1 op1) (<= op1 4))) (= theop1 theop8)))
(assert (=> (not (and (<= 1 op1) (<= op1 4))) (= op6 op1)))
(assert (=> (not (and (<= 1 op1) (<= op1 4))) (= theop9 theop1)))
(assert (= admin__opisavailable__result1 admin__opisavailable__result2))
(assert (= admin__opisavailable__result3 admin__opisavailable__result1))
(assert (= (mk_int__ref result5) (mk_int__ref admin__opisavailable__result)))
(assert (= admin__opisavailable__result1 theop8))
(assert (= (mk_int__ref admin__opisavailable__result4) (mk_int__ref admin__opisavailable__result2)))
(assert (= (mk_int__ref op7) op9))
(assert (= (mk_int__ref theop10) theop12))
(assert (= admin__opisavailable__result5 admin__opisavailable__result3))
(assert (= op8 op6))
(assert (= theop11 theop9))
(assert (= result6 admin__opisavailable__result4))
(assert (not (ite (= (ite (exists ((op10 Int)) (and (and (<= 1 op10) (<= op10 4)) (and (and (= (str_comp keyedop op10) true) (= (allowedop theadmin op10) true)) (= admin__opisavailable__result4 op10)))) true (= admin__opisavailable__result4 0)) true) (ite (= (ite (exists ((op10 Int)) (and (and (<= 1 op10) (<= op10 4)) (and (and (= (str_comp keyedop op10) true) (= (allowedop theadmin op10) true)) (= admin__opisavailable__result4 op10)))) (= admin__opisavailable__result4 0) false) false) true true) true)))
(check-sat)
(exit)
