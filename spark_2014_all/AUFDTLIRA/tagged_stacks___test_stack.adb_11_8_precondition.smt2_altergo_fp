(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type element

predicate in_range(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq1 : int, int -> bool

axiom bool_eq_def :
  (forall x:int. forall y:int [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : element, element -> bool

logic dummy : element

type element__ref = { element__content : element
}

function element__ref___projection(a: element__ref) : element =
  (a).element__content

logic to_rep : element -> int

logic of_rep : int -> element

axiom inversion_axiom :
  (forall x:element [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:element [to_rep(x)]. in_range(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,element) farray
}

logic slide : (int,element) farray, int, int -> (int,element) farray

axiom slide_eq :
  (forall a:(int,element) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,element) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq2 : (int,element) farray, int, int, (int,element) farray, int,
  int -> bool

axiom bool_eq_def1 :
  (forall a:(int,element) farray. forall a__first:int. forall a__last:int.
  forall b:(int,element) farray. forall b__first:int. forall b__last:int
  [bool_eq2(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_154:int. ((((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) and
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))) or
  (not ((a__first <= temp___idx_154) and (temp___idx_154 <= a__last)))))) ->
  (bool_eq2(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)]))))))) ->
  (bool_eq2(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,element) farray. forall b:(int,element) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq2(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))))))))

type less_than_max

predicate in_range1(x: int) = ((0 <= x) and (x <= 100))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : less_than_max, less_than_max -> bool

logic dummy1 : less_than_max

type less_than_max__ref = { less_than_max__content : less_than_max
}

function less_than_max__ref___projection(a: less_than_max__ref) : less_than_max =
  (a).less_than_max__content

logic to_rep1 : less_than_max -> int

logic of_rep1 : int -> less_than_max

axiom inversion_axiom1 :
  (forall x:less_than_max [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:less_than_max [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

logic dummy2 : (int,element) farray

logic value__size : int

logic object__size : (int,element) farray -> int

logic value__component__size : int

logic object__component__size : (int,element) farray -> int

logic value__alignment : int

logic object__alignment : (int,element) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,element) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,element) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,element) farray. (0 <= object__alignment(a)))

logic user_eq2 : (int,element) farray, (int,element) farray -> bool

type us_split_fields = { rec__stacks__stack_root__content :
(int,element) farray; rec__stacks__stack_root__length : less_than_max;
rec__ext__ : us_private
}

function us_split_fields_Content__projection(a: us_split_fields) : (int,element) farray =
  (a).rec__stacks__stack_root__content

function us_split_fields_Length__projection(a: us_split_fields) : less_than_max =
  (a).rec__stacks__stack_root__length

function us_split_fields___projection(a: us_split_fields) : us_private =
  (a).rec__ext__

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields; attr__tag : int
}

function us_rep___projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

function us_rep___2__projection(a: us_rep) : int = (a).attr__tag

logic bool_eq4 : us_rep, us_rep -> bool

axiom bool_eq_def3 :
  (forall a:us_rep. forall b:us_rep [bool_eq4(a, b)].
  ((((bool_eq2(((a).us_split_fields1).rec__stacks__stack_root__content, 1,
  100, ((b).us_split_fields1).rec__stacks__stack_root__content, 1,
  100) = true) and
  (to_rep1(((a).us_split_fields1).rec__stacks__stack_root__length) = to_rep1(((b).us_split_fields1).rec__stacks__stack_root__length))) ->
  (bool_eq4(a, b) = true)) and
  ((not ((bool_eq2(((a).us_split_fields1).rec__stacks__stack_root__content,
  1, 100, ((b).us_split_fields1).rec__stacks__stack_root__content, 1,
  100) = true) and
  (to_rep1(((a).us_split_fields1).rec__stacks__stack_root__length) = to_rep1(((b).us_split_fields1).rec__stacks__stack_root__length)))) ->
  (bool_eq4(a, b) = false))))

logic us_dispatch_eq : us_rep, us_rep -> bool

logic us_tag : int

logic value__size1 : int

logic object__size1 : us_rep -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:(int,element) farray. forall a1:less_than_max.
  forall a2:us_private. forall a3:int. (0 <= object__size1({
  us_split_fields1 = { rec__stacks__stack_root__content = a;
  rec__stacks__stack_root__length = a1; rec__ext__ = a2 }; attr__tag = a3
  })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:(int,element) farray. forall a1:less_than_max.
  forall a2:us_private. forall a3:int. (0 <= object__alignment1({
  us_split_fields1 = { rec__stacks__stack_root__content = a;
  rec__stacks__stack_root__length = a1; rec__ext__ = a2 }; attr__tag = a3
  })))

logic stacks__stack_root__content__first__bit : int

logic stacks__stack_root__content__last__bit : int

logic stacks__stack_root__content__position : int

axiom stacks__stack_root__content__first__bit_axiom :
  (0 <= stacks__stack_root__content__first__bit)

axiom stacks__stack_root__content__last__bit_axiom :
  (stacks__stack_root__content__first__bit <  stacks__stack_root__content__last__bit)

axiom stacks__stack_root__content__position_axiom :
  (0 <= stacks__stack_root__content__position)

logic stacks__stack_root__length__first__bit : int

logic stacks__stack_root__length__last__bit : int

logic stacks__stack_root__length__position : int

axiom stacks__stack_root__length__first__bit_axiom :
  (0 <= stacks__stack_root__length__first__bit)

axiom stacks__stack_root__length__last__bit_axiom :
  (stacks__stack_root__length__first__bit <  stacks__stack_root__length__last__bit)

axiom stacks__stack_root__length__position_axiom :
  (0 <= stacks__stack_root__length__position)

logic user_eq3 : us_rep, us_rep -> bool

logic dummy3 : (int,element) farray

logic dummy4 : less_than_max

logic dummy5 : us_private

logic dummy6 : int

type stack_root__ref = { stack_root__content : us_rep
}

function stack_root__ref___projection(a: stack_root__ref) : us_rep =
  (a).stack_root__content

logic size : us_rep -> int

logic size__function_guard : int, us_rep -> prop

logic temp___187 : int -> (int,element) farray

type integer

predicate in_range2(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq4 : integer, integer -> bool

logic dummy7 : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range3(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq5 : positive, positive -> bool

logic dummy8 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

logic to_rep2 : integer -> int

logic of_rep2 : int -> integer

axiom inversion_axiom2 :
  (forall x:integer [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:integer [to_rep2(x)]. in_range2(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range2(x) ->
  (to_rep2(of_rep2(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range2(f) -> (in_range2(l) ->
  ((to_rep2(first(mk(f, l))) = f) and (to_rep2(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range2(low) and (in_range2(high) and ((low <= high) ->
  (in_range3(low) and in_range3(high)))))

type us_t = { elts : (int,element) farray; rt : t
}

function to_array(a: us_t) : (int,element) farray = (a).elts

function of_array(a: (int,element) farray, f: int, l: int) : us_t = { elts =
  a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep2(first((a).rt))

function last1(a: us_t) : int = to_rep2(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size2 : int

logic object__size2 : (int,element) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,element) farray -> int

logic value__alignment2 : int

logic object__alignment2 : (int,element) farray -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:(int,element) farray. (0 <= object__size2(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,element) farray. (0 <= object__component__size1(a)))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:(int,element) farray. (0 <= object__alignment2(a)))

function bool_eq7(x: us_t, y: us_t) : bool = bool_eq2((x).elts,
  to_rep2(first((x).rt)), to_rep2(last((x).rt)), (y).elts,
  to_rep2(first((y).rt)), to_rep2(last((y).rt)))

logic user_eq6 : us_t, us_t -> bool

logic dummy9 : (int,element) farray

logic dummy10 : t

type model____ref = { model____content : us_t
}

function model____ref___projection(a: model____ref) : us_t =
  (a).model____content

logic get_model : us_rep -> us_t

logic get_model__function_guard : us_t, us_rep -> prop

logic get_model1 : int, us_rep -> us_t

logic get_model__function_guard1 : us_t, int, us_rep -> prop

logic us_tag1 : int

logic value__size3 : int

logic object__size3 : us_rep -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:(int,element) farray. forall a1:less_than_max.
  forall a2:us_private. forall a3:int. (0 <= object__size3({
  us_split_fields1 = { rec__stacks__stack_root__content = a;
  rec__stacks__stack_root__length = a1; rec__ext__ = a2 }; attr__tag = a3
  })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:(int,element) farray. forall a1:less_than_max.
  forall a2:us_private. forall a3:int. (0 <= object__alignment3({
  us_split_fields1 = { rec__stacks__stack_root__content = a;
  rec__stacks__stack_root__length = a1; rec__ext__ = a2 }; attr__tag = a3
  })))

logic stacks__stack_root__content__first__bit1 : int

logic stacks__stack_root__content__last__bit1 : int

logic stacks__stack_root__content__position1 : int

axiom stacks__stack_root__content__first__bit_axiom1 :
  (0 <= stacks__stack_root__content__first__bit1)

axiom stacks__stack_root__content__last__bit_axiom1 :
  (stacks__stack_root__content__first__bit1 <  stacks__stack_root__content__last__bit1)

axiom stacks__stack_root__content__position_axiom1 :
  (0 <= stacks__stack_root__content__position1)

logic stacks__stack_root__length__first__bit1 : int

logic stacks__stack_root__length__last__bit1 : int

logic stacks__stack_root__length__position1 : int

axiom stacks__stack_root__length__first__bit_axiom1 :
  (0 <= stacks__stack_root__length__first__bit1)

axiom stacks__stack_root__length__last__bit_axiom1 :
  (stacks__stack_root__length__first__bit1 <  stacks__stack_root__length__last__bit1)

axiom stacks__stack_root__length__position_axiom1 :
  (0 <= stacks__stack_root__length__position1)

logic user_eq7 : us_rep, us_rep -> bool

logic dummy11 : (int,element) farray

logic dummy12 : less_than_max

logic dummy13 : us_private

logic dummy14 : int

type stack__ref = { stack__content : us_rep
}

function stack__ref___projection(a: stack__ref) : us_rep = (a).stack__content

logic get_model__2 : us_rep -> us_t

logic get_model__2__function_guard : us_t, us_rep -> prop

logic get_model__21 : int, us_rep -> us_t

logic get_model__2__function_guard1 : us_t, int, us_rep -> prop

type positive_less_than_max

predicate in_range4(x: int) = ((1 <= x) and (x <= 100))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq8 : positive_less_than_max, positive_less_than_max -> bool

logic dummy15 : positive_less_than_max

type positive_less_than_max__ref = { positive_less_than_max__content :
positive_less_than_max
}

function positive_less_than_max__ref___projection(a: positive_less_than_max__ref) : positive_less_than_max =
  (a).positive_less_than_max__content

logic to_rep3 : positive_less_than_max -> int

logic of_rep3 : int -> positive_less_than_max

axiom inversion_axiom3 :
  (forall x:positive_less_than_max [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:positive_less_than_max [to_rep3(x)]. in_range4(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range4(x) ->
  (to_rep3(of_rep3(x)) = x)))

type us_split_fields2 = { rec__stacks__buffer__first :
positive_less_than_max; rec__stacks__stack_root__content1 :
(int,element) farray; rec__stacks__stack_root__length1 : less_than_max;
rec__ext__1 : us_private
}

function us_split_fields_First__projection(a: us_split_fields2) : positive_less_than_max =
  (a).rec__stacks__buffer__first

function us_split_fields_Content__2__projection(a: us_split_fields2) : (int,element) farray =
  (a).rec__stacks__stack_root__content1

function us_split_fields_Length__2__projection(a: us_split_fields2) : less_than_max =
  (a).rec__stacks__stack_root__length1

function us_split_fields___2__projection(a: us_split_fields2) : us_private =
  (a).rec__ext__1

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2; attr__tag1 : int
}

function us_rep___3__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

function us_rep___4__projection(a: us_rep1) : int = (a).attr__tag1

logic hide_ext__ : positive_less_than_max, us_private -> us_private

logic extract__first : us_private -> positive_less_than_max

axiom extract__first__conv :
  (forall first2:positive_less_than_max.
  (forall rec__ext__2:us_private. (extract__first(hide_ext__(first2,
  rec__ext__2)) = first2)))

logic extract__ext__ : us_private -> us_private

function to_base(a: us_rep1) : us_rep = { us_split_fields1 = {
  rec__stacks__stack_root__content =
  ((a).us_split_fields3).rec__stacks__stack_root__content1;
  rec__stacks__stack_root__length =
  ((a).us_split_fields3).rec__stacks__stack_root__length1; rec__ext__ =
  hide_ext__(((a).us_split_fields3).rec__stacks__buffer__first,
  ((a).us_split_fields3).rec__ext__1) }; attr__tag = (a).attr__tag1 }

function of_base(r: us_rep) : us_rep1 = { us_split_fields3 = {
  rec__stacks__buffer__first =
  extract__first(((r).us_split_fields1).rec__ext__);
  rec__stacks__stack_root__content1 =
  ((r).us_split_fields1).rec__stacks__stack_root__content;
  rec__stacks__stack_root__length1 =
  ((r).us_split_fields1).rec__stacks__stack_root__length; rec__ext__1 =
  extract__ext__(((r).us_split_fields1).rec__ext__) }; attr__tag1 =
  (r).attr__tag }

logic bool_eq9 : us_rep1, us_rep1 -> bool

axiom bool_eq_def7 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq9(a, b)].
  (((((to_rep3(((a).us_split_fields3).rec__stacks__buffer__first) = to_rep3(((b).us_split_fields3).rec__stacks__buffer__first)) and
  (bool_eq2(((a).us_split_fields3).rec__stacks__stack_root__content1, 1, 100,
  ((b).us_split_fields3).rec__stacks__stack_root__content1, 1,
  100) = true)) and
  (to_rep1(((a).us_split_fields3).rec__stacks__stack_root__length1) = to_rep1(((b).us_split_fields3).rec__stacks__stack_root__length1))) ->
  (bool_eq9(a, b) = true)) and
  ((not (((to_rep3(((a).us_split_fields3).rec__stacks__buffer__first) = to_rep3(((b).us_split_fields3).rec__stacks__buffer__first)) and
  (bool_eq2(((a).us_split_fields3).rec__stacks__stack_root__content1, 1, 100,
  ((b).us_split_fields3).rec__stacks__stack_root__content1, 1,
  100) = true)) and
  (to_rep1(((a).us_split_fields3).rec__stacks__stack_root__length1) = to_rep1(((b).us_split_fields3).rec__stacks__stack_root__length1)))) ->
  (bool_eq9(a, b) = false))))

logic us_tag2 : int

logic value__size4 : int

logic object__size4 : us_rep1 -> int

logic value__alignment4 : int

logic object__alignment4 : us_rep1 -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:positive_less_than_max. forall a1:(int,element) farray.
  forall a2:less_than_max. forall a3:us_private. forall a4:int.
  (0 <= object__size4({ us_split_fields3 = { rec__stacks__buffer__first = a;
  rec__stacks__stack_root__content1 = a1; rec__stacks__stack_root__length1 =
  a2; rec__ext__1 = a3 }; attr__tag1 = a4 })))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:positive_less_than_max. forall a1:(int,element) farray.
  forall a2:less_than_max. forall a3:us_private. forall a4:int.
  (0 <= object__alignment4({ us_split_fields3 = {
  rec__stacks__buffer__first = a; rec__stacks__stack_root__content1 = a1;
  rec__stacks__stack_root__length1 = a2; rec__ext__1 = a3 }; attr__tag1 = a4
  })))

logic stacks__buffer__first__first__bit : int

logic stacks__buffer__first__last__bit : int

logic stacks__buffer__first__position : int

axiom stacks__buffer__first__first__bit_axiom :
  (0 <= stacks__buffer__first__first__bit)

axiom stacks__buffer__first__last__bit_axiom :
  (stacks__buffer__first__first__bit <  stacks__buffer__first__last__bit)

axiom stacks__buffer__first__position_axiom :
  (0 <= stacks__buffer__first__position)

logic stacks__stack_root__content__first__bit2 : int

logic stacks__stack_root__content__last__bit2 : int

logic stacks__stack_root__content__position2 : int

axiom stacks__stack_root__content__first__bit_axiom2 :
  (0 <= stacks__stack_root__content__first__bit2)

axiom stacks__stack_root__content__last__bit_axiom2 :
  (stacks__stack_root__content__first__bit2 <  stacks__stack_root__content__last__bit2)

axiom stacks__stack_root__content__position_axiom2 :
  (0 <= stacks__stack_root__content__position2)

logic stacks__stack_root__length__first__bit2 : int

logic stacks__stack_root__length__last__bit2 : int

logic stacks__stack_root__length__position2 : int

axiom stacks__stack_root__length__first__bit_axiom2 :
  (0 <= stacks__stack_root__length__first__bit2)

axiom stacks__stack_root__length__last__bit_axiom2 :
  (stacks__stack_root__length__first__bit2 <  stacks__stack_root__length__last__bit2)

axiom stacks__stack_root__length__position_axiom2 :
  (0 <= stacks__stack_root__length__position2)

logic user_eq9 : us_rep1, us_rep1 -> bool

logic dummy16 : positive_less_than_max

logic dummy17 : (int,element) farray

logic dummy18 : less_than_max

logic dummy19 : us_private

logic dummy20 : int

type buffer__ref = { buffer__content : us_rep1
}

function buffer__ref___projection(a: buffer__ref) : us_rep1 =
  (a).buffer__content

logic get_model__3 : us_rep1 -> us_t

logic get_model__3__function_guard : us_t, us_rep1 -> prop

logic get_model__31 : int, us_rep1 -> us_t

logic get_model__3__function_guard1 : us_t, int, us_rep1 -> prop

axiom get_model__post_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })].
  ((in_range1(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt))) and
  (in_range1(to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt))) and (length(get_model({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })) = size({ us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })))) and dynamic_property(1, 2147483647, to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })).rt)), to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt)))))

axiom get_model__post__dispatch_axiom :
  (forall attr__tag2:int.
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [get_model1(attr__tag2, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })]. ((in_range1(to_rep2(first((get_model1(attr__tag2, { us_split_fields1 =
  { rec__stacks__stack_root__content = s; rec__stacks__stack_root__length =
  s1; rec__ext__ = s2 }; attr__tag = s3 })).rt))) and
  (in_range1(to_rep2(last((get_model1(attr__tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt))) and
  (length(get_model1(attr__tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })) = size({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })))) and dynamic_property(1, 2147483647,
  to_rep2(first((get_model1(attr__tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt)),
  to_rep2(last((get_model1(attr__tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt))))))

axiom stacks__stack_root__compat_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [get_model1(us_tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })]. (get_model({ us_split_fields1 = { rec__stacks__stack_root__content =
  s; rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  }) = get_model1(us_tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })))

axiom stacks__stack__compat_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [get_model1(us_tag1, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })]. (get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = get_model1(us_tag1, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })))

axiom stacks__buffer__compat_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [get_model1(us_tag2, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })]. (get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })) = get_model1(us_tag2, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })))

logic is_empty : us_rep -> bool

logic is_empty__function_guard : bool, us_rep -> prop

axiom is_empty__post_axiom : true

axiom is_empty__def_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [is_empty({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })]. ((is_empty({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = true) <-> (size({ us_split_fields1 =
  { rec__stacks__stack_root__content = s; rec__stacks__stack_root__length =
  s1; rec__ext__ = s2 }; attr__tag = s3 }) = 0)))

logic reset__specific_post : int, us_split_fields, int,
  us_split_fields -> prop

axiom stacks__stack_root__compat_axiom1 :
  (forall stacks__reset__s__fields:(int,element) farray.
  forall stacks__reset__s__fields1:less_than_max.
  forall stacks__reset__s__fields2:us_private.
  forall stacks__reset__s__old__fields:(int,element) farray.
  forall stacks__reset__s__old__fields1:less_than_max.
  forall stacks__reset__s__old__fields2:us_private.
  (forall s__attr__tag:int [reset__specific_post(us_tag, {
  rec__stacks__stack_root__content = stacks__reset__s__fields;
  rec__stacks__stack_root__length = stacks__reset__s__fields1; rec__ext__ =
  stacks__reset__s__fields2 }, s__attr__tag, {
  rec__stacks__stack_root__content = stacks__reset__s__old__fields;
  rec__stacks__stack_root__length = stacks__reset__s__old__fields1;
  rec__ext__ = stacks__reset__s__old__fields2 })].
  (reset__specific_post(us_tag, { rec__stacks__stack_root__content =
  stacks__reset__s__fields; rec__stacks__stack_root__length =
  stacks__reset__s__fields1; rec__ext__ = stacks__reset__s__fields2 },
  s__attr__tag, { rec__stacks__stack_root__content =
  stacks__reset__s__old__fields; rec__stacks__stack_root__length =
  stacks__reset__s__old__fields1; rec__ext__ = stacks__reset__s__old__fields2
  }) -> (is_empty({ us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__reset__s__fields; rec__stacks__stack_root__length =
  stacks__reset__s__fields1; rec__ext__ = stacks__reset__s__fields2 };
  attr__tag = s__attr__tag }) = true))))

axiom stacks__stack__compat_axiom1 :
  (forall stacks__reset__s__fields:(int,element) farray.
  forall stacks__reset__s__fields1:less_than_max.
  forall stacks__reset__s__fields2:us_private.
  forall stacks__reset__s__old__fields:(int,element) farray.
  forall stacks__reset__s__old__fields1:less_than_max.
  forall stacks__reset__s__old__fields2:us_private.
  (forall s__attr__tag:int [reset__specific_post(us_tag1, {
  rec__stacks__stack_root__content = stacks__reset__s__fields;
  rec__stacks__stack_root__length = stacks__reset__s__fields1; rec__ext__ =
  stacks__reset__s__fields2 }, s__attr__tag, {
  rec__stacks__stack_root__content = stacks__reset__s__old__fields;
  rec__stacks__stack_root__length = stacks__reset__s__old__fields1;
  rec__ext__ = stacks__reset__s__old__fields2 })].
  (reset__specific_post(us_tag1, { rec__stacks__stack_root__content =
  stacks__reset__s__fields; rec__stacks__stack_root__length =
  stacks__reset__s__fields1; rec__ext__ = stacks__reset__s__fields2 },
  s__attr__tag, { rec__stacks__stack_root__content =
  stacks__reset__s__old__fields; rec__stacks__stack_root__length =
  stacks__reset__s__old__fields1; rec__ext__ = stacks__reset__s__old__fields2
  }) -> (is_empty({ us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__reset__s__fields; rec__stacks__stack_root__length =
  stacks__reset__s__fields1; rec__ext__ = stacks__reset__s__fields2 };
  attr__tag = s__attr__tag }) = true))))

axiom stacks__buffer__compat_axiom1 :
  (forall stacks__reset__s__fields:(int,element) farray.
  forall stacks__reset__s__fields1:less_than_max.
  forall stacks__reset__s__fields2:us_private.
  forall stacks__reset__s__old__fields:(int,element) farray.
  forall stacks__reset__s__old__fields1:less_than_max.
  forall stacks__reset__s__old__fields2:us_private.
  (forall s__attr__tag:int [reset__specific_post(us_tag2, {
  rec__stacks__stack_root__content = stacks__reset__s__fields;
  rec__stacks__stack_root__length = stacks__reset__s__fields1; rec__ext__ =
  stacks__reset__s__fields2 }, s__attr__tag, {
  rec__stacks__stack_root__content = stacks__reset__s__old__fields;
  rec__stacks__stack_root__length = stacks__reset__s__old__fields1;
  rec__ext__ = stacks__reset__s__old__fields2 })].
  (reset__specific_post(us_tag2, { rec__stacks__stack_root__content =
  stacks__reset__s__fields; rec__stacks__stack_root__length =
  stacks__reset__s__fields1; rec__ext__ = stacks__reset__s__fields2 },
  s__attr__tag, { rec__stacks__stack_root__content =
  stacks__reset__s__old__fields; rec__stacks__stack_root__length =
  stacks__reset__s__old__fields1; rec__ext__ = stacks__reset__s__old__fields2
  }) -> (is_empty({ us_split_fields1 = { rec__stacks__stack_root__content =
  ((of_base({ us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__reset__s__fields; rec__stacks__stack_root__length =
  stacks__reset__s__fields1; rec__ext__ = stacks__reset__s__fields2 };
  attr__tag = s__attr__tag
  })).us_split_fields3).rec__stacks__stack_root__content1;
  rec__stacks__stack_root__length = ((of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__reset__s__fields;
  rec__stacks__stack_root__length = stacks__reset__s__fields1; rec__ext__ =
  stacks__reset__s__fields2 }; attr__tag = s__attr__tag
  })).us_split_fields3).rec__stacks__stack_root__length1; rec__ext__ =
  hide_ext__(((of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__reset__s__fields;
  rec__stacks__stack_root__length = stacks__reset__s__fields1; rec__ext__ =
  stacks__reset__s__fields2 }; attr__tag = s__attr__tag
  })).us_split_fields3).rec__stacks__buffer__first, ((of_base({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__reset__s__fields; rec__stacks__stack_root__length =
  stacks__reset__s__fields1; rec__ext__ = stacks__reset__s__fields2 };
  attr__tag = s__attr__tag })).us_split_fields3).rec__ext__1) }; attr__tag =
  (of_base({ us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__reset__s__fields; rec__stacks__stack_root__length =
  stacks__reset__s__fields1; rec__ext__ = stacks__reset__s__fields2 };
  attr__tag = s__attr__tag })).attr__tag1 }) = true))))

logic peek : us_rep -> int

logic peek__function_guard : int, us_rep -> prop

logic peek1 : int, us_rep -> int

logic peek__function_guard1 : int, int, us_rep -> prop

predicate dynamic_property1(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq10 : integer, integer -> bool

logic dummy21 : integer

type t16s__ref = { t16s__content : integer
}

function t16s__ref___projection(a: t16s__ref) : integer = (a).t16s__content

type t1

logic first2 : t1 -> integer

logic last2 : t1 -> integer

logic mk1 : int, int -> t1

axiom mk_def1 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range2(f) -> (in_range2(l) ->
  ((to_rep2(first2(mk1(f, l))) = f) and (to_rep2(last2(mk1(f, l))) = l)))))

predicate dynamic_property2(range_first: int, range_last: int, low: int,
  high: int) = (in_range2(low) and (in_range2(high) and ((low <= high) ->
  (dynamic_property1(range_first, range_last, low) and
  dynamic_property1(range_first, range_last, high)))))

type us_t1 = { elts1 : (int,element) farray; rt1 : t1
}

function to_array1(a: us_t1) : (int,element) farray = (a).elts1

function of_array1(a: (int,element) farray, f: int, l: int) : us_t1 = {
  elts1 = a; rt1 = mk1(f, l) }

function first3(a: us_t1) : int = to_rep2(first2((a).rt1))

function last3(a: us_t1) : int = to_rep2(last2((a).rt1))

logic length1 : us_t1 -> int

axiom length_def1 :
  (forall a:us_t1 [length1(a)]. (((first3(a) <= last3(a)) ->
  (length1(a) = ((last3(a) - first3(a)) + 1))) and
  ((not (first3(a) <= last3(a))) -> (length1(a) = 0))))

logic value__size5 : int

logic object__size5 : (int,element) farray -> int

logic value__component__size2 : int

logic object__component__size2 : (int,element) farray -> int

logic value__alignment5 : int

logic object__alignment5 : (int,element) farray -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 :
  (forall a:(int,element) farray. (0 <= object__size5(a)))

axiom value__component__size_axiom2 : (0 <= value__component__size2)

axiom object__component__size_axiom2 :
  (forall a:(int,element) farray. (0 <= object__component__size2(a)))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:(int,element) farray. (0 <= object__alignment5(a)))

function bool_eq11(x: us_t1, y: us_t1) : bool = bool_eq2((x).elts1,
  to_rep2(first2((x).rt1)), to_rep2(last2((x).rt1)), (y).elts1,
  to_rep2(first2((y).rt1)), to_rep2(last2((y).rt1)))

logic user_eq11 : us_t1, us_t1 -> bool

logic dummy22 : (int,element) farray

logic dummy23 : t1

type t17s__ref = { t17s__content : us_t1
}

function t17s__ref___projection(a: t17s__ref) : us_t1 = (a).t17s__content

predicate dynamic_property3(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq12 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq12 : integer, integer -> bool

logic dummy24 : integer

type t6b__ref = { t6b__content : integer
}

function t6b__ref___projection(a: t6b__ref) : integer = (a).t6b__content

type t2

logic first4 : t2 -> integer

logic last4 : t2 -> integer

logic mk2 : int, int -> t2

axiom mk_def2 :
  (forall f:int. forall l:int [mk2(f, l)]. (in_range2(f) -> (in_range2(l) ->
  ((to_rep2(first4(mk2(f, l))) = f) and (to_rep2(last4(mk2(f, l))) = l)))))

predicate dynamic_property4(range_first: int, range_last: int, low: int,
  high: int) = (in_range2(low) and (in_range2(high) and ((low <= high) ->
  (dynamic_property3(range_first, range_last, low) and
  dynamic_property3(range_first, range_last, high)))))

type us_t2 = { elts2 : (int,element) farray; rt2 : t2
}

function to_array2(a: us_t2) : (int,element) farray = (a).elts2

function of_array2(a: (int,element) farray, f: int, l: int) : us_t2 = {
  elts2 = a; rt2 = mk2(f, l) }

function first5(a: us_t2) : int = to_rep2(first4((a).rt2))

function last5(a: us_t2) : int = to_rep2(last4((a).rt2))

logic length2 : us_t2 -> int

axiom length_def2 :
  (forall a:us_t2 [length2(a)]. (((first5(a) <= last5(a)) ->
  (length2(a) = ((last5(a) - first5(a)) + 1))) and
  ((not (first5(a) <= last5(a))) -> (length2(a) = 0))))

logic value__size6 : int

logic object__size6 : (int,element) farray -> int

logic value__component__size3 : int

logic object__component__size3 : (int,element) farray -> int

logic value__alignment6 : int

logic object__alignment6 : (int,element) farray -> int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 :
  (forall a:(int,element) farray. (0 <= object__size6(a)))

axiom value__component__size_axiom3 : (0 <= value__component__size3)

axiom object__component__size_axiom3 :
  (forall a:(int,element) farray. (0 <= object__component__size3(a)))

axiom value__alignment_axiom6 : (0 <= value__alignment6)

axiom object__alignment_axiom6 :
  (forall a:(int,element) farray. (0 <= object__alignment6(a)))

function bool_eq13(x: us_t2, y: us_t2) : bool = bool_eq2((x).elts2,
  to_rep2(first4((x).rt2)), to_rep2(last4((x).rt2)), (y).elts2,
  to_rep2(first4((y).rt2)), to_rep2(last4((y).rt2)))

logic user_eq13 : us_t2, us_t2 -> bool

logic dummy25 : (int,element) farray

logic dummy26 : t2

type t5b__ref = { t5b__content : us_t2
}

function t5b__ref___projection(a: t5b__ref) : us_t2 = (a).t5b__content

logic peek__2 : us_rep -> int

logic peek__2__function_guard : int, us_rep -> prop

logic peek__21 : int, us_rep -> int

logic peek__2__function_guard1 : int, int, us_rep -> prop

predicate dynamic_property5(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq14 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq14(x, y)]. (((x = y) -> (bool_eq14(x,
  y) = true)) and ((not (x = y)) -> (bool_eq14(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq14 : integer, integer -> bool

logic dummy27 : integer

type t42s__ref = { t42s__content : integer
}

function t42s__ref___projection(a: t42s__ref) : integer = (a).t42s__content

type t3

logic first6 : t3 -> integer

logic last6 : t3 -> integer

logic mk3 : int, int -> t3

axiom mk_def3 :
  (forall f:int. forall l:int [mk3(f, l)]. (in_range2(f) -> (in_range2(l) ->
  ((to_rep2(first6(mk3(f, l))) = f) and (to_rep2(last6(mk3(f, l))) = l)))))

predicate dynamic_property6(range_first: int, range_last: int, low: int,
  high: int) = (in_range2(low) and (in_range2(high) and ((low <= high) ->
  (dynamic_property5(range_first, range_last, low) and
  dynamic_property5(range_first, range_last, high)))))

type us_t3 = { elts3 : (int,element) farray; rt3 : t3
}

function to_array3(a: us_t3) : (int,element) farray = (a).elts3

function of_array3(a: (int,element) farray, f: int, l: int) : us_t3 = {
  elts3 = a; rt3 = mk3(f, l) }

function first7(a: us_t3) : int = to_rep2(first6((a).rt3))

function last7(a: us_t3) : int = to_rep2(last6((a).rt3))

logic length3 : us_t3 -> int

axiom length_def3 :
  (forall a:us_t3 [length3(a)]. (((first7(a) <= last7(a)) ->
  (length3(a) = ((last7(a) - first7(a)) + 1))) and
  ((not (first7(a) <= last7(a))) -> (length3(a) = 0))))

logic value__size7 : int

logic object__size7 : (int,element) farray -> int

logic value__component__size4 : int

logic object__component__size4 : (int,element) farray -> int

logic value__alignment7 : int

logic object__alignment7 : (int,element) farray -> int

axiom value__size_axiom7 : (0 <= value__size7)

axiom object__size_axiom7 :
  (forall a:(int,element) farray. (0 <= object__size7(a)))

axiom value__component__size_axiom4 : (0 <= value__component__size4)

axiom object__component__size_axiom4 :
  (forall a:(int,element) farray. (0 <= object__component__size4(a)))

axiom value__alignment_axiom7 : (0 <= value__alignment7)

axiom object__alignment_axiom7 :
  (forall a:(int,element) farray. (0 <= object__alignment7(a)))

function bool_eq15(x: us_t3, y: us_t3) : bool = bool_eq2((x).elts3,
  to_rep2(first6((x).rt3)), to_rep2(last6((x).rt3)), (y).elts3,
  to_rep2(first6((y).rt3)), to_rep2(last6((y).rt3)))

logic user_eq15 : us_t3, us_t3 -> bool

logic dummy28 : (int,element) farray

logic dummy29 : t3

type t41s__ref = { t41s__content : us_t3
}

function t41s__ref___projection(a: t41s__ref) : us_t3 = (a).t41s__content

logic peek__3 : us_rep1 -> int

logic peek__3__function_guard : int, us_rep1 -> prop

logic peek__31 : int, us_rep1 -> int

logic peek__3__function_guard1 : int, int, us_rep1 -> prop

predicate dynamic_property7(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq16 : int, int -> bool

axiom bool_eq_def11 :
  (forall x:int. forall y:int [bool_eq16(x, y)]. (((x = y) -> (bool_eq16(x,
  y) = true)) and ((not (x = y)) -> (bool_eq16(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq16 : integer, integer -> bool

logic dummy30 : integer

type t74s__ref = { t74s__content : integer
}

function t74s__ref___projection(a: t74s__ref) : integer = (a).t74s__content

type t4

logic first8 : t4 -> integer

logic last8 : t4 -> integer

logic mk4 : int, int -> t4

axiom mk_def4 :
  (forall f:int. forall l:int [mk4(f, l)]. (in_range2(f) -> (in_range2(l) ->
  ((to_rep2(first8(mk4(f, l))) = f) and (to_rep2(last8(mk4(f, l))) = l)))))

predicate dynamic_property8(range_first: int, range_last: int, low: int,
  high: int) = (in_range2(low) and (in_range2(high) and ((low <= high) ->
  (dynamic_property7(range_first, range_last, low) and
  dynamic_property7(range_first, range_last, high)))))

type us_t4 = { elts4 : (int,element) farray; rt4 : t4
}

function to_array4(a: us_t4) : (int,element) farray = (a).elts4

function of_array4(a: (int,element) farray, f: int, l: int) : us_t4 = {
  elts4 = a; rt4 = mk4(f, l) }

function first9(a: us_t4) : int = to_rep2(first8((a).rt4))

function last9(a: us_t4) : int = to_rep2(last8((a).rt4))

logic length4 : us_t4 -> int

axiom length_def4 :
  (forall a:us_t4 [length4(a)]. (((first9(a) <= last9(a)) ->
  (length4(a) = ((last9(a) - first9(a)) + 1))) and
  ((not (first9(a) <= last9(a))) -> (length4(a) = 0))))

logic value__size8 : int

logic object__size8 : (int,element) farray -> int

logic value__component__size5 : int

logic object__component__size5 : (int,element) farray -> int

logic value__alignment8 : int

logic object__alignment8 : (int,element) farray -> int

axiom value__size_axiom8 : (0 <= value__size8)

axiom object__size_axiom8 :
  (forall a:(int,element) farray. (0 <= object__size8(a)))

axiom value__component__size_axiom5 : (0 <= value__component__size5)

axiom object__component__size_axiom5 :
  (forall a:(int,element) farray. (0 <= object__component__size5(a)))

axiom value__alignment_axiom8 : (0 <= value__alignment8)

axiom object__alignment_axiom8 :
  (forall a:(int,element) farray. (0 <= object__alignment8(a)))

function bool_eq17(x: us_t4, y: us_t4) : bool = bool_eq2((x).elts4,
  to_rep2(first8((x).rt4)), to_rep2(last8((x).rt4)), (y).elts4,
  to_rep2(first8((y).rt4)), to_rep2(last8((y).rt4)))

logic user_eq17 : us_t4, us_t4 -> bool

logic dummy31 : (int,element) farray

logic dummy32 : t4

type t73s__ref = { t73s__content : us_t4
}

function t73s__ref___projection(a: t73s__ref) : us_t4 = (a).t73s__content

logic pop__specific_post : int, us_split_fields, int, int, us_split_fields,
  int -> prop

axiom stacks__stack_root__compat_axiom2 :
  (forall stacks__pop__s__fields:(int,element) farray.
  forall stacks__pop__s__fields1:less_than_max.
  forall stacks__pop__s__fields2:us_private.
  forall stacks__pop__s__old__fields:(int,element) farray.
  forall stacks__pop__s__old__fields1:less_than_max.
  forall stacks__pop__s__old__fields2:us_private.
  (forall s__attr__tag:int. forall stacks__pop__e:int.
  forall stacks__pop__e__old:int [pop__specific_post(us_tag, {
  rec__stacks__stack_root__content = stacks__pop__s__fields;
  rec__stacks__stack_root__length = stacks__pop__s__fields1; rec__ext__ =
  stacks__pop__s__fields2 }, s__attr__tag, stacks__pop__e, {
  rec__stacks__stack_root__content = stacks__pop__s__old__fields;
  rec__stacks__stack_root__length = stacks__pop__s__old__fields1;
  rec__ext__ = stacks__pop__s__old__fields2 }, stacks__pop__e__old)].
  (pop__specific_post(us_tag, { rec__stacks__stack_root__content =
  stacks__pop__s__fields; rec__stacks__stack_root__length =
  stacks__pop__s__fields1; rec__ext__ = stacks__pop__s__fields2 },
  s__attr__tag, stacks__pop__e, { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 },
  stacks__pop__e__old) -> ((stacks__pop__e = peek({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__old__fields;
  rec__stacks__stack_root__length = stacks__pop__s__old__fields1;
  rec__ext__ = stacks__pop__s__old__fields2 }; attr__tag = s__attr__tag
  })) and (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__fields;
  rec__stacks__stack_root__length = stacks__pop__s__fields1; rec__ext__ =
  stacks__pop__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__fields;
  rec__stacks__stack_root__length = stacks__pop__s__fields1; rec__ext__ =
  stacks__pop__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__fields;
  rec__stacks__stack_root__length = stacks__pop__s__fields1; rec__ext__ =
  stacks__pop__s__fields2 }; attr__tag = s__attr__tag })).rt)), (get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 };
  attr__tag = s__attr__tag })).elts,
  to_rep2(first2(mk1(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__old__fields;
  rec__stacks__stack_root__length = stacks__pop__s__old__fields1;
  rec__ext__ = stacks__pop__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), (to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__old__fields;
  rec__stacks__stack_root__length = stacks__pop__s__old__fields1;
  rec__ext__ = stacks__pop__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - 1)))), to_rep2(last2(mk1(to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 };
  attr__tag = s__attr__tag })).rt)), (to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 };
  attr__tag = s__attr__tag })).rt)) - 1))))) = true)))))

axiom stacks__stack__compat_axiom2 :
  (forall stacks__pop__s__fields:(int,element) farray.
  forall stacks__pop__s__fields1:less_than_max.
  forall stacks__pop__s__fields2:us_private.
  forall stacks__pop__s__old__fields:(int,element) farray.
  forall stacks__pop__s__old__fields1:less_than_max.
  forall stacks__pop__s__old__fields2:us_private.
  (forall s__attr__tag:int. forall stacks__pop__e:int.
  forall stacks__pop__e__old:int [pop__specific_post(us_tag1, {
  rec__stacks__stack_root__content = stacks__pop__s__fields;
  rec__stacks__stack_root__length = stacks__pop__s__fields1; rec__ext__ =
  stacks__pop__s__fields2 }, s__attr__tag, stacks__pop__e, {
  rec__stacks__stack_root__content = stacks__pop__s__old__fields;
  rec__stacks__stack_root__length = stacks__pop__s__old__fields1;
  rec__ext__ = stacks__pop__s__old__fields2 }, stacks__pop__e__old)].
  (pop__specific_post(us_tag1, { rec__stacks__stack_root__content =
  stacks__pop__s__fields; rec__stacks__stack_root__length =
  stacks__pop__s__fields1; rec__ext__ = stacks__pop__s__fields2 },
  s__attr__tag, stacks__pop__e, { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 },
  stacks__pop__e__old) -> ((stacks__pop__e = peek__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__old__fields;
  rec__stacks__stack_root__length = stacks__pop__s__old__fields1;
  rec__ext__ = stacks__pop__s__old__fields2 }; attr__tag = s__attr__tag
  })) and (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__fields;
  rec__stacks__stack_root__length = stacks__pop__s__fields1; rec__ext__ =
  stacks__pop__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__fields;
  rec__stacks__stack_root__length = stacks__pop__s__fields1; rec__ext__ =
  stacks__pop__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__fields;
  rec__stacks__stack_root__length = stacks__pop__s__fields1; rec__ext__ =
  stacks__pop__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  (get_model__2({ us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 };
  attr__tag = s__attr__tag })).elts,
  to_rep2(first6(mk3(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__old__fields;
  rec__stacks__stack_root__length = stacks__pop__s__old__fields1;
  rec__ext__ = stacks__pop__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), (to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__old__fields;
  rec__stacks__stack_root__length = stacks__pop__s__old__fields1;
  rec__ext__ = stacks__pop__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - 1)))), to_rep2(last6(mk3(to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 };
  attr__tag = s__attr__tag })).rt)), (to_rep2(last((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 };
  attr__tag = s__attr__tag })).rt)) - 1))))) = true)))))

axiom stacks__buffer__compat_axiom2 :
  (forall stacks__pop__s__fields:(int,element) farray.
  forall stacks__pop__s__fields1:less_than_max.
  forall stacks__pop__s__fields2:us_private.
  forall stacks__pop__s__old__fields:(int,element) farray.
  forall stacks__pop__s__old__fields1:less_than_max.
  forall stacks__pop__s__old__fields2:us_private.
  (forall s__attr__tag:int. forall stacks__pop__e:int.
  forall stacks__pop__e__old:int [pop__specific_post(us_tag2, {
  rec__stacks__stack_root__content = stacks__pop__s__fields;
  rec__stacks__stack_root__length = stacks__pop__s__fields1; rec__ext__ =
  stacks__pop__s__fields2 }, s__attr__tag, stacks__pop__e, {
  rec__stacks__stack_root__content = stacks__pop__s__old__fields;
  rec__stacks__stack_root__length = stacks__pop__s__old__fields1;
  rec__ext__ = stacks__pop__s__old__fields2 }, stacks__pop__e__old)].
  (pop__specific_post(us_tag2, { rec__stacks__stack_root__content =
  stacks__pop__s__fields; rec__stacks__stack_root__length =
  stacks__pop__s__fields1; rec__ext__ = stacks__pop__s__fields2 },
  s__attr__tag, stacks__pop__e, { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 },
  stacks__pop__e__old) -> ((stacks__pop__e = peek__3(of_base({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 };
  attr__tag = s__attr__tag }))) and (bool_eq2((get_model__3(of_base({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__fields; rec__stacks__stack_root__length =
  stacks__pop__s__fields1; rec__ext__ = stacks__pop__s__fields2 };
  attr__tag = s__attr__tag }))).elts, to_rep2(first((get_model__3(of_base({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__fields; rec__stacks__stack_root__length =
  stacks__pop__s__fields1; rec__ext__ = stacks__pop__s__fields2 };
  attr__tag = s__attr__tag }))).rt)), to_rep2(last((get_model__3(of_base({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__fields; rec__stacks__stack_root__length =
  stacks__pop__s__fields1; rec__ext__ = stacks__pop__s__fields2 };
  attr__tag = s__attr__tag }))).rt)), (get_model__3(of_base({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 };
  attr__tag = s__attr__tag }))).elts,
  to_rep2(first8(mk4(to_rep2(first((get_model__3(of_base({ us_split_fields1 =
  { rec__stacks__stack_root__content = stacks__pop__s__old__fields;
  rec__stacks__stack_root__length = stacks__pop__s__old__fields1;
  rec__ext__ = stacks__pop__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), (to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__pop__s__old__fields;
  rec__stacks__stack_root__length = stacks__pop__s__old__fields1;
  rec__ext__ = stacks__pop__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - 1)))), to_rep2(last8(mk4(to_rep2(first((get_model__3(of_base({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 };
  attr__tag = s__attr__tag }))).rt)), (to_rep2(last((get_model__3(of_base({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__pop__s__old__fields; rec__stacks__stack_root__length =
  stacks__pop__s__old__fields1; rec__ext__ = stacks__pop__s__old__fields2 };
  attr__tag = s__attr__tag }))).rt)) - 1))))) = true)))))

logic concat : (int,element) farray, int, int, (int,element) farray, int,
  int -> (int,element) farray

axiom concat_def :
  (forall a:(int,element) farray. forall b:(int,element) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic concat_singleton_left : element, int, (int,element) farray, int,
  int -> (int,element) farray

axiom concat_singleton_left_def :
  (forall a:element.
  (forall b:(int,element) farray.
  (forall a_first:int. forall b_first:int. forall b_last:int
  [concat_singleton_left(a, a_first, b, b_first, b_last)].
  (((concat_singleton_left(a, a_first, b, b_first, b_last)[a_first]) = a) and
  (forall i:int [(concat_singleton_left(a, a_first, b, b_first, b_last)[i])].
  ((a_first <  i) -> ((concat_singleton_left(a, a_first, b, b_first,
  b_last)[i]) = (b[((i - a_first) + (b_first - 1))]))))))))

logic concat_singleton_right : (int,element) farray, int, int,
  element -> (int,element) farray

axiom concat_singleton_right_def :
  (forall a:(int,element) farray.
  (forall b:element.
  (forall a_first:int. forall a_last:int [concat_singleton_right(a, a_first,
  a_last, b)]. (((concat_singleton_right(a, a_first, a_last,
  b)[(a_last + 1)]) = b) and
  (forall i:int [(concat_singleton_right(a, a_first, a_last, b)[i])| (a[i])].
  (((a_first <= i) and (i <= a_last)) -> ((concat_singleton_right(a, a_first,
  a_last, b)[i]) = (a[i]))))))))

logic concat_singletons : element, int, element -> (int,element) farray

axiom concat_singletons_def :
  (forall a:element. forall b:element.
  (forall a_first:int [concat_singletons(a, a_first, b)].
  (((concat_singletons(a, a_first, b)[a_first]) = a) and
  ((concat_singletons(a, a_first, b)[(a_first + 1)]) = b))))

logic singleton : element, int -> (int,element) farray

axiom singleton_def :
  (forall v:element.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic is_full : us_rep -> bool

logic is_full__function_guard : bool, us_rep -> prop

logic push__specific_post : int, us_split_fields, int, int,
  us_split_fields -> prop

axiom stacks__stack_root__compat_axiom3 :
  (forall stacks__push__s__fields:(int,element) farray.
  forall stacks__push__s__fields1:less_than_max.
  forall stacks__push__s__fields2:us_private.
  forall stacks__push__s__old__fields:(int,element) farray.
  forall stacks__push__s__old__fields1:less_than_max.
  forall stacks__push__s__old__fields2:us_private.
  (forall s__attr__tag:int. forall e:int [push__specific_post(us_tag, {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }, s__attr__tag, e, {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 })].
  (push__specific_post(us_tag, { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 },
  s__attr__tag, e, { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }) -> (((length(get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0) -> (((length(get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0) -> (((length(get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(1, 1))), to_rep2(last(mk(1,
  1)))) = true)) and ((not (length(get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0)) -> (((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) and ((not (length(get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })) = 0)) -> (((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) <= to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) -> (((length(get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })) = 0) -> (bool_eq2((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).elts, to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).rt)), to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).rt)), singleton(of_rep(e), 1),
  to_rep2(first(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1)))), to_rep2(last(mk(1, 1)))) = true)) and
  ((not (length(get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0)) -> (((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (((to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) - to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (((to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) - to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) and
  ((not (to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (((length(get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))), to_rep2(last(mk(1,
  1)))) = true)) and ((not (length(get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0)) -> (((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))))))) and ((not (length(get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })) = 0)) -> (((length(get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })) = 0) -> (((length(get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })) = 0) -> (bool_eq2((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).elts, to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).rt)), to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).rt)), concat_singleton_right((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).elts, to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), of_rep(e)), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(1, 1)))) = true)) and ((not (length(get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })) = 0)) -> (((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) <= to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) -> (bool_eq2((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).elts, to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).rt)), to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).rt)), concat_singleton_right((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).elts, to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), of_rep(e)), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) and ((not (length(get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })) = 0)) -> (((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) <= to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) -> (((length(get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })) = 0) -> (bool_eq2((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).elts, to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).rt)), to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).rt)), concat_singleton_right((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).elts, to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), of_rep(e)),
  to_rep2(first(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1)))), to_rep2(last(mk(1, 1)))) = true)) and
  ((not (length(get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0)) -> (((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (((to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) - to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (((to_rep2(last((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) - to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) and
  ((not (to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (((length(get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))), to_rep2(last(mk(1,
  1)))) = true)) and ((not (length(get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0)) -> (((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (bool_eq2((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true))))))))))))))

axiom stacks__stack__compat_axiom3 :
  (forall stacks__push__s__fields:(int,element) farray.
  forall stacks__push__s__fields1:less_than_max.
  forall stacks__push__s__fields2:us_private.
  forall stacks__push__s__old__fields:(int,element) farray.
  forall stacks__push__s__old__fields1:less_than_max.
  forall stacks__push__s__old__fields2:us_private.
  (forall s__attr__tag:int. forall e:int [push__specific_post(us_tag1, {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }, s__attr__tag, e, {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 })].
  (push__specific_post(us_tag1, { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 },
  s__attr__tag, e, { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }) -> (((length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0) -> (((length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0) -> (((length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(1, 1))), to_rep2(last(mk(1,
  1)))) = true)) and ((not (length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0)) -> (((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) and ((not (length(get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })) = 0)) -> (((to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) <= to_rep2(last((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) -> (((length(get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })) = 0) -> (bool_eq2((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).elts, to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).rt)), to_rep2(last((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).rt)), singleton(of_rep(e), 1),
  to_rep2(first(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1)))), to_rep2(last(mk(1, 1)))) = true)) and
  ((not (length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0)) -> (((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (((to_rep2(last((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) - to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (((to_rep2(last((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) - to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) and
  ((not (to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (((length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))), to_rep2(last(mk(1,
  1)))) = true)) and ((not (length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0)) -> (((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))))))) and
  ((not (length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0)) -> (((length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0) -> (((length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(1, 1))), to_rep2(last(mk(1,
  1)))) = true)) and ((not (length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0)) -> (((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) and ((not (length(get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })) = 0)) -> (((to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) <= to_rep2(last((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) -> (((length(get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })) = 0) -> (bool_eq2((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).elts, to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).rt)), to_rep2(last((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 };
  attr__tag = s__attr__tag })).rt)), concat_singleton_right((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).elts, to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), to_rep2(last((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), of_rep(e)),
  to_rep2(first(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1)))), to_rep2(last(mk(1, 1)))) = true)) and
  ((not (length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0)) -> (((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (((to_rep2(last((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) - to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (((to_rep2(last((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) - to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) and
  ((not (to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (((length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))), to_rep2(last(mk(1,
  1)))) = true)) and ((not (length(get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })) = 0)) -> (((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)))) -> (bool_eq2((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).elts, to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), of_rep(e)), to_rep2(first(mk(to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)), ((to_rep2(first((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)), ((to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true))))))))))))))

axiom stacks__buffer__compat_axiom3 :
  (forall stacks__push__s__fields:(int,element) farray.
  forall stacks__push__s__fields1:less_than_max.
  forall stacks__push__s__fields2:us_private.
  forall stacks__push__s__old__fields:(int,element) farray.
  forall stacks__push__s__old__fields1:less_than_max.
  forall stacks__push__s__old__fields2:us_private.
  (forall s__attr__tag:int. forall e:int [push__specific_post(us_tag2, {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }, s__attr__tag, e, {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 })].
  (push__specific_post(us_tag2, { rec__stacks__stack_root__content =
  stacks__push__s__fields; rec__stacks__stack_root__length =
  stacks__push__s__fields1; rec__ext__ = stacks__push__s__fields2 },
  s__attr__tag, e, { rec__stacks__stack_root__content =
  stacks__push__s__old__fields; rec__stacks__stack_root__length =
  stacks__push__s__old__fields1; rec__ext__ = stacks__push__s__old__fields2
  }) -> (((length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0) -> (((length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0) -> (((length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(1, 1))), to_rep2(last(mk(1,
  1)))) = true)) and ((not (length(get_model__3(of_base({ us_split_fields1 =
  { rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0)) -> (((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (((to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)))) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  singleton(of_rep(e), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (0 + 1)) - 1))))) = true)))))) and
  ((not (length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0)) -> (((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) -> (((length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  singleton(of_rep(e), 1),
  to_rep2(first(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (((to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) + 1) + 1)) - 1)))), to_rep2(last(mk(1, 1)))) = true)) and
  ((not (length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0)) -> (((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  singleton(of_rep(e), 1),
  to_rep2(first(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (((to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (((to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)))) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  singleton(of_rep(e), 1),
  to_rep2(first(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (((to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (0 + 1)) - 1))))) = true)))))) and
  ((not (to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)))) -> (((length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  singleton(of_rep(e), 1),
  to_rep2(first(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (0 + 1)) - 1)))), to_rep2(last(mk(1, 1)))) = true)) and
  ((not (length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0)) -> (((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  singleton(of_rep(e), 1),
  to_rep2(first(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (((to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)))) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  singleton(of_rep(e), 1),
  to_rep2(first(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (0 + 1)) - 1))))) = true)))))))))) and
  ((not (length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0)) -> (((length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0) -> (((length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  concat_singleton_right((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).elts, to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), of_rep(e)), to_rep2(first(mk(1, 1))), to_rep2(last(mk(1,
  1)))) = true)) and ((not (length(get_model__3(of_base({ us_split_fields1 =
  { rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0)) -> (((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  concat_singleton_right((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).elts, to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), of_rep(e)), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (((to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)))) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  concat_singleton_right((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).elts, to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), of_rep(e)), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (0 + 1)) - 1))))) = true)))))) and
  ((not (length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0)) -> (((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) -> (((length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  concat_singleton_right((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).elts, to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), of_rep(e)),
  to_rep2(first(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (((to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) + 1) + 1)) - 1)))), to_rep2(last(mk(1, 1)))) = true)) and
  ((not (length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0)) -> (((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  concat_singleton_right((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).elts, to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), of_rep(e)),
  to_rep2(first(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (((to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (((to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)))) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  concat_singleton_right((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).elts, to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), of_rep(e)),
  to_rep2(first(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (((to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (0 + 1)) - 1))))) = true)))))) and
  ((not (to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)))) -> (((length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  concat_singleton_right((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).elts, to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), of_rep(e)),
  to_rep2(first(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (0 + 1)) - 1)))), to_rep2(last(mk(1, 1)))) = true)) and
  ((not (length(get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))) = 0)) -> (((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  concat_singleton_right((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).elts, to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), of_rep(e)),
  to_rep2(first(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (((to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) - to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt))) + 1) + 1)) - 1))))) = true)) and
  ((not (to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) <= to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)))) -> (bool_eq2((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).elts,
  to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__fields;
  rec__stacks__stack_root__length = stacks__push__s__fields1; rec__ext__ =
  stacks__push__s__fields2 }; attr__tag = s__attr__tag }))).rt)),
  concat_singleton_right((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).elts, to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), to_rep2(last((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), of_rep(e)),
  to_rep2(first(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)), ((to_rep2(first((get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = stacks__push__s__old__fields;
  rec__stacks__stack_root__length = stacks__push__s__old__fields1;
  rec__ext__ = stacks__push__s__old__fields2 }; attr__tag = s__attr__tag
  }))).rt)) + (0 + 1)) - 1))))) = true))))))))))))))

logic s__attr__tag : int

logic attr__ATTRIBUTE_ADDRESS : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

type t2b

predicate in_range5(x: int) = ((1 <= x) and (x <= 5))

logic bool_eq18 : int, int -> bool

axiom bool_eq_def12 :
  (forall x:int. forall y:int [bool_eq18(x, y)]. (((x = y) -> (bool_eq18(x,
  y) = true)) and ((not (x = y)) -> (bool_eq18(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq18 : t2b, t2b -> bool

logic dummy33 : t2b

type t2b__ref = { t2b__content : t2b
}

function t2b__ref___projection(a: t2b__ref) : t2b = (a).t2b__content

logic attr__ATTRIBUTE_ADDRESS3 : int

logic temp___478 : int, int, int, int, int -> (int,element) farray

axiom def_axiom :
  (forall temp___480:int. forall temp___481:int. forall temp___482:int.
  forall temp___483:int. forall temp___484:int. (((((in_range(temp___480) and
  in_range(temp___481)) and in_range(temp___482)) and
  in_range(temp___483)) and in_range(temp___484)) ->
  (((((to_rep((temp___478(temp___480, temp___481, temp___482, temp___483,
  temp___484)[1])) = temp___480) and (to_rep((temp___478(temp___480,
  temp___481, temp___482, temp___483, temp___484)[2])) = temp___481)) and
  (to_rep((temp___478(temp___480, temp___481, temp___482, temp___483,
  temp___484)[3])) = temp___482)) and (to_rep((temp___478(temp___480,
  temp___481, temp___482, temp___483, temp___484)[4])) = temp___483)) and
  (to_rep((temp___478(temp___480, temp___481, temp___482, temp___483,
  temp___484)[5])) = temp___484))))

axiom size__post_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [size({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })]. in_range1(size({ us_split_fields1 =
  { rec__stacks__stack_root__content = s; rec__stacks__stack_root__length =
  s1; rec__ext__ = s2 }; attr__tag = s3 })))

axiom size__def_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [size({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })]. (size({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = to_rep1(s1)))

axiom is_full__post_axiom : true

axiom is_full__def_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [is_full({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })]. ((is_full({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = true) <-> (size({ us_split_fields1 =
  { rec__stacks__stack_root__content = s; rec__stacks__stack_root__length =
  s1; rec__ext__ = s2 }; attr__tag = s3 }) = 100)))

axiom peek__post_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [peek({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })]. ((not (is_empty({ us_split_fields1 =
  { rec__stacks__stack_root__content = s; rec__stacks__stack_root__length =
  s1; rec__ext__ = s2 }; attr__tag = s3 }) = true)) -> (((not (is_empty({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  }) = true)) and (peek({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = to_rep(((get_model({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })).elts[to_rep2(last((get_model({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt))])))) and in_range(peek({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })))))

axiom peek__post__dispatch_axiom :
  (forall attr__tag2:int.
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [peek1(attr__tag2, { us_split_fields1 =
  { rec__stacks__stack_root__content = s; rec__stacks__stack_root__length =
  s1; rec__ext__ = s2 }; attr__tag = s3 })]. ((not (is_empty({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  }) = true)) -> (((not (is_empty({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = true)) and (peek1(attr__tag2, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  }) = to_rep(((get_model1(s3, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).elts[to_rep2(last((get_model1(s3, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })).rt))])))) and in_range(peek1(attr__tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }))))))

axiom stacks__stack_root__compat_axiom4 :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [peek1(us_tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })]. (peek({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = peek1(us_tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })))

axiom stacks__stack__compat_axiom4 :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [peek1(us_tag1, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })]. (peek__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = peek1(us_tag1, { us_split_fields1 =
  { rec__stacks__stack_root__content = s; rec__stacks__stack_root__length =
  s1; rec__ext__ = s2 }; attr__tag = s3 })))

axiom stacks__buffer__compat_axiom4 :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [peek1(us_tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })]. (peek__3(of_base({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })) = peek1(us_tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })))

predicate dynamic_property9(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq19 : int, int -> bool

axiom bool_eq_def13 :
  (forall x:int. forall y:int [bool_eq19(x, y)]. (((x = y) -> (bool_eq19(x,
  y) = true)) and ((not (x = y)) -> (bool_eq19(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq19 : integer, integer -> bool

logic dummy34 : integer

type t50s__ref = { t50s__content : integer
}

function t50s__ref___projection(a: t50s__ref) : integer = (a).t50s__content

type t5

logic first10 : t5 -> integer

logic last10 : t5 -> integer

logic mk5 : int, int -> t5

axiom mk_def5 :
  (forall f:int. forall l:int [mk5(f, l)]. (in_range2(f) -> (in_range2(l) ->
  ((to_rep2(first10(mk5(f, l))) = f) and (to_rep2(last10(mk5(f, l))) = l)))))

predicate dynamic_property10(range_first: int, range_last: int, low: int,
  high: int) = (in_range2(low) and (in_range2(high) and ((low <= high) ->
  (dynamic_property9(range_first, range_last, low) and
  dynamic_property9(range_first, range_last, high)))))

type us_t5 = { elts5 : (int,element) farray; rt5 : t5
}

function to_array5(a: us_t5) : (int,element) farray = (a).elts5

function of_array5(a: (int,element) farray, f: int, l: int) : us_t5 = {
  elts5 = a; rt5 = mk5(f, l) }

function first11(a: us_t5) : int = to_rep2(first10((a).rt5))

function last11(a: us_t5) : int = to_rep2(last10((a).rt5))

logic length5 : us_t5 -> int

axiom length_def5 :
  (forall a:us_t5 [length5(a)]. (((first11(a) <= last11(a)) ->
  (length5(a) = ((last11(a) - first11(a)) + 1))) and
  ((not (first11(a) <= last11(a))) -> (length5(a) = 0))))

logic value__size9 : int

logic object__size9 : (int,element) farray -> int

logic value__component__size6 : int

logic object__component__size6 : (int,element) farray -> int

logic value__alignment9 : int

logic object__alignment9 : (int,element) farray -> int

axiom value__size_axiom9 : (0 <= value__size9)

axiom object__size_axiom9 :
  (forall a:(int,element) farray. (0 <= object__size9(a)))

axiom value__component__size_axiom6 : (0 <= value__component__size6)

axiom object__component__size_axiom6 :
  (forall a:(int,element) farray. (0 <= object__component__size6(a)))

axiom value__alignment_axiom9 : (0 <= value__alignment9)

axiom object__alignment_axiom9 :
  (forall a:(int,element) farray. (0 <= object__alignment9(a)))

function bool_eq20(x: us_t5, y: us_t5) : bool = bool_eq2((x).elts5,
  to_rep2(first10((x).rt5)), to_rep2(last10((x).rt5)), (y).elts5,
  to_rep2(first10((y).rt5)), to_rep2(last10((y).rt5)))

logic user_eq20 : us_t5, us_t5 -> bool

logic dummy35 : (int,element) farray

logic dummy36 : t5

type t51s__ref = { t51s__content : us_t5
}

function t51s__ref___projection(a: t51s__ref) : us_t5 = (a).t51s__content

axiom get_model__2__post_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })]. (((length(get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })) = size({ us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })) and (in_range1(to_rep2(last((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt))) and
  in_range1(to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt))))) and dynamic_property(1,
  2147483647, to_rep2(first((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt)), to_rep2(last((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })).rt)))))

axiom get_model__2__post__dispatch_axiom :
  (forall attr__tag2:int.
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [get_model__21(attr__tag2, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })]. (((length(get_model__21(attr__tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })) = size({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })) and
  (in_range1(to_rep2(last((get_model__21(attr__tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt))) and
  in_range1(to_rep2(first((get_model__21(attr__tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt))))) and dynamic_property(1,
  2147483647, to_rep2(first((get_model__21(attr__tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt)),
  to_rep2(last((get_model__21(attr__tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).rt))))))

axiom stacks__stack__compat_axiom5 :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [get_model__21(us_tag1, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })]. (get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = get_model__21(us_tag1, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })))

axiom stacks__buffer__compat_axiom5 :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [get_model__21(us_tag2, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })]. (get_model__3(of_base({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })) = get_model__21(us_tag2, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })))

axiom get_model__2__def_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })]. (get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = { elts = s; rt =
  mk(to_rep2(first10(mk5(1, to_rep1(s1)))), to_rep2(last10(mk5(1,
  to_rep1(s1))))) }))

axiom peek__2__post_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [peek__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })]. ((not (is_empty({ us_split_fields1 =
  { rec__stacks__stack_root__content = s; rec__stacks__stack_root__length =
  s1; rec__ext__ = s2 }; attr__tag = s3 }) = true)) -> (((peek__2({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  }) = to_rep(((get_model__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).elts[to_rep2(last((get_model__2({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })).rt))]))) and (not (is_empty({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = true))) and in_range(peek__2({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })))))

axiom peek__2__post__dispatch_axiom :
  (forall attr__tag2:int.
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [peek__21(attr__tag2, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })]. ((not (is_empty({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = true)) -> (((peek__21(attr__tag2, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  }) = to_rep(((get_model__21(s3, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })).elts[to_rep2(last((get_model__21(s3,
  { us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })).rt))]))) and (not (is_empty({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = true))) and
  in_range(peek__21(attr__tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }))))))

axiom stacks__stack__compat_axiom6 :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [peek__21(us_tag1, { us_split_fields1 =
  { rec__stacks__stack_root__content = s; rec__stacks__stack_root__length =
  s1; rec__ext__ = s2 }; attr__tag = s3 })]. (peek__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = peek__21(us_tag1, {
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })))

axiom stacks__buffer__compat_axiom6 :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [peek__21(us_tag2, { us_split_fields1 =
  { rec__stacks__stack_root__content = s; rec__stacks__stack_root__length =
  s1; rec__ext__ = s2 }; attr__tag = s3 })]. (peek__3(of_base({
  us_split_fields1 = { rec__stacks__stack_root__content = s;
  rec__stacks__stack_root__length = s1; rec__ext__ = s2 }; attr__tag = s3
  })) = peek__21(us_tag2, { us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })))

axiom peek__2__def_axiom :
  (forall s:(int,element) farray. forall s1:less_than_max.
  forall s2:us_private. forall s3:int [peek__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 })]. (peek__2({ us_split_fields1 = {
  rec__stacks__stack_root__content = s; rec__stacks__stack_root__length = s1;
  rec__ext__ = s2 }; attr__tag = s3 }) = to_rep((s[to_rep1(s1)]))))

type telement_arrayD1

predicate in_range6(x: int) = ((1 <= x) and (x <= 100))

logic bool_eq21 : int, int -> bool

axiom bool_eq_def14 :
  (forall x:int. forall y:int [bool_eq21(x, y)]. (((x = y) -> (bool_eq21(x,
  y) = true)) and ((not (x = y)) -> (bool_eq21(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq21 : telement_arrayD1, telement_arrayD1 -> bool

logic dummy37 : telement_arrayD1

type telement_arrayD1__ref = { telement_arrayD1__content : telement_arrayD1
}

function telement_arrayD1__ref___projection(a: telement_arrayD1__ref) : telement_arrayD1 =
  (a).telement_arrayD1__content

type t6

logic first12 : t6 -> integer

logic last12 : t6 -> integer

logic mk6 : int, int -> t6

axiom mk_def6 :
  (forall f:int. forall l:int [mk6(f, l)]. (in_range2(f) -> (in_range2(l) ->
  ((to_rep2(first12(mk6(f, l))) = f) and (to_rep2(last12(mk6(f, l))) = l)))))

predicate dynamic_property11(range_first: int, range_last: int, low: int,
  high: int) = (in_range2(low) and (in_range2(high) and ((low <= high) ->
  (in_range6(low) and in_range6(high)))))

type us_t6 = { elts6 : (int,element) farray; rt6 : t6
}

function to_array6(a: us_t6) : (int,element) farray = (a).elts6

function of_array6(a: (int,element) farray, f: int, l: int) : us_t6 = {
  elts6 = a; rt6 = mk6(f, l) }

function first13(a: us_t6) : int = to_rep2(first12((a).rt6))

function last13(a: us_t6) : int = to_rep2(last12((a).rt6))

logic length6 : us_t6 -> int

axiom length_def6 :
  (forall a:us_t6 [length6(a)]. (((first13(a) <= last13(a)) ->
  (length6(a) = ((last13(a) - first13(a)) + 1))) and
  ((not (first13(a) <= last13(a))) -> (length6(a) = 0))))

logic value__size10 : int

logic object__size10 : (int,element) farray -> int

logic value__component__size7 : int

logic object__component__size7 : (int,element) farray -> int

logic value__alignment10 : int

logic object__alignment10 : (int,element) farray -> int

axiom value__size_axiom10 : (0 <= value__size10)

axiom object__size_axiom10 :
  (forall a:(int,element) farray. (0 <= object__size10(a)))

axiom value__component__size_axiom7 : (0 <= value__component__size7)

axiom object__component__size_axiom7 :
  (forall a:(int,element) farray. (0 <= object__component__size7(a)))

axiom value__alignment_axiom10 : (0 <= value__alignment10)

axiom object__alignment_axiom10 :
  (forall a:(int,element) farray. (0 <= object__alignment10(a)))

function bool_eq22(x: us_t6, y: us_t6) : bool = bool_eq2((x).elts6,
  to_rep2(first12((x).rt6)), to_rep2(last12((x).rt6)), (y).elts6,
  to_rep2(first12((y).rt6)), to_rep2(last12((y).rt6)))

logic user_eq22 : us_t6, us_t6 -> bool

logic dummy38 : (int,element) farray

logic dummy39 : t6

type telement_arrayB__ref = { telement_arrayB__content : us_t6
}

function telement_arrayB__ref___projection(a: telement_arrayB__ref) : us_t6 =
  (a).telement_arrayB__content

logic wraps_around : us_rep1 -> bool

logic wraps_around__function_guard : bool, us_rep1 -> prop

logic wraps_around1 : int, us_rep1 -> bool

logic wraps_around__function_guard1 : bool, int, us_rep1 -> prop

logic last14 : us_rep1 -> int

logic last__function_guard : int, us_rep1 -> prop

logic last15 : int, us_rep1 -> int

logic last__function_guard1 : int, int, us_rep1 -> prop

predicate dynamic_property12(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq23 : int, int -> bool

axiom bool_eq_def15 :
  (forall x:int. forall y:int [bool_eq23(x, y)]. (((x = y) -> (bool_eq23(x,
  y) = true)) and ((not (x = y)) -> (bool_eq23(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq23 : integer, integer -> bool

logic dummy40 : integer

type t84s__ref = { t84s__content : integer
}

function t84s__ref___projection(a: t84s__ref) : integer = (a).t84s__content

type t7

logic first14 : t7 -> integer

logic last16 : t7 -> integer

logic mk7 : int, int -> t7

axiom mk_def7 :
  (forall f:int. forall l:int [mk7(f, l)]. (in_range2(f) -> (in_range2(l) ->
  ((to_rep2(first14(mk7(f, l))) = f) and (to_rep2(last16(mk7(f, l))) = l)))))

predicate dynamic_property13(range_first: int, range_last: int, low: int,
  high: int) = (in_range2(low) and (in_range2(high) and ((low <= high) ->
  (dynamic_property12(range_first, range_last, low) and
  dynamic_property12(range_first, range_last, high)))))

type us_t7 = { elts7 : (int,element) farray; rt7 : t7
}

function to_array7(a: us_t7) : (int,element) farray = (a).elts7

function of_array7(a: (int,element) farray, f: int, l: int) : us_t7 = {
  elts7 = a; rt7 = mk7(f, l) }

function first15(a: us_t7) : int = to_rep2(first14((a).rt7))

function last17(a: us_t7) : int = to_rep2(last16((a).rt7))

logic length7 : us_t7 -> int

axiom length_def7 :
  (forall a:us_t7 [length7(a)]. (((first15(a) <= last17(a)) ->
  (length7(a) = ((last17(a) - first15(a)) + 1))) and
  ((not (first15(a) <= last17(a))) -> (length7(a) = 0))))

logic value__size11 : int

logic object__size11 : (int,element) farray -> int

logic value__component__size8 : int

logic object__component__size8 : (int,element) farray -> int

logic value__alignment11 : int

logic object__alignment11 : (int,element) farray -> int

axiom value__size_axiom11 : (0 <= value__size11)

axiom object__size_axiom11 :
  (forall a:(int,element) farray. (0 <= object__size11(a)))

axiom value__component__size_axiom8 : (0 <= value__component__size8)

axiom object__component__size_axiom8 :
  (forall a:(int,element) farray. (0 <= object__component__size8(a)))

axiom value__alignment_axiom11 : (0 <= value__alignment11)

axiom object__alignment_axiom11 :
  (forall a:(int,element) farray. (0 <= object__alignment11(a)))

function bool_eq24(x: us_t7, y: us_t7) : bool = bool_eq2((x).elts7,
  to_rep2(first14((x).rt7)), to_rep2(last16((x).rt7)), (y).elts7,
  to_rep2(first14((y).rt7)), to_rep2(last16((y).rt7)))

logic user_eq24 : us_t7, us_t7 -> bool

logic dummy41 : (int,element) farray

logic dummy42 : t7

type t85s__ref = { t85s__content : us_t7
}

function t85s__ref___projection(a: t85s__ref) : us_t7 = (a).t85s__content

predicate dynamic_property14(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq25 : int, int -> bool

axiom bool_eq_def16 :
  (forall x:int. forall y:int [bool_eq25(x, y)]. (((x = y) -> (bool_eq25(x,
  y) = true)) and ((not (x = y)) -> (bool_eq25(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE13 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check13 : us_image -> prop

logic attr__ATTRIBUTE_VALUE13 : us_image -> int

logic user_eq25 : integer, integer -> bool

logic dummy43 : integer

type t87s__ref = { t87s__content : integer
}

function t87s__ref___projection(a: t87s__ref) : integer = (a).t87s__content

type t8

logic first16 : t8 -> integer

logic last18 : t8 -> integer

logic mk8 : int, int -> t8

axiom mk_def8 :
  (forall f:int. forall l:int [mk8(f, l)]. (in_range2(f) -> (in_range2(l) ->
  ((to_rep2(first16(mk8(f, l))) = f) and (to_rep2(last18(mk8(f, l))) = l)))))

predicate dynamic_property15(range_first: int, range_last: int, low: int,
  high: int) = (in_range2(low) and (in_range2(high) and ((low <= high) ->
  (dynamic_property14(range_first, range_last, low) and
  dynamic_property14(range_first, range_last, high)))))

type us_t8 = { elts8 : (int,element) farray; rt8 : t8
}

function to_array8(a: us_t8) : (int,element) farray = (a).elts8

function of_array8(a: (int,element) farray, f: int, l: int) : us_t8 = {
  elts8 = a; rt8 = mk8(f, l) }

function first17(a: us_t8) : int = to_rep2(first16((a).rt8))

function last19(a: us_t8) : int = to_rep2(last18((a).rt8))

logic length8 : us_t8 -> int

axiom length_def8 :
  (forall a:us_t8 [length8(a)]. (((first17(a) <= last19(a)) ->
  (length8(a) = ((last19(a) - first17(a)) + 1))) and
  ((not (first17(a) <= last19(a))) -> (length8(a) = 0))))

logic value__size12 : int

logic object__size12 : (int,element) farray -> int

logic value__component__size9 : int

logic object__component__size9 : (int,element) farray -> int

logic value__alignment12 : int

logic object__alignment12 : (int,element) farray -> int

axiom value__size_axiom12 : (0 <= value__size12)

axiom object__size_axiom12 :
  (forall a:(int,element) farray. (0 <= object__size12(a)))

axiom value__component__size_axiom9 : (0 <= value__component__size9)

axiom object__component__size_axiom9 :
  (forall a:(int,element) farray. (0 <= object__component__size9(a)))

axiom value__alignment_axiom12 : (0 <= value__alignment12)

axiom object__alignment_axiom12 :
  (forall a:(int,element) farray. (0 <= object__alignment12(a)))

function bool_eq26(x: us_t8, y: us_t8) : bool = bool_eq2((x).elts8,
  to_rep2(first16((x).rt8)), to_rep2(last18((x).rt8)), (y).elts8,
  to_rep2(first16((y).rt8)), to_rep2(last18((y).rt8)))

logic user_eq26 : us_t8, us_t8 -> bool

logic dummy44 : (int,element) farray

logic dummy45 : t8

type t88s__ref = { t88s__content : us_t8
}

function t88s__ref___projection(a: t88s__ref) : us_t8 = (a).t88s__content

predicate dynamic_property16(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq27 : int, int -> bool

axiom bool_eq_def17 :
  (forall x:int. forall y:int [bool_eq27(x, y)]. (((x = y) -> (bool_eq27(x,
  y) = true)) and ((not (x = y)) -> (bool_eq27(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE14 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check14 : us_image -> prop

logic attr__ATTRIBUTE_VALUE14 : us_image -> int

logic user_eq27 : integer, integer -> bool

logic dummy46 : integer

type t90s__ref = { t90s__content : integer
}

function t90s__ref___projection(a: t90s__ref) : integer = (a).t90s__content

type t9

logic first18 : t9 -> integer

logic last20 : t9 -> integer

logic mk9 : int, int -> t9

axiom mk_def9 :
  (forall f:int. forall l:int [mk9(f, l)]. (in_range2(f) -> (in_range2(l) ->
  ((to_rep2(first18(mk9(f, l))) = f) and (to_rep2(last20(mk9(f, l))) = l)))))

predicate dynamic_property17(range_first: int, range_last: int, low: int,
  high: int) = (in_range2(low) and (in_range2(high) and ((low <= high) ->
  (dynamic_property16(range_first, range_last, low) and
  dynamic_property16(range_first, range_last, high)))))

type us_t9 = { elts9 : (int,element) farray; rt9 : t9
}

function to_array9(a: us_t9) : (int,element) farray = (a).elts9

function of_array9(a: (int,element) farray, f: int, l: int) : us_t9 = {
  elts9 = a; rt9 = mk9(f, l) }

function first19(a: us_t9) : int = to_rep2(first18((a).rt9))

function last21(a: us_t9) : int = to_rep2(last20((a).rt9))

logic length9 : us_t9 -> int

axiom length_def9 :
  (forall a:us_t9 [length9(a)]. (((first19(a) <= last21(a)) ->
  (length9(a) = ((last21(a) - first19(a)) + 1))) and
  ((not (first19(a) <= last21(a))) -> (length9(a) = 0))))

logic value__size13 : int

logic object__size13 : (int,element) farray -> int

logic value__component__size10 : int

logic object__component__size10 : (int,element) farray -> int

logic value__alignment13 : int

logic object__alignment13 : (int,element) farray -> int

axiom value__size_axiom13 : (0 <= value__size13)

axiom object__size_axiom13 :
  (forall a:(int,element) farray. (0 <= object__size13(a)))

axiom value__component__size_axiom10 : (0 <= value__component__size10)

axiom object__component__size_axiom10 :
  (forall a:(int,element) farray. (0 <= object__component__size10(a)))

axiom value__alignment_axiom13 : (0 <= value__alignment13)

axiom object__alignment_axiom13 :
  (forall a:(int,element) farray. (0 <= object__alignment13(a)))

function bool_eq28(x: us_t9, y: us_t9) : bool = bool_eq2((x).elts9,
  to_rep2(first18((x).rt9)), to_rep2(last20((x).rt9)), (y).elts9,
  to_rep2(first18((y).rt9)), to_rep2(last20((y).rt9)))

logic user_eq28 : us_t9, us_t9 -> bool

logic dummy47 : (int,element) farray

logic dummy48 : t9

type t91s__ref = { t91s__content : us_t9
}

function t91s__ref___projection(a: t91s__ref) : us_t9 = (a).t91s__content

axiom get_model__3__post_axiom :
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int
  [get_model__3({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })].
  ((in_range1(to_rep2(first((get_model__3({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })).rt))) and (in_range1(to_rep2(last((get_model__3({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })).rt))) and (length(get_model__3({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })) = size({ us_split_fields1 = { rec__stacks__stack_root__content = s1;
  rec__stacks__stack_root__length = s2; rec__ext__ = hide_ext__(s, s3) };
  attr__tag = s4 })))) and dynamic_property(1, 2147483647,
  to_rep2(first((get_model__3({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })).rt)), to_rep2(last((get_model__3({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })).rt)))))

axiom get_model__3__post__dispatch_axiom :
  (forall attr__tag2:int.
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int
  [get_model__31(attr__tag2, { us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })]. ((in_range1(to_rep2(first((get_model__31(attr__tag2, {
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })).rt))) and
  (in_range1(to_rep2(last((get_model__31(attr__tag2, { us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })).rt))) and (length(get_model__31(attr__tag2, { us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })) = size({ us_split_fields1 = { rec__stacks__stack_root__content = s1;
  rec__stacks__stack_root__length = s2; rec__ext__ = hide_ext__(s, s3) };
  attr__tag = s4 })))) and dynamic_property(1, 2147483647,
  to_rep2(first((get_model__31(attr__tag2, { us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })).rt)), to_rep2(last((get_model__31(attr__tag2, { us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })).rt))))))

axiom stacks__buffer__compat_axiom7 :
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int
  [get_model__31(us_tag2, { us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })]. (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = get_model__31(us_tag2, {
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))

axiom get_model__3__def_axiom :
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int
  [get_model__3({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })]. (((wraps_around({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = true) -> (((length7({ elts7 =
  s1; rt7 = mk7(to_rep3(s), 100) }) = 0) -> (((length7({ elts7 = s1; rt7 =
  mk7(to_rep3(s), 100) }) = 0) -> (((length7({ elts7 = s1; rt7 =
  mk7(to_rep3(s), 100) }) = 0) -> (get_model__3({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))))),
  to_rep2(last12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))))) })) and ((not (length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100)
  }) = 0)) -> (((to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100)))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))))), to_rep2(last12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))))), to_rep2(last12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))))
  })))) and ((not (to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100))))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))))), to_rep2(last12(mk6(1,
  ((1 + (0 + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))))), to_rep2(last12(mk6(1, ((1 + (0 + 0)) - 1))))) })))))))) and
  ((not (length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0)) ->
  (((to_rep2(first14(mk7(to_rep3(s), 100))) <= to_rep2(last16(mk7(to_rep3(s),
  100)))) -> (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (((length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0) ->
  (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))))) })) and ((not (length7({
  elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0)) ->
  (((to_rep2(first14(mk7(to_rep3(s), 100))) <= to_rep2(last16(mk7(to_rep3(s),
  100)))) -> (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))))
  })))) and ((not (to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100))))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (0 + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(1, ((1 + (0 + 0)) - 1)))))
  })))))))) and ((not (to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))) -> (((length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0) ->
  (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))),
  to_rep2(last12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))))) })) and ((not (length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100)
  }) = 0)) -> (((to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100)))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))))
  })))) and ((not (to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100))))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (0 + ((to_rep2(last18(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) - to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))) + 1))) - 1))))) })) and
  ((not (to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))) -> (get_model__3({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (0 + 0)) - 1))))) })))))))))) and
  ((not (to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100))))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (((length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0) ->
  (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first12(mk6(1, ((1 + (0 + ((to_rep2(last18(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) - to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))) + 1))) - 1)))),
  to_rep2(last12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))))) })) and ((not (length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100)
  }) = 0)) -> (((to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100)))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(1,
  ((1 + (0 + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first12(mk6(1, ((1 + (0 + ((to_rep2(last18(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) - to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))) + 1))) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))))
  })))) and ((not (to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100))))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(1,
  ((1 + (0 + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (0 + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first12(mk6(1, ((1 + (0 + ((to_rep2(last18(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) - to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))) + 1))) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (0 + 0)) - 1))))) })))))))) and
  ((not (to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))) -> (((length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0) ->
  (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first12(mk6(1, ((1 + (0 + 0)) - 1)))),
  to_rep2(last12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))))) })) and ((not (length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100)
  }) = 0)) -> (((to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100)))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(1, ((1 + (0 + 0)) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first12(mk6(1, ((1 + (0 + 0)) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))))
  })))) and ((not (to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100))))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(1, ((1 + (0 + 0)) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (0 + ((to_rep2(last18(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) - to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))) + 1))) - 1))))) })) and
  ((not (to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))) -> (get_model__3({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = s1; rt = mk(to_rep2(first12(mk6(1, ((1 + (0 + 0)) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (0 + 0)) - 1))))) })))))))))))))) and
  ((not (length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0)) ->
  (((length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0) -> (((length7({
  elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))))), to_rep2(last12(mk6(to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))))) })) and ((not (length7({
  elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0)) ->
  (((to_rep2(first14(mk7(to_rep3(s), 100))) <= to_rep2(last16(mk7(to_rep3(s),
  100)))) -> (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = slide(concat(s1, to_rep2(first14(mk7(to_rep3(s), 100))),
  to_rep2(last16(mk7(to_rep3(s), 100))), s1, to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))),
  to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))))), to_rep2(last12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))))), to_rep2(last12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))))
  })))) and ((not (to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100))))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = slide(concat(s1, to_rep2(first14(mk7(to_rep3(s), 100))),
  to_rep2(last16(mk7(to_rep3(s), 100))), s1, to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))),
  to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))))), to_rep2(last12(mk6(1, ((1 + (0 + ((to_rep2(last18(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) - to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))) + 1))) - 1))))) })) and
  ((not (to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))) -> (get_model__3({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = slide(concat(s1, to_rep2(first14(mk7(to_rep3(s), 100))),
  to_rep2(last16(mk7(to_rep3(s), 100))), s1, to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))),
  to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))))), to_rep2(last12(mk6(1, ((1 + (0 + 0)) - 1))))) })))))))) and
  ((not (length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0)) ->
  (((to_rep2(first14(mk7(to_rep3(s), 100))) <= to_rep2(last16(mk7(to_rep3(s),
  100)))) -> (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (((length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0) ->
  (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))))) })) and ((not (length7({
  elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0)) ->
  (((to_rep2(first14(mk7(to_rep3(s), 100))) <= to_rep2(last16(mk7(to_rep3(s),
  100)))) -> (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = slide(concat(s1, to_rep2(first14(mk7(to_rep3(s), 100))),
  to_rep2(last16(mk7(to_rep3(s), 100))), s1, to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))),
  to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt = mk(to_rep2(first12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))))
  })))) and ((not (to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100))))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = slide(concat(s1, to_rep2(first14(mk7(to_rep3(s), 100))),
  to_rep2(last16(mk7(to_rep3(s), 100))), s1, to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))),
  to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt = mk(to_rep2(first12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (0 + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(1, ((1 + (0 + 0)) - 1)))))
  })))))))) and ((not (to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))) -> (((length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0) ->
  (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))),
  to_rep2(last12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))))) })) and ((not (length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100)
  }) = 0)) -> (((to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100)))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = slide(concat(s1, to_rep2(first14(mk7(to_rep3(s), 100))),
  to_rep2(last16(mk7(to_rep3(s), 100))), s1, to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))),
  to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt = mk(to_rep2(first12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))))
  })))) and ((not (to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100))))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = slide(concat(s1, to_rep2(first14(mk7(to_rep3(s), 100))),
  to_rep2(last16(mk7(to_rep3(s), 100))), s1, to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))),
  to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt = mk(to_rep2(first12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (0 + ((to_rep2(last18(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) - to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))) + 1))) - 1))))) })) and
  ((not (to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))) -> (get_model__3({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = slide(concat(s1, to_rep2(first14(mk7(to_rep3(s), 100))),
  to_rep2(last16(mk7(to_rep3(s), 100))), s1, to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))),
  to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt = mk(to_rep2(first12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (0 + 0)) - 1))))) })))))))))) and
  ((not (to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100))))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (((length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0) ->
  (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(1, ((1 + (0 + ((to_rep2(last18(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) - to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))) + 1))) - 1)))),
  to_rep2(last12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))))) })) and ((not (length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100)
  }) = 0)) -> (((to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100)))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = slide(concat(s1, to_rep2(first14(mk7(to_rep3(s), 100))),
  to_rep2(last16(mk7(to_rep3(s), 100))), s1, to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))),
  to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt = mk(to_rep2(first12(mk6(1,
  ((1 + (0 + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(1, ((1 + (0 + ((to_rep2(last18(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) - to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))) + 1))) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))))
  })))) and ((not (to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100))))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = slide(concat(s1, to_rep2(first14(mk7(to_rep3(s), 100))),
  to_rep2(last16(mk7(to_rep3(s), 100))), s1, to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))),
  to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt = mk(to_rep2(first12(mk6(1,
  ((1 + (0 + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (0 + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(1, ((1 + (0 + ((to_rep2(last18(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) - to_rep2(first16(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))) + 1))) - 1)))),
  to_rep2(last12(mk6(1, ((1 + (0 + 0)) - 1))))) })))))))) and
  ((not (to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))) -> (((length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100) }) = 0) ->
  (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(1, ((1 + (0 + 0)) - 1)))),
  to_rep2(last12(mk6(to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))))) })) and ((not (length7({ elts7 = s1; rt7 = mk7(to_rep3(s), 100)
  }) = 0)) -> (((to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100)))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = slide(concat(s1, to_rep2(first14(mk7(to_rep3(s), 100))),
  to_rep2(last16(mk7(to_rep3(s), 100))), s1, to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))),
  to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt = mk(to_rep2(first12(mk6(1,
  ((1 + (0 + 0)) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s),
  100)))) + 1) + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(1, ((1 + (0 + 0)) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (((to_rep2(last16(mk7(to_rep3(s),
  100))) - to_rep2(first14(mk7(to_rep3(s), 100)))) + 1) + 0)) - 1)))))
  })))) and ((not (to_rep2(first14(mk7(to_rep3(s),
  100))) <= to_rep2(last16(mk7(to_rep3(s), 100))))) ->
  (((to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) <= to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) -> (get_model__3({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = { elts = slide(concat(s1, to_rep2(first14(mk7(to_rep3(s), 100))),
  to_rep2(last16(mk7(to_rep3(s), 100))), s1, to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))), to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))),
  to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt = mk(to_rep2(first12(mk6(1,
  ((1 + (0 + 0)) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (0 + ((to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))) - to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) + 1))) - 1))))) })) and ((not (to_rep2(first16(mk8(1, last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))) <= to_rep2(last18(mk8(1,
  last14({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))))) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = slide(concat(s1,
  to_rep2(first14(mk7(to_rep3(s), 100))), to_rep2(last16(mk7(to_rep3(s),
  100))), s1, to_rep2(first16(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last18(mk8(1, last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))), to_rep2(first14(mk7(to_rep3(s), 100))), 1); rt =
  mk(to_rep2(first12(mk6(1, ((1 + (0 + 0)) - 1)))), to_rep2(last12(mk6(1,
  ((1 + (0 + 0)) - 1))))) })))))))))))))))) and ((not (wraps_around({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = true)) -> (get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = { elts = s1; rt =
  mk(to_rep2(first18(mk9(to_rep3(s), last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))), to_rep2(last20(mk9(to_rep3(s), last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))) }))))

axiom peek__3__post_axiom :
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int [peek__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })]. ((not (is_empty({
  us_split_fields1 = { rec__stacks__stack_root__content = s1;
  rec__stacks__stack_root__length = s2; rec__ext__ = hide_ext__(s, s3) };
  attr__tag = s4 }) = true)) -> (((not (is_empty({ us_split_fields1 = {
  rec__stacks__stack_root__content = s1; rec__stacks__stack_root__length =
  s2; rec__ext__ = hide_ext__(s, s3) }; attr__tag = s4 }) = true)) and
  (peek__3({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = to_rep(((get_model__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })).elts[to_rep2(last((get_model__3({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })).rt))])))) and in_range(peek__3({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))))

axiom peek__3__post__dispatch_axiom :
  (forall attr__tag2:int.
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int
  [peek__31(attr__tag2, { us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })]. ((not (is_empty({ us_split_fields1 = {
  rec__stacks__stack_root__content = s1; rec__stacks__stack_root__length =
  s2; rec__ext__ = hide_ext__(s, s3) }; attr__tag = s4 }) = true)) ->
  (((not (is_empty({ us_split_fields1 = { rec__stacks__stack_root__content =
  s1; rec__stacks__stack_root__length = s2; rec__ext__ = hide_ext__(s, s3) };
  attr__tag = s4 }) = true)) and (peek__31(attr__tag2, { us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = to_rep(((get_model__31(s4, { us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })).elts[to_rep2(last((get_model__31(s4, { us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })).rt))])))) and in_range(peek__31(attr__tag2, { us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))))

axiom stacks__buffer__compat_axiom8 :
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int
  [peek__31(us_tag2, { us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })]. (peek__3({ us_split_fields3 =
  { rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = peek__31(us_tag2, { us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })))

axiom peek__3__def_axiom :
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int [peek__3({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })]. (peek__3({ us_split_fields3 =
  { rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = to_rep((s1[last14({ us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })]))))

axiom def_axiom1 :
  (forall temp___189:int. (in_range(temp___189) ->
  (forall temp___190:int.
  (to_rep((temp___187(temp___189)[temp___190])) = temp___189))))

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

logic bool_eq29 : bool, bool -> bool

axiom bool_eq_def18 :
  (forall x:bool. forall y:bool [bool_eq29(x, y)]. (((x = y) -> (bool_eq29(x,
  y) = true)) and ((not (x = y)) -> (bool_eq29(x, y) = false))))

predicate in_range7(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE15 : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check15 : us_image -> prop

logic attr__ATTRIBUTE_VALUE15 : us_image -> bool

axiom wraps_around__post_axiom : true

axiom wraps_around__post__dispatch_axiom : true

axiom stacks__buffer__compat_axiom9 :
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int
  [wraps_around1(us_tag2, { us_split_fields3 = { rec__stacks__buffer__first =
  s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })]. (to_int(wraps_around({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  })) = to_int(wraps_around1(us_tag2, { us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }))))

axiom wraps_around__def_axiom :
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int
  [wraps_around({ us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })]. ((wraps_around({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = true) <->
  (100 <  ((to_rep3(s) + to_rep1(s2)) - 1))))

axiom last__post_axiom :
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int [last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })]. in_range1(last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))

axiom last__post__dispatch_axiom :
  (forall attr__tag2:int.
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int
  [last15(attr__tag2, { us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })]. in_range1(last15(attr__tag2, {
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }))))

axiom stacks__buffer__compat_axiom10 :
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int
  [last15(us_tag2, { us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })]. (last14({ us_split_fields3 = {
  rec__stacks__buffer__first = s; rec__stacks__stack_root__content1 = s1;
  rec__stacks__stack_root__length1 = s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = last15(us_tag2, { us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })))

axiom last__def_axiom :
  (forall s:positive_less_than_max. forall s1:(int,element) farray.
  forall s2:less_than_max. forall s3:us_private. forall s4:int [last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 })]. (((not (wraps_around({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = true)) -> (last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = ((to_rep3(s) + to_rep1(s2)) - 1))) and ((wraps_around({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4 }) = true) -> (last14({
  us_split_fields3 = { rec__stacks__buffer__first = s;
  rec__stacks__stack_root__content1 = s1; rec__stacks__stack_root__length1 =
  s2; rec__ext__1 = s3 }; attr__tag1 = s4
  }) = (((to_rep3(s) + to_rep1(s2)) - 1) - 100)))))

 (* File "test_stack.adb", line 9, characters 0-0 *)
goal WP_parameter_def :
  (forall s__split_fields:(int,element) farray.
  forall s__split_fields1:less_than_max. forall s__split_fields2:us_private.
  forall e:int. forall i:int. forall i1:int.
  forall s__split_fields3:(int,element) farray.
  forall s__split_fields4:less_than_max. forall s__split_fields5:us_private.
  forall result:int. forall i2:int.
  forall s__split_fields6:(int,element) farray.
  forall s__split_fields7:less_than_max. forall s__split_fields8:us_private.
  forall result1:int. forall i3:int.
  forall s__split_fields9:(int,element) farray.
  forall s__split_fields10:less_than_max.
  forall s__split_fields11:us_private. forall result2:int. forall i4:int.
  forall s__split_fields12:(int,element) farray.
  forall s__split_fields13:less_than_max.
  forall s__split_fields14:us_private. forall result3:int. forall i5:int.
  forall s__split_fields15:(int,element) farray.
  forall s__split_fields16:less_than_max.
  forall s__split_fields17:us_private. forall result4:int. forall i6:int.
  forall s__split_fields18:(int,element) farray.
  forall s__split_fields19:less_than_max.
  forall s__split_fields20:us_private. forall result5:int. forall i7:int.
  (((0 <= 2147483647) -> in_range(e)) -> (((is_empty({ us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag }) = true) and
  reset__specific_post(s__attr__tag, { rec__stacks__stack_root__content =
  s__split_fields3; rec__stacks__stack_root__length = s__split_fields4;
  rec__ext__ = s__split_fields5 }, s__attr__tag, {
  rec__stacks__stack_root__content = s__split_fields;
  rec__stacks__stack_root__length = s__split_fields1; rec__ext__ =
  s__split_fields2 })) -> (((({ int__content = result } = { int__content = i
  }) and (i2 = 1)) and (((((length(get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i2), 1), to_rep2(first(mk(1, 1))), to_rep2(last(mk(1,
  1)))) = true)) or ((not (length(get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i2), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i2), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i2), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i2), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i2), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i2), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i2), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i2), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0)) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)), of_rep(i2)),
  to_rep2(first(mk(1, 1))), to_rep2(last(mk(1, 1)))) = true)) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)), of_rep(i2)),
  to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)), of_rep(i2)),
  to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)), of_rep(i2)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)), of_rep(i2)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)), of_rep(i2)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)), of_rep(i2)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)), of_rep(i2)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)), of_rep(i2)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true))))))))))) and
  push__specific_post(s__attr__tag, { rec__stacks__stack_root__content =
  s__split_fields6; rec__stacks__stack_root__length = s__split_fields7;
  rec__ext__ = s__split_fields8 }, s__attr__tag, i2, {
  rec__stacks__stack_root__content = s__split_fields3;
  rec__stacks__stack_root__length = s__split_fields4; rec__ext__ =
  s__split_fields5 })) and (((i2 = result1) and (i3 = 2)) and
  (((((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i3), 1), to_rep2(first(mk(1, 1))), to_rep2(last(mk(1,
  1)))) = true)) or ((not (length(get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i3), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i3), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i3), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i3), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i3), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i3), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i3), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i3), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0)) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)), of_rep(i3)),
  to_rep2(first(mk(1, 1))), to_rep2(last(mk(1, 1)))) = true)) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)), of_rep(i3)),
  to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)), of_rep(i3)),
  to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)), of_rep(i3)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)), of_rep(i3)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)), of_rep(i3)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)), of_rep(i3)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)), of_rep(i3)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)), of_rep(i3)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true))))))))))) and
  push__specific_post(s__attr__tag, { rec__stacks__stack_root__content =
  s__split_fields9; rec__stacks__stack_root__length = s__split_fields10;
  rec__ext__ = s__split_fields11 }, s__attr__tag, i3, {
  rec__stacks__stack_root__content = s__split_fields6;
  rec__stacks__stack_root__length = s__split_fields7; rec__ext__ =
  s__split_fields8 })) and (((i3 = result2) and (i4 = 3)) and
  (((((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i4), 1), to_rep2(first(mk(1, 1))), to_rep2(last(mk(1,
  1)))) = true)) or ((not (length(get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i4), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i4), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i4), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i4), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i4), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i4), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i4), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i4), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0)) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)), of_rep(i4)),
  to_rep2(first(mk(1, 1))), to_rep2(last(mk(1, 1)))) = true)) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)), of_rep(i4)),
  to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)), of_rep(i4)),
  to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)), of_rep(i4)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)), of_rep(i4)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)), of_rep(i4)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)), of_rep(i4)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)), of_rep(i4)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)), of_rep(i4)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true))))))))))) and
  push__specific_post(s__attr__tag, { rec__stacks__stack_root__content =
  s__split_fields12; rec__stacks__stack_root__length = s__split_fields13;
  rec__ext__ = s__split_fields14 }, s__attr__tag, i4, {
  rec__stacks__stack_root__content = s__split_fields9;
  rec__stacks__stack_root__length = s__split_fields10; rec__ext__ =
  s__split_fields11 })) and (((i4 = result3) and (i5 = 4)) and
  (((((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i5), 1), to_rep2(first(mk(1, 1))), to_rep2(last(mk(1,
  1)))) = true)) or ((not (length(get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i5), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i5), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i5), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content =
  s__split_fields12; rec__stacks__stack_root__length = s__split_fields13;
  rec__ext__ = s__split_fields14 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i5), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i5), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i5), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content =
  s__split_fields12; rec__stacks__stack_root__length = s__split_fields13;
  rec__ext__ = s__split_fields14 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i5), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i5), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0)) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)), of_rep(i5)),
  to_rep2(first(mk(1, 1))), to_rep2(last(mk(1, 1)))) = true)) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)), of_rep(i5)),
  to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)), of_rep(i5)),
  to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)), of_rep(i5)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content =
  s__split_fields12; rec__stacks__stack_root__length = s__split_fields13;
  rec__ext__ = s__split_fields14 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)), of_rep(i5)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)), of_rep(i5)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)), of_rep(i5)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content =
  s__split_fields12; rec__stacks__stack_root__length = s__split_fields13;
  rec__ext__ = s__split_fields14 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)), of_rep(i5)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)), of_rep(i5)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true))))))))))) and
  push__specific_post(s__attr__tag, { rec__stacks__stack_root__content =
  s__split_fields15; rec__stacks__stack_root__length = s__split_fields16;
  rec__ext__ = s__split_fields17 }, s__attr__tag, i5, {
  rec__stacks__stack_root__content = s__split_fields12;
  rec__stacks__stack_root__length = s__split_fields13; rec__ext__ =
  s__split_fields14 })) and (((i5 = result4) and (i6 = 5)) and
  ((((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i6), 1), to_rep2(first(mk(1, 1))), to_rep2(last(mk(1,
  1)))) = true)) or ((not (length(get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i6), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i6), 1), to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i6), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content =
  s__split_fields15; rec__stacks__stack_root__length = s__split_fields16;
  rec__ext__ = s__split_fields17 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i6), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i6), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i6), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content =
  s__split_fields15; rec__stacks__stack_root__length = s__split_fields16;
  rec__ext__ = s__split_fields17 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i6), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  singleton(of_rep(i6), 1),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0)) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)), of_rep(i6)),
  to_rep2(first(mk(1, 1))), to_rep2(last(mk(1, 1)))) = true)) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)), of_rep(i6)),
  to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)), of_rep(i6)),
  to_rep2(first(mk(1, 1))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)), of_rep(i6)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content =
  s__split_fields15; rec__stacks__stack_root__length = s__split_fields16;
  rec__ext__ = s__split_fields17 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)), of_rep(i6)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)), of_rep(i6)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) + 1) + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true)))))) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)))) and
  (((length(get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })) = 0) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)), of_rep(i6)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(1, 1)))) = true)) or ((not (length(get_model1(s__attr__tag,
  { us_split_fields1 = { rec__stacks__stack_root__content =
  s__split_fields15; rec__stacks__stack_root__length = s__split_fields16;
  rec__ext__ = s__split_fields17 }; attr__tag = s__attr__tag })) = 0)) and
  (((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)), of_rep(i6)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (((to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) - to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt))) + 1) + 1)) - 1))))) = true)) or
  ((not (to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) <= to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)))) and
  (bool_eq2((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  concat_singleton_right((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)), of_rep(i6)),
  to_rep2(first(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)) + (0 + 1)) - 1)))),
  to_rep2(last(mk(to_rep2(first((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag })).rt)),
  ((to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }; attr__tag = s__attr__tag
  })).rt)) + (0 + 1)) - 1))))) = true))))))))))) and
  push__specific_post(s__attr__tag, { rec__stacks__stack_root__content =
  s__split_fields18; rec__stacks__stack_root__length = s__split_fields19;
  rec__ext__ = s__split_fields20 }, s__attr__tag, i6, {
  rec__stacks__stack_root__content = s__split_fields15;
  rec__stacks__stack_root__length = s__split_fields16; rec__ext__ =
  s__split_fields17 }))))))))))) -> ((bool_eq2((get_model1(s__attr__tag, {
  us_split_fields1 = { rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).elts,
  to_rep2(first((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)),
  to_rep2(last((get_model1(s__attr__tag, { us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag })).rt)), temp___478(1, 2, 3,
  4, 5), 1, 5) = true) -> ((({ int__content = result5 } = { int__content = i1
  }) and (i7 = 5)) -> (not (is_empty({ us_split_fields1 = {
  rec__stacks__stack_root__content = s__split_fields18;
  rec__stacks__stack_root__length = s__split_fields19; rec__ext__ =
  s__split_fields20 }; attr__tag = s__attr__tag }) = true))))))))
