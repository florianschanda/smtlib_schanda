(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-sort rritemtype 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (rritemtype rritemtype) Bool)
(declare-const dummy2 rritemtype)
(declare-datatypes () ((rritemtype__ref (mk_rritemtype__ref (rritemtype__content rritemtype)))))
(define-fun rritemtype__ref___projection ((a rritemtype__ref)) rritemtype (rritemtype__content a))
(define-fun dynamic_invariant1 ((temp___expr_270 Int) (temp___is_init_267 Bool) (temp___skip_constant_268 Bool) (temp___do_toplevel_269 Bool)) Bool (=> (or (= temp___is_init_267 true) (<= 0 10)) (in_range3 temp___expr_270)))
(declare-sort linelengthindex 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 256)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (linelengthindex linelengthindex) Bool)
(declare-const dummy3 linelengthindex)
(declare-datatypes () ((linelengthindex__ref (mk_linelengthindex__ref (linelengthindex__content linelengthindex)))))
(define-fun linelengthindex__ref___projection ((a linelengthindex__ref)) linelengthindex (linelengthindex__content a))
(define-fun dynamic_invariant2 ((temp___expr_276 Int) (temp___is_init_273 Bool) (temp___skip_constant_274 Bool) (temp___do_toplevel_275 Bool)) Bool (=> (or (= temp___is_init_273 true) (<= 1 256)) (in_range4 temp___expr_276)))
(declare-sort domainnamestringtypeindex 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 128)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (domainnamestringtypeindex domainnamestringtypeindex) Bool)
(declare-const dummy4 domainnamestringtypeindex)
(declare-datatypes () ((domainnamestringtypeindex__ref (mk_domainnamestringtypeindex__ref (domainnamestringtypeindex__content domainnamestringtypeindex)))))
(define-fun domainnamestringtypeindex__ref___projection ((a domainnamestringtypeindex__ref)) domainnamestringtypeindex (domainnamestringtypeindex__content a))
(declare-const blankdomainname (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun rr_type__blankdomainname__aggregate_def (Int) (Array Int character))
(assert (forall ((temp___136 Int)) (forall ((temp___137 Int)) (= (select (rr_type__blankdomainname__aggregate_def temp___136) temp___137) (of_rep temp___136)))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const zonefileline (Array Int character))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const zlength Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const r97b Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const r98b Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t99b__ref (mk_t99b__ref (t99b__content integer)))))
(define-fun t99b__ref___projection ((a t99b__ref)) integer (t99b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const r100b Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t101b__ref (mk_t101b__ref (t101b__content integer)))))
(define-fun t101b__ref___projection ((a t101b__ref)) integer (t101b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const r102b Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const r103b Int)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq7 (integer integer) Bool)
(declare-const dummy7 integer)
(declare-datatypes () ((t104b__ref (mk_t104b__ref (t104b__content integer)))))
(define-fun t104b__ref___projection ((a t104b__ref)) integer (t104b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const r105b Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t106b__ref (mk_t106b__ref (t106b__content integer)))))
(define-fun t106b__ref___projection ((a t106b__ref)) integer (t106b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(define-fun dynamic_invariant3 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range2 temp___expr_63)))
(define-fun dynamic_invariant4 ((temp___expr_291 Int) (temp___is_init_288 Bool) (temp___skip_constant_289 Bool) (temp___do_toplevel_290 Bool)) Bool (=> (or (= temp___is_init_288 true) (<= 1 128)) (in_range5 temp___expr_291)))
(assert (= blankdomainname (rr_type__blankdomainname__aggregate_def 32)))
(declare-const newnameserver (Array Int character))
(declare-const newemail (Array Int character))
(declare-const success Bool)
(declare-const begidx Int)
(declare-const endidx Int)
(declare-const foundtype Int)
(declare-const lengthoftoken Int)
(declare-const i Int)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const i3 Int)
(declare-const temp___1731 Int)
(declare-const temp___1730 Int)
(declare-const temp___1729 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const temp___1736 Int)
(declare-const temp___1734 (Array Int character))
(declare-const temp___1733 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const temp___1732 Int)
(declare-const o5 character)
(declare-const o6 Int)
(declare-const o7 (Array Int character))
(declare-const temp___1740 (Array Int character))
(declare-const temp___1739 Int)
(declare-const o8 character)
(declare-const o9 (Array Int character))
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const temp___1747 Int)
(declare-const temp___1748 Int)
(declare-const temp___1745 (Array Int character))
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const temp___1744 Int)
(declare-const o14 character)
(declare-const o15 Int)
(declare-const o16 (Array Int character))
(declare-const o17 character)
(declare-const o18 (Array Int character))
(declare-const success1 Bool)
(declare-const lengthoftoken1 Int)
(declare-const i4 Int)
(declare-const i5 Int)
(declare-const result Int)
(declare-const begidx1 Int)
(declare-const result1 (Array Int character))
(declare-const newnameserver1 (Array Int character))
(declare-const result2 (Array Int character))
(declare-const newemail1 (Array Int character))
(declare-const begidx2 Int)
(declare-const endidx1 Int)
(declare-const foundtype1 Int)
(declare-const begidx3 Int)
(declare-const endidx2 Int)
(declare-const foundtype2 Int)
(declare-const result3 Int)
(declare-const begidx4 Int)
(declare-const begidx5 Int)
(declare-const endidx3 Int)
(declare-const foundtype3 Int)
(declare-const begidx6 Int)
(declare-const endidx4 Int)
(declare-const foundtype4 Int)
(declare-const begidx7 Int)
(declare-const endidx5 Int)
(declare-const foundtype5 Int)
(declare-const begidx8 Int)
(declare-const endidx6 Int)
(declare-const foundtype6 Int)
(declare-const begidx9 Int)
(declare-const endidx7 Int)
(declare-const foundtype7 Int)
(declare-const begidx10 int__ref)
(declare-const endidx8 int__ref)
(declare-const foundtype8 int__ref)
(declare-const begidx11 Int)
(declare-const endidx9 Int)
(declare-const foundtype9 Int)
(declare-const result4 bool__ref)
(declare-const success2 Bool)
(declare-const result5 int__ref)
(declare-const begidx12 Int)
(declare-const begidx13 Int)
(declare-const endidx10 Int)
(declare-const foundtype10 Int)
(declare-const result6 int__ref)
(declare-const lengthoftoken2 Int)
(declare-const result7 bool__ref)
(declare-const success3 Bool)
(declare-const result8 bool__ref)
(declare-const success4 Bool)
(declare-const result9 int__ref)
(declare-const i6 Int)
(declare-const newnameserver2 (Array Int character))
(declare-const i7 Int)
(declare-const result10 map__ref)
(declare-const newnameserver3 (Array Int character))
(declare-const result11 int__ref)
(declare-const i8 Int)
(declare-const newnameserver4 map__ref)
(declare-const i9 int__ref)
(declare-const newnameserver5 (Array Int character))
(declare-const i10 Int)
(declare-const newnameserver6 map__ref)
(declare-const i11 int__ref)
(declare-const newnameserver7 (Array Int character))
(declare-const i12 Int)
(declare-const newnameserver8 map__ref)
(declare-const i13 int__ref)
(declare-const newnameserver9 (Array Int character))
(declare-const i14 Int)
(declare-const newnameserver10 map__ref)
(declare-const i15 int__ref)
(declare-const newnameserver11 (Array Int character))
(declare-const i16 Int)
(declare-const result12 int__ref)
(declare-const i17 Int)
(declare-const newnameserver12 (Array Int character))
(declare-const i18 Int)
(declare-const result13 map__ref)
(declare-const newnameserver13 (Array Int character))
(declare-const result14 int__ref)
(declare-const i19 Int)
(declare-const newnameserver14 map__ref)
(declare-const i20 int__ref)
(declare-const newnameserver15 (Array Int character))
(declare-const i21 Int)
(declare-const newnameserver16 map__ref)
(declare-const i22 int__ref)
(declare-const newnameserver17 (Array Int character))
(declare-const i23 Int)
(declare-const newnameserver18 map__ref)
(declare-const i24 int__ref)
(declare-const newnameserver19 (Array Int character))
(declare-const i25 Int)
(declare-const newnameserver20 map__ref)
(declare-const i26 int__ref)
(declare-const newnameserver21 (Array Int character))
(declare-const i27 Int)
(declare-const newnameserver22 map__ref)
(declare-const success5 bool__ref)
(declare-const i28 int__ref)
(declare-const i29 int__ref)
(declare-const newnameserver23 (Array Int character))
(declare-const success6 Bool)
(declare-const i30 Int)
(declare-const i31 Int)
(declare-const newnameserver24 map__ref)
(declare-const success7 bool__ref)
(declare-const i32 int__ref)
(declare-const i33 int__ref)
(declare-const newnameserver25 (Array Int character))
(declare-const success8 Bool)
(declare-const i34 Int)
(declare-const i35 Int)
(declare-const newnameserver26 map__ref)
(declare-const success9 bool__ref)
(declare-const begidx14 int__ref)
(declare-const endidx11 int__ref)
(declare-const foundtype11 int__ref)
(declare-const lengthoftoken3 int__ref)
(declare-const i36 int__ref)
(declare-const i37 int__ref)
(declare-const newnameserver27 (Array Int character))
(declare-const success10 Bool)
(declare-const begidx15 Int)
(declare-const endidx12 Int)
(declare-const foundtype12 Int)
(declare-const lengthoftoken4 Int)
(declare-const i38 Int)
(declare-const i39 Int)
(declare-const result15 int__ref)
(declare-const begidx16 Int)
(declare-const begidx17 Int)
(declare-const endidx13 Int)
(declare-const foundtype13 Int)
(declare-const result16 int__ref)
(declare-const lengthoftoken5 Int)
(declare-const result17 int__ref)
(declare-const i40 Int)
(declare-const newemail2 (Array Int character))
(declare-const i41 Int)
(declare-const result18 map__ref)
(declare-const newemail3 (Array Int character))
(declare-const result19 int__ref)
(declare-const i42 Int)
(declare-const newemail4 map__ref)
(declare-const i43 int__ref)
(declare-const newemail5 (Array Int character))
(declare-const i44 Int)
(declare-const newemail6 map__ref)
(declare-const i45 int__ref)
(declare-const newemail7 (Array Int character))
(declare-const i46 Int)
(declare-const newemail8 map__ref)
(declare-const i47 int__ref)
(declare-const newemail9 (Array Int character))
(declare-const i48 Int)
(declare-const newemail10 map__ref)
(declare-const i49 int__ref)
(declare-const newemail11 (Array Int character))
(declare-const i50 Int)
(declare-const result20 int__ref)
(declare-const i51 Int)
(declare-const newemail12 (Array Int character))
(declare-const i52 Int)
(declare-const result21 map__ref)
(declare-const newemail13 (Array Int character))
(declare-const result22 int__ref)
(declare-const i53 Int)
(declare-const newemail14 map__ref)
(declare-const i54 int__ref)
(declare-const newemail15 (Array Int character))
(declare-const i55 Int)
(assert (= (rr_type__blankdomainname__aggregate_def 32) blankdomainname))
(assert (in_range4 zlength))
(assert (= result begidx))
(assert (= begidx1 1))
(assert (in_range4 begidx1))
(assert (=> (<= 1 256) (in_range4 endidx)))
(assert (=> (<= 0 10) (in_range3 foundtype)))
(assert (=> (<= 1 256) (in_range4 lengthoftoken)))
(assert (= result1 newnameserver))
(assert (= newnameserver1 blankdomainname))
(assert (= result2 newemail))
(assert (= newemail1 blankdomainname))
(assert (and (and (and (and (<= begidx2 endidx1) (<= begidx2 zlength)) (<= endidx1 zlength)) (=> (= foundtype1 1) (forall ((i56 Int)) (=> (and (<= begidx2 i56) (<= i56 endidx1)) (and (<= 48 (to_rep (select zonefileline i56))) (<= (to_rep (select zonefileline i56)) 57)))))) (and (and (in_range4 begidx2) (in_range4 endidx1)) (in_range3 foundtype1))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (and (and (= temp___1731 foundtype1) (and (= temp___1730 endidx1) (and (= temp___1729 begidx2) (and (< endidx2 zlength) (and (and (and (and (=> (<= 1 256) (in_range4 begidx3)) (=> (<= 1 256) (in_range4 endidx2))) (=> (<= 0 10) (in_range3 foundtype2))) (and (not (= foundtype2 3)) (< endidx2 zlength))) (and (and (and (= o (+ endidx2 1)) (in_range4 (+ endidx2 1))) (and (= begidx3 result3) (= begidx4 o))) (and (and (and (and (and (<= begidx5 endidx3) (<= begidx5 zlength)) (<= endidx3 zlength)) (=> (= foundtype3 1) (forall ((i56 Int)) (=> (and (<= begidx5 i56) (<= i56 endidx3)) (and (<= 48 (to_rep (select zonefileline i56))) (<= (to_rep (select zonefileline i56)) 57)))))) (and (and (in_range4 begidx5) (in_range4 endidx3)) (in_range3 foundtype3))) (not (and (not (= foundtype3 3)) (< endidx3 zlength)))))))))) (and (and (= foundtype3 foundtype6) (and (= endidx3 endidx6) (= begidx5 begidx8))) (and (= foundtype7 foundtype3) (and (= endidx7 endidx3) (= begidx9 begidx5)))))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= foundtype8 (mk_int__ref foundtype6))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= endidx8 (mk_int__ref endidx6))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx10 (mk_int__ref begidx8))))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= foundtype9 foundtype7)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= endidx9 endidx7)))
(assert (=> (and (not (= foundtype1 3)) (< endidx1 zlength)) (= begidx11 begidx9)))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= foundtype8 (mk_int__ref foundtype1))))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= endidx8 (mk_int__ref endidx1))))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= begidx10 (mk_int__ref begidx2))))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= foundtype9 foundtype1)))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= endidx9 endidx1)))
(assert (=> (not (and (not (= foundtype1 3)) (< endidx1 zlength))) (= begidx11 begidx2)))
(assert (=> (<= zlength (int__content endidx8)) (= result4 (mk_bool__ref success))))
(assert (=> (<= zlength (int__content endidx8)) (= success2 (of_int 0))))
(assert (=> (<= zlength (int__content endidx8)) (= i37 (mk_int__ref i1))))
(assert (=> (<= zlength (int__content endidx8)) (= i36 (mk_int__ref i))))
(assert (=> (<= zlength (int__content endidx8)) (= lengthoftoken3 (mk_int__ref lengthoftoken))))
(assert (=> (<= zlength (int__content endidx8)) (= foundtype11 foundtype8)))
(assert (=> (<= zlength (int__content endidx8)) (= endidx11 endidx8)))
(assert (=> (<= zlength (int__content endidx8)) (= begidx14 begidx10)))
(assert (=> (<= zlength (int__content endidx8)) (= success9 (mk_bool__ref success2))))
(assert (=> (<= zlength (int__content endidx8)) (= newnameserver26 (mk_map__ref newnameserver1))))
(assert (=> (<= zlength (int__content endidx8)) (= i39 i5)))
(assert (=> (<= zlength (int__content endidx8)) (= i38 i4)))
(assert (=> (<= zlength (int__content endidx8)) (= lengthoftoken4 lengthoftoken1)))
(assert (=> (<= zlength (int__content endidx8)) (= foundtype12 foundtype9)))
(assert (=> (<= zlength (int__content endidx8)) (= endidx12 endidx9)))
(assert (=> (<= zlength (int__content endidx8)) (= begidx15 begidx11)))
(assert (=> (<= zlength (int__content endidx8)) (= success10 success2)))
(assert (=> (<= zlength (int__content endidx8)) (= newnameserver27 newnameserver1)))
(assert (=> (not (<= zlength (int__content endidx8))) (and (= o1 (+ (int__content endidx8) 1)) (in_range4 (+ (int__content endidx8) 1)))))
(assert (=> (not (<= zlength (int__content endidx8))) (= result5 begidx10)))
(assert (=> (not (<= zlength (int__content endidx8))) (= begidx12 o1)))
(assert (=> (not (<= zlength (int__content endidx8))) (and (and (and (and (<= begidx13 endidx10) (<= begidx13 zlength)) (<= endidx10 zlength)) (=> (= foundtype10 1) (forall ((i56 Int)) (=> (and (<= begidx13 i56) (<= i56 endidx10)) (and (<= 48 (to_rep (select zonefileline i56))) (<= (to_rep (select zonefileline i56)) 57)))))) (and (and (in_range4 begidx13) (in_range4 endidx10)) (in_range3 foundtype10)))))
(assert (=> (not (<= zlength (int__content endidx8))) (and (= o2 (+ (- endidx10 begidx13) 1)) (in_range4 (+ (- endidx10 begidx13) 1)))))
(assert (=> (not (<= zlength (int__content endidx8))) (= result6 (mk_int__ref lengthoftoken))))
(assert (=> (not (<= zlength (int__content endidx8))) (= lengthoftoken2 o2)))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (not (= foundtype10 0)) (= result7 (mk_bool__ref success)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (not (= foundtype10 0)) (= success3 (of_int 0)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (not (= foundtype10 0)) (= i33 (mk_int__ref i1)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (not (= foundtype10 0)) (= i32 (mk_int__ref i)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (not (= foundtype10 0)) (= success7 (mk_bool__ref success3)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (not (= foundtype10 0)) (= newnameserver24 (mk_map__ref newnameserver1)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (not (= foundtype10 0)) (= i35 i5))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (not (= foundtype10 0)) (= i34 i4))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (not (= foundtype10 0)) (= success8 success3))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (not (= foundtype10 0)) (= newnameserver25 newnameserver1))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (< 128 lengthoftoken2) (= result8 (mk_bool__ref success))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (< 128 lengthoftoken2) (= success4 (of_int 0))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (< 128 lengthoftoken2) (= i29 (mk_int__ref i1))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (< 128 lengthoftoken2) (= i28 (mk_int__ref i))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (< 128 lengthoftoken2) (= success5 (mk_bool__ref success4))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (< 128 lengthoftoken2) (= newnameserver22 (mk_map__ref newnameserver1))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (< 128 lengthoftoken2) (= i31 i5)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (< 128 lengthoftoken2) (= i30 i4)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (< 128 lengthoftoken2) (= success6 success4)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (< 128 lengthoftoken2) (= newnameserver23 newnameserver1)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= begidx13 r97b)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (in_range4 r97b)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= endidx10 r98b)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (in_range4 r98b)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= result9 (mk_int__ref i))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= i6 r97b)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i6) (<= i6 r98b)) (and (and (= temp___1736 endidx10) (and (= temp___1734 newnameserver1) (and (= temp___1733 i6) (and (and (and (<= 1 begidx13) (<= (+ (- endidx10 begidx13) 1) 128)) (= endidx10 temp___1736)) (and (and (=> (<= r97b r98b) (dynamic_property r97b r98b i7)) (and (<= r97b i7) (<= i7 r98b))) (and (and (and (= (to_rep o5) (to_rep (select zonefileline i7))) (and (and (and (and (and (= o3 (+ i7 1)) (in_range1 (+ i7 1))) (= o4 (- o3 begidx13))) (and (= temp___1732 o4) (in_range1 o4))) (and (and (<= 1 temp___1732) (<= temp___1732 128)) (= o6 temp___1732))) (= o7 (store newnameserver2 o6 o5)))) (and (= result10 (mk_map__ref newnameserver2)) (= newnameserver3 o7))) (= i7 r98b))))))) (and (and (= i13 (mk_int__ref i7)) (= newnameserver8 (mk_map__ref newnameserver3))) (and (= i14 i7) (= newnameserver9 newnameserver3)))))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i6) (<= i6 r98b)) (= i15 i13))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i6) (<= i6 r98b)) (= newnameserver10 newnameserver8))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i6) (<= i6 r98b)) (= i16 i14))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r97b i6) (<= i6 r98b)) (= newnameserver11 newnameserver9))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r97b i6) (<= i6 r98b))) (= i15 (mk_int__ref i6)))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r97b i6) (<= i6 r98b))) (= newnameserver10 (mk_map__ref newnameserver1)))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r97b i6) (<= i6 r98b))) (= i16 i6))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r97b i6) (<= i6 r98b))) (= newnameserver11 newnameserver1))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= (+ endidx10 1) r100b)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (in_range1 r100b)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= result12 (mk_int__ref i1))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= i17 r100b)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i17) (<= i17 128)) (and (and (= temp___1740 (map__content newnameserver10)) (and (= temp___1739 i17) (and (<= 1 endidx10) (and (and (and (=> (<= r100b 128) (dynamic_property1 r100b 128 i18)) (forall ((temp___1741 Int)) (=> (and (<= 1 temp___1741) (<= temp___1741 128)) (=> (<= i18 temp___1741) (= (select newnameserver12 temp___1741) (select temp___1740 temp___1741)))))) (and (<= r100b i18) (<= i18 128))) (and (and (and (= (to_rep o8) 32) (= o9 (store newnameserver12 i18 o8))) (and (= result13 (mk_map__ref newnameserver12)) (= newnameserver13 o9))) (= i18 128)))))) (and (and (= i24 (mk_int__ref i18)) (= newnameserver18 (mk_map__ref newnameserver13))) (and (= i25 i18) (= newnameserver19 newnameserver13)))))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i17) (<= i17 128)) (= i26 i24))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i17) (<= i17 128)) (= newnameserver20 newnameserver18))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i17) (<= i17 128)) (= i27 i25))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (and (<= r100b i17) (<= i17 128)) (= newnameserver21 newnameserver19))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r100b i17) (<= i17 128))) (= i26 (mk_int__ref i17)))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r100b i17) (<= i17 128))) (= newnameserver20 newnameserver10))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r100b i17) (<= i17 128))) (= i27 i17))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (=> (not (and (<= r100b i17) (<= i17 128))) (= newnameserver21 newnameserver11))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= i29 i26)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= i28 i15)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= success5 (mk_bool__ref success))))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= newnameserver22 newnameserver20)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= i31 i27)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= i30 i16)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= success6 success1)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (=> (not (< 128 lengthoftoken2)) (= newnameserver23 newnameserver21)))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (= i33 i29))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (= i32 i28))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (= success7 success5))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (= newnameserver24 newnameserver22))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (= i35 i31))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (= i34 i30))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (= success8 success6))))
(assert (=> (not (<= zlength (int__content endidx8))) (=> (= foundtype10 0) (= newnameserver25 newnameserver23))))
(assert (=> (not (<= zlength (int__content endidx8))) (= i37 i33)))
(assert (=> (not (<= zlength (int__content endidx8))) (= i36 i32)))
(assert (=> (not (<= zlength (int__content endidx8))) (= lengthoftoken3 (mk_int__ref lengthoftoken2))))
(assert (=> (not (<= zlength (int__content endidx8))) (= foundtype11 (mk_int__ref foundtype10))))
(assert (=> (not (<= zlength (int__content endidx8))) (= endidx11 (mk_int__ref endidx10))))
(assert (=> (not (<= zlength (int__content endidx8))) (= begidx14 (mk_int__ref begidx13))))
(assert (=> (not (<= zlength (int__content endidx8))) (= success9 success7)))
(assert (=> (not (<= zlength (int__content endidx8))) (= newnameserver26 newnameserver24)))
(assert (=> (not (<= zlength (int__content endidx8))) (= i39 i35)))
(assert (=> (not (<= zlength (int__content endidx8))) (= i38 i34)))
(assert (=> (not (<= zlength (int__content endidx8))) (= lengthoftoken4 lengthoftoken2)))
(assert (=> (not (<= zlength (int__content endidx8))) (= foundtype12 foundtype10)))
(assert (=> (not (<= zlength (int__content endidx8))) (= endidx12 endidx10)))
(assert (=> (not (<= zlength (int__content endidx8))) (= begidx15 begidx13)))
(assert (=> (not (<= zlength (int__content endidx8))) (= success10 success8)))
(assert (=> (not (<= zlength (int__content endidx8))) (= newnameserver27 newnameserver25)))
(assert (not (<= zlength (int__content endidx11))))
(assert (and (= o10 (+ (int__content endidx11) 1)) (in_range4 (+ (int__content endidx11) 1))))
(assert (= result15 begidx14))
(assert (= begidx16 o10))
(assert (and (and (and (and (<= begidx17 endidx13) (<= begidx17 zlength)) (<= endidx13 zlength)) (=> (= foundtype13 1) (forall ((i56 Int)) (=> (and (<= begidx17 i56) (<= i56 endidx13)) (and (<= 48 (to_rep (select zonefileline i56))) (<= (to_rep (select zonefileline i56)) 57)))))) (and (and (in_range4 begidx17) (in_range4 endidx13)) (in_range3 foundtype13))))
(assert (and (= o11 (+ (- endidx13 begidx17) 1)) (in_range4 (+ (- endidx13 begidx17) 1))))
(assert (= result16 lengthoftoken3))
(assert (= lengthoftoken5 o11))
(assert (= foundtype13 0))
(assert (not (< 128 lengthoftoken5)))
(assert (= begidx17 r102b))
(assert (in_range4 r102b))
(assert (= endidx13 r103b))
(assert (in_range4 r103b))
(assert (= result17 (mk_int__ref i2)))
(assert (= i40 r102b))
(assert (<= r102b i40))
(assert (<= i40 r103b))
(assert (not (<= 1 begidx17)))
(check-sat)
(exit)
