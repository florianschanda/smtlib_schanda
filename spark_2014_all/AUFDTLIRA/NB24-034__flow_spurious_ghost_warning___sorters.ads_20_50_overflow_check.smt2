(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq2 (us_t us_t) Bool)
(declare-const dummy2 us_t)
(declare-datatypes () ((array_type__ref (mk_array_type__ref (array_type__content us_t)))))
(define-fun array_type__ref___projection ((a array_type__ref)) us_t (array_type__content a))
(declare-fun perm (us_t us_t) Bool)
(declare-fun perm__function_guard (Bool us_t us_t) Bool)
(define-fun dynamic_invariant1 ((temp___expr_159 us_t) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (=> (not (= temp___skip_constant_156 true)) (dynamic_property 1 2147483647 (first1 temp___expr_159) (last1 temp___expr_159))))
(assert true)
(declare-fun perm_transitive (us_t us_t us_t) Bool)
(declare-fun perm_transitive__function_guard (Bool us_t us_t us_t) Bool)
(assert (forall ((a us_t) (b us_t) (c us_t)) (! (=> (and (and (dynamic_invariant1 a true true true true) (dynamic_invariant1 b true true true true)) (dynamic_invariant1 c true true true true)) (=> (and (and (= (perm_transitive a b c) true) (= (perm a b) true)) (= (perm b c) true)) (= (perm a c) true))) :pattern ((perm_transitive a b c)))))
(declare-fun index_of_minimum (us_t) Int)
(declare-fun index_of_minimum__function_guard (Int us_t) Bool)
(assert (forall ((unsorted us_t)) (! (=> (and (dynamic_invariant1 unsorted true true true true) (<= (first1 unsorted) (last1 unsorted))) (let ((result (index_of_minimum unsorted))) (and (and (and (<= (first1 unsorted) result) (<= result (last1 unsorted))) (forall ((j Int)) (=> (and (<= (first1 unsorted) j) (<= j (last1 unsorted))) (<= (to_rep (select (to_array unsorted) result)) (to_rep (select (to_array unsorted) j)))))) (dynamic_invariant result true false true true)))) :pattern ((index_of_minimum unsorted)))))
(declare-const values__first integer)
(declare-const values__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((tTvalues_lastSP1__ref (mk_tTvalues_lastSP1__ref (tTvalues_lastSP1__content integer)))))
(define-fun tTvalues_lastSP1__ref___projection ((a tTvalues_lastSP1__ref)) integer (tTvalues_lastSP1__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int integer)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int integer) (elts1 a))
(define-fun of_array1 ((a (Array Int integer)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int integer)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int integer)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int integer)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep (first2 (rt1 x))) (to_rep (last2 (rt1 x))) (elts1 y) (to_rep (first2 (rt1 y))) (to_rep (last2 (rt1 y)))))
(declare-fun user_eq4 (us_t1 us_t1) Bool)
(declare-const dummy4 us_t1)
(declare-datatypes () ((tvalues_lastS__ref (mk_tvalues_lastS__ref (tvalues_lastS__content us_t1)))))
(define-fun tvalues_lastS__ref___projection ((a tvalues_lastS__ref)) us_t1 (tvalues_lastS__content a))
(define-fun dynamic_invariant2 ((temp___expr_206 us_t1) (temp___is_init_202 Bool) (temp___skip_constant_203 Bool) (temp___do_toplevel_204 Bool) (temp___do_typ_inv_205 Bool)) Bool (=> (not (= temp___skip_constant_203 true)) (and (dynamic_property2 (to_rep values__first) (to_rep values__last) (first3 temp___expr_206) (last3 temp___expr_206)) (and (= (first3 temp___expr_206) (to_rep values__first)) (= (last3 temp___expr_206) (to_rep values__last))))))
(declare-const values_last__first integer)
(declare-const values_last__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t25b__ref (mk_t25b__ref (t25b__content integer)))))
(define-fun t25b__ref___projection ((a t25b__ref)) integer (t25b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t26b__ref (mk_t26b__ref (t26b__content integer)))))
(define-fun t26b__ref___projection ((a t26b__ref)) integer (t26b__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first4 (mk2 f l))) f) (= (to_rep (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property4 range_first range_last low) (dynamic_property4 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int integer)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int integer) (elts2 a))
(define-fun of_array2 ((a (Array Int integer)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int integer)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int integer)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int integer)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep (first4 (rt2 x))) (to_rep (last4 (rt2 x))) (elts2 y) (to_rep (first4 (rt2 y))) (to_rep (last4 (rt2 y)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((t27b__ref (mk_t27b__ref (t27b__content us_t2)))))
(define-fun t27b__ref___projection ((a t27b__ref)) us_t2 (t27b__content a))
(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-const values (Array Int integer))
(declare-const values_last (Array Int integer))
(declare-const smallest Int)
(declare-const current Int)
(declare-const temp___217 Int)
(declare-const temp___227 Int)
(declare-const temp___226 (Array Int integer))
(declare-const temp___228 (Array Int integer))
(declare-const temp___224 (Array Int integer))
(declare-const temp___222 Int)
(declare-const temp___221 (Array Int integer))
(declare-const temp___218 (Array Int integer))
(declare-const temp___2181 t1)
(declare-const o (Array Int integer))
(declare-const o1 t1)
(declare-const o2 (Array Int integer))
(declare-const o3 (Array Int integer))
(declare-const temp___220 (Array Int integer))
(declare-const temp___2201 t2)
(declare-const o4 (Array Int integer))
(declare-const o5 t)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const j Int)
(declare-const o8 Int)
(declare-const o9 Bool)
(declare-const values1 (Array Int integer))
(declare-const values_last1 (Array Int integer))
(declare-const smallest1 Int)
(declare-const result Int)
(declare-const current1 Int)
(declare-const result1 (Array Int integer))
(declare-const values_last2 (Array Int integer))
(declare-const result2 Int)
(declare-const smallest2 Int)
(declare-const o10 (Array Int integer))
(declare-const values2 (Array Int integer))
(declare-const values_last3 (Array Int integer))
(declare-const smallest3 Int)
(declare-const current2 Int)
(declare-const values3 map__ref)
(declare-const values_last4 map__ref)
(declare-const smallest4 int__ref)
(declare-const current3 int__ref)
(declare-const values4 (Array Int integer))
(declare-const values_last5 (Array Int integer))
(declare-const smallest5 Int)
(declare-const current4 Int)
(declare-const values5 map__ref)
(declare-const values_last6 map__ref)
(declare-const smallest6 int__ref)
(declare-const current5 int__ref)
(declare-const values6 (Array Int integer))
(declare-const values_last7 (Array Int integer))
(declare-const smallest7 Int)
(declare-const current6 Int)
(declare-const values7 map__ref)
(declare-const values_last8 map__ref)
(declare-const smallest8 int__ref)
(declare-const current7 int__ref)
(declare-const values8 (Array Int integer))
(declare-const values_last9 (Array Int integer))
(declare-const smallest9 Int)
(declare-const current8 Int)
(declare-const result3 Bool)
(declare-const result4 Bool)
(define-fun smallest10 () int__ref (mk_int__ref smallest))
(define-fun values_last10 () map__ref (mk_map__ref values_last))
(assert (dynamic_property 1 2147483647 (to_rep values__first) (to_rep values__last)))
(assert (and (<= 1 (ite (<= (to_rep values__first) (to_rep values__last)) (+ (- (to_rep values__last) (to_rep values__first)) 1) 0)) (<= (to_rep values__last) 2147483647)))
(assert (and (dynamic_property2 (to_rep values__first) (to_rep values__last) (to_rep values_last__first) (to_rep values_last__last)) (and (= (to_rep values_last__first) (to_rep values__first)) (= (to_rep values_last__last) (to_rep values__last)))))
(assert (=> (<= 1 2147483647) (in_range2 smallest)))
(assert (= (perm (mk___t values (mk (to_rep values__first) (to_rep values__last))) (mk___t values (mk (to_rep values__first) (to_rep values__last)))) true))
(assert (and (= temp___217 (- (to_rep values__last) 1)) (in_range1 (- (to_rep values__last) 1))))
(assert (= (mk_int__ref result) (mk_int__ref current)))
(assert (= current1 (to_rep values__first)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= temp___227 smallest)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= temp___226 values_last)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= temp___228 values)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= temp___224 values)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= temp___222 current1)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= temp___221 values)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= (slide values (to_rep values__first) (to_rep values__first)) temp___218)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= (mk1 (to_rep values__first) (to_rep values__last)) temp___2181)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= (ite (<= (to_rep (first2 temp___2181)) (to_rep (last2 temp___2181))) (+ (- (to_rep (last2 temp___2181)) (to_rep (first2 temp___2181))) 1) 0) (ite (<= (to_rep values_last__first) (to_rep values_last__last)) (+ (- (to_rep values_last__last) (to_rep values_last__first)) 1) 0))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= (mk___t1 o o1) (mk___t1 temp___218 temp___2181))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= o2 o)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= (mk_map__ref result1) values_last10)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= values_last2 o2)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (=> (<= current1 (to_rep values__last)) (and (and (<= (to_rep values__first) current1) (<= current1 (to_rep values__last))) (and (<= (to_rep values__first) (to_rep values__last)) (<= (to_rep values__last) (to_rep values__last)))))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= o3 values)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= o3 temp___220)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= (mk2 current1 (to_rep values__last)) temp___2201)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= temp___220 o4)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= (mk (to_rep (first4 temp___2201)) (to_rep (last4 temp___2201))) o5)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (and (= o6 (index_of_minimum (mk___t o4 o5))) (and (in_range2 o6) (and (and (<= (to_rep (first o5)) o6) (<= o6 (to_rep (last o5)))) (forall ((j1 Int)) (=> (and (<= (to_rep (first o5)) j1) (<= j1 (to_rep (last o5)))) (<= (to_rep (select o4 o6)) (to_rep (select o4 j1))))))))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= (mk_int__ref result2) smallest10)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= smallest2 o6)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (=> (not (= smallest2 current1)) (and (= o7 current1) (in_range2 current1)))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (=> (not (= smallest2 current1)) (and (= (perm (mk___t values (mk (to_rep values__first) (to_rep values__last))) (mk___t o10 (mk (to_rep values__first) (to_rep values__last)))) true) (and (= (to_rep (select o10 o7)) (to_rep (select values smallest2))) (and (= (to_rep (select o10 smallest2)) (to_rep (select values o7))) (forall ((j1 Int)) (=> (and (<= (to_rep values__first) j1) (<= j1 (to_rep values__last))) (=> (and (not (= j1 o7)) (not (= j1 smallest2))) (= (to_rep (select o10 j1)) (to_rep (select values j1))))))))))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (=> (not (not (= smallest2 current1))) (= o10 values))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (=> (not (not (= smallest2 current1))) (= o10 values1))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= (perm_transitive (mk___t temp___221 (mk (to_rep values__first) (to_rep values__last))) (mk___t values_last2 (mk (to_rep values_last__first) (to_rep values_last__last))) (mk___t o10 (mk (to_rep values__first) (to_rep values__last)))) true)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= (perm (mk___t temp___228 (mk (to_rep values__first) (to_rep values__last))) (mk___t values2 (mk (to_rep values__first) (to_rep values__last)))) true)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (forall ((j1 Int)) (=> (and (<= current2 j1) (<= j1 (to_rep values__last))) (<= (to_rep (select values2 current2)) (to_rep (select values2 j1)))))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (forall ((j1 Int)) (=> (and (<= (to_rep values__first) j1) (<= j1 current2)) (<= (to_rep (select values2 j1)) (to_rep (select values2 (+ j1 1))))))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (and (and (=> (<= (to_rep values__first) (- (to_rep values__last) 1)) (dynamic_property3 (to_rep values__first) (- (to_rep values__last) 1) current2)) (=> (<= 1 2147483647) (in_range2 smallest3))) (and (<= (to_rep values__first) current2) (<= current2 (- (to_rep values__last) 1))))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= current2 temp___217)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= current3 (mk_int__ref current2))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= smallest4 (mk_int__ref smallest3))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= values_last4 (mk_map__ref values_last3))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= values3 (mk_map__ref values2))))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= current4 current2)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= smallest5 smallest3)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= values_last5 values_last3)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= values4 values2)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= current5 current3)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= smallest6 smallest4)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= values_last6 values_last4)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= values5 values3)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= current6 current4)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= smallest7 smallest5)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= values_last7 values_last5)))
(assert (=> (and (<= (to_rep values__first) current1) (<= current1 temp___217)) (= values6 values4)))
(assert (=> (not (and (<= (to_rep values__first) current1) (<= current1 temp___217))) (= current5 (mk_int__ref current1))))
(assert (=> (not (and (<= (to_rep values__first) current1) (<= current1 temp___217))) (= smallest6 smallest10)))
(assert (=> (not (and (<= (to_rep values__first) current1) (<= current1 temp___217))) (= values_last6 values_last10)))
(assert (=> (not (and (<= (to_rep values__first) current1) (<= current1 temp___217))) (= values5 (mk_map__ref values))))
(assert (=> (not (and (<= (to_rep values__first) current1) (<= current1 temp___217))) (= current6 current1)))
(assert (=> (not (and (<= (to_rep values__first) current1) (<= current1 temp___217))) (= smallest7 smallest1)))
(assert (=> (not (and (<= (to_rep values__first) current1) (<= current1 temp___217))) (= values_last7 values_last1)))
(assert (=> (not (and (<= (to_rep values__first) current1) (<= current1 temp___217))) (= values6 values1)))
(assert (= current7 current5))
(assert (= smallest8 smallest6))
(assert (= values_last8 values_last6))
(assert (= values7 values5))
(assert (= current8 current6))
(assert (= smallest9 smallest7))
(assert (= values_last9 values_last7))
(assert (= values8 values6))
(assert (= result3 (perm (mk___t values (mk (to_rep values__first) (to_rep values__last))) (mk___t (map__content values7) (mk (to_rep values__first) (to_rep values__last))))))
(assert (= result3 true))
(assert (and (= o8 (- (to_rep values__last) 1)) (in_range1 (- (to_rep values__last) 1))))
(assert (= o9 (ite (<= j o8) true false)))
(assert (= result4 (ite (<= (to_rep values__first) j) o9 false)))
(assert (= result4 true))
(assert (not (in_range1 (+ j 1))))
(check-sat)
(exit)
