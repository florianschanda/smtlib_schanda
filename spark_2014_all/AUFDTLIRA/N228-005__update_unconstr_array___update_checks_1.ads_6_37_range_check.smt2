(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(declare-sort tindexB 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 128) x) (<= x 127)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (tindexB tindexB) Bool)
(declare-const dummy1 tindexB)
(declare-datatypes () ((tindexB__ref (mk_tindexB__ref (tindexB__content tindexB)))))
(define-fun tindexB__ref___projection ((a tindexB__ref)) tindexB (tindexB__content a))
(declare-fun to_rep (tindexB) Int)
(declare-fun of_rep (Int) tindexB)
(assert (forall ((x tindexB)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x tindexB)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort index 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 8)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (index index) Bool)
(declare-const dummy2 index)
(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))
(define-fun dynamic_invariant1 ((temp___expr_162 Int) (temp___is_init_158 Bool) (temp___skip_constant_159 Bool) (temp___do_toplevel_160 Bool) (temp___do_typ_inv_161 Bool)) Bool (=> (or (= temp___is_init_158 true) (<= 1 8)) (in_range2 temp___expr_162)))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) tindexB)
(declare-fun last (t) tindexB)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((array_u__ref (mk_array_u__ref (array_u__content us_t)))))
(define-fun array_u__ref___projection ((a array_u__ref)) us_t (array_u__content a))
(declare-const a__first tindexB)
(declare-const a__last tindexB)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const i Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const new_val Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq4 (tindexB tindexB) Bool)
(declare-const dummy4 tindexB)
(declare-datatypes () ((tS1bP1__ref (mk_tS1bP1__ref (tS1bP1__content tindexB)))))
(define-fun tS1bP1__ref___projection ((a tS1bP1__ref)) tindexB (tS1bP1__content a))
(declare-fun temp___248 (us_t Int Int) us_t)
(declare-fun temp___417 (us_t Int Int) us_t)
(define-fun dynamic_invariant2 ((temp___expr_183 us_t) (temp___is_init_179 Bool) (temp___skip_constant_180 Bool) (temp___do_toplevel_181 Bool) (temp___do_typ_inv_182 Bool)) Bool (=> (not (= temp___skip_constant_180 true)) (dynamic_property 1 8 (first1 temp___expr_183) (last1 temp___expr_183))))
(assert (forall ((temp___419 us_t)) (forall ((temp___420 Int) (temp___421 Int)) (let ((temp___418 (temp___417 temp___419 temp___420 temp___421))) (=> (and (and (dynamic_invariant2 temp___419 true true true true) (dynamic_invariant1 temp___420 true true true true)) (dynamic_invariant temp___421 true true true true)) (and (and (= (first1 temp___418) (first1 temp___419)) (= (last1 temp___418) (last1 temp___419))) (forall ((temp___422 Int)) (ite (= temp___422 temp___420) (= (to_rep1 (select (to_array temp___418) temp___422)) temp___421) (= (select (to_array temp___418) temp___422) (select (to_array temp___419) temp___422))))))))))
(assert (forall ((temp___250 us_t)) (forall ((temp___251 Int) (temp___252 Int)) (let ((temp___249 (temp___248 temp___250 temp___251 temp___252))) (=> (and (and (dynamic_invariant2 temp___250 true true true true) (dynamic_invariant1 temp___251 true true true true)) (dynamic_invariant temp___252 true true true true)) (and (and (= (first1 temp___249) (first1 temp___250)) (= (last1 temp___249) (last1 temp___250))) (forall ((temp___253 Int)) (ite (= temp___253 temp___251) (= (to_rep1 (select (to_array temp___249) temp___253)) temp___252) (= (select (to_array temp___249) temp___253) (select (to_array temp___250) temp___253))))))))))
(declare-const a (Array Int integer))
(declare-const us Int)
(declare-const o Int)
(declare-const temp___423 (Array Int integer))
(declare-const temp___4231 t)
(declare-const temp___424 (Array Int integer))
(declare-const temp___4241 t)
(declare-const o1 (Array Int integer))
(declare-const result (Array Int integer))
(declare-const a1 (Array Int integer))
(declare-const a2 (Array Int integer))
(declare-const a3 (Array Int integer))
(define-fun temp___4232 () us_t (mk___t temp___423 temp___4231))
(assert (dynamic_property 1 8 (to_rep a__first) (to_rep a__last)))
(assert (in_range2 i))
(assert (in_range new_val))
(assert (and (= us i) (dynamic_property1 (to_rep a__first) (to_rep a__last) i)))
(assert (= o i))
(assert (= temp___4232 (temp___417 (mk___t a (mk (to_rep a__first) (to_rep a__last))) o new_val)))
(assert (= (ite (<= (to_rep (first temp___4231)) (to_rep (last temp___4231))) (+ (- (to_rep (last temp___4231)) (to_rep (first temp___4231))) 1) 0) (ite (<= (to_rep a__first) (to_rep a__last)) (+ (- (to_rep a__last) (to_rep a__first)) 1) 0)))
(assert (= (mk___t temp___424 temp___4241) temp___4232))
(assert (= o1 (slide temp___424 (to_rep (first temp___4241)) (to_rep a__first))))
(assert (= (mk_map__ref result) (mk_map__ref a)))
(assert (= a1 o1))
(assert (= a1 a2))
(assert (= a3 a1))
(assert (not (in_range2 i)))
(check-sat)
(exit)
