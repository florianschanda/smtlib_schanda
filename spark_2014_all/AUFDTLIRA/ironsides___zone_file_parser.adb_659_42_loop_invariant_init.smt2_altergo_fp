(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type character

predicate in_range2(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : character, character -> bool

logic dummy1 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq4 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def3 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq4(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_91:int. ((((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) and
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)])))) or
  (not ((a__first <= temp___idx_91) and (temp___idx_91 <= a__last)))))) ->
  (bool_eq4(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)]))))))) ->
  (bool_eq4(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq4(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)])))))))))

type rritemtype

predicate in_range3(x: int) = ((0 <= x) and (x <= 10))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : rritemtype, rritemtype -> bool

logic dummy2 : rritemtype

type rritemtype__ref = { rritemtype__content : rritemtype
}

function rritemtype__ref___projection(a: rritemtype__ref) : rritemtype =
  (a).rritemtype__content

type linelengthindex

predicate in_range4(x: int) = ((1 <= x) and (x <= 256))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : linelengthindex, linelengthindex -> bool

logic dummy3 : linelengthindex

type linelengthindex__ref = { linelengthindex__content : linelengthindex
}

function linelengthindex__ref___projection(a: linelengthindex__ref) : linelengthindex =
  (a).linelengthindex__content

logic blankline : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS : int

logic rr_type__blankline__aggregate_def : int -> (int,character) farray

type domainnamestringtypeindex

predicate in_range5(x: int) = ((1 <= x) and (x <= 128))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq4 : domainnamestringtypeindex, domainnamestringtypeindex -> bool

logic dummy4 : domainnamestringtypeindex

type domainnamestringtypeindex__ref = { domainnamestringtypeindex__content :
domainnamestringtypeindex
}

function domainnamestringtypeindex__ref___projection(a: domainnamestringtypeindex__ref) : domainnamestringtypeindex =
  (a).domainnamestringtypeindex__content

logic blankdomainname : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS1 : int

logic rr_type__blankdomainname__aggregate_def : int -> (int,character) farray

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic zonefileline : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS4 : int

logic zlength : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic r23b : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic r24b : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

predicate dynamic_property(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq5 : integer, integer -> bool

logic dummy5 : integer

type t25b__ref = { t25b__content : integer
}

function t25b__ref___projection(a: t25b__ref) : integer = (a).t25b__content

logic attr__ATTRIBUTE_ADDRESS13 : int

logic r26b : int

logic attr__ATTRIBUTE_ADDRESS14 : int

predicate dynamic_property1(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq6 : integer, integer -> bool

logic dummy6 : integer

type t27b__ref = { t27b__content : integer
}

function t27b__ref___projection(a: t27b__ref) : integer = (a).t27b__content

logic attr__ATTRIBUTE_ADDRESS15 : int

logic r28b : int

logic attr__ATTRIBUTE_ADDRESS16 : int

logic r29b : int

logic attr__ATTRIBUTE_ADDRESS17 : int

predicate dynamic_property2(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq7 : integer, integer -> bool

logic dummy7 : integer

type t30b__ref = { t30b__content : integer
}

function t30b__ref___projection(a: t30b__ref) : integer = (a).t30b__content

logic attr__ATTRIBUTE_ADDRESS18 : int

logic r31b : int

logic attr__ATTRIBUTE_ADDRESS19 : int

predicate dynamic_property3(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq8 : integer, integer -> bool

logic dummy8 : integer

type t32b__ref = { t32b__content : integer
}

function t32b__ref___projection(a: t32b__ref) : integer = (a).t32b__content

logic attr__ATTRIBUTE_ADDRESS20 : int

axiom blankline__def_axiom :
  (blankline = rr_type__blankline__aggregate_def(32))

axiom def_axiom :
  (forall temp___155:int. (in_range2(temp___155) ->
  (forall temp___156:int.
  (to_rep((rr_type__blankline__aggregate_def(temp___155)[temp___156])) = temp___155))))

axiom blankdomainname__def_axiom :
  (blankdomainname = rr_type__blankdomainname__aggregate_def(32))

axiom def_axiom1 :
  (forall temp___158:int. (in_range2(temp___158) ->
  (forall temp___159:int.
  (to_rep((rr_type__blankdomainname__aggregate_def(temp___158)[temp___159])) = temp___158))))

 (* File "zone_file_parser.adb", line 484, characters 0-0 *)
goal WP_parameter_def :
  (forall newdomainname:(int,character) farray.
  forall rrstring:(int,character) farray. forall success:bool.
  forall begidx:int. forall endidx:int. forall foundtype:int.
  forall lengthoftoken:int. forall i:int. forall i1:int. forall i2:int.
  forall i3:int. forall temp___1615:int. forall temp___1614:int.
  forall temp___1613:int. forall o:int. forall o1:int. forall o2:int.
  forall temp___1619:int. forall temp___1617:(int,character) farray.
  forall temp___1620:int. forall o3:int. forall o4:int.
  forall temp___1616:int. forall o5:character. forall o6:int.
  forall o7:(int,character) farray. forall temp___1625:int.
  forall temp___1623:(int,character) farray. forall o8:character.
  forall o9:(int,character) farray. forall o10:int. forall o11:int.
  forall temp___1632:int. forall temp___1630:(int,character) farray.
  forall temp___1629:int. forall o12:int. forall o13:int.
  forall temp___1628:int. forall o14:character. forall o15:int.
  forall o16:(int,character) farray. forall success1:bool. forall i4:int.
  forall i5:int. forall result:int. forall begidx1:int.
  forall result1:(int,character) farray.
  forall rrstring1:(int,character) farray.
  forall result2:(int,character) farray.
  forall newdomainname1:(int,character) farray. forall begidx2:int.
  forall endidx1:int. forall foundtype1:int. forall begidx3:int.
  forall endidx2:int. forall foundtype2:int. forall result3:int.
  forall begidx4:int. forall begidx5:int. forall endidx3:int.
  forall foundtype3:int. forall begidx6:int. forall endidx4:int.
  forall foundtype4:int. forall begidx7:int. forall endidx5:int.
  forall foundtype5:int. forall begidx8:int. forall endidx6:int.
  forall foundtype6:int. forall begidx9:int. forall endidx7:int.
  forall foundtype7:int. forall result4:int. forall begidx10:int.
  forall begidx11:int. forall endidx8:int. forall foundtype8:int.
  forall result5:int. forall lengthoftoken1:int. forall result6:bool.
  forall success2:bool. forall result7:int. forall i6:int.
  forall newdomainname2:(int,character) farray. forall i7:int.
  forall result8:(int,character) farray.
  forall newdomainname3:(int,character) farray.
  forall newdomainname4:(int,character) farray. forall i8:int.
  forall newdomainname5:(int,character) farray. forall i9:int.
  forall newdomainname6:(int,character) farray. forall i10:int.
  forall newdomainname7:(int,character) farray. forall i11:int.
  forall result9:int. forall i12:int.
  forall newdomainname8:(int,character) farray. forall i13:int.
  forall result10:(int,character) farray.
  forall newdomainname9:(int,character) farray.
  forall newdomainname10:map__ref. forall i14:int__ref.
  forall newdomainname11:(int,character) farray. forall i15:int.
  forall newdomainname12:map__ref. forall i16:int__ref.
  forall newdomainname13:(int,character) farray. forall i17:int.
  forall newdomainname14:map__ref. forall success3:bool__ref.
  forall i18:int__ref. forall i19:int__ref.
  forall newdomainname15:(int,character) farray. forall success4:bool.
  forall i20:int. forall i21:int. forall result11:int__ref.
  forall begidx12:int. forall begidx13:int. forall endidx9:int.
  forall foundtype9:int. forall result12:int__ref. forall lengthoftoken2:int.
  forall result13:int__ref. forall i22:int.
  forall rrstring2:(int,character) farray. forall i23:int.
  forall result14:map__ref. forall rrstring3:(int,character) farray.
  forall rrstring4:map__ref. forall i24:int__ref.
  forall rrstring5:(int,character) farray. forall i25:int.
  forall rrstring6:map__ref. forall i26:int__ref.
  forall rrstring7:(int,character) farray. forall i27:int.
  forall result15:int__ref. forall i28:int.
  ((rr_type__blankline__aggregate_def(32) = blankline) ->
  ((rr_type__blankdomainname__aggregate_def(32) = blankdomainname) ->
  (in_range4(zlength) -> (((result = begidx) and (begidx1 = 1)) ->
  (in_range4(begidx1) -> (((1 <= 256) -> in_range4(endidx)) -> (((0 <= 10) ->
  in_range3(foundtype)) -> (((1 <= 256) -> in_range4(lengthoftoken)) ->
  (((result1 = rrstring) and (rrstring1 = blankline)) ->
  (((result2 = newdomainname) and (newdomainname1 = blankdomainname)) ->
  ((((((begidx2 <= endidx1) and (begidx2 <= zlength)) and
  (endidx1 <= zlength)) and ((foundtype1 = 1) ->
  (forall i29:int. (((begidx2 <= i29) and (i29 <= endidx1)) ->
  ((48 <= to_rep((zonefileline[i29]))) and
  (to_rep((zonefileline[i29])) <= 57)))))) and ((in_range4(begidx2) and
  in_range4(endidx1)) and in_range3(foundtype1))) ->
  (((((not (foundtype1 = 3)) and (endidx1 <  zlength)) and
  ((((temp___1615 = begidx2) and ((temp___1614 = foundtype1) and
  ((temp___1613 = endidx1) and ((endidx2 <  zlength) and ((((((1 <= 256) ->
  in_range4(endidx2)) and ((0 <= 10) -> in_range3(foundtype2))) and
  ((1 <= 256) -> in_range4(begidx3))) and ((not (foundtype2 = 3)) and
  (endidx2 <  zlength))) and ((((o = (endidx2 + 1)) and
  in_range4((endidx2 + 1))) and ((begidx3 = result3) and (begidx4 = o))) and
  ((((((begidx5 <= endidx3) and (begidx5 <= zlength)) and
  (endidx3 <= zlength)) and ((foundtype3 = 1) ->
  (forall i29:int. (((begidx5 <= i29) and (i29 <= endidx3)) ->
  ((48 <= to_rep((zonefileline[i29]))) and
  (to_rep((zonefileline[i29])) <= 57)))))) and ((in_range4(begidx5) and
  in_range4(endidx3)) and in_range3(foundtype3))) and
  (not ((not (foundtype3 = 3)) and (endidx3 <  zlength)))))))))) and
  (((foundtype3 = foundtype4) and ((endidx3 = endidx4) and
  (begidx5 = begidx6))) and ((foundtype5 = foundtype3) and
  ((endidx5 = endidx3) and (begidx7 = begidx5))))) and ((({ int__content =
  foundtype6 } = { int__content = foundtype4 }) and (({ int__content =
  endidx6 } = { int__content = endidx4 }) and ({ int__content = begidx8 } = {
  int__content = begidx6 }))) and ((foundtype7 = foundtype5) and
  ((endidx7 = endidx5) and (begidx9 = begidx7)))))) or
  ((not ((not (foundtype1 = 3)) and (endidx1 <  zlength))) and
  (((foundtype1 = foundtype6) and ((endidx1 = endidx6) and
  (begidx2 = begidx8))) and ((foundtype7 = foundtype1) and
  ((endidx7 = endidx1) and (begidx9 = begidx2)))))) ->
  ((not (zlength <= endidx6)) -> ((((o1 = (endidx6 + 1)) and
  in_range4((endidx6 + 1))) and ((result4 = begidx8) and (begidx10 = o1))) ->
  ((((((begidx11 <= endidx8) and (begidx11 <= zlength)) and
  (endidx8 <= zlength)) and ((foundtype8 = 1) ->
  (forall i29:int. (((begidx11 <= i29) and (i29 <= endidx8)) ->
  ((48 <= to_rep((zonefileline[i29]))) and
  (to_rep((zonefileline[i29])) <= 57)))))) and ((in_range4(begidx11) and
  in_range4(endidx8)) and in_range3(foundtype8))) ->
  ((((o2 = ((endidx8 - begidx11) + 1)) and
  in_range4(((endidx8 - begidx11) + 1))) and ((result5 = lengthoftoken) and
  (lengthoftoken1 = o2))) -> ((((128 <  lengthoftoken1) and
  (((result6 = success) and (success2 = of_int(0))) and (((i19 = {
  int__content = i1 }) and ((i18 = { int__content = i }) and ((success3 = {
  bool__content = success2 }) and (newdomainname14 = { map__content =
  newdomainname1 })))) and ((i21 = i5) and ((i20 = i4) and
  ((success4 = success2) and (newdomainname15 = newdomainname1))))))) or
  ((not (128 <  lengthoftoken1)) and ((((begidx11 = r23b) and
  in_range4(r23b)) and (((endidx8 = r24b) and in_range4(r24b)) and
  ((((result7 = i) and (i6 = r23b)) and ((((r23b <= i6) and (i6 <= r24b)) and
  ((((temp___1619 = i6) and ((temp___1617 = newdomainname1) and
  ((temp___1620 = endidx8) and ((((1 <= begidx11) and
  (((endidx8 - begidx11) + 1) <= 128)) and (endidx8 = temp___1620)) and
  ((((r23b <= r24b) -> dynamic_property(r23b, r24b, i7)) and
  ((r23b <= i7) and (i7 <= r24b))) and
  ((((to_rep(o5) = to_rep((zonefileline[i7]))) and ((((((o3 = (i7 + 1)) and
  in_range1((i7 + 1))) and (o4 = (o3 - begidx11))) and
  ((temp___1616 = o4) and in_range1(o4))) and (((1 <= temp___1616) and
  (temp___1616 <= 128)) and (o6 = temp___1616))) and
  (o7 = (newdomainname2[o6 <- o5])))) and ((result8 = newdomainname2) and
  (newdomainname3 = o7))) and (i7 = r24b))))))) and (((i7 = i8) and
  (newdomainname3 = newdomainname4)) and ((i9 = i7) and
  (newdomainname5 = newdomainname3)))) and ((({ int__content = i10 } = {
  int__content = i8 }) and ({ map__content = newdomainname6 } = {
  map__content = newdomainname4 })) and ((i11 = i9) and
  (newdomainname7 = newdomainname5))))) or ((not ((r23b <= i6) and
  (i6 <= r24b))) and (((i6 = i10) and (newdomainname1 = newdomainname6)) and
  ((i11 = i6) and (newdomainname7 = newdomainname1)))))) and
  ((((endidx8 + 1) = r26b) and in_range1(r26b)) and (((result9 = i1) and
  (i12 = r26b)) and ((((r26b <= i12) and (i12 <= 128)) and
  ((((temp___1625 = i12) and ((temp___1623 = newdomainname6) and
  ((1 <= endidx8) and
  ((((forall temp___1624:int. (((1 <= temp___1624) and
     (temp___1624 <= 128)) -> ((i13 <= temp___1624) ->
     ((newdomainname8[temp___1624]) = (temp___1623[temp___1624]))))) and
  ((r26b <= 128) -> dynamic_property1(r26b, 128, i13))) and
  ((r26b <= i13) and (i13 <= 128))) and ((((to_rep(o8) = 32) and
  (o9 = (newdomainname8[i13 <- o8]))) and ((result10 = newdomainname8) and
  (newdomainname9 = o9))) and (i13 = 128)))))) and (((i14 = { int__content =
  i13 }) and (newdomainname10 = { map__content = newdomainname9 })) and
  ((i15 = i13) and (newdomainname11 = newdomainname9)))) and
  (((i16 = i14) and (newdomainname12 = newdomainname10)) and ((i17 = i15) and
  (newdomainname13 = newdomainname11))))) or ((not ((r26b <= i12) and
  (i12 <= 128))) and (((i16 = { int__content = i12 }) and
  (newdomainname12 = { map__content = newdomainname6 })) and ((i17 = i12) and
  (newdomainname13 = newdomainname7)))))))))) and (((i19 = i16) and ((i18 = {
  int__content = i10 }) and ((success3 = { bool__content = success }) and
  (newdomainname14 = newdomainname12)))) and ((i21 = i17) and
  ((i20 = i11) and ((success4 = success1) and
  (newdomainname15 = newdomainname13)))))))) ->
  ((not (zlength <= endidx8)) -> ((((o10 = (endidx8 + 1)) and
  in_range4((endidx8 + 1))) and ((result11 = { int__content = begidx11 }) and
  (begidx12 = o10))) -> ((((((begidx13 <= endidx9) and
  (begidx13 <= zlength)) and (endidx9 <= zlength)) and ((foundtype9 = 1) ->
  (forall i29:int. (((begidx13 <= i29) and (i29 <= endidx9)) ->
  ((48 <= to_rep((zonefileline[i29]))) and
  (to_rep((zonefileline[i29])) <= 57)))))) and ((in_range4(begidx13) and
  in_range4(endidx9)) and in_range3(foundtype9))) ->
  ((((o11 = ((endidx9 - begidx13) + 1)) and
  in_range4(((endidx9 - begidx13) + 1))) and ((result12 = { int__content =
  lengthoftoken1 }) and (lengthoftoken2 = o11))) ->
  ((not (128 <  lengthoftoken2)) -> (((begidx13 = r28b) and
  in_range4(r28b)) -> (((endidx9 = r29b) and in_range4(r29b)) ->
  ((((result13 = { int__content = i2 }) and (i22 = r28b)) and
  ((((r28b <= i22) and (i22 <= r29b)) and ((((temp___1632 = endidx9) and
  ((temp___1630 = rrstring1) and ((temp___1629 = i22) and
  ((((1 <= begidx13) and (((endidx9 - begidx13) + 1) <= 128)) and
  (endidx9 = temp___1632)) and ((((r28b <= r29b) -> dynamic_property2(r28b,
  r29b, i23)) and ((r28b <= i23) and (i23 <= r29b))) and
  ((((to_rep(o14) = to_rep((zonefileline[i23]))) and
  ((((((o12 = (i23 + 1)) and in_range1((i23 + 1))) and
  (o13 = (o12 - begidx13))) and ((temp___1628 = o13) and in_range1(o13))) and
  (((1 <= temp___1628) and (temp___1628 <= 256)) and
  (o15 = temp___1628))) and (o16 = (rrstring2[o15 <- o14])))) and
  ((result14 = { map__content = rrstring2 }) and (rrstring3 = o16))) and
  (i23 = r29b))))))) and (((i24 = { int__content = i23 }) and (rrstring4 = {
  map__content = rrstring3 })) and ((i25 = i23) and
  (rrstring5 = rrstring3)))) and (((i26 = i24) and
  (rrstring6 = rrstring4)) and ((i27 = i25) and
  (rrstring7 = rrstring5))))) or ((not ((r28b <= i22) and (i22 <= r29b))) and
  (((i26 = { int__content = i22 }) and (rrstring6 = { map__content =
  rrstring1 })) and ((i27 = i22) and (rrstring7 = rrstring1)))))) ->
  (((((endidx9 + 2) - begidx13) = r31b) and in_range1(r31b)) ->
  (((result15 = { int__content = i3 }) and (i28 = r31b)) ->
  (((r31b <= i28) and (i28 <= 256)) ->
  (begidx13 <= endidx9))))))))))))))))))))))))))))))
