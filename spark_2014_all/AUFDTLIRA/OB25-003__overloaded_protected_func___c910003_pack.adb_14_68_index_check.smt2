(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort item_type 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (item_type item_type) Bool)
(declare-const dummy item_type)
(declare-datatypes () ((item_type__ref (mk_item_type__ref (item_type__content item_type)))))
(define-fun item_type__ref___projection ((a item_type__ref)) item_type (item_type__content a))
(define-fun dynamic_invariant ((temp___expr_174 Int) (temp___is_init_171 Bool) (temp___skip_constant_172 Bool) (temp___do_toplevel_173 Bool)) Bool (=> (or (= temp___is_init_171 true) (<= 1 100)) (in_range1 temp___expr_174)))
(declare-fun to_rep (item_type) Int)
(declare-fun of_rep (Int) item_type)
(assert (forall ((x item_type)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x item_type)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int item_type))))))
(declare-fun slide ((Array Int item_type) Int Int) (Array Int item_type))
(assert (forall ((a (Array Int item_type))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int item_type))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int item_type) Int Int (Array Int item_type) Int Int) (Array Int item_type))
(assert (forall ((a (Array Int item_type)) (b (Array Int item_type))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (item_type Int) (Array Int item_type))
(assert (forall ((v item_type)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int item_type)) (a__first Int) (a__last Int) (b (Array Int item_type)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int item_type)) (b (Array Int item_type))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare ((Array Int item_type) Int Int (Array Int item_type) Int Int) Int)
(assert (forall ((a (Array Int item_type)) (b (Array Int item_type))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int item_type)) (b (Array Int item_type))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int item_type)) (b (Array Int item_type))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-sort integer 0)
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (integer integer) Bool)
(declare-const dummy1 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (positive positive) Bool)
(declare-const dummy2 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (in_range3 low) (in_range3 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int item_type)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int item_type) (elts a))
(define-fun of_array ((a (Array Int item_type)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int item_type)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int item_type)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int item_type)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int item_type))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int item_type))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int item_type))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((item_array__ref (mk_item_array__ref (item_array__content us_t)))))
(define-fun item_array__ref___projection ((a item_array__ref)) us_t (item_array__content a))
(declare-sort natural 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (natural natural) Bool)
(declare-const dummy4 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__c910003_pack__buffer__saved_item item_type) (rec__c910003_pack__buffer__empty Bool) (rec__c910003_pack__buffer__tc_items (Array Int item_type)) (rec__c910003_pack__buffer__tc_last natural)))))
(define-fun us_split_fields_Saved_Item__projection ((a us_split_fields)) item_type (rec__c910003_pack__buffer__saved_item a))
(define-fun us_split_fields_Empty__projection ((a us_split_fields)) Bool (rec__c910003_pack__buffer__empty a))
(define-fun us_split_fields_TC_Items__projection ((a us_split_fields)) (Array Int item_type) (rec__c910003_pack__buffer__tc_items a))
(define-fun us_split_fields_TC_Last__projection ((a us_split_fields)) natural (rec__c910003_pack__buffer__tc_last a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const c910003_pack__buffer__saved_item__first__bit Int)
(declare-const c910003_pack__buffer__saved_item__last__bit Int)
(declare-const c910003_pack__buffer__saved_item__position Int)
(assert (<= 0 c910003_pack__buffer__saved_item__first__bit))
(assert (< c910003_pack__buffer__saved_item__first__bit c910003_pack__buffer__saved_item__last__bit))
(assert (<= 0 c910003_pack__buffer__saved_item__position))
(declare-const c910003_pack__buffer__empty__first__bit Int)
(declare-const c910003_pack__buffer__empty__last__bit Int)
(declare-const c910003_pack__buffer__empty__position Int)
(assert (<= 0 c910003_pack__buffer__empty__first__bit))
(assert (< c910003_pack__buffer__empty__first__bit c910003_pack__buffer__empty__last__bit))
(assert (<= 0 c910003_pack__buffer__empty__position))
(declare-const c910003_pack__buffer__tc_items__first__bit Int)
(declare-const c910003_pack__buffer__tc_items__last__bit Int)
(declare-const c910003_pack__buffer__tc_items__position Int)
(assert (<= 0 c910003_pack__buffer__tc_items__first__bit))
(assert (< c910003_pack__buffer__tc_items__first__bit c910003_pack__buffer__tc_items__last__bit))
(assert (<= 0 c910003_pack__buffer__tc_items__position))
(declare-const c910003_pack__buffer__tc_last__first__bit Int)
(declare-const c910003_pack__buffer__tc_last__last__bit Int)
(declare-const c910003_pack__buffer__tc_last__position Int)
(assert (<= 0 c910003_pack__buffer__tc_last__first__bit))
(assert (< c910003_pack__buffer__tc_last__first__bit c910003_pack__buffer__tc_last__last__bit))
(assert (<= 0 c910003_pack__buffer__tc_last__position))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-datatypes () ((buffer__ref (mk_buffer__ref (buffer__content us_rep)))))
(define-fun buffer__ref___projection ((a buffer__ref)) us_rep (buffer__content a))
(declare-fun to_rep2 (natural) Int)
(declare-fun of_rep2 (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x natural)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-fun temp___189 (Int) (Array Int item_type))
(assert (forall ((temp___191 Int)) (forall ((temp___192 Int)) (= (select (temp___189 temp___191) temp___192) (of_rep temp___191)))))
(define-fun default_initial_assumption ((temp___expr_187 us_rep) (temp___skip_top_level_188 Bool)) Bool (and (and (and (= (to_rep (rec__c910003_pack__buffer__saved_item (us_split_fields1 temp___expr_187))) 1) (= (rec__c910003_pack__buffer__empty (us_split_fields1 temp___expr_187)) (of_int 1))) (= (rec__c910003_pack__buffer__tc_items (us_split_fields1 temp___expr_187)) (temp___189 1))) (= (to_rep2 (rec__c910003_pack__buffer__tc_last (us_split_fields1 temp___expr_187))) 0)))
(define-fun dynamic_invariant1 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range2 temp___expr_15)))
(define-fun dynamic_invariant2 ((temp___expr_180 us_t) (temp___is_init_177 Bool) (temp___skip_constant_178 Bool) (temp___do_toplevel_179 Bool)) Bool (=> (not (= temp___skip_constant_178 true)) (dynamic_property 1 2147483647 (first1 temp___expr_180) (last1 temp___expr_180))))
(declare-fun tc_items_buffered (us_rep Int) us_t)
(declare-fun tc_items_buffered__function_guard (us_t us_rep Int) Bool)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t9b__ref (mk_t9b__ref (t9b__content integer)))))
(define-fun t9b__ref___projection ((a t9b__ref)) integer (t9b__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int item_type)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int item_type) (elts1 a))
(define-fun of_array1 ((a (Array Int item_type)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int item_type)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int item_type)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int item_type)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int item_type))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int item_type))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int item_type))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq7 (us_t1 us_t1) Bool)
(declare-const dummy6 us_t1)
(declare-datatypes () ((t10b__ref (mk_t10b__ref (t10b__content us_t1)))))
(define-fun t10b__ref___projection ((a t10b__ref)) us_t1 (t10b__content a))
(assert (forall ((self__ us_rep)) (forall ((x Int)) (! (=> (dynamic_invariant1 x true true true) (dynamic_invariant2 (tc_items_buffered self__ x) true false true)) :pattern ((tc_items_buffered self__ x))))))
(assert (forall ((self__ us_rep)) (forall ((x Int)) (! (=> (dynamic_invariant1 x true true true) (= (tc_items_buffered self__ x) (let ((temp___202 (let ((temp___200 (to_rep2 (rec__c910003_pack__buffer__tc_last (us_split_fields1 self__))))) (let ((temp___199 1)) (let ((temp___201 (rec__c910003_pack__buffer__tc_items (us_split_fields1 self__)))) (of_array1 temp___201 temp___199 temp___200)))))) (of_array (to_array1 temp___202) (first3 temp___202) (last3 temp___202))))) :pattern ((tc_items_buffered self__ x))))))
(declare-fun tc_items_buffered__2 (us_rep Bool) us_t)
(declare-fun tc_items_buffered__2__function_guard (us_t us_rep Bool) Bool)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy7 integer)
(declare-datatypes () ((t4b__ref (mk_t4b__ref (t4b__content integer)))))
(define-fun t4b__ref___projection ((a t4b__ref)) integer (t4b__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int item_type)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int item_type) (elts2 a))
(define-fun of_array2 ((a (Array Int item_type)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int item_type)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int item_type)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int item_type)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int item_type))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int item_type))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int item_type))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq9 (us_t2 us_t2) Bool)
(declare-const dummy8 us_t2)
(declare-datatypes () ((t5b__ref (mk_t5b__ref (t5b__content us_t2)))))
(define-fun t5b__ref___projection ((a t5b__ref)) us_t2 (t5b__content a))
(assert (forall ((self__ us_rep)) (forall ((x Bool)) (! (dynamic_invariant2 (tc_items_buffered__2 self__ x) true false true) :pattern ((tc_items_buffered__2 self__ x))))))
(assert (forall ((self__ us_rep)) (forall ((x Bool)) (! (= (tc_items_buffered__2 self__ x) (let ((temp___212 (let ((temp___210 (to_rep2 (rec__c910003_pack__buffer__tc_last (us_split_fields1 self__))))) (let ((temp___209 1)) (let ((temp___211 (rec__c910003_pack__buffer__tc_items (us_split_fields1 self__)))) (of_array2 temp___211 temp___209 temp___210)))))) (of_array (to_array2 temp___212) (first5 temp___212) (last5 temp___212)))) :pattern ((tc_items_buffered__2 self__ x))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const item1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const item2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_invariant3 ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range4 temp___expr_33)))
(define-fun dynamic_invariant4 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range3 temp___expr_39)))
(declare-const o item_type)
(declare-const o1 Bool)
(declare-const o2 (Array Int item_type))
(declare-const o3 natural)
(declare-const temp___227 (Array Int item_type))
(declare-const temp___2271 t)
(declare-const o4 Int)
(declare-const o5 item_type)
(declare-const c910003_pack__proc__item1__assume Int)
(declare-const o6 item_type)
(declare-const o7 Bool)
(declare-const o8 (Array Int item_type))
(declare-const o9 natural)
(declare-const temp___229 (Array Int item_type))
(declare-const temp___2291 t)
(declare-const po__split_fields item_type)
(declare-const po__split_fields1 Bool)
(declare-const po__split_fields2 (Array Int item_type))
(declare-const po__split_fields3 natural)
(declare-const po__split_fields4 item_type)
(declare-const po__split_fields5 Bool)
(declare-const po__split_fields6 (Array Int item_type))
(declare-const po__split_fields7 natural)
(assert (= o po__split_fields))
(assert (= o1 po__split_fields1))
(assert (= o2 po__split_fields2))
(assert (= o3 po__split_fields3))
(assert (and (= (mk___t temp___227 temp___2271) (tc_items_buffered (mk___rep (mk___split_fields o o1 o2 o3)) 1)) (and (dynamic_invariant2 (mk___t temp___227 temp___2271) true false true) (and (= o2 temp___227) (= (mk (to_rep1 (first2 (mk1 1 (to_rep2 o3)))) (to_rep1 (last2 (mk1 1 (to_rep2 o3))))) temp___2271)))))
(assert (not (<= (to_rep1 (first temp___2271)) 1)))
(check-sat)
(exit)
