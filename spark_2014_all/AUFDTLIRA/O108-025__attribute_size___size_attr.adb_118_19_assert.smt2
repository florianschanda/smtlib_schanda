(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-sort my_int 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (my_int my_int) Bool)
(declare-const dummy4 my_int)
(declare-datatypes () ((my_int__ref (mk_my_int__ref (my_int__content my_int)))))
(define-fun my_int__ref___projection ((a my_int__ref)) my_int (my_int__content a))
(define-fun dynamic_invariant1 ((temp___expr_210 Int) (temp___is_init_206 Bool) (temp___skip_constant_207 Bool) (temp___do_toplevel_208 Bool) (temp___do_typ_inv_209 Bool)) Bool (=> (or (= temp___is_init_206 true) (<= 1 10)) (in_range4 temp___expr_210)))
(declare-sort r 0)
(declare-fun user_eq5 (r r) Bool)
(declare-const value__size1 Int)
(declare-fun object__size1 (r) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (r) Int)
(assert (<= 0 value__size1))
(assert (forall ((a r)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a r)) (<= 0 (object__alignment1 a))))
(declare-const dummy5 r)
(declare-datatypes () ((r__ref (mk_r__ref (r__content r)))))
(define-fun r__ref___projection ((a r__ref)) r (r__content a))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__size_attr__r1__a Bool)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) Bool (rec__size_attr__r1__a a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__size_attr__r1__x character)))))
(define-fun us_split_fields_X__projection ((a us_split_fields)) character (rec__size_attr__r1__x a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields) (attr__constrained Bool)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___3__projection ((a us_rep)) Bool (attr__constrained a))
(define-fun size_attr__r1__x__pred ((a us_rep)) Bool (= (ite (rec__size_attr__r1__a (us_split_discrs1 a)) 1 0) 1))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (rec__size_attr__r1__a (us_split_discrs1 a)) (rec__size_attr__r1__a (us_split_discrs1 b))) (=> (size_attr__r1__x__pred a) (= (to_rep (rec__size_attr__r1__x (us_split_fields1 a))) (to_rep (rec__size_attr__r1__x (us_split_fields1 b)))))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const size_attr__r1__a__first__bit Int)
(declare-const size_attr__r1__a__last__bit Int)
(declare-const size_attr__r1__a__position Int)
(assert (<= 0 size_attr__r1__a__first__bit))
(assert (< size_attr__r1__a__first__bit size_attr__r1__a__last__bit))
(assert (<= 0 size_attr__r1__a__position))
(declare-const size_attr__r1__x__first__bit Int)
(declare-const size_attr__r1__x__last__bit Int)
(declare-const size_attr__r1__x__position Int)
(assert (<= 0 size_attr__r1__x__first__bit))
(assert (< size_attr__r1__x__first__bit size_attr__r1__x__last__bit))
(assert (<= 0 size_attr__r1__x__position))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((r1__ref (mk_r1__ref (r1__content us_rep)))))
(define-fun r1__ref___projection ((a r1__ref)) us_rep (r1__content a))
(define-fun default_initial_assumption ((temp___expr_226 us_rep) (temp___skip_top_level_227 Bool)) Bool (and (= (attr__constrained temp___expr_226) false) (= (rec__size_attr__r1__a (us_split_discrs1 temp___expr_226)) (distinct 0 0))))
(define-fun in_range5 ((rec__size_attr__r1__a1 Bool) (a us_rep)) Bool (= rec__size_attr__r1__a1 (rec__size_attr__r1__a (us_split_discrs1 a))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const size_attr__r1__a__first__bit1 Int)
(declare-const size_attr__r1__a__last__bit1 Int)
(declare-const size_attr__r1__a__position1 Int)
(assert (<= 0 size_attr__r1__a__first__bit1))
(assert (< size_attr__r1__a__first__bit1 size_attr__r1__a__last__bit1))
(assert (<= 0 size_attr__r1__a__position1))
(declare-const size_attr__r1__x__first__bit1 Int)
(declare-const size_attr__r1__x__last__bit1 Int)
(declare-const size_attr__r1__x__position1 Int)
(assert (<= 0 size_attr__r1__x__first__bit1))
(assert (< size_attr__r1__x__first__bit1 size_attr__r1__x__last__bit1))
(assert (<= 0 size_attr__r1__x__position1))
(declare-fun user_eq7 (us_rep us_rep) Bool)
(declare-const dummy7 us_rep)
(declare-datatypes () ((r1f__ref (mk_r1f__ref (r1f__content us_rep)))))
(define-fun r1f__ref___projection ((a r1f__ref)) us_rep (r1f__content a))
(define-fun dynamic_invariant2 ((temp___expr_234 us_rep) (temp___is_init_230 Bool) (temp___skip_constant_231 Bool) (temp___do_toplevel_232 Bool) (temp___do_typ_inv_233 Bool)) Bool (and (=> (not (= temp___skip_constant_231 true)) (in_range5 (distinct 0 0) temp___expr_234)) (= (attr__constrained temp___expr_234) true)))
(define-fun default_initial_assumption1 ((temp___expr_236 us_rep) (temp___skip_top_level_237 Bool)) Bool (and (= (attr__constrained temp___expr_236) true) (= (rec__size_attr__r1__a (us_split_discrs1 temp___expr_236)) (distinct 0 0))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__size_attr__r2__x integer)))))
(define-fun us_split_fields_X__2__projection ((a us_split_fields2)) integer (rec__size_attr__r2__x a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (= (to_rep1 (rec__size_attr__r2__x (us_split_fields3 a))) (to_rep1 (rec__size_attr__r2__x (us_split_fields3 b)))) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep1) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep1) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep1)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment4 a))))
(declare-const size_attr__r2__x__first__bit Int)
(declare-const size_attr__r2__x__last__bit Int)
(declare-const size_attr__r2__x__position Int)
(assert (<= 0 size_attr__r2__x__first__bit))
(assert (< size_attr__r2__x__first__bit size_attr__r2__x__last__bit))
(assert (<= 0 size_attr__r2__x__position))
(declare-fun user_eq8 (us_rep1 us_rep1) Bool)
(declare-const dummy8 us_rep1)
(declare-datatypes () ((r2__ref (mk_r2__ref (r2__content us_rep1)))))
(define-fun r2__ref___projection ((a r2__ref)) us_rep1 (r2__content a))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__size_attr__r3__x integer) (rec__ext__ us_private)))))
(define-fun us_split_fields_X__3__projection ((a us_split_fields4)) integer (rec__size_attr__r3__x a))
(define-fun us_split_fields___projection ((a us_split_fields4)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_fields5 us_split_fields4) (attr__tag Int)))))
(define-fun us_rep___5__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun us_rep___6__projection ((a us_rep2)) Int (attr__tag a))
(define-fun bool_eq4 ((a us_rep2) (b us_rep2)) Bool (ite (= (to_rep1 (rec__size_attr__r3__x (us_split_fields5 a))) (to_rep1 (rec__size_attr__r3__x (us_split_fields5 b)))) true false))
(declare-fun us_dispatch_eq (us_rep2 us_rep2) Bool)
(declare-const us_tag Int)
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep2) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep2) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))
(declare-const size_attr__r3__x__first__bit Int)
(declare-const size_attr__r3__x__last__bit Int)
(declare-const size_attr__r3__x__position Int)
(assert (<= 0 size_attr__r3__x__first__bit))
(assert (< size_attr__r3__x__first__bit size_attr__r3__x__last__bit))
(assert (<= 0 size_attr__r3__x__position))
(declare-fun user_eq9 (us_rep2 us_rep2) Bool)
(declare-const dummy9 us_rep2)
(declare-datatypes () ((r3__ref (mk_r3__ref (r3__content us_rep2)))))
(define-fun r3__ref___projection ((a r3__ref)) us_rep2 (r3__content a))
(define-fun default_initial_assumption2 ((temp___expr_253 us_rep2) (temp___skip_top_level_254 Bool)) Bool (= (attr__tag temp___expr_253) us_tag))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__size_attr__r4__y integer) (rec__size_attr__r3__x1 integer) (rec__ext__1 us_private)))))
(define-fun us_split_fields_Y__projection ((a us_split_fields6)) integer (rec__size_attr__r4__y a))
(define-fun us_split_fields_X__4__projection ((a us_split_fields6)) integer (rec__size_attr__r3__x1 a))
(define-fun us_split_fields___2__projection ((a us_split_fields6)) us_private (rec__ext__1 a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep3 (mk___rep3 (us_split_fields7 us_split_fields6) (attr__tag1 Int)))))
(define-fun us_rep___7__projection ((a us_rep3)) us_split_fields6 (us_split_fields7 a))
(define-fun us_rep___8__projection ((a us_rep3)) Int (attr__tag1 a))
(declare-fun hide_ext__ (integer us_private) us_private)
(declare-fun extract__y (us_private) integer)
(assert (forall ((y integer)) (forall ((rec__ext__2 us_private)) (= (extract__y (hide_ext__ y rec__ext__2)) y))))
(declare-fun extract__ext__ (us_private) us_private)
(define-fun to_base ((a us_rep3)) us_rep2 (mk___rep2 (mk___split_fields2 (rec__size_attr__r3__x1 (us_split_fields7 a)) (hide_ext__ (rec__size_attr__r4__y (us_split_fields7 a)) (rec__ext__1 (us_split_fields7 a)))) (attr__tag1 a)))
(define-fun of_base ((r1 us_rep2)) us_rep3 (mk___rep3 (mk___split_fields3 (extract__y (rec__ext__ (us_split_fields5 r1))) (rec__size_attr__r3__x (us_split_fields5 r1)) (extract__ext__ (rec__ext__ (us_split_fields5 r1)))) (attr__tag r1)))
(define-fun bool_eq5 ((a us_rep3) (b us_rep3)) Bool (ite (and (= (to_rep1 (rec__size_attr__r4__y (us_split_fields7 a))) (to_rep1 (rec__size_attr__r4__y (us_split_fields7 b)))) (= (to_rep1 (rec__size_attr__r3__x1 (us_split_fields7 a))) (to_rep1 (rec__size_attr__r3__x1 (us_split_fields7 b))))) true false))
(declare-const us_tag1 Int)
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep3) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep3) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep3)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment6 a))))
(declare-const size_attr__r4__y__first__bit Int)
(declare-const size_attr__r4__y__last__bit Int)
(declare-const size_attr__r4__y__position Int)
(assert (<= 0 size_attr__r4__y__first__bit))
(assert (< size_attr__r4__y__first__bit size_attr__r4__y__last__bit))
(assert (<= 0 size_attr__r4__y__position))
(declare-const size_attr__r3__x__first__bit1 Int)
(declare-const size_attr__r3__x__last__bit1 Int)
(declare-const size_attr__r3__x__position1 Int)
(assert (<= 0 size_attr__r3__x__first__bit1))
(assert (< size_attr__r3__x__first__bit1 size_attr__r3__x__last__bit1))
(assert (<= 0 size_attr__r3__x__position1))
(declare-fun user_eq10 (us_rep3 us_rep3) Bool)
(declare-const dummy10 us_rep3)
(declare-datatypes () ((r4__ref (mk_r4__ref (r4__content us_rep3)))))
(define-fun r4__ref___projection ((a r4__ref)) us_rep3 (r4__content a))
(define-fun default_initial_assumption3 ((temp___expr_261 us_rep3) (temp___skip_top_level_262 Bool)) Bool (= (attr__tag1 temp___expr_261) us_tag1))
(declare-sort natural 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq11 (natural natural) Bool)
(declare-const dummy11 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-fun to_rep2 (natural) Int)
(declare-fun of_rep2 (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x natural)) (! (in_range6 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int natural))))))
(declare-fun slide1 ((Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int natural))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq6 ((a (Array Int natural)) (a__first Int) (a__last Int) (b (Array Int natural)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep2 (select a temp___idx_154)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep2 (select a temp___idx_154)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-const dummy12 (Array Int natural))
(declare-const value__size7 Int)
(declare-fun object__size7 ((Array Int natural)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int natural)) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 ((Array Int natural)) Int)
(assert (<= 0 value__size7))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size7 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment7 a))))
(declare-fun user_eq12 ((Array Int natural) (Array Int natural)) Bool)
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int natural)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int natural) (elts1 a))
(define-fun of_array1 ((a (Array Int natural)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size8 Int)
(declare-fun object__size8 ((Array Int natural)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int natural)) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 ((Array Int natural)) Int)
(assert (<= 0 value__size8))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size8 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment8 a))))
(define-fun bool_eq7 ((x us_t1) (y us_t1)) Bool (bool_eq6 (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq13 (us_t1 us_t1) Bool)
(declare-const dummy13 us_t1)
(declare-datatypes () ((unconstrained_array__ref (mk_unconstrained_array__ref (unconstrained_array__content us_t1)))))
(define-fun unconstrained_array__ref___projection ((a unconstrained_array__ref)) us_t1 (unconstrained_array__content a))
(declare-sort map1 0)
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 map1)))))
(declare-fun get (map1 Int Int) natural)
(declare-fun set (map1 Int Int natural) map1)
(assert (forall ((m map1)) (forall ((i Int)) (forall ((j Int)) (forall ((a natural)) (! (= (get (set m i j a) i j) a) :pattern ((set m i j a))))))))
(assert (forall ((m map1)) (forall ((i Int) (i2 Int)) (forall ((j Int) (j2 Int)) (forall ((a natural)) (! (=> (not (and (= i i2) (= j j2))) (= (get (set m i j a) i2 j2) (get m i2 j2))) :pattern ((get (set m i j a) i2 j2)) :pattern ((set m i j a) (get m i2 j2))))))))
(declare-fun slide2 (map1 Int Int Int Int) map1)
(assert (forall ((a map1)) (forall ((new_first Int) (old_first Int)) (forall ((new_first_2 Int) (old_first_2 Int)) (forall ((i Int)) (forall ((j Int)) (! (= (get (slide2 a old_first new_first old_first_2 new_first_2) i j) (get a (- i (- new_first old_first)) (- j (- new_first_2 old_first_2)))) :pattern ((get (slide2 a old_first new_first old_first_2 new_first_2) i j)))))))))
(define-fun bool_eq8 ((a map1) (a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int) (b map1) (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int)) Bool (ite (and (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (ite (<= a__first_2 a__last_2) (and (<= b__first_2 b__last_2) (= (- a__last_2 a__first_2) (- b__last_2 b__first_2))) (< b__last_2 b__first_2))) (forall ((temp___idx_155 Int) (temp___idx_156 Int)) (=> (and (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (and (<= a__first_2 temp___idx_156) (<= temp___idx_156 a__last_2))) (= (to_rep2 (get a temp___idx_155 temp___idx_156)) (to_rep2 (get b (+ (- b__first a__first) temp___idx_155) (+ (- b__first_2 a__first_2) temp___idx_156))))))) true false))
(assert (forall ((a map1) (b map1)) (forall ((a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int) (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int)) (=> (= (bool_eq8 b b__first b__last b__first_2 b__last_2 a a__first a__last a__first_2 a__last_2) true) (and (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (ite (<= a__first_2 a__last_2) (and (<= b__first_2 b__last_2) (= (- a__last_2 a__first_2) (- b__last_2 b__first_2))) (< b__last_2 b__first_2))) (forall ((temp___idx_155 Int) (temp___idx_156 Int)) (=> (and (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (and (<= a__first_2 temp___idx_156) (<= temp___idx_156 a__last_2))) (= (to_rep2 (get a temp___idx_155 temp___idx_156)) (to_rep2 (get b (+ (- b__first a__first) temp___idx_155) (+ (- b__first_2 a__first_2) temp___idx_156)))))))))))
(declare-const dummy14 map1)
(declare-const value__size9 Int)
(declare-fun object__size9 (map1) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 (map1) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (map1) Int)
(assert (<= 0 value__size9))
(assert (forall ((a map1)) (<= 0 (object__size9 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a map1)) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a map1)) (<= 0 (object__alignment9 a))))
(declare-fun user_eq14 (map1 map1) Bool)
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-sort t3 0)
(declare-fun first5 (t3) integer)
(declare-fun last5 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first5 (mk3 f l))) f) (= (to_rep1 (last5 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 map1) (rt2 t2) (rt_2 t3)))))
(define-fun to_array2 ((a us_t2)) map1 (elts2 a))
(define-fun of_array2 ((a map1) (f Int) (l Int) (f2 Int) (l2 Int)) us_t2 (mk___t2 a (mk2 f l) (mk3 f2 l2)))
(define-fun first6 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last6 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first6 a) (last6 a)) (+ (- (last6 a) (first6 a)) 1) 0))
(define-fun first_2 ((a us_t2)) Int (to_rep1 (first5 (rt_2 a))))
(define-fun last_2 ((a us_t2)) Int (to_rep1 (last5 (rt_2 a))))
(define-fun length_2 ((a us_t2)) Int (ite (<= (first_2 a) (last_2 a)) (+ (- (last_2 a) (first_2 a)) 1) 0))
(define-fun dynamic_property4 ((range_first1 Int) (range_last1 Int) (f1 Int) (l1 Int) (range_first2 Int) (range_last2 Int) (f2 Int) (l2 Int)) Bool (and (dynamic_property2 range_first1 range_last1 f1 l1) (dynamic_property3 range_first2 range_last2 f2 l2)))
(declare-const value__size10 Int)
(declare-fun object__size10 (map1) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 (map1) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 (map1) Int)
(assert (<= 0 value__size10))
(assert (forall ((a map1)) (<= 0 (object__size10 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a map1)) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a map1)) (<= 0 (object__alignment10 a))))
(define-fun bool_eq9 ((x us_t2) (y us_t2)) Bool (bool_eq8 (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (to_rep1 (first5 (rt_2 x))) (to_rep1 (last5 (rt_2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y))) (to_rep1 (first5 (rt_2 y))) (to_rep1 (last5 (rt_2 y)))))
(declare-fun user_eq15 (us_t2 us_t2) Bool)
(declare-const dummy15 us_t2)
(declare-datatypes () ((unconstrained_array_2__ref (mk_unconstrained_array_2__ref (unconstrained_array_2__content us_t2)))))
(define-fun unconstrained_array_2__ref___projection ((a unconstrained_array_2__ref)) us_t2 (unconstrained_array_2__content a))
(declare-sort map2 0)
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 map2)))))
(declare-fun get1 (map2 Int Int Int) natural)
(declare-fun set1 (map2 Int Int Int natural) map2)
(assert (forall ((m map2)) (forall ((i Int)) (forall ((j Int)) (forall ((k Int)) (forall ((a natural)) (! (= (get1 (set1 m i j k a) i j k) a) :pattern ((set1 m i j k a)))))))))
(assert (forall ((m map2)) (forall ((i Int) (i2 Int)) (forall ((j Int) (j2 Int)) (forall ((k Int) (k2 Int)) (forall ((a natural)) (! (=> (not (and (= i i2) (and (= j j2) (= k k2)))) (= (get1 (set1 m i j k a) i2 j2 k2) (get1 m i2 j2 k2))) :pattern ((get1 (set1 m i j k a) i2 j2 k2)) :pattern ((set1 m i j k a) (get1 m i2 j2 k2)))))))))
(declare-fun slide3 (map2 Int Int Int Int Int Int) map2)
(assert (forall ((a map2)) (forall ((old_first Int) (new_first Int)) (forall ((old_first_2 Int) (new_first_2 Int)) (forall ((old_first_3 Int) (new_first_3 Int)) (forall ((i Int)) (forall ((j Int)) (forall ((k Int)) (! (= (get1 (slide3 a old_first new_first old_first_2 new_first_2 old_first_3 new_first_3) i j k) (get1 a (- i (- new_first old_first)) (- j (- new_first_2 old_first_2)) (- k (- new_first_3 old_first_3)))) :pattern ((get1 (slide3 a old_first new_first old_first_2 new_first_2 old_first_3 new_first_3) i j k)))))))))))
(define-fun bool_eq10 ((a map2) (a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int) (a__first_3 Int) (a__last_3 Int) (b map2) (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int) (b__first_3 Int) (b__last_3 Int)) Bool (ite (and (and (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (ite (<= a__first_2 a__last_2) (and (<= b__first_2 b__last_2) (= (- a__last_2 a__first_2) (- b__last_2 b__first_2))) (< b__last_2 b__first_2))) (ite (<= a__first_3 a__last_3) (and (<= b__first_3 b__last_3) (= (- a__last_3 a__first_3) (- b__last_3 b__first_3))) (< b__last_3 b__first_3))) (forall ((temp___idx_157 Int) (temp___idx_158 Int) (temp___idx_159 Int)) (=> (and (and (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last)) (and (<= a__first_2 temp___idx_158) (<= temp___idx_158 a__last_2))) (and (<= a__first_3 temp___idx_159) (<= temp___idx_159 a__last_3))) (= (to_rep2 (get1 a temp___idx_157 temp___idx_158 temp___idx_159)) (to_rep2 (get1 b (+ (- b__first a__first) temp___idx_157) (+ (- b__first_2 a__first_2) temp___idx_158) (+ (- b__first_3 a__first_3) temp___idx_159))))))) true false))
(assert (forall ((a map2) (b map2)) (forall ((a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int) (a__first_3 Int) (a__last_3 Int) (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int) (b__first_3 Int) (b__last_3 Int)) (=> (= (bool_eq10 b b__first b__last b__first_2 b__last_2 b__first_3 b__last_3 a a__first a__last a__first_2 a__last_2 a__first_3 a__last_3) true) (and (and (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (ite (<= a__first_2 a__last_2) (and (<= b__first_2 b__last_2) (= (- a__last_2 a__first_2) (- b__last_2 b__first_2))) (< b__last_2 b__first_2))) (ite (<= a__first_3 a__last_3) (and (<= b__first_3 b__last_3) (= (- a__last_3 a__first_3) (- b__last_3 b__first_3))) (< b__last_3 b__first_3))) (forall ((temp___idx_157 Int) (temp___idx_158 Int) (temp___idx_159 Int)) (=> (and (and (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last)) (and (<= a__first_2 temp___idx_158) (<= temp___idx_158 a__last_2))) (and (<= a__first_3 temp___idx_159) (<= temp___idx_159 a__last_3))) (= (to_rep2 (get1 a temp___idx_157 temp___idx_158 temp___idx_159)) (to_rep2 (get1 b (+ (- b__first a__first) temp___idx_157) (+ (- b__first_2 a__first_2) temp___idx_158) (+ (- b__first_3 a__first_3) temp___idx_159)))))))))))
(declare-const dummy16 map2)
(declare-const value__size11 Int)
(declare-fun object__size11 (map2) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 (map2) Int)
(declare-const value__alignment11 Int)
(declare-fun object__alignment11 (map2) Int)
(assert (<= 0 value__size11))
(assert (forall ((a map2)) (<= 0 (object__size11 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a map2)) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment11))
(assert (forall ((a map2)) (<= 0 (object__alignment11 a))))
(declare-fun user_eq16 (map2 map2) Bool)
(declare-sort t4 0)
(declare-fun first7 (t4) integer)
(declare-fun last7 (t4) integer)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first7 (mk4 f l))) f) (= (to_rep1 (last7 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-sort t5 0)
(declare-fun first8 (t5) integer)
(declare-fun last8 (t5) integer)
(declare-fun mk5 (Int Int) t5)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first8 (mk5 f l))) f) (= (to_rep1 (last8 (mk5 f l))) l)))) :pattern ((mk5 f l)))))
(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-sort t6 0)
(declare-fun first9 (t6) integer)
(declare-fun last9 (t6) integer)
(declare-fun mk6 (Int Int) t6)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first9 (mk6 f l))) f) (= (to_rep1 (last9 (mk6 f l))) l)))) :pattern ((mk6 f l)))))
(define-fun dynamic_property7 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 map2) (rt3 t4) (rt_21 t5) (rt_3 t6)))))
(define-fun to_array3 ((a us_t3)) map2 (elts3 a))
(define-fun of_array3 ((a map2) (f Int) (l Int) (f2 Int) (l2 Int) (f3 Int) (l3 Int)) us_t3 (mk___t3 a (mk4 f l) (mk5 f2 l2) (mk6 f3 l3)))
(define-fun first10 ((a us_t3)) Int (to_rep1 (first7 (rt3 a))))
(define-fun last10 ((a us_t3)) Int (to_rep1 (last7 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first10 a) (last10 a)) (+ (- (last10 a) (first10 a)) 1) 0))
(define-fun first_21 ((a us_t3)) Int (to_rep1 (first8 (rt_21 a))))
(define-fun last_21 ((a us_t3)) Int (to_rep1 (last8 (rt_21 a))))
(define-fun length_21 ((a us_t3)) Int (ite (<= (first_21 a) (last_21 a)) (+ (- (last_21 a) (first_21 a)) 1) 0))
(define-fun first_3 ((a us_t3)) Int (to_rep1 (first9 (rt_3 a))))
(define-fun last_3 ((a us_t3)) Int (to_rep1 (last9 (rt_3 a))))
(define-fun length_3 ((a us_t3)) Int (ite (<= (first_3 a) (last_3 a)) (+ (- (last_3 a) (first_3 a)) 1) 0))
(define-fun dynamic_property8 ((range_first1 Int) (range_last1 Int) (f1 Int) (l1 Int) (range_first2 Int) (range_last2 Int) (f2 Int) (l2 Int) (range_first3 Int) (range_last3 Int) (f3 Int) (l3 Int)) Bool (and (dynamic_property5 range_first1 range_last1 f1 l1) (and (dynamic_property6 range_first2 range_last2 f2 l2) (dynamic_property7 range_first3 range_last3 f3 l3))))
(declare-const value__size12 Int)
(declare-fun object__size12 (map2) Int)
(declare-const value__component__size6 Int)
(declare-fun object__component__size6 (map2) Int)
(declare-const value__alignment12 Int)
(declare-fun object__alignment12 (map2) Int)
(assert (<= 0 value__size12))
(assert (forall ((a map2)) (<= 0 (object__size12 a))))
(assert (<= 0 value__component__size6))
(assert (forall ((a map2)) (<= 0 (object__component__size6 a))))
(assert (<= 0 value__alignment12))
(assert (forall ((a map2)) (<= 0 (object__alignment12 a))))
(define-fun bool_eq11 ((x us_t3) (y us_t3)) Bool (bool_eq10 (elts3 x) (to_rep1 (first7 (rt3 x))) (to_rep1 (last7 (rt3 x))) (to_rep1 (first8 (rt_21 x))) (to_rep1 (last8 (rt_21 x))) (to_rep1 (first9 (rt_3 x))) (to_rep1 (last9 (rt_3 x))) (elts3 y) (to_rep1 (first7 (rt3 y))) (to_rep1 (last7 (rt3 y))) (to_rep1 (first8 (rt_21 y))) (to_rep1 (last8 (rt_21 y))) (to_rep1 (first9 (rt_3 y))) (to_rep1 (last9 (rt_3 y)))))
(declare-fun user_eq17 (us_t3 us_t3) Bool)
(declare-const dummy17 us_t3)
(declare-datatypes () ((unconstrained_array_3__ref (mk_unconstrained_array_3__ref (unconstrained_array_3__content us_t3)))))
(define-fun unconstrained_array_3__ref___projection ((a unconstrained_array_3__ref)) us_t3 (unconstrained_array_3__content a))
(declare-sort map3 0)
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 map3)))))
(declare-fun get2 (map3 Int Int Int Int) natural)
(declare-fun set2 (map3 Int Int Int Int natural) map3)
(assert (forall ((m map3)) (forall ((i Int)) (forall ((j Int)) (forall ((k Int)) (forall ((l Int)) (forall ((a natural)) (! (= (get2 (set2 m i j k l a) i j k l) a) :pattern ((set2 m i j k l a))))))))))
(assert (forall ((m map3)) (forall ((i Int) (i2 Int)) (forall ((j Int) (j2 Int)) (forall ((k Int) (k2 Int)) (forall ((l Int) (l2 Int)) (forall ((a natural)) (! (=> (not (and (= i i2) (and (= j j2) (and (= k k2) (= l l2))))) (= (get2 (set2 m i j k l a) i2 j2 k2 l2) (get2 m i2 j2 k2 l2))) :pattern ((get2 (set2 m i j k l a) i2 j2 k2 l2)) :pattern ((set2 m i j k l a) (get2 m i2 j2 k2 l2))))))))))
(declare-fun slide4 (map3 Int Int Int Int Int Int Int Int) map3)
(assert (forall ((a map3)) (forall ((old_first Int) (new_first Int)) (forall ((old_first_2 Int) (new_first_2 Int)) (forall ((old_first_3 Int) (new_first_3 Int)) (forall ((old_first_4 Int) (new_first_4 Int)) (forall ((i Int)) (forall ((j Int)) (forall ((k Int)) (forall ((l Int)) (! (= (get2 (slide4 a old_first new_first old_first_2 new_first_2 old_first_3 new_first_3 old_first_4 new_first_4) i j k l) (get2 a (- i (- new_first old_first)) (- j (- new_first_2 old_first_2)) (- k (- new_first_3 old_first_3)) (- l (- new_first_4 old_first_4)))) :pattern ((get2 (slide4 a old_first new_first old_first_2 new_first_2 old_first_3 new_first_3 old_first_4 new_first_4) i j k l)))))))))))))
(define-fun bool_eq12 ((a map3) (a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int) (a__first_3 Int) (a__last_3 Int) (a__first_4 Int) (a__last_4 Int) (b map3) (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int) (b__first_3 Int) (b__last_3 Int) (b__first_4 Int) (b__last_4 Int)) Bool (ite (and (and (and (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (ite (<= a__first_2 a__last_2) (and (<= b__first_2 b__last_2) (= (- a__last_2 a__first_2) (- b__last_2 b__first_2))) (< b__last_2 b__first_2))) (ite (<= a__first_3 a__last_3) (and (<= b__first_3 b__last_3) (= (- a__last_3 a__first_3) (- b__last_3 b__first_3))) (< b__last_3 b__first_3))) (ite (<= a__first_4 a__last_4) (and (<= b__first_4 b__last_4) (= (- a__last_4 a__first_4) (- b__last_4 b__first_4))) (< b__last_4 b__first_4))) (forall ((temp___idx_160 Int) (temp___idx_161 Int) (temp___idx_162 Int) (temp___idx_163 Int)) (=> (and (and (and (and (<= a__first temp___idx_160) (<= temp___idx_160 a__last)) (and (<= a__first_2 temp___idx_161) (<= temp___idx_161 a__last_2))) (and (<= a__first_3 temp___idx_162) (<= temp___idx_162 a__last_3))) (and (<= a__first_4 temp___idx_163) (<= temp___idx_163 a__last_4))) (= (to_rep2 (get2 a temp___idx_160 temp___idx_161 temp___idx_162 temp___idx_163)) (to_rep2 (get2 b (+ (- b__first a__first) temp___idx_160) (+ (- b__first_2 a__first_2) temp___idx_161) (+ (- b__first_3 a__first_3) temp___idx_162) (+ (- b__first_4 a__first_4) temp___idx_163))))))) true false))
(assert (forall ((a map3) (b map3)) (forall ((a__first Int) (a__last Int) (a__first_2 Int) (a__last_2 Int) (a__first_3 Int) (a__last_3 Int) (a__first_4 Int) (a__last_4 Int) (b__first Int) (b__last Int) (b__first_2 Int) (b__last_2 Int) (b__first_3 Int) (b__last_3 Int) (b__first_4 Int) (b__last_4 Int)) (=> (= (bool_eq12 b b__first b__last b__first_2 b__last_2 b__first_3 b__last_3 b__first_4 b__last_4 a a__first a__last a__first_2 a__last_2 a__first_3 a__last_3 a__first_4 a__last_4) true) (and (and (and (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (ite (<= a__first_2 a__last_2) (and (<= b__first_2 b__last_2) (= (- a__last_2 a__first_2) (- b__last_2 b__first_2))) (< b__last_2 b__first_2))) (ite (<= a__first_3 a__last_3) (and (<= b__first_3 b__last_3) (= (- a__last_3 a__first_3) (- b__last_3 b__first_3))) (< b__last_3 b__first_3))) (ite (<= a__first_4 a__last_4) (and (<= b__first_4 b__last_4) (= (- a__last_4 a__first_4) (- b__last_4 b__first_4))) (< b__last_4 b__first_4))) (forall ((temp___idx_160 Int) (temp___idx_161 Int) (temp___idx_162 Int) (temp___idx_163 Int)) (=> (and (and (and (and (<= a__first temp___idx_160) (<= temp___idx_160 a__last)) (and (<= a__first_2 temp___idx_161) (<= temp___idx_161 a__last_2))) (and (<= a__first_3 temp___idx_162) (<= temp___idx_162 a__last_3))) (and (<= a__first_4 temp___idx_163) (<= temp___idx_163 a__last_4))) (= (to_rep2 (get2 a temp___idx_160 temp___idx_161 temp___idx_162 temp___idx_163)) (to_rep2 (get2 b (+ (- b__first a__first) temp___idx_160) (+ (- b__first_2 a__first_2) temp___idx_161) (+ (- b__first_3 a__first_3) temp___idx_162) (+ (- b__first_4 a__first_4) temp___idx_163)))))))))))
(declare-const dummy18 map3)
(declare-const value__size13 Int)
(declare-fun object__size13 (map3) Int)
(declare-const value__component__size7 Int)
(declare-fun object__component__size7 (map3) Int)
(declare-const value__alignment13 Int)
(declare-fun object__alignment13 (map3) Int)
(assert (<= 0 value__size13))
(assert (forall ((a map3)) (<= 0 (object__size13 a))))
(assert (<= 0 value__component__size7))
(assert (forall ((a map3)) (<= 0 (object__component__size7 a))))
(assert (<= 0 value__alignment13))
(assert (forall ((a map3)) (<= 0 (object__alignment13 a))))
(declare-fun user_eq18 (map3 map3) Bool)
(declare-sort t7 0)
(declare-fun first11 (t7) integer)
(declare-fun last11 (t7) integer)
(declare-fun mk7 (Int Int) t7)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first11 (mk7 f l))) f) (= (to_rep1 (last11 (mk7 f l))) l)))) :pattern ((mk7 f l)))))
(define-fun dynamic_property9 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-sort t8 0)
(declare-fun first12 (t8) integer)
(declare-fun last12 (t8) integer)
(declare-fun mk8 (Int Int) t8)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first12 (mk8 f l))) f) (= (to_rep1 (last12 (mk8 f l))) l)))) :pattern ((mk8 f l)))))
(define-fun dynamic_property10 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-sort t9 0)
(declare-fun first13 (t9) integer)
(declare-fun last13 (t9) integer)
(declare-fun mk9 (Int Int) t9)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first13 (mk9 f l))) f) (= (to_rep1 (last13 (mk9 f l))) l)))) :pattern ((mk9 f l)))))
(define-fun dynamic_property11 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-sort t10 0)
(declare-fun first14 (t10) integer)
(declare-fun last14 (t10) integer)
(declare-fun mk10 (Int Int) t10)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first14 (mk10 f l))) f) (= (to_rep1 (last14 (mk10 f l))) l)))) :pattern ((mk10 f l)))))
(define-fun dynamic_property12 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 map3) (rt4 t7) (rt_22 t8) (rt_31 t9) (rt_4 t10)))))
(define-fun to_array4 ((a us_t4)) map3 (elts4 a))
(define-fun of_array4 ((a map3) (f Int) (l Int) (f2 Int) (l2 Int) (f3 Int) (l3 Int) (f4 Int) (l4 Int)) us_t4 (mk___t4 a (mk7 f l) (mk8 f2 l2) (mk9 f3 l3) (mk10 f4 l4)))
(define-fun first15 ((a us_t4)) Int (to_rep1 (first11 (rt4 a))))
(define-fun last15 ((a us_t4)) Int (to_rep1 (last11 (rt4 a))))
(define-fun length4 ((a us_t4)) Int (ite (<= (first15 a) (last15 a)) (+ (- (last15 a) (first15 a)) 1) 0))
(define-fun first_22 ((a us_t4)) Int (to_rep1 (first12 (rt_22 a))))
(define-fun last_22 ((a us_t4)) Int (to_rep1 (last12 (rt_22 a))))
(define-fun length_22 ((a us_t4)) Int (ite (<= (first_22 a) (last_22 a)) (+ (- (last_22 a) (first_22 a)) 1) 0))
(define-fun first_31 ((a us_t4)) Int (to_rep1 (first13 (rt_31 a))))
(define-fun last_31 ((a us_t4)) Int (to_rep1 (last13 (rt_31 a))))
(define-fun length_31 ((a us_t4)) Int (ite (<= (first_31 a) (last_31 a)) (+ (- (last_31 a) (first_31 a)) 1) 0))
(define-fun first_4 ((a us_t4)) Int (to_rep1 (first14 (rt_4 a))))
(define-fun last_4 ((a us_t4)) Int (to_rep1 (last14 (rt_4 a))))
(define-fun length_4 ((a us_t4)) Int (ite (<= (first_4 a) (last_4 a)) (+ (- (last_4 a) (first_4 a)) 1) 0))
(define-fun dynamic_property13 ((range_first1 Int) (range_last1 Int) (f1 Int) (l1 Int) (range_first2 Int) (range_last2 Int) (f2 Int) (l2 Int) (range_first3 Int) (range_last3 Int) (f3 Int) (l3 Int) (range_first4 Int) (range_last4 Int) (f4 Int) (l4 Int)) Bool (and (dynamic_property9 range_first1 range_last1 f1 l1) (and (dynamic_property10 range_first2 range_last2 f2 l2) (and (dynamic_property11 range_first3 range_last3 f3 l3) (dynamic_property12 range_first4 range_last4 f4 l4)))))
(declare-const value__size14 Int)
(declare-fun object__size14 (map3) Int)
(declare-const value__component__size8 Int)
(declare-fun object__component__size8 (map3) Int)
(declare-const value__alignment14 Int)
(declare-fun object__alignment14 (map3) Int)
(assert (<= 0 value__size14))
(assert (forall ((a map3)) (<= 0 (object__size14 a))))
(assert (<= 0 value__component__size8))
(assert (forall ((a map3)) (<= 0 (object__component__size8 a))))
(assert (<= 0 value__alignment14))
(assert (forall ((a map3)) (<= 0 (object__alignment14 a))))
(define-fun bool_eq13 ((x us_t4) (y us_t4)) Bool (bool_eq12 (elts4 x) (to_rep1 (first11 (rt4 x))) (to_rep1 (last11 (rt4 x))) (to_rep1 (first12 (rt_22 x))) (to_rep1 (last12 (rt_22 x))) (to_rep1 (first13 (rt_31 x))) (to_rep1 (last13 (rt_31 x))) (to_rep1 (first14 (rt_4 x))) (to_rep1 (last14 (rt_4 x))) (elts4 y) (to_rep1 (first11 (rt4 y))) (to_rep1 (last11 (rt4 y))) (to_rep1 (first12 (rt_22 y))) (to_rep1 (last12 (rt_22 y))) (to_rep1 (first13 (rt_31 y))) (to_rep1 (last13 (rt_31 y))) (to_rep1 (first14 (rt_4 y))) (to_rep1 (last14 (rt_4 y)))))
(declare-fun user_eq19 (us_t4 us_t4) Bool)
(declare-const dummy19 us_t4)
(declare-datatypes () ((unconstrained_array_4__ref (mk_unconstrained_array_4__ref (unconstrained_array_4__content us_t4)))))
(define-fun unconstrained_array_4__ref___projection ((a unconstrained_array_4__ref)) us_t4 (unconstrained_array_4__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const s__first integer)
(declare-const s__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun in_range7 ((rec__size_attr__r1__a1 Bool) (a us_rep)) Bool (= rec__size_attr__r1__a1 (rec__size_attr__r1__a (us_split_discrs1 a))))
(declare-const value__size15 Int)
(declare-fun object__size15 (us_rep) Int)
(declare-const value__alignment15 Int)
(declare-fun object__alignment15 (us_rep) Int)
(assert (<= 0 value__size15))
(assert (forall ((a us_rep)) (<= 0 (object__size15 a))))
(assert (<= 0 value__alignment15))
(assert (forall ((a us_rep)) (<= 0 (object__alignment15 a))))
(declare-const size_attr__r1__a__first__bit2 Int)
(declare-const size_attr__r1__a__last__bit2 Int)
(declare-const size_attr__r1__a__position2 Int)
(assert (<= 0 size_attr__r1__a__first__bit2))
(assert (< size_attr__r1__a__first__bit2 size_attr__r1__a__last__bit2))
(assert (<= 0 size_attr__r1__a__position2))
(declare-const size_attr__r1__x__first__bit2 Int)
(declare-const size_attr__r1__x__last__bit2 Int)
(declare-const size_attr__r1__x__position2 Int)
(assert (<= 0 size_attr__r1__x__first__bit2))
(assert (< size_attr__r1__x__first__bit2 size_attr__r1__x__last__bit2))
(assert (<= 0 size_attr__r1__x__position2))
(declare-fun user_eq20 (us_rep us_rep) Bool)
(declare-const dummy20 us_rep)
(declare-datatypes () ((tv1S__ref (mk_tv1S__ref (tv1S__content us_rep)))))
(define-fun tv1S__ref___projection ((a tv1S__ref)) us_rep (tv1S__content a))
(define-fun dynamic_invariant3 ((temp___expr_351 us_rep) (temp___is_init_347 Bool) (temp___skip_constant_348 Bool) (temp___do_toplevel_349 Bool) (temp___do_typ_inv_350 Bool)) Bool (and (=> (not (= temp___skip_constant_348 true)) (in_range7 (distinct 0 0) temp___expr_351)) (= (attr__constrained temp___expr_351) true)))
(define-fun default_initial_assumption4 ((temp___expr_353 us_rep) (temp___skip_top_level_354 Bool)) Bool (and (= (attr__constrained temp___expr_353) true) (= (rec__size_attr__r1__a (us_split_discrs1 temp___expr_353)) (distinct 0 0))))
(declare-const v1__split_discrs us_split_discrs)
(declare-const v1__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const v2__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const v3__split_discrs us_split_discrs)
(declare-const v3__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const v5__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const v6__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const dummy21 (Array Int natural))
(declare-const value__size16 Int)
(declare-fun object__size16 ((Array Int natural)) Int)
(declare-const value__component__size9 Int)
(declare-fun object__component__size9 ((Array Int natural)) Int)
(declare-const value__alignment16 Int)
(declare-fun object__alignment16 ((Array Int natural)) Int)
(assert (<= 0 value__size16))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size16 a))))
(assert (<= 0 value__component__size9))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size9 a))))
(assert (<= 0 value__alignment16))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment16 a))))
(declare-fun user_eq21 ((Array Int natural) (Array Int natural)) Bool)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const dummy22 map1)
(declare-const value__size17 Int)
(declare-fun object__size17 (map1) Int)
(declare-const value__component__size10 Int)
(declare-fun object__component__size10 (map1) Int)
(declare-const value__alignment17 Int)
(declare-fun object__alignment17 (map1) Int)
(assert (<= 0 value__size17))
(assert (forall ((a map1)) (<= 0 (object__size17 a))))
(assert (<= 0 value__component__size10))
(assert (forall ((a map1)) (<= 0 (object__component__size10 a))))
(assert (<= 0 value__alignment17))
(assert (forall ((a map1)) (<= 0 (object__alignment17 a))))
(declare-fun user_eq22 (map1 map1) Bool)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const dummy23 map2)
(declare-const value__size18 Int)
(declare-fun object__size18 (map2) Int)
(declare-const value__component__size11 Int)
(declare-fun object__component__size11 (map2) Int)
(declare-const value__alignment18 Int)
(declare-fun object__alignment18 (map2) Int)
(assert (<= 0 value__size18))
(assert (forall ((a map2)) (<= 0 (object__size18 a))))
(assert (<= 0 value__component__size11))
(assert (forall ((a map2)) (<= 0 (object__component__size11 a))))
(assert (<= 0 value__alignment18))
(assert (forall ((a map2)) (<= 0 (object__alignment18 a))))
(declare-fun user_eq23 (map2 map2) Bool)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const dummy24 map3)
(declare-const value__size19 Int)
(declare-fun object__size19 (map3) Int)
(declare-const value__component__size12 Int)
(declare-fun object__component__size12 (map3) Int)
(declare-const value__alignment19 Int)
(declare-fun object__alignment19 (map3) Int)
(assert (<= 0 value__size19))
(assert (forall ((a map3)) (<= 0 (object__size19 a))))
(assert (<= 0 value__component__size12))
(assert (forall ((a map3)) (<= 0 (object__component__size12 a))))
(assert (<= 0 value__alignment19))
(assert (forall ((a map3)) (<= 0 (object__alignment19 a))))
(declare-fun user_eq24 (map3 map3) Bool)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-fun temp___String_Literal_410 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (= (to_rep (select (temp___String_Literal_410 us_void_param) 1)) 97) (= (to_rep (select (temp___String_Literal_410 us_void_param) 2)) 98)) (= (to_rep (select (temp___String_Literal_410 us_void_param) 3)) 99)) :pattern ((temp___String_Literal_410 us_void_param)))))
(declare-fun size_attr__ca__aggregate_def (Int) (Array Int natural))
(declare-fun size_attr__ua__aggregate_def (Int) (Array Int natural))
(declare-fun size_attr__ca2__aggregate_def (Int) (Array Int natural))
(declare-fun size_attr__ca3__aggregate_def (Int) (Array Int natural))
(declare-fun size_attr__ca4__aggregate_def (Int) (Array Int natural))
(declare-fun size_attr__ua2__aggregate_def (Int) map1)
(declare-fun size_attr__ua3__aggregate_def (Int) map2)
(declare-fun size_attr__ua4__aggregate_def (Int) map3)
(define-fun dynamic_invariant4 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range6 temp___expr_39)))
(define-fun dynamic_invariant5 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant6 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant7 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant8 ((temp___expr_279 us_t1) (temp___is_init_275 Bool) (temp___skip_constant_276 Bool) (temp___do_toplevel_277 Bool) (temp___do_typ_inv_278 Bool)) Bool (=> (not (= temp___skip_constant_276 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_279) (last3 temp___expr_279))))
(define-fun dynamic_invariant9 ((temp___expr_297 us_t2) (temp___is_init_293 Bool) (temp___skip_constant_294 Bool) (temp___do_toplevel_295 Bool) (temp___do_typ_inv_296 Bool)) Bool (=> (not (= temp___skip_constant_294 true)) (dynamic_property4 1 2147483647 (first6 temp___expr_297) (last6 temp___expr_297) 1 2147483647 (first_2 temp___expr_297) (last_2 temp___expr_297))))
(define-fun dynamic_invariant10 ((temp___expr_318 us_t3) (temp___is_init_314 Bool) (temp___skip_constant_315 Bool) (temp___do_toplevel_316 Bool) (temp___do_typ_inv_317 Bool)) Bool (=> (not (= temp___skip_constant_315 true)) (dynamic_property8 1 2147483647 (first10 temp___expr_318) (last10 temp___expr_318) 1 2147483647 (first_21 temp___expr_318) (last_21 temp___expr_318) 1 2147483647 (first_3 temp___expr_318) (last_3 temp___expr_318))))
(define-fun dynamic_invariant11 ((temp___expr_342 us_t4) (temp___is_init_338 Bool) (temp___skip_constant_339 Bool) (temp___do_toplevel_340 Bool) (temp___do_typ_inv_341 Bool)) Bool (=> (not (= temp___skip_constant_339 true)) (dynamic_property13 1 2147483647 (first15 temp___expr_342) (last15 temp___expr_342) 1 2147483647 (first_22 temp___expr_342) (last_22 temp___expr_342) 1 2147483647 (first_31 temp___expr_342) (last_31 temp___expr_342) 1 2147483647 (first_4 temp___expr_342) (last_4 temp___expr_342))))
(assert (forall ((temp___427 Int)) (=> (dynamic_invariant4 temp___427 true true true true) (forall ((temp___428 Int)) (= (to_rep2 (select (size_attr__ca__aggregate_def temp___427) temp___428)) temp___427)))))
(assert (forall ((temp___430 Int)) (=> (dynamic_invariant4 temp___430 true true true true) (forall ((temp___431 Int)) (= (to_rep2 (select (size_attr__ua__aggregate_def temp___430) temp___431)) temp___430)))))
(assert (forall ((temp___433 Int)) (=> (dynamic_invariant4 temp___433 true true true true) (forall ((temp___434 Int)) (= (to_rep2 (select (size_attr__ca2__aggregate_def temp___433) temp___434)) temp___433)))))
(assert (forall ((temp___436 Int)) (=> (dynamic_invariant4 temp___436 true true true true) (forall ((temp___437 Int)) (= (to_rep2 (select (size_attr__ca3__aggregate_def temp___436) temp___437)) temp___436)))))
(assert (forall ((temp___439 Int)) (=> (dynamic_invariant4 temp___439 true true true true) (forall ((temp___440 Int)) (= (to_rep2 (select (size_attr__ca4__aggregate_def temp___439) temp___440)) temp___439)))))
(assert (forall ((temp___442 Int)) (=> (dynamic_invariant4 temp___442 true true true true) (forall ((temp___443 Int) (temp___444 Int)) (= (to_rep2 (get (size_attr__ua2__aggregate_def temp___442) temp___443 temp___444)) temp___442)))))
(assert (forall ((temp___446 Int)) (=> (dynamic_invariant4 temp___446 true true true true) (forall ((temp___447 Int) (temp___448 Int) (temp___449 Int)) (= (to_rep2 (get1 (size_attr__ua3__aggregate_def temp___446) temp___447 temp___448 temp___449)) temp___446)))))
(assert (forall ((temp___451 Int)) (=> (dynamic_invariant4 temp___451 true true true true) (forall ((temp___452 Int) (temp___453 Int) (temp___454 Int) (temp___455 Int)) (= (to_rep2 (get2 (size_attr__ua4__aggregate_def temp___451) temp___452 temp___453 temp___454 temp___455)) temp___451)))))
(declare-const b Bool)
(declare-const i Int)
(declare-const s (Array Int character))
(declare-const mi Int)
(declare-const v2__split_discrs Bool)
(declare-const v4__split_fields integer)
(declare-const ca (Array Int natural))
(declare-const ua (Array Int natural))
(declare-const ca2 map__ref1)
(declare-const ca3 map__ref1)
(declare-const ca4 map__ref1)
(declare-const ua2 map__ref2)
(declare-const ua3 map__ref3)
(declare-const ua4 map__ref4)
(declare-const o integer)
(declare-const o1 us_split_fields2)
(declare-const size_attr__v4__assume us_rep1)
(declare-const result bool__ref)
(declare-const b1 Bool)
(declare-const result1 int__ref)
(declare-const i1 Int)
(declare-const result2 map__ref)
(declare-const s1 (Array Int character))
(declare-const result3 int__ref)
(declare-const mi1 Int)
(declare-const result4 us_split_fields__ref1)
(declare-const v4__split_fields1 us_split_fields2)
(declare-const result5 map__ref1)
(declare-const ca1 (Array Int natural))
(declare-const result6 map__ref1)
(declare-const ua1 (Array Int natural))
(declare-const result7 map__ref1)
(declare-const ca21 (Array Int natural))
(declare-const result8 map__ref1)
(declare-const ca31 (Array Int natural))
(declare-const result9 map__ref1)
(declare-const ca41 (Array Int natural))
(declare-const result10 map__ref2)
(declare-const ua21 map1)
(declare-const result11 map__ref3)
(declare-const ua31 map2)
(declare-const result12 map__ref4)
(declare-const ua41 map3)
(assert (= result (mk_bool__ref b)))
(assert (= b1 (distinct 0 0)))
(assert (= result1 (mk_int__ref i)))
(assert (= i1 0))
(assert (in_range1 i1))
(assert (= result2 (mk_map__ref s)))
(assert (= s1 (temp___String_Literal_410 Tuple0)))
(assert (= (to_rep1 s__first) (to_rep1 (first (mk 1 3)))))
(assert (= (to_rep1 s__last) (to_rep1 (last (mk 1 3)))))
(assert (dynamic_property 1 2147483647 (to_rep1 s__first) (to_rep1 s__last)))
(assert (= result3 (mk_int__ref mi)))
(assert (= mi1 1))
(assert (in_range4 mi1))
(assert (and (= v1__attr__constrained true) (= (rec__size_attr__r1__a v1__split_discrs) (distinct 0 0))))
(assert (and (= (distinct 0 0) (rec__size_attr__r1__a v1__split_discrs)) (= v1__attr__constrained true)))
(assert (and (= v2__attr__constrained false) (= v2__split_discrs (distinct 0 0))))
(assert (and (= v3__attr__constrained true) (= (rec__size_attr__r1__a v3__split_discrs) (distinct 0 0))))
(assert (and (= (distinct 0 0) (rec__size_attr__r1__a v3__split_discrs)) (= v3__attr__constrained true)))
(assert (= (to_rep1 o) 1))
(assert (= o1 (mk___split_fields1 o)))
(assert (= size_attr__v4__assume (mk___rep1 o1)))
(assert (= result4 (mk___split_fields__ref1 (mk___split_fields1 v4__split_fields))))
(assert (= v4__split_fields1 (us_split_fields3 size_attr__v4__assume)))
(assert (= v5__attr__tag us_tag))
(assert (= v6__attr__tag us_tag1))
(assert (= result5 (mk_map__ref1 ca)))
(assert (= ca1 (size_attr__ca__aggregate_def 1)))
(assert (= result6 (mk_map__ref1 ua)))
(assert (= ua1 (size_attr__ua__aggregate_def 1)))
(assert (= result7 ca2))
(assert (= (let ((subject ca2)) ca21) (size_attr__ca2__aggregate_def 1)))
(assert (= result8 ca3))
(assert (= (let ((subject ca3)) ca31) (size_attr__ca3__aggregate_def 1)))
(assert (= result9 ca4))
(assert (= (let ((subject ca4)) ca41) (size_attr__ca4__aggregate_def 1)))
(assert (= result10 ua2))
(assert (= (let ((subject ua2)) ua21) (size_attr__ua2__aggregate_def 1)))
(assert (= result11 ua3))
(assert (= (let ((subject ua3)) ua31) (size_attr__ua3__aggregate_def 1)))
(assert (= result12 ua4))
(assert (= (let ((subject ua4)) ua41) (size_attr__ua4__aggregate_def 1)))
(assert (<= 0 value__size1))
(assert (<= 0 value__size2))
(assert (<= 0 value__size3))
(assert (<= 0 value__size4))
(assert (<= 0 value__size5))
(assert (<= 0 value__size6))
(assert (<= 0 value__size7))
(assert (<= 0 value__size8))
(assert (<= 0 value__size))
(assert (<= 0 value__size9))
(assert (<= 0 value__size11))
(assert (<= 0 value__size13))
(assert (<= 0 value__size10))
(assert (not (<= 0 value__size12)))
(check-sat)
(exit)
