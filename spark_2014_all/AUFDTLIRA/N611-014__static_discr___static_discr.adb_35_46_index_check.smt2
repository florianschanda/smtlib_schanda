(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range2 temp___expr_33)))
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int natural))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int natural) Int Int (Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (natural Int) (Array Int natural))
(assert (forall ((v natural)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int) (b (Array Int natural)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare ((Array Int natural) Int Int (Array Int natural) Int Int) Int)
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (integer integer) Bool)
(declare-const dummy2 integer)
(declare-datatypes () ((t3s__ref (mk_t3s__ref (t3s__content integer)))))
(define-fun t3s__ref___projection ((a t3s__ref)) integer (t3s__content a))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int natural)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))
(define-fun of_array ((a (Array Int natural)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int natural)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int natural)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int natural)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((t4s__ref (mk_t4s__ref (t4s__content us_t)))))
(define-fun t4s__ref___projection ((a t4s__ref)) us_t (t4s__content a))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__static_discr__i_holder__unused natural) (rec__static_discr__i_holder__c natural)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural (rec__static_discr__i_holder__unused a))
(define-fun us_split_discrs___2__projection ((a us_split_discrs)) natural (rec__static_discr__i_holder__c a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__static_discr__i_holder__content us_t)))))
(define-fun us_split_fields_Content__projection ((a us_split_fields)) us_t (rec__static_discr__i_holder__content a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (and (= (to_rep (rec__static_discr__i_holder__unused (us_split_discrs1 a))) (to_rep (rec__static_discr__i_holder__unused (us_split_discrs1 b)))) (= (to_rep (rec__static_discr__i_holder__c (us_split_discrs1 a))) (to_rep (rec__static_discr__i_holder__c (us_split_discrs1 b))))) (= (bool_eq1 (rec__static_discr__i_holder__content (us_split_fields1 a)) (rec__static_discr__i_holder__content (us_split_fields1 b))) true)) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const static_discr__i_holder__unused__first__bit Int)
(declare-const static_discr__i_holder__unused__last__bit Int)
(declare-const static_discr__i_holder__unused__position Int)
(assert (<= 0 static_discr__i_holder__unused__first__bit))
(assert (< static_discr__i_holder__unused__first__bit static_discr__i_holder__unused__last__bit))
(assert (<= 0 static_discr__i_holder__unused__position))
(declare-const static_discr__i_holder__c__first__bit Int)
(declare-const static_discr__i_holder__c__last__bit Int)
(declare-const static_discr__i_holder__c__position Int)
(assert (<= 0 static_discr__i_holder__c__first__bit))
(assert (< static_discr__i_holder__c__first__bit static_discr__i_holder__c__last__bit))
(assert (<= 0 static_discr__i_holder__c__position))
(declare-const static_discr__i_holder__content__first__bit Int)
(declare-const static_discr__i_holder__content__last__bit Int)
(declare-const static_discr__i_holder__content__position Int)
(assert (<= 0 static_discr__i_holder__content__first__bit))
(assert (< static_discr__i_holder__content__first__bit static_discr__i_holder__content__last__bit))
(assert (<= 0 static_discr__i_holder__content__position))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((i_holder__ref (mk_i_holder__ref (i_holder__content us_rep)))))
(define-fun i_holder__ref___projection ((a i_holder__ref)) us_rep (i_holder__content a))
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((tT6sP1__ref (mk_tT6sP1__ref (tT6sP1__content integer)))))
(define-fun tT6sP1__ref___projection ((a tT6sP1__ref)) integer (tT6sP1__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int natural)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int natural) (elts1 a))
(define-fun of_array1 ((a (Array Int natural)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int natural)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int natural)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int natural)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq6 (us_t1 us_t1) Bool)
(declare-const dummy6 us_t1)
(declare-datatypes () ((t6s__ref (mk_t6s__ref (t6s__content us_t1)))))
(define-fun t6s__ref___projection ((a t6s__ref)) us_t1 (t6s__content a))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__static_discr__i_holder__content1 us_t1)))))
(define-fun us_split_fields_Content__2__projection ((a us_split_fields2)) us_t1 (rec__static_discr__i_holder__content1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs2 us_split_discrs) (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_discrs (us_split_discrs2 a))
(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a) (mk___split_fields (let ((temp___134 (rec__static_discr__i_holder__content1 (us_split_fields3 a)))) (of_array (to_array1 temp___134) (first3 temp___134) (last3 temp___134))))))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r) (mk___split_fields1 (let ((temp___133 (rec__static_discr__i_holder__content (us_split_fields1 r)))) (of_array1 (to_array temp___133) (first1 temp___133) (last1 temp___133))))))
(define-fun bool_eq4 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (= (to_rep (rec__static_discr__i_holder__unused (us_split_discrs2 a))) (to_rep (rec__static_discr__i_holder__unused (us_split_discrs2 b)))) (= (to_rep (rec__static_discr__i_holder__c (us_split_discrs2 a))) (to_rep (rec__static_discr__i_holder__c (us_split_discrs2 b))))) (= (bool_eq3 (rec__static_discr__i_holder__content1 (us_split_fields3 a)) (rec__static_discr__i_holder__content1 (us_split_fields3 b))) true)) true false))
(define-fun in_range3 ((rec__static_discr__i_holder__unused1 Int) (rec__static_discr__i_holder__c1 Int) (a us_rep)) Bool (and (= rec__static_discr__i_holder__unused1 (to_rep (rec__static_discr__i_holder__unused (us_split_discrs1 a)))) (= rec__static_discr__i_holder__c1 (to_rep (rec__static_discr__i_holder__c (us_split_discrs1 a))))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const static_discr__i_holder__unused__first__bit1 Int)
(declare-const static_discr__i_holder__unused__last__bit1 Int)
(declare-const static_discr__i_holder__unused__position1 Int)
(assert (<= 0 static_discr__i_holder__unused__first__bit1))
(assert (< static_discr__i_holder__unused__first__bit1 static_discr__i_holder__unused__last__bit1))
(assert (<= 0 static_discr__i_holder__unused__position1))
(declare-const static_discr__i_holder__c__first__bit1 Int)
(declare-const static_discr__i_holder__c__last__bit1 Int)
(declare-const static_discr__i_holder__c__position1 Int)
(assert (<= 0 static_discr__i_holder__c__first__bit1))
(assert (< static_discr__i_holder__c__first__bit1 static_discr__i_holder__c__last__bit1))
(assert (<= 0 static_discr__i_holder__c__position1))
(declare-const static_discr__i_holder__content__first__bit1 Int)
(declare-const static_discr__i_holder__content__last__bit1 Int)
(declare-const static_discr__i_holder__content__position1 Int)
(assert (<= 0 static_discr__i_holder__content__first__bit1))
(assert (< static_discr__i_holder__content__first__bit1 static_discr__i_holder__content__last__bit1))
(assert (<= 0 static_discr__i_holder__content__position1))
(declare-fun user_eq7 (us_rep1 us_rep1) Bool)
(declare-const dummy7 us_rep1)
(declare-datatypes () ((t5s__ref (mk_t5s__ref (t5s__content us_rep1)))))
(define-fun t5s__ref___projection ((a t5s__ref)) us_rep1 (t5s__content a))
(declare-datatypes () ((us_split_discrs3 (mk___split_discrs1 (rec__static_discr__holder__unused natural) (rec__static_discr__holder__c natural)))))
(define-fun us_split_discrs___3__projection ((a us_split_discrs3)) natural (rec__static_discr__holder__unused a))
(define-fun us_split_discrs___4__projection ((a us_split_discrs3)) natural (rec__static_discr__holder__c a))
(declare-datatypes () ((us_split_discrs__ref1 (mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs3)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref1)) us_split_discrs3 (us_split_discrs__content1 a))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__static_discr__holder__content us_rep1) (rec__static_discr__holder__length natural)))))
(define-fun us_split_fields_Content__3__projection ((a us_split_fields4)) us_rep1 (rec__static_discr__holder__content a))
(define-fun us_split_fields_Length__projection ((a us_split_fields4)) natural (rec__static_discr__holder__length a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_discrs4 us_split_discrs3) (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___5__projection ((a us_rep2)) us_split_discrs3 (us_split_discrs4 a))
(define-fun us_rep___6__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq5 ((a us_rep2) (b us_rep2)) Bool (ite (and (and (= (to_rep (rec__static_discr__holder__unused (us_split_discrs4 a))) (to_rep (rec__static_discr__holder__unused (us_split_discrs4 b)))) (= (to_rep (rec__static_discr__holder__c (us_split_discrs4 a))) (to_rep (rec__static_discr__holder__c (us_split_discrs4 b))))) (and (= (bool_eq4 (rec__static_discr__holder__content (us_split_fields5 a)) (rec__static_discr__holder__content (us_split_fields5 b))) true) (= (to_rep (rec__static_discr__holder__length (us_split_fields5 a))) (to_rep (rec__static_discr__holder__length (us_split_fields5 b)))))) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep2) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep2) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))
(declare-const static_discr__holder__unused__first__bit Int)
(declare-const static_discr__holder__unused__last__bit Int)
(declare-const static_discr__holder__unused__position Int)
(assert (<= 0 static_discr__holder__unused__first__bit))
(assert (< static_discr__holder__unused__first__bit static_discr__holder__unused__last__bit))
(assert (<= 0 static_discr__holder__unused__position))
(declare-const static_discr__holder__c__first__bit Int)
(declare-const static_discr__holder__c__last__bit Int)
(declare-const static_discr__holder__c__position Int)
(assert (<= 0 static_discr__holder__c__first__bit))
(assert (< static_discr__holder__c__first__bit static_discr__holder__c__last__bit))
(assert (<= 0 static_discr__holder__c__position))
(declare-const static_discr__holder__content__first__bit Int)
(declare-const static_discr__holder__content__last__bit Int)
(declare-const static_discr__holder__content__position Int)
(assert (<= 0 static_discr__holder__content__first__bit))
(assert (< static_discr__holder__content__first__bit static_discr__holder__content__last__bit))
(assert (<= 0 static_discr__holder__content__position))
(declare-const static_discr__holder__length__first__bit Int)
(declare-const static_discr__holder__length__last__bit Int)
(declare-const static_discr__holder__length__position Int)
(assert (<= 0 static_discr__holder__length__first__bit))
(assert (< static_discr__holder__length__first__bit static_discr__holder__length__last__bit))
(assert (<= 0 static_discr__holder__length__position))
(declare-fun user_eq8 (us_rep2 us_rep2) Bool)
(declare-const dummy8 us_rep2)
(declare-datatypes () ((holder__ref (mk_holder__ref (holder__content us_rep2)))))
(define-fun holder__ref___projection ((a holder__ref)) us_rep2 (holder__content a))
(declare-sort tT8sP1 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq9 (tT8sP1 tT8sP1) Bool)
(declare-const dummy9 tT8sP1)
(declare-datatypes () ((tT8sP1__ref (mk_tT8sP1__ref (tT8sP1__content tT8sP1)))))
(define-fun tT8sP1__ref___projection ((a tT8sP1__ref)) tT8sP1 (tT8sP1__content a))
(declare-const dummy10 (Array Int natural))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int natural)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int natural)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int natural)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment5 a))))
(declare-fun user_eq10 ((Array Int natural) (Array Int natural)) Bool)
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__static_discr__i_holder__content2 (Array Int natural))))))
(define-fun us_split_fields_Content__4__projection ((a us_split_fields6)) (Array Int natural) (rec__static_discr__i_holder__content2 a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep3 (mk___rep3 (us_split_discrs5 us_split_discrs) (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___7__projection ((a us_rep3)) us_split_discrs (us_split_discrs5 a))
(define-fun us_rep___8__projection ((a us_rep3)) us_split_fields6 (us_split_fields7 a))
(define-fun to_base1 ((a us_rep3)) us_rep (mk___rep (us_split_discrs5 a) (mk___split_fields (of_array (rec__static_discr__i_holder__content2 (us_split_fields7 a)) 1 100))))
(define-fun of_base1 ((r us_rep)) us_rep3 (mk___rep3 (us_split_discrs1 r) (mk___split_fields3 (let ((temp___135 (rec__static_discr__i_holder__content (us_split_fields1 r)))) (to_array temp___135)))))
(define-fun bool_eq6 ((a us_rep3) (b us_rep3)) Bool (ite (and (and (= (to_rep (rec__static_discr__i_holder__unused (us_split_discrs5 a))) (to_rep (rec__static_discr__i_holder__unused (us_split_discrs5 b)))) (= (to_rep (rec__static_discr__i_holder__c (us_split_discrs5 a))) (to_rep (rec__static_discr__i_holder__c (us_split_discrs5 b))))) (= (bool_eq (rec__static_discr__i_holder__content2 (us_split_fields7 a)) 1 100 (rec__static_discr__i_holder__content2 (us_split_fields7 b)) 1 100) true)) true false))
(define-fun in_range5 ((rec__static_discr__i_holder__unused1 Int) (rec__static_discr__i_holder__c1 Int) (a us_rep)) Bool (and (= rec__static_discr__i_holder__unused1 (to_rep (rec__static_discr__i_holder__unused (us_split_discrs1 a)))) (= rec__static_discr__i_holder__c1 (to_rep (rec__static_discr__i_holder__c (us_split_discrs1 a))))))
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep3) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep3) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep3)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment6 a))))
(declare-const static_discr__i_holder__unused__first__bit2 Int)
(declare-const static_discr__i_holder__unused__last__bit2 Int)
(declare-const static_discr__i_holder__unused__position2 Int)
(assert (<= 0 static_discr__i_holder__unused__first__bit2))
(assert (< static_discr__i_holder__unused__first__bit2 static_discr__i_holder__unused__last__bit2))
(assert (<= 0 static_discr__i_holder__unused__position2))
(declare-const static_discr__i_holder__c__first__bit2 Int)
(declare-const static_discr__i_holder__c__last__bit2 Int)
(declare-const static_discr__i_holder__c__position2 Int)
(assert (<= 0 static_discr__i_holder__c__first__bit2))
(assert (< static_discr__i_holder__c__first__bit2 static_discr__i_holder__c__last__bit2))
(assert (<= 0 static_discr__i_holder__c__position2))
(declare-const static_discr__i_holder__content__first__bit2 Int)
(declare-const static_discr__i_holder__content__last__bit2 Int)
(declare-const static_discr__i_holder__content__position2 Int)
(assert (<= 0 static_discr__i_holder__content__first__bit2))
(assert (< static_discr__i_holder__content__first__bit2 static_discr__i_holder__content__last__bit2))
(assert (<= 0 static_discr__i_holder__content__position2))
(declare-fun user_eq11 (us_rep3 us_rep3) Bool)
(declare-const dummy11 us_rep3)
(declare-datatypes () ((t7s__ref (mk_t7s__ref (t7s__content us_rep3)))))
(define-fun t7s__ref___projection ((a t7s__ref)) us_rep3 (t7s__content a))
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__static_discr__holder__content1 us_rep3) (rec__static_discr__holder__length1 natural)))))
(define-fun us_split_fields_Content__5__projection ((a us_split_fields8)) us_rep3 (rec__static_discr__holder__content1 a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields8)) natural (rec__static_discr__holder__length1 a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___5__projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep4 (mk___rep4 (us_split_discrs6 us_split_discrs3) (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___9__projection ((a us_rep4)) us_split_discrs3 (us_split_discrs6 a))
(define-fun us_rep___10__projection ((a us_rep4)) us_split_fields8 (us_split_fields9 a))
(define-fun to_base2 ((a us_rep4)) us_rep2 (mk___rep2 (us_split_discrs6 a) (mk___split_fields2 (of_base (to_base1 (rec__static_discr__holder__content1 (us_split_fields9 a)))) (rec__static_discr__holder__length1 (us_split_fields9 a)))))
(define-fun of_base2 ((r us_rep2)) us_rep4 (mk___rep4 (us_split_discrs4 r) (mk___split_fields4 (of_base1 (to_base (rec__static_discr__holder__content (us_split_fields5 r)))) (rec__static_discr__holder__length (us_split_fields5 r)))))
(define-fun bool_eq7 ((a us_rep4) (b us_rep4)) Bool (ite (and (and (= (to_rep (rec__static_discr__holder__unused (us_split_discrs6 a))) (to_rep (rec__static_discr__holder__unused (us_split_discrs6 b)))) (= (to_rep (rec__static_discr__holder__c (us_split_discrs6 a))) (to_rep (rec__static_discr__holder__c (us_split_discrs6 b))))) (and (= (bool_eq6 (rec__static_discr__holder__content1 (us_split_fields9 a)) (rec__static_discr__holder__content1 (us_split_fields9 b))) true) (= (to_rep (rec__static_discr__holder__length1 (us_split_fields9 a))) (to_rep (rec__static_discr__holder__length1 (us_split_fields9 b)))))) true false))
(define-fun in_range6 ((rec__static_discr__holder__unused1 Int) (rec__static_discr__holder__c1 Int) (a us_rep2)) Bool (and (= rec__static_discr__holder__unused1 (to_rep (rec__static_discr__holder__unused (us_split_discrs4 a)))) (= rec__static_discr__holder__c1 (to_rep (rec__static_discr__holder__c (us_split_discrs4 a))))))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep4) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep4) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep4)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment7 a))))
(declare-const static_discr__holder__unused__first__bit1 Int)
(declare-const static_discr__holder__unused__last__bit1 Int)
(declare-const static_discr__holder__unused__position1 Int)
(assert (<= 0 static_discr__holder__unused__first__bit1))
(assert (< static_discr__holder__unused__first__bit1 static_discr__holder__unused__last__bit1))
(assert (<= 0 static_discr__holder__unused__position1))
(declare-const static_discr__holder__c__first__bit1 Int)
(declare-const static_discr__holder__c__last__bit1 Int)
(declare-const static_discr__holder__c__position1 Int)
(assert (<= 0 static_discr__holder__c__first__bit1))
(assert (< static_discr__holder__c__first__bit1 static_discr__holder__c__last__bit1))
(assert (<= 0 static_discr__holder__c__position1))
(declare-const static_discr__holder__content__first__bit1 Int)
(declare-const static_discr__holder__content__last__bit1 Int)
(declare-const static_discr__holder__content__position1 Int)
(assert (<= 0 static_discr__holder__content__first__bit1))
(assert (< static_discr__holder__content__first__bit1 static_discr__holder__content__last__bit1))
(assert (<= 0 static_discr__holder__content__position1))
(declare-const static_discr__holder__length__first__bit1 Int)
(declare-const static_discr__holder__length__last__bit1 Int)
(declare-const static_discr__holder__length__position1 Int)
(assert (<= 0 static_discr__holder__length__first__bit1))
(assert (< static_discr__holder__length__first__bit1 static_discr__holder__length__last__bit1))
(assert (<= 0 static_discr__holder__length__position1))
(declare-fun user_eq12 (us_rep4 us_rep4) Bool)
(declare-const dummy12 us_rep4)
(declare-datatypes () ((holder_max__ref (mk_holder_max__ref (holder_max__content us_rep4)))))
(define-fun holder_max__ref___projection ((a holder_max__ref)) us_rep4 (holder_max__content a))
(define-fun dynamic_invariant1 ((temp___expr_176 us_rep4) (temp___is_init_173 Bool) (temp___skip_constant_174 Bool) (temp___do_toplevel_175 Bool)) Bool (and (=> (not (= temp___skip_constant_174 true)) (in_range6 100 100 (to_base2 temp___expr_176))) (in_range5 100 100 (to_base1 (rec__static_discr__holder__content1 (us_split_fields9 temp___expr_176))))))
(define-fun default_initial_assumption ((temp___expr_182 us_rep4) (temp___skip_top_level_183 Bool)) Bool (and (and (= (to_rep (rec__static_discr__holder__unused (us_split_discrs6 temp___expr_182))) 100) (= (to_rep (rec__static_discr__holder__c (us_split_discrs6 temp___expr_182))) 100)) (and (= (to_rep (rec__static_discr__i_holder__unused (us_split_discrs5 (rec__static_discr__holder__content1 (us_split_fields9 temp___expr_182))))) 100) (= (to_rep (rec__static_discr__i_holder__c (us_split_discrs5 (rec__static_discr__holder__content1 (us_split_fields9 temp___expr_182))))) 100))))
(declare-const a us_rep4)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const e Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const current__split_discrs us_split_discrs3)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_invariant2 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant3 ((temp___expr_160 us_rep) (temp___is_init_157 Bool) (temp___skip_constant_158 Bool) (temp___do_toplevel_159 Bool)) Bool (let ((temp___162 (rec__static_discr__i_holder__c (us_split_discrs1 temp___expr_160)))) (and (dynamic_property1 1 (to_rep temp___162) (first1 (rec__static_discr__i_holder__content (us_split_fields1 temp___expr_160))) (last1 (rec__static_discr__i_holder__content (us_split_fields1 temp___expr_160)))) (and (= (first1 (rec__static_discr__i_holder__content (us_split_fields1 temp___expr_160))) 1) (= (last1 (rec__static_discr__i_holder__content (us_split_fields1 temp___expr_160))) (to_rep temp___162))))))
(define-fun dynamic_invariant4 ((temp___expr_167 us_rep2) (temp___is_init_164 Bool) (temp___skip_constant_165 Bool) (temp___do_toplevel_166 Bool)) Bool (let ((temp___169 (rec__static_discr__holder__c (us_split_discrs4 temp___expr_167)))) (and (in_range3 (to_rep (rec__static_discr__holder__unused (us_split_discrs4 temp___expr_167))) (to_rep temp___169) (to_base (rec__static_discr__holder__content (us_split_fields5 temp___expr_167)))) (and (dynamic_property3 1 (to_rep temp___169) (first3 (rec__static_discr__i_holder__content1 (us_split_fields3 (rec__static_discr__holder__content (us_split_fields5 temp___expr_167))))) (last3 (rec__static_discr__i_holder__content1 (us_split_fields3 (rec__static_discr__holder__content (us_split_fields5 temp___expr_167)))))) (and (= (first3 (rec__static_discr__i_holder__content1 (us_split_fields3 (rec__static_discr__holder__content (us_split_fields5 temp___expr_167))))) 1) (= (last3 (rec__static_discr__i_holder__content1 (us_split_fields3 (rec__static_discr__holder__content (us_split_fields5 temp___expr_167))))) (to_rep temp___169)))))))
(declare-const current__split_fields natural)
(declare-const current__split_fields1 natural)
(declare-const current__split_fields2 (Array Int natural))
(declare-const current__split_fields3 natural)
(declare-const result__ Int)
(declare-const static_discr__search_max__result Int)
(declare-const temp___320 natural)
(declare-const temp___3201 natural)
(declare-const temp___3202 natural)
(declare-const temp___3203 natural)
(declare-const temp___3204 (Array Int natural))
(declare-const temp___3205 natural)
(declare-const temp___319 Int)
(declare-const i Int)
(declare-const o Int)
(declare-const o1 Bool)
(declare-const i1 Int)
(declare-const result natural)
(declare-const result1 natural)
(declare-const result2 (Array Int natural))
(declare-const result3 natural)
(declare-const current__split_fields4 natural)
(declare-const current__split_fields5 natural)
(declare-const current__split_fields6 (Array Int natural))
(declare-const current__split_fields7 natural)
(declare-const result4 int__ref)
(declare-const result__1 Int)
(declare-const current__split_fields8 us_split_fields8)
(declare-const result__2 Int)
(declare-const result5 Bool)
(declare-const current__split_fields9 us_split_fields8)
(declare-const result__3 Int)
(declare-const current__split_fields10 us_split_fields__ref4)
(declare-const result__4 int__ref)
(declare-const current__split_fields11 us_split_fields8)
(declare-const result__5 Int)
(declare-const current__split_fields12 us_split_fields__ref4)
(declare-const result__6 int__ref)
(declare-const current__split_fields13 us_split_fields8)
(declare-const result__7 Int)
(declare-const current__split_fields14 us_split_fields__ref4)
(declare-const result__8 int__ref)
(declare-const current__split_fields15 us_split_fields8)
(declare-const result__9 Int)
(declare-const result6 int__ref)
(declare-const static_discr__search_max__result1 Int)
(declare-const static_discr__search_max__result2 int__ref)
(declare-const static_discr__search_max__result3 Int)
(declare-const current__split_fields16 us_split_fields__ref4)
(declare-const result__10 int__ref)
(declare-const static_discr__search_max__result4 int__ref)
(declare-const current__split_fields17 us_split_fields8)
(declare-const result__11 Int)
(declare-const static_discr__search_max__result5 Int)
(assert (and (and (= 100 (to_rep (rec__static_discr__holder__unused (us_split_discrs6 a)))) (= 100 (to_rep (rec__static_discr__holder__c (us_split_discrs6 a))))) (and (= 100 (to_rep (rec__static_discr__i_holder__unused (us_split_discrs5 (rec__static_discr__holder__content1 (us_split_fields9 a)))))) (= 100 (to_rep (rec__static_discr__i_holder__c (us_split_discrs5 (rec__static_discr__holder__content1 (us_split_fields9 a)))))))))
(assert (in_range2 e))
(assert (<= (to_rep (rec__static_discr__holder__length1 (us_split_fields9 a))) (to_rep (rec__static_discr__holder__c (us_split_discrs6 a)))))
(assert (= (mk___split_fields__ref4 (mk___split_fields4 (mk___rep3 (mk___split_discrs result result1) (mk___split_fields3 result2)) result3)) (mk___split_fields__ref4 (mk___split_fields4 (mk___rep3 (mk___split_discrs current__split_fields current__split_fields1) (mk___split_fields3 current__split_fields2)) current__split_fields3))))
(assert (= (mk___split_fields4 (mk___rep3 (mk___split_discrs current__split_fields4 current__split_fields5) (mk___split_fields3 current__split_fields6)) current__split_fields7) (us_split_fields9 a)))
(assert (= current__split_discrs (us_split_discrs6 a)))
(assert (and (and (= 100 (to_rep (rec__static_discr__holder__unused current__split_discrs))) (= 100 (to_rep (rec__static_discr__holder__c current__split_discrs)))) (and (= 100 (to_rep current__split_fields4)) (= 100 (to_rep current__split_fields5)))))
(assert (= result4 (mk_int__ref result__)))
(assert (= result__1 0))
(assert (in_range2 result__1))
(assert (= result__1 0))
(assert (< 0 (to_rep current__split_fields7)))
(assert (and (and (and (<= 1 (to_rep (rec__static_discr__holder__length1 current__split_fields8))) (<= (to_rep (rec__static_discr__holder__length1 current__split_fields8)) (to_rep (rec__static_discr__holder__length1 (us_split_fields9 a))))) (= (bool_eq (rec__static_discr__i_holder__content2 (us_split_fields7 (rec__static_discr__holder__content1 (us_split_fields9 a)))) 1 100 (rec__static_discr__i_holder__content2 (us_split_fields7 (rec__static_discr__holder__content1 current__split_fields8))) 1 100) true)) (forall ((i2 Int)) (=> (and (<= (+ (to_rep (rec__static_discr__holder__length1 current__split_fields8)) 1) i2) (<= i2 (to_rep (rec__static_discr__holder__length1 (us_split_fields9 a))))) (not (= (to_rep (select (rec__static_discr__i_holder__content2 (us_split_fields7 (rec__static_discr__holder__content1 (us_split_fields9 a)))) i2)) e))))))
(assert (and (and (=> (<= 0 2147483647) (in_range2 result__2)) (and (= 100 (to_rep (rec__static_discr__i_holder__unused (us_split_discrs5 (rec__static_discr__holder__content1 current__split_fields8))))) (= 100 (to_rep (rec__static_discr__i_holder__c (us_split_discrs5 (rec__static_discr__holder__content1 current__split_fields8))))))) (and (= result__2 0) (< 0 (to_rep (rec__static_discr__holder__length1 current__split_fields8))))))
(assert (<= 1 (to_rep (rec__static_discr__holder__length1 current__split_fields8))))
(assert (<= (to_rep (rec__static_discr__holder__length1 current__split_fields8)) (to_rep (rec__static_discr__holder__length1 (us_split_fields9 a)))))
(assert (= (bool_eq (rec__static_discr__i_holder__content2 (us_split_fields7 (rec__static_discr__holder__content1 (us_split_fields9 a)))) 1 100 (rec__static_discr__i_holder__content2 (us_split_fields7 (rec__static_discr__holder__content1 current__split_fields8))) 1 100) true))
(assert (and (= o (+ (to_rep (rec__static_discr__holder__length1 current__split_fields8)) 1)) (in_range1 (+ (to_rep (rec__static_discr__holder__length1 current__split_fields8)) 1))))
(assert (= o1 (ite (<= o i) true false)))
(assert (= result5 (ite (= o1 true) (ite (<= i (to_rep (rec__static_discr__holder__length1 (us_split_fields9 a)))) true false) false)))
(assert (= result5 true))
(assert (not (<= 1 i)))
(check-sat)
(exit)
