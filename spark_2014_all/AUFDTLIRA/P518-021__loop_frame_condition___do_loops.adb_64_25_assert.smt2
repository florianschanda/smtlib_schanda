(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__do_loops__r__f1 integer) (rec__do_loops__r__f2 integer)))))
(define-fun us_split_fields_F1__projection ((a us_split_fields)) integer (rec__do_loops__r__f1 a))
(define-fun us_split_fields_F2__projection ((a us_split_fields)) integer (rec__do_loops__r__f2 a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep (rec__do_loops__r__f1 (us_split_fields1 a))) (to_rep (rec__do_loops__r__f1 (us_split_fields1 b)))) (= (to_rep (rec__do_loops__r__f2 (us_split_fields1 a))) (to_rep (rec__do_loops__r__f2 (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const do_loops__r__f1__first__bit Int)
(declare-const do_loops__r__f1__last__bit Int)
(declare-const do_loops__r__f1__position Int)
(assert (<= 0 do_loops__r__f1__first__bit))
(assert (< do_loops__r__f1__first__bit do_loops__r__f1__last__bit))
(assert (<= 0 do_loops__r__f1__position))
(declare-const do_loops__r__f2__first__bit Int)
(declare-const do_loops__r__f2__last__bit Int)
(declare-const do_loops__r__f2__position Int)
(assert (<= 0 do_loops__r__f2__first__bit))
(assert (< do_loops__r__f2__first__bit do_loops__r__f2__last__bit))
(assert (<= 0 do_loops__r__f2__position))
(declare-fun user_eq2 (us_rep us_rep) Bool)
(declare-const dummy2 us_rep)
(declare-datatypes () ((r__ref (mk_r__ref (r__content us_rep)))))
(define-fun r__ref___projection ((a r__ref)) us_rep (r__content a))
(define-fun default_initial_assumption ((temp___expr_202 us_rep) (temp___skip_top_level_203 Bool)) Bool (and (= (to_rep (rec__do_loops__r__f1 (us_split_fields1 temp___expr_202))) 0) (= (to_rep (rec__do_loops__r__f2 (us_split_fields1 temp___expr_202))) 0)))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int us_rep))))))
(declare-fun slide ((Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int us_rep))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int us_rep)) (a__first Int) (a__last Int) (b (Array Int us_rep)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq (select a temp___idx_154) (select b (+ (- b__first a__first) temp___idx_154))) true)))) true false))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq (select a temp___idx_154) (select b (+ (- b__first a__first) temp___idx_154))) true))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int us_rep)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int us_rep) (elts a))
(define-fun of_array ((a (Array Int us_rep)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int us_rep)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int us_rep)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int us_rep)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t) (y us_t)) Bool (bool_eq1 (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((u_array__ref (mk_u_array__ref (u_array__content us_t)))))
(define-fun u_array__ref___projection ((a u_array__ref)) us_t (u_array__content a))
(declare-sort tr_arrayD1 0)
(declare-fun tr_arrayD1qtint (tr_arrayD1) Int)
(assert (forall ((i tr_arrayD1)) (and (<= 1 (tr_arrayD1qtint i)) (<= (tr_arrayD1qtint i) 100))))
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq4 (tr_arrayD1 tr_arrayD1) Bool)
(declare-const dummy4 tr_arrayD1)
(declare-datatypes () ((tr_arrayD1__ref (mk_tr_arrayD1__ref (tr_arrayD1__content tr_arrayD1)))))
(define-fun tr_arrayD1__ref___projection ((a tr_arrayD1__ref)) tr_arrayD1 (tr_arrayD1__content a))
(declare-const dummy5 (Array Int us_rep))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int us_rep)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int us_rep)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int us_rep)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq5 ((Array Int us_rep) (Array Int us_rep)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__do_loops__r_array_record__f3 (Array Int us_rep)) (rec__do_loops__r_array_record__f4 (Array Int us_rep))))))
(define-fun us_split_fields_F3__projection ((a us_split_fields2)) (Array Int us_rep) (rec__do_loops__r_array_record__f3 a))
(define-fun us_split_fields_F4__projection ((a us_split_fields2)) (Array Int us_rep) (rec__do_loops__r_array_record__f4 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___2__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (bool_eq1 (rec__do_loops__r_array_record__f3 (us_split_fields3 a)) 1 100 (rec__do_loops__r_array_record__f3 (us_split_fields3 b)) 1 100) true) (= (bool_eq1 (rec__do_loops__r_array_record__f4 (us_split_fields3 a)) 1 100 (rec__do_loops__r_array_record__f4 (us_split_fields3 b)) 1 100) true)) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const do_loops__r_array_record__f3__first__bit Int)
(declare-const do_loops__r_array_record__f3__last__bit Int)
(declare-const do_loops__r_array_record__f3__position Int)
(assert (<= 0 do_loops__r_array_record__f3__first__bit))
(assert (< do_loops__r_array_record__f3__first__bit do_loops__r_array_record__f3__last__bit))
(assert (<= 0 do_loops__r_array_record__f3__position))
(declare-const do_loops__r_array_record__f4__first__bit Int)
(declare-const do_loops__r_array_record__f4__last__bit Int)
(declare-const do_loops__r_array_record__f4__position Int)
(assert (<= 0 do_loops__r_array_record__f4__first__bit))
(assert (< do_loops__r_array_record__f4__first__bit do_loops__r_array_record__f4__last__bit))
(assert (<= 0 do_loops__r_array_record__f4__position))
(declare-fun user_eq6 (us_rep1 us_rep1) Bool)
(declare-const dummy6 us_rep1)
(declare-datatypes () ((r_array_record__ref (mk_r_array_record__ref (r_array_record__content us_rep1)))))
(define-fun r_array_record__ref___projection ((a r_array_record__ref)) us_rep1 (r_array_record__content a))
(define-fun default_initial_assumption1 ((temp___expr_227 us_rep1) (temp___skip_top_level_228 Bool)) Bool (and (forall ((temp___230 Int)) (=> (and (<= 1 temp___230) (<= temp___230 100)) (and (= (to_rep (rec__do_loops__r__f1 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 (us_split_fields3 temp___expr_227)) temp___230)))) 0) (= (to_rep (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 (us_split_fields3 temp___expr_227)) temp___230)))) 0)))) (forall ((temp___233 Int)) (=> (and (<= 1 temp___233) (<= temp___233 100)) (and (= (to_rep (rec__do_loops__r__f1 (us_split_fields1 (select (rec__do_loops__r_array_record__f4 (us_split_fields3 temp___expr_227)) temp___233)))) 0) (= (to_rep (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f4 (us_split_fields3 temp___expr_227)) temp___233)))) 0))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort tTaSP1 0)
(declare-fun tTaSP1qtint (tTaSP1) Int)
(assert (forall ((i tTaSP1)) (and (<= 1 (tTaSP1qtint i)) (<= (tTaSP1qtint i) 100))))
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq7 (tTaSP1 tTaSP1) Bool)
(declare-const dummy7 tTaSP1)
(declare-datatypes () ((tTaSP1__ref (mk_tTaSP1__ref (tTaSP1__content tTaSP1)))))
(define-fun tTaSP1__ref___projection ((a tTaSP1__ref)) tTaSP1 (tTaSP1__content a))
(define-fun default_initial_assumption2 ((temp___expr_254 (Array Int us_rep)) (temp___skip_top_level_255 Bool)) Bool (forall ((temp___256 Int)) (=> (and (<= 1 temp___256) (<= temp___256 100)) (and (= (to_rep (rec__do_loops__r__f1 (us_split_fields1 (select temp___expr_254 temp___256)))) 0) (= (to_rep (rec__do_loops__r__f2 (us_split_fields1 (select temp___expr_254 temp___256)))) 0)))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun default_initial_assumption3 ((temp___expr_210 (Array Int us_rep)) (temp___skip_top_level_211 Bool)) Bool (forall ((temp___212 Int)) (=> (and (<= 1 temp___212) (<= temp___212 100)) (and (= (to_rep (rec__do_loops__r__f1 (us_split_fields1 (select temp___expr_210 temp___212)))) 0) (= (to_rep (rec__do_loops__r__f2 (us_split_fields1 (select temp___expr_210 temp___212)))) 0)))))
(define-fun dynamic_invariant2 ((temp___expr_218 us_t) (temp___is_init_214 Bool) (temp___skip_constant_215 Bool) (temp___do_toplevel_216 Bool) (temp___do_typ_inv_217 Bool)) Bool (=> (not (= temp___skip_constant_215 true)) (dynamic_property 1 2147483647 (first1 temp___expr_218) (last1 temp___expr_218))))
(declare-const rliteral integer)
(assert (= (integerqtint rliteral) 0))
(declare-const d__split_fields (Array Int us_rep))
(declare-const d__split_fields1 (Array Int us_rep))
(declare-const a (Array Int us_rep))
(declare-const i Int)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const d_outer__split_fields (Array Int us_rep))
(declare-const d_outer__split_fields1 (Array Int us_rep))
(declare-const i3 Int)
(declare-const d_outer__split_fields2 integer)
(declare-const d_outer__split_fields3 integer)
(declare-const o integer)
(declare-const o1 integer)
(declare-const temp___272 (Array Int us_rep))
(declare-const temp___277 us_rep1)
(declare-const temp___274 (Array Int us_rep))
(declare-const temp___297 us_rep1)
(declare-const temp___294 (Array Int us_rep))
(declare-const temp___292 (Array Int us_rep))
(declare-const temp___318 (Array Int us_rep))
(declare-const temp___323 us_rep1)
(declare-const temp___321 (Array Int us_rep))
(declare-const o2 Int)
(declare-const o3 (Array Int us_rep))
(declare-const o4 us_split_fields2)
(declare-const temp___342 us_rep1)
(declare-const d__split_fields2 us_split_fields2)
(declare-const do_loops__p__a (Array Int us_rep))
(declare-const result map__ref)
(declare-const a1 (Array Int us_rep))
(declare-const result1 int__ref)
(declare-const i4 Int)
(declare-const d__split_fields3 us_split_fields2)
(declare-const i5 Int)
(declare-const result2 us_split_fields__ref1)
(declare-const d__split_fields4 us_split_fields2)
(declare-const d__split_fields5 us_split_fields__ref1)
(declare-const i6 int__ref)
(declare-const d__split_fields6 us_split_fields2)
(declare-const i7 Int)
(declare-const d__split_fields7 us_split_fields__ref1)
(declare-const i8 int__ref)
(declare-const d__split_fields8 us_split_fields2)
(declare-const i9 Int)
(declare-const result3 int__ref)
(declare-const i10 Int)
(declare-const d__split_fields9 us_split_fields2)
(declare-const i11 Int)
(declare-const result4 us_split_fields__ref1)
(declare-const d__split_fields10 us_split_fields2)
(declare-const result5 us_split_fields__ref1)
(declare-const d__split_fields11 us_split_fields2)
(declare-const d__split_fields12 us_split_fields__ref1)
(declare-const i12 int__ref)
(declare-const d__split_fields13 us_split_fields2)
(declare-const i13 Int)
(declare-const d__split_fields14 us_split_fields__ref1)
(declare-const i14 int__ref)
(declare-const d__split_fields15 us_split_fields2)
(declare-const i15 Int)
(declare-const result6 int__ref)
(declare-const i16 Int)
(declare-const d__split_fields16 us_split_fields2)
(declare-const i17 Int)
(declare-const result7 us_split_fields__ref1)
(declare-const d__split_fields17 us_split_fields2)
(declare-const result8 us_split_fields__ref1)
(declare-const d__split_fields18 us_split_fields2)
(declare-const result9 us_split_fields__ref1)
(declare-const d__split_fields19 us_split_fields2)
(declare-const d__split_fields20 us_split_fields__ref1)
(declare-const i18 int__ref)
(declare-const d__split_fields21 us_split_fields2)
(declare-const i19 Int)
(declare-const d__split_fields22 us_split_fields__ref1)
(declare-const i20 int__ref)
(declare-const d__split_fields23 us_split_fields2)
(declare-const i21 Int)
(declare-const result10 int__ref)
(declare-const i22 Int)
(declare-const d__split_fields24 us_split_fields2)
(declare-const i23 Int)
(declare-const result11 us_split_fields__ref1)
(declare-const d__split_fields25 us_split_fields2)
(declare-const result12 us_split_fields__ref1)
(declare-const d__split_fields26 us_split_fields2)
(declare-const result13 us_split_fields__ref1)
(declare-const d__split_fields27 us_split_fields2)
(declare-const d__split_fields28 us_split_fields__ref1)
(declare-const d__split_fields29 us_split_fields2)
(assert (default_initial_assumption1 (mk___rep1 (mk___split_fields1 d__split_fields d__split_fields1)) false))
(assert (default_initial_assumption2 a false))
(assert (= (to_rep o1) 100))
(assert (= (to_rep o) 1))
(assert (= result (mk_map__ref a)))
(assert (= a1 (slide do_loops__p__a (to_rep (first (mk 1 100))) 1)))
(assert (= result1 (mk_int__ref i)))
(assert (= i4 1))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= temp___272 d__split_fields)))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= temp___277 (mk___rep1 (mk___split_fields1 d__split_fields d__split_fields1)))))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= temp___274 d__split_fields1)))
(assert (=> (and (<= 1 i4) (<= i4 100)) (and (and (forall ((temp___278 Int)) (=> (and (<= 1 temp___278) (<= temp___278 100)) (ite (or (< 100 temp___278) (or (< temp___278 1) (<= i5 temp___278))) (= (select (rec__do_loops__r_array_record__f3 d__split_fields3) temp___278) (select (rec__do_loops__r_array_record__f3 (us_split_fields3 temp___277)) temp___278)) (= (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 d__split_fields3) temp___278))) (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 (us_split_fields3 temp___277)) temp___278))))))) (= (rec__do_loops__r_array_record__f4 d__split_fields3) (rec__do_loops__r_array_record__f4 (us_split_fields3 temp___277)))) (and (<= 1 i5) (<= i5 100)))))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= result2 (mk___split_fields__ref1 d__split_fields3))))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= d__split_fields4 (mk___split_fields1 (store (rec__do_loops__r_array_record__f3 d__split_fields3) i5 (mk___rep (mk___split_fields rliteral (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 d__split_fields3) i5)))))) (rec__do_loops__r_array_record__f4 d__split_fields3)))))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= (to_rep (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 d__split_fields4) i5)))) (to_rep (rec__do_loops__r__f2 (us_split_fields1 (select temp___272 i5)))))))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= (bool_eq1 (rec__do_loops__r_array_record__f4 d__split_fields4) 1 100 temp___274 1 100) true)))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= i5 100)))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= i6 (mk_int__ref i5))))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= d__split_fields5 (mk___split_fields__ref1 d__split_fields4))))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= i7 i5)))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= d__split_fields6 d__split_fields4)))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= i8 i6)))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= d__split_fields7 d__split_fields5)))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= i9 i7)))
(assert (=> (and (<= 1 i4) (<= i4 100)) (= d__split_fields8 d__split_fields6)))
(assert (=> (not (and (<= 1 i4) (<= i4 100))) (= i8 (mk_int__ref i4))))
(assert (=> (not (and (<= 1 i4) (<= i4 100))) (= d__split_fields7 (mk___split_fields__ref1 (mk___split_fields1 d__split_fields d__split_fields1)))))
(assert (=> (not (and (<= 1 i4) (<= i4 100))) (= i9 i4)))
(assert (=> (not (and (<= 1 i4) (<= i4 100))) (= d__split_fields8 d__split_fields2)))
(assert (= result3 (mk_int__ref i1)))
(assert (= i10 1))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= temp___297 (mk___rep1 (us_split_fields__content1 d__split_fields7)))))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= temp___294 (rec__do_loops__r_array_record__f4 (us_split_fields__content1 d__split_fields7)))))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= temp___292 (rec__do_loops__r_array_record__f3 (us_split_fields__content1 d__split_fields7)))))
(assert (=> (and (<= 1 i10) (<= i10 100)) (and (and (forall ((temp___298 Int)) (=> (and (<= 1 temp___298) (<= temp___298 100)) (ite (or (< 100 temp___298) (or (< temp___298 1) (<= i11 temp___298))) (= (select (rec__do_loops__r_array_record__f3 d__split_fields9) temp___298) (select (rec__do_loops__r_array_record__f3 (us_split_fields3 temp___297)) temp___298)) (= (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 d__split_fields9) temp___298))) (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 (us_split_fields3 temp___297)) temp___298))))))) (forall ((temp___299 Int)) (=> (and (<= 1 temp___299) (<= temp___299 100)) (ite (or (< 100 temp___299) (or (< temp___299 1) (<= i11 temp___299))) (= (select (rec__do_loops__r_array_record__f4 d__split_fields9) temp___299) (select (rec__do_loops__r_array_record__f4 (us_split_fields3 temp___297)) temp___299)) (= (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f4 d__split_fields9) temp___299))) (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f4 (us_split_fields3 temp___297)) temp___299)))))))) (and (<= 1 i11) (<= i11 100)))))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= result4 (mk___split_fields__ref1 d__split_fields9))))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= d__split_fields10 (mk___split_fields1 (store (rec__do_loops__r_array_record__f3 d__split_fields9) i11 (mk___rep (mk___split_fields rliteral (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 d__split_fields9) i11)))))) (rec__do_loops__r_array_record__f4 d__split_fields9)))))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= result5 (mk___split_fields__ref1 d__split_fields10))))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= d__split_fields11 (mk___split_fields1 (rec__do_loops__r_array_record__f3 d__split_fields10) (store (rec__do_loops__r_array_record__f4 d__split_fields10) i11 (mk___rep (mk___split_fields rliteral (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f4 d__split_fields10) i11))))))))))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= (to_rep (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 d__split_fields11) i11)))) (to_rep (rec__do_loops__r__f2 (us_split_fields1 (select temp___292 i11)))))))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= (bool_eq1 (rec__do_loops__r_array_record__f4 d__split_fields11) 1 100 temp___294 1 100) true)))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= i11 100)))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= i12 (mk_int__ref i11))))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= d__split_fields12 (mk___split_fields__ref1 d__split_fields11))))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= i13 i11)))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= d__split_fields13 d__split_fields11)))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= i14 i12)))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= d__split_fields14 d__split_fields12)))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= i15 i13)))
(assert (=> (and (<= 1 i10) (<= i10 100)) (= d__split_fields15 d__split_fields13)))
(assert (=> (not (and (<= 1 i10) (<= i10 100))) (= i14 (mk_int__ref i10))))
(assert (=> (not (and (<= 1 i10) (<= i10 100))) (= d__split_fields14 d__split_fields7)))
(assert (=> (not (and (<= 1 i10) (<= i10 100))) (= i15 i10)))
(assert (=> (not (and (<= 1 i10) (<= i10 100))) (= d__split_fields15 d__split_fields8)))
(assert (= result6 (mk_int__ref i2)))
(assert (= i16 1))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= temp___318 (rec__do_loops__r_array_record__f3 (us_split_fields__content1 d__split_fields14)))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= temp___323 (mk___rep1 (us_split_fields__content1 d__split_fields14)))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= temp___321 (rec__do_loops__r_array_record__f3 (us_split_fields__content1 d__split_fields14)))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (and (<= 1 i17) (<= i17 100))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (default_initial_assumption1 (mk___rep1 (mk___split_fields1 d_outer__split_fields d_outer__split_fields1)) false)))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= result7 (mk___split_fields__ref1 d__split_fields16))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= d__split_fields17 (mk___split_fields1 (store (rec__do_loops__r_array_record__f3 d__split_fields16) i17 (mk___rep (mk___split_fields rliteral (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 d__split_fields16) i17)))))) (rec__do_loops__r_array_record__f4 d__split_fields16)))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= result8 (mk___split_fields__ref1 d__split_fields17))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= d__split_fields18 (mk___split_fields1 (rec__do_loops__r_array_record__f3 d__split_fields17) (store (rec__do_loops__r_array_record__f4 d__split_fields17) i17 (mk___rep (mk___split_fields rliteral (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f4 d__split_fields17) i17))))))))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= result9 (mk___split_fields__ref1 d__split_fields18))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= d__split_fields19 (mk___split_fields1 d_outer__split_fields d_outer__split_fields1))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= (to_rep (rec__do_loops__r__f1 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 d__split_fields19) i17)))) (to_rep (rec__do_loops__r__f1 (us_split_fields1 (select temp___318 i17)))))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= (to_rep (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 d__split_fields19) i17)))) (to_rep (rec__do_loops__r__f2 (us_split_fields1 (select temp___321 i17)))))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= i17 100)))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= i18 (mk_int__ref i17))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= d__split_fields20 (mk___split_fields__ref1 d__split_fields19))))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= i19 i17)))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= d__split_fields21 d__split_fields19)))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= i20 i18)))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= d__split_fields22 d__split_fields20)))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= i21 i19)))
(assert (=> (and (<= 1 i16) (<= i16 100)) (= d__split_fields23 d__split_fields21)))
(assert (=> (not (and (<= 1 i16) (<= i16 100))) (= i20 (mk_int__ref i16))))
(assert (=> (not (and (<= 1 i16) (<= i16 100))) (= d__split_fields22 d__split_fields14)))
(assert (=> (not (and (<= 1 i16) (<= i16 100))) (= i21 i16)))
(assert (=> (not (and (<= 1 i16) (<= i16 100))) (= d__split_fields23 d__split_fields15)))
(assert (= result10 (mk_int__ref i3)))
(assert (= i22 1))
(assert (<= 1 i22))
(assert (<= i22 100))
(assert (and (forall ((temp___351 Int)) (=> (and (<= 1 temp___351) (<= temp___351 100)) (ite (or (< 100 temp___351) (or (< temp___351 1) (<= i23 temp___351))) (= (select (rec__do_loops__r_array_record__f4 d__split_fields24) temp___351) (select (rec__do_loops__r_array_record__f4 (us_split_fields__content1 d__split_fields22)) temp___351)) (= (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f4 d__split_fields24) temp___351))) (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f4 (us_split_fields__content1 d__split_fields22)) temp___351))))))) (and (<= 1 i23) (<= i23 100))))
(assert (and (= (to_rep d_outer__split_fields2) 0) (= (to_rep d_outer__split_fields3) 0)))
(assert (= result11 (mk___split_fields__ref1 d__split_fields24)))
(assert (= d__split_fields25 (mk___split_fields1 (store (rec__do_loops__r_array_record__f3 d__split_fields24) i23 (mk___rep (mk___split_fields rliteral (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 d__split_fields24) i23)))))) (rec__do_loops__r_array_record__f4 d__split_fields24))))
(assert (= result12 (mk___split_fields__ref1 d__split_fields25)))
(assert (= d__split_fields26 (mk___split_fields1 (rec__do_loops__r_array_record__f3 d__split_fields25) (store (rec__do_loops__r_array_record__f4 d__split_fields25) i23 (mk___rep (mk___split_fields rliteral (rec__do_loops__r__f2 (us_split_fields1 (select (rec__do_loops__r_array_record__f4 d__split_fields25) i23)))))))))
(assert (=> (< 1 i23) (and (<= 1 (- i23 1)) (<= (- i23 1) 100))))
(assert (=> (< 1 i23) (= o2 (- i23 1))))
(assert (=> (< 1 i23) (= o3 (store (rec__do_loops__r_array_record__f3 d__split_fields26) o2 (mk___rep (mk___split_fields d_outer__split_fields2 d_outer__split_fields3))))))
(assert (=> (< 1 i23) (= o4 (mk___split_fields1 o3 (rec__do_loops__r_array_record__f4 d__split_fields26)))))
(assert (=> (< 1 i23) (= temp___342 (mk___rep1 o4))))
(assert (=> (< 1 i23) (= result13 (mk___split_fields__ref1 d__split_fields26))))
(assert (=> (< 1 i23) (= d__split_fields27 (us_split_fields3 temp___342))))
(assert (=> (< 1 i23) (= d__split_fields28 (mk___split_fields__ref1 d__split_fields27))))
(assert (=> (< 1 i23) (= d__split_fields29 d__split_fields27)))
(assert (=> (not (< 1 i23)) (= d__split_fields28 (mk___split_fields__ref1 d__split_fields26))))
(assert (=> (not (< 1 i23)) (= d__split_fields29 d__split_fields26)))
(assert (not (= (to_rep (rec__do_loops__r__f1 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 (us_split_fields__content1 d__split_fields28)) i23)))) (to_rep (rec__do_loops__r__f1 (us_split_fields1 (select (rec__do_loops__r_array_record__f3 (us_split_fields__content1 d__split_fields22)) i23)))))))
(check-sat)
(exit)
