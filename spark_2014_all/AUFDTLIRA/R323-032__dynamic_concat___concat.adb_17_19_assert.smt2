(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range temp___expr_39)))
(declare-fun id (Int) Int)
(declare-fun id__function_guard (Int Int) Bool)
(assert (forall ((x Int)) (! (=> (dynamic_invariant x true true true true) (dynamic_invariant (id x) true false true true)) :pattern ((id x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant x true true true true) (= (id x) x)) :pattern ((id x)))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const d Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort tindexB 0)
(declare-fun tindexBqtint (tindexB) Int)
(assert (forall ((i tindexB)) (and (<= (- 2147483648) (tindexBqtint i)) (<= (tindexBqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (tindexB tindexB) Bool)
(declare-const dummy1 tindexB)
(declare-datatypes () ((tindexB__ref (mk_tindexB__ref (tindexB__content tindexB)))))
(define-fun tindexB__ref___projection ((a tindexB__ref)) tindexB (tindexB__content a))
(define-fun to_rep ((x tindexB)) Int (tindexBqtint x))
(declare-fun of_rep (Int) tindexB)
(assert (forall ((x tindexB)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x tindexB)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-const first Int)
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (tindexB tindexB) Bool)
(declare-const dummy2 tindexB)
(declare-datatypes () ((index__ref (mk_index__ref (index__content tindexB)))))
(define-fun index__ref___projection ((a index__ref)) tindexB (index__content a))
(define-fun to_rep1 ((x natural)) Int (naturalqtint x))
(declare-fun of_rep1 (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x natural)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural))) (forall ((first1 Int)) (! (= (slide a first1 first1) a) :pattern ((slide a first1 first1))))))
(assert (forall ((a (Array Int natural))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int) (b (Array Int natural)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-fun concat1 ((Array Int natural) Int Int (Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun concat_singleton_left (natural Int (Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a natural)) (forall ((b (Array Int natural))) (forall ((a_first Int) (b_first Int) (b_last Int)) (! (and (= (select (concat_singleton_left a a_first b b_first b_last) a_first) a) (forall ((i Int)) (! (=> (< a_first i) (= (select (concat_singleton_left a a_first b b_first b_last) i) (select b (+ (- i a_first) (- b_first 1))))) :pattern ((select (concat_singleton_left a a_first b b_first b_last) i))))) :pattern ((concat_singleton_left a a_first b b_first b_last)))))))
(declare-fun concat_singleton_right ((Array Int natural) Int Int natural) (Array Int natural))
(assert (forall ((a (Array Int natural))) (forall ((b natural)) (forall ((a_first Int) (a_last Int)) (! (and (= (select (concat_singleton_right a a_first a_last b) (+ a_last 1)) b) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (concat_singleton_right a a_first a_last b) i) (select a i))) :pattern ((select (concat_singleton_right a a_first a_last b) i)) :pattern ((select a i))))) :pattern ((concat_singleton_right a a_first a_last b)))))))
(declare-fun concat_singletons (natural Int natural) (Array Int natural))
(assert (forall ((a natural) (b natural)) (forall ((a_first Int)) (! (and (= (select (concat_singletons a a_first b) a_first) a) (= (select (concat_singletons a a_first b) (+ a_first 1)) b)) :pattern ((concat_singletons a a_first b))))))
(declare-fun singleton1 (natural Int) (Array Int natural))
(assert (forall ((v natural)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(declare-sort t 0)
(declare-fun first1 (t) tindexB)
(declare-fun last (t) tindexB)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first1 (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int natural)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))
(define-fun of_array ((a (Array Int natural)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first2 ((a us_t)) Int (to_rep (first1 (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first2 a) (last1 a)) (+ (- (last1 a) (first2 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int natural)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int natural)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int natural)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first1 (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first1 (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((tnat_arrayB__ref (mk_tnat_arrayB__ref (tnat_arrayB__content us_t)))))
(define-fun tnat_arrayB__ref___projection ((a tnat_arrayB__ref)) us_t (tnat_arrayB__content a))
(declare-sort t1 0)
(declare-fun first3 (t1) tindexB)
(declare-fun last2 (t1) tindexB)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first3 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int natural)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int natural) (elts1 a))
(define-fun of_array1 ((a (Array Int natural)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first4 ((a us_t1)) Int (to_rep (first3 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first4 a) (last3 a)) (+ (- (last3 a) (first4 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int natural)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int natural)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int natural)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep (first3 (rt1 x))) (to_rep (last2 (rt1 x))) (elts1 y) (to_rep (first3 (rt1 y))) (to_rep (last2 (rt1 y)))))
(declare-fun user_eq4 (us_t1 us_t1) Bool)
(declare-const dummy4 us_t1)
(declare-datatypes () ((nat_array__ref (mk_nat_array__ref (nat_array__content us_t1)))))
(define-fun nat_array__ref___projection ((a nat_array__ref)) us_t1 (nat_array__content a))
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq5 (tindexB tindexB) Bool)
(declare-const dummy5 tindexB)
(declare-datatypes () ((t3b__ref (mk_t3b__ref (t3b__content tindexB)))))
(define-fun t3b__ref___projection ((a t3b__ref)) tindexB (t3b__content a))
(declare-sort t2 0)
(declare-fun first5 (t2) tindexB)
(declare-fun last4 (t2) tindexB)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first5 (mk2 f l))) f) (= (to_rep (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int natural)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int natural) (elts2 a))
(define-fun of_array2 ((a (Array Int natural)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first6 ((a us_t2)) Int (to_rep (first5 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first6 a) (last5 a)) (+ (- (last5 a) (first6 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int natural)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int natural)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int natural)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep (first5 (rt2 x))) (to_rep (last4 (rt2 x))) (elts2 y) (to_rep (first5 (rt2 y))) (to_rep (last4 (rt2 y)))))
(declare-fun user_eq6 (us_t2 us_t2) Bool)
(declare-const dummy6 us_t2)
(declare-datatypes () ((t4b__ref (mk_t4b__ref (t4b__content us_t2)))))
(define-fun t4b__ref___projection ((a t4b__ref)) us_t2 (t4b__content a))
(declare-const a__first tindexB)
(declare-const a__last tindexB)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property5 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq7 (tindexB tindexB) Bool)
(declare-const dummy7 tindexB)
(declare-datatypes () ((t5b__ref (mk_t5b__ref (t5b__content tindexB)))))
(define-fun t5b__ref___projection ((a t5b__ref)) tindexB (t5b__content a))
(declare-sort t3 0)
(declare-fun first7 (t3) tindexB)
(declare-fun last6 (t3) tindexB)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first7 (mk3 f l))) f) (= (to_rep (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property5 range_first range_last low) (dynamic_property5 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int natural)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int natural) (elts3 a))
(define-fun of_array3 ((a (Array Int natural)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first8 ((a us_t3)) Int (to_rep (first7 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first8 a) (last7 a)) (+ (- (last7 a) (first8 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int natural)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int natural)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int natural)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq4 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep (first7 (rt3 x))) (to_rep (last6 (rt3 x))) (elts3 y) (to_rep (first7 (rt3 y))) (to_rep (last6 (rt3 y)))))
(declare-fun user_eq8 (us_t3 us_t3) Bool)
(declare-const dummy8 us_t3)
(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content us_t3)))))
(define-fun t6b__ref___projection ((a t6b__ref)) us_t3 (t6b__content a))
(declare-const b__first tindexB)
(declare-const b__last tindexB)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-sort t7b 0)
(declare-fun t7bqtint (t7b) Int)
(assert (forall ((i t7b)) (and (<= 4 (t7bqtint i)) (<= (t7bqtint i) 7))))
(define-fun in_range2 ((x Int)) Bool (and (<= 4 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq9 (t7b t7b) Bool)
(declare-const dummy9 t7b)
(declare-datatypes () ((t7b__ref (mk_t7b__ref (t7b__content t7b)))))
(define-fun t7b__ref___projection ((a t7b__ref)) t7b (t7b__content a))
(declare-sort t9b 0)
(declare-fun t9bqtint (t9b) Int)
(assert (forall ((i t9b)) (and (<= 5 (t9bqtint i)) (<= (t9bqtint i) 8))))
(define-fun in_range3 ((x Int)) Bool (and (<= 5 x) (<= x 8)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq10 (t9b t9b) Bool)
(declare-const dummy10 t9b)
(declare-datatypes () ((t9b__ref (mk_t9b__ref (t9b__content t9b)))))
(define-fun t9b__ref___projection ((a t9b__ref)) t9b (t9b__content a))
(declare-const c__first tindexB)
(declare-const c__last tindexB)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_property7 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq11 (tindexB tindexB) Bool)
(declare-const dummy11 tindexB)
(declare-datatypes () ((t12b__ref (mk_t12b__ref (t12b__content tindexB)))))
(define-fun t12b__ref___projection ((a t12b__ref)) tindexB (t12b__content a))
(declare-sort t4 0)
(declare-fun first9 (t4) tindexB)
(declare-fun last8 (t4) tindexB)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first9 (mk4 f l))) f) (= (to_rep (last8 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property7 range_first range_last low) (dynamic_property7 range_first range_last high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int natural)) (rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int natural) (elts4 a))
(define-fun of_array4 ((a (Array Int natural)) (f Int) (l Int)) us_t4 (mk___t4 a (mk4 f l)))
(define-fun first10 ((a us_t4)) Int (to_rep (first9 (rt4 a))))
(define-fun last9 ((a us_t4)) Int (to_rep (last8 (rt4 a))))
(define-fun length4 ((a us_t4)) Int (ite (<= (first10 a) (last9 a)) (+ (- (last9 a) (first10 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int natural)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int natural)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int natural)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq5 ((x us_t4) (y us_t4)) Bool (bool_eq (elts4 x) (to_rep (first9 (rt4 x))) (to_rep (last8 (rt4 x))) (elts4 y) (to_rep (first9 (rt4 y))) (to_rep (last8 (rt4 y)))))
(declare-fun user_eq12 (us_t4 us_t4) Bool)
(declare-const dummy12 us_t4)
(declare-datatypes () ((t13b__ref (mk_t13b__ref (t13b__content us_t4)))))
(define-fun t13b__ref___projection ((a t13b__ref)) us_t4 (t13b__content a))
(declare-fun concat__a__aggregate_def (Int Int Int) us_t2)
(declare-fun concat__b__aggregate_def (Int Int Int) us_t3)
(declare-fun temp_____aggregate_def_241 (Int Int Int Int Int Int Int Int Int Int) us_t4)
(define-fun dynamic_invariant1 ((temp___expr_201 Int) (temp___is_init_197 Bool) (temp___skip_constant_198 Bool) (temp___do_toplevel_199 Bool) (temp___do_typ_inv_200 Bool)) Bool (=> (or (= temp___is_init_197 true) (<= first 8)) (dynamic_property first 8 temp___expr_201)))
(assert (= first d))
(define-fun dynamic_invariant2 ((temp___expr_208 us_t1) (temp___is_init_204 Bool) (temp___skip_constant_205 Bool) (temp___do_toplevel_206 Bool) (temp___do_typ_inv_207 Bool)) Bool (=> (not (= temp___skip_constant_205 true)) (and (dynamic_property2 first 8 (first4 temp___expr_208) (last3 temp___expr_208)) (and (= (first4 temp___expr_208) d) (= (last3 temp___expr_208) 8)))))
(declare-const rliteral natural)
(assert (= (naturalqtint rliteral) 0))
(assert (forall ((temp___215 Int) (temp___216 Int) (temp___217 Int)) (let ((temp___214 (concat__a__aggregate_def temp___215 temp___216 temp___217))) (=> (dynamic_invariant temp___215 true true true true) (and (=> (dynamic_property1 first 8 temp___216 temp___217) (and (= (first6 temp___214) temp___216) (= (last5 temp___214) temp___217))) (forall ((temp___218 Int)) (= (select (to_array2 temp___214) temp___218) rliteral)))))))
(declare-const rliteral1 natural)
(assert (= (naturalqtint rliteral1) 1))
(assert (forall ((temp___223 Int) (temp___224 Int) (temp___225 Int)) (let ((temp___222 (concat__b__aggregate_def temp___223 temp___224 temp___225))) (=> (dynamic_invariant temp___223 true true true true) (and (=> (dynamic_property1 first 8 temp___224 temp___225) (and (= (first8 temp___222) temp___224) (= (last7 temp___222) temp___225))) (forall ((temp___226 Int)) (= (select (to_array3 temp___222) temp___226) rliteral1)))))))
(assert (forall ((temp___243 Int) (temp___244 Int) (temp___245 Int) (temp___246 Int) (temp___247 Int) (temp___248 Int) (temp___249 Int) (temp___250 Int) (temp___251 Int) (temp___252 Int)) (let ((temp___242 (temp_____aggregate_def_241 temp___243 temp___244 temp___245 temp___246 temp___247 temp___248 temp___249 temp___250 temp___251 temp___252))) (=> (and (and (and (and (and (and (and (dynamic_invariant temp___243 true true true true) (dynamic_invariant temp___244 true true true true)) (dynamic_invariant temp___245 true true true true)) (dynamic_invariant temp___246 true true true true)) (dynamic_invariant temp___247 true true true true)) (dynamic_invariant temp___248 true true true true)) (dynamic_invariant temp___249 true true true true)) (dynamic_invariant temp___250 true true true true)) (and (=> (dynamic_property1 first 8 temp___251 temp___252) (and (= (first10 temp___242) temp___251) (= (last9 temp___242) temp___252))) (and (and (and (and (and (and (and (= (select (to_array4 temp___242) (+ d 0)) rliteral) (= (select (to_array4 temp___242) (+ d 1)) rliteral)) (= (select (to_array4 temp___242) (+ d 2)) rliteral)) (= (select (to_array4 temp___242) (+ d 3)) rliteral)) (= (select (to_array4 temp___242) (+ d 4)) rliteral1)) (= (select (to_array4 temp___242) (+ d 5)) rliteral1)) (= (select (to_array4 temp___242) (+ d 6)) rliteral1)) (= (select (to_array4 temp___242) (+ d 7)) rliteral1)))))))
(declare-const v Int)
(declare-const a (Array Int natural))
(declare-const b (Array Int natural))
(declare-const c (Array Int natural))
(declare-const o Int)
(declare-const temp___220 (Array Int natural))
(declare-const temp___2201 t2)
(declare-const concat__a__assume (Array Int natural))
(declare-const concat__a__assume1 t1)
(declare-const temp___228 (Array Int natural))
(declare-const temp___2281 t3)
(declare-const concat__b__assume (Array Int natural))
(declare-const concat__b__assume1 t1)
(declare-const temp___235 (Array Int natural))
(declare-const temp___237 (Array Int natural))
(declare-const temp___232 (Array Int natural))
(declare-const temp___236 (Array Int natural))
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const temp___238 Int)
(declare-const us Int)
(declare-const o5 Int)
(declare-const temp___239 (Array Int natural))
(declare-const temp___2391 t)
(declare-const concat__c__assume (Array Int natural))
(declare-const concat__c__assume1 t1)
(declare-const result Int)
(declare-const v1 Int)
(declare-const result1 (Array Int natural))
(declare-const a1 (Array Int natural))
(declare-const result2 (Array Int natural))
(declare-const b1 (Array Int natural))
(declare-const result3 (Array Int natural))
(declare-const c1 (Array Int natural))
(assert (and (= o (id 1)) (and (in_range o) (= o 1))))
(assert (= result v))
(assert (= v1 o))
(assert (in_range v1))
(assert (= v1 d))
(assert (in_range d))
(assert (= (to_rep (first5 (rt2 (concat__a__aggregate_def 0 d 8)))) d))
(assert (= (to_rep (last4 (rt2 (concat__a__aggregate_def 0 d 8)))) 8))
(assert (= (mk___t2 temp___220 temp___2201) (concat__a__aggregate_def 0 d 8)))
(assert (= (ite (<= (to_rep (first5 temp___2201)) (to_rep (last4 temp___2201))) (+ (- (to_rep (last4 temp___2201)) (to_rep (first5 temp___2201))) 1) 0) (ite (<= first 8) (+ (- 8 first) 1) 0)))
(assert (= (slide temp___220 (to_rep (first5 temp___2201)) first) concat__a__assume))
(assert (= (mk1 first 8) concat__a__assume1))
(assert (= result1 a))
(assert (= a1 concat__a__assume))
(assert (= (to_rep a__first) (to_rep (first3 concat__a__assume1))))
(assert (= (to_rep a__last) (to_rep (last2 concat__a__assume1))))
(assert (and (dynamic_property2 first 8 (to_rep a__first) (to_rep a__last)) (and (= (to_rep a__first) d) (= (to_rep a__last) 8))))
(assert (= (to_rep (first7 (rt3 (concat__b__aggregate_def 1 d 8)))) d))
(assert (= (to_rep (last6 (rt3 (concat__b__aggregate_def 1 d 8)))) 8))
(assert (= (mk___t3 temp___228 temp___2281) (concat__b__aggregate_def 1 d 8)))
(assert (= (ite (<= (to_rep (first7 temp___2281)) (to_rep (last6 temp___2281))) (+ (- (to_rep (last6 temp___2281)) (to_rep (first7 temp___2281))) 1) 0) (ite (<= first 8) (+ (- 8 first) 1) 0)))
(assert (= (slide temp___228 (to_rep (first7 temp___2281)) first) concat__b__assume))
(assert (= (mk1 first 8) concat__b__assume1))
(assert (= result2 b))
(assert (= b1 concat__b__assume))
(assert (= (to_rep b__first) (to_rep (first3 concat__b__assume1))))
(assert (= (to_rep b__last) (to_rep (last2 concat__b__assume1))))
(assert (and (dynamic_property2 first 8 (to_rep b__first) (to_rep b__last)) (and (= (to_rep b__first) d) (= (to_rep b__last) 8))))
(assert (=> (<= 5 8) (and (and (<= (to_rep b__first) 5) (<= 5 (to_rep b__last))) (and (<= (to_rep b__first) 8) (<= 8 (to_rep b__last))))))
(assert (= temp___235 b1))
(assert (= temp___237 temp___235))
(assert (=> (<= 4 7) (and (and (<= (to_rep a__first) 4) (<= 4 (to_rep a__last))) (and (<= (to_rep a__first) 7) (<= 7 (to_rep a__last))))))
(assert (= temp___232 a1))
(assert (= temp___236 temp___232))
(assert (=> (<= 5 8) (= o1 (+ (- 8 5) 1))))
(assert (=> (not (<= 5 8)) (= o1 0)))
(assert (=> (<= 4 7) (= o2 (+ (- 7 4) 1))))
(assert (=> (not (<= 4 7)) (= o2 0)))
(assert (= o3 (+ o2 o1)))
(assert (= o4 (+ first o3)))
(assert (= temp___238 (- o4 1)))
(assert (and (= us temp___238) (dynamic_property first 8 temp___238)))
(assert (= o5 temp___238))
(assert (= (slide (concat1 temp___236 4 7 temp___237 5 8) 4 first) temp___239))
(assert (= (mk first o5) temp___2391))
(assert (= (ite (<= (to_rep (first1 temp___2391)) (to_rep (last temp___2391))) (+ (- (to_rep (last temp___2391)) (to_rep (first1 temp___2391))) 1) 0) (ite (<= first 8) (+ (- 8 first) 1) 0)))
(assert (= (slide temp___239 (to_rep (first1 temp___2391)) first) concat__c__assume))
(assert (= (mk1 first 8) concat__c__assume1))
(assert (= result3 c))
(assert (= c1 concat__c__assume))
(assert (= (to_rep c__first) (to_rep (first3 concat__c__assume1))))
(assert (= (to_rep c__last) (to_rep (last2 concat__c__assume1))))
(assert (and (dynamic_property2 first 8 (to_rep c__first) (to_rep c__last)) (and (= (to_rep c__first) d) (= (to_rep c__last) 8))))
(assert (= (to_rep c__first) 1))
(assert (not (= (let ((temp___256 (temp_____aggregate_def_241 0 0 0 0 1 1 1 1 d (+ d 7)))) (bool_eq c1 (to_rep c__first) (to_rep c__last) (elts4 temp___256) (to_rep (first9 (rt4 temp___256))) (to_rep (last8 (rt4 temp___256))))) true)))
(check-sat)
(exit)
