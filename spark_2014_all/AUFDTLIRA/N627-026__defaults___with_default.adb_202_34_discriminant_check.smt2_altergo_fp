(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type natural

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : natural, natural -> bool

logic dummy : natural

type natural__ref = { natural__content : natural
}

function natural__ref___projection(a: natural__ref) : natural =
  (a).natural__content

logic c : int

logic attr__ATTRIBUTE_ADDRESS : int

type scalar_with_default

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : scalar_with_default, scalar_with_default -> bool

logic dummy1 : scalar_with_default

type scalar_with_default__ref = { scalar_with_default__content :
scalar_with_default
}

function scalar_with_default__ref___8__projection(a: scalar_with_default__ref) : scalar_with_default =
  (a).scalar_with_default__content

logic to_rep : scalar_with_default -> int

logic of_rep : int -> scalar_with_default

axiom inversion_axiom :
  (forall x:scalar_with_default [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom :
  (forall x:scalar_with_default [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type tscalar_with_defaultB

predicate in_range3(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : tscalar_with_defaultB, tscalar_with_defaultB -> bool

logic dummy2 : tscalar_with_defaultB

type tscalar_with_defaultB__ref = { tscalar_with_defaultB__content :
tscalar_with_defaultB
}

function tscalar_with_defaultB__ref___8__projection(a: tscalar_with_defaultB__ref) : tscalar_with_defaultB =
  (a).tscalar_with_defaultB__content

logic to_rep1 : tscalar_with_defaultB -> int

logic of_rep1 : int -> tscalar_with_defaultB

axiom inversion_axiom1 :
  (forall x:tscalar_with_defaultB [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:tscalar_with_defaultB [to_rep1(x)]. in_range3(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range3(x) ->
  (to_rep1(of_rep1(x)) = x)))

logic first : int

predicate dynamic_property(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : tscalar_with_defaultB, tscalar_with_defaultB -> bool

logic dummy3 : tscalar_with_defaultB

type scalar_bad_default__ref = { scalar_bad_default__content :
tscalar_with_defaultB
}

function scalar_bad_default__ref___7__projection(a: scalar_bad_default__ref) : tscalar_with_defaultB =
  (a).scalar_bad_default__content

type integer

predicate in_range4(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq4 : integer, integer -> bool

logic dummy4 : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

logic to_rep2 : integer -> int

logic of_rep2 : int -> integer

axiom inversion_axiom2 :
  (forall x:integer [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:integer [to_rep2(x)]. in_range4(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range4(x) ->
  (to_rep2(of_rep2(x)) = x)))

logic first1 : int

predicate dynamic_property1(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq5 : integer, integer -> bool

logic dummy5 : integer

type scalar_no_default__ref = { scalar_no_default__content : integer
}

function scalar_no_default__ref___5__projection(a: scalar_no_default__ref) : integer =
  (a).scalar_no_default__content

type us_split_fields = { rec__with_default__ok_record__simple_rec__f1 :
scalar_with_default; rec__with_default__ok_record__simple_rec__f2 : integer
}

function us_split_fields_F1__4__projection(a: us_split_fields) : scalar_with_default =
  (a).rec__with_default__ok_record__simple_rec__f1

function us_split_fields_F2__4__projection(a: us_split_fields) : integer =
  (a).rec__with_default__ok_record__simple_rec__f2

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___4__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___7__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq8 : us_rep, us_rep -> bool

axiom bool_eq_def7 :
  (forall a:us_rep. forall b:us_rep [bool_eq8(a, b)].
  ((((to_rep(((a).us_split_fields1).rec__with_default__ok_record__simple_rec__f1) = to_rep(((b).us_split_fields1).rec__with_default__ok_record__simple_rec__f1)) and
  (to_rep2(((a).us_split_fields1).rec__with_default__ok_record__simple_rec__f2) = to_rep2(((b).us_split_fields1).rec__with_default__ok_record__simple_rec__f2))) ->
  (bool_eq8(a, b) = true)) and
  ((not ((to_rep(((a).us_split_fields1).rec__with_default__ok_record__simple_rec__f1) = to_rep(((b).us_split_fields1).rec__with_default__ok_record__simple_rec__f1)) and
  (to_rep2(((a).us_split_fields1).rec__with_default__ok_record__simple_rec__f2) = to_rep2(((b).us_split_fields1).rec__with_default__ok_record__simple_rec__f2)))) ->
  (bool_eq8(a, b) = false))))

logic value__size : int

logic object__size : us_rep -> int

logic value__alignment : int

logic object__alignment : us_rep -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:scalar_with_default. forall a1:integer. (0 <= object__size({
  us_split_fields1 = { rec__with_default__ok_record__simple_rec__f1 = a;
  rec__with_default__ok_record__simple_rec__f2 = a1 } })))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:scalar_with_default. forall a1:integer. (0 <= object__alignment({
  us_split_fields1 = { rec__with_default__ok_record__simple_rec__f1 = a;
  rec__with_default__ok_record__simple_rec__f2 = a1 } })))

logic with_default__ok_record__simple_rec__f1__first__bit : int

logic with_default__ok_record__simple_rec__f1__last__bit : int

logic with_default__ok_record__simple_rec__f1__position : int

axiom with_default__ok_record__simple_rec__f1__first__bit_axiom :
  (0 <= with_default__ok_record__simple_rec__f1__first__bit)

axiom with_default__ok_record__simple_rec__f1__last__bit_axiom :
  (with_default__ok_record__simple_rec__f1__first__bit <  with_default__ok_record__simple_rec__f1__last__bit)

axiom with_default__ok_record__simple_rec__f1__position_axiom :
  (0 <= with_default__ok_record__simple_rec__f1__position)

logic with_default__ok_record__simple_rec__f2__first__bit : int

logic with_default__ok_record__simple_rec__f2__last__bit : int

logic with_default__ok_record__simple_rec__f2__position : int

axiom with_default__ok_record__simple_rec__f2__first__bit_axiom :
  (0 <= with_default__ok_record__simple_rec__f2__first__bit)

axiom with_default__ok_record__simple_rec__f2__last__bit_axiom :
  (with_default__ok_record__simple_rec__f2__first__bit <  with_default__ok_record__simple_rec__f2__last__bit)

axiom with_default__ok_record__simple_rec__f2__position_axiom :
  (0 <= with_default__ok_record__simple_rec__f2__position)

logic user_eq6 : us_rep, us_rep -> bool

logic dummy6 : scalar_with_default

logic dummy7 : integer

type simple_rec__ref = { simple_rec__content : us_rep
}

function simple_rec__ref___2__projection(a: simple_rec__ref) : us_rep =
  (a).simple_rec__content

type us_split_discrs = { rec__with_default__ok_record__rec_with_discr__b :
bool
}

function us_split_discrs___3__projection(a: us_split_discrs) : bool =
  (a).rec__with_default__ok_record__rec_with_discr__b

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___3__projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields2 = { rec__with_default__ok_record__rec_with_discr__f1 :
scalar_with_default; rec__with_default__ok_record__rec_with_discr__f2 :
tscalar_with_defaultB
}

function us_split_fields_F1__5__projection(a: us_split_fields2) : scalar_with_default =
  (a).rec__with_default__ok_record__rec_with_discr__f1

function us_split_fields_F2__5__projection(a: us_split_fields2) : tscalar_with_defaultB =
  (a).rec__with_default__ok_record__rec_with_discr__f2

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___5__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_discrs1 : us_split_discrs; us_split_fields3 :
us_split_fields2
}

function us_rep___8__projection(a: us_rep1) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___9__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

predicate with_default__ok_record__rec_with_discr__f1__pred(a: us_rep1) =
  (to_int(((a).us_split_discrs1).rec__with_default__ok_record__rec_with_discr__b) = 1)

predicate with_default__ok_record__rec_with_discr__f2__pred(a: us_rep1) =
  (to_int(((a).us_split_discrs1).rec__with_default__ok_record__rec_with_discr__b) = 0)

logic bool_eq9 : us_rep1, us_rep1 -> bool

axiom bool_eq_def8 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq9(a, b)].
  ((((((a).us_split_discrs1).rec__with_default__ok_record__rec_with_discr__b = ((b).us_split_discrs1).rec__with_default__ok_record__rec_with_discr__b) and
  ((with_default__ok_record__rec_with_discr__f1__pred(a) ->
  (to_rep(((a).us_split_fields3).rec__with_default__ok_record__rec_with_discr__f1) = to_rep(((b).us_split_fields3).rec__with_default__ok_record__rec_with_discr__f1))) and
  (with_default__ok_record__rec_with_discr__f2__pred(a) ->
  (to_rep1(((a).us_split_fields3).rec__with_default__ok_record__rec_with_discr__f2) = to_rep1(((b).us_split_fields3).rec__with_default__ok_record__rec_with_discr__f2))))) ->
  (bool_eq9(a, b) = true)) and
  ((not ((((a).us_split_discrs1).rec__with_default__ok_record__rec_with_discr__b = ((b).us_split_discrs1).rec__with_default__ok_record__rec_with_discr__b) and
  ((with_default__ok_record__rec_with_discr__f1__pred(a) ->
  (to_rep(((a).us_split_fields3).rec__with_default__ok_record__rec_with_discr__f1) = to_rep(((b).us_split_fields3).rec__with_default__ok_record__rec_with_discr__f1))) and
  (with_default__ok_record__rec_with_discr__f2__pred(a) ->
  (to_rep1(((a).us_split_fields3).rec__with_default__ok_record__rec_with_discr__f2) = to_rep1(((b).us_split_fields3).rec__with_default__ok_record__rec_with_discr__f2)))))) ->
  (bool_eq9(a, b) = false))))

logic value__size1 : int

logic object__size1 : us_rep1 -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep1 -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. (0 <= object__size1({ us_split_discrs1 = {
  rec__with_default__ok_record__rec_with_discr__b = a }; us_split_fields3 = {
  rec__with_default__ok_record__rec_with_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_discr__f2 = a2 } })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. (0 <= object__alignment1({
  us_split_discrs1 = { rec__with_default__ok_record__rec_with_discr__b = a };
  us_split_fields3 = { rec__with_default__ok_record__rec_with_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_discr__f2 = a2 } })))

logic with_default__ok_record__rec_with_discr__b__first__bit : int

logic with_default__ok_record__rec_with_discr__b__last__bit : int

logic with_default__ok_record__rec_with_discr__b__position : int

axiom with_default__ok_record__rec_with_discr__b__first__bit_axiom :
  (0 <= with_default__ok_record__rec_with_discr__b__first__bit)

axiom with_default__ok_record__rec_with_discr__b__last__bit_axiom :
  (with_default__ok_record__rec_with_discr__b__first__bit <  with_default__ok_record__rec_with_discr__b__last__bit)

axiom with_default__ok_record__rec_with_discr__b__position_axiom :
  (0 <= with_default__ok_record__rec_with_discr__b__position)

logic with_default__ok_record__rec_with_discr__f1__first__bit : int

logic with_default__ok_record__rec_with_discr__f1__last__bit : int

logic with_default__ok_record__rec_with_discr__f1__position : int

axiom with_default__ok_record__rec_with_discr__f1__first__bit_axiom :
  (0 <= with_default__ok_record__rec_with_discr__f1__first__bit)

axiom with_default__ok_record__rec_with_discr__f1__last__bit_axiom :
  (with_default__ok_record__rec_with_discr__f1__first__bit <  with_default__ok_record__rec_with_discr__f1__last__bit)

axiom with_default__ok_record__rec_with_discr__f1__position_axiom :
  (0 <= with_default__ok_record__rec_with_discr__f1__position)

logic with_default__ok_record__rec_with_discr__f2__first__bit : int

logic with_default__ok_record__rec_with_discr__f2__last__bit : int

logic with_default__ok_record__rec_with_discr__f2__position : int

axiom with_default__ok_record__rec_with_discr__f2__first__bit_axiom :
  (0 <= with_default__ok_record__rec_with_discr__f2__first__bit)

axiom with_default__ok_record__rec_with_discr__f2__last__bit_axiom :
  (with_default__ok_record__rec_with_discr__f2__first__bit <  with_default__ok_record__rec_with_discr__f2__last__bit)

axiom with_default__ok_record__rec_with_discr__f2__position_axiom :
  (0 <= with_default__ok_record__rec_with_discr__f2__position)

logic user_eq7 : us_rep1, us_rep1 -> bool

logic dummy8 : bool

logic dummy9 : scalar_with_default

logic dummy10 : tscalar_with_defaultB

type rec_with_discr__ref = { rec_with_discr__content : us_rep1
}

function rec_with_discr__ref___2__projection(a: rec_with_discr__ref) : us_rep1 =
  (a).rec_with_discr__content

type us_split_discrs2 = {
rec__with_default__ok_record__rec_with_default_discr__b : bool
}

function us_split_discrs___4__projection(a: us_split_discrs2) : bool =
  (a).rec__with_default__ok_record__rec_with_default_discr__b

type us_split_discrs__ref1 = { us_split_discrs__content1 : us_split_discrs2
}

function us_split_discrs__ref___4__projection(a: us_split_discrs__ref1) : us_split_discrs2 =
  (a).us_split_discrs__content1

type us_split_fields4 = {
rec__with_default__ok_record__rec_with_default_discr__f1 :
scalar_with_default; rec__with_default__ok_record__rec_with_default_discr__f2
: tscalar_with_defaultB
}

function us_split_fields_F1__6__projection(a: us_split_fields4) : scalar_with_default =
  (a).rec__with_default__ok_record__rec_with_default_discr__f1

function us_split_fields_F2__6__projection(a: us_split_fields4) : tscalar_with_defaultB =
  (a).rec__with_default__ok_record__rec_with_default_discr__f2

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___6__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_discrs3 : us_split_discrs2; us_split_fields5 :
us_split_fields4; attr__constrained : bool
}

function us_rep___10__projection(a: us_rep2) : us_split_discrs2 =
  (a).us_split_discrs3

function us_rep___11__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

function us_rep___12__projection(a: us_rep2) : bool = (a).attr__constrained

predicate with_default__ok_record__rec_with_default_discr__f1__pred(a: us_rep2) =
  (to_int(((a).us_split_discrs3).rec__with_default__ok_record__rec_with_default_discr__b) = 1)

predicate with_default__ok_record__rec_with_default_discr__f2__pred(a: us_rep2) =
  (to_int(((a).us_split_discrs3).rec__with_default__ok_record__rec_with_default_discr__b) = 0)

logic bool_eq10 : us_rep2, us_rep2 -> bool

axiom bool_eq_def9 :
  (forall a:us_rep2. forall b:us_rep2 [bool_eq10(a, b)].
  ((((((a).us_split_discrs3).rec__with_default__ok_record__rec_with_default_discr__b = ((b).us_split_discrs3).rec__with_default__ok_record__rec_with_default_discr__b) and
  ((with_default__ok_record__rec_with_default_discr__f1__pred(a) ->
  (to_rep(((a).us_split_fields5).rec__with_default__ok_record__rec_with_default_discr__f1) = to_rep(((b).us_split_fields5).rec__with_default__ok_record__rec_with_default_discr__f1))) and
  (with_default__ok_record__rec_with_default_discr__f2__pred(a) ->
  (to_rep1(((a).us_split_fields5).rec__with_default__ok_record__rec_with_default_discr__f2) = to_rep1(((b).us_split_fields5).rec__with_default__ok_record__rec_with_default_discr__f2))))) ->
  (bool_eq10(a, b) = true)) and
  ((not ((((a).us_split_discrs3).rec__with_default__ok_record__rec_with_default_discr__b = ((b).us_split_discrs3).rec__with_default__ok_record__rec_with_default_discr__b) and
  ((with_default__ok_record__rec_with_default_discr__f1__pred(a) ->
  (to_rep(((a).us_split_fields5).rec__with_default__ok_record__rec_with_default_discr__f1) = to_rep(((b).us_split_fields5).rec__with_default__ok_record__rec_with_default_discr__f1))) and
  (with_default__ok_record__rec_with_default_discr__f2__pred(a) ->
  (to_rep1(((a).us_split_fields5).rec__with_default__ok_record__rec_with_default_discr__f2) = to_rep1(((b).us_split_fields5).rec__with_default__ok_record__rec_with_default_discr__f2)))))) ->
  (bool_eq10(a, b) = false))))

logic value__size2 : int

logic object__size2 : us_rep2 -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep2 -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. forall a3:bool. (0 <= object__size2({
  us_split_discrs3 = {
  rec__with_default__ok_record__rec_with_default_discr__b = a };
  us_split_fields5 = {
  rec__with_default__ok_record__rec_with_default_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_default_discr__f2 = a2 };
  attr__constrained = a3 })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. forall a3:bool. (0 <= object__alignment2({
  us_split_discrs3 = {
  rec__with_default__ok_record__rec_with_default_discr__b = a };
  us_split_fields5 = {
  rec__with_default__ok_record__rec_with_default_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_default_discr__f2 = a2 };
  attr__constrained = a3 })))

logic with_default__ok_record__rec_with_default_discr__b__first__bit : int

logic with_default__ok_record__rec_with_default_discr__b__last__bit : int

logic with_default__ok_record__rec_with_default_discr__b__position : int

axiom with_default__ok_record__rec_with_default_discr__b__first__bit_axiom :
  (0 <= with_default__ok_record__rec_with_default_discr__b__first__bit)

axiom with_default__ok_record__rec_with_default_discr__b__last__bit_axiom :
  (with_default__ok_record__rec_with_default_discr__b__first__bit <  with_default__ok_record__rec_with_default_discr__b__last__bit)

axiom with_default__ok_record__rec_with_default_discr__b__position_axiom :
  (0 <= with_default__ok_record__rec_with_default_discr__b__position)

logic with_default__ok_record__rec_with_default_discr__f1__first__bit : int

logic with_default__ok_record__rec_with_default_discr__f1__last__bit : int

logic with_default__ok_record__rec_with_default_discr__f1__position : int

axiom with_default__ok_record__rec_with_default_discr__f1__first__bit_axiom :
  (0 <= with_default__ok_record__rec_with_default_discr__f1__first__bit)

axiom with_default__ok_record__rec_with_default_discr__f1__last__bit_axiom :
  (with_default__ok_record__rec_with_default_discr__f1__first__bit <  with_default__ok_record__rec_with_default_discr__f1__last__bit)

axiom with_default__ok_record__rec_with_default_discr__f1__position_axiom :
  (0 <= with_default__ok_record__rec_with_default_discr__f1__position)

logic with_default__ok_record__rec_with_default_discr__f2__first__bit : int

logic with_default__ok_record__rec_with_default_discr__f2__last__bit : int

logic with_default__ok_record__rec_with_default_discr__f2__position : int

axiom with_default__ok_record__rec_with_default_discr__f2__first__bit_axiom :
  (0 <= with_default__ok_record__rec_with_default_discr__f2__first__bit)

axiom with_default__ok_record__rec_with_default_discr__f2__last__bit_axiom :
  (with_default__ok_record__rec_with_default_discr__f2__first__bit <  with_default__ok_record__rec_with_default_discr__f2__last__bit)

axiom with_default__ok_record__rec_with_default_discr__f2__position_axiom :
  (0 <= with_default__ok_record__rec_with_default_discr__f2__position)

logic user_eq8 : us_rep2, us_rep2 -> bool

logic dummy11 : bool

logic dummy12 : scalar_with_default

logic dummy13 : tscalar_with_defaultB

logic dummy14 : bool

type rec_with_default_discr__ref = { rec_with_default_discr__content :
us_rep2
}

function rec_with_default_discr__ref___projection(a: rec_with_default_discr__ref) : us_rep2 =
  (a).rec_with_default_discr__content

type us_split_discrs4 = { rec__with_default__ok_record__rec_with_bad_discr__b
: bool
}

function us_split_discrs___5__projection(a: us_split_discrs4) : bool =
  (a).rec__with_default__ok_record__rec_with_bad_discr__b

type us_split_discrs__ref2 = { us_split_discrs__content2 : us_split_discrs4
}

function us_split_discrs__ref___5__projection(a: us_split_discrs__ref2) : us_split_discrs4 =
  (a).us_split_discrs__content2

type us_split_fields6 = {
rec__with_default__ok_record__rec_with_bad_discr__f1 : scalar_with_default;
rec__with_default__ok_record__rec_with_bad_discr__f2 : tscalar_with_defaultB
}

function us_split_fields_F1__7__projection(a: us_split_fields6) : scalar_with_default =
  (a).rec__with_default__ok_record__rec_with_bad_discr__f1

function us_split_fields_F2__7__projection(a: us_split_fields6) : tscalar_with_defaultB =
  (a).rec__with_default__ok_record__rec_with_bad_discr__f2

type us_split_fields__ref3 = { us_split_fields__content3 : us_split_fields6
}

function us_split_fields__ref___7__projection(a: us_split_fields__ref3) : us_split_fields6 =
  (a).us_split_fields__content3

type us_rep3 = { us_split_discrs5 : us_split_discrs4; us_split_fields7 :
us_split_fields6; attr__constrained1 : bool
}

function us_rep___13__projection(a: us_rep3) : us_split_discrs4 =
  (a).us_split_discrs5

function us_rep___14__projection(a: us_rep3) : us_split_fields6 =
  (a).us_split_fields7

function us_rep___15__projection(a: us_rep3) : bool = (a).attr__constrained1

predicate with_default__ok_record__rec_with_bad_discr__f1__pred(a: us_rep3) =
  (to_int(((a).us_split_discrs5).rec__with_default__ok_record__rec_with_bad_discr__b) = 1)

predicate with_default__ok_record__rec_with_bad_discr__f2__pred(a: us_rep3) =
  (to_int(((a).us_split_discrs5).rec__with_default__ok_record__rec_with_bad_discr__b) = 0)

logic bool_eq11 : us_rep3, us_rep3 -> bool

axiom bool_eq_def10 :
  (forall a:us_rep3. forall b:us_rep3 [bool_eq11(a, b)].
  ((((((a).us_split_discrs5).rec__with_default__ok_record__rec_with_bad_discr__b = ((b).us_split_discrs5).rec__with_default__ok_record__rec_with_bad_discr__b) and
  ((with_default__ok_record__rec_with_bad_discr__f1__pred(a) ->
  (to_rep(((a).us_split_fields7).rec__with_default__ok_record__rec_with_bad_discr__f1) = to_rep(((b).us_split_fields7).rec__with_default__ok_record__rec_with_bad_discr__f1))) and
  (with_default__ok_record__rec_with_bad_discr__f2__pred(a) ->
  (to_rep1(((a).us_split_fields7).rec__with_default__ok_record__rec_with_bad_discr__f2) = to_rep1(((b).us_split_fields7).rec__with_default__ok_record__rec_with_bad_discr__f2))))) ->
  (bool_eq11(a, b) = true)) and
  ((not ((((a).us_split_discrs5).rec__with_default__ok_record__rec_with_bad_discr__b = ((b).us_split_discrs5).rec__with_default__ok_record__rec_with_bad_discr__b) and
  ((with_default__ok_record__rec_with_bad_discr__f1__pred(a) ->
  (to_rep(((a).us_split_fields7).rec__with_default__ok_record__rec_with_bad_discr__f1) = to_rep(((b).us_split_fields7).rec__with_default__ok_record__rec_with_bad_discr__f1))) and
  (with_default__ok_record__rec_with_bad_discr__f2__pred(a) ->
  (to_rep1(((a).us_split_fields7).rec__with_default__ok_record__rec_with_bad_discr__f2) = to_rep1(((b).us_split_fields7).rec__with_default__ok_record__rec_with_bad_discr__f2)))))) ->
  (bool_eq11(a, b) = false))))

logic value__size3 : int

logic object__size3 : us_rep3 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep3 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. forall a3:bool. (0 <= object__size3({
  us_split_discrs5 = { rec__with_default__ok_record__rec_with_bad_discr__b =
  a }; us_split_fields7 = {
  rec__with_default__ok_record__rec_with_bad_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_bad_discr__f2 = a2 };
  attr__constrained1 = a3 })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. forall a3:bool. (0 <= object__alignment3({
  us_split_discrs5 = { rec__with_default__ok_record__rec_with_bad_discr__b =
  a }; us_split_fields7 = {
  rec__with_default__ok_record__rec_with_bad_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_bad_discr__f2 = a2 };
  attr__constrained1 = a3 })))

logic with_default__ok_record__rec_with_bad_discr__b__first__bit : int

logic with_default__ok_record__rec_with_bad_discr__b__last__bit : int

logic with_default__ok_record__rec_with_bad_discr__b__position : int

axiom with_default__ok_record__rec_with_bad_discr__b__first__bit_axiom :
  (0 <= with_default__ok_record__rec_with_bad_discr__b__first__bit)

axiom with_default__ok_record__rec_with_bad_discr__b__last__bit_axiom :
  (with_default__ok_record__rec_with_bad_discr__b__first__bit <  with_default__ok_record__rec_with_bad_discr__b__last__bit)

axiom with_default__ok_record__rec_with_bad_discr__b__position_axiom :
  (0 <= with_default__ok_record__rec_with_bad_discr__b__position)

logic with_default__ok_record__rec_with_bad_discr__f1__first__bit : int

logic with_default__ok_record__rec_with_bad_discr__f1__last__bit : int

logic with_default__ok_record__rec_with_bad_discr__f1__position : int

axiom with_default__ok_record__rec_with_bad_discr__f1__first__bit_axiom :
  (0 <= with_default__ok_record__rec_with_bad_discr__f1__first__bit)

axiom with_default__ok_record__rec_with_bad_discr__f1__last__bit_axiom :
  (with_default__ok_record__rec_with_bad_discr__f1__first__bit <  with_default__ok_record__rec_with_bad_discr__f1__last__bit)

axiom with_default__ok_record__rec_with_bad_discr__f1__position_axiom :
  (0 <= with_default__ok_record__rec_with_bad_discr__f1__position)

logic with_default__ok_record__rec_with_bad_discr__f2__first__bit : int

logic with_default__ok_record__rec_with_bad_discr__f2__last__bit : int

logic with_default__ok_record__rec_with_bad_discr__f2__position : int

axiom with_default__ok_record__rec_with_bad_discr__f2__first__bit_axiom :
  (0 <= with_default__ok_record__rec_with_bad_discr__f2__first__bit)

axiom with_default__ok_record__rec_with_bad_discr__f2__last__bit_axiom :
  (with_default__ok_record__rec_with_bad_discr__f2__first__bit <  with_default__ok_record__rec_with_bad_discr__f2__last__bit)

axiom with_default__ok_record__rec_with_bad_discr__f2__position_axiom :
  (0 <= with_default__ok_record__rec_with_bad_discr__f2__position)

logic user_eq9 : us_rep3, us_rep3 -> bool

logic dummy15 : bool

logic dummy16 : scalar_with_default

logic dummy17 : tscalar_with_defaultB

logic dummy18 : bool

type rec_with_bad_discr__ref = { rec_with_bad_discr__content : us_rep3
}

function rec_with_bad_discr__ref___2__projection(a: rec_with_bad_discr__ref) : us_rep3 =
  (a).rec_with_bad_discr__content

type us_split_discrs6 = { rec__with_default__ok_record__rec_with_ok_discr__b
: bool
}

function us_split_discrs___6__projection(a: us_split_discrs6) : bool =
  (a).rec__with_default__ok_record__rec_with_ok_discr__b

type us_split_discrs__ref3 = { us_split_discrs__content3 : us_split_discrs6
}

function us_split_discrs__ref___6__projection(a: us_split_discrs__ref3) : us_split_discrs6 =
  (a).us_split_discrs__content3

type us_split_fields8 = { rec__with_default__ok_record__rec_with_ok_discr__f1
: scalar_with_default; rec__with_default__ok_record__rec_with_ok_discr__f3 :
tscalar_with_defaultB
}

function us_split_fields_F1__8__projection(a: us_split_fields8) : scalar_with_default =
  (a).rec__with_default__ok_record__rec_with_ok_discr__f1

function us_split_fields_F3__projection(a: us_split_fields8) : tscalar_with_defaultB =
  (a).rec__with_default__ok_record__rec_with_ok_discr__f3

type us_split_fields__ref4 = { us_split_fields__content4 : us_split_fields8
}

function us_split_fields__ref___8__projection(a: us_split_fields__ref4) : us_split_fields8 =
  (a).us_split_fields__content4

type us_rep4 = { us_split_discrs7 : us_split_discrs6; us_split_fields9 :
us_split_fields8; attr__constrained2 : bool
}

function us_rep___16__projection(a: us_rep4) : us_split_discrs6 =
  (a).us_split_discrs7

function us_rep___17__projection(a: us_rep4) : us_split_fields8 =
  (a).us_split_fields9

function us_rep___18__projection(a: us_rep4) : bool = (a).attr__constrained2

predicate with_default__ok_record__rec_with_ok_discr__f1__pred(a: us_rep4) =
  (to_int(((a).us_split_discrs7).rec__with_default__ok_record__rec_with_ok_discr__b) = 1)

predicate with_default__ok_record__rec_with_ok_discr__f3__pred(a: us_rep4) =
  (to_int(((a).us_split_discrs7).rec__with_default__ok_record__rec_with_ok_discr__b) = 0)

logic bool_eq12 : us_rep4, us_rep4 -> bool

axiom bool_eq_def11 :
  (forall a:us_rep4. forall b:us_rep4 [bool_eq12(a, b)].
  ((((((a).us_split_discrs7).rec__with_default__ok_record__rec_with_ok_discr__b = ((b).us_split_discrs7).rec__with_default__ok_record__rec_with_ok_discr__b) and
  ((with_default__ok_record__rec_with_ok_discr__f1__pred(a) ->
  (to_rep(((a).us_split_fields9).rec__with_default__ok_record__rec_with_ok_discr__f1) = to_rep(((b).us_split_fields9).rec__with_default__ok_record__rec_with_ok_discr__f1))) and
  (with_default__ok_record__rec_with_ok_discr__f3__pred(a) ->
  (to_rep1(((a).us_split_fields9).rec__with_default__ok_record__rec_with_ok_discr__f3) = to_rep1(((b).us_split_fields9).rec__with_default__ok_record__rec_with_ok_discr__f3))))) ->
  (bool_eq12(a, b) = true)) and
  ((not ((((a).us_split_discrs7).rec__with_default__ok_record__rec_with_ok_discr__b = ((b).us_split_discrs7).rec__with_default__ok_record__rec_with_ok_discr__b) and
  ((with_default__ok_record__rec_with_ok_discr__f1__pred(a) ->
  (to_rep(((a).us_split_fields9).rec__with_default__ok_record__rec_with_ok_discr__f1) = to_rep(((b).us_split_fields9).rec__with_default__ok_record__rec_with_ok_discr__f1))) and
  (with_default__ok_record__rec_with_ok_discr__f3__pred(a) ->
  (to_rep1(((a).us_split_fields9).rec__with_default__ok_record__rec_with_ok_discr__f3) = to_rep1(((b).us_split_fields9).rec__with_default__ok_record__rec_with_ok_discr__f3)))))) ->
  (bool_eq12(a, b) = false))))

logic value__size4 : int

logic object__size4 : us_rep4 -> int

logic value__alignment4 : int

logic object__alignment4 : us_rep4 -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. forall a3:bool. (0 <= object__size4({
  us_split_discrs7 = { rec__with_default__ok_record__rec_with_ok_discr__b = a
  }; us_split_fields9 = {
  rec__with_default__ok_record__rec_with_ok_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_ok_discr__f3 = a2 };
  attr__constrained2 = a3 })))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. forall a3:bool. (0 <= object__alignment4({
  us_split_discrs7 = { rec__with_default__ok_record__rec_with_ok_discr__b = a
  }; us_split_fields9 = {
  rec__with_default__ok_record__rec_with_ok_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_ok_discr__f3 = a2 };
  attr__constrained2 = a3 })))

logic with_default__ok_record__rec_with_ok_discr__b__first__bit : int

logic with_default__ok_record__rec_with_ok_discr__b__last__bit : int

logic with_default__ok_record__rec_with_ok_discr__b__position : int

axiom with_default__ok_record__rec_with_ok_discr__b__first__bit_axiom :
  (0 <= with_default__ok_record__rec_with_ok_discr__b__first__bit)

axiom with_default__ok_record__rec_with_ok_discr__b__last__bit_axiom :
  (with_default__ok_record__rec_with_ok_discr__b__first__bit <  with_default__ok_record__rec_with_ok_discr__b__last__bit)

axiom with_default__ok_record__rec_with_ok_discr__b__position_axiom :
  (0 <= with_default__ok_record__rec_with_ok_discr__b__position)

logic with_default__ok_record__rec_with_ok_discr__f1__first__bit : int

logic with_default__ok_record__rec_with_ok_discr__f1__last__bit : int

logic with_default__ok_record__rec_with_ok_discr__f1__position : int

axiom with_default__ok_record__rec_with_ok_discr__f1__first__bit_axiom :
  (0 <= with_default__ok_record__rec_with_ok_discr__f1__first__bit)

axiom with_default__ok_record__rec_with_ok_discr__f1__last__bit_axiom :
  (with_default__ok_record__rec_with_ok_discr__f1__first__bit <  with_default__ok_record__rec_with_ok_discr__f1__last__bit)

axiom with_default__ok_record__rec_with_ok_discr__f1__position_axiom :
  (0 <= with_default__ok_record__rec_with_ok_discr__f1__position)

logic with_default__ok_record__rec_with_ok_discr__f3__first__bit : int

logic with_default__ok_record__rec_with_ok_discr__f3__last__bit : int

logic with_default__ok_record__rec_with_ok_discr__f3__position : int

axiom with_default__ok_record__rec_with_ok_discr__f3__first__bit_axiom :
  (0 <= with_default__ok_record__rec_with_ok_discr__f3__first__bit)

axiom with_default__ok_record__rec_with_ok_discr__f3__last__bit_axiom :
  (with_default__ok_record__rec_with_ok_discr__f3__first__bit <  with_default__ok_record__rec_with_ok_discr__f3__last__bit)

axiom with_default__ok_record__rec_with_ok_discr__f3__position_axiom :
  (0 <= with_default__ok_record__rec_with_ok_discr__f3__position)

logic user_eq10 : us_rep4, us_rep4 -> bool

logic dummy19 : bool

logic dummy20 : scalar_with_default

logic dummy21 : tscalar_with_defaultB

logic dummy22 : bool

type rec_with_ok_discr__ref = { rec_with_ok_discr__content : us_rep4
}

function rec_with_ok_discr__ref___projection(a: rec_with_ok_discr__ref) : us_rep4 =
  (a).rec_with_ok_discr__content

type small_natural

predicate in_range5(x: int) = ((0 <= x) and (x <= 100))

logic bool_eq13 : int, int -> bool

axiom bool_eq_def12 :
  (forall x:int. forall y:int [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq11 : small_natural, small_natural -> bool

logic dummy23 : small_natural

type small_natural__ref = { small_natural__content : small_natural
}

function small_natural__ref___projection(a: small_natural__ref) : small_natural =
  (a).small_natural__content

logic to_rep3 : small_natural -> int

logic of_rep3 : int -> small_natural

axiom inversion_axiom3 :
  (forall x:small_natural [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:small_natural [to_rep3(x)]. in_range5(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range5(x) ->
  (to_rep3(of_rep3(x)) = x)))

type small_positive

predicate in_range6(x: int) = ((1 <= x) and (x <= 100))

logic bool_eq14 : int, int -> bool

axiom bool_eq_def13 :
  (forall x:int. forall y:int [bool_eq14(x, y)]. (((x = y) -> (bool_eq14(x,
  y) = true)) and ((not (x = y)) -> (bool_eq14(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq12 : small_positive, small_positive -> bool

logic dummy24 : small_positive

type small_positive__ref = { small_positive__content : small_positive
}

function small_positive__ref___projection(a: small_positive__ref) : small_positive =
  (a).small_positive__content

type tsmall_naturalB

predicate in_range7(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq15 : int, int -> bool

axiom bool_eq_def14 :
  (forall x:int. forall y:int [bool_eq15(x, y)]. (((x = y) -> (bool_eq15(x,
  y) = true)) and ((not (x = y)) -> (bool_eq15(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq13 : tsmall_naturalB, tsmall_naturalB -> bool

logic dummy25 : tsmall_naturalB

type tsmall_naturalB__ref = { tsmall_naturalB__content : tsmall_naturalB
}

function tsmall_naturalB__ref___projection(a: tsmall_naturalB__ref) : tsmall_naturalB =
  (a).tsmall_naturalB__content

logic to_rep4 : tsmall_naturalB -> int

logic of_rep4 : int -> tsmall_naturalB

axiom inversion_axiom4 :
  (forall x:tsmall_naturalB [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 :
  (forall x:tsmall_naturalB [to_rep4(x)]. in_range7(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range7(x) ->
  (to_rep4(of_rep4(x)) = x)))

type map__ref = { map__content : (int,tscalar_with_defaultB) farray
}

logic slide : (int,tscalar_with_defaultB) farray, int,
  int -> (int,tscalar_with_defaultB) farray

axiom slide_eq :
  (forall a:(int,tscalar_with_defaultB) farray.
  (forall first2:int [slide(a, first2, first2)]. (slide(a, first2,
  first2) = a)))

axiom slide_def :
  (forall a:(int,tscalar_with_defaultB) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq16 : (int,tscalar_with_defaultB) farray, int, int,
  (int,tscalar_with_defaultB) farray, int, int -> bool

axiom bool_eq_def15 :
  (forall a:(int,tscalar_with_defaultB) farray. forall a__first:int.
  forall a__last:int. forall b:(int,tscalar_with_defaultB) farray.
  forall b__first:int. forall b__last:int [bool_eq16(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_160:int. ((((a__first <= temp___idx_160) and
  (temp___idx_160 <= a__last)) and
  (to_rep1((a[temp___idx_160])) = to_rep1((b[((b__first - a__first) + temp___idx_160)])))) or
  (not ((a__first <= temp___idx_160) and (temp___idx_160 <= a__last)))))) ->
  (bool_eq16(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_160:int. (((a__first <= temp___idx_160) and
  (temp___idx_160 <= a__last)) ->
  (to_rep1((a[temp___idx_160])) = to_rep1((b[((b__first - a__first) + temp___idx_160)]))))))) ->
  (bool_eq16(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,tscalar_with_defaultB) farray.
  forall b:(int,tscalar_with_defaultB) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq16(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_160:int. (((a__first <= temp___idx_160) and
  (temp___idx_160 <= a__last)) ->
  (to_rep1((a[temp___idx_160])) = to_rep1((b[((b__first - a__first) + temp___idx_160)])))))))))

predicate dynamic_property2(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq17 : int, int -> bool

axiom bool_eq_def16 :
  (forall x:int. forall y:int [bool_eq17(x, y)]. (((x = y) -> (bool_eq17(x,
  y) = true)) and ((not (x = y)) -> (bool_eq17(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq14 : tsmall_naturalB, tsmall_naturalB -> bool

logic dummy26 : tsmall_naturalB

type t21b__ref = { t21b__content : tsmall_naturalB
}

function t21b__ref___projection(a: t21b__ref) : tsmall_naturalB =
  (a).t21b__content

type t

logic first2 : t -> tsmall_naturalB

logic last : t -> tsmall_naturalB

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range7(f) -> (in_range7(l) ->
  ((to_rep4(first2(mk(f, l))) = f) and (to_rep4(last(mk(f, l))) = l)))))

predicate dynamic_property3(range_first: int, range_last: int, low: int,
  high: int) = (in_range7(low) and (in_range7(high) and ((low <= high) ->
  (dynamic_property2(range_first, range_last, low) and
  dynamic_property2(range_first, range_last, high)))))

type us_t = { elts : (int,tscalar_with_defaultB) farray; rt : t
}

function to_array(a: us_t) : (int,tscalar_with_defaultB) farray = (a).elts

function of_array(a: (int,tscalar_with_defaultB) farray, f: int,
  l: int) : us_t = { elts = a; rt = mk(f, l) }

function first3(a: us_t) : int = to_rep4(first2((a).rt))

function last1(a: us_t) : int = to_rep4(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first3(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first3(a)) + 1))) and
  ((not (first3(a) <= last1(a))) -> (length(a) = 0))))

logic value__size5 : int

logic object__size5 : (int,tscalar_with_defaultB) farray -> int

logic value__component__size : int

logic object__component__size : (int,tscalar_with_defaultB) farray -> int

logic value__alignment5 : int

logic object__alignment5 : (int,tscalar_with_defaultB) farray -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 :
  (forall a:(int,tscalar_with_defaultB) farray. (0 <= object__size5(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,tscalar_with_defaultB) farray.
  (0 <= object__component__size(a)))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:(int,tscalar_with_defaultB) farray. (0 <= object__alignment5(a)))

function bool_eq18(x: us_t, y: us_t) : bool = bool_eq16((x).elts,
  to_rep4(first2((x).rt)), to_rep4(last((x).rt)), (y).elts,
  to_rep4(first2((y).rt)), to_rep4(last((y).rt)))

logic user_eq15 : us_t, us_t -> bool

logic dummy27 : (int,tscalar_with_defaultB) farray

logic dummy28 : t

type t22b__ref = { t22b__content : us_t
}

function t22b__ref___projection(a: t22b__ref) : us_t = (a).t22b__content

type us_split_discrs8 = { rec__with_default__ok_record__rec_empty_array__d :
small_natural
}

function us_split_discrs___7__projection(a: us_split_discrs8) : small_natural =
  (a).rec__with_default__ok_record__rec_empty_array__d

type us_split_discrs__ref4 = { us_split_discrs__content4 : us_split_discrs8
}

function us_split_discrs__ref___7__projection(a: us_split_discrs__ref4) : us_split_discrs8 =
  (a).us_split_discrs__content4

type us_split_fields10 = {
rec__with_default__ok_record__rec_empty_array__content : us_t
}

function us_split_fields_Content__projection(a: us_split_fields10) : us_t =
  (a).rec__with_default__ok_record__rec_empty_array__content

type us_split_fields__ref5 = { us_split_fields__content5 : us_split_fields10
}

function us_split_fields__ref___9__projection(a: us_split_fields__ref5) : us_split_fields10 =
  (a).us_split_fields__content5

type us_rep5 = { us_split_discrs9 : us_split_discrs8; us_split_fields11 :
us_split_fields10; attr__constrained3 : bool
}

function us_rep___19__projection(a: us_rep5) : us_split_discrs8 =
  (a).us_split_discrs9

function us_rep___20__projection(a: us_rep5) : us_split_fields10 =
  (a).us_split_fields11

function us_rep___21__projection(a: us_rep5) : bool = (a).attr__constrained3

logic bool_eq19 : us_rep5, us_rep5 -> bool

axiom bool_eq_def17 :
  (forall a:us_rep5. forall b:us_rep5 [bool_eq19(a, b)].
  ((((to_rep3(((a).us_split_discrs9).rec__with_default__ok_record__rec_empty_array__d) = to_rep3(((b).us_split_discrs9).rec__with_default__ok_record__rec_empty_array__d)) and
  (bool_eq18(((a).us_split_fields11).rec__with_default__ok_record__rec_empty_array__content,
  ((b).us_split_fields11).rec__with_default__ok_record__rec_empty_array__content) = true)) ->
  (bool_eq19(a, b) = true)) and
  ((not ((to_rep3(((a).us_split_discrs9).rec__with_default__ok_record__rec_empty_array__d) = to_rep3(((b).us_split_discrs9).rec__with_default__ok_record__rec_empty_array__d)) and
  (bool_eq18(((a).us_split_fields11).rec__with_default__ok_record__rec_empty_array__content,
  ((b).us_split_fields11).rec__with_default__ok_record__rec_empty_array__content) = true))) ->
  (bool_eq19(a, b) = false))))

logic value__size6 : int

logic object__size6 : us_rep5 -> int

logic value__alignment6 : int

logic object__alignment6 : us_rep5 -> int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 :
  (forall a:small_natural. forall a1:(int,tscalar_with_defaultB) farray.
  forall a2:t. forall a3:bool. (0 <= object__size6({ us_split_discrs9 = {
  rec__with_default__ok_record__rec_empty_array__d = a }; us_split_fields11 =
  { rec__with_default__ok_record__rec_empty_array__content = { elts = a1;
  rt = a2 } }; attr__constrained3 = a3 })))

axiom value__alignment_axiom6 : (0 <= value__alignment6)

axiom object__alignment_axiom6 :
  (forall a:small_natural. forall a1:(int,tscalar_with_defaultB) farray.
  forall a2:t. forall a3:bool. (0 <= object__alignment6({ us_split_discrs9 =
  { rec__with_default__ok_record__rec_empty_array__d = a };
  us_split_fields11 = {
  rec__with_default__ok_record__rec_empty_array__content = { elts = a1; rt =
  a2 } }; attr__constrained3 = a3 })))

logic with_default__ok_record__rec_empty_array__d__first__bit : int

logic with_default__ok_record__rec_empty_array__d__last__bit : int

logic with_default__ok_record__rec_empty_array__d__position : int

axiom with_default__ok_record__rec_empty_array__d__first__bit_axiom :
  (0 <= with_default__ok_record__rec_empty_array__d__first__bit)

axiom with_default__ok_record__rec_empty_array__d__last__bit_axiom :
  (with_default__ok_record__rec_empty_array__d__first__bit <  with_default__ok_record__rec_empty_array__d__last__bit)

axiom with_default__ok_record__rec_empty_array__d__position_axiom :
  (0 <= with_default__ok_record__rec_empty_array__d__position)

logic with_default__ok_record__rec_empty_array__content__first__bit : int

logic with_default__ok_record__rec_empty_array__content__last__bit : int

logic with_default__ok_record__rec_empty_array__content__position : int

axiom with_default__ok_record__rec_empty_array__content__first__bit_axiom :
  (0 <= with_default__ok_record__rec_empty_array__content__first__bit)

axiom with_default__ok_record__rec_empty_array__content__last__bit_axiom :
  (with_default__ok_record__rec_empty_array__content__first__bit <  with_default__ok_record__rec_empty_array__content__last__bit)

axiom with_default__ok_record__rec_empty_array__content__position_axiom :
  (0 <= with_default__ok_record__rec_empty_array__content__position)

logic user_eq16 : us_rep5, us_rep5 -> bool

logic dummy29 : small_natural

logic dummy30 : (int,tscalar_with_defaultB) farray

logic dummy31 : t

logic dummy32 : bool

type rec_empty_array__ref = { rec_empty_array__content : us_rep5
}

function rec_empty_array__ref___projection(a: rec_empty_array__ref) : us_rep5 =
  (a).rec_empty_array__content

predicate in_range8(rec__with_default__ok_record__rec_with_bad_discr__b1: bool,
  a: us_rep3) =
  (rec__with_default__ok_record__rec_with_bad_discr__b1 = ((a).us_split_discrs5).rec__with_default__ok_record__rec_with_bad_discr__b)

logic value__size7 : int

logic object__size7 : us_rep3 -> int

logic value__alignment7 : int

logic object__alignment7 : us_rep3 -> int

axiom value__size_axiom7 : (0 <= value__size7)

axiom object__size_axiom7 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. forall a3:bool. (0 <= object__size7({
  us_split_discrs5 = { rec__with_default__ok_record__rec_with_bad_discr__b =
  a }; us_split_fields7 = {
  rec__with_default__ok_record__rec_with_bad_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_bad_discr__f2 = a2 };
  attr__constrained1 = a3 })))

axiom value__alignment_axiom7 : (0 <= value__alignment7)

axiom object__alignment_axiom7 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. forall a3:bool. (0 <= object__alignment7({
  us_split_discrs5 = { rec__with_default__ok_record__rec_with_bad_discr__b =
  a }; us_split_fields7 = {
  rec__with_default__ok_record__rec_with_bad_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_bad_discr__f2 = a2 };
  attr__constrained1 = a3 })))

logic with_default__ok_record__rec_with_bad_discr__b__first__bit1 : int

logic with_default__ok_record__rec_with_bad_discr__b__last__bit1 : int

logic with_default__ok_record__rec_with_bad_discr__b__position1 : int

axiom with_default__ok_record__rec_with_bad_discr__b__first__bit_axiom1 :
  (0 <= with_default__ok_record__rec_with_bad_discr__b__first__bit1)

axiom with_default__ok_record__rec_with_bad_discr__b__last__bit_axiom1 :
  (with_default__ok_record__rec_with_bad_discr__b__first__bit1 <  with_default__ok_record__rec_with_bad_discr__b__last__bit1)

axiom with_default__ok_record__rec_with_bad_discr__b__position_axiom1 :
  (0 <= with_default__ok_record__rec_with_bad_discr__b__position1)

logic with_default__ok_record__rec_with_bad_discr__f1__first__bit1 : int

logic with_default__ok_record__rec_with_bad_discr__f1__last__bit1 : int

logic with_default__ok_record__rec_with_bad_discr__f1__position1 : int

axiom with_default__ok_record__rec_with_bad_discr__f1__first__bit_axiom1 :
  (0 <= with_default__ok_record__rec_with_bad_discr__f1__first__bit1)

axiom with_default__ok_record__rec_with_bad_discr__f1__last__bit_axiom1 :
  (with_default__ok_record__rec_with_bad_discr__f1__first__bit1 <  with_default__ok_record__rec_with_bad_discr__f1__last__bit1)

axiom with_default__ok_record__rec_with_bad_discr__f1__position_axiom1 :
  (0 <= with_default__ok_record__rec_with_bad_discr__f1__position1)

logic with_default__ok_record__rec_with_bad_discr__f2__first__bit1 : int

logic with_default__ok_record__rec_with_bad_discr__f2__last__bit1 : int

logic with_default__ok_record__rec_with_bad_discr__f2__position1 : int

axiom with_default__ok_record__rec_with_bad_discr__f2__first__bit_axiom1 :
  (0 <= with_default__ok_record__rec_with_bad_discr__f2__first__bit1)

axiom with_default__ok_record__rec_with_bad_discr__f2__last__bit_axiom1 :
  (with_default__ok_record__rec_with_bad_discr__f2__first__bit1 <  with_default__ok_record__rec_with_bad_discr__f2__last__bit1)

axiom with_default__ok_record__rec_with_bad_discr__f2__position_axiom1 :
  (0 <= with_default__ok_record__rec_with_bad_discr__f2__position1)

logic user_eq17 : us_rep3, us_rep3 -> bool

logic dummy33 : bool

logic dummy34 : scalar_with_default

logic dummy35 : tscalar_with_defaultB

logic dummy36 : bool

type t23b__ref = { t23b__content : us_rep3
}

function t23b__ref___projection(a: t23b__ref) : us_rep3 = (a).t23b__content

type us_split_discrs10 = { rec__with_default__ok_record__rec_discr_rec__b :
bool
}

function us_split_discrs___8__projection(a: us_split_discrs10) : bool =
  (a).rec__with_default__ok_record__rec_discr_rec__b

type us_split_discrs__ref5 = { us_split_discrs__content5 : us_split_discrs10
}

function us_split_discrs__ref___8__projection(a: us_split_discrs__ref5) : us_split_discrs10 =
  (a).us_split_discrs__content5

type us_split_fields12 = {
rec__with_default__ok_record__rec_discr_rec__content : us_rep3
}

function us_split_fields_Content__2__projection(a: us_split_fields12) : us_rep3 =
  (a).rec__with_default__ok_record__rec_discr_rec__content

type us_split_fields__ref6 = { us_split_fields__content6 : us_split_fields12
}

function us_split_fields__ref___10__projection(a: us_split_fields__ref6) : us_split_fields12 =
  (a).us_split_fields__content6

type us_rep6 = { us_split_discrs11 : us_split_discrs10; us_split_fields13 :
us_split_fields12; attr__constrained4 : bool
}

function us_rep___22__projection(a: us_rep6) : us_split_discrs10 =
  (a).us_split_discrs11

function us_rep___23__projection(a: us_rep6) : us_split_fields12 =
  (a).us_split_fields13

function us_rep___24__projection(a: us_rep6) : bool = (a).attr__constrained4

logic bool_eq20 : us_rep6, us_rep6 -> bool

axiom bool_eq_def18 :
  (forall a:us_rep6. forall b:us_rep6 [bool_eq20(a, b)].
  ((((((a).us_split_discrs11).rec__with_default__ok_record__rec_discr_rec__b = ((b).us_split_discrs11).rec__with_default__ok_record__rec_discr_rec__b) and
  (bool_eq11(((a).us_split_fields13).rec__with_default__ok_record__rec_discr_rec__content,
  ((b).us_split_fields13).rec__with_default__ok_record__rec_discr_rec__content) = true)) ->
  (bool_eq20(a, b) = true)) and
  ((not ((((a).us_split_discrs11).rec__with_default__ok_record__rec_discr_rec__b = ((b).us_split_discrs11).rec__with_default__ok_record__rec_discr_rec__b) and
  (bool_eq11(((a).us_split_fields13).rec__with_default__ok_record__rec_discr_rec__content,
  ((b).us_split_fields13).rec__with_default__ok_record__rec_discr_rec__content) = true))) ->
  (bool_eq20(a, b) = false))))

logic value__size8 : int

logic object__size8 : us_rep6 -> int

logic value__alignment8 : int

logic object__alignment8 : us_rep6 -> int

axiom value__size_axiom8 : (0 <= value__size8)

axiom object__size_axiom8 :
  (forall a:bool. forall a1:bool. forall a2:scalar_with_default.
  forall a3:tscalar_with_defaultB. forall a4:bool. forall a5:bool.
  (0 <= object__size8({ us_split_discrs11 = {
  rec__with_default__ok_record__rec_discr_rec__b = a }; us_split_fields13 = {
  rec__with_default__ok_record__rec_discr_rec__content = { us_split_discrs5 =
  { rec__with_default__ok_record__rec_with_bad_discr__b = a1 };
  us_split_fields7 = { rec__with_default__ok_record__rec_with_bad_discr__f1 =
  a2; rec__with_default__ok_record__rec_with_bad_discr__f2 = a3 };
  attr__constrained1 = a4 } }; attr__constrained4 = a5 })))

axiom value__alignment_axiom8 : (0 <= value__alignment8)

axiom object__alignment_axiom8 :
  (forall a:bool. forall a1:bool. forall a2:scalar_with_default.
  forall a3:tscalar_with_defaultB. forall a4:bool. forall a5:bool.
  (0 <= object__alignment8({ us_split_discrs11 = {
  rec__with_default__ok_record__rec_discr_rec__b = a }; us_split_fields13 = {
  rec__with_default__ok_record__rec_discr_rec__content = { us_split_discrs5 =
  { rec__with_default__ok_record__rec_with_bad_discr__b = a1 };
  us_split_fields7 = { rec__with_default__ok_record__rec_with_bad_discr__f1 =
  a2; rec__with_default__ok_record__rec_with_bad_discr__f2 = a3 };
  attr__constrained1 = a4 } }; attr__constrained4 = a5 })))

logic with_default__ok_record__rec_discr_rec__b__first__bit : int

logic with_default__ok_record__rec_discr_rec__b__last__bit : int

logic with_default__ok_record__rec_discr_rec__b__position : int

axiom with_default__ok_record__rec_discr_rec__b__first__bit_axiom :
  (0 <= with_default__ok_record__rec_discr_rec__b__first__bit)

axiom with_default__ok_record__rec_discr_rec__b__last__bit_axiom :
  (with_default__ok_record__rec_discr_rec__b__first__bit <  with_default__ok_record__rec_discr_rec__b__last__bit)

axiom with_default__ok_record__rec_discr_rec__b__position_axiom :
  (0 <= with_default__ok_record__rec_discr_rec__b__position)

logic with_default__ok_record__rec_discr_rec__content__first__bit : int

logic with_default__ok_record__rec_discr_rec__content__last__bit : int

logic with_default__ok_record__rec_discr_rec__content__position : int

axiom with_default__ok_record__rec_discr_rec__content__first__bit_axiom :
  (0 <= with_default__ok_record__rec_discr_rec__content__first__bit)

axiom with_default__ok_record__rec_discr_rec__content__last__bit_axiom :
  (with_default__ok_record__rec_discr_rec__content__first__bit <  with_default__ok_record__rec_discr_rec__content__last__bit)

axiom with_default__ok_record__rec_discr_rec__content__position_axiom :
  (0 <= with_default__ok_record__rec_discr_rec__content__position)

logic user_eq18 : us_rep6, us_rep6 -> bool

logic dummy37 : bool

logic dummy38 : bool

logic dummy39 : scalar_with_default

logic dummy40 : tscalar_with_defaultB

logic dummy41 : bool

logic dummy42 : bool

type rec_discr_rec__ref = { rec_discr_rec__content : us_rep6
}

function rec_discr_rec__ref___projection(a: rec_discr_rec__ref) : us_rep6 =
  (a).rec_discr_rec__content

predicate in_range9(rec__with_default__ok_record__rec_with_bad_discr__b1: bool,
  a: us_rep3) =
  (rec__with_default__ok_record__rec_with_bad_discr__b1 = ((a).us_split_discrs5).rec__with_default__ok_record__rec_with_bad_discr__b)

logic value__size9 : int

logic object__size9 : us_rep3 -> int

logic value__alignment9 : int

logic object__alignment9 : us_rep3 -> int

axiom value__size_axiom9 : (0 <= value__size9)

axiom object__size_axiom9 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. forall a3:bool. (0 <= object__size9({
  us_split_discrs5 = { rec__with_default__ok_record__rec_with_bad_discr__b =
  a }; us_split_fields7 = {
  rec__with_default__ok_record__rec_with_bad_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_bad_discr__f2 = a2 };
  attr__constrained1 = a3 })))

axiom value__alignment_axiom9 : (0 <= value__alignment9)

axiom object__alignment_axiom9 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. forall a3:bool. (0 <= object__alignment9({
  us_split_discrs5 = { rec__with_default__ok_record__rec_with_bad_discr__b =
  a }; us_split_fields7 = {
  rec__with_default__ok_record__rec_with_bad_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_bad_discr__f2 = a2 };
  attr__constrained1 = a3 })))

logic with_default__ok_record__rec_with_bad_discr__b__first__bit2 : int

logic with_default__ok_record__rec_with_bad_discr__b__last__bit2 : int

logic with_default__ok_record__rec_with_bad_discr__b__position2 : int

axiom with_default__ok_record__rec_with_bad_discr__b__first__bit_axiom2 :
  (0 <= with_default__ok_record__rec_with_bad_discr__b__first__bit2)

axiom with_default__ok_record__rec_with_bad_discr__b__last__bit_axiom2 :
  (with_default__ok_record__rec_with_bad_discr__b__first__bit2 <  with_default__ok_record__rec_with_bad_discr__b__last__bit2)

axiom with_default__ok_record__rec_with_bad_discr__b__position_axiom2 :
  (0 <= with_default__ok_record__rec_with_bad_discr__b__position2)

logic with_default__ok_record__rec_with_bad_discr__f1__first__bit2 : int

logic with_default__ok_record__rec_with_bad_discr__f1__last__bit2 : int

logic with_default__ok_record__rec_with_bad_discr__f1__position2 : int

axiom with_default__ok_record__rec_with_bad_discr__f1__first__bit_axiom2 :
  (0 <= with_default__ok_record__rec_with_bad_discr__f1__first__bit2)

axiom with_default__ok_record__rec_with_bad_discr__f1__last__bit_axiom2 :
  (with_default__ok_record__rec_with_bad_discr__f1__first__bit2 <  with_default__ok_record__rec_with_bad_discr__f1__last__bit2)

axiom with_default__ok_record__rec_with_bad_discr__f1__position_axiom2 :
  (0 <= with_default__ok_record__rec_with_bad_discr__f1__position2)

logic with_default__ok_record__rec_with_bad_discr__f2__first__bit2 : int

logic with_default__ok_record__rec_with_bad_discr__f2__last__bit2 : int

logic with_default__ok_record__rec_with_bad_discr__f2__position2 : int

axiom with_default__ok_record__rec_with_bad_discr__f2__first__bit_axiom2 :
  (0 <= with_default__ok_record__rec_with_bad_discr__f2__first__bit2)

axiom with_default__ok_record__rec_with_bad_discr__f2__last__bit_axiom2 :
  (with_default__ok_record__rec_with_bad_discr__f2__first__bit2 <  with_default__ok_record__rec_with_bad_discr__f2__last__bit2)

axiom with_default__ok_record__rec_with_bad_discr__f2__position_axiom2 :
  (0 <= with_default__ok_record__rec_with_bad_discr__f2__position2)

logic user_eq19 : us_rep3, us_rep3 -> bool

logic dummy43 : bool

logic dummy44 : scalar_with_default

logic dummy45 : tscalar_with_defaultB

logic dummy46 : bool

type t24b__ref = { t24b__content : us_rep3
}

function t24b__ref___projection(a: t24b__ref) : us_rep3 = (a).t24b__content

logic no_def__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

predicate in_range10(rec__with_default__ok_record__rec_with_discr__b1: bool,
  a: us_rep1) =
  (rec__with_default__ok_record__rec_with_discr__b1 = ((a).us_split_discrs1).rec__with_default__ok_record__rec_with_discr__b)

logic value__size10 : int

logic object__size10 : us_rep1 -> int

logic value__alignment10 : int

logic object__alignment10 : us_rep1 -> int

axiom value__size_axiom10 : (0 <= value__size10)

axiom object__size_axiom10 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. (0 <= object__size10({ us_split_discrs1 =
  { rec__with_default__ok_record__rec_with_discr__b = a }; us_split_fields3 =
  { rec__with_default__ok_record__rec_with_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_discr__f2 = a2 } })))

axiom value__alignment_axiom10 : (0 <= value__alignment10)

axiom object__alignment_axiom10 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. (0 <= object__alignment10({
  us_split_discrs1 = { rec__with_default__ok_record__rec_with_discr__b = a };
  us_split_fields3 = { rec__with_default__ok_record__rec_with_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_discr__f2 = a2 } })))

logic with_default__ok_record__rec_with_discr__b__first__bit1 : int

logic with_default__ok_record__rec_with_discr__b__last__bit1 : int

logic with_default__ok_record__rec_with_discr__b__position1 : int

axiom with_default__ok_record__rec_with_discr__b__first__bit_axiom1 :
  (0 <= with_default__ok_record__rec_with_discr__b__first__bit1)

axiom with_default__ok_record__rec_with_discr__b__last__bit_axiom1 :
  (with_default__ok_record__rec_with_discr__b__first__bit1 <  with_default__ok_record__rec_with_discr__b__last__bit1)

axiom with_default__ok_record__rec_with_discr__b__position_axiom1 :
  (0 <= with_default__ok_record__rec_with_discr__b__position1)

logic with_default__ok_record__rec_with_discr__f2__first__bit1 : int

logic with_default__ok_record__rec_with_discr__f2__last__bit1 : int

logic with_default__ok_record__rec_with_discr__f2__position1 : int

axiom with_default__ok_record__rec_with_discr__f2__first__bit_axiom1 :
  (0 <= with_default__ok_record__rec_with_discr__f2__first__bit1)

axiom with_default__ok_record__rec_with_discr__f2__last__bit_axiom1 :
  (with_default__ok_record__rec_with_discr__f2__first__bit1 <  with_default__ok_record__rec_with_discr__f2__last__bit1)

axiom with_default__ok_record__rec_with_discr__f2__position_axiom1 :
  (0 <= with_default__ok_record__rec_with_discr__f2__position1)

logic with_default__ok_record__rec_with_discr__f1__first__bit1 : int

logic with_default__ok_record__rec_with_discr__f1__last__bit1 : int

logic with_default__ok_record__rec_with_discr__f1__position1 : int

axiom with_default__ok_record__rec_with_discr__f1__first__bit_axiom1 :
  (0 <= with_default__ok_record__rec_with_discr__f1__first__bit1)

axiom with_default__ok_record__rec_with_discr__f1__last__bit_axiom1 :
  (with_default__ok_record__rec_with_discr__f1__first__bit1 <  with_default__ok_record__rec_with_discr__f1__last__bit1)

axiom with_default__ok_record__rec_with_discr__f1__position_axiom1 :
  (0 <= with_default__ok_record__rec_with_discr__f1__position1)

logic user_eq20 : us_rep1, us_rep1 -> bool

logic dummy47 : bool

logic dummy48 : scalar_with_default

logic dummy49 : tscalar_with_defaultB

type tw_discS__ref = { tw_discS__content : us_rep1
}

function tw_discS__ref___projection(a: tw_discS__ref) : us_rep1 =
  (a).tw_discS__content

logic w_disc__split_discrs : bool

logic attr__ATTRIBUTE_ADDRESS3 : int

logic w_d_di__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS4 : int

logic w_o_di__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS5 : int

logic empty__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS6 : int

logic wrap__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS7 : int

logic r26b : bool

logic attr__ATTRIBUTE_ADDRESS8 : int

predicate in_range11(rec__with_default__ok_record__rec_with_bad_discr__b1: bool,
  a: us_rep3) =
  (rec__with_default__ok_record__rec_with_bad_discr__b1 = ((a).us_split_discrs5).rec__with_default__ok_record__rec_with_bad_discr__b)

logic value__size11 : int

logic object__size11 : us_rep3 -> int

logic value__alignment11 : int

logic object__alignment11 : us_rep3 -> int

axiom value__size_axiom11 : (0 <= value__size11)

axiom object__size_axiom11 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. forall a3:bool. (0 <= object__size11({
  us_split_discrs5 = { rec__with_default__ok_record__rec_with_bad_discr__b =
  a }; us_split_fields7 = {
  rec__with_default__ok_record__rec_with_bad_discr__f1 = a1;
  rec__with_default__ok_record__rec_with_bad_discr__f2 = a2 };
  attr__constrained1 = a3 })))

axiom value__alignment_axiom11 : (0 <= value__alignment11)

axiom object__alignment_axiom11 :
  (forall a:bool. forall a1:scalar_with_default.
  forall a2:tscalar_with_defaultB. forall a3:bool.
  (0 <= object__alignment11({ us_split_discrs5 = {
  rec__with_default__ok_record__rec_with_bad_discr__b = a };
  us_split_fields7 = { rec__with_default__ok_record__rec_with_bad_discr__f1 =
  a1; rec__with_default__ok_record__rec_with_bad_discr__f2 = a2 };
  attr__constrained1 = a3 })))

logic with_default__ok_record__rec_with_bad_discr__b__first__bit3 : int

logic with_default__ok_record__rec_with_bad_discr__b__last__bit3 : int

logic with_default__ok_record__rec_with_bad_discr__b__position3 : int

axiom with_default__ok_record__rec_with_bad_discr__b__first__bit_axiom3 :
  (0 <= with_default__ok_record__rec_with_bad_discr__b__first__bit3)

axiom with_default__ok_record__rec_with_bad_discr__b__last__bit_axiom3 :
  (with_default__ok_record__rec_with_bad_discr__b__first__bit3 <  with_default__ok_record__rec_with_bad_discr__b__last__bit3)

axiom with_default__ok_record__rec_with_bad_discr__b__position_axiom3 :
  (0 <= with_default__ok_record__rec_with_bad_discr__b__position3)

logic with_default__ok_record__rec_with_bad_discr__f1__first__bit3 : int

logic with_default__ok_record__rec_with_bad_discr__f1__last__bit3 : int

logic with_default__ok_record__rec_with_bad_discr__f1__position3 : int

axiom with_default__ok_record__rec_with_bad_discr__f1__first__bit_axiom3 :
  (0 <= with_default__ok_record__rec_with_bad_discr__f1__first__bit3)

axiom with_default__ok_record__rec_with_bad_discr__f1__last__bit_axiom3 :
  (with_default__ok_record__rec_with_bad_discr__f1__first__bit3 <  with_default__ok_record__rec_with_bad_discr__f1__last__bit3)

axiom with_default__ok_record__rec_with_bad_discr__f1__position_axiom3 :
  (0 <= with_default__ok_record__rec_with_bad_discr__f1__position3)

logic with_default__ok_record__rec_with_bad_discr__f2__first__bit3 : int

logic with_default__ok_record__rec_with_bad_discr__f2__last__bit3 : int

logic with_default__ok_record__rec_with_bad_discr__f2__position3 : int

axiom with_default__ok_record__rec_with_bad_discr__f2__first__bit_axiom3 :
  (0 <= with_default__ok_record__rec_with_bad_discr__f2__first__bit3)

axiom with_default__ok_record__rec_with_bad_discr__f2__last__bit_axiom3 :
  (with_default__ok_record__rec_with_bad_discr__f2__first__bit3 <  with_default__ok_record__rec_with_bad_discr__f2__last__bit3)

axiom with_default__ok_record__rec_with_bad_discr__f2__position_axiom3 :
  (0 <= with_default__ok_record__rec_with_bad_discr__f2__position3)

logic user_eq21 : us_rep3, us_rep3 -> bool

logic dummy50 : bool

logic dummy51 : scalar_with_default

logic dummy52 : tscalar_with_defaultB

logic dummy53 : bool

type s25b__ref = { s25b__content : us_rep3
}

function s25b__ref___projection(a: s25b__ref) : us_rep3 = (a).s25b__content

axiom first__def_axiom : (first = c)

axiom first__def_axiom1 : (first1 = c)

 (* File "with_default.adb", line 45, characters 0-0 *)
goal WP_parameter_def :
  (forall no_def__split_fields:scalar_with_default.
  forall no_def__split_fields1:tscalar_with_defaultB.
  forall no_def__split_discrs:bool.
  forall simple__split_fields:scalar_with_default.
  forall simple__split_fields1:integer.
  forall w_disc__split_fields:scalar_with_default.
  forall w_disc__split_fields1:tscalar_with_defaultB.
  forall w_d_di__split_fields:scalar_with_default.
  forall w_d_di__split_fields1:tscalar_with_defaultB.
  forall w_d_di__split_discrs:bool.
  forall w_o_di__split_fields:scalar_with_default.
  forall w_o_di__split_fields1:tscalar_with_defaultB.
  forall w_o_di__split_discrs:bool.
  forall empty__split_fields:(int,tscalar_with_defaultB) farray.
  forall empty__split_fields1:t. forall empty__split_discrs:small_natural.
  forall wrap__split_fields:bool.
  forall wrap__split_fields1:scalar_with_default.
  forall wrap__split_fields2:tscalar_with_defaultB.
  forall wrap__split_fields3:bool. forall wrap__split_discrs:bool.
  forall temp___d_703:int. forall us:int. forall o:int.
  forall o1:tscalar_with_defaultB. forall o2:scalar_with_default.
  forall o3:tscalar_with_defaultB.
  forall with_default__ok_record__no_def__assume:bool.
  forall with_default__ok_record__no_def__assume1:scalar_with_default.
  forall with_default__ok_record__no_def__assume2:tscalar_with_defaultB.
  forall with_default__ok_record__no_def__assume3:bool.
  forall result:us_split_fields__ref3.
  forall no_def__split_fields2:us_split_fields6.
  forall result1:us_split_discrs__ref2.
  forall no_def__split_discrs1:us_split_discrs4. (in_range1(c) ->
  (in_range5(temp___d_703) -> ((((((((us = c) and dynamic_property(first,
  2147483647, c)) and (o = c)) and (o1 = of_rep1(o))) and ((dummy1 = o2) and
  (o1 = o3))) and ((of_int(0) = with_default__ok_record__no_def__assume) and
  (((with_default__ok_record__no_def__assume1 = o2) and
  (with_default__ok_record__no_def__assume2 = o3)) and
  (true = with_default__ok_record__no_def__assume3)))) and (((result = {
  us_split_fields__content3 = {
  rec__with_default__ok_record__rec_with_bad_discr__f1 =
  no_def__split_fields;
  rec__with_default__ok_record__rec_with_bad_discr__f2 =
  no_def__split_fields1 } }) and (no_def__split_fields2 = {
  rec__with_default__ok_record__rec_with_bad_discr__f1 =
  with_default__ok_record__no_def__assume1;
  rec__with_default__ok_record__rec_with_bad_discr__f2 =
  with_default__ok_record__no_def__assume2 })) and (((result1 = {
  us_split_discrs__content2 = {
  rec__with_default__ok_record__rec_with_bad_discr__b = no_def__split_discrs
  } }) and (no_def__split_discrs1 = {
  rec__with_default__ok_record__rec_with_bad_discr__b =
  with_default__ok_record__no_def__assume })) and
  (no_def__attr__constrained = false)))) ->
  (((to_int((no_def__split_discrs1).rec__with_default__ok_record__rec_with_bad_discr__b) = 0) ->
  dynamic_property(first, 2147483647,
  to_rep1((no_def__split_fields2).rec__with_default__ok_record__rec_with_bad_discr__f2))) ->
  (((to_rep(simple__split_fields) = 0) and
  (to_rep2(simple__split_fields1) = c)) -> (((first1 <= 2147483647) ->
  dynamic_property1(first1, 2147483647, to_rep2(simple__split_fields1))) ->
  ((((w_disc__split_discrs = of_int(1)) and
  ((to_int(w_disc__split_discrs) = 0) ->
  (to_rep1(w_disc__split_fields1) = 0))) and
  ((to_int(w_disc__split_discrs) = 1) ->
  (to_rep(w_disc__split_fields) = 0))) ->
  (((of_int(1) = w_disc__split_discrs) and
  ((to_int(w_disc__split_discrs) = 0) -> ((first <= 2147483647) ->
  dynamic_property(first, 2147483647, to_rep1(w_disc__split_fields1))))) ->
  (((w_d_di__attr__constrained = false) and
  (((w_d_di__split_discrs = of_int(1)) and
  ((to_int(w_d_di__split_discrs) = 1) ->
  (to_rep(w_d_di__split_fields) = 0))) and
  ((to_int(w_d_di__split_discrs) = 0) ->
  (to_rep1(w_d_di__split_fields1) = 0)))) ->
  (((to_int(w_d_di__split_discrs) = 0) -> ((first <= 2147483647) ->
  dynamic_property(first, 2147483647, to_rep1(w_d_di__split_fields1)))) ->
  (((w_o_di__attr__constrained = false) and
  (((w_o_di__split_discrs = of_int(0)) and
  ((to_int(w_o_di__split_discrs) = 1) ->
  (to_rep(w_o_di__split_fields) = 0))) and
  ((to_int(w_o_di__split_discrs) = 0) ->
  (to_rep1(w_o_di__split_fields1) = c)))) ->
  (((to_int(w_o_di__split_discrs) = 0) -> ((first <= 2147483647) ->
  dynamic_property(first, 2147483647, to_rep1(w_o_di__split_fields1)))) ->
  (((empty__attr__constrained = false) and
  ((to_rep3(empty__split_discrs) = 0) and
  (forall temp___541:int.
  (((to_rep4(first2(empty__split_fields1)) <= temp___541) and
  (temp___541 <= to_rep4(last(empty__split_fields1)))) ->
  (to_rep1((empty__split_fields[temp___541])) = 0))))) ->
  (((dynamic_property3(1, to_rep3(empty__split_discrs),
  to_rep4(first2(empty__split_fields1)),
  to_rep4(last(empty__split_fields1))) and
  ((to_rep4(first2(empty__split_fields1)) = 1) and
  (to_rep4(last(empty__split_fields1)) = to_rep3(empty__split_discrs)))) and
  (forall temp___536:int.
  (((to_rep4(first2(empty__split_fields1)) <= temp___536) and
  (temp___536 <= to_rep4(last(empty__split_fields1)))) ->
  ((first <= 2147483647) -> dynamic_property(first, 2147483647,
  to_rep1((empty__split_fields[temp___536]))))))) ->
  (((wrap__attr__constrained = false) and
  ((wrap__split_discrs = of_int(1)) and ((wrap__split_fields3 = true) and
  (((wrap__split_fields = wrap__split_discrs) and
  ((to_int(wrap__split_fields) = 1) ->
  (to_rep(wrap__split_fields1) = 0))) and
  ((to_int(wrap__split_fields) = 0) ->
  (to_rep1(wrap__split_fields2) = 0)))))) ->
  (((((wrap__split_discrs = wrap__split_fields) and
  (wrap__split_fields3 = true)) and ((to_int(wrap__split_fields) = 0) ->
  ((first <= 2147483647) -> dynamic_property(first, 2147483647,
  to_rep1(wrap__split_fields2))))) and (wrap__split_fields3 = true)) ->
  ((to_rep(simple__split_fields) = 0) ->
  ((to_rep2(simple__split_fields1) = c) ->
  ((to_rep(w_disc__split_fields) = 0) ->
  ((to_rep(w_d_di__split_fields) = 0) ->
  ((not (w_o_di__split_discrs = true)) ->
  ((to_rep1(w_o_di__split_fields1) = c) ->
  ((to_rep4(last(empty__split_fields1)) = 0) ->
  ((wrap__split_discrs = r26b) ->
  (to_int(wrap__split_fields) = 1))))))))))))))))))))))))))
