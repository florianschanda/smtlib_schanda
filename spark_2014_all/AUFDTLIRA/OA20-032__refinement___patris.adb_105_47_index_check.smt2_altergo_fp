(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type cell

predicate in_range1(x: int) = ((0 <= x) and (x <= 7))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : cell, cell -> bool

logic dummy : cell

type cell__ref = { cell__content : cell
}

function cell__ref___projection(a: cell__ref) : cell = (a).cell__content

logic to_rep : cell -> int

logic of_rep : int -> cell

axiom inversion_axiom : (forall x:cell [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:cell [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type shape

predicate in_range2(x: int) = ((1 <= x) and (x <= 7))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : shape, shape -> bool

logic dummy1 : shape

type shape__ref = { shape__content : shape
}

function shape__ref___projection(a: shape__ref) : shape = (a).shape__content

logic to_rep1 : shape -> int

logic of_rep1 : int -> shape

axiom inversion_axiom1 :
  (forall x:shape [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:shape [to_rep1(x)]. in_range2(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range2(x) ->
  (to_rep1(of_rep1(x)) = x)))

type three_shape

predicate in_range3(x: int) = ((3 <= x) and (x <= 7))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : three_shape, three_shape -> bool

logic dummy2 : three_shape

type three_shape__ref = { three_shape__content : three_shape
}

function three_shape__ref___projection(a: three_shape__ref) : three_shape =
  (a).three_shape__content

type x_coord

predicate in_range4(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : x_coord, x_coord -> bool

logic dummy3 : x_coord

type x_coord__ref = { x_coord__content : x_coord
}

function x_coord__ref___projection(a: x_coord__ref) : x_coord =
  (a).x_coord__content

type y_coord

predicate in_range5(x: int) = ((1 <= x) and (x <= 20))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq4 : y_coord, y_coord -> bool

logic dummy4 : y_coord

type y_coord__ref = { y_coord__content : y_coord
}

function y_coord__ref___projection(a: y_coord__ref) : y_coord =
  (a).y_coord__content

type map__ref = { map__content : (int,cell) farray
}

logic slide : (int,cell) farray, int, int -> (int,cell) farray

axiom slide_eq :
  (forall a:(int,cell) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,cell) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq7 : (int,cell) farray, int, int, (int,cell) farray, int,
  int -> bool

axiom bool_eq_def6 :
  (forall a:(int,cell) farray. forall a__first:int. forall a__last:int.
  forall b:(int,cell) farray. forall b__first:int. forall b__last:int
  [bool_eq7(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_161:int. ((((a__first <= temp___idx_161) and
  (temp___idx_161 <= a__last)) and
  (to_rep((a[temp___idx_161])) = to_rep((b[((b__first - a__first) + temp___idx_161)])))) or
  (not ((a__first <= temp___idx_161) and (temp___idx_161 <= a__last)))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_161:int. (((a__first <= temp___idx_161) and
  (temp___idx_161 <= a__last)) ->
  (to_rep((a[temp___idx_161])) = to_rep((b[((b__first - a__first) + temp___idx_161)]))))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,cell) farray. forall b:(int,cell) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_161:int. (((a__first <= temp___idx_161) and
  (temp___idx_161 <= a__last)) ->
  (to_rep((a[temp___idx_161])) = to_rep((b[((b__first - a__first) + temp___idx_161)])))))))))

logic dummy5 : (int,cell) farray

logic value__size : int

logic object__size : (int,cell) farray -> int

logic value__component__size : int

logic object__component__size : (int,cell) farray -> int

logic value__alignment : int

logic object__alignment : (int,cell) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,cell) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,cell) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,cell) farray. (0 <= object__alignment(a)))

logic user_eq5 : (int,cell) farray, (int,cell) farray -> bool

type map__ref1 = { map__content1 : (int,(int,cell) farray) farray
}

logic slide1 : (int,(int,cell) farray) farray, int,
  int -> (int,(int,cell) farray) farray

axiom slide_eq1 :
  (forall a:(int,(int,cell) farray) farray.
  (forall first:int [slide1(a, first, first)]. (slide1(a, first, first) = a)))

axiom slide_def1 :
  (forall a:(int,(int,cell) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq8 : (int,(int,cell) farray) farray, int, int,
  (int,(int,cell) farray) farray, int, int -> bool

axiom bool_eq_def7 :
  (forall a:(int,(int,cell) farray) farray. forall a__first:int.
  forall a__last:int. forall b:(int,(int,cell) farray) farray.
  forall b__first:int. forall b__last:int [bool_eq8(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_162:int. ((((a__first <= temp___idx_162) and
  (temp___idx_162 <= a__last)) and (bool_eq7((a[temp___idx_162]), 1, 10,
  (b[((b__first - a__first) + temp___idx_162)]), 1, 10) = true)) or
  (not ((a__first <= temp___idx_162) and (temp___idx_162 <= a__last)))))) ->
  (bool_eq8(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_162:int. (((a__first <= temp___idx_162) and
  (temp___idx_162 <= a__last)) -> (bool_eq7((a[temp___idx_162]), 1, 10,
  (b[((b__first - a__first) + temp___idx_162)]), 1, 10) = true))))) ->
  (bool_eq8(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,(int,cell) farray) farray.
  forall b:(int,(int,cell) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_162:int. (((a__first <= temp___idx_162) and
  (temp___idx_162 <= a__last)) -> (bool_eq7((a[temp___idx_162]), 1, 10,
  (b[((b__first - a__first) + temp___idx_162)]), 1, 10) = true)))))))

logic attr__ATTRIBUTE_ADDRESS : int

type px_coord

predicate in_range6(x: int) = (((- 1) <= x) and (x <= 9))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : px_coord, px_coord -> bool

logic dummy6 : px_coord

type px_coord__ref = { px_coord__content : px_coord
}

function px_coord__ref___projection(a: px_coord__ref) : px_coord =
  (a).px_coord__content

logic to_rep2 : px_coord -> int

logic of_rep2 : int -> px_coord

axiom inversion_axiom2 :
  (forall x:px_coord [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:px_coord [to_rep2(x)]. in_range6(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range6(x) ->
  (to_rep2(of_rep2(x)) = x)))

type py_coord

predicate in_range7(x: int) = (((- 1) <= x) and (x <= 19))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq7 : py_coord, py_coord -> bool

logic dummy7 : py_coord

type py_coord__ref = { py_coord__content : py_coord
}

function py_coord__ref___projection(a: py_coord__ref) : py_coord =
  (a).py_coord__content

logic to_rep3 : py_coord -> int

logic of_rep3 : int -> py_coord

axiom inversion_axiom3 :
  (forall x:py_coord [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 : (forall x:py_coord [to_rep3(x)]. in_range7(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range7(x) ->
  (to_rep3(of_rep3(x)) = x)))

type direction

predicate in_range8(x: int) = ((0 <= x) and (x <= 3))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq8 : direction, direction -> bool

logic dummy8 : direction

type direction__ref = { direction__content : direction
}

function direction__ref___projection(a: direction__ref) : direction =
  (a).direction__content

logic to_rep4 : direction -> int

logic of_rep4 : int -> direction

axiom inversion_axiom4 :
  (forall x:direction [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 : (forall x:direction [to_rep4(x)]. in_range8(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range8(x) ->
  (to_rep4(of_rep4(x)) = x)))

type us_split_fields = { rec__patris__piece__s : shape; rec__patris__piece__d
: direction; rec__patris__piece__x : px_coord; rec__patris__piece__y :
py_coord
}

function us_split_fields_S__projection(a: us_split_fields) : shape =
  (a).rec__patris__piece__s

function us_split_fields_D__projection(a: us_split_fields) : direction =
  (a).rec__patris__piece__d

function us_split_fields_X__projection(a: us_split_fields) : px_coord =
  (a).rec__patris__piece__x

function us_split_fields_Y__projection(a: us_split_fields) : py_coord =
  (a).rec__patris__piece__y

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___5__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___5__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq12 : us_rep, us_rep -> bool

axiom bool_eq_def11 :
  (forall a:us_rep. forall b:us_rep [bool_eq12(a, b)].
  ((((((to_rep1(((a).us_split_fields1).rec__patris__piece__s) = to_rep1(((b).us_split_fields1).rec__patris__piece__s)) and
  (to_rep4(((a).us_split_fields1).rec__patris__piece__d) = to_rep4(((b).us_split_fields1).rec__patris__piece__d))) and
  (to_rep2(((a).us_split_fields1).rec__patris__piece__x) = to_rep2(((b).us_split_fields1).rec__patris__piece__x))) and
  (to_rep3(((a).us_split_fields1).rec__patris__piece__y) = to_rep3(((b).us_split_fields1).rec__patris__piece__y))) ->
  (bool_eq12(a, b) = true)) and
  ((not ((((to_rep1(((a).us_split_fields1).rec__patris__piece__s) = to_rep1(((b).us_split_fields1).rec__patris__piece__s)) and
  (to_rep4(((a).us_split_fields1).rec__patris__piece__d) = to_rep4(((b).us_split_fields1).rec__patris__piece__d))) and
  (to_rep2(((a).us_split_fields1).rec__patris__piece__x) = to_rep2(((b).us_split_fields1).rec__patris__piece__x))) and
  (to_rep3(((a).us_split_fields1).rec__patris__piece__y) = to_rep3(((b).us_split_fields1).rec__patris__piece__y)))) ->
  (bool_eq12(a, b) = false))))

logic value__size1 : int

logic object__size1 : us_rep -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:shape. forall a1:direction. forall a2:px_coord.
  forall a3:py_coord. (0 <= object__size1({ us_split_fields1 = {
  rec__patris__piece__s = a; rec__patris__piece__d = a1;
  rec__patris__piece__x = a2; rec__patris__piece__y = a3 } })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:shape. forall a1:direction. forall a2:px_coord.
  forall a3:py_coord. (0 <= object__alignment1({ us_split_fields1 = {
  rec__patris__piece__s = a; rec__patris__piece__d = a1;
  rec__patris__piece__x = a2; rec__patris__piece__y = a3 } })))

logic patris__piece__s__first__bit : int

logic patris__piece__s__last__bit : int

logic patris__piece__s__position : int

axiom patris__piece__s__first__bit_axiom :
  (0 <= patris__piece__s__first__bit)

axiom patris__piece__s__last__bit_axiom :
  (patris__piece__s__first__bit <  patris__piece__s__last__bit)

axiom patris__piece__s__position_axiom : (0 <= patris__piece__s__position)

logic patris__piece__d__first__bit : int

logic patris__piece__d__last__bit : int

logic patris__piece__d__position : int

axiom patris__piece__d__first__bit_axiom :
  (0 <= patris__piece__d__first__bit)

axiom patris__piece__d__last__bit_axiom :
  (patris__piece__d__first__bit <  patris__piece__d__last__bit)

axiom patris__piece__d__position_axiom : (0 <= patris__piece__d__position)

logic patris__piece__x__first__bit : int

logic patris__piece__x__last__bit : int

logic patris__piece__x__position : int

axiom patris__piece__x__first__bit_axiom :
  (0 <= patris__piece__x__first__bit)

axiom patris__piece__x__last__bit_axiom :
  (patris__piece__x__first__bit <  patris__piece__x__last__bit)

axiom patris__piece__x__position_axiom : (0 <= patris__piece__x__position)

logic patris__piece__y__first__bit : int

logic patris__piece__y__last__bit : int

logic patris__piece__y__position : int

axiom patris__piece__y__first__bit_axiom :
  (0 <= patris__piece__y__first__bit)

axiom patris__piece__y__last__bit_axiom :
  (patris__piece__y__first__bit <  patris__piece__y__last__bit)

axiom patris__piece__y__position_axiom : (0 <= patris__piece__y__position)

logic user_eq9 : us_rep, us_rep -> bool

logic dummy9 : shape

logic dummy10 : direction

logic dummy11 : px_coord

logic dummy12 : py_coord

type piece__ref = { piece__content : us_rep
}

function piece__ref___projection(a: piece__ref) : us_rep = (a).piece__content

logic attr__ATTRIBUTE_ADDRESS1 : int

type state

predicate in_range9(x: int) = ((0 <= x) and (x <= 4))

logic bool_eq13 : int, int -> bool

axiom bool_eq_def12 :
  (forall x:int. forall y:int [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq10 : state, state -> bool

logic dummy13 : state

type state__ref = { state__content : state
}

function state__ref___projection(a: state__ref) : state = (a).state__content

logic attr__ATTRIBUTE_ADDRESS2 : int

logic get_state : int -> int

logic get_state__function_guard : int, int -> prop

axiom get_state__post_axiom :
  (forall patris__cur_state:int [get_state(patris__cur_state)].
  (in_range9(patris__cur_state) -> in_range9(get_state(patris__cur_state))))

axiom get_state__def_axiom :
  (forall patris__cur_state:int [get_state(patris__cur_state)].
  (in_range9(patris__cur_state) ->
  (get_state(patris__cur_state) = patris__cur_state)))

type map

type map__ref2 = { map__content2 : map
}

logic get : map, int, int -> bool

logic set : map, int, int, bool -> map

axiom Select_eq :
  (forall m:map.
  (forall i:int.
  (forall j:int.
  (forall a:bool [set(m, i, j, a)]. (get(set(m, i, j, a), i, j) = a)))))

axiom Select_neq :
  (forall m:map.
  (forall i:int. forall i2:int.
  (forall j:int. forall j2:int.
  (forall a:bool [get(set(m, i, j, a), i2, j2)| set(m, i, j, a), get(m, i2,
  j2)]. ((not ((i = i2) and (j = j2))) -> (get(set(m, i, j, a), i2,
  j2) = get(m, i2, j2)))))))

logic slide2 : map, int, int, int, int -> map

axiom slide_def2 :
  (forall a:map.
  (forall new_first:int. forall old_first:int.
  (forall new_first_2:int. forall old_first_2:int.
  (forall i:int.
  (forall j:int [get(slide2(a, old_first, new_first, old_first_2,
  new_first_2), i, j)]. (get(slide2(a, old_first, new_first, old_first_2,
  new_first_2), i, j) = get(a, (i - (new_first - old_first)),
  (j - (new_first_2 - old_first_2)))))))))

logic bool_eq14 : map, int, int, int, int, map, int, int, int, int -> bool

axiom bool_eq_def13 :
  (forall a:map. forall a__first:int. forall a__last:int.
  forall a__first_2:int. forall a__last_2:int. forall b:map.
  forall b__first:int. forall b__last:int. forall b__first_2:int.
  forall b__last_2:int [bool_eq14(a, a__first, a__last, a__first_2,
  a__last_2, b, b__first, b__last, b__first_2, b__last_2)].
  (((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (((a__first_2 <= a__last_2) and ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2)))) or
  ((not (a__first_2 <= a__last_2)) and (b__last_2 <  b__first_2)))) and
  (forall temp___idx_163:int. forall temp___idx_164:int.
  (((((a__first <= temp___idx_163) and (temp___idx_163 <= a__last)) and
  ((a__first_2 <= temp___idx_164) and (temp___idx_164 <= a__last_2))) and
  (get(a, temp___idx_163, temp___idx_164) = get(b,
  ((b__first - a__first) + temp___idx_163),
  ((b__first_2 - a__first_2) + temp___idx_164)))) or
  (not (((a__first <= temp___idx_163) and (temp___idx_163 <= a__last)) and
  ((a__first_2 <= temp___idx_164) and (temp___idx_164 <= a__last_2))))))) ->
  (bool_eq14(a, a__first, a__last, a__first_2, a__last_2, b, b__first,
  b__last, b__first_2, b__last_2) = true)) and
  ((not (((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (((a__first_2 <= a__last_2) -> ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2)))) and
  ((not (a__first_2 <= a__last_2)) -> (b__last_2 <  b__first_2)))) and
  (forall temp___idx_163:int. forall temp___idx_164:int.
  ((((a__first <= temp___idx_163) and (temp___idx_163 <= a__last)) and
  ((a__first_2 <= temp___idx_164) and (temp___idx_164 <= a__last_2))) ->
  (get(a, temp___idx_163, temp___idx_164) = get(b,
  ((b__first - a__first) + temp___idx_163),
  ((b__first_2 - a__first_2) + temp___idx_164))))))) -> (bool_eq14(a,
  a__first, a__last, a__first_2, a__last_2, b, b__first, b__last, b__first_2,
  b__last_2) = false))))

axiom bool_eq_rev2 :
  (forall a:map. forall b:map.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq14(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> (((((a__first <= a__last) ->
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (((a__first_2 <= a__last_2) -> ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2)))) and
  ((not (a__first_2 <= a__last_2)) -> (b__last_2 <  b__first_2)))) and
  (forall temp___idx_163:int. forall temp___idx_164:int.
  ((((a__first <= temp___idx_163) and (temp___idx_163 <= a__last)) and
  ((a__first_2 <= temp___idx_164) and (temp___idx_164 <= a__last_2))) ->
  (get(a, temp___idx_163, temp___idx_164) = get(b,
  ((b__first - a__first) + temp___idx_163),
  ((b__first_2 - a__first_2) + temp___idx_164)))))))))

logic dummy14 : map

logic value__size2 : int

logic object__size2 : map -> int

logic value__component__size1 : int

logic object__component__size1 : map -> int

logic value__alignment2 : int

logic object__alignment2 : map -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (forall a:map. (0 <= object__size2(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:map. (0 <= object__component__size1(a)))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 : (forall a:map. (0 <= object__alignment2(a)))

logic user_eq11 : map, map -> bool

type map__ref3 = { map__content3 : (int,map) farray
}

logic slide3 : (int,map) farray, int, int -> (int,map) farray

axiom slide_eq2 :
  (forall a:(int,map) farray.
  (forall first:int [slide3(a, first, first)]. (slide3(a, first, first) = a)))

axiom slide_def3 :
  (forall a:(int,map) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide3(a, old_first, new_first)[i])]. ((slide3(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq15 : (int,map) farray, int, int, (int,map) farray, int,
  int -> bool

axiom bool_eq_def14 :
  (forall a:(int,map) farray. forall a__first:int. forall a__last:int.
  forall b:(int,map) farray. forall b__first:int. forall b__last:int
  [bool_eq15(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_165:int. ((((a__first <= temp___idx_165) and
  (temp___idx_165 <= a__last)) and (bool_eq14((a[temp___idx_165]), 0, 3, 0,
  3, (b[((b__first - a__first) + temp___idx_165)]), 0, 3, 0, 3) = true)) or
  (not ((a__first <= temp___idx_165) and (temp___idx_165 <= a__last)))))) ->
  (bool_eq15(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_165:int. (((a__first <= temp___idx_165) and
  (temp___idx_165 <= a__last)) -> (bool_eq14((a[temp___idx_165]), 0, 3, 0, 3,
  (b[((b__first - a__first) + temp___idx_165)]), 0, 3, 0, 3) = true))))) ->
  (bool_eq15(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev3 :
  (forall a:(int,map) farray. forall b:(int,map) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq15(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_165:int. (((a__first <= temp___idx_165) and
  (temp___idx_165 <= a__last)) -> (bool_eq14((a[temp___idx_165]), 0, 3, 0, 3,
  (b[((b__first - a__first) + temp___idx_165)]), 0, 3, 0, 3) = true)))))))

logic possible_i_shapes : (int,map) farray

logic attr__ATTRIBUTE_ADDRESS3 : int

logic patris__possible_i_shapes__aggregate_def : map, map, map,
  map -> (int,map) farray

logic temp___172 : bool, bool, bool, bool, bool, bool, bool, bool, bool,
  bool, bool, bool, bool, bool, bool, bool -> map

logic temp___192 : bool, bool, bool, bool, bool, bool, bool, bool, bool,
  bool, bool, bool, bool, bool, bool, bool -> map

logic temp___212 : bool, bool, bool, bool, bool, bool, bool, bool, bool,
  bool, bool, bool, bool, bool, bool, bool -> map

logic temp___232 : bool, bool, bool, bool, bool, bool, bool, bool, bool,
  bool, bool, bool, bool, bool, bool, bool -> map

logic dummy15 : map

logic value__size3 : int

logic object__size3 : map -> int

logic value__component__size2 : int

logic object__component__size2 : map -> int

logic value__alignment3 : int

logic object__alignment3 : map -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 : (forall a:map. (0 <= object__size3(a)))

axiom value__component__size_axiom2 : (0 <= value__component__size2)

axiom object__component__size_axiom2 :
  (forall a:map. (0 <= object__component__size2(a)))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 : (forall a:map. (0 <= object__alignment3(a)))

logic user_eq12 : map, map -> bool

type map1

type map__ref4 = { map__content4 : map1
}

logic get1 : map1, int, int -> map

logic set1 : map1, int, int, map -> map1

axiom Select_eq1 :
  (forall m:map1.
  (forall i:int.
  (forall j:int.
  (forall a:map [set1(m, i, j, a)]. (get1(set1(m, i, j, a), i, j) = a)))))

axiom Select_neq1 :
  (forall m:map1.
  (forall i:int. forall i2:int.
  (forall j:int. forall j2:int.
  (forall a:map [get1(set1(m, i, j, a), i2, j2)| set1(m, i, j, a), get1(m,
  i2, j2)]. ((not ((i = i2) and (j = j2))) -> (get1(set1(m, i, j, a), i2,
  j2) = get1(m, i2, j2)))))))

logic slide4 : map1, int, int, int, int -> map1

axiom slide_def4 :
  (forall a:map1.
  (forall new_first:int. forall old_first:int.
  (forall new_first_2:int. forall old_first_2:int.
  (forall i:int.
  (forall j:int [get1(slide4(a, old_first, new_first, old_first_2,
  new_first_2), i, j)]. (get1(slide4(a, old_first, new_first, old_first_2,
  new_first_2), i, j) = get1(a, (i - (new_first - old_first)),
  (j - (new_first_2 - old_first_2)))))))))

logic bool_eq16 : map1, int, int, int, int, map1, int, int, int, int -> bool

axiom bool_eq_def15 :
  (forall a:map1. forall a__first:int. forall a__last:int.
  forall a__first_2:int. forall a__last_2:int. forall b:map1.
  forall b__first:int. forall b__last:int. forall b__first_2:int.
  forall b__last_2:int [bool_eq16(a, a__first, a__last, a__first_2,
  a__last_2, b, b__first, b__last, b__first_2, b__last_2)].
  (((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (((a__first_2 <= a__last_2) and ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2)))) or
  ((not (a__first_2 <= a__last_2)) and (b__last_2 <  b__first_2)))) and
  (forall temp___idx_252:int. forall temp___idx_253:int.
  (((((a__first <= temp___idx_252) and (temp___idx_252 <= a__last)) and
  ((a__first_2 <= temp___idx_253) and (temp___idx_253 <= a__last_2))) and
  (bool_eq14(get1(a, temp___idx_252, temp___idx_253), 0, 2, 0, 2, get1(b,
  ((b__first - a__first) + temp___idx_252),
  ((b__first_2 - a__first_2) + temp___idx_253)), 0, 2, 0, 2) = true)) or
  (not (((a__first <= temp___idx_252) and (temp___idx_252 <= a__last)) and
  ((a__first_2 <= temp___idx_253) and (temp___idx_253 <= a__last_2))))))) ->
  (bool_eq16(a, a__first, a__last, a__first_2, a__last_2, b, b__first,
  b__last, b__first_2, b__last_2) = true)) and
  ((not (((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (((a__first_2 <= a__last_2) -> ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2)))) and
  ((not (a__first_2 <= a__last_2)) -> (b__last_2 <  b__first_2)))) and
  (forall temp___idx_252:int. forall temp___idx_253:int.
  ((((a__first <= temp___idx_252) and (temp___idx_252 <= a__last)) and
  ((a__first_2 <= temp___idx_253) and (temp___idx_253 <= a__last_2))) ->
  (bool_eq14(get1(a, temp___idx_252, temp___idx_253), 0, 2, 0, 2, get1(b,
  ((b__first - a__first) + temp___idx_252),
  ((b__first_2 - a__first_2) + temp___idx_253)), 0, 2, 0, 2) = true))))) ->
  (bool_eq16(a, a__first, a__last, a__first_2, a__last_2, b, b__first,
  b__last, b__first_2, b__last_2) = false))))

axiom bool_eq_rev4 :
  (forall a:map1. forall b:map1.
  (forall a__first:int. forall a__last:int. forall a__first_2:int.
  forall a__last_2:int. forall b__first:int. forall b__last:int.
  forall b__first_2:int. forall b__last_2:int. ((bool_eq16(b, b__first,
  b__last, b__first_2, b__last_2, a, a__first, a__last, a__first_2,
  a__last_2) = true) -> (((((a__first <= a__last) ->
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (((a__first_2 <= a__last_2) -> ((b__first_2 <= b__last_2) and
  ((a__last_2 - a__first_2) = (b__last_2 - b__first_2)))) and
  ((not (a__first_2 <= a__last_2)) -> (b__last_2 <  b__first_2)))) and
  (forall temp___idx_252:int. forall temp___idx_253:int.
  ((((a__first <= temp___idx_252) and (temp___idx_252 <= a__last)) and
  ((a__first_2 <= temp___idx_253) and (temp___idx_253 <= a__last_2))) ->
  (bool_eq14(get1(a, temp___idx_252, temp___idx_253), 0, 2, 0, 2, get1(b,
  ((b__first - a__first) + temp___idx_252),
  ((b__first_2 - a__first_2) + temp___idx_253)), 0, 2, 0, 2) = true)))))))

logic possible_three_shapes : map1

logic attr__ATTRIBUTE_ADDRESS4 : int

logic patris__possible_three_shapes__aggregate_def : map, map, map, map, map,
  map, map, map, map, map, map, map, map, map, map, map, map, map, map,
  map -> map1

logic temp___277 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___290 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___303 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___316 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___329 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___342 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___355 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___368 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___381 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___394 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___407 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___420 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___433 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___446 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___459 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___472 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___485 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___498 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___511 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic temp___524 : bool, bool, bool, bool, bool, bool, bool, bool,
  bool -> map

logic is_empty : (int,(int,cell) farray) farray, int, int -> bool

logic is_empty__function_guard : bool, (int,(int,cell) farray) farray, int,
  int -> prop

type integer

predicate in_range10(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq17 : int, int -> bool

axiom bool_eq_def16 :
  (forall x:int. forall y:int [bool_eq17(x, y)]. (((x = y) -> (bool_eq17(x,
  y) = true)) and ((not (x = y)) -> (bool_eq17(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq13 : integer, integer -> bool

logic dummy16 : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

axiom is_empty__post_axiom : true

axiom is_empty__def_axiom :
  (forall b:(int,(int,cell) farray) farray.
  (forall y:int. forall x:int [is_empty(b, y, x)]. ((is_empty(b, y,
  x) = true) <-> ((in_range4(x) and in_range5(y)) and
  (to_rep(((b[y])[x])) = 0)))))

logic valid_configuration__2 : int, us_split_fields,
  (int,(int,cell) farray) farray -> bool

logic valid_configuration__2__function_guard : bool, int, us_split_fields,
  (int,(int,cell) farray) farray -> prop

logic get_board : (int,(int,cell) farray) farray -> (int,(int,cell) farray) farray

logic get_board__function_guard : (int,(int,cell) farray) farray,
  (int,(int,cell) farray) farray -> prop

logic get_piece : us_split_fields -> us_rep

logic get_piece__function_guard : us_rep, us_split_fields -> prop

logic valid_configuration : (int,(int,cell) farray) farray, int,
  us_rep -> bool

logic valid_configuration__function_guard : bool,
  (int,(int,cell) farray) farray, int, us_rep -> prop

axiom valid_configuration__2__post_axiom : true

axiom valid_configuration__2__def_axiom :
  (forall patris__cur_state:int.
  (forall patris__cur_piece__fields:shape.
  forall patris__cur_piece__fields1:direction.
  forall patris__cur_piece__fields2:px_coord.
  forall patris__cur_piece__fields3:py_coord.
  (forall patris__cur_board:(int,(int,cell) farray) farray
  [valid_configuration__2(patris__cur_state, { rec__patris__piece__s =
  patris__cur_piece__fields; rec__patris__piece__d =
  patris__cur_piece__fields1; rec__patris__piece__x =
  patris__cur_piece__fields2; rec__patris__piece__y =
  patris__cur_piece__fields3 }, patris__cur_board)].
  ((valid_configuration__2(patris__cur_state, { rec__patris__piece__s =
  patris__cur_piece__fields; rec__patris__piece__d =
  patris__cur_piece__fields1; rec__patris__piece__x =
  patris__cur_piece__fields2; rec__patris__piece__y =
  patris__cur_piece__fields3 }, patris__cur_board) = true) <->
  (valid_configuration(get_board(patris__cur_board),
  get_state(patris__cur_state), get_piece({ rec__patris__piece__s =
  patris__cur_piece__fields; rec__patris__piece__d =
  patris__cur_piece__fields1; rec__patris__piece__x =
  patris__cur_piece__fields2; rec__patris__piece__y =
  patris__cur_piece__fields3 })) = true)))))

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

axiom get_board__post_axiom : true

axiom get_board__def_axiom :
  (forall patris__cur_board:(int,(int,cell) farray) farray
  [get_board(patris__cur_board)].
  (get_board(patris__cur_board) = patris__cur_board))

axiom get_piece__post_axiom : true

axiom get_piece__def_axiom :
  (forall patris__cur_piece__fields:shape.
  forall patris__cur_piece__fields1:direction.
  forall patris__cur_piece__fields2:px_coord.
  forall patris__cur_piece__fields3:py_coord [get_piece({
  rec__patris__piece__s = patris__cur_piece__fields; rec__patris__piece__d =
  patris__cur_piece__fields1; rec__patris__piece__x =
  patris__cur_piece__fields2; rec__patris__piece__y =
  patris__cur_piece__fields3 })]. (get_piece({ rec__patris__piece__s =
  patris__cur_piece__fields; rec__patris__piece__d =
  patris__cur_piece__fields1; rec__patris__piece__x =
  patris__cur_piece__fields2; rec__patris__piece__y =
  patris__cur_piece__fields3 }) = { us_split_fields1 = {
  rec__patris__piece__s = patris__cur_piece__fields; rec__patris__piece__d =
  patris__cur_piece__fields1; rec__patris__piece__x =
  patris__cur_piece__fields2; rec__patris__piece__y =
  patris__cur_piece__fields3 } }))

axiom possible_i_shapes__def_axiom :
  (possible_i_shapes = patris__possible_i_shapes__aggregate_def(temp___172(of_int(0),
  of_int(0), of_int(0), of_int(0), of_int(1), of_int(1), of_int(1),
  of_int(1), of_int(0), of_int(0), of_int(0), of_int(0), of_int(0),
  of_int(0), of_int(0), of_int(0)), temp___192(of_int(0), of_int(0),
  of_int(1), of_int(0), of_int(0), of_int(0), of_int(1), of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(0), of_int(0), of_int(0),
  of_int(1), of_int(0)), temp___212(of_int(0), of_int(0), of_int(0),
  of_int(0), of_int(0), of_int(0), of_int(0), of_int(0), of_int(1),
  of_int(1), of_int(1), of_int(1), of_int(0), of_int(0), of_int(0),
  of_int(0)), temp___232(of_int(0), of_int(1), of_int(0), of_int(0),
  of_int(0), of_int(1), of_int(0), of_int(0), of_int(0), of_int(1),
  of_int(0), of_int(0), of_int(0), of_int(1), of_int(0), of_int(0))))

axiom def_axiom :
  (forall temp___174:bool. forall temp___175:bool. forall temp___176:bool.
  forall temp___177:bool. forall temp___178:bool. forall temp___179:bool.
  forall temp___180:bool. forall temp___181:bool. forall temp___182:bool.
  forall temp___183:bool. forall temp___184:bool. forall temp___185:bool.
  forall temp___186:bool. forall temp___187:bool. forall temp___188:bool.
  forall temp___189:bool. (((((((get(temp___172(temp___174, temp___175,
  temp___176, temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182, temp___183, temp___184, temp___185, temp___186, temp___187,
  temp___188, temp___189), 0, 0) = temp___174) and
  (get(temp___172(temp___174, temp___175, temp___176, temp___177, temp___178,
  temp___179, temp___180, temp___181, temp___182, temp___183, temp___184,
  temp___185, temp___186, temp___187, temp___188, temp___189), 0,
  1) = temp___175)) and (get(temp___172(temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181, temp___182,
  temp___183, temp___184, temp___185, temp___186, temp___187, temp___188,
  temp___189), 0, 2) = temp___176)) and (get(temp___172(temp___174,
  temp___175, temp___176, temp___177, temp___178, temp___179, temp___180,
  temp___181, temp___182, temp___183, temp___184, temp___185, temp___186,
  temp___187, temp___188, temp___189), 0, 3) = temp___177)) and
  ((((get(temp___172(temp___174, temp___175, temp___176, temp___177,
  temp___178, temp___179, temp___180, temp___181, temp___182, temp___183,
  temp___184, temp___185, temp___186, temp___187, temp___188, temp___189), 1,
  0) = temp___178) and (get(temp___172(temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181, temp___182,
  temp___183, temp___184, temp___185, temp___186, temp___187, temp___188,
  temp___189), 1, 1) = temp___179)) and (get(temp___172(temp___174,
  temp___175, temp___176, temp___177, temp___178, temp___179, temp___180,
  temp___181, temp___182, temp___183, temp___184, temp___185, temp___186,
  temp___187, temp___188, temp___189), 1, 2) = temp___180)) and
  (get(temp___172(temp___174, temp___175, temp___176, temp___177, temp___178,
  temp___179, temp___180, temp___181, temp___182, temp___183, temp___184,
  temp___185, temp___186, temp___187, temp___188, temp___189), 1,
  3) = temp___181))) and ((((get(temp___172(temp___174, temp___175,
  temp___176, temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182, temp___183, temp___184, temp___185, temp___186, temp___187,
  temp___188, temp___189), 2, 0) = temp___182) and
  (get(temp___172(temp___174, temp___175, temp___176, temp___177, temp___178,
  temp___179, temp___180, temp___181, temp___182, temp___183, temp___184,
  temp___185, temp___186, temp___187, temp___188, temp___189), 2,
  1) = temp___183)) and (get(temp___172(temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181, temp___182,
  temp___183, temp___184, temp___185, temp___186, temp___187, temp___188,
  temp___189), 2, 2) = temp___184)) and (get(temp___172(temp___174,
  temp___175, temp___176, temp___177, temp___178, temp___179, temp___180,
  temp___181, temp___182, temp___183, temp___184, temp___185, temp___186,
  temp___187, temp___188, temp___189), 2, 3) = temp___185))) and
  ((((get(temp___172(temp___174, temp___175, temp___176, temp___177,
  temp___178, temp___179, temp___180, temp___181, temp___182, temp___183,
  temp___184, temp___185, temp___186, temp___187, temp___188, temp___189), 3,
  0) = temp___186) and (get(temp___172(temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181, temp___182,
  temp___183, temp___184, temp___185, temp___186, temp___187, temp___188,
  temp___189), 3, 1) = temp___187)) and (get(temp___172(temp___174,
  temp___175, temp___176, temp___177, temp___178, temp___179, temp___180,
  temp___181, temp___182, temp___183, temp___184, temp___185, temp___186,
  temp___187, temp___188, temp___189), 3, 2) = temp___188)) and
  (get(temp___172(temp___174, temp___175, temp___176, temp___177, temp___178,
  temp___179, temp___180, temp___181, temp___182, temp___183, temp___184,
  temp___185, temp___186, temp___187, temp___188, temp___189), 3,
  3) = temp___189))))

axiom def_axiom1 :
  (forall temp___167:map. forall temp___168:map. forall temp___169:map.
  forall temp___170:map.
  (((((patris__possible_i_shapes__aggregate_def(temp___167, temp___168,
  temp___169, temp___170)[0]) = temp___167) and
  ((patris__possible_i_shapes__aggregate_def(temp___167, temp___168,
  temp___169, temp___170)[1]) = temp___168)) and
  ((patris__possible_i_shapes__aggregate_def(temp___167, temp___168,
  temp___169, temp___170)[2]) = temp___169)) and
  ((patris__possible_i_shapes__aggregate_def(temp___167, temp___168,
  temp___169, temp___170)[3]) = temp___170)))

axiom def_axiom2 :
  (forall temp___194:bool. forall temp___195:bool. forall temp___196:bool.
  forall temp___197:bool. forall temp___198:bool. forall temp___199:bool.
  forall temp___200:bool. forall temp___201:bool. forall temp___202:bool.
  forall temp___203:bool. forall temp___204:bool. forall temp___205:bool.
  forall temp___206:bool. forall temp___207:bool. forall temp___208:bool.
  forall temp___209:bool. (((((((get(temp___192(temp___194, temp___195,
  temp___196, temp___197, temp___198, temp___199, temp___200, temp___201,
  temp___202, temp___203, temp___204, temp___205, temp___206, temp___207,
  temp___208, temp___209), 0, 0) = temp___194) and
  (get(temp___192(temp___194, temp___195, temp___196, temp___197, temp___198,
  temp___199, temp___200, temp___201, temp___202, temp___203, temp___204,
  temp___205, temp___206, temp___207, temp___208, temp___209), 0,
  1) = temp___195)) and (get(temp___192(temp___194, temp___195, temp___196,
  temp___197, temp___198, temp___199, temp___200, temp___201, temp___202,
  temp___203, temp___204, temp___205, temp___206, temp___207, temp___208,
  temp___209), 0, 2) = temp___196)) and (get(temp___192(temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209), 0, 3) = temp___197)) and
  ((((get(temp___192(temp___194, temp___195, temp___196, temp___197,
  temp___198, temp___199, temp___200, temp___201, temp___202, temp___203,
  temp___204, temp___205, temp___206, temp___207, temp___208, temp___209), 1,
  0) = temp___198) and (get(temp___192(temp___194, temp___195, temp___196,
  temp___197, temp___198, temp___199, temp___200, temp___201, temp___202,
  temp___203, temp___204, temp___205, temp___206, temp___207, temp___208,
  temp___209), 1, 1) = temp___199)) and (get(temp___192(temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209), 1, 2) = temp___200)) and
  (get(temp___192(temp___194, temp___195, temp___196, temp___197, temp___198,
  temp___199, temp___200, temp___201, temp___202, temp___203, temp___204,
  temp___205, temp___206, temp___207, temp___208, temp___209), 1,
  3) = temp___201))) and ((((get(temp___192(temp___194, temp___195,
  temp___196, temp___197, temp___198, temp___199, temp___200, temp___201,
  temp___202, temp___203, temp___204, temp___205, temp___206, temp___207,
  temp___208, temp___209), 2, 0) = temp___202) and
  (get(temp___192(temp___194, temp___195, temp___196, temp___197, temp___198,
  temp___199, temp___200, temp___201, temp___202, temp___203, temp___204,
  temp___205, temp___206, temp___207, temp___208, temp___209), 2,
  1) = temp___203)) and (get(temp___192(temp___194, temp___195, temp___196,
  temp___197, temp___198, temp___199, temp___200, temp___201, temp___202,
  temp___203, temp___204, temp___205, temp___206, temp___207, temp___208,
  temp___209), 2, 2) = temp___204)) and (get(temp___192(temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209), 2, 3) = temp___205))) and
  ((((get(temp___192(temp___194, temp___195, temp___196, temp___197,
  temp___198, temp___199, temp___200, temp___201, temp___202, temp___203,
  temp___204, temp___205, temp___206, temp___207, temp___208, temp___209), 3,
  0) = temp___206) and (get(temp___192(temp___194, temp___195, temp___196,
  temp___197, temp___198, temp___199, temp___200, temp___201, temp___202,
  temp___203, temp___204, temp___205, temp___206, temp___207, temp___208,
  temp___209), 3, 1) = temp___207)) and (get(temp___192(temp___194,
  temp___195, temp___196, temp___197, temp___198, temp___199, temp___200,
  temp___201, temp___202, temp___203, temp___204, temp___205, temp___206,
  temp___207, temp___208, temp___209), 3, 2) = temp___208)) and
  (get(temp___192(temp___194, temp___195, temp___196, temp___197, temp___198,
  temp___199, temp___200, temp___201, temp___202, temp___203, temp___204,
  temp___205, temp___206, temp___207, temp___208, temp___209), 3,
  3) = temp___209))))

axiom def_axiom3 :
  (forall temp___214:bool. forall temp___215:bool. forall temp___216:bool.
  forall temp___217:bool. forall temp___218:bool. forall temp___219:bool.
  forall temp___220:bool. forall temp___221:bool. forall temp___222:bool.
  forall temp___223:bool. forall temp___224:bool. forall temp___225:bool.
  forall temp___226:bool. forall temp___227:bool. forall temp___228:bool.
  forall temp___229:bool. (((((((get(temp___212(temp___214, temp___215,
  temp___216, temp___217, temp___218, temp___219, temp___220, temp___221,
  temp___222, temp___223, temp___224, temp___225, temp___226, temp___227,
  temp___228, temp___229), 0, 0) = temp___214) and
  (get(temp___212(temp___214, temp___215, temp___216, temp___217, temp___218,
  temp___219, temp___220, temp___221, temp___222, temp___223, temp___224,
  temp___225, temp___226, temp___227, temp___228, temp___229), 0,
  1) = temp___215)) and (get(temp___212(temp___214, temp___215, temp___216,
  temp___217, temp___218, temp___219, temp___220, temp___221, temp___222,
  temp___223, temp___224, temp___225, temp___226, temp___227, temp___228,
  temp___229), 0, 2) = temp___216)) and (get(temp___212(temp___214,
  temp___215, temp___216, temp___217, temp___218, temp___219, temp___220,
  temp___221, temp___222, temp___223, temp___224, temp___225, temp___226,
  temp___227, temp___228, temp___229), 0, 3) = temp___217)) and
  ((((get(temp___212(temp___214, temp___215, temp___216, temp___217,
  temp___218, temp___219, temp___220, temp___221, temp___222, temp___223,
  temp___224, temp___225, temp___226, temp___227, temp___228, temp___229), 1,
  0) = temp___218) and (get(temp___212(temp___214, temp___215, temp___216,
  temp___217, temp___218, temp___219, temp___220, temp___221, temp___222,
  temp___223, temp___224, temp___225, temp___226, temp___227, temp___228,
  temp___229), 1, 1) = temp___219)) and (get(temp___212(temp___214,
  temp___215, temp___216, temp___217, temp___218, temp___219, temp___220,
  temp___221, temp___222, temp___223, temp___224, temp___225, temp___226,
  temp___227, temp___228, temp___229), 1, 2) = temp___220)) and
  (get(temp___212(temp___214, temp___215, temp___216, temp___217, temp___218,
  temp___219, temp___220, temp___221, temp___222, temp___223, temp___224,
  temp___225, temp___226, temp___227, temp___228, temp___229), 1,
  3) = temp___221))) and ((((get(temp___212(temp___214, temp___215,
  temp___216, temp___217, temp___218, temp___219, temp___220, temp___221,
  temp___222, temp___223, temp___224, temp___225, temp___226, temp___227,
  temp___228, temp___229), 2, 0) = temp___222) and
  (get(temp___212(temp___214, temp___215, temp___216, temp___217, temp___218,
  temp___219, temp___220, temp___221, temp___222, temp___223, temp___224,
  temp___225, temp___226, temp___227, temp___228, temp___229), 2,
  1) = temp___223)) and (get(temp___212(temp___214, temp___215, temp___216,
  temp___217, temp___218, temp___219, temp___220, temp___221, temp___222,
  temp___223, temp___224, temp___225, temp___226, temp___227, temp___228,
  temp___229), 2, 2) = temp___224)) and (get(temp___212(temp___214,
  temp___215, temp___216, temp___217, temp___218, temp___219, temp___220,
  temp___221, temp___222, temp___223, temp___224, temp___225, temp___226,
  temp___227, temp___228, temp___229), 2, 3) = temp___225))) and
  ((((get(temp___212(temp___214, temp___215, temp___216, temp___217,
  temp___218, temp___219, temp___220, temp___221, temp___222, temp___223,
  temp___224, temp___225, temp___226, temp___227, temp___228, temp___229), 3,
  0) = temp___226) and (get(temp___212(temp___214, temp___215, temp___216,
  temp___217, temp___218, temp___219, temp___220, temp___221, temp___222,
  temp___223, temp___224, temp___225, temp___226, temp___227, temp___228,
  temp___229), 3, 1) = temp___227)) and (get(temp___212(temp___214,
  temp___215, temp___216, temp___217, temp___218, temp___219, temp___220,
  temp___221, temp___222, temp___223, temp___224, temp___225, temp___226,
  temp___227, temp___228, temp___229), 3, 2) = temp___228)) and
  (get(temp___212(temp___214, temp___215, temp___216, temp___217, temp___218,
  temp___219, temp___220, temp___221, temp___222, temp___223, temp___224,
  temp___225, temp___226, temp___227, temp___228, temp___229), 3,
  3) = temp___229))))

axiom def_axiom4 :
  (forall temp___234:bool. forall temp___235:bool. forall temp___236:bool.
  forall temp___237:bool. forall temp___238:bool. forall temp___239:bool.
  forall temp___240:bool. forall temp___241:bool. forall temp___242:bool.
  forall temp___243:bool. forall temp___244:bool. forall temp___245:bool.
  forall temp___246:bool. forall temp___247:bool. forall temp___248:bool.
  forall temp___249:bool. (((((((get(temp___232(temp___234, temp___235,
  temp___236, temp___237, temp___238, temp___239, temp___240, temp___241,
  temp___242, temp___243, temp___244, temp___245, temp___246, temp___247,
  temp___248, temp___249), 0, 0) = temp___234) and
  (get(temp___232(temp___234, temp___235, temp___236, temp___237, temp___238,
  temp___239, temp___240, temp___241, temp___242, temp___243, temp___244,
  temp___245, temp___246, temp___247, temp___248, temp___249), 0,
  1) = temp___235)) and (get(temp___232(temp___234, temp___235, temp___236,
  temp___237, temp___238, temp___239, temp___240, temp___241, temp___242,
  temp___243, temp___244, temp___245, temp___246, temp___247, temp___248,
  temp___249), 0, 2) = temp___236)) and (get(temp___232(temp___234,
  temp___235, temp___236, temp___237, temp___238, temp___239, temp___240,
  temp___241, temp___242, temp___243, temp___244, temp___245, temp___246,
  temp___247, temp___248, temp___249), 0, 3) = temp___237)) and
  ((((get(temp___232(temp___234, temp___235, temp___236, temp___237,
  temp___238, temp___239, temp___240, temp___241, temp___242, temp___243,
  temp___244, temp___245, temp___246, temp___247, temp___248, temp___249), 1,
  0) = temp___238) and (get(temp___232(temp___234, temp___235, temp___236,
  temp___237, temp___238, temp___239, temp___240, temp___241, temp___242,
  temp___243, temp___244, temp___245, temp___246, temp___247, temp___248,
  temp___249), 1, 1) = temp___239)) and (get(temp___232(temp___234,
  temp___235, temp___236, temp___237, temp___238, temp___239, temp___240,
  temp___241, temp___242, temp___243, temp___244, temp___245, temp___246,
  temp___247, temp___248, temp___249), 1, 2) = temp___240)) and
  (get(temp___232(temp___234, temp___235, temp___236, temp___237, temp___238,
  temp___239, temp___240, temp___241, temp___242, temp___243, temp___244,
  temp___245, temp___246, temp___247, temp___248, temp___249), 1,
  3) = temp___241))) and ((((get(temp___232(temp___234, temp___235,
  temp___236, temp___237, temp___238, temp___239, temp___240, temp___241,
  temp___242, temp___243, temp___244, temp___245, temp___246, temp___247,
  temp___248, temp___249), 2, 0) = temp___242) and
  (get(temp___232(temp___234, temp___235, temp___236, temp___237, temp___238,
  temp___239, temp___240, temp___241, temp___242, temp___243, temp___244,
  temp___245, temp___246, temp___247, temp___248, temp___249), 2,
  1) = temp___243)) and (get(temp___232(temp___234, temp___235, temp___236,
  temp___237, temp___238, temp___239, temp___240, temp___241, temp___242,
  temp___243, temp___244, temp___245, temp___246, temp___247, temp___248,
  temp___249), 2, 2) = temp___244)) and (get(temp___232(temp___234,
  temp___235, temp___236, temp___237, temp___238, temp___239, temp___240,
  temp___241, temp___242, temp___243, temp___244, temp___245, temp___246,
  temp___247, temp___248, temp___249), 2, 3) = temp___245))) and
  ((((get(temp___232(temp___234, temp___235, temp___236, temp___237,
  temp___238, temp___239, temp___240, temp___241, temp___242, temp___243,
  temp___244, temp___245, temp___246, temp___247, temp___248, temp___249), 3,
  0) = temp___246) and (get(temp___232(temp___234, temp___235, temp___236,
  temp___237, temp___238, temp___239, temp___240, temp___241, temp___242,
  temp___243, temp___244, temp___245, temp___246, temp___247, temp___248,
  temp___249), 3, 1) = temp___247)) and (get(temp___232(temp___234,
  temp___235, temp___236, temp___237, temp___238, temp___239, temp___240,
  temp___241, temp___242, temp___243, temp___244, temp___245, temp___246,
  temp___247, temp___248, temp___249), 3, 2) = temp___248)) and
  (get(temp___232(temp___234, temp___235, temp___236, temp___237, temp___238,
  temp___239, temp___240, temp___241, temp___242, temp___243, temp___244,
  temp___245, temp___246, temp___247, temp___248, temp___249), 3,
  3) = temp___249))))

axiom possible_three_shapes__def_axiom :
  (possible_three_shapes = patris__possible_three_shapes__aggregate_def(temp___277(of_int(1),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(0)), temp___290(of_int(0), of_int(1), of_int(1),
  of_int(0), of_int(1), of_int(0), of_int(0), of_int(1), of_int(0)),
  temp___303(of_int(0), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(1), of_int(0), of_int(0), of_int(1)), temp___316(of_int(0),
  of_int(1), of_int(0), of_int(0), of_int(1), of_int(0), of_int(1),
  of_int(1), of_int(0)), temp___329(of_int(0), of_int(0), of_int(1),
  of_int(1), of_int(1), of_int(1), of_int(0), of_int(0), of_int(0)),
  temp___342(of_int(0), of_int(1), of_int(0), of_int(0), of_int(1),
  of_int(0), of_int(0), of_int(1), of_int(1)), temp___355(of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(1), of_int(1),
  of_int(0), of_int(0)), temp___368(of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(1), of_int(0), of_int(0), of_int(1), of_int(0)),
  temp___381(of_int(0), of_int(1), of_int(1), of_int(1), of_int(1),
  of_int(0), of_int(0), of_int(0), of_int(0)), temp___394(of_int(0),
  of_int(1), of_int(0), of_int(0), of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(1)), temp___407(of_int(0), of_int(0), of_int(0),
  of_int(0), of_int(1), of_int(1), of_int(1), of_int(1), of_int(0)),
  temp___420(of_int(1), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(0), of_int(0), of_int(1), of_int(0)), temp___433(of_int(0),
  of_int(1), of_int(0), of_int(1), of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(0)), temp___446(of_int(0), of_int(1), of_int(0),
  of_int(0), of_int(1), of_int(1), of_int(0), of_int(1), of_int(0)),
  temp___459(of_int(0), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(1), of_int(0), of_int(1), of_int(0)), temp___472(of_int(0),
  of_int(1), of_int(0), of_int(1), of_int(1), of_int(0), of_int(0),
  of_int(1), of_int(0)), temp___485(of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(1), of_int(1), of_int(0), of_int(0), of_int(0)),
  temp___498(of_int(0), of_int(0), of_int(1), of_int(0), of_int(1),
  of_int(1), of_int(0), of_int(1), of_int(0)), temp___511(of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(0), of_int(0),
  of_int(1), of_int(1)), temp___524(of_int(0), of_int(1), of_int(0),
  of_int(1), of_int(1), of_int(0), of_int(1), of_int(0), of_int(0))))

axiom def_axiom5 :
  (forall temp___279:bool. forall temp___280:bool. forall temp___281:bool.
  forall temp___282:bool. forall temp___283:bool. forall temp___284:bool.
  forall temp___285:bool. forall temp___286:bool. forall temp___287:bool.
  (((((get(temp___277(temp___279, temp___280, temp___281, temp___282,
  temp___283, temp___284, temp___285, temp___286, temp___287), 0,
  0) = temp___279) and (get(temp___277(temp___279, temp___280, temp___281,
  temp___282, temp___283, temp___284, temp___285, temp___286, temp___287), 0,
  1) = temp___280)) and (get(temp___277(temp___279, temp___280, temp___281,
  temp___282, temp___283, temp___284, temp___285, temp___286, temp___287), 0,
  2) = temp___281)) and (((get(temp___277(temp___279, temp___280, temp___281,
  temp___282, temp___283, temp___284, temp___285, temp___286, temp___287), 1,
  0) = temp___282) and (get(temp___277(temp___279, temp___280, temp___281,
  temp___282, temp___283, temp___284, temp___285, temp___286, temp___287), 1,
  1) = temp___283)) and (get(temp___277(temp___279, temp___280, temp___281,
  temp___282, temp___283, temp___284, temp___285, temp___286, temp___287), 1,
  2) = temp___284))) and (((get(temp___277(temp___279, temp___280,
  temp___281, temp___282, temp___283, temp___284, temp___285, temp___286,
  temp___287), 2, 0) = temp___285) and (get(temp___277(temp___279,
  temp___280, temp___281, temp___282, temp___283, temp___284, temp___285,
  temp___286, temp___287), 2, 1) = temp___286)) and
  (get(temp___277(temp___279, temp___280, temp___281, temp___282, temp___283,
  temp___284, temp___285, temp___286, temp___287), 2, 2) = temp___287))))

axiom def_axiom6 :
  (forall temp___292:bool. forall temp___293:bool. forall temp___294:bool.
  forall temp___295:bool. forall temp___296:bool. forall temp___297:bool.
  forall temp___298:bool. forall temp___299:bool. forall temp___300:bool.
  (((((get(temp___290(temp___292, temp___293, temp___294, temp___295,
  temp___296, temp___297, temp___298, temp___299, temp___300), 0,
  0) = temp___292) and (get(temp___290(temp___292, temp___293, temp___294,
  temp___295, temp___296, temp___297, temp___298, temp___299, temp___300), 0,
  1) = temp___293)) and (get(temp___290(temp___292, temp___293, temp___294,
  temp___295, temp___296, temp___297, temp___298, temp___299, temp___300), 0,
  2) = temp___294)) and (((get(temp___290(temp___292, temp___293, temp___294,
  temp___295, temp___296, temp___297, temp___298, temp___299, temp___300), 1,
  0) = temp___295) and (get(temp___290(temp___292, temp___293, temp___294,
  temp___295, temp___296, temp___297, temp___298, temp___299, temp___300), 1,
  1) = temp___296)) and (get(temp___290(temp___292, temp___293, temp___294,
  temp___295, temp___296, temp___297, temp___298, temp___299, temp___300), 1,
  2) = temp___297))) and (((get(temp___290(temp___292, temp___293,
  temp___294, temp___295, temp___296, temp___297, temp___298, temp___299,
  temp___300), 2, 0) = temp___298) and (get(temp___290(temp___292,
  temp___293, temp___294, temp___295, temp___296, temp___297, temp___298,
  temp___299, temp___300), 2, 1) = temp___299)) and
  (get(temp___290(temp___292, temp___293, temp___294, temp___295, temp___296,
  temp___297, temp___298, temp___299, temp___300), 2, 2) = temp___300))))

axiom def_axiom7 :
  (forall temp___305:bool. forall temp___306:bool. forall temp___307:bool.
  forall temp___308:bool. forall temp___309:bool. forall temp___310:bool.
  forall temp___311:bool. forall temp___312:bool. forall temp___313:bool.
  (((((get(temp___303(temp___305, temp___306, temp___307, temp___308,
  temp___309, temp___310, temp___311, temp___312, temp___313), 0,
  0) = temp___305) and (get(temp___303(temp___305, temp___306, temp___307,
  temp___308, temp___309, temp___310, temp___311, temp___312, temp___313), 0,
  1) = temp___306)) and (get(temp___303(temp___305, temp___306, temp___307,
  temp___308, temp___309, temp___310, temp___311, temp___312, temp___313), 0,
  2) = temp___307)) and (((get(temp___303(temp___305, temp___306, temp___307,
  temp___308, temp___309, temp___310, temp___311, temp___312, temp___313), 1,
  0) = temp___308) and (get(temp___303(temp___305, temp___306, temp___307,
  temp___308, temp___309, temp___310, temp___311, temp___312, temp___313), 1,
  1) = temp___309)) and (get(temp___303(temp___305, temp___306, temp___307,
  temp___308, temp___309, temp___310, temp___311, temp___312, temp___313), 1,
  2) = temp___310))) and (((get(temp___303(temp___305, temp___306,
  temp___307, temp___308, temp___309, temp___310, temp___311, temp___312,
  temp___313), 2, 0) = temp___311) and (get(temp___303(temp___305,
  temp___306, temp___307, temp___308, temp___309, temp___310, temp___311,
  temp___312, temp___313), 2, 1) = temp___312)) and
  (get(temp___303(temp___305, temp___306, temp___307, temp___308, temp___309,
  temp___310, temp___311, temp___312, temp___313), 2, 2) = temp___313))))

axiom def_axiom8 :
  (forall temp___318:bool. forall temp___319:bool. forall temp___320:bool.
  forall temp___321:bool. forall temp___322:bool. forall temp___323:bool.
  forall temp___324:bool. forall temp___325:bool. forall temp___326:bool.
  (((((get(temp___316(temp___318, temp___319, temp___320, temp___321,
  temp___322, temp___323, temp___324, temp___325, temp___326), 0,
  0) = temp___318) and (get(temp___316(temp___318, temp___319, temp___320,
  temp___321, temp___322, temp___323, temp___324, temp___325, temp___326), 0,
  1) = temp___319)) and (get(temp___316(temp___318, temp___319, temp___320,
  temp___321, temp___322, temp___323, temp___324, temp___325, temp___326), 0,
  2) = temp___320)) and (((get(temp___316(temp___318, temp___319, temp___320,
  temp___321, temp___322, temp___323, temp___324, temp___325, temp___326), 1,
  0) = temp___321) and (get(temp___316(temp___318, temp___319, temp___320,
  temp___321, temp___322, temp___323, temp___324, temp___325, temp___326), 1,
  1) = temp___322)) and (get(temp___316(temp___318, temp___319, temp___320,
  temp___321, temp___322, temp___323, temp___324, temp___325, temp___326), 1,
  2) = temp___323))) and (((get(temp___316(temp___318, temp___319,
  temp___320, temp___321, temp___322, temp___323, temp___324, temp___325,
  temp___326), 2, 0) = temp___324) and (get(temp___316(temp___318,
  temp___319, temp___320, temp___321, temp___322, temp___323, temp___324,
  temp___325, temp___326), 2, 1) = temp___325)) and
  (get(temp___316(temp___318, temp___319, temp___320, temp___321, temp___322,
  temp___323, temp___324, temp___325, temp___326), 2, 2) = temp___326))))

axiom def_axiom9 :
  (forall temp___255:map. forall temp___256:map. forall temp___257:map.
  forall temp___258:map. forall temp___259:map. forall temp___260:map.
  forall temp___261:map. forall temp___262:map. forall temp___263:map.
  forall temp___264:map. forall temp___265:map. forall temp___266:map.
  forall temp___267:map. forall temp___268:map. forall temp___269:map.
  forall temp___270:map. forall temp___271:map. forall temp___272:map.
  forall temp___273:map. forall temp___274:map.
  ((((((((get1(patris__possible_three_shapes__aggregate_def(temp___255,
  temp___256, temp___257, temp___258, temp___259, temp___260, temp___261,
  temp___262, temp___263, temp___264, temp___265, temp___266, temp___267,
  temp___268, temp___269, temp___270, temp___271, temp___272, temp___273,
  temp___274), 3, 0) = temp___255) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 3,
  1) = temp___256)) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 3,
  2) = temp___257)) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 3,
  3) = temp___258)) and
  ((((get1(patris__possible_three_shapes__aggregate_def(temp___255,
  temp___256, temp___257, temp___258, temp___259, temp___260, temp___261,
  temp___262, temp___263, temp___264, temp___265, temp___266, temp___267,
  temp___268, temp___269, temp___270, temp___271, temp___272, temp___273,
  temp___274), 4, 0) = temp___259) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 4,
  1) = temp___260)) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 4,
  2) = temp___261)) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 4,
  3) = temp___262))) and
  ((((get1(patris__possible_three_shapes__aggregate_def(temp___255,
  temp___256, temp___257, temp___258, temp___259, temp___260, temp___261,
  temp___262, temp___263, temp___264, temp___265, temp___266, temp___267,
  temp___268, temp___269, temp___270, temp___271, temp___272, temp___273,
  temp___274), 5, 0) = temp___263) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 5,
  1) = temp___264)) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 5,
  2) = temp___265)) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 5,
  3) = temp___266))) and
  ((((get1(patris__possible_three_shapes__aggregate_def(temp___255,
  temp___256, temp___257, temp___258, temp___259, temp___260, temp___261,
  temp___262, temp___263, temp___264, temp___265, temp___266, temp___267,
  temp___268, temp___269, temp___270, temp___271, temp___272, temp___273,
  temp___274), 6, 0) = temp___267) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 6,
  1) = temp___268)) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 6,
  2) = temp___269)) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 6,
  3) = temp___270))) and
  ((((get1(patris__possible_three_shapes__aggregate_def(temp___255,
  temp___256, temp___257, temp___258, temp___259, temp___260, temp___261,
  temp___262, temp___263, temp___264, temp___265, temp___266, temp___267,
  temp___268, temp___269, temp___270, temp___271, temp___272, temp___273,
  temp___274), 7, 0) = temp___271) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 7,
  1) = temp___272)) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 7,
  2) = temp___273)) and
  (get1(patris__possible_three_shapes__aggregate_def(temp___255, temp___256,
  temp___257, temp___258, temp___259, temp___260, temp___261, temp___262,
  temp___263, temp___264, temp___265, temp___266, temp___267, temp___268,
  temp___269, temp___270, temp___271, temp___272, temp___273, temp___274), 7,
  3) = temp___274))))

axiom def_axiom10 :
  (forall temp___331:bool. forall temp___332:bool. forall temp___333:bool.
  forall temp___334:bool. forall temp___335:bool. forall temp___336:bool.
  forall temp___337:bool. forall temp___338:bool. forall temp___339:bool.
  (((((get(temp___329(temp___331, temp___332, temp___333, temp___334,
  temp___335, temp___336, temp___337, temp___338, temp___339), 0,
  0) = temp___331) and (get(temp___329(temp___331, temp___332, temp___333,
  temp___334, temp___335, temp___336, temp___337, temp___338, temp___339), 0,
  1) = temp___332)) and (get(temp___329(temp___331, temp___332, temp___333,
  temp___334, temp___335, temp___336, temp___337, temp___338, temp___339), 0,
  2) = temp___333)) and (((get(temp___329(temp___331, temp___332, temp___333,
  temp___334, temp___335, temp___336, temp___337, temp___338, temp___339), 1,
  0) = temp___334) and (get(temp___329(temp___331, temp___332, temp___333,
  temp___334, temp___335, temp___336, temp___337, temp___338, temp___339), 1,
  1) = temp___335)) and (get(temp___329(temp___331, temp___332, temp___333,
  temp___334, temp___335, temp___336, temp___337, temp___338, temp___339), 1,
  2) = temp___336))) and (((get(temp___329(temp___331, temp___332,
  temp___333, temp___334, temp___335, temp___336, temp___337, temp___338,
  temp___339), 2, 0) = temp___337) and (get(temp___329(temp___331,
  temp___332, temp___333, temp___334, temp___335, temp___336, temp___337,
  temp___338, temp___339), 2, 1) = temp___338)) and
  (get(temp___329(temp___331, temp___332, temp___333, temp___334, temp___335,
  temp___336, temp___337, temp___338, temp___339), 2, 2) = temp___339))))

axiom def_axiom11 :
  (forall temp___344:bool. forall temp___345:bool. forall temp___346:bool.
  forall temp___347:bool. forall temp___348:bool. forall temp___349:bool.
  forall temp___350:bool. forall temp___351:bool. forall temp___352:bool.
  (((((get(temp___342(temp___344, temp___345, temp___346, temp___347,
  temp___348, temp___349, temp___350, temp___351, temp___352), 0,
  0) = temp___344) and (get(temp___342(temp___344, temp___345, temp___346,
  temp___347, temp___348, temp___349, temp___350, temp___351, temp___352), 0,
  1) = temp___345)) and (get(temp___342(temp___344, temp___345, temp___346,
  temp___347, temp___348, temp___349, temp___350, temp___351, temp___352), 0,
  2) = temp___346)) and (((get(temp___342(temp___344, temp___345, temp___346,
  temp___347, temp___348, temp___349, temp___350, temp___351, temp___352), 1,
  0) = temp___347) and (get(temp___342(temp___344, temp___345, temp___346,
  temp___347, temp___348, temp___349, temp___350, temp___351, temp___352), 1,
  1) = temp___348)) and (get(temp___342(temp___344, temp___345, temp___346,
  temp___347, temp___348, temp___349, temp___350, temp___351, temp___352), 1,
  2) = temp___349))) and (((get(temp___342(temp___344, temp___345,
  temp___346, temp___347, temp___348, temp___349, temp___350, temp___351,
  temp___352), 2, 0) = temp___350) and (get(temp___342(temp___344,
  temp___345, temp___346, temp___347, temp___348, temp___349, temp___350,
  temp___351, temp___352), 2, 1) = temp___351)) and
  (get(temp___342(temp___344, temp___345, temp___346, temp___347, temp___348,
  temp___349, temp___350, temp___351, temp___352), 2, 2) = temp___352))))

axiom def_axiom12 :
  (forall temp___357:bool. forall temp___358:bool. forall temp___359:bool.
  forall temp___360:bool. forall temp___361:bool. forall temp___362:bool.
  forall temp___363:bool. forall temp___364:bool. forall temp___365:bool.
  (((((get(temp___355(temp___357, temp___358, temp___359, temp___360,
  temp___361, temp___362, temp___363, temp___364, temp___365), 0,
  0) = temp___357) and (get(temp___355(temp___357, temp___358, temp___359,
  temp___360, temp___361, temp___362, temp___363, temp___364, temp___365), 0,
  1) = temp___358)) and (get(temp___355(temp___357, temp___358, temp___359,
  temp___360, temp___361, temp___362, temp___363, temp___364, temp___365), 0,
  2) = temp___359)) and (((get(temp___355(temp___357, temp___358, temp___359,
  temp___360, temp___361, temp___362, temp___363, temp___364, temp___365), 1,
  0) = temp___360) and (get(temp___355(temp___357, temp___358, temp___359,
  temp___360, temp___361, temp___362, temp___363, temp___364, temp___365), 1,
  1) = temp___361)) and (get(temp___355(temp___357, temp___358, temp___359,
  temp___360, temp___361, temp___362, temp___363, temp___364, temp___365), 1,
  2) = temp___362))) and (((get(temp___355(temp___357, temp___358,
  temp___359, temp___360, temp___361, temp___362, temp___363, temp___364,
  temp___365), 2, 0) = temp___363) and (get(temp___355(temp___357,
  temp___358, temp___359, temp___360, temp___361, temp___362, temp___363,
  temp___364, temp___365), 2, 1) = temp___364)) and
  (get(temp___355(temp___357, temp___358, temp___359, temp___360, temp___361,
  temp___362, temp___363, temp___364, temp___365), 2, 2) = temp___365))))

axiom def_axiom13 :
  (forall temp___370:bool. forall temp___371:bool. forall temp___372:bool.
  forall temp___373:bool. forall temp___374:bool. forall temp___375:bool.
  forall temp___376:bool. forall temp___377:bool. forall temp___378:bool.
  (((((get(temp___368(temp___370, temp___371, temp___372, temp___373,
  temp___374, temp___375, temp___376, temp___377, temp___378), 0,
  0) = temp___370) and (get(temp___368(temp___370, temp___371, temp___372,
  temp___373, temp___374, temp___375, temp___376, temp___377, temp___378), 0,
  1) = temp___371)) and (get(temp___368(temp___370, temp___371, temp___372,
  temp___373, temp___374, temp___375, temp___376, temp___377, temp___378), 0,
  2) = temp___372)) and (((get(temp___368(temp___370, temp___371, temp___372,
  temp___373, temp___374, temp___375, temp___376, temp___377, temp___378), 1,
  0) = temp___373) and (get(temp___368(temp___370, temp___371, temp___372,
  temp___373, temp___374, temp___375, temp___376, temp___377, temp___378), 1,
  1) = temp___374)) and (get(temp___368(temp___370, temp___371, temp___372,
  temp___373, temp___374, temp___375, temp___376, temp___377, temp___378), 1,
  2) = temp___375))) and (((get(temp___368(temp___370, temp___371,
  temp___372, temp___373, temp___374, temp___375, temp___376, temp___377,
  temp___378), 2, 0) = temp___376) and (get(temp___368(temp___370,
  temp___371, temp___372, temp___373, temp___374, temp___375, temp___376,
  temp___377, temp___378), 2, 1) = temp___377)) and
  (get(temp___368(temp___370, temp___371, temp___372, temp___373, temp___374,
  temp___375, temp___376, temp___377, temp___378), 2, 2) = temp___378))))

axiom def_axiom14 :
  (forall temp___383:bool. forall temp___384:bool. forall temp___385:bool.
  forall temp___386:bool. forall temp___387:bool. forall temp___388:bool.
  forall temp___389:bool. forall temp___390:bool. forall temp___391:bool.
  (((((get(temp___381(temp___383, temp___384, temp___385, temp___386,
  temp___387, temp___388, temp___389, temp___390, temp___391), 0,
  0) = temp___383) and (get(temp___381(temp___383, temp___384, temp___385,
  temp___386, temp___387, temp___388, temp___389, temp___390, temp___391), 0,
  1) = temp___384)) and (get(temp___381(temp___383, temp___384, temp___385,
  temp___386, temp___387, temp___388, temp___389, temp___390, temp___391), 0,
  2) = temp___385)) and (((get(temp___381(temp___383, temp___384, temp___385,
  temp___386, temp___387, temp___388, temp___389, temp___390, temp___391), 1,
  0) = temp___386) and (get(temp___381(temp___383, temp___384, temp___385,
  temp___386, temp___387, temp___388, temp___389, temp___390, temp___391), 1,
  1) = temp___387)) and (get(temp___381(temp___383, temp___384, temp___385,
  temp___386, temp___387, temp___388, temp___389, temp___390, temp___391), 1,
  2) = temp___388))) and (((get(temp___381(temp___383, temp___384,
  temp___385, temp___386, temp___387, temp___388, temp___389, temp___390,
  temp___391), 2, 0) = temp___389) and (get(temp___381(temp___383,
  temp___384, temp___385, temp___386, temp___387, temp___388, temp___389,
  temp___390, temp___391), 2, 1) = temp___390)) and
  (get(temp___381(temp___383, temp___384, temp___385, temp___386, temp___387,
  temp___388, temp___389, temp___390, temp___391), 2, 2) = temp___391))))

axiom def_axiom15 :
  (forall temp___396:bool. forall temp___397:bool. forall temp___398:bool.
  forall temp___399:bool. forall temp___400:bool. forall temp___401:bool.
  forall temp___402:bool. forall temp___403:bool. forall temp___404:bool.
  (((((get(temp___394(temp___396, temp___397, temp___398, temp___399,
  temp___400, temp___401, temp___402, temp___403, temp___404), 0,
  0) = temp___396) and (get(temp___394(temp___396, temp___397, temp___398,
  temp___399, temp___400, temp___401, temp___402, temp___403, temp___404), 0,
  1) = temp___397)) and (get(temp___394(temp___396, temp___397, temp___398,
  temp___399, temp___400, temp___401, temp___402, temp___403, temp___404), 0,
  2) = temp___398)) and (((get(temp___394(temp___396, temp___397, temp___398,
  temp___399, temp___400, temp___401, temp___402, temp___403, temp___404), 1,
  0) = temp___399) and (get(temp___394(temp___396, temp___397, temp___398,
  temp___399, temp___400, temp___401, temp___402, temp___403, temp___404), 1,
  1) = temp___400)) and (get(temp___394(temp___396, temp___397, temp___398,
  temp___399, temp___400, temp___401, temp___402, temp___403, temp___404), 1,
  2) = temp___401))) and (((get(temp___394(temp___396, temp___397,
  temp___398, temp___399, temp___400, temp___401, temp___402, temp___403,
  temp___404), 2, 0) = temp___402) and (get(temp___394(temp___396,
  temp___397, temp___398, temp___399, temp___400, temp___401, temp___402,
  temp___403, temp___404), 2, 1) = temp___403)) and
  (get(temp___394(temp___396, temp___397, temp___398, temp___399, temp___400,
  temp___401, temp___402, temp___403, temp___404), 2, 2) = temp___404))))

axiom def_axiom16 :
  (forall temp___409:bool. forall temp___410:bool. forall temp___411:bool.
  forall temp___412:bool. forall temp___413:bool. forall temp___414:bool.
  forall temp___415:bool. forall temp___416:bool. forall temp___417:bool.
  (((((get(temp___407(temp___409, temp___410, temp___411, temp___412,
  temp___413, temp___414, temp___415, temp___416, temp___417), 0,
  0) = temp___409) and (get(temp___407(temp___409, temp___410, temp___411,
  temp___412, temp___413, temp___414, temp___415, temp___416, temp___417), 0,
  1) = temp___410)) and (get(temp___407(temp___409, temp___410, temp___411,
  temp___412, temp___413, temp___414, temp___415, temp___416, temp___417), 0,
  2) = temp___411)) and (((get(temp___407(temp___409, temp___410, temp___411,
  temp___412, temp___413, temp___414, temp___415, temp___416, temp___417), 1,
  0) = temp___412) and (get(temp___407(temp___409, temp___410, temp___411,
  temp___412, temp___413, temp___414, temp___415, temp___416, temp___417), 1,
  1) = temp___413)) and (get(temp___407(temp___409, temp___410, temp___411,
  temp___412, temp___413, temp___414, temp___415, temp___416, temp___417), 1,
  2) = temp___414))) and (((get(temp___407(temp___409, temp___410,
  temp___411, temp___412, temp___413, temp___414, temp___415, temp___416,
  temp___417), 2, 0) = temp___415) and (get(temp___407(temp___409,
  temp___410, temp___411, temp___412, temp___413, temp___414, temp___415,
  temp___416, temp___417), 2, 1) = temp___416)) and
  (get(temp___407(temp___409, temp___410, temp___411, temp___412, temp___413,
  temp___414, temp___415, temp___416, temp___417), 2, 2) = temp___417))))

axiom def_axiom17 :
  (forall temp___422:bool. forall temp___423:bool. forall temp___424:bool.
  forall temp___425:bool. forall temp___426:bool. forall temp___427:bool.
  forall temp___428:bool. forall temp___429:bool. forall temp___430:bool.
  (((((get(temp___420(temp___422, temp___423, temp___424, temp___425,
  temp___426, temp___427, temp___428, temp___429, temp___430), 0,
  0) = temp___422) and (get(temp___420(temp___422, temp___423, temp___424,
  temp___425, temp___426, temp___427, temp___428, temp___429, temp___430), 0,
  1) = temp___423)) and (get(temp___420(temp___422, temp___423, temp___424,
  temp___425, temp___426, temp___427, temp___428, temp___429, temp___430), 0,
  2) = temp___424)) and (((get(temp___420(temp___422, temp___423, temp___424,
  temp___425, temp___426, temp___427, temp___428, temp___429, temp___430), 1,
  0) = temp___425) and (get(temp___420(temp___422, temp___423, temp___424,
  temp___425, temp___426, temp___427, temp___428, temp___429, temp___430), 1,
  1) = temp___426)) and (get(temp___420(temp___422, temp___423, temp___424,
  temp___425, temp___426, temp___427, temp___428, temp___429, temp___430), 1,
  2) = temp___427))) and (((get(temp___420(temp___422, temp___423,
  temp___424, temp___425, temp___426, temp___427, temp___428, temp___429,
  temp___430), 2, 0) = temp___428) and (get(temp___420(temp___422,
  temp___423, temp___424, temp___425, temp___426, temp___427, temp___428,
  temp___429, temp___430), 2, 1) = temp___429)) and
  (get(temp___420(temp___422, temp___423, temp___424, temp___425, temp___426,
  temp___427, temp___428, temp___429, temp___430), 2, 2) = temp___430))))

axiom def_axiom18 :
  (forall temp___435:bool. forall temp___436:bool. forall temp___437:bool.
  forall temp___438:bool. forall temp___439:bool. forall temp___440:bool.
  forall temp___441:bool. forall temp___442:bool. forall temp___443:bool.
  (((((get(temp___433(temp___435, temp___436, temp___437, temp___438,
  temp___439, temp___440, temp___441, temp___442, temp___443), 0,
  0) = temp___435) and (get(temp___433(temp___435, temp___436, temp___437,
  temp___438, temp___439, temp___440, temp___441, temp___442, temp___443), 0,
  1) = temp___436)) and (get(temp___433(temp___435, temp___436, temp___437,
  temp___438, temp___439, temp___440, temp___441, temp___442, temp___443), 0,
  2) = temp___437)) and (((get(temp___433(temp___435, temp___436, temp___437,
  temp___438, temp___439, temp___440, temp___441, temp___442, temp___443), 1,
  0) = temp___438) and (get(temp___433(temp___435, temp___436, temp___437,
  temp___438, temp___439, temp___440, temp___441, temp___442, temp___443), 1,
  1) = temp___439)) and (get(temp___433(temp___435, temp___436, temp___437,
  temp___438, temp___439, temp___440, temp___441, temp___442, temp___443), 1,
  2) = temp___440))) and (((get(temp___433(temp___435, temp___436,
  temp___437, temp___438, temp___439, temp___440, temp___441, temp___442,
  temp___443), 2, 0) = temp___441) and (get(temp___433(temp___435,
  temp___436, temp___437, temp___438, temp___439, temp___440, temp___441,
  temp___442, temp___443), 2, 1) = temp___442)) and
  (get(temp___433(temp___435, temp___436, temp___437, temp___438, temp___439,
  temp___440, temp___441, temp___442, temp___443), 2, 2) = temp___443))))

axiom def_axiom19 :
  (forall temp___448:bool. forall temp___449:bool. forall temp___450:bool.
  forall temp___451:bool. forall temp___452:bool. forall temp___453:bool.
  forall temp___454:bool. forall temp___455:bool. forall temp___456:bool.
  (((((get(temp___446(temp___448, temp___449, temp___450, temp___451,
  temp___452, temp___453, temp___454, temp___455, temp___456), 0,
  0) = temp___448) and (get(temp___446(temp___448, temp___449, temp___450,
  temp___451, temp___452, temp___453, temp___454, temp___455, temp___456), 0,
  1) = temp___449)) and (get(temp___446(temp___448, temp___449, temp___450,
  temp___451, temp___452, temp___453, temp___454, temp___455, temp___456), 0,
  2) = temp___450)) and (((get(temp___446(temp___448, temp___449, temp___450,
  temp___451, temp___452, temp___453, temp___454, temp___455, temp___456), 1,
  0) = temp___451) and (get(temp___446(temp___448, temp___449, temp___450,
  temp___451, temp___452, temp___453, temp___454, temp___455, temp___456), 1,
  1) = temp___452)) and (get(temp___446(temp___448, temp___449, temp___450,
  temp___451, temp___452, temp___453, temp___454, temp___455, temp___456), 1,
  2) = temp___453))) and (((get(temp___446(temp___448, temp___449,
  temp___450, temp___451, temp___452, temp___453, temp___454, temp___455,
  temp___456), 2, 0) = temp___454) and (get(temp___446(temp___448,
  temp___449, temp___450, temp___451, temp___452, temp___453, temp___454,
  temp___455, temp___456), 2, 1) = temp___455)) and
  (get(temp___446(temp___448, temp___449, temp___450, temp___451, temp___452,
  temp___453, temp___454, temp___455, temp___456), 2, 2) = temp___456))))

axiom def_axiom20 :
  (forall temp___461:bool. forall temp___462:bool. forall temp___463:bool.
  forall temp___464:bool. forall temp___465:bool. forall temp___466:bool.
  forall temp___467:bool. forall temp___468:bool. forall temp___469:bool.
  (((((get(temp___459(temp___461, temp___462, temp___463, temp___464,
  temp___465, temp___466, temp___467, temp___468, temp___469), 0,
  0) = temp___461) and (get(temp___459(temp___461, temp___462, temp___463,
  temp___464, temp___465, temp___466, temp___467, temp___468, temp___469), 0,
  1) = temp___462)) and (get(temp___459(temp___461, temp___462, temp___463,
  temp___464, temp___465, temp___466, temp___467, temp___468, temp___469), 0,
  2) = temp___463)) and (((get(temp___459(temp___461, temp___462, temp___463,
  temp___464, temp___465, temp___466, temp___467, temp___468, temp___469), 1,
  0) = temp___464) and (get(temp___459(temp___461, temp___462, temp___463,
  temp___464, temp___465, temp___466, temp___467, temp___468, temp___469), 1,
  1) = temp___465)) and (get(temp___459(temp___461, temp___462, temp___463,
  temp___464, temp___465, temp___466, temp___467, temp___468, temp___469), 1,
  2) = temp___466))) and (((get(temp___459(temp___461, temp___462,
  temp___463, temp___464, temp___465, temp___466, temp___467, temp___468,
  temp___469), 2, 0) = temp___467) and (get(temp___459(temp___461,
  temp___462, temp___463, temp___464, temp___465, temp___466, temp___467,
  temp___468, temp___469), 2, 1) = temp___468)) and
  (get(temp___459(temp___461, temp___462, temp___463, temp___464, temp___465,
  temp___466, temp___467, temp___468, temp___469), 2, 2) = temp___469))))

axiom def_axiom21 :
  (forall temp___474:bool. forall temp___475:bool. forall temp___476:bool.
  forall temp___477:bool. forall temp___478:bool. forall temp___479:bool.
  forall temp___480:bool. forall temp___481:bool. forall temp___482:bool.
  (((((get(temp___472(temp___474, temp___475, temp___476, temp___477,
  temp___478, temp___479, temp___480, temp___481, temp___482), 0,
  0) = temp___474) and (get(temp___472(temp___474, temp___475, temp___476,
  temp___477, temp___478, temp___479, temp___480, temp___481, temp___482), 0,
  1) = temp___475)) and (get(temp___472(temp___474, temp___475, temp___476,
  temp___477, temp___478, temp___479, temp___480, temp___481, temp___482), 0,
  2) = temp___476)) and (((get(temp___472(temp___474, temp___475, temp___476,
  temp___477, temp___478, temp___479, temp___480, temp___481, temp___482), 1,
  0) = temp___477) and (get(temp___472(temp___474, temp___475, temp___476,
  temp___477, temp___478, temp___479, temp___480, temp___481, temp___482), 1,
  1) = temp___478)) and (get(temp___472(temp___474, temp___475, temp___476,
  temp___477, temp___478, temp___479, temp___480, temp___481, temp___482), 1,
  2) = temp___479))) and (((get(temp___472(temp___474, temp___475,
  temp___476, temp___477, temp___478, temp___479, temp___480, temp___481,
  temp___482), 2, 0) = temp___480) and (get(temp___472(temp___474,
  temp___475, temp___476, temp___477, temp___478, temp___479, temp___480,
  temp___481, temp___482), 2, 1) = temp___481)) and
  (get(temp___472(temp___474, temp___475, temp___476, temp___477, temp___478,
  temp___479, temp___480, temp___481, temp___482), 2, 2) = temp___482))))

axiom def_axiom22 :
  (forall temp___487:bool. forall temp___488:bool. forall temp___489:bool.
  forall temp___490:bool. forall temp___491:bool. forall temp___492:bool.
  forall temp___493:bool. forall temp___494:bool. forall temp___495:bool.
  (((((get(temp___485(temp___487, temp___488, temp___489, temp___490,
  temp___491, temp___492, temp___493, temp___494, temp___495), 0,
  0) = temp___487) and (get(temp___485(temp___487, temp___488, temp___489,
  temp___490, temp___491, temp___492, temp___493, temp___494, temp___495), 0,
  1) = temp___488)) and (get(temp___485(temp___487, temp___488, temp___489,
  temp___490, temp___491, temp___492, temp___493, temp___494, temp___495), 0,
  2) = temp___489)) and (((get(temp___485(temp___487, temp___488, temp___489,
  temp___490, temp___491, temp___492, temp___493, temp___494, temp___495), 1,
  0) = temp___490) and (get(temp___485(temp___487, temp___488, temp___489,
  temp___490, temp___491, temp___492, temp___493, temp___494, temp___495), 1,
  1) = temp___491)) and (get(temp___485(temp___487, temp___488, temp___489,
  temp___490, temp___491, temp___492, temp___493, temp___494, temp___495), 1,
  2) = temp___492))) and (((get(temp___485(temp___487, temp___488,
  temp___489, temp___490, temp___491, temp___492, temp___493, temp___494,
  temp___495), 2, 0) = temp___493) and (get(temp___485(temp___487,
  temp___488, temp___489, temp___490, temp___491, temp___492, temp___493,
  temp___494, temp___495), 2, 1) = temp___494)) and
  (get(temp___485(temp___487, temp___488, temp___489, temp___490, temp___491,
  temp___492, temp___493, temp___494, temp___495), 2, 2) = temp___495))))

axiom def_axiom23 :
  (forall temp___500:bool. forall temp___501:bool. forall temp___502:bool.
  forall temp___503:bool. forall temp___504:bool. forall temp___505:bool.
  forall temp___506:bool. forall temp___507:bool. forall temp___508:bool.
  (((((get(temp___498(temp___500, temp___501, temp___502, temp___503,
  temp___504, temp___505, temp___506, temp___507, temp___508), 0,
  0) = temp___500) and (get(temp___498(temp___500, temp___501, temp___502,
  temp___503, temp___504, temp___505, temp___506, temp___507, temp___508), 0,
  1) = temp___501)) and (get(temp___498(temp___500, temp___501, temp___502,
  temp___503, temp___504, temp___505, temp___506, temp___507, temp___508), 0,
  2) = temp___502)) and (((get(temp___498(temp___500, temp___501, temp___502,
  temp___503, temp___504, temp___505, temp___506, temp___507, temp___508), 1,
  0) = temp___503) and (get(temp___498(temp___500, temp___501, temp___502,
  temp___503, temp___504, temp___505, temp___506, temp___507, temp___508), 1,
  1) = temp___504)) and (get(temp___498(temp___500, temp___501, temp___502,
  temp___503, temp___504, temp___505, temp___506, temp___507, temp___508), 1,
  2) = temp___505))) and (((get(temp___498(temp___500, temp___501,
  temp___502, temp___503, temp___504, temp___505, temp___506, temp___507,
  temp___508), 2, 0) = temp___506) and (get(temp___498(temp___500,
  temp___501, temp___502, temp___503, temp___504, temp___505, temp___506,
  temp___507, temp___508), 2, 1) = temp___507)) and
  (get(temp___498(temp___500, temp___501, temp___502, temp___503, temp___504,
  temp___505, temp___506, temp___507, temp___508), 2, 2) = temp___508))))

axiom def_axiom24 :
  (forall temp___513:bool. forall temp___514:bool. forall temp___515:bool.
  forall temp___516:bool. forall temp___517:bool. forall temp___518:bool.
  forall temp___519:bool. forall temp___520:bool. forall temp___521:bool.
  (((((get(temp___511(temp___513, temp___514, temp___515, temp___516,
  temp___517, temp___518, temp___519, temp___520, temp___521), 0,
  0) = temp___513) and (get(temp___511(temp___513, temp___514, temp___515,
  temp___516, temp___517, temp___518, temp___519, temp___520, temp___521), 0,
  1) = temp___514)) and (get(temp___511(temp___513, temp___514, temp___515,
  temp___516, temp___517, temp___518, temp___519, temp___520, temp___521), 0,
  2) = temp___515)) and (((get(temp___511(temp___513, temp___514, temp___515,
  temp___516, temp___517, temp___518, temp___519, temp___520, temp___521), 1,
  0) = temp___516) and (get(temp___511(temp___513, temp___514, temp___515,
  temp___516, temp___517, temp___518, temp___519, temp___520, temp___521), 1,
  1) = temp___517)) and (get(temp___511(temp___513, temp___514, temp___515,
  temp___516, temp___517, temp___518, temp___519, temp___520, temp___521), 1,
  2) = temp___518))) and (((get(temp___511(temp___513, temp___514,
  temp___515, temp___516, temp___517, temp___518, temp___519, temp___520,
  temp___521), 2, 0) = temp___519) and (get(temp___511(temp___513,
  temp___514, temp___515, temp___516, temp___517, temp___518, temp___519,
  temp___520, temp___521), 2, 1) = temp___520)) and
  (get(temp___511(temp___513, temp___514, temp___515, temp___516, temp___517,
  temp___518, temp___519, temp___520, temp___521), 2, 2) = temp___521))))

axiom def_axiom25 :
  (forall temp___526:bool. forall temp___527:bool. forall temp___528:bool.
  forall temp___529:bool. forall temp___530:bool. forall temp___531:bool.
  forall temp___532:bool. forall temp___533:bool. forall temp___534:bool.
  (((((get(temp___524(temp___526, temp___527, temp___528, temp___529,
  temp___530, temp___531, temp___532, temp___533, temp___534), 0,
  0) = temp___526) and (get(temp___524(temp___526, temp___527, temp___528,
  temp___529, temp___530, temp___531, temp___532, temp___533, temp___534), 0,
  1) = temp___527)) and (get(temp___524(temp___526, temp___527, temp___528,
  temp___529, temp___530, temp___531, temp___532, temp___533, temp___534), 0,
  2) = temp___528)) and (((get(temp___524(temp___526, temp___527, temp___528,
  temp___529, temp___530, temp___531, temp___532, temp___533, temp___534), 1,
  0) = temp___529) and (get(temp___524(temp___526, temp___527, temp___528,
  temp___529, temp___530, temp___531, temp___532, temp___533, temp___534), 1,
  1) = temp___530)) and (get(temp___524(temp___526, temp___527, temp___528,
  temp___529, temp___530, temp___531, temp___532, temp___533, temp___534), 1,
  2) = temp___531))) and (((get(temp___524(temp___526, temp___527,
  temp___528, temp___529, temp___530, temp___531, temp___532, temp___533,
  temp___534), 2, 0) = temp___532) and (get(temp___524(temp___526,
  temp___527, temp___528, temp___529, temp___530, temp___531, temp___532,
  temp___533, temp___534), 2, 1) = temp___533)) and
  (get(temp___524(temp___526, temp___527, temp___528, temp___529, temp___530,
  temp___531, temp___532, temp___533, temp___534), 2, 2) = temp___534))))

logic is_complete_line : (int,cell) farray -> bool

logic is_complete_line__function_guard : bool, (int,cell) farray -> prop

axiom is_complete_line__post_axiom : true

axiom is_complete_line__def_axiom :
  (forall l:(int,cell) farray [is_complete_line(l)].
  ((is_complete_line(l) = true) <->
  (forall x:int. (((1 <= x) and (x <= 10)) -> (not (to_rep((l[x])) = 0))))))

logic no_complete_lines : (int,(int,cell) farray) farray -> bool

logic no_complete_lines__function_guard : bool,
  (int,(int,cell) farray) farray -> prop

axiom no_complete_lines__post_axiom : true

axiom no_complete_lines__def_axiom :
  (forall b:(int,(int,cell) farray) farray [no_complete_lines(b)].
  ((no_complete_lines(b) = true) <->
  (forall y:int. (((1 <= y) and (y <= 20)) ->
  (not (is_complete_line((b[y])) = true))))))

logic no_overlap : (int,(int,cell) farray) farray, us_rep -> bool

logic no_overlap__function_guard : bool, (int,(int,cell) farray) farray,
  us_rep -> prop

axiom no_overlap__post_axiom : true

axiom no_overlap__def_axiom :
  (forall b:(int,(int,cell) farray) farray.
  (forall p:shape. forall p1:direction. forall p2:px_coord.
  forall p3:py_coord [no_overlap(b, { us_split_fields1 = {
  rec__patris__piece__s = p; rec__patris__piece__d = p1;
  rec__patris__piece__x = p2; rec__patris__piece__y = p3 } })].
  (((no_overlap(b, { us_split_fields1 = { rec__patris__piece__s = p;
  rec__patris__piece__d = p1; rec__patris__piece__x = p2;
  rec__patris__piece__y = p3 } }) = true) -> (((to_rep1(p) = 2) ->
  ((((is_empty(b, to_rep3(p3), to_rep2(p2)) = true) and (is_empty(b,
  to_rep3(p3), (to_rep2(p2) + 1)) = true)) and (is_empty(b,
  (to_rep3(p3) + 1), to_rep2(p2)) = true)) and (is_empty(b,
  (to_rep3(p3) + 1), (to_rep2(p2) + 1)) = true))) and
  ((not (to_rep1(p) = 2)) -> (((to_rep1(p) = 1) ->
  (forall y:int. (((0 <= y) and (y <= 3)) ->
  (forall x:int. (((0 <= x) and (x <= 3)) ->
  ((get((possible_i_shapes[to_rep4(p1)]), y, x) = true) -> (is_empty(b,
  (to_rep3(p3) + y), (to_rep2(p2) + x)) = true))))))) and
  ((not (to_rep1(p) = 1)) ->
  (forall y:int. (((0 <= y) and (y <= 2)) ->
  (forall x:int. (((0 <= x) and (x <= 2)) ->
  ((get(get1(possible_three_shapes, to_rep1(p), to_rep4(p1)), y,
  x) = true) -> (is_empty(b, (to_rep3(p3) + y), (to_rep2(p2) + x)) = true))))))))))) and
  ((((to_rep1(p) = 2) and ((((is_empty(b, to_rep3(p3),
  to_rep2(p2)) = true) and (is_empty(b, to_rep3(p3),
  (to_rep2(p2) + 1)) = true)) and (is_empty(b, (to_rep3(p3) + 1),
  to_rep2(p2)) = true)) and (is_empty(b, (to_rep3(p3) + 1),
  (to_rep2(p2) + 1)) = true))) or ((not (to_rep1(p) = 2)) and
  (((to_rep1(p) = 1) and
  (forall y:int. (((0 <= y) and (y <= 3)) ->
  (forall x:int. (((0 <= x) and (x <= 3)) ->
  ((get((possible_i_shapes[to_rep4(p1)]), y, x) = true) -> (is_empty(b,
  (to_rep3(p3) + y), (to_rep2(p2) + x)) = true))))))) or
  ((not (to_rep1(p) = 1)) and
  (forall y:int. (((0 <= y) and (y <= 2)) ->
  (forall x:int. (((0 <= x) and (x <= 2)) ->
  ((get(get1(possible_three_shapes, to_rep1(p), to_rep4(p1)), y,
  x) = true) -> (is_empty(b, (to_rep3(p3) + y), (to_rep2(p2) + x)) = true)))))))))) ->
  (no_overlap(b, { us_split_fields1 = { rec__patris__piece__s = p;
  rec__patris__piece__d = p1; rec__patris__piece__x = p2;
  rec__patris__piece__y = p3 } }) = true)))))

axiom valid_configuration__post_axiom : true

axiom valid_configuration__def_axiom :
  (forall cur_board:(int,(int,cell) farray) farray.
  (forall cur_state:int.
  (forall cur_piece:shape. forall cur_piece1:direction.
  forall cur_piece2:px_coord. forall cur_piece3:py_coord
  [valid_configuration(cur_board, cur_state, { us_split_fields1 = {
  rec__patris__piece__s = cur_piece; rec__patris__piece__d = cur_piece1;
  rec__patris__piece__x = cur_piece2; rec__patris__piece__y = cur_piece3 }
  })]. (((valid_configuration(cur_board, cur_state, { us_split_fields1 = {
  rec__patris__piece__s = cur_piece; rec__patris__piece__d = cur_piece1;
  rec__patris__piece__x = cur_piece2; rec__patris__piece__y = cur_piece3 }
  }) = true) -> ((((cur_state = 0) or (cur_state = 1)) ->
  (no_overlap(cur_board, { us_split_fields1 = { rec__patris__piece__s =
  cur_piece; rec__patris__piece__d = cur_piece1; rec__patris__piece__x =
  cur_piece2; rec__patris__piece__y = cur_piece3 } }) = true)) and
  ((not ((cur_state = 0) or (cur_state = 1))) -> ((not (cur_state = 2)) ->
  ((not (cur_state = 4)) -> (no_complete_lines(cur_board) = true)))))) and
  (((((cur_state = 0) or (cur_state = 1)) and (no_overlap(cur_board, {
  us_split_fields1 = { rec__patris__piece__s = cur_piece;
  rec__patris__piece__d = cur_piece1; rec__patris__piece__x = cur_piece2;
  rec__patris__piece__y = cur_piece3 } }) = true)) or
  ((not ((cur_state = 0) or (cur_state = 1))) and ((not (cur_state = 2)) ->
  ((not (cur_state = 4)) -> (no_complete_lines(cur_board) = true))))) ->
  (valid_configuration(cur_board, cur_state, { us_split_fields1 = {
  rec__patris__piece__s = cur_piece; rec__patris__piece__d = cur_piece1;
  rec__patris__piece__x = cur_piece2; rec__patris__piece__y = cur_piece3 }
  }) = true))))))

 (* File "patris.ads", line 196, characters 0-0 *)
goal WP_parameter_def :
  (forall cur_board:(int,(int,cell) farray) farray.
  forall cur_piece__split_fields:shape.
  forall cur_piece__split_fields1:direction.
  forall cur_piece__split_fields2:px_coord.
  forall cur_piece__split_fields3:py_coord. forall cur_state:int.
  forall o:cell.
  ((patris__possible_i_shapes__aggregate_def(temp___172(of_int(0), of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(1), of_int(1),
  of_int(0), of_int(0), of_int(0), of_int(0), of_int(0), of_int(0),
  of_int(0), of_int(0)), temp___192(of_int(0), of_int(0), of_int(1),
  of_int(0), of_int(0), of_int(0), of_int(1), of_int(0), of_int(0),
  of_int(0), of_int(1), of_int(0), of_int(0), of_int(0), of_int(1),
  of_int(0)), temp___212(of_int(0), of_int(0), of_int(0), of_int(0),
  of_int(0), of_int(0), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(1), of_int(1), of_int(0), of_int(0), of_int(0), of_int(0)),
  temp___232(of_int(0), of_int(1), of_int(0), of_int(0), of_int(0),
  of_int(1), of_int(0), of_int(0), of_int(0), of_int(1), of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(0),
  of_int(0))) = possible_i_shapes) ->
  ((patris__possible_three_shapes__aggregate_def(temp___277(of_int(1),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(0)), temp___290(of_int(0), of_int(1), of_int(1),
  of_int(0), of_int(1), of_int(0), of_int(0), of_int(1), of_int(0)),
  temp___303(of_int(0), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(1), of_int(0), of_int(0), of_int(1)), temp___316(of_int(0),
  of_int(1), of_int(0), of_int(0), of_int(1), of_int(0), of_int(1),
  of_int(1), of_int(0)), temp___329(of_int(0), of_int(0), of_int(1),
  of_int(1), of_int(1), of_int(1), of_int(0), of_int(0), of_int(0)),
  temp___342(of_int(0), of_int(1), of_int(0), of_int(0), of_int(1),
  of_int(0), of_int(0), of_int(1), of_int(1)), temp___355(of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(1), of_int(1),
  of_int(0), of_int(0)), temp___368(of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(1), of_int(0), of_int(0), of_int(1), of_int(0)),
  temp___381(of_int(0), of_int(1), of_int(1), of_int(1), of_int(1),
  of_int(0), of_int(0), of_int(0), of_int(0)), temp___394(of_int(0),
  of_int(1), of_int(0), of_int(0), of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(1)), temp___407(of_int(0), of_int(0), of_int(0),
  of_int(0), of_int(1), of_int(1), of_int(1), of_int(1), of_int(0)),
  temp___420(of_int(1), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(0), of_int(0), of_int(1), of_int(0)), temp___433(of_int(0),
  of_int(1), of_int(0), of_int(1), of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(0)), temp___446(of_int(0), of_int(1), of_int(0),
  of_int(0), of_int(1), of_int(1), of_int(0), of_int(1), of_int(0)),
  temp___459(of_int(0), of_int(0), of_int(0), of_int(1), of_int(1),
  of_int(1), of_int(0), of_int(1), of_int(0)), temp___472(of_int(0),
  of_int(1), of_int(0), of_int(1), of_int(1), of_int(0), of_int(0),
  of_int(1), of_int(0)), temp___485(of_int(1), of_int(1), of_int(0),
  of_int(0), of_int(1), of_int(1), of_int(0), of_int(0), of_int(0)),
  temp___498(of_int(0), of_int(0), of_int(1), of_int(0), of_int(1),
  of_int(1), of_int(0), of_int(1), of_int(0)), temp___511(of_int(0),
  of_int(0), of_int(0), of_int(1), of_int(1), of_int(0), of_int(0),
  of_int(1), of_int(1)), temp___524(of_int(0), of_int(1), of_int(0),
  of_int(1), of_int(1), of_int(0), of_int(1), of_int(0),
  of_int(0))) = possible_three_shapes) -> (in_range9(cur_state) ->
  (((get_state(cur_state) = 1) and (valid_configuration__2(cur_state, {
  rec__patris__piece__s = cur_piece__split_fields; rec__patris__piece__d =
  cur_piece__split_fields1; rec__patris__piece__x = cur_piece__split_fields2;
  rec__patris__piece__y = cur_piece__split_fields3 }, cur_board) = true)) ->
  ((to_rep1(cur_piece__split_fields) = 2) ->
  ((to_rep(o) = to_rep1(cur_piece__split_fields)) ->
  (1 <= to_rep2(cur_piece__split_fields2)))))))))
