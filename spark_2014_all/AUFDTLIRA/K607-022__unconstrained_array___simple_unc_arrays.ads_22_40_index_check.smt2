(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort natural 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range1 temp___expr_33)))
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort tvalueB 0)
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (tvalueB tvalueB) Bool)
(declare-const dummy1 tvalueB)
(declare-datatypes () ((tvalueB__ref (mk_tvalueB__ref (tvalueB__content tvalueB)))))
(define-fun tvalueB__ref___projection ((a tvalueB__ref)) tvalueB (tvalueB__content a))
(declare-sort value 0)
(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (value value) Bool)
(declare-const dummy2 value)
(declare-datatypes () ((value__ref (mk_value__ref (value__content value)))))
(define-fun value__ref___projection ((a value__ref)) value (value__content a))
(declare-fun to_rep1 (value) Int)
(declare-fun of_rep1 (Int) value)
(assert (forall ((x value)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x value)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int value))))))
(declare-fun slide ((Array Int value) Int Int) (Array Int value))
(assert (forall ((a (Array Int value))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int value))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int value) Int Int (Array Int value) Int Int) (Array Int value))
(assert (forall ((a (Array Int value)) (b (Array Int value))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (value Int) (Array Int value))
(assert (forall ((v value)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int value)) (a__first Int) (a__last Int) (b (Array Int value)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep1 (select a temp___idx_151)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_151))))))) true false))
(assert (forall ((a (Array Int value)) (b (Array Int value))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep1 (select a temp___idx_151)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_151)))))))))))
(declare-fun compare ((Array Int value) Int Int (Array Int value) Int Int) Int)
(assert (forall ((a (Array Int value)) (b (Array Int value))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int value)) (b (Array Int value))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int value)) (b (Array Int value))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-sort integer 0)
(define-fun in_range4 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep2 (integer) Int)
(declare-fun of_rep2 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x integer)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((t3s__ref (mk_t3s__ref (t3s__content integer)))))
(define-fun t3s__ref___2__projection ((a t3s__ref)) integer (t3s__content a))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range4 f) (=> (in_range4 l) (and (= (to_rep2 (first (mk f l))) f) (= (to_rep2 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range4 low) (and (in_range4 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int value)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int value) (elts a))
(define-fun of_array ((a (Array Int value)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep2 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep2 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int value)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int value)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int value)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int value))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int value))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int value))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep2 (first (rt x))) (to_rep2 (last (rt x))) (elts y) (to_rep2 (first (rt y))) (to_rep2 (last (rt y)))))
(declare-fun user_eq5 (us_t us_t) Bool)
(declare-const dummy5 us_t)
(declare-datatypes () ((t4s__ref (mk_t4s__ref (t4s__content us_t)))))
(define-fun t4s__ref___projection ((a t4s__ref)) us_t (t4s__content a))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__simple_unc_arrays__table__last natural)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural (rec__simple_unc_arrays__table__last a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__simple_unc_arrays__table__v us_t)))))
(define-fun us_split_fields_V__projection ((a us_split_fields)) us_t (rec__simple_unc_arrays__table__v a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___3__projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___4__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a))) (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 b)))) (= (bool_eq1 (rec__simple_unc_arrays__table__v (us_split_fields1 a)) (rec__simple_unc_arrays__table__v (us_split_fields1 b))) true)) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const simple_unc_arrays__table__last__first__bit Int)
(declare-const simple_unc_arrays__table__last__last__bit Int)
(declare-const simple_unc_arrays__table__last__position Int)
(assert (<= 0 simple_unc_arrays__table__last__first__bit))
(assert (< simple_unc_arrays__table__last__first__bit simple_unc_arrays__table__last__last__bit))
(assert (<= 0 simple_unc_arrays__table__last__position))
(declare-const simple_unc_arrays__table__v__first__bit Int)
(declare-const simple_unc_arrays__table__v__last__bit Int)
(declare-const simple_unc_arrays__table__v__position Int)
(assert (<= 0 simple_unc_arrays__table__v__first__bit))
(assert (< simple_unc_arrays__table__v__first__bit simple_unc_arrays__table__v__last__bit))
(assert (<= 0 simple_unc_arrays__table__v__position))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((table__ref (mk_table__ref (table__content us_rep)))))
(define-fun table__ref___projection ((a table__ref)) us_rep (table__content a))
(define-fun dynamic_invariant1 ((temp___expr_536 us_rep) (temp___is_init_533 Bool) (temp___skip_constant_534 Bool) (temp___do_toplevel_535 Bool)) Bool (let ((temp___537 (rec__simple_unc_arrays__table__last (us_split_discrs1 temp___expr_536)))) (and (dynamic_property1 1 (to_rep temp___537) (first1 (rec__simple_unc_arrays__table__v (us_split_fields1 temp___expr_536))) (last1 (rec__simple_unc_arrays__table__v (us_split_fields1 temp___expr_536)))) (and (= (first1 (rec__simple_unc_arrays__table__v (us_split_fields1 temp___expr_536))) 1) (= (last1 (rec__simple_unc_arrays__table__v (us_split_fields1 temp___expr_536))) (to_rep temp___537))))))
(declare-const a us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const b us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-fun same_range (us_rep us_rep) Bool)
(declare-fun same_range__function_guard (Bool us_rep us_rep) Bool)
(assert true)
(assert (forall ((a1 us_rep) (b1 us_rep)) (! (= (= (same_range a1 b1) true) (= (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a1))) (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 b1))))) :pattern ((same_range a1 b1)))))
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (integer integer) Bool)
(declare-const dummy7 integer)
(declare-datatypes () ((tT6bP1__ref (mk_tT6bP1__ref (tT6bP1__content integer)))))
(define-fun tT6bP1__ref___projection ((a1 tT6bP1__ref)) integer (tT6bP1__content a1))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range4 f) (=> (in_range4 l) (and (= (to_rep2 (first2 (mk1 f l))) f) (= (to_rep2 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range4 low) (and (in_range4 high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int value)) (rt1 t1)))))
(define-fun to_array1 ((a1 us_t1)) (Array Int value) (elts1 a1))
(define-fun of_array1 ((a1 (Array Int value)) (f Int) (l Int)) us_t1 (mk___t1 a1 (mk1 f l)))
(define-fun first3 ((a1 us_t1)) Int (to_rep2 (first2 (rt1 a1))))
(define-fun last3 ((a1 us_t1)) Int (to_rep2 (last2 (rt1 a1))))
(define-fun length1 ((a1 us_t1)) Int (ite (<= (first3 a1) (last3 a1)) (+ (- (last3 a1) (first3 a1)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int value)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int value)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int value)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a1 (Array Int value))) (<= 0 (object__size2 a1))))
(assert (<= 0 value__component__size1))
(assert (forall ((a1 (Array Int value))) (<= 0 (object__component__size1 a1))))
(assert (<= 0 value__alignment2))
(assert (forall ((a1 (Array Int value))) (<= 0 (object__alignment2 a1))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep2 (first2 (rt1 x))) (to_rep2 (last2 (rt1 x))) (elts1 y) (to_rep2 (first2 (rt1 y))) (to_rep2 (last2 (rt1 y)))))
(declare-fun user_eq8 (us_t1 us_t1) Bool)
(declare-const dummy8 us_t1)
(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content us_t1)))))
(define-fun t6b__ref___projection ((a1 t6b__ref)) us_t1 (t6b__content a1))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__simple_unc_arrays__table__v1 us_t1)))))
(define-fun us_split_fields_V__4__projection ((a1 us_split_fields2)) us_t1 (rec__simple_unc_arrays__table__v1 a1))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___5__projection ((a1 us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a1))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs2 us_split_discrs) (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___9__projection ((a1 us_rep1)) us_split_discrs (us_split_discrs2 a1))
(define-fun us_rep___10__projection ((a1 us_rep1)) us_split_fields2 (us_split_fields3 a1))
(define-fun to_base ((a1 us_rep1)) us_rep (mk___rep (us_split_discrs2 a1) (mk___split_fields (let ((temp___157 (rec__simple_unc_arrays__table__v1 (us_split_fields3 a1)))) (of_array (to_array1 temp___157) (first3 temp___157) (last3 temp___157))))))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r) (mk___split_fields1 (let ((temp___156 (rec__simple_unc_arrays__table__v (us_split_fields1 r)))) (of_array1 (to_array temp___156) (first1 temp___156) (last1 temp___156))))))
(define-fun bool_eq4 ((a1 us_rep1) (b1 us_rep1)) Bool (ite (and (= (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs2 a1))) (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs2 b1)))) (= (bool_eq3 (rec__simple_unc_arrays__table__v1 (us_split_fields3 a1)) (rec__simple_unc_arrays__table__v1 (us_split_fields3 b1))) true)) true false))
(define-fun in_range5 ((rec__simple_unc_arrays__table__last1 Int) (a1 us_rep)) Bool (= rec__simple_unc_arrays__table__last1 (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a1)))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a1 us_rep1)) (<= 0 (object__size3 a1))))
(assert (<= 0 value__alignment3))
(assert (forall ((a1 us_rep1)) (<= 0 (object__alignment3 a1))))
(declare-const simple_unc_arrays__table__last__first__bit1 Int)
(declare-const simple_unc_arrays__table__last__last__bit1 Int)
(declare-const simple_unc_arrays__table__last__position1 Int)
(assert (<= 0 simple_unc_arrays__table__last__first__bit1))
(assert (< simple_unc_arrays__table__last__first__bit1 simple_unc_arrays__table__last__last__bit1))
(assert (<= 0 simple_unc_arrays__table__last__position1))
(declare-const simple_unc_arrays__table__v__first__bit1 Int)
(declare-const simple_unc_arrays__table__v__last__bit1 Int)
(declare-const simple_unc_arrays__table__v__position1 Int)
(assert (<= 0 simple_unc_arrays__table__v__first__bit1))
(assert (< simple_unc_arrays__table__v__first__bit1 simple_unc_arrays__table__v__last__bit1))
(assert (<= 0 simple_unc_arrays__table__v__position1))
(declare-fun user_eq9 (us_rep1 us_rep1) Bool)
(declare-const dummy9 us_rep1)
(declare-datatypes () ((tcS__ref (mk_tcS__ref (tcS__content us_rep1)))))
(define-fun tcS__ref___projection ((a1 tcS__ref)) us_rep1 (tcS__content a1))
(define-fun dynamic_invariant2 ((temp___expr_657 us_rep1) (temp___is_init_654 Bool) (temp___skip_constant_655 Bool) (temp___do_toplevel_656 Bool)) Bool (and (=> (not (= temp___skip_constant_655 true)) (in_range5 (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a))) (to_base temp___expr_657))) (and (dynamic_property3 1 (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a))) (first3 (rec__simple_unc_arrays__table__v1 (us_split_fields3 temp___expr_657))) (last3 (rec__simple_unc_arrays__table__v1 (us_split_fields3 temp___expr_657)))) (and (= (first3 (rec__simple_unc_arrays__table__v1 (us_split_fields3 temp___expr_657))) 1) (= (last3 (rec__simple_unc_arrays__table__v1 (us_split_fields3 temp___expr_657))) (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a))))))))
(define-fun default_initial_assumption ((temp___expr_660 us_rep1) (temp___skip_top_level_661 Bool)) Bool (= (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs2 temp___expr_660))) (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a)))))
(declare-const c__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const r7b Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content integer)))))
(define-fun t8b__ref___projection ((a1 t8b__ref)) integer (t8b__content a1))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_invariant3 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range4 temp___expr_15)))
(define-fun dynamic_invariant4 ((temp___expr_525 Int) (temp___is_init_522 Bool) (temp___skip_constant_523 Bool) (temp___do_toplevel_524 Bool)) Bool (=> (or (= temp___is_init_522 true) (<= (- 2147483648) 2147483647)) (in_range3 temp___expr_525)))
(declare-const c__split_fields (Array Int value))
(declare-const c__split_fields1 t1)
(declare-const i Int)
(declare-const simple_unc_arrays__add__result natural)
(declare-const simple_unc_arrays__add__result1 (Array Int value))
(declare-const simple_unc_arrays__add__result2 t)
(declare-const us Int)
(declare-const us1 Int)
(declare-const us2 Int)
(declare-const temp___782 Int)
(declare-const temp___779 natural)
(declare-const temp___7791 (Array Int value))
(declare-const temp___7792 t1)
(declare-const j Int)
(declare-const o Int)
(declare-const o1 value)
(declare-const o2 Int)
(declare-const o3 value)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 value)
(declare-const o10 Int)
(declare-const o11 value)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 value)
(declare-const o17 Int)
(declare-const o18 (Array Int value))
(declare-const o19 (Array Int value))
(declare-const o20 t1)
(declare-const o21 (Array Int value))
(declare-const o22 t1)
(declare-const temp___778 natural)
(declare-const temp___7781 (Array Int value))
(declare-const temp___7782 t1)
(declare-const j1 Int)
(declare-const o23 Int)
(declare-const o24 value)
(declare-const o25 Int)
(declare-const o26 value)
(declare-const o27 Int)
(declare-const o28 Int)
(declare-const o29 Int)
(declare-const o30 Int)
(declare-const c__split_fields2 (Array Int value))
(declare-const c__split_fields3 t1)
(declare-const result int__ref)
(declare-const i1 Int)
(declare-const c__split_fields4 us_split_fields2)
(declare-const i2 Int)
(declare-const result1 us_split_fields__ref1)
(declare-const c__split_fields5 us_split_fields2)
(declare-const result2 int__ref)
(declare-const i3 Int)
(declare-const c__split_fields6 us_split_fields__ref1)
(declare-const i4 int__ref)
(declare-const c__split_fields7 us_split_fields2)
(declare-const i5 Int)
(declare-const c__split_fields8 us_split_fields__ref1)
(declare-const i6 int__ref)
(declare-const c__split_fields9 us_split_fields2)
(declare-const i7 Int)
(declare-const c__split_fields10 us_split_fields__ref1)
(declare-const i8 int__ref)
(declare-const c__split_fields11 us_split_fields2)
(declare-const i9 Int)
(declare-const result3 table__ref)
(declare-const simple_unc_arrays__add__result3 us_rep)
(declare-const c__split_fields12 us_split_fields__ref1)
(declare-const i10 int__ref)
(declare-const simple_unc_arrays__add__result4 table__ref)
(declare-const c__split_fields13 us_split_fields2)
(declare-const i11 Int)
(declare-const simple_unc_arrays__add__result5 us_rep)
(declare-const c__split_fields14 us_split_fields__ref1)
(declare-const i12 int__ref)
(declare-const simple_unc_arrays__add__result6 table__ref)
(declare-const c__split_fields15 us_split_fields2)
(declare-const i13 Int)
(declare-const simple_unc_arrays__add__result7 us_rep)
(declare-const result4 Bool)
(assert (dynamic_invariant1 a true false true))
(assert (dynamic_invariant1 b true false true))
(assert (= (same_range a b) true))
(assert (and (and (and (= us (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 b)))) (in_range1 (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 b))))) (and (and (= us1 (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a)))) (in_range1 (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a))))) (and (and (and (= simple_unc_arrays__add__result4 (mk_table__ref simple_unc_arrays__add__result3)) (and (= i10 i8) (= c__split_fields12 c__split_fields10))) (and (= simple_unc_arrays__add__result5 simple_unc_arrays__add__result3) (and (= i11 i9) (= c__split_fields13 c__split_fields11)))) (and (and (= us2 (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a)))) (in_range1 (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a))))) (and (and (= (to_rep (rec__simple_unc_arrays__table__last c__split_discrs)) (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a)))) (dynamic_invariant2 (mk___rep1 c__split_discrs (mk___split_fields1 (mk___t1 c__split_fields c__split_fields1))) false false true)) (and (and (= (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a))) r7b) (in_range1 r7b)) (and (and (and (= result (mk_int__ref i)) (= i1 1)) (ite (and (<= 1 i1) (<= i1 r7b)) (and (and (and (= temp___782 i1) (and (and (= c__split_discrs (mk___split_discrs temp___779)) (and (= c__split_fields temp___7791) (= c__split_fields1 temp___7792))) (and (forall ((j2 Int)) (=> (and (<= 1 j2) (<= j2 (- i2 1))) (= (to_rep1 (select (elts1 (rec__simple_unc_arrays__table__v1 c__split_fields4)) j2)) (+ (to_rep1 (select (elts (rec__simple_unc_arrays__table__v (us_split_fields1 a))) j2)) (to_rep1 (select (elts (rec__simple_unc_arrays__table__v (us_split_fields1 b))) j2)))))) (and (and (and (and (dynamic_invariant2 (mk___rep1 c__split_discrs c__split_fields4) false true true) (forall ((temp___781 Int)) (=> (and (<= (to_rep2 (first2 (rt1 (rec__simple_unc_arrays__table__v1 c__split_fields4)))) temp___781) (<= temp___781 (to_rep2 (last2 (rt1 (rec__simple_unc_arrays__table__v1 c__split_fields4)))))) (=> (<= i2 temp___781) (= (select (elts1 (rec__simple_unc_arrays__table__v1 c__split_fields4)) temp___781) (select temp___7791 temp___781)))))) (=> (<= 1 r7b) (dynamic_property4 1 r7b i2))) (and (<= 1 i2) (<= i2 r7b))) (and (and (and (and (and (and (and (and (and (and (and (and (and (<= (to_rep2 (first (rt (rec__simple_unc_arrays__table__v (us_split_fields1 b))))) i2) (<= i2 (to_rep2 (last (rt (rec__simple_unc_arrays__table__v (us_split_fields1 b))))))) (= o10 i2)) (= o11 (select (elts (rec__simple_unc_arrays__table__v (us_split_fields1 b))) o10))) (= o12 (to_rep1 o11))) (and (and (and (and (and (<= (to_rep2 (first (rt (rec__simple_unc_arrays__table__v (us_split_fields1 a))))) i2) (<= i2 (to_rep2 (last (rt (rec__simple_unc_arrays__table__v (us_split_fields1 a))))))) (= o8 i2)) (= o9 (select (elts (rec__simple_unc_arrays__table__v (us_split_fields1 a))) o8))) (= o13 (to_rep1 o9))) (= o14 (+ o13 o12)))) (and (= o15 o14) (in_range2 o14))) (= (to_rep1 o16) o15)) (and (and (and (<= (to_rep2 (first2 (rt1 (rec__simple_unc_arrays__table__v1 c__split_fields4)))) i2) (<= i2 (to_rep2 (last2 (rt1 (rec__simple_unc_arrays__table__v1 c__split_fields4)))))) (= o17 i2)) (= o18 (store (elts1 (rec__simple_unc_arrays__table__v1 c__split_fields4)) o17 o16)))) (and (= o18 o19) (= (rt1 (rec__simple_unc_arrays__table__v1 c__split_fields4)) o20))) (and (= o21 o19) (= o22 o20))) (and (= c__split_discrs (mk___split_discrs temp___778)) (and (= temp___7781 o21) (= temp___7782 o22)))) (and (and (= result1 (mk___split_fields__ref1 c__split_fields4)) (= c__split_fields5 (mk___split_fields1 (mk___t1 temp___7781 temp___7782)))) (= c__split_discrs (mk___split_discrs temp___778)))) (= i2 r7b)))))) (and (and (= i6 (mk_int__ref i2)) (= c__split_fields8 (mk___split_fields__ref1 c__split_fields5))) (and (= i7 i2) (= c__split_fields9 c__split_fields5)))) (and (and (= i8 i6) (= c__split_fields10 c__split_fields8)) (and (= i9 i7) (= c__split_fields11 c__split_fields9)))) (and (and (= i8 (mk_int__ref i1)) (= c__split_fields10 (mk___split_fields__ref1 (mk___split_fields1 (mk___t1 c__split_fields c__split_fields1))))) (and (= i9 i1) (= c__split_fields11 (mk___split_fields1 (mk___t1 c__split_fields2 c__split_fields3))))))) (and (= result3 (mk_table__ref (mk___rep (mk___split_discrs simple_unc_arrays__add__result) (mk___split_fields (mk___t simple_unc_arrays__add__result1 simple_unc_arrays__add__result2))))) (= simple_unc_arrays__add__result3 (to_base (mk___rep1 c__split_discrs (us_split_fields__content1 c__split_fields10)))))))))))) (and (and (= simple_unc_arrays__add__result6 simple_unc_arrays__add__result4) (and (= i12 i10) (= c__split_fields14 c__split_fields12))) (and (= simple_unc_arrays__add__result7 simple_unc_arrays__add__result5) (and (= i13 i11) (= c__split_fields15 c__split_fields13))))))
(assert (and (= result4 (same_range (table__content simple_unc_arrays__add__result6) a)) (= (= result4 true) (= (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 (table__content simple_unc_arrays__add__result6)))) (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a)))))))
(assert (= result4 true))
(assert (<= 1 j1))
(assert (<= j1 (to_rep (rec__simple_unc_arrays__table__last (us_split_discrs1 a)))))
(assert (and (<= (to_rep2 (first (rt (rec__simple_unc_arrays__table__v (us_split_fields1 b))))) j1) (<= j1 (to_rep2 (last (rt (rec__simple_unc_arrays__table__v (us_split_fields1 b))))))))
(assert (= o25 j1))
(assert (= o26 (select (elts (rec__simple_unc_arrays__table__v (us_split_fields1 b))) o25)))
(assert (= o27 (to_rep1 o26)))
(assert (and (<= (to_rep2 (first (rt (rec__simple_unc_arrays__table__v (us_split_fields1 a))))) j1) (<= j1 (to_rep2 (last (rt (rec__simple_unc_arrays__table__v (us_split_fields1 a))))))))
(assert (= o23 j1))
(assert (= o24 (select (elts (rec__simple_unc_arrays__table__v (us_split_fields1 a))) o23)))
(assert (= o28 (to_rep1 o24)))
(assert (= o29 (+ o28 o27)))
(assert (and (= o30 o29) (in_range2 o29)))
(assert (not (<= (to_rep2 (first (rt (rec__simple_unc_arrays__table__v (us_split_fields1 (table__content simple_unc_arrays__add__result6)))))) j1)))
(check-sat)
(exit)
