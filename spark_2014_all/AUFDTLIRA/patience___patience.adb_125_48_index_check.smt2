(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-sort card 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 52)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (card card) Bool)
(declare-const dummy1 card)
(declare-datatypes () ((card__ref (mk_card__ref (card__content card)))))
(define-fun card__ref___projection ((a card__ref)) card (card__content a))
(define-fun dynamic_invariant1 ((temp___expr_166 Int) (temp___is_init_163 Bool) (temp___skip_constant_164 Bool) (temp___do_toplevel_165 Bool)) Bool (=> (or (= temp___is_init_163 true) (<= 1 52)) (in_range2 temp___expr_166)))
(declare-fun to_rep (card) Int)
(declare-fun of_rep (Int) card)
(assert (forall ((x card)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x card)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int card))))))
(declare-fun slide ((Array Int card) Int Int) (Array Int card))
(assert (forall ((a (Array Int card))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int card))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int card) Int Int (Array Int card) Int Int) (Array Int card))
(assert (forall ((a (Array Int card)) (b (Array Int card))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (card Int) (Array Int card))
(assert (forall ((v card)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int card)) (a__first Int) (a__last Int) (b (Array Int card)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int card)) (b (Array Int card))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare ((Array Int card) Int Int (Array Int card) Int Int) Int)
(assert (forall ((a (Array Int card)) (b (Array Int card))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int card)) (b (Array Int card))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int card)) (b (Array Int card))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-sort cardindex 0)
(define-fun in_range3 ((x Int)) Bool (and (<= (- 1) x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (cardindex cardindex) Bool)
(declare-const dummy2 cardindex)
(declare-datatypes () ((cardindex__ref (mk_cardindex__ref (cardindex__content cardindex)))))
(define-fun cardindex__ref___projection ((a cardindex__ref)) cardindex (cardindex__content a))
(define-fun dynamic_invariant2 ((temp___expr_177 Int) (temp___is_init_174 Bool) (temp___skip_constant_175 Bool) (temp___do_toplevel_176 Bool)) Bool (=> (or (= temp___is_init_174 true) (<= (- 1) 100)) (in_range3 temp___expr_177)))
(declare-fun to_rep1 (cardindex) Int)
(declare-fun of_rep1 (Int) cardindex)
(assert (forall ((x cardindex)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x cardindex)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort tcardarrayD1 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 99)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (tcardarrayD1 tcardarrayD1) Bool)
(declare-const dummy3 tcardarrayD1)
(declare-datatypes () ((tcardarrayD1__ref (mk_tcardarrayD1__ref (tcardarrayD1__content tcardarrayD1)))))
(define-fun tcardarrayD1__ref___projection ((a tcardarrayD1__ref)) tcardarrayD1 (tcardarrayD1__content a))
(declare-sort tindexarrayD1 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 99)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (tindexarrayD1 tindexarrayD1) Bool)
(declare-const dummy4 tindexarrayD1)
(declare-datatypes () ((tindexarrayD1__ref (mk_tindexarrayD1__ref (tindexarrayD1__content tindexarrayD1)))))
(define-fun tindexarrayD1__ref___projection ((a tindexarrayD1__ref)) tindexarrayD1 (tindexarrayD1__content a))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int cardindex))))))
(declare-fun slide1 ((Array Int cardindex) Int Int) (Array Int cardindex))
(assert (forall ((a (Array Int cardindex))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int cardindex))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int cardindex) Int Int (Array Int cardindex) Int Int) (Array Int cardindex))
(assert (forall ((a (Array Int cardindex)) (b (Array Int cardindex))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (cardindex Int) (Array Int cardindex))
(assert (forall ((v cardindex)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq1 ((a (Array Int cardindex)) (a__first Int) (a__last Int) (b (Array Int cardindex)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_133 Int)) (=> (and (<= a__first temp___idx_133) (<= temp___idx_133 a__last)) (= (to_rep1 (select a temp___idx_133)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_133))))))) true false))
(assert (forall ((a (Array Int cardindex)) (b (Array Int cardindex))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_133 Int)) (=> (and (<= a__first temp___idx_133) (<= temp___idx_133 a__last)) (= (to_rep1 (select a temp___idx_133)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_133)))))))))))
(declare-fun compare1 ((Array Int cardindex) Int Int (Array Int cardindex) Int Int) Int)
(assert (forall ((a (Array Int cardindex)) (b (Array Int cardindex))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq1 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int cardindex)) (b (Array Int cardindex))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq1 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int cardindex)) (b (Array Int cardindex))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq1 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-sort tindexmatrixD1 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 99)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq5 (tindexmatrixD1 tindexmatrixD1) Bool)
(declare-const dummy5 tindexmatrixD1)
(declare-datatypes () ((tindexmatrixD1__ref (mk_tindexmatrixD1__ref (tindexmatrixD1__content tindexmatrixD1)))))
(define-fun tindexmatrixD1__ref___projection ((a tindexmatrixD1__ref)) tindexmatrixD1 (tindexmatrixD1__content a))
(declare-const dummy6 (Array Int cardindex))
(declare-const value__size Int)
(declare-fun object__size ((Array Int cardindex)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int cardindex)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int cardindex)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int cardindex))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int cardindex))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int cardindex))) (<= 0 (object__alignment a))))
(declare-fun user_eq6 ((Array Int cardindex) (Array Int cardindex)) Bool)
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int (Array Int cardindex)))))))
(declare-fun slide2 ((Array Int (Array Int cardindex)) Int Int) (Array Int (Array Int cardindex)))
(assert (forall ((a (Array Int (Array Int cardindex)))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int (Array Int cardindex)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int (Array Int cardindex)) Int Int (Array Int (Array Int cardindex)) Int Int) (Array Int (Array Int cardindex)))
(assert (forall ((a (Array Int (Array Int cardindex))) (b (Array Int (Array Int cardindex)))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 ((Array Int cardindex) Int) (Array Int (Array Int cardindex)))
(assert (forall ((v (Array Int cardindex))) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq2 ((a (Array Int (Array Int cardindex))) (a__first Int) (a__last Int) (b (Array Int (Array Int cardindex))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_134 Int)) (=> (and (<= a__first temp___idx_134) (<= temp___idx_134 a__last)) (= (bool_eq1 (select a temp___idx_134) 0 99 (select b (+ (- b__first a__first) temp___idx_134)) 0 99) true)))) true false))
(assert (forall ((a (Array Int (Array Int cardindex))) (b (Array Int (Array Int cardindex)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_134 Int)) (=> (and (<= a__first temp___idx_134) (<= temp___idx_134 a__last)) (= (bool_eq1 (select a temp___idx_134) 0 99 (select b (+ (- b__first a__first) temp___idx_134)) 0 99) true))))))))
(declare-const dummy7 (Array Int card))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int card)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int card)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int card)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int card))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int card))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int card))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq7 ((Array Int card) (Array Int card)) Bool)
(declare-const dummy8 (Array Int (Array Int cardindex)))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int (Array Int cardindex))) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int (Array Int cardindex))) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int (Array Int cardindex))) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq8 ((Array Int (Array Int cardindex)) (Array Int (Array Int cardindex))) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__patience__state__numelts cardindex) (rec__patience__state__values (Array Int card)) (rec__patience__state__numstacks cardindex) (rec__patience__state__stacksizes (Array Int cardindex)) (rec__patience__state__stacks (Array Int (Array Int cardindex))) (rec__patience__state__posstack (Array Int cardindex)) (rec__patience__state__posheight (Array Int cardindex)) (rec__patience__state__preds (Array Int cardindex))))))
(define-fun us_split_fields_NumElts__projection ((a us_split_fields)) cardindex (rec__patience__state__numelts a))
(define-fun us_split_fields_Values__projection ((a us_split_fields)) (Array Int card) (rec__patience__state__values a))
(define-fun us_split_fields_NumStacks__projection ((a us_split_fields)) cardindex (rec__patience__state__numstacks a))
(define-fun us_split_fields_StackSizes__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__stacksizes a))
(define-fun us_split_fields_Stacks__projection ((a us_split_fields)) (Array Int (Array Int cardindex)) (rec__patience__state__stacks a))
(define-fun us_split_fields_PosStack__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__posstack a))
(define-fun us_split_fields_PosHeight__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__posheight a))
(define-fun us_split_fields_Preds__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__preds a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq3 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (and (and (and (and (= (to_rep1 (rec__patience__state__numelts (us_split_fields1 a))) (to_rep1 (rec__patience__state__numelts (us_split_fields1 b)))) (= (bool_eq (rec__patience__state__values (us_split_fields1 a)) 0 99 (rec__patience__state__values (us_split_fields1 b)) 0 99) true)) (= (to_rep1 (rec__patience__state__numstacks (us_split_fields1 a))) (to_rep1 (rec__patience__state__numstacks (us_split_fields1 b))))) (= (bool_eq1 (rec__patience__state__stacksizes (us_split_fields1 a)) 0 99 (rec__patience__state__stacksizes (us_split_fields1 b)) 0 99) true)) (= (bool_eq2 (rec__patience__state__stacks (us_split_fields1 a)) 0 99 (rec__patience__state__stacks (us_split_fields1 b)) 0 99) true)) (= (bool_eq1 (rec__patience__state__posstack (us_split_fields1 a)) 0 99 (rec__patience__state__posstack (us_split_fields1 b)) 0 99) true)) (= (bool_eq1 (rec__patience__state__posheight (us_split_fields1 a)) 0 99 (rec__patience__state__posheight (us_split_fields1 b)) 0 99) true)) (= (bool_eq1 (rec__patience__state__preds (us_split_fields1 a)) 0 99 (rec__patience__state__preds (us_split_fields1 b)) 0 99) true)) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const patience__state__numelts__first__bit Int)
(declare-const patience__state__numelts__last__bit Int)
(declare-const patience__state__numelts__position Int)
(assert (<= 0 patience__state__numelts__first__bit))
(assert (< patience__state__numelts__first__bit patience__state__numelts__last__bit))
(assert (<= 0 patience__state__numelts__position))
(declare-const patience__state__values__first__bit Int)
(declare-const patience__state__values__last__bit Int)
(declare-const patience__state__values__position Int)
(assert (<= 0 patience__state__values__first__bit))
(assert (< patience__state__values__first__bit patience__state__values__last__bit))
(assert (<= 0 patience__state__values__position))
(declare-const patience__state__numstacks__first__bit Int)
(declare-const patience__state__numstacks__last__bit Int)
(declare-const patience__state__numstacks__position Int)
(assert (<= 0 patience__state__numstacks__first__bit))
(assert (< patience__state__numstacks__first__bit patience__state__numstacks__last__bit))
(assert (<= 0 patience__state__numstacks__position))
(declare-const patience__state__stacksizes__first__bit Int)
(declare-const patience__state__stacksizes__last__bit Int)
(declare-const patience__state__stacksizes__position Int)
(assert (<= 0 patience__state__stacksizes__first__bit))
(assert (< patience__state__stacksizes__first__bit patience__state__stacksizes__last__bit))
(assert (<= 0 patience__state__stacksizes__position))
(declare-const patience__state__stacks__first__bit Int)
(declare-const patience__state__stacks__last__bit Int)
(declare-const patience__state__stacks__position Int)
(assert (<= 0 patience__state__stacks__first__bit))
(assert (< patience__state__stacks__first__bit patience__state__stacks__last__bit))
(assert (<= 0 patience__state__stacks__position))
(declare-const patience__state__posstack__first__bit Int)
(declare-const patience__state__posstack__last__bit Int)
(declare-const patience__state__posstack__position Int)
(assert (<= 0 patience__state__posstack__first__bit))
(assert (< patience__state__posstack__first__bit patience__state__posstack__last__bit))
(assert (<= 0 patience__state__posstack__position))
(declare-const patience__state__posheight__first__bit Int)
(declare-const patience__state__posheight__last__bit Int)
(declare-const patience__state__posheight__position Int)
(assert (<= 0 patience__state__posheight__first__bit))
(assert (< patience__state__posheight__first__bit patience__state__posheight__last__bit))
(assert (<= 0 patience__state__posheight__position))
(declare-const patience__state__preds__first__bit Int)
(declare-const patience__state__preds__last__bit Int)
(declare-const patience__state__preds__position Int)
(assert (<= 0 patience__state__preds__first__bit))
(assert (< patience__state__preds__first__bit patience__state__preds__last__bit))
(assert (<= 0 patience__state__preds__position))
(declare-fun user_eq9 (us_rep us_rep) Bool)
(declare-const dummy9 us_rep)
(declare-datatypes () ((state__ref (mk_state__ref (state__content us_rep)))))
(define-fun state__ref___projection ((a state__ref)) us_rep (state__content a))
(declare-fun inv (us_rep) Bool)
(declare-fun inv__function_guard (Bool us_rep) Bool)
(assert true)
(assert (forall ((s us_rep)) (! (= (= (inv s) true) (and (and (and (and (and (and (and (and (and (<= 0 (to_rep1 (rec__patience__state__numstacks (us_split_fields1 s)))) (<= (to_rep1 (rec__patience__state__numstacks (us_split_fields1 s))) (to_rep1 (rec__patience__state__numelts (us_split_fields1 s))))) (<= (to_rep1 (rec__patience__state__numelts (us_split_fields1 s))) 100)) (or (= (to_rep1 (rec__patience__state__numelts (us_split_fields1 s))) 0) (< 0 (to_rep1 (rec__patience__state__numstacks (us_split_fields1 s)))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep1 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (and (and (<= 1 (to_rep1 (let ((temp___306 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___306 i)))) (<= (to_rep1 (let ((temp___307 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___307 i))) (to_rep1 (rec__patience__state__numelts (us_split_fields1 s))))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep1 (let ((temp___308 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___308 i))) 1))) (and (<= 0 (to_rep1 (let ((temp___310 (let ((temp___309 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___309 i)))) (select temp___310 j)))) (< (to_rep1 (let ((temp___312 (let ((temp___311 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___311 i)))) (select temp___312 j))) (to_rep1 (rec__patience__state__numelts (us_split_fields1 s))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep1 (rec__patience__state__numelts (us_split_fields1 s))) 1))) (and (and (and (<= 0 (to_rep1 (let ((temp___313 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___313 i)))) (<= (to_rep1 (let ((temp___313 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___313 i))) (- (to_rep1 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (and (<= 0 (to_rep1 (let ((temp___314 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___314 i)))) (<= (to_rep1 (let ((temp___314 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___314 i))) (- (to_rep1 (let ((temp___315 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___315 (to_rep1 (let ((temp___316 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___316 i)))))) 1)))) (= (to_rep1 (let ((temp___319 (let ((temp___317 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___317 (to_rep1 (let ((temp___318 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___318 i))))))) (select temp___319 (to_rep1 (let ((temp___320 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___320 i)))))) i))))) (forall ((ist Int)) (=> (and (<= 0 ist) (<= ist (- (to_rep1 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (forall ((ip Int)) (=> (and (<= 0 ip) (<= ip (- (to_rep1 (let ((temp___321 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___321 ist))) 1))) (and (= ist (to_rep1 (let ((temp___322 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___322 (to_rep1 (let ((temp___324 (let ((temp___323 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___323 ist)))) (select temp___324 ip))))))) (= ip (to_rep1 (let ((temp___325 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___325 (to_rep1 (let ((temp___327 (let ((temp___326 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___326 ist)))) (select temp___327 ip))))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep1 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep1 (let ((temp___328 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___328 i))) 2))) (forall ((k Int)) (=> (and (<= (+ j 1) k) (<= k (- (to_rep1 (let ((temp___329 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___329 i))) 1))) (< (to_rep1 (let ((temp___331 (let ((temp___330 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___330 i)))) (select temp___331 j))) (to_rep1 (let ((temp___333 (let ((temp___332 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___332 i)))) (select temp___333 k))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep1 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep1 (let ((temp___334 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___334 i))) 2))) (forall ((k Int)) (=> (and (<= (+ j 1) k) (<= k (- (to_rep1 (let ((temp___335 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___335 i))) 1))) (<= (to_rep (let ((temp___339 (rec__patience__state__values (us_split_fields1 s)))) (select temp___339 (to_rep1 (let ((temp___341 (let ((temp___340 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___340 i)))) (select temp___341 k)))))) (to_rep (let ((temp___336 (rec__patience__state__values (us_split_fields1 s)))) (select temp___336 (to_rep1 (let ((temp___338 (let ((temp___337 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___337 i)))) (select temp___338 j)))))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep1 (rec__patience__state__numelts (us_split_fields1 s))) 1))) (and (and (and (<= (- 1) (to_rep1 (let ((temp___342 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___342 i)))) (<= (to_rep1 (let ((temp___342 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___342 i))) (- (to_rep1 (rec__patience__state__numelts (us_split_fields1 s))) 1))) (< (to_rep1 (let ((temp___343 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___343 i))) i)) (ite (< (to_rep1 (let ((temp___352 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___352 i))) 0) (= (to_rep1 (let ((temp___344 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___344 i))) 0) (and (and (< (to_rep (let ((temp___345 (rec__patience__state__values (us_split_fields1 s)))) (select temp___345 (to_rep1 (let ((temp___346 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___346 i)))))) (to_rep (let ((temp___347 (rec__patience__state__values (us_split_fields1 s)))) (select temp___347 i)))) (< 0 (to_rep1 (let ((temp___348 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___348 i))))) (= (to_rep1 (let ((temp___349 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___349 (to_rep1 (let ((temp___350 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___350 i)))))) (- (to_rep1 (let ((temp___351 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___351 i))) 1))))))))) :pattern ((inv s)))))
(declare-const c Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const s__split_fields cardindex)
(declare-const s__split_fields1 (Array Int card))
(declare-const s__split_fields2 cardindex)
(declare-const s__split_fields3 (Array Int cardindex))
(declare-const s__split_fields4 (Array Int (Array Int cardindex)))
(declare-const s__split_fields5 (Array Int cardindex))
(declare-const s__split_fields6 (Array Int cardindex))
(declare-const s__split_fields7 (Array Int cardindex))
(declare-const idx Int)
(declare-const pred Int)
(declare-const i Int)
(declare-const stackisize Int)
(declare-const topstacki Int)
(declare-const temp___568 Int)
(declare-const temp___567 Int)
(declare-const temp___566 Int)
(declare-const temp___565 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 card)
(declare-const o3 Int)
(declare-const temp___570 Int)
(declare-const o4 Int)
(declare-const temp___571 (Array Int cardindex))
(declare-const temp___573 Int)
(declare-const o5 Int)
(declare-const o6 cardindex)
(declare-const o7 Int)
(declare-const temp___574 Int)
(declare-const o8 Int)
(declare-const o9 cardindex)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const o12 cardindex)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const temp___535 (Array Int cardindex))
(declare-const o15 Int)
(declare-const o16 cardindex)
(declare-const o17 Int)
(declare-const o18 Int)
(declare-const o19 card)
(declare-const o20 Int)
(declare-const o21 Int)
(declare-const o22 cardindex)
(declare-const o23 Int)
(declare-const o24 Int)
(declare-const o25 cardindex)
(declare-const temp___547 Int)
(declare-const o26 Int)
(declare-const temp___548 (Array Int cardindex))
(declare-const o27 Int)
(declare-const o28 cardindex)
(declare-const temp___550 Int)
(declare-const o29 Int)
(declare-const o30 cardindex)
(declare-const o31 Int)
(declare-const o32 Int)
(declare-const o33 cardindex)
(declare-const o34 Int)
(declare-const o35 cardindex)
(declare-const temp___544 Int)
(declare-const o36 Int)
(declare-const o37 cardindex)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const o40 Int)
(declare-const o41 cardindex)
(declare-const o42 Int)
(declare-const o43 Int)
(declare-const o44 cardindex)
(declare-const o45 Int)
(declare-const o46 Int)
(declare-const o47 cardindex)
(declare-const o48 Int)
(declare-const o49 Int)
(declare-const o50 card)
(declare-const o51 Int)
(declare-const o52 (Array Int card))
(declare-const o53 cardindex)
(declare-const o54 (Array Int card))
(declare-const o55 cardindex)
(declare-const o56 (Array Int cardindex))
(declare-const o57 (Array Int (Array Int cardindex)))
(declare-const o58 (Array Int cardindex))
(declare-const o59 (Array Int cardindex))
(declare-const o60 (Array Int cardindex))
(declare-const temp___584 cardindex)
(declare-const temp___5841 (Array Int card))
(declare-const temp___5842 cardindex)
(declare-const temp___5843 (Array Int cardindex))
(declare-const temp___5844 (Array Int (Array Int cardindex)))
(declare-const temp___5845 (Array Int cardindex))
(declare-const temp___5846 (Array Int cardindex))
(declare-const temp___5847 (Array Int cardindex))
(declare-const o61 Int)
(declare-const o62 Int)
(declare-const o63 cardindex)
(declare-const o64 cardindex)
(declare-const o65 (Array Int card))
(declare-const o66 cardindex)
(declare-const o67 (Array Int cardindex))
(declare-const o68 (Array Int (Array Int cardindex)))
(declare-const o69 (Array Int cardindex))
(declare-const o70 (Array Int cardindex))
(declare-const o71 (Array Int cardindex))
(declare-const temp___586 cardindex)
(declare-const temp___5861 (Array Int card))
(declare-const temp___5862 cardindex)
(declare-const temp___5863 (Array Int cardindex))
(declare-const temp___5864 (Array Int (Array Int cardindex)))
(declare-const temp___5865 (Array Int cardindex))
(declare-const temp___5866 (Array Int cardindex))
(declare-const temp___5867 (Array Int cardindex))
(declare-const o72 Int)
(declare-const o73 cardindex)
(declare-const o74 Int)
(declare-const o75 (Array Int cardindex))
(declare-const o76 cardindex)
(declare-const o77 (Array Int card))
(declare-const o78 cardindex)
(declare-const o79 (Array Int cardindex))
(declare-const o80 (Array Int (Array Int cardindex)))
(declare-const o81 (Array Int cardindex))
(declare-const o82 (Array Int cardindex))
(declare-const o83 (Array Int cardindex))
(declare-const temp___589 cardindex)
(declare-const temp___5891 (Array Int card))
(declare-const temp___5892 cardindex)
(declare-const temp___5893 (Array Int cardindex))
(declare-const temp___5894 (Array Int (Array Int cardindex)))
(declare-const temp___5895 (Array Int cardindex))
(declare-const temp___5896 (Array Int cardindex))
(declare-const temp___5897 (Array Int cardindex))
(declare-const o84 Int)
(declare-const o85 cardindex)
(declare-const o86 cardindex)
(declare-const o87 (Array Int card))
(declare-const o88 cardindex)
(declare-const o89 (Array Int cardindex))
(declare-const o90 (Array Int (Array Int cardindex)))
(declare-const o91 (Array Int cardindex))
(declare-const o92 (Array Int cardindex))
(declare-const o93 (Array Int cardindex))
(declare-const temp___606 cardindex)
(declare-const temp___6061 (Array Int card))
(declare-const temp___6062 cardindex)
(declare-const temp___6063 (Array Int cardindex))
(declare-const temp___6064 (Array Int (Array Int cardindex)))
(declare-const temp___6065 (Array Int cardindex))
(declare-const temp___6066 (Array Int cardindex))
(declare-const temp___6067 (Array Int cardindex))
(declare-const o94 cardindex)
(declare-const o95 Int)
(declare-const o96 (Array Int cardindex))
(declare-const o97 cardindex)
(declare-const o98 (Array Int card))
(declare-const o99 cardindex)
(declare-const o100 (Array Int cardindex))
(declare-const o101 (Array Int (Array Int cardindex)))
(declare-const o102 (Array Int cardindex))
(declare-const o103 (Array Int cardindex))
(declare-const o104 (Array Int cardindex))
(declare-const temp___609 cardindex)
(declare-const temp___6091 (Array Int card))
(declare-const temp___6092 cardindex)
(declare-const temp___6093 (Array Int cardindex))
(declare-const temp___6094 (Array Int (Array Int cardindex)))
(declare-const temp___6095 (Array Int cardindex))
(declare-const temp___6096 (Array Int cardindex))
(declare-const temp___6097 (Array Int cardindex))
(declare-const o105 Int)
(declare-const o106 cardindex)
(declare-const o107 (Array Int cardindex))
(declare-const o108 Int)
(declare-const o109 (Array Int (Array Int cardindex)))
(declare-const o110 us_split_fields)
(declare-const temp___614 us_rep)
(declare-const o111 Int)
(declare-const o112 cardindex)
(declare-const o113 Int)
(declare-const o114 (Array Int cardindex))
(declare-const o115 us_split_fields)
(declare-const temp___617 us_rep)
(declare-const o116 cardindex)
(declare-const o117 Int)
(declare-const o118 (Array Int cardindex))
(declare-const o119 us_split_fields)
(declare-const temp___620 us_rep)
(declare-const o120 Int)
(declare-const o121 cardindex)
(declare-const o122 Int)
(declare-const o123 Int)
(declare-const o124 cardindex)
(declare-const o125 Int)
(declare-const o126 (Array Int cardindex))
(declare-const o127 us_split_fields)
(declare-const temp___593 us_rep)
(declare-const o128 Int)
(declare-const o129 cardindex)
(declare-const o130 Int)
(declare-const o131 (Array Int cardindex))
(declare-const o132 Int)
(declare-const o133 (Array Int (Array Int cardindex)))
(declare-const o134 us_split_fields)
(declare-const temp___598 us_rep)
(declare-const o135 Int)
(declare-const o136 cardindex)
(declare-const o137 Int)
(declare-const o138 (Array Int cardindex))
(declare-const o139 us_split_fields)
(declare-const temp___601 us_rep)
(declare-const o140 cardindex)
(declare-const o141 Int)
(declare-const o142 (Array Int cardindex))
(declare-const o143 us_split_fields)
(declare-const temp___604 us_rep)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const j Int)
(declare-const o144 Int)
(declare-const o145 cardindex)
(declare-const o146 Int)
(declare-const o147 Int)
(declare-const o148 Bool)
(declare-const o149 Int)
(declare-const temp___627 (Array Int cardindex))
(declare-const o150 Int)
(declare-const temp___629 (Array Int cardindex))
(declare-const o151 Int)
(declare-const o152 cardindex)
(declare-const o153 Int)
(declare-const o154 Bool)
(declare-const o155 Bool)
(declare-const i3 Int)
(declare-const o156 Int)
(declare-const o157 cardindex)
(declare-const o158 Int)
(declare-const o159 Int)
(declare-const o160 cardindex)
(declare-const temp___755 Int)
(declare-const o161 Int)
(declare-const o162 cardindex)
(declare-const o163 Int)
(declare-const o164 Int)
(declare-const o165 Int)
(declare-const o166 cardindex)
(declare-const o167 Int)
(declare-const o168 Int)
(declare-const o169 cardindex)
(declare-const temp___750 Int)
(declare-const o170 Int)
(declare-const o171 card)
(declare-const o172 Int)
(declare-const o173 card)
(declare-const o174 Int)
(declare-const o175 Int)
(declare-const o176 Int)
(declare-const o177 cardindex)
(declare-const o178 Int)
(declare-const o179 Int)
(declare-const o180 cardindex)
(declare-const o181 Int)
(declare-const o182 Int)
(declare-const o183 cardindex)
(declare-const o184 Int)
(declare-const o185 Bool)
(declare-const o186 Bool)
(declare-const i4 Int)
(declare-const j1 Int)
(declare-const o187 Int)
(declare-const o188 cardindex)
(declare-const o189 Int)
(declare-const o190 Int)
(declare-const o191 Bool)
(declare-const k Int)
(declare-const o192 Int)
(declare-const o193 Int)
(declare-const o194 cardindex)
(declare-const o195 Int)
(declare-const o196 Int)
(declare-const o197 Bool)
(declare-const o198 Bool)
(declare-const o199 Int)
(declare-const temp___716 (Array Int cardindex))
(declare-const o200 Int)
(declare-const o201 cardindex)
(declare-const temp___717 Int)
(declare-const o202 Int)
(declare-const temp___720 (Array Int cardindex))
(declare-const o203 Int)
(declare-const o204 cardindex)
(declare-const temp___721 Int)
(declare-const o205 Int)
(declare-const o206 card)
(declare-const o207 Int)
(declare-const i5 Int)
(declare-const j2 Int)
(declare-const o208 Int)
(declare-const o209 cardindex)
(declare-const o210 Int)
(declare-const o211 Int)
(declare-const o212 Bool)
(declare-const k1 Int)
(declare-const o213 Int)
(declare-const o214 Int)
(declare-const o215 cardindex)
(declare-const o216 Int)
(declare-const o217 Int)
(declare-const o218 Bool)
(declare-const o219 Bool)
(declare-const o220 Int)
(declare-const temp___692 (Array Int cardindex))
(declare-const o221 Int)
(declare-const temp___694 (Array Int cardindex))
(declare-const o222 Int)
(declare-const o223 cardindex)
(declare-const o224 Int)
(declare-const ist Int)
(declare-const ip Int)
(declare-const o225 Int)
(declare-const o226 cardindex)
(declare-const o227 Int)
(declare-const o228 Int)
(declare-const o229 Bool)
(declare-const o230 Int)
(declare-const temp___669 (Array Int cardindex))
(declare-const o231 Int)
(declare-const o232 cardindex)
(declare-const temp___670 Int)
(declare-const o233 Int)
(declare-const temp___673 (Array Int cardindex))
(declare-const o234 Int)
(declare-const o235 cardindex)
(declare-const temp___674 Int)
(declare-const o236 Int)
(declare-const o237 cardindex)
(declare-const o238 Int)
(declare-const o239 Bool)
(declare-const i6 Int)
(declare-const o240 Int)
(declare-const o241 cardindex)
(declare-const temp___654 Int)
(declare-const o242 Int)
(declare-const temp___655 (Array Int cardindex))
(declare-const o243 Int)
(declare-const o244 cardindex)
(declare-const temp___657 Int)
(declare-const o245 Int)
(declare-const o246 cardindex)
(declare-const o247 Int)
(declare-const o248 Int)
(declare-const o249 cardindex)
(declare-const o250 Int)
(declare-const o251 cardindex)
(declare-const temp___651 Int)
(declare-const o252 Int)
(declare-const o253 cardindex)
(declare-const o254 Int)
(declare-const o255 Int)
(declare-const o256 Int)
(declare-const o257 Bool)
(declare-const o258 Bool)
(declare-const o259 Int)
(declare-const o260 cardindex)
(declare-const o261 Int)
(declare-const o262 Int)
(declare-const o263 cardindex)
(declare-const o264 Int)
(declare-const o265 Bool)
(declare-const o266 Bool)
(declare-const stackisize1 Int)
(declare-const topstacki1 Int)
(declare-const result int__ref)
(declare-const pred1 Int)
(declare-const result1 int__ref)
(declare-const i7 Int)
(declare-const pred2 Int)
(declare-const i8 Int)
(declare-const stackisize2 Int)
(declare-const topstacki2 Int)
(declare-const result2 Bool)
(declare-const result3 Bool)
(declare-const result4 int__ref)
(declare-const stackisize3 Int)
(declare-const result5 int__ref)
(declare-const topstacki3 Int)
(declare-const result6 Bool)
(declare-const result7 Bool)
(declare-const result8 Bool)
(declare-const result9 Bool)
(declare-const result10 Bool)
(declare-const result11 Bool)
(declare-const result12 Bool)
(declare-const result13 int__ref)
(declare-const pred3 Int)
(declare-const result14 int__ref)
(declare-const i9 Int)
(declare-const pred4 int__ref)
(declare-const i10 int__ref)
(declare-const pred5 Int)
(declare-const i11 Int)
(declare-const pred6 int__ref)
(declare-const i12 int__ref)
(declare-const stackisize4 int__ref)
(declare-const topstacki4 int__ref)
(declare-const pred7 Int)
(declare-const i13 Int)
(declare-const stackisize5 Int)
(declare-const topstacki5 Int)
(declare-const pred8 int__ref)
(declare-const i14 int__ref)
(declare-const stackisize6 int__ref)
(declare-const topstacki6 int__ref)
(declare-const pred9 Int)
(declare-const i15 Int)
(declare-const stackisize7 Int)
(declare-const topstacki7 Int)
(declare-const result15 int__ref)
(declare-const idx1 Int)
(declare-const result16 us_split_fields__ref)
(declare-const s__split_fields8 us_split_fields)
(declare-const result17 us_split_fields__ref)
(declare-const s__split_fields9 us_split_fields)
(declare-const result18 us_split_fields__ref)
(declare-const s__split_fields10 us_split_fields)
(declare-const result19 int__ref)
(declare-const i16 Int)
(declare-const result20 us_split_fields__ref)
(declare-const s__split_fields11 us_split_fields)
(declare-const result21 us_split_fields__ref)
(declare-const s__split_fields12 us_split_fields)
(declare-const result22 us_split_fields__ref)
(declare-const s__split_fields13 us_split_fields)
(declare-const result23 us_split_fields__ref)
(declare-const s__split_fields14 us_split_fields)
(declare-const result24 us_split_fields__ref)
(declare-const s__split_fields15 us_split_fields)
(declare-const result25 int__ref)
(declare-const stackisize8 Int)
(declare-const result26 us_split_fields__ref)
(declare-const s__split_fields16 us_split_fields)
(declare-const result27 us_split_fields__ref)
(declare-const s__split_fields17 us_split_fields)
(declare-const result28 us_split_fields__ref)
(declare-const s__split_fields18 us_split_fields)
(declare-const result29 us_split_fields__ref)
(declare-const s__split_fields19 us_split_fields)
(declare-const s__split_fields20 us_split_fields__ref)
(declare-const i17 int__ref)
(declare-const stackisize9 int__ref)
(declare-const s__split_fields21 us_split_fields)
(declare-const i18 Int)
(declare-const stackisize10 Int)
(declare-const result30 Bool)
(declare-const result31 Bool)
(declare-const result32 Bool)
(declare-const result33 Bool)
(declare-const result34 Bool)
(declare-const result35 Bool)
(declare-const result36 Bool)
(declare-const result37 Bool)
(declare-const result38 Bool)
(declare-const result39 Bool)
(declare-const result40 Bool)
(declare-const result41 Bool)
(declare-const result42 Bool)
(declare-const result43 Bool)
(declare-const result44 Bool)
(declare-const result45 Bool)
(declare-const result46 Bool)
(declare-const s__split_fields22 us_split_fields__ref)
(declare-const idx2 int__ref)
(declare-const pred10 int__ref)
(declare-const i19 int__ref)
(declare-const stackisize11 int__ref)
(declare-const topstacki8 int__ref)
(declare-const s__split_fields23 us_split_fields)
(declare-const idx3 Int)
(declare-const pred11 Int)
(declare-const i20 Int)
(declare-const stackisize12 Int)
(declare-const topstacki9 Int)
(assert (in_range2 c))
(assert (and (= (inv (mk___rep (mk___split_fields s__split_fields s__split_fields1 s__split_fields2 s__split_fields3 s__split_fields4 s__split_fields5 s__split_fields6 s__split_fields7))) true) (< (to_rep1 s__split_fields) 100)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 idx)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 pred)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 i)))
(assert (=> (<= (- 1) 100) (in_range3 stackisize)))
(assert (=> (<= (- 1) 100) (in_range3 topstacki)))
(assert (= result (mk_int__ref pred)))
(assert (= pred1 (- 1)))
(assert (= result1 (mk_int__ref i)))
(assert (= i7 0))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= temp___568 topstacki)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= temp___567 stackisize)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= temp___566 i7)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= temp___565 pred1)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (and (<= 0 i8) (<= i8 (to_rep1 s__split_fields2)))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (ite (= i8 0) (= pred2 (- 1)) (and (and (and (and (<= 0 pred2) (<= pred2 (- (to_rep1 s__split_fields) 1))) (= pred2 (to_rep1 (select (select s__split_fields4 (- i8 1)) (- (to_rep1 (select s__split_fields3 (- i8 1))) 1))))) (< (to_rep (select s__split_fields1 pred2)) c)) (= (to_rep1 (select s__split_fields5 pred2)) (- i8 1))))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (and (and (and (and (=> (<= (- 2147483648) 2147483647) (in_range1 pred2)) (=> (<= (- 2147483648) 2147483647) (in_range1 i8))) (=> (<= (- 1) 100) (in_range3 stackisize2))) (=> (<= (- 1) 100) (in_range3 topstacki2))) (< i8 (to_rep1 s__split_fields2)))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (and (<= 0 i8) (<= i8 99))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= o11 i8)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= o12 (select s__split_fields3 o11))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= o13 (to_rep1 o12))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= result4 (mk_int__ref stackisize2))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= stackisize3 o13)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (and (<= 0 i8) (<= i8 99))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= o14 i8)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= temp___535 (select s__split_fields4 o14))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (and (<= 0 (- stackisize3 1)) (<= (- stackisize3 1) 99))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= o15 (- stackisize3 1))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= o16 (select temp___535 o15))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= o17 (to_rep1 o16))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= result5 (mk_int__ref topstacki2))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= topstacki3 o17)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (or (and (and (and (= i10 (mk_int__ref i8)) (= pred4 (mk_int__ref pred2))) (and (= i11 i8) (= pred5 pred2))) (and (and (and (and (and (and (<= 0 topstacki3) (<= topstacki3 99)) (= o18 topstacki3)) (= o19 (select s__split_fields1 o18))) (= o20 (to_rep o19))) (= result6 (ite (<= c o20) true false))) (= result6 true))) (and (and (and (and (and (and (and (<= 0 topstacki3) (<= topstacki3 99)) (= o18 topstacki3)) (= o19 (select s__split_fields1 o18))) (= o20 (to_rep o19))) (= result6 (ite (<= c o20) true false))) (not (= result6 true))) (and (and (and (= i10 (mk_int__ref i9)) (= pred4 (mk_int__ref pred3))) (and (= i11 i9) (= pred5 pred3))) (and (and (<= 0 topstacki3) (< topstacki3 (to_rep1 s__split_fields))) (and (and (and (and (and (and (and (<= 0 (to_rep1 (select s__split_fields5 topstacki3))) (< (to_rep1 (select s__split_fields5 topstacki3)) (to_rep1 s__split_fields2))) (<= 0 (to_rep1 (select s__split_fields6 topstacki3)))) (< (to_rep1 (select s__split_fields6 topstacki3)) (to_rep1 (select s__split_fields3 (to_rep1 (select s__split_fields5 topstacki3)))))) (= (to_rep1 (select (select s__split_fields4 (to_rep1 (select s__split_fields5 topstacki3))) (to_rep1 (select s__split_fields6 topstacki3)))) topstacki3)) (= (to_rep1 (select s__split_fields5 topstacki3)) i8)) (= (to_rep1 (select s__split_fields6 topstacki3)) (- stackisize3 1))) (and (and (= result13 (mk_int__ref pred2)) (= pred3 topstacki3)) (and (and (and (= o49 (+ i8 1)) (in_range1 (+ i8 1))) (and (= result14 (mk_int__ref i8)) (= i9 o49))) (not (< i9 (to_rep1 s__split_fields2))))))))))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= topstacki4 (mk_int__ref topstacki3))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= stackisize4 (mk_int__ref stackisize3))))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= i12 i10)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= pred6 pred4)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= topstacki5 topstacki3)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= stackisize5 stackisize3)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= i13 i11)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= pred7 pred5)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= topstacki6 topstacki4)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= stackisize6 stackisize4)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= i14 i12)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= pred8 pred6)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= topstacki7 topstacki5)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= stackisize7 stackisize5)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= i15 i13)))
(assert (=> (< i7 (to_rep1 s__split_fields2)) (= pred9 pred7)))
(assert (=> (not (< i7 (to_rep1 s__split_fields2))) (= topstacki6 (mk_int__ref topstacki))))
(assert (=> (not (< i7 (to_rep1 s__split_fields2))) (= stackisize6 (mk_int__ref stackisize))))
(assert (=> (not (< i7 (to_rep1 s__split_fields2))) (= i14 (mk_int__ref i7))))
(assert (=> (not (< i7 (to_rep1 s__split_fields2))) (= pred8 (mk_int__ref pred1))))
(assert (=> (not (< i7 (to_rep1 s__split_fields2))) (= topstacki7 topstacki1)))
(assert (=> (not (< i7 (to_rep1 s__split_fields2))) (= stackisize7 stackisize1)))
(assert (=> (not (< i7 (to_rep1 s__split_fields2))) (= i15 i7)))
(assert (=> (not (< i7 (to_rep1 s__split_fields2))) (= pred9 pred1)))
(assert (= result15 (mk_int__ref idx)))
(assert (= idx1 (to_rep1 s__split_fields)))
(assert (= (to_rep o50) c))
(assert (and (<= 0 idx1) (<= idx1 99)))
(assert (= o51 idx1))
(assert (= o52 (store s__split_fields1 o51 o50)))
(assert (= s__split_fields o53))
(assert (= o52 o54))
(assert (= s__split_fields2 o55))
(assert (= s__split_fields3 o56))
(assert (= s__split_fields4 o57))
(assert (= s__split_fields5 o58))
(assert (= s__split_fields6 o59))
(assert (= s__split_fields7 o60))
(assert (= temp___584 o53))
(assert (= temp___5841 o54))
(assert (= temp___5842 o55))
(assert (= temp___5843 o56))
(assert (= temp___5844 o57))
(assert (= temp___5845 o58))
(assert (= temp___5846 o59))
(assert (= temp___5847 o60))
(assert (= result16 (mk___split_fields__ref (mk___split_fields s__split_fields s__split_fields1 s__split_fields2 s__split_fields3 s__split_fields4 s__split_fields5 s__split_fields6 s__split_fields7))))
(assert (= s__split_fields8 (mk___split_fields temp___584 temp___5841 temp___5842 temp___5843 temp___5844 temp___5845 temp___5846 temp___5847)))
(assert (and (= o61 (+ idx1 1)) (in_range1 (+ idx1 1))))
(assert (and (= o62 o61) (in_range3 o61)))
(assert (= (to_rep1 o63) o62))
(assert (= o63 o64))
(assert (= (rec__patience__state__values s__split_fields8) o65))
(assert (= (rec__patience__state__numstacks s__split_fields8) o66))
(assert (= (rec__patience__state__stacksizes s__split_fields8) o67))
(assert (= (rec__patience__state__stacks s__split_fields8) o68))
(assert (= (rec__patience__state__posstack s__split_fields8) o69))
(assert (= (rec__patience__state__posheight s__split_fields8) o70))
(assert (= (rec__patience__state__preds s__split_fields8) o71))
(assert (= temp___586 o64))
(assert (= temp___5861 o65))
(assert (= temp___5862 o66))
(assert (= temp___5863 o67))
(assert (= temp___5864 o68))
(assert (= temp___5865 o69))
(assert (= temp___5866 o70))
(assert (= temp___5867 o71))
(assert (= result17 (mk___split_fields__ref s__split_fields8)))
(assert (= s__split_fields9 (mk___split_fields temp___586 temp___5861 temp___5862 temp___5863 temp___5864 temp___5865 temp___5866 temp___5867)))
(assert (and (= o72 (int__content pred8)) (in_range3 (int__content pred8))))
(assert (= (to_rep1 o73) o72))
(assert (and (<= 0 idx1) (<= idx1 99)))
(assert (= o74 idx1))
(assert (= o75 (store (rec__patience__state__preds s__split_fields9) o74 o73)))
(assert (= (rec__patience__state__numelts s__split_fields9) o76))
(assert (= (rec__patience__state__values s__split_fields9) o77))
(assert (= (rec__patience__state__numstacks s__split_fields9) o78))
(assert (= (rec__patience__state__stacksizes s__split_fields9) o79))
(assert (= (rec__patience__state__stacks s__split_fields9) o80))
(assert (= (rec__patience__state__posstack s__split_fields9) o81))
(assert (= (rec__patience__state__posheight s__split_fields9) o82))
(assert (= o75 o83))
(assert (= temp___589 o76))
(assert (= temp___5891 o77))
(assert (= temp___5892 o78))
(assert (= temp___5893 o79))
(assert (= temp___5894 o80))
(assert (= temp___5895 o81))
(assert (= temp___5896 o82))
(assert (= temp___5897 o83))
(assert (= result18 (mk___split_fields__ref s__split_fields9)))
(assert (= s__split_fields10 (mk___split_fields temp___589 temp___5891 temp___5892 temp___5893 temp___5894 temp___5895 temp___5896 temp___5897)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= result19 i14)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= i16 (to_rep1 (rec__patience__state__numstacks s__split_fields10)))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (and (= o84 (+ (to_rep1 (rec__patience__state__numstacks s__split_fields10)) 1)) (in_range3 (+ (to_rep1 (rec__patience__state__numstacks s__split_fields10)) 1)))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (to_rep1 o85) o84)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__numelts s__split_fields10) o86)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__values s__split_fields10) o87)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o85 o88)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__stacksizes s__split_fields10) o89)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__stacks s__split_fields10) o90)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__posstack s__split_fields10) o91)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__posheight s__split_fields10) o92)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__preds s__split_fields10) o93)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___606 o86)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6061 o87)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6062 o88)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6063 o89)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6064 o90)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6065 o91)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6066 o92)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6067 o93)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= result20 (mk___split_fields__ref s__split_fields10))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields11 (mk___split_fields temp___606 temp___6061 temp___6062 temp___6063 temp___6064 temp___6065 temp___6066 temp___6067))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (to_rep1 o94) 1)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (and (<= 0 i16) (<= i16 99))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o95 i16)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o96 (store (rec__patience__state__stacksizes s__split_fields11) o95 o94))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__numelts s__split_fields11) o97)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__values s__split_fields11) o98)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__numstacks s__split_fields11) o99)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o96 o100)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__stacks s__split_fields11) o101)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__posstack s__split_fields11) o102)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__posheight s__split_fields11) o103)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (rec__patience__state__preds s__split_fields11) o104)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___609 o97)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6091 o98)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6092 o99)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6093 o100)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6094 o101)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6095 o102)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6096 o103)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___6097 o104)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= result21 (mk___split_fields__ref s__split_fields11))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields12 (mk___split_fields temp___609 temp___6091 temp___6092 temp___6093 temp___6094 temp___6095 temp___6096 temp___6097))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (and (= o105 idx1) (in_range3 idx1))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (to_rep1 o106) o105)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o107 (store (select (rec__patience__state__stacks s__split_fields12) i16) 0 o106))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (and (<= 0 i16) (<= i16 99))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o108 i16)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o109 (store (rec__patience__state__stacks s__split_fields12) o108 o107))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o110 (mk___split_fields (rec__patience__state__numelts s__split_fields12) (rec__patience__state__values s__split_fields12) (rec__patience__state__numstacks s__split_fields12) (rec__patience__state__stacksizes s__split_fields12) o109 (rec__patience__state__posstack s__split_fields12) (rec__patience__state__posheight s__split_fields12) (rec__patience__state__preds s__split_fields12)))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___614 (mk___rep o110))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= result22 (mk___split_fields__ref s__split_fields12))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields13 (us_split_fields1 temp___614))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (and (= o111 i16) (in_range3 i16))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (to_rep1 o112) o111)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (and (<= 0 idx1) (<= idx1 99))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o113 idx1)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o114 (store (rec__patience__state__posstack s__split_fields13) o113 o112))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o115 (mk___split_fields (rec__patience__state__numelts s__split_fields13) (rec__patience__state__values s__split_fields13) (rec__patience__state__numstacks s__split_fields13) (rec__patience__state__stacksizes s__split_fields13) (rec__patience__state__stacks s__split_fields13) o114 (rec__patience__state__posheight s__split_fields13) (rec__patience__state__preds s__split_fields13)))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___617 (mk___rep o115))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= result23 (mk___split_fields__ref s__split_fields13))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields14 (us_split_fields1 temp___617))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= (to_rep1 o116) 0)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (and (<= 0 idx1) (<= idx1 99))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o117 idx1)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o118 (store (rec__patience__state__posheight s__split_fields14) o117 o116))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= o119 (mk___split_fields (rec__patience__state__numelts s__split_fields14) (rec__patience__state__values s__split_fields14) (rec__patience__state__numstacks s__split_fields14) (rec__patience__state__stacksizes s__split_fields14) (rec__patience__state__stacks s__split_fields14) (rec__patience__state__posstack s__split_fields14) o118 (rec__patience__state__preds s__split_fields14)))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= temp___620 (mk___rep o119))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= result24 (mk___split_fields__ref s__split_fields14))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields15 (us_split_fields1 temp___620))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= stackisize9 stackisize6)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= i17 (mk_int__ref i16))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields20 (mk___split_fields__ref s__split_fields15))))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= stackisize10 stackisize7)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= i18 i16)))
(assert (=> (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10))) (= s__split_fields21 s__split_fields15)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (and (<= 0 (int__content i14)) (<= (int__content i14) 99))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o120 (int__content i14))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o121 (select (rec__patience__state__stacksizes s__split_fields10) o120))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o122 (to_rep1 o121))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= result25 stackisize6)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= stackisize8 o122)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (and (= o123 (+ stackisize8 1)) (in_range3 (+ stackisize8 1)))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= (to_rep1 o124) o123)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (and (<= 0 (int__content i14)) (<= (int__content i14) 99))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o125 (int__content i14))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o126 (store (rec__patience__state__stacksizes s__split_fields10) o125 o124))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o127 (mk___split_fields (rec__patience__state__numelts s__split_fields10) (rec__patience__state__values s__split_fields10) (rec__patience__state__numstacks s__split_fields10) o126 (rec__patience__state__stacks s__split_fields10) (rec__patience__state__posstack s__split_fields10) (rec__patience__state__posheight s__split_fields10) (rec__patience__state__preds s__split_fields10)))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= temp___593 (mk___rep o127))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= result26 (mk___split_fields__ref s__split_fields10))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= s__split_fields16 (us_split_fields1 temp___593))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (and (= o128 idx1) (in_range3 idx1))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= (to_rep1 o129) o128)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (and (<= 0 stackisize8) (<= stackisize8 99))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o130 stackisize8)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o131 (store (select (rec__patience__state__stacks s__split_fields16) (int__content i14)) o130 o129))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (and (<= 0 (int__content i14)) (<= (int__content i14) 99))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o132 (int__content i14))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o133 (store (rec__patience__state__stacks s__split_fields16) o132 o131))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o134 (mk___split_fields (rec__patience__state__numelts s__split_fields16) (rec__patience__state__values s__split_fields16) (rec__patience__state__numstacks s__split_fields16) (rec__patience__state__stacksizes s__split_fields16) o133 (rec__patience__state__posstack s__split_fields16) (rec__patience__state__posheight s__split_fields16) (rec__patience__state__preds s__split_fields16)))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= temp___598 (mk___rep o134))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= result27 (mk___split_fields__ref s__split_fields16))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= s__split_fields17 (us_split_fields1 temp___598))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (and (= o135 (int__content i14)) (in_range3 (int__content i14)))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= (to_rep1 o136) o135)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (and (<= 0 idx1) (<= idx1 99))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o137 idx1)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o138 (store (rec__patience__state__posstack s__split_fields17) o137 o136))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o139 (mk___split_fields (rec__patience__state__numelts s__split_fields17) (rec__patience__state__values s__split_fields17) (rec__patience__state__numstacks s__split_fields17) (rec__patience__state__stacksizes s__split_fields17) (rec__patience__state__stacks s__split_fields17) o138 (rec__patience__state__posheight s__split_fields17) (rec__patience__state__preds s__split_fields17)))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= temp___601 (mk___rep o139))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= result28 (mk___split_fields__ref s__split_fields17))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= s__split_fields18 (us_split_fields1 temp___601))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= (to_rep1 o140) stackisize8)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (and (<= 0 idx1) (<= idx1 99))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o141 idx1)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o142 (store (rec__patience__state__posheight s__split_fields18) o141 o140))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= o143 (mk___split_fields (rec__patience__state__numelts s__split_fields18) (rec__patience__state__values s__split_fields18) (rec__patience__state__numstacks s__split_fields18) (rec__patience__state__stacksizes s__split_fields18) (rec__patience__state__stacks s__split_fields18) (rec__patience__state__posstack s__split_fields18) o142 (rec__patience__state__preds s__split_fields18)))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= temp___604 (mk___rep o143))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= result29 (mk___split_fields__ref s__split_fields18))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= s__split_fields19 (us_split_fields1 temp___604))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= stackisize9 (mk_int__ref stackisize8))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= i17 i14)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= s__split_fields20 (mk___split_fields__ref s__split_fields19))))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= stackisize10 stackisize8)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= i18 i15)))
(assert (=> (not (= (int__content i14) (to_rep1 (rec__patience__state__numstacks s__split_fields10)))) (= s__split_fields21 s__split_fields19)))
(assert (and (and (and (<= 0 (to_rep1 (rec__patience__state__numstacks (us_split_fields__content s__split_fields20)))) (<= (to_rep1 (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) (to_rep1 (rec__patience__state__numelts (us_split_fields__content s__split_fields20))))) (<= (to_rep1 (rec__patience__state__numelts (us_split_fields__content s__split_fields20))) 100)) (or (= (to_rep1 (rec__patience__state__numelts (us_split_fields__content s__split_fields20))) 0) (< 0 (to_rep1 (rec__patience__state__numstacks (us_split_fields__content s__split_fields20)))))))
(assert (forall ((i21 Int)) (=> (and (<= 0 i21) (<= i21 (- (to_rep1 (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) 1))) (<= 1 (to_rep1 (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i21))))))
(assert (forall ((i21 Int)) (=> (and (<= 0 i21) (<= i21 (- (to_rep1 (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) 1))) (and (<= (to_rep1 (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i21)) (to_rep1 (rec__patience__state__numelts (us_split_fields__content s__split_fields20)))) (forall ((j3 Int)) (=> (and (<= 0 j3) (<= j3 (- (to_rep1 (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i21)) 1))) (and (<= 0 (to_rep1 (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) i21) j3))) (< (to_rep1 (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) i21) j3)) (to_rep1 (rec__patience__state__numelts (us_split_fields__content s__split_fields20)))))))))))
(assert (= (= result34 true) (forall ((i21 Int)) (=> (and (<= 0 i21) (<= i21 (- (to_rep1 (rec__patience__state__numelts (us_split_fields__content s__split_fields20))) 1))) (and (and (and (<= 0 (to_rep1 (select (rec__patience__state__posstack (us_split_fields__content s__split_fields20)) i21))) (<= (to_rep1 (select (rec__patience__state__posstack (us_split_fields__content s__split_fields20)) i21)) (- (to_rep1 (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) 1))) (and (<= 0 (to_rep1 (select (rec__patience__state__posheight (us_split_fields__content s__split_fields20)) i21))) (<= (to_rep1 (select (rec__patience__state__posheight (us_split_fields__content s__split_fields20)) i21)) (- (to_rep1 (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) (to_rep1 (select (rec__patience__state__posstack (us_split_fields__content s__split_fields20)) i21)))) 1)))) (= (to_rep1 (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) (to_rep1 (select (rec__patience__state__posstack (us_split_fields__content s__split_fields20)) i21))) (to_rep1 (select (rec__patience__state__posheight (us_split_fields__content s__split_fields20)) i21)))) i21))))))
(assert (=> (= result34 true) (= (= result33 true) (forall ((ist1 Int)) (=> (and (<= 0 ist1) (<= ist1 (- (to_rep1 (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) 1))) (forall ((ip1 Int)) (=> (and (<= 0 ip1) (<= ip1 (- (to_rep1 (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) ist1)) 1))) (and (= ist1 (to_rep1 (select (rec__patience__state__posstack (us_split_fields__content s__split_fields20)) (to_rep1 (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) ist1) ip1))))) (= ip1 (to_rep1 (select (rec__patience__state__posheight (us_split_fields__content s__split_fields20)) (to_rep1 (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) ist1) ip1)))))))))))))
(assert (=> (not (= result34 true)) (= result33 false)))
(assert (=> (= result33 true) (= (= result32 true) (forall ((i21 Int)) (=> (and (<= 0 i21) (<= i21 (- (to_rep1 (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) 1))) (forall ((j3 Int)) (=> (and (<= 0 j3) (<= j3 (- (to_rep1 (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i21)) 2))) (forall ((k2 Int)) (=> (and (<= (+ j3 1) k2) (<= k2 (- (to_rep1 (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i21)) 1))) (< (to_rep1 (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) i21) j3)) (to_rep1 (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) i21) k2))))))))))))
(assert (=> (not (= result33 true)) (= result32 false)))
(assert (=> (= result32 true) (= (= result31 true) (forall ((i21 Int)) (=> (and (<= 0 i21) (<= i21 (- (to_rep1 (rec__patience__state__numstacks (us_split_fields__content s__split_fields20))) 1))) (forall ((j3 Int)) (=> (and (<= 0 j3) (<= j3 (- (to_rep1 (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i21)) 2))) (forall ((k2 Int)) (=> (and (<= (+ j3 1) k2) (<= k2 (- (to_rep1 (select (rec__patience__state__stacksizes (us_split_fields__content s__split_fields20)) i21)) 1))) (<= (to_rep (select (rec__patience__state__values (us_split_fields__content s__split_fields20)) (to_rep1 (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) i21) k2)))) (to_rep (select (rec__patience__state__values (us_split_fields__content s__split_fields20)) (to_rep1 (select (select (rec__patience__state__stacks (us_split_fields__content s__split_fields20)) i21) j3))))))))))))))
(assert (=> (not (= result32 true)) (= result31 false)))
(assert (= result31 true))
(assert (<= 0 i3))
(assert (<= i3 (- (to_rep1 (rec__patience__state__numelts (us_split_fields__content s__split_fields20))) 1)))
(assert (and (<= 0 i3) (<= i3 99)))
(assert (= o182 i3))
(assert (= o183 (select (rec__patience__state__preds (us_split_fields__content s__split_fields20)) o182)))
(assert (= o184 (to_rep1 o183)))
(assert (= o185 (ite (<= o184 (- (to_rep1 (rec__patience__state__numelts (us_split_fields__content s__split_fields20))) 1)) true false)))
(assert (and (<= 0 i3) (<= i3 99)))
(assert (= o179 i3))
(assert (= o180 (select (rec__patience__state__preds (us_split_fields__content s__split_fields20)) o179)))
(assert (= o181 (to_rep1 o180)))
(assert (= o186 (ite (<= (- 1) o181) true false)))
(assert (= result43 (ite (= o186 true) o185 false)))
(assert (=> (= result43 true) (and (<= 0 i3) (<= i3 99))))
(assert (=> (= result43 true) (= o176 i3)))
(assert (=> (= result43 true) (= o177 (select (rec__patience__state__preds (us_split_fields__content s__split_fields20)) o176))))
(assert (=> (= result43 true) (= o178 (to_rep1 o177))))
(assert (=> (= result43 true) (= result42 (ite (< o178 i3) true false))))
(assert (=> (not (= result43 true)) (= result42 false)))
(assert (= result42 true))
(assert (and (<= 0 i3) (<= i3 99)))
(assert (= o156 i3))
(assert (= o157 (select (rec__patience__state__preds (us_split_fields__content s__split_fields20)) o156)))
(assert (= o158 (to_rep1 o157)))
(assert (= result44 (ite (< o158 0) true false)))
(assert (= result44 true))
(assert (not (<= 0 i3)))
(check-sat)
(exit)
