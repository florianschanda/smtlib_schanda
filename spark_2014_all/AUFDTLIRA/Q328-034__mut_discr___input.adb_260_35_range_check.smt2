(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-sort natural 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (natural natural) Bool)
(declare-const dummy4 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range4 temp___expr_39)))
(define-fun dynamic_invariant2 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun concat_singleton_left (character Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a character)) (forall ((b (Array Int character))) (forall ((a_first Int) (b_first Int) (b_last Int)) (! (and (= (select (concat_singleton_left a a_first b b_first b_last) a_first) a) (forall ((i Int)) (! (=> (< a_first i) (= (select (concat_singleton_left a a_first b b_first b_last) i) (select b (+ (- i a_first) (- b_first 1))))) :pattern ((select (concat_singleton_left a a_first b b_first b_last) i))))) :pattern ((concat_singleton_left a a_first b b_first b_last)))))))
(declare-fun concat_singleton_right ((Array Int character) Int Int character) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((b character)) (forall ((a_first Int) (a_last Int)) (! (and (= (select (concat_singleton_right a a_first a_last b) (+ a_last 1)) b) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (concat_singleton_right a a_first a_last b) i) (select a i))) :pattern ((select (concat_singleton_right a a_first a_last b) i)) :pattern ((select a i))))) :pattern ((concat_singleton_right a a_first a_last b)))))))
(declare-fun concat_singletons (character Int character) (Array Int character))
(assert (forall ((a character) (b character)) (forall ((a_first Int)) (! (and (= (select (concat_singletons a a_first b) a_first) a) (= (select (concat_singletons a a_first b) (+ a_first 1)) b)) :pattern ((concat_singletons a a_first b))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(declare-fun to_upper (Int) Int)
(declare-fun to_upper__function_guard (Int Int) Bool)
(assert (forall ((item Int)) (! (=> (dynamic_invariant2 item true true true true) (dynamic_invariant2 (to_upper item) true false true true)) :pattern ((to_upper item)))))
(declare-const v__first integer)
(declare-const v__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-sort printable_character 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 33 x) (<= x 126)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (printable_character printable_character) Bool)
(declare-const dummy5 printable_character)
(declare-datatypes () ((printable_character__ref (mk_printable_character__ref (printable_character__content printable_character)))))
(define-fun printable_character__ref___projection ((a printable_character__ref)) printable_character (printable_character__content a))
(declare-sort tTlineSP1 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (tTlineSP1 tTlineSP1) Bool)
(declare-const dummy6 tTlineSP1)
(declare-datatypes () ((tTlineSP1__ref (mk_tTlineSP1__ref (tTlineSP1__content tTlineSP1)))))
(define-fun tTlineSP1__ref___projection ((a tTlineSP1__ref)) tTlineSP1 (tTlineSP1__content a))
(declare-sort tfirst_charS 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 1025)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq7 (tfirst_charS tfirst_charS) Bool)
(declare-const dummy7 tfirst_charS)
(declare-datatypes () ((tfirst_charS__ref (mk_tfirst_charS__ref (tfirst_charS__content tfirst_charS)))))
(define-fun tfirst_charS__ref___projection ((a tfirst_charS__ref)) tfirst_charS (tfirst_charS__content a))
(define-fun dynamic_invariant3 ((temp___expr_652 Int) (temp___is_init_648 Bool) (temp___skip_constant_649 Bool) (temp___do_toplevel_650 Bool) (temp___do_typ_inv_651 Bool)) Bool (=> (or (= temp___is_init_648 true) (<= 1 1025)) (in_range7 temp___expr_652)))
(declare-sort tlast_charS 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq8 (tlast_charS tlast_charS) Bool)
(declare-const dummy8 tlast_charS)
(declare-datatypes () ((tlast_charS__ref (mk_tlast_charS__ref (tlast_charS__content tlast_charS)))))
(define-fun tlast_charS__ref___projection ((a tlast_charS__ref)) tlast_charS (tlast_charS__content a))
(define-fun dynamic_invariant4 ((temp___expr_659 Int) (temp___is_init_655 Bool) (temp___skip_constant_656 Bool) (temp___do_toplevel_657 Bool) (temp___do_typ_inv_658 Bool)) Bool (=> (or (= temp___is_init_655 true) (<= 0 1024)) (in_range8 temp___expr_659)))
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const r25b Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const r26b Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq9 (integer integer) Bool)
(declare-const dummy9 integer)
(declare-datatypes () ((t27b__ref (mk_t27b__ref (t27b__content integer)))))
(define-fun t27b__ref___projection ((a t27b__ref)) integer (t27b__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq10 (us_t1 us_t1) Bool)
(declare-const dummy10 us_t1)
(declare-datatypes () ((t28b__ref (mk_t28b__ref (t28b__content us_t1)))))
(define-fun t28b__ref___projection ((a t28b__ref)) us_t1 (t28b__content a))
(declare-const s__first integer)
(declare-const s__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq11 (integer integer) Bool)
(declare-const dummy11 integer)
(declare-datatypes () ((t30b__ref (mk_t30b__ref (t30b__content integer)))))
(define-fun t30b__ref___projection ((a t30b__ref)) integer (t30b__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int character)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))
(define-fun of_array2 ((a (Array Int character)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq12 (us_t2 us_t2) Bool)
(declare-const dummy12 us_t2)
(declare-datatypes () ((t31b__ref (mk_t31b__ref (t31b__content us_t2)))))
(define-fun t31b__ref___projection ((a t31b__ref)) us_t2 (t31b__content a))
(declare-fun temp___694 (Int Int Int) us_t2)
(define-fun dynamic_invariant5 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant6 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant7 ((temp___expr_635 Int) (temp___is_init_631 Bool) (temp___skip_constant_632 Bool) (temp___do_toplevel_633 Bool) (temp___do_typ_inv_634 Bool)) Bool (=> (or (= temp___is_init_631 true) (<= 33 126)) (in_range5 temp___expr_635)))
(assert (forall ((temp___696 Int) (temp___697 Int) (temp___698 Int)) (let ((temp___695 (temp___694 temp___696 temp___697 temp___698))) (=> (dynamic_invariant2 temp___696 true true true true) (and (=> (dynamic_property 1 2147483647 temp___697 temp___698) (and (= (first5 temp___695) temp___697) (= (last5 temp___695) temp___698))) (forall ((temp___699 Int)) (= (to_rep (select (to_array2 temp___695) temp___699)) temp___696)))))))
(declare-const size Int)
(declare-const line (Array Int character))
(declare-const first_char Int)
(declare-const last_char Int)
(declare-const line_num Int)
(declare-const start Int)
(declare-const current_char Int)
(declare-const temp___687 Int)
(declare-const temp___686 (Array Int character))
(declare-const temp___685 Int)
(declare-const temp___684 Int)
(declare-const temp___683 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 character)
(declare-const o3 Int)
(declare-const line1 (Array Int character))
(declare-const first_char1 Int)
(declare-const last_char1 Int)
(declare-const line_num1 Int)
(declare-const current_char1 Int)
(declare-const first_char2 Int)
(declare-const last_char2 Int)
(declare-const line_num2 Int)
(declare-const current_char2 Int)
(declare-const line2 (Array Int character))
(declare-const first_char3 Int)
(declare-const last_char3 Int)
(declare-const line_num3 Int)
(declare-const current_char3 Int)
(declare-const line3 map__ref)
(declare-const first_char4 int__ref)
(declare-const last_char4 int__ref)
(declare-const line_num4 int__ref)
(declare-const current_char4 int__ref)
(declare-const line4 (Array Int character))
(declare-const first_char5 Int)
(declare-const last_char5 Int)
(declare-const line_num5 Int)
(declare-const current_char5 Int)
(declare-const line5 map__ref)
(declare-const first_char6 int__ref)
(declare-const last_char6 int__ref)
(declare-const line_num6 int__ref)
(declare-const current_char6 int__ref)
(declare-const line6 (Array Int character))
(declare-const first_char7 Int)
(declare-const last_char7 Int)
(declare-const line_num7 Int)
(declare-const current_char7 Int)
(declare-const result int__ref)
(declare-const first_char8 Int)
(declare-const result1 int__ref)
(declare-const first_char9 Int)
(declare-const first_char10 int__ref)
(declare-const first_char11 Int)
(declare-const result2 int__ref)
(declare-const start1 Int)
(declare-const result3 Bool)
(declare-const first_char12 Int)
(assert (in_range7 first_char))
(assert (in_range8 last_char))
(assert (in_range4 line_num))
(assert (dynamic_property 1 2147483647 (to_rep1 v__first) (to_rep1 v__last)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 size)))
(assert (<= 1024 (ite (<= (to_rep1 v__first) (to_rep1 v__last)) (+ (- (to_rep1 v__last) (to_rep1 v__first)) 1) 0)))
(assert (=> (<= 0 2147483647) (in_range4 start)))
(assert (=> (<= 0 255) (in_range3 current_char)))
(assert (=> (<= first_char 1024) (= temp___687 first_char)))
(assert (=> (<= first_char 1024) (= temp___686 line)))
(assert (=> (<= first_char 1024) (= temp___685 line_num)))
(assert (=> (<= first_char 1024) (= temp___684 current_char)))
(assert (=> (<= first_char 1024) (= temp___683 last_char)))
(assert (=> (<= first_char 1024) (and (and (and (and (in_range8 last_char2) (=> (<= 0 255) (in_range3 current_char2))) (in_range4 line_num2)) (in_range7 first_char2)) (<= first_char2 1024))))
(assert (=> (<= first_char 1024) (and (and (and (in_range3 current_char3) (in_range8 last_char3)) (in_range4 line_num3)) (in_range7 first_char3))))
(assert (=> (<= first_char 1024) (or (in_range5 current_char3) (and (not (in_range5 current_char3)) (not (<= first_char3 1024))))))
(assert (=> (<= first_char 1024) (= current_char4 (mk_int__ref current_char3))))
(assert (=> (<= first_char 1024) (= line_num4 (mk_int__ref line_num3))))
(assert (=> (<= first_char 1024) (= last_char4 (mk_int__ref last_char3))))
(assert (=> (<= first_char 1024) (= first_char4 (mk_int__ref first_char3))))
(assert (=> (<= first_char 1024) (= line3 (mk_map__ref line2))))
(assert (=> (<= first_char 1024) (= current_char5 current_char3)))
(assert (=> (<= first_char 1024) (= line_num5 line_num3)))
(assert (=> (<= first_char 1024) (= last_char5 last_char3)))
(assert (=> (<= first_char 1024) (= first_char5 first_char3)))
(assert (=> (<= first_char 1024) (= line4 line2)))
(assert (=> (<= first_char 1024) (= current_char6 current_char4)))
(assert (=> (<= first_char 1024) (= line_num6 line_num4)))
(assert (=> (<= first_char 1024) (= last_char6 last_char4)))
(assert (=> (<= first_char 1024) (= first_char6 first_char4)))
(assert (=> (<= first_char 1024) (= line5 line3)))
(assert (=> (<= first_char 1024) (= current_char7 current_char5)))
(assert (=> (<= first_char 1024) (= line_num7 line_num5)))
(assert (=> (<= first_char 1024) (= last_char7 last_char5)))
(assert (=> (<= first_char 1024) (= first_char7 first_char5)))
(assert (=> (<= first_char 1024) (= line6 line4)))
(assert (=> (not (<= first_char 1024)) (= current_char6 (mk_int__ref current_char))))
(assert (=> (not (<= first_char 1024)) (= line_num6 (mk_int__ref line_num))))
(assert (=> (not (<= first_char 1024)) (= last_char6 (mk_int__ref last_char))))
(assert (=> (not (<= first_char 1024)) (= first_char6 (mk_int__ref first_char))))
(assert (=> (not (<= first_char 1024)) (= line5 (mk_map__ref line))))
(assert (=> (not (<= first_char 1024)) (= current_char7 current_char1)))
(assert (=> (not (<= first_char 1024)) (= line_num7 line_num1)))
(assert (=> (not (<= first_char 1024)) (= last_char7 last_char1)))
(assert (=> (not (<= first_char 1024)) (= first_char7 first_char1)))
(assert (=> (not (<= first_char 1024)) (= line6 line1)))
(assert (=> (<= 1 (- (int__content first_char6) 1)) (and (= o (- (int__content first_char6) 1)) (in_range7 (- (int__content first_char6) 1)))))
(assert (=> (<= 1 (- (int__content first_char6) 1)) (= result first_char6)))
(assert (=> (<= 1 (- (int__content first_char6) 1)) (= first_char8 o)))
(assert (=> (<= 1 (- (int__content first_char6) 1)) (= first_char10 (mk_int__ref first_char8))))
(assert (=> (<= 1 (- (int__content first_char6) 1)) (= first_char11 first_char8)))
(assert (=> (not (<= 1 (- (int__content first_char6) 1))) (= result1 first_char6)))
(assert (=> (not (<= 1 (- (int__content first_char6) 1))) (= first_char9 1)))
(assert (=> (not (<= 1 (- (int__content first_char6) 1))) (= first_char10 (mk_int__ref first_char9))))
(assert (=> (not (<= 1 (- (int__content first_char6) 1))) (= first_char11 first_char9)))
(assert (= result2 (mk_int__ref start)))
(assert (= start1 (int__content first_char10)))
(assert (=> (<= (int__content first_char10) 1024) (and (<= 1 (int__content first_char10)) (<= (int__content first_char10) 1024))))
(assert (=> (<= (int__content first_char10) 1024) (= o1 (int__content first_char10))))
(assert (=> (<= (int__content first_char10) 1024) (= o2 (select (map__content line5) o1))))
(assert (=> (<= (int__content first_char10) 1024) (= o3 (to_rep o2))))
(assert (=> (<= (int__content first_char10) 1024) (= result3 (ite (in_range5 o3) true false))))
(assert (=> (not (<= (int__content first_char10) 1024)) (= result3 false)))
(assert (= result3 true))
(assert (and (in_range7 first_char12) (and (<= first_char12 1024) (in_range5 (to_rep (select (map__content line5) first_char12))))))
(assert (not (in_range7 (+ first_char12 1))))
(check-sat)
(exit)
