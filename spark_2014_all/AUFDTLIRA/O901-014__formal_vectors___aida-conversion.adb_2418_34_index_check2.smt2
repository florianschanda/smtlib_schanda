(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant1 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(declare-fun is_digit (Int) Bool)
(declare-fun is_digit__function_guard (Bool Int) Bool)
(define-fun dynamic_invariant2 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(assert (forall ((c Int)) (! (=> (dynamic_invariant2 c true true true true) (let ((result (is_digit c))) (ite (= c 48) (= result true) (ite (= c 49) (= result true) (ite (= c 50) (= result true) (ite (= c 51) (= result true) (ite (= c 52) (= result true) (ite (= c 53) (= result true) (ite (= c 54) (= result true) (ite (= c 55) (= result true) (ite (= c 56) (= result true) (ite (= c 57) (= result true) (ite (< 57 c) (not (= result true)) (=> (< c 48) (not (= result true)))))))))))))))) :pattern ((is_digit c)))))
(declare-const source us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_invariant3 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(declare-const target Int)
(declare-const has_failed Bool)
(declare-const temp___1184 Int)
(declare-const o Int)
(declare-const o1 character)
(declare-const o2 Int)
(declare-const temp___1185 Int)
(declare-const o3 Int)
(declare-const o4 character)
(declare-const o5 Int)
(declare-const temp___1186 Int)
(declare-const o6 Int)
(declare-const o7 character)
(declare-const o8 Int)
(declare-const temp___1187 Int)
(declare-const o9 Int)
(declare-const o10 character)
(declare-const o11 Int)
(declare-const temp___1188 Int)
(declare-const o12 Int)
(declare-const o13 character)
(declare-const o14 Int)
(declare-const temp___1189 Int)
(declare-const o15 Int)
(declare-const o16 character)
(declare-const o17 Int)
(declare-const temp___1190 Int)
(declare-const o18 Int)
(declare-const o19 character)
(declare-const o20 Int)
(declare-const temp___1191 Int)
(declare-const o21 Int)
(declare-const o22 character)
(declare-const o23 Int)
(declare-const temp___1192 Int)
(declare-const o24 Int)
(declare-const o25 character)
(declare-const o26 Int)
(declare-const temp___1193 Int)
(declare-const o27 Int)
(declare-const o28 character)
(declare-const o29 Int)
(declare-const temp___1194 Int)
(declare-const o30 Int)
(declare-const o31 character)
(declare-const o32 Int)
(declare-const temp___1195 Int)
(declare-const o33 Int)
(declare-const o34 character)
(declare-const o35 Int)
(declare-const temp___1196 Int)
(declare-const o36 Int)
(declare-const o37 character)
(declare-const o38 Int)
(declare-const temp___1197 Int)
(declare-const o39 Int)
(declare-const o40 character)
(declare-const o41 Int)
(declare-const temp___1198 Int)
(declare-const o42 Int)
(declare-const o43 character)
(declare-const o44 Int)
(declare-const temp___1199 Int)
(declare-const has_failed1 Bool)
(declare-const result Int)
(declare-const target1 Int)
(declare-const result1 Bool)
(declare-const has_failed2 Bool)
(declare-const result2 Bool)
(declare-const target2 Int)
(declare-const has_failed3 Bool)
(declare-const result3 Bool)
(declare-const has_failed4 Bool)
(declare-const result4 Bool)
(declare-const target3 Int)
(declare-const has_failed5 Bool)
(declare-const result5 Bool)
(declare-const has_failed6 Bool)
(declare-const result6 Bool)
(declare-const target4 Int)
(declare-const has_failed7 Bool)
(declare-const result7 Bool)
(declare-const has_failed8 Bool)
(declare-const result8 Bool)
(declare-const target5 Int)
(declare-const has_failed9 Bool)
(declare-const result9 Bool)
(declare-const has_failed10 Bool)
(declare-const result10 Bool)
(declare-const target6 Int)
(declare-const has_failed11 Bool)
(declare-const result11 Bool)
(declare-const has_failed12 Bool)
(declare-const result12 Bool)
(declare-const target7 Int)
(declare-const has_failed13 Bool)
(declare-const result13 Bool)
(declare-const has_failed14 Bool)
(declare-const result14 Bool)
(declare-const target8 Int)
(declare-const has_failed15 Bool)
(declare-const result15 Bool)
(declare-const has_failed16 Bool)
(assert (dynamic_invariant1 source true false true true))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 target)))
(assert (and (<= (length source) 11) (and (<= 2 (length source)) (and (= (to_rep (select (elts source) (to_rep1 (first (rt source))))) 45) (forall ((index Int)) (=> (and (<= (+ (to_rep1 (first (rt source))) 1) index) (<= index (to_rep1 (last (rt source))))) (= (is_digit (to_rep (select (elts source) index))) true)))))))
(assert (= (mk_int__ref result) (mk_int__ref target)))
(assert (= target1 0))
(assert (= (length source) 11))
(assert (and (= temp___1184 (+ (to_rep1 (first (rt source))) 1)) (in_range1 (+ (to_rep1 (first (rt source))) 1))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1184) (<= temp___1184 (to_rep1 (last (rt source))))))
(assert (= o temp___1184))
(assert (= o1 (select (elts source) o)))
(assert (= o2 (to_rep o1)))
(assert (= result1 (ite (< 50 o2) true false)))
(assert (not (= result1 true)))
(assert (= has_failed2 has_failed))
(assert (= has_failed2 has_failed1))
(assert (and (= temp___1185 (+ (to_rep1 (first (rt source))) 1)) (in_range1 (+ (to_rep1 (first (rt source))) 1))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1185) (<= temp___1185 (to_rep1 (last (rt source))))))
(assert (= o3 temp___1185))
(assert (= o4 (select (elts source) o3)))
(assert (= o5 (to_rep o4)))
(assert (= result2 (ite (< o5 50) true false)))
(assert (not (= result2 true)))
(assert (= has_failed3 has_failed2))
(assert (= target2 target1))
(assert (and (= temp___1186 (+ (to_rep1 (first (rt source))) 2)) (in_range1 (+ (to_rep1 (first (rt source))) 2))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1186) (<= temp___1186 (to_rep1 (last (rt source))))))
(assert (= o6 temp___1186))
(assert (= o7 (select (elts source) o6)))
(assert (= o8 (to_rep o7)))
(assert (= result3 (ite (< 49 o8) true false)))
(assert (not (= result3 true)))
(assert (= has_failed4 has_failed3))
(assert (and (= temp___1187 (+ (to_rep1 (first (rt source))) 2)) (in_range1 (+ (to_rep1 (first (rt source))) 2))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1187) (<= temp___1187 (to_rep1 (last (rt source))))))
(assert (= o9 temp___1187))
(assert (= o10 (select (elts source) o9)))
(assert (= o11 (to_rep o10)))
(assert (= result4 (ite (< o11 49) true false)))
(assert (not (= result4 true)))
(assert (= has_failed5 has_failed4))
(assert (= target3 target2))
(assert (and (= temp___1188 (+ (to_rep1 (first (rt source))) 3)) (in_range1 (+ (to_rep1 (first (rt source))) 3))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1188) (<= temp___1188 (to_rep1 (last (rt source))))))
(assert (= o12 temp___1188))
(assert (= o13 (select (elts source) o12)))
(assert (= o14 (to_rep o13)))
(assert (= result5 (ite (< 52 o14) true false)))
(assert (not (= result5 true)))
(assert (= has_failed6 has_failed5))
(assert (and (= temp___1189 (+ (to_rep1 (first (rt source))) 3)) (in_range1 (+ (to_rep1 (first (rt source))) 3))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1189) (<= temp___1189 (to_rep1 (last (rt source))))))
(assert (= o15 temp___1189))
(assert (= o16 (select (elts source) o15)))
(assert (= o17 (to_rep o16)))
(assert (= result6 (ite (< o17 52) true false)))
(assert (not (= result6 true)))
(assert (= has_failed7 has_failed6))
(assert (= target4 target3))
(assert (and (= temp___1190 (+ (to_rep1 (first (rt source))) 4)) (in_range1 (+ (to_rep1 (first (rt source))) 4))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1190) (<= temp___1190 (to_rep1 (last (rt source))))))
(assert (= o18 temp___1190))
(assert (= o19 (select (elts source) o18)))
(assert (= o20 (to_rep o19)))
(assert (= result7 (ite (< 55 o20) true false)))
(assert (not (= result7 true)))
(assert (= has_failed8 has_failed7))
(assert (and (= temp___1191 (+ (to_rep1 (first (rt source))) 4)) (in_range1 (+ (to_rep1 (first (rt source))) 4))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1191) (<= temp___1191 (to_rep1 (last (rt source))))))
(assert (= o21 temp___1191))
(assert (= o22 (select (elts source) o21)))
(assert (= o23 (to_rep o22)))
(assert (= result8 (ite (< o23 55) true false)))
(assert (not (= result8 true)))
(assert (= has_failed9 has_failed8))
(assert (= target5 target4))
(assert (and (= temp___1192 (+ (to_rep1 (first (rt source))) 5)) (in_range1 (+ (to_rep1 (first (rt source))) 5))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1192) (<= temp___1192 (to_rep1 (last (rt source))))))
(assert (= o24 temp___1192))
(assert (= o25 (select (elts source) o24)))
(assert (= o26 (to_rep o25)))
(assert (= result9 (ite (< 52 o26) true false)))
(assert (not (= result9 true)))
(assert (= has_failed10 has_failed9))
(assert (and (= temp___1193 (+ (to_rep1 (first (rt source))) 5)) (in_range1 (+ (to_rep1 (first (rt source))) 5))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1193) (<= temp___1193 (to_rep1 (last (rt source))))))
(assert (= o27 temp___1193))
(assert (= o28 (select (elts source) o27)))
(assert (= o29 (to_rep o28)))
(assert (= result10 (ite (< o29 52) true false)))
(assert (not (= result10 true)))
(assert (= has_failed11 has_failed10))
(assert (= target6 target5))
(assert (and (= temp___1194 (+ (to_rep1 (first (rt source))) 6)) (in_range1 (+ (to_rep1 (first (rt source))) 6))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1194) (<= temp___1194 (to_rep1 (last (rt source))))))
(assert (= o30 temp___1194))
(assert (= o31 (select (elts source) o30)))
(assert (= o32 (to_rep o31)))
(assert (= result11 (ite (< 56 o32) true false)))
(assert (not (= result11 true)))
(assert (= has_failed12 has_failed11))
(assert (and (= temp___1195 (+ (to_rep1 (first (rt source))) 6)) (in_range1 (+ (to_rep1 (first (rt source))) 6))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1195) (<= temp___1195 (to_rep1 (last (rt source))))))
(assert (= o33 temp___1195))
(assert (= o34 (select (elts source) o33)))
(assert (= o35 (to_rep o34)))
(assert (= result12 (ite (< o35 56) true false)))
(assert (not (= result12 true)))
(assert (= has_failed13 has_failed12))
(assert (= target7 target6))
(assert (and (= temp___1196 (+ (to_rep1 (first (rt source))) 7)) (in_range1 (+ (to_rep1 (first (rt source))) 7))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1196) (<= temp___1196 (to_rep1 (last (rt source))))))
(assert (= o36 temp___1196))
(assert (= o37 (select (elts source) o36)))
(assert (= o38 (to_rep o37)))
(assert (= result13 (ite (< 51 o38) true false)))
(assert (not (= result13 true)))
(assert (= has_failed14 has_failed13))
(assert (and (= temp___1197 (+ (to_rep1 (first (rt source))) 7)) (in_range1 (+ (to_rep1 (first (rt source))) 7))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1197) (<= temp___1197 (to_rep1 (last (rt source))))))
(assert (= o39 temp___1197))
(assert (= o40 (select (elts source) o39)))
(assert (= o41 (to_rep o40)))
(assert (= result14 (ite (< o41 51) true false)))
(assert (not (= result14 true)))
(assert (= has_failed15 has_failed14))
(assert (= target8 target7))
(assert (and (= temp___1198 (+ (to_rep1 (first (rt source))) 8)) (in_range1 (+ (to_rep1 (first (rt source))) 8))))
(assert (and (<= (to_rep1 (first (rt source))) temp___1198) (<= temp___1198 (to_rep1 (last (rt source))))))
(assert (= o42 temp___1198))
(assert (= o43 (select (elts source) o42)))
(assert (= o44 (to_rep o43)))
(assert (= result15 (ite (< 54 o44) true false)))
(assert (not (= result15 true)))
(assert (= has_failed16 has_failed15))
(assert (and (= temp___1199 (+ (to_rep1 (first (rt source))) 8)) (in_range1 (+ (to_rep1 (first (rt source))) 8))))
(assert (not (<= (to_rep1 (first (rt source))) temp___1199)))
(check-sat)
(exit)
