(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort character 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (character character) Bool)
(declare-const dummy character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(define-fun dynamic_invariant ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range1 temp___expr_74)))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-sort buffer_count_type 0)
(declare-fun buffer_count_typeqtint (buffer_count_type) Int)
(assert (forall ((i buffer_count_type)) (and (<= 0 (buffer_count_typeqtint i)) (<= (buffer_count_typeqtint i) 1024))))
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (buffer_count_type buffer_count_type) Bool)
(declare-const dummy1 buffer_count_type)
(declare-datatypes () ((buffer_count_type__ref (mk_buffer_count_type__ref (buffer_count_type__content buffer_count_type)))))
(define-fun buffer_count_type__ref___projection ((a buffer_count_type__ref)) buffer_count_type (buffer_count_type__content a))
(define-fun dynamic_invariant1 ((temp___expr_158 Int) (temp___is_init_154 Bool) (temp___skip_constant_155 Bool) (temp___do_toplevel_156 Bool) (temp___do_typ_inv_157 Bool)) Bool (=> (or (= temp___is_init_154 true) (<= 0 1024)) (in_range2 temp___expr_158)))
(declare-sort buffer_index_type 0)
(declare-fun buffer_index_typeqtint (buffer_index_type) Int)
(assert (forall ((i buffer_index_type)) (and (<= 1 (buffer_index_typeqtint i)) (<= (buffer_index_typeqtint i) 1024))))
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 1024)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (buffer_index_type buffer_index_type) Bool)
(declare-const dummy2 buffer_index_type)
(declare-datatypes () ((buffer_index_type__ref (mk_buffer_index_type__ref (buffer_index_type__content buffer_index_type)))))
(define-fun buffer_index_type__ref___projection ((a buffer_index_type__ref)) buffer_index_type (buffer_index_type__content a))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const erase_character Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const fill_character Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const r9b Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-fun temp_____aggregate_def_263 (Int) (Array Int character))
(assert (forall ((temp___265 Int)) (=> (dynamic_invariant temp___265 true true true true) (forall ((temp___266 Int)) (= (to_rep (select (temp_____aggregate_def_263 temp___265) temp___266)) temp___265)))))
(define-fun dynamic_invariant2 ((temp___expr_165 Int) (temp___is_init_161 Bool) (temp___skip_constant_162 Bool) (temp___do_toplevel_163 Bool) (temp___do_typ_inv_164 Bool)) Bool (=> (or (= temp___is_init_161 true) (<= 1 1024)) (in_range3 temp___expr_165)))
(declare-const buffer (Array Int character))
(declare-const valid Int)
(declare-const workspace (Array Int character))
(declare-const offset Int)
(declare-const i Int)
(declare-const i1 Int)
(declare-const temp___273 Int)
(declare-const temp___271 (Array Int character))
(declare-const temp___270 Int)
(declare-const o character)
(declare-const o1 Int)
(declare-const o2 (Array Int character))
(declare-const o3 Int)
(declare-const o4 character)
(declare-const result (Array Int character))
(declare-const workspace1 (Array Int character))
(declare-const result1 Int)
(declare-const offset1 Int)
(declare-const result2 Int)
(declare-const i2 Int)
(declare-const workspace2 (Array Int character))
(declare-const offset2 Int)
(declare-const i3 Int)
(declare-const result3 (Array Int character))
(declare-const workspace3 (Array Int character))
(declare-const result4 Int)
(declare-const offset3 Int)
(declare-const workspace4 (Array Int character))
(declare-const offset4 Int)
(declare-const i4 Int)
(declare-const workspace5 (Array Int character))
(declare-const offset5 Int)
(declare-const i5 Int)
(declare-const workspace6 (Array Int character))
(declare-const offset6 Int)
(declare-const i6 Int)
(declare-const workspace7 (Array Int character))
(declare-const offset7 Int)
(declare-const i7 Int)
(declare-const result5 int__ref)
(declare-const valid1 Int)
(declare-const result6 int__ref)
(declare-const i8 Int)
(declare-const i9 Int)
(assert (in_range1 erase_character))
(assert (in_range1 fill_character))
(assert (=> (<= 0 1024) (in_range2 valid)))
(assert (=> (<= 0 1024) (in_range2 offset)))
(assert (= result workspace))
(assert (= workspace1 (temp_____aggregate_def_263 32)))
(assert (= result1 offset))
(assert (= offset1 0))
(assert (= (mk_int__ref result2) (mk_int__ref i)))
(assert (= i2 1))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= temp___273 offset1)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= temp___271 workspace1)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= temp___270 i2)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (< offset2 i3)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (and (and (=> (<= 1 1024) (in_range3 i3)) (=> (<= 0 1024) (in_range2 offset2))) (and (<= 1 i3) (<= i3 1024)))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (=> (not (= (to_rep (select buffer i3)) erase_character)) (= (to_rep o) (to_rep (select buffer i3))))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (=> (not (= (to_rep (select buffer i3)) erase_character)) (and (<= 1 (+ 1 offset2)) (<= (+ 1 offset2) 1024)))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (=> (not (= (to_rep (select buffer i3)) erase_character)) (= o1 (+ 1 offset2)))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (=> (not (= (to_rep (select buffer i3)) erase_character)) (= o2 (store workspace2 o1 o)))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (=> (not (= (to_rep (select buffer i3)) erase_character)) (= workspace2 result3))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (=> (not (= (to_rep (select buffer i3)) erase_character)) (= workspace3 o2))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (=> (not (= (to_rep (select buffer i3)) erase_character)) (and (= o3 (+ offset2 1)) (in_range2 (+ offset2 1))))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (=> (not (= (to_rep (select buffer i3)) erase_character)) (= offset2 result4))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (=> (not (= (to_rep (select buffer i3)) erase_character)) (= offset3 o3))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (=> (not (not (= (to_rep (select buffer i3)) erase_character))) (= offset3 offset2))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (=> (not (not (= (to_rep (select buffer i3)) erase_character))) (= workspace3 workspace2))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= i3 1024)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= i3 i4)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= offset3 offset4)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= workspace3 workspace4)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= i5 i3)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= offset5 offset3)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= workspace5 workspace3)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= (mk_int__ref i6) (mk_int__ref i4))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= (mk_int__ref offset6) (mk_int__ref offset4))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= (mk_map__ref workspace6) (mk_map__ref workspace4))))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= i7 i5)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= offset7 offset5)))
(assert (=> (and (<= 1 i2) (<= i2 1024)) (= workspace7 workspace5)))
(assert (=> (not (and (<= 1 i2) (<= i2 1024))) (= i2 i6)))
(assert (=> (not (and (<= 1 i2) (<= i2 1024))) (= offset1 offset6)))
(assert (=> (not (and (<= 1 i2) (<= i2 1024))) (= workspace1 workspace6)))
(assert (=> (not (and (<= 1 i2) (<= i2 1024))) (= i7 i2)))
(assert (=> (not (and (<= 1 i2) (<= i2 1024))) (= offset7 offset1)))
(assert (=> (not (and (<= 1 i2) (<= i2 1024))) (= workspace7 workspace1)))
(assert (= result5 (mk_int__ref valid)))
(assert (= valid1 offset6))
(assert (= offset6 r9b))
(assert (in_range2 r9b))
(assert (= result6 (mk_int__ref i1)))
(assert (= i8 r9b))
(assert (<= r9b i8))
(assert (<= i8 1023))
(assert (and (<= r9b i9) (<= i9 1023)))
(assert (= (to_rep o4) fill_character))
(assert (not (<= 1 (+ 1 i9))))
(check-sat)
(exit)
