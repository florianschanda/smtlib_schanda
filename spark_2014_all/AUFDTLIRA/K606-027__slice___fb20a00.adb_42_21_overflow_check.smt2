(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant1 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(declare-const str us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const sub us_t)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((tTnew_strSP1__ref (mk_tTnew_strSP1__ref (tTnew_strSP1__content integer)))))
(define-fun tTnew_strSP1__ref___projection ((a tTnew_strSP1__ref)) integer (tTnew_strSP1__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq5 (us_t1 us_t1) Bool)
(declare-const dummy5 us_t1)
(declare-datatypes () ((tnew_strS__ref (mk_tnew_strS__ref (tnew_strS__content us_t1)))))
(define-fun tnew_strS__ref___projection ((a tnew_strS__ref)) us_t1 (tnew_strS__content a))
(define-fun dynamic_invariant2 ((temp___expr_155 us_t1) (temp___is_init_152 Bool) (temp___skip_constant_153 Bool) (temp___do_toplevel_154 Bool)) Bool (=> (not (= temp___skip_constant_153 true)) (and (dynamic_property2 (first1 str) (last1 str) (first3 temp___expr_155) (last3 temp___expr_155)) (and (= (first3 temp___expr_155) (first1 str)) (= (last3 temp___expr_155) (last1 str))))))
(declare-const new_str__first integer)
(declare-const new_str__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((tTnew_subSP1__ref (mk_tTnew_subSP1__ref (tTnew_subSP1__content integer)))))
(define-fun tTnew_subSP1__ref___projection ((a tTnew_subSP1__ref)) integer (tTnew_subSP1__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int character)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))
(define-fun of_array2 ((a (Array Int character)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((tnew_subS__ref (mk_tnew_subS__ref (tnew_subS__content us_t2)))))
(define-fun tnew_subS__ref___projection ((a tnew_subS__ref)) us_t2 (tnew_subS__content a))
(define-fun dynamic_invariant3 ((temp___expr_164 us_t2) (temp___is_init_161 Bool) (temp___skip_constant_162 Bool) (temp___do_toplevel_163 Bool)) Bool (=> (not (= temp___skip_constant_162 true)) (and (dynamic_property4 (first1 sub) (last1 sub) (first5 temp___expr_164) (last5 temp___expr_164)) (and (= (first5 temp___expr_164) (first1 sub)) (= (last5 temp___expr_164) (last1 sub))))))
(declare-const new_sub__first integer)
(declare-const new_sub__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-fun upper_case (us_t) us_t)
(declare-fun upper_case__function_guard (us_t us_t) Bool)
(assert (forall ((str1 us_t)) (! (=> (dynamic_invariant1 str1 true true true) (dynamic_invariant1 (upper_case str1) true false true)) :pattern ((upper_case str1)))))
(define-fun dynamic_property5 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content integer)))))
(define-fun t8b__ref___projection ((a t8b__ref)) integer (t8b__content a))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first6 (mk3 f l))) f) (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property5 range_first range_last low) (dynamic_property5 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int character)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int character) (elts3 a))
(define-fun of_array3 ((a (Array Int character)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int character)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int character)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int character)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq4 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first6 (rt3 x))) (to_rep1 (last6 (rt3 x))) (elts3 y) (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))
(declare-fun user_eq9 (us_t3 us_t3) Bool)
(declare-const dummy9 us_t3)
(declare-datatypes () ((t9b__ref (mk_t9b__ref (t9b__content us_t3)))))
(define-fun t9b__ref___projection ((a t9b__ref)) us_t3 (t9b__content a))
(define-fun dynamic_invariant4 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant5 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(declare-const new_str (Array Int character))
(declare-const new_sub (Array Int character))
(declare-const pos Int)
(declare-const temp___204 (Array Int character))
(declare-const temp___2041 t)
(declare-const temp___205 (Array Int character))
(declare-const temp___2051 t1)
(declare-const o (Array Int character))
(declare-const o1 t1)
(declare-const o2 (Array Int character))
(declare-const temp___206 (Array Int character))
(declare-const temp___2061 t)
(declare-const temp___207 (Array Int character))
(declare-const temp___2071 t2)
(declare-const o3 (Array Int character))
(declare-const o4 t2)
(declare-const o5 (Array Int character))
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const fb20a00__find__L_2__R7b Int)
(declare-const o11 (Array Int character))
(declare-const temp___209 (Array Int character))
(declare-const temp___2091 t3)
(declare-const o12 Bool)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 Int)
(declare-const o17 Int)
(declare-const o18 Int)
(declare-const temp___208 Int)
(declare-const o19 Int)
(declare-const o20 Int)
(declare-const o21 Int)
(declare-const o22 Int)
(declare-const o23 Int)
(declare-const o24 Int)
(declare-const fb20a00__find__L_2__R7b1 Int)
(declare-const o25 (Array Int character))
(declare-const temp___2092 (Array Int character))
(declare-const temp___2093 t3)
(declare-const o26 Bool)
(declare-const o27 Int)
(declare-const o28 Int)
(declare-const o29 Int)
(declare-const o30 Int)
(declare-const o31 Int)
(declare-const o32 Int)
(declare-const o33 Bool)
(declare-const o34 Int)
(declare-const o35 Int)
(declare-const o36 Int)
(declare-const o37 Int)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const result Int)
(declare-const pos1 Int)
(declare-const result1 (Array Int character))
(declare-const new_str1 (Array Int character))
(declare-const result2 (Array Int character))
(declare-const new_sub1 (Array Int character))
(declare-const result3 Bool)
(declare-const result4 Bool)
(declare-const pos2 Int)
(declare-const result5 Int)
(declare-const pos3 Int)
(declare-const result6 Bool)
(declare-const result7 Bool)
(declare-const pos4 Int)
(declare-const pos5 Int)
(declare-const pos6 Int)
(declare-const pos7 Int)
(assert (dynamic_invariant1 str true false true))
(assert (dynamic_invariant1 sub true false true))
(assert (and (dynamic_property2 (to_rep1 (first (rt str))) (to_rep1 (last (rt str))) (to_rep1 new_str__first) (to_rep1 new_str__last)) (and (= (to_rep1 new_str__first) (to_rep1 (first (rt str)))) (= (to_rep1 new_str__last) (to_rep1 (last (rt str)))))))
(assert (and (dynamic_property4 (to_rep1 (first (rt sub))) (to_rep1 (last (rt sub))) (to_rep1 new_sub__first) (to_rep1 new_sub__last)) (and (= (to_rep1 new_sub__first) (to_rep1 (first (rt sub)))) (= (to_rep1 new_sub__last) (to_rep1 (last (rt sub)))))))
(assert (= result pos))
(assert (= pos1 (to_rep1 (first (rt str)))))
(assert (in_range1 pos1))
(assert (and (= (mk___t temp___204 temp___2041) (upper_case str)) (dynamic_invariant1 (mk___t temp___204 temp___2041) true false true)))
(assert (= (ite (<= (to_rep1 (first temp___2041)) (to_rep1 (last temp___2041))) (+ (- (to_rep1 (last temp___2041)) (to_rep1 (first temp___2041))) 1) 0) (ite (<= (to_rep1 (first (rt str))) (to_rep1 (last (rt str)))) (+ (- (to_rep1 (last (rt str))) (to_rep1 (first (rt str)))) 1) 0)))
(assert (= (slide temp___204 (to_rep1 (first temp___2041)) (to_rep1 (first (rt str)))) temp___205))
(assert (= (mk1 (to_rep1 (first (rt str))) (to_rep1 (last (rt str)))) temp___2051))
(assert (= (ite (<= (to_rep1 (first2 temp___2051)) (to_rep1 (last2 temp___2051))) (+ (- (to_rep1 (last2 temp___2051)) (to_rep1 (first2 temp___2051))) 1) 0) (ite (<= (to_rep1 new_str__first) (to_rep1 new_str__last)) (+ (- (to_rep1 new_str__last) (to_rep1 new_str__first)) 1) 0)))
(assert (= (mk___t1 o o1) (mk___t1 temp___205 temp___2051)))
(assert (= o2 o))
(assert (= result1 new_str))
(assert (= new_str1 o2))
(assert (and (= (mk___t temp___206 temp___2061) (upper_case sub)) (dynamic_invariant1 (mk___t temp___206 temp___2061) true false true)))
(assert (= (ite (<= (to_rep1 (first temp___2061)) (to_rep1 (last temp___2061))) (+ (- (to_rep1 (last temp___2061)) (to_rep1 (first temp___2061))) 1) 0) (ite (<= (to_rep1 (first (rt sub))) (to_rep1 (last (rt sub)))) (+ (- (to_rep1 (last (rt sub))) (to_rep1 (first (rt sub)))) 1) 0)))
(assert (= (slide temp___206 (to_rep1 (first temp___2061)) (to_rep1 (first (rt sub)))) temp___207))
(assert (= (mk2 (to_rep1 (first (rt sub))) (to_rep1 (last (rt sub)))) temp___2071))
(assert (= (ite (<= (to_rep1 (first4 temp___2071)) (to_rep1 (last4 temp___2071))) (+ (- (to_rep1 (last4 temp___2071)) (to_rep1 (first4 temp___2071))) 1) 0) (ite (<= (to_rep1 new_sub__first) (to_rep1 new_sub__last)) (+ (- (to_rep1 new_sub__last) (to_rep1 new_sub__first)) 1) 0)))
(assert (= (mk___t2 o3 o4) (mk___t2 temp___207 temp___2071)))
(assert (= o5 o3))
(assert (= result2 new_sub))
(assert (= new_sub1 o5))
(assert (=> (<= (to_rep1 new_sub__first) (to_rep1 new_sub__last)) (= o6 (+ (- (to_rep1 new_sub__last) (to_rep1 new_sub__first)) 1))))
(assert (=> (not (<= (to_rep1 new_sub__first) (to_rep1 new_sub__last))) (= o6 0)))
(assert (and (= o7 o6) (in_range1 o6)))
(assert (= o8 (+ pos1 o7)))
(assert (and (= o9 o8) (in_range1 o8)))
(assert (= o10 (- o9 1)))
(assert (and (= fb20a00__find__L_2__R7b o10) (in_range1 o10)))
(assert (=> (<= (to_rep1 new_sub__first) (to_rep1 new_sub__last)) (= o13 (+ (- (to_rep1 new_sub__last) (to_rep1 new_sub__first)) 1))))
(assert (=> (not (<= (to_rep1 new_sub__first) (to_rep1 new_sub__last))) (= o13 0)))
(assert (and (= o14 o13) (in_range1 o13)))
(assert (= o15 (- (to_rep1 new_str__last) o14)))
(assert (and (= o16 o15) (in_range1 o15)))
(assert (= o17 (+ o16 1)))
(assert (and (= o18 o17) (in_range1 o17)))
(assert (= result4 (ite (<= pos1 o18) true false)))
(assert (=> (= result4 true) (=> (<= pos1 fb20a00__find__L_2__R7b) (and (and (<= (to_rep1 new_str__first) pos1) (<= pos1 (to_rep1 new_str__last))) (and (<= (to_rep1 new_str__first) fb20a00__find__L_2__R7b) (<= fb20a00__find__L_2__R7b (to_rep1 new_str__last)))))))
(assert (=> (= result4 true) (= o11 new_str1)))
(assert (=> (= result4 true) (= o11 temp___209)))
(assert (=> (= result4 true) (= (mk3 pos1 fb20a00__find__L_2__R7b) temp___2091)))
(assert (=> (= result4 true) (= o12 (bool_eq temp___209 (to_rep1 (first6 temp___2091)) (to_rep1 (last6 temp___2091)) new_sub1 (to_rep1 new_sub__first) (to_rep1 new_sub__last)))))
(assert (=> (= result4 true) (= result3 (ite (not (= o12 true)) true false))))
(assert (=> (not (= result4 true)) (= result3 false)))
(assert (= result3 true))
(assert (and (=> (<= (- 2147483648) 2147483647) (in_range1 pos2)) (let ((fb20a00__find__L_2__R7b2 (- (+ pos2 (ite (<= (to_rep1 new_sub__first) (to_rep1 new_sub__last)) (+ (- (to_rep1 new_sub__last) (to_rep1 new_sub__first)) 1) 0)) 1))) (and (<= pos2 (+ (- (to_rep1 new_str__last) (ite (<= (to_rep1 new_sub__first) (to_rep1 new_sub__last)) (+ (- (to_rep1 new_sub__last) (to_rep1 new_sub__first)) 1) 0)) 1)) (not (= (bool_eq new_str1 (to_rep1 (first6 (mk3 pos2 fb20a00__find__L_2__R7b2))) (to_rep1 (last6 (mk3 pos2 fb20a00__find__L_2__R7b2))) new_sub1 (to_rep1 new_sub__first) (to_rep1 new_sub__last)) true))))))
(assert (not (in_range1 (+ pos2 1))))
(check-sat)
(exit)
