(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort ta2D1 0)
(declare-fun ta2D1qtint (ta2D1) Int)
(assert (forall ((i ta2D1)) (and (<= 1 (ta2D1qtint i)) (<= (ta2D1qtint i) 2))))
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (ta2D1 ta2D1) Bool)
(declare-const dummy1 ta2D1)
(declare-datatypes () ((ta2D1__ref (mk_ta2D1__ref (ta2D1__content ta2D1)))))
(define-fun ta2D1__ref___projection ((a ta2D1__ref)) ta2D1 (ta2D1__content a))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const b Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort t45s 0)
(declare-fun t45sqtint (t45s) Int)
(assert (forall ((i t45s)) (and (<= 1 (t45sqtint i)) (<= (t45sqtint i) 2))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (t45s t45s) Bool)
(declare-const dummy2 t45s)
(declare-datatypes () ((t45s__ref (mk_t45s__ref (t45s__content t45s)))))
(define-fun t45s__ref___projection ((a t45s__ref)) t45s (t45s__content a))
(declare-sort t47s 0)
(declare-fun t47sqtint (t47s) Int)
(assert (forall ((i t47s)) (and (<= 1 (t47sqtint i)) (<= (t47sqtint i) 2))))
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (t47s t47s) Bool)
(declare-const dummy3 t47s)
(declare-datatypes () ((t47s__ref (mk_t47s__ref (t47s__content t47s)))))
(define-fun t47s__ref___projection ((a t47s__ref)) t47s (t47s__content a))
(declare-sort t49s 0)
(declare-fun t49sqtint (t49s) Int)
(assert (forall ((i t49s)) (and (<= 1 (t49sqtint i)) (<= (t49sqtint i) 2))))
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (t49s t49s) Bool)
(declare-const dummy4 t49s)
(declare-datatypes () ((t49s__ref (mk_t49s__ref (t49s__content t49s)))))
(define-fun t49s__ref___projection ((a t49s__ref)) t49s (t49s__content a))
(declare-sort t51s 0)
(declare-fun t51sqtint (t51s) Int)
(assert (forall ((i t51s)) (and (<= 1 (t51sqtint i)) (<= (t51sqtint i) 2))))
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (t51s t51s) Bool)
(declare-const dummy5 t51s)
(declare-datatypes () ((t51s__ref (mk_t51s__ref (t51s__content t51s)))))
(define-fun t51s__ref___projection ((a t51s__ref)) t51s (t51s__content a))
(declare-sort t53s 0)
(declare-fun t53sqtint (t53s) Int)
(assert (forall ((i t53s)) (and (<= 1 (t53sqtint i)) (<= (t53sqtint i) 2))))
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (t53s t53s) Bool)
(declare-const dummy6 t53s)
(declare-datatypes () ((t53s__ref (mk_t53s__ref (t53s__content t53s)))))
(define-fun t53s__ref___projection ((a t53s__ref)) t53s (t53s__content a))
(declare-fun temp_____aggregate_def_217 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_223 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_229 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_235 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_241 (Int Int) (Array Int integer))
(declare-const rliteral integer)
(assert (= (integerqtint rliteral) 2))
(assert (forall ((temp___219 Int) (temp___220 Int)) (let ((temp___218 (temp_____aggregate_def_217 temp___219 temp___220))) (=> (and (dynamic_invariant temp___219 true true true true) (dynamic_invariant temp___220 true true true true)) (and (= (to_rep (select temp___218 1)) temp___219) (= (select temp___218 2) rliteral))))))
(assert (forall ((temp___225 Int) (temp___226 Int)) (let ((temp___224 (temp_____aggregate_def_223 temp___225 temp___226))) (=> (and (dynamic_invariant temp___225 true true true true) (dynamic_invariant temp___226 true true true true)) (and (= (to_rep (select temp___224 1)) temp___225) (= (to_rep (select temp___224 2)) temp___226))))))
(assert (forall ((temp___231 Int) (temp___232 Int)) (let ((temp___230 (temp_____aggregate_def_229 temp___231 temp___232))) (=> (and (dynamic_invariant temp___231 true true true true) (dynamic_invariant temp___232 true true true true)) (and (= (to_rep (select temp___230 1)) temp___231) (= (to_rep (select temp___230 2)) temp___232))))))
(assert (forall ((temp___237 Int) (temp___238 Int)) (let ((temp___236 (temp_____aggregate_def_235 temp___237 temp___238))) (=> (and (dynamic_invariant temp___237 true true true true) (dynamic_invariant temp___238 true true true true)) (and (= (select temp___236 1) rliteral) (= (to_rep (select temp___236 2)) temp___238))))))
(assert (forall ((temp___243 Int) (temp___244 Int)) (let ((temp___242 (temp_____aggregate_def_241 temp___243 temp___244))) (=> (and (dynamic_invariant temp___243 true true true true) (dynamic_invariant temp___244 true true true true)) (and (= (to_rep (select temp___242 1)) temp___243) (= (select temp___242 2) rliteral))))))
(declare-const one Int)
(declare-const a (Array Int integer))
(declare-const a1 (Array Int integer))
(declare-const a2 (Array Int integer))
(assert (in_range one))
(assert (in_range b))
(assert (= one 1))
(assert (ite (= b 1) (and (= (to_rep (select a one)) one) (= (to_rep (select a 2)) 2)) (ite (= b 2) (forall ((k Int)) (=> (and (<= 1 k) (<= k 2)) (= (to_rep (select a k)) one))) (ite (= b 3) (forall ((k Int)) (=> (and (<= 1 k) (<= k 2)) (= (to_rep (select a k)) one))) (ite (= b 4) (and (= (to_rep (select a one)) 2) (= (to_rep (select a 2)) one)) (and (= (to_rep (select a one)) one) (= (to_rep (select a 2)) 2)))))))
(assert (= a a1))
(assert (= a2 a))
(assert (not (= b 1)))
(assert (= b 2))
(assert (not (= (bool_eq a1 1 2 (temp_____aggregate_def_223 one one) 1 2) true)))
(check-sat)
(exit)
