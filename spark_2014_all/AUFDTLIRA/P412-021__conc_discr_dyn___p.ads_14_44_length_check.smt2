(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort natural 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort integer 0)
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (integer integer) Bool)
(declare-const dummy1 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int natural))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int) (b (Array Int natural)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (integer integer) Bool)
(declare-const dummy2 integer)
(declare-datatypes () ((t3s__ref (mk_t3s__ref (t3s__content integer)))))
(define-fun t3s__ref___projection ((a t3s__ref)) integer (t3s__content a))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int natural)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))
(define-fun of_array ((a (Array Int natural)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int natural)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int natural)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int natural)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((t4s__ref (mk_t4s__ref (t4s__content us_t)))))
(define-fun t4s__ref___projection ((a t4s__ref)) us_t (t4s__content a))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__p__my_rec__c natural)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural (rec__p__my_rec__c a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__p__my_rec__content us_t)))))
(define-fun us_split_fields_Content__projection ((a us_split_fields)) us_t (rec__p__my_rec__content a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep (rec__p__my_rec__c (us_split_discrs1 a))) (to_rep (rec__p__my_rec__c (us_split_discrs1 b)))) (= (bool_eq1 (rec__p__my_rec__content (us_split_fields1 a)) (rec__p__my_rec__content (us_split_fields1 b))) true)) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const p__my_rec__c__first__bit Int)
(declare-const p__my_rec__c__last__bit Int)
(declare-const p__my_rec__c__position Int)
(assert (<= 0 p__my_rec__c__first__bit))
(assert (< p__my_rec__c__first__bit p__my_rec__c__last__bit))
(assert (<= 0 p__my_rec__c__position))
(declare-const p__my_rec__content__first__bit Int)
(declare-const p__my_rec__content__last__bit Int)
(declare-const p__my_rec__content__position Int)
(assert (<= 0 p__my_rec__content__first__bit))
(assert (< p__my_rec__content__first__bit p__my_rec__content__last__bit))
(assert (<= 0 p__my_rec__content__position))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((my_rec__ref (mk_my_rec__ref (my_rec__content us_rep)))))
(define-fun my_rec__ref___projection ((a my_rec__ref)) us_rep (my_rec__content a))
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((tT6sP1__ref (mk_tT6sP1__ref (tT6sP1__content integer)))))
(define-fun tT6sP1__ref___projection ((a tT6sP1__ref)) integer (tT6sP1__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property2 range_first range_last low) (dynamic_property2 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int natural)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int natural) (elts1 a))
(define-fun of_array1 ((a (Array Int natural)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int natural)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int natural)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int natural)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq6 (us_t1 us_t1) Bool)
(declare-const dummy6 us_t1)
(declare-datatypes () ((t6s__ref (mk_t6s__ref (t6s__content us_t1)))))
(define-fun t6s__ref___projection ((a t6s__ref)) us_t1 (t6s__content a))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__p__my_rec__content1 us_t1)))))
(define-fun us_split_fields_Content__2__projection ((a us_split_fields2)) us_t1 (rec__p__my_rec__content1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs2 us_split_discrs) (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_discrs (us_split_discrs2 a))
(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a) (mk___split_fields (let ((temp___156 (rec__p__my_rec__content1 (us_split_fields3 a)))) (of_array (to_array1 temp___156) (first3 temp___156) (last3 temp___156))))))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r) (mk___split_fields1 (let ((temp___155 (rec__p__my_rec__content (us_split_fields1 r)))) (of_array1 (to_array temp___155) (first1 temp___155) (last1 temp___155))))))
(define-fun bool_eq4 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep (rec__p__my_rec__c (us_split_discrs2 a))) (to_rep (rec__p__my_rec__c (us_split_discrs2 b)))) (= (bool_eq3 (rec__p__my_rec__content1 (us_split_fields3 a)) (rec__p__my_rec__content1 (us_split_fields3 b))) true)) true false))
(define-fun in_range3 ((rec__p__my_rec__c1 Int) (a us_rep)) Bool (= rec__p__my_rec__c1 (to_rep (rec__p__my_rec__c (us_split_discrs1 a)))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const p__my_rec__c__first__bit1 Int)
(declare-const p__my_rec__c__last__bit1 Int)
(declare-const p__my_rec__c__position1 Int)
(assert (<= 0 p__my_rec__c__first__bit1))
(assert (< p__my_rec__c__first__bit1 p__my_rec__c__last__bit1))
(assert (<= 0 p__my_rec__c__position1))
(declare-const p__my_rec__content__first__bit1 Int)
(declare-const p__my_rec__content__last__bit1 Int)
(declare-const p__my_rec__content__position1 Int)
(assert (<= 0 p__my_rec__content__first__bit1))
(assert (< p__my_rec__content__first__bit1 p__my_rec__content__last__bit1))
(assert (<= 0 p__my_rec__content__position1))
(declare-fun user_eq7 (us_rep1 us_rep1) Bool)
(declare-const dummy7 us_rep1)
(declare-datatypes () ((t5s__ref (mk_t5s__ref (t5s__content us_rep1)))))
(define-fun t5s__ref___projection ((a t5s__ref)) us_rep1 (t5s__content a))
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((tT8sP1__ref (mk_tT8sP1__ref (tT8sP1__content integer)))))
(define-fun tT8sP1__ref___projection ((a tT8sP1__ref)) integer (tT8sP1__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property4 range_first range_last low) (dynamic_property4 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int natural)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int natural) (elts2 a))
(define-fun of_array2 ((a (Array Int natural)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int natural)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int natural)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int natural)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq5 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq9 (us_t2 us_t2) Bool)
(declare-const dummy9 us_t2)
(declare-datatypes () ((t8s__ref (mk_t8s__ref (t8s__content us_t2)))))
(define-fun t8s__ref___projection ((a t8s__ref)) us_t2 (t8s__content a))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__p__my_rec__content2 us_t2)))))
(define-fun us_split_fields_Content__3__projection ((a us_split_fields4)) us_t2 (rec__p__my_rec__content2 a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_discrs3 us_split_discrs) (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___5__projection ((a us_rep2)) us_split_discrs (us_split_discrs3 a))
(define-fun us_rep___6__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun to_base1 ((a us_rep2)) us_rep (mk___rep (us_split_discrs3 a) (mk___split_fields (let ((temp___158 (rec__p__my_rec__content2 (us_split_fields5 a)))) (of_array (to_array2 temp___158) (first5 temp___158) (last5 temp___158))))))
(define-fun of_base1 ((r us_rep)) us_rep2 (mk___rep2 (us_split_discrs1 r) (mk___split_fields2 (let ((temp___157 (rec__p__my_rec__content (us_split_fields1 r)))) (of_array2 (to_array temp___157) (first1 temp___157) (last1 temp___157))))))
(define-fun bool_eq6 ((a us_rep2) (b us_rep2)) Bool (ite (and (= (to_rep (rec__p__my_rec__c (us_split_discrs3 a))) (to_rep (rec__p__my_rec__c (us_split_discrs3 b)))) (= (bool_eq5 (rec__p__my_rec__content2 (us_split_fields5 a)) (rec__p__my_rec__content2 (us_split_fields5 b))) true)) true false))
(define-fun in_range4 ((rec__p__my_rec__c1 Int) (a us_rep)) Bool (= rec__p__my_rec__c1 (to_rep (rec__p__my_rec__c (us_split_discrs1 a)))))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep2) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep2) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep2)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment5 a))))
(declare-const p__my_rec__c__first__bit2 Int)
(declare-const p__my_rec__c__last__bit2 Int)
(declare-const p__my_rec__c__position2 Int)
(assert (<= 0 p__my_rec__c__first__bit2))
(assert (< p__my_rec__c__first__bit2 p__my_rec__c__last__bit2))
(assert (<= 0 p__my_rec__c__position2))
(declare-const p__my_rec__content__first__bit2 Int)
(declare-const p__my_rec__content__last__bit2 Int)
(declare-const p__my_rec__content__position2 Int)
(assert (<= 0 p__my_rec__content__first__bit2))
(assert (< p__my_rec__content__first__bit2 p__my_rec__content__last__bit2))
(assert (<= 0 p__my_rec__content__position2))
(declare-fun user_eq10 (us_rep2 us_rep2) Bool)
(declare-const dummy10 us_rep2)
(declare-datatypes () ((t7s__ref (mk_t7s__ref (t7s__content us_rep2)))))
(define-fun t7s__ref___projection ((a t7s__ref)) us_rep2 (t7s__content a))
(define-fun dynamic_property6 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq11 (integer integer) Bool)
(declare-const dummy11 integer)
(declare-datatypes () ((t9s__ref (mk_t9s__ref (t9s__content integer)))))
(define-fun t9s__ref___projection ((a t9s__ref)) integer (t9s__content a))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first6 (mk3 f l))) f) (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property7 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (dynamic_property6 range_first range_last low) (dynamic_property6 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int natural)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int natural) (elts3 a))
(define-fun of_array3 ((a (Array Int natural)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int natural)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int natural)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int natural)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment6 a))))
(define-fun bool_eq7 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first6 (rt3 x))) (to_rep1 (last6 (rt3 x))) (elts3 y) (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))
(declare-fun user_eq12 (us_t3 us_t3) Bool)
(declare-const dummy12 us_t3)
(declare-datatypes () ((t10s__ref (mk_t10s__ref (t10s__content us_t3)))))
(define-fun t10s__ref___projection ((a t10s__ref)) us_t3 (t10s__content a))
(declare-datatypes () ((us_split_discrs4 (mk___split_discrs1 (rec__p__pp__b Bool) (rec__p__pp__c natural)))))
(define-fun us_split_discrs___2__projection ((a us_split_discrs4)) Bool (rec__p__pp__b a))
(define-fun us_split_discrs___3__projection ((a us_split_discrs4)) natural (rec__p__pp__c a))
(declare-datatypes () ((us_split_discrs__ref1 (mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs4)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref1)) us_split_discrs4 (us_split_discrs__content1 a))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__p__pp__dummy Bool) (rec__p__pp__r us_rep1)))))
(define-fun us_split_fields_Dummy__projection ((a us_split_fields6)) Bool (rec__p__pp__dummy a))
(define-fun us_split_fields_R__projection ((a us_split_fields6)) us_rep1 (rec__p__pp__r a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep3 (mk___rep3 (us_split_discrs5 us_split_discrs4) (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___7__projection ((a us_rep3)) us_split_discrs4 (us_split_discrs5 a))
(define-fun us_rep___8__projection ((a us_rep3)) us_split_fields6 (us_split_fields7 a))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep3) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep3) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep3)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment7 a))))
(declare-const p__pp__b__first__bit Int)
(declare-const p__pp__b__last__bit Int)
(declare-const p__pp__b__position Int)
(assert (<= 0 p__pp__b__first__bit))
(assert (< p__pp__b__first__bit p__pp__b__last__bit))
(assert (<= 0 p__pp__b__position))
(declare-const p__pp__c__first__bit Int)
(declare-const p__pp__c__last__bit Int)
(declare-const p__pp__c__position Int)
(assert (<= 0 p__pp__c__first__bit))
(assert (< p__pp__c__first__bit p__pp__c__last__bit))
(assert (<= 0 p__pp__c__position))
(declare-const p__pp__dummy__first__bit Int)
(declare-const p__pp__dummy__last__bit Int)
(declare-const p__pp__dummy__position Int)
(assert (<= 0 p__pp__dummy__first__bit))
(assert (< p__pp__dummy__first__bit p__pp__dummy__last__bit))
(assert (<= 0 p__pp__dummy__position))
(declare-const p__pp__r__first__bit Int)
(declare-const p__pp__r__last__bit Int)
(declare-const p__pp__r__position Int)
(assert (<= 0 p__pp__r__first__bit))
(assert (< p__pp__r__first__bit p__pp__r__last__bit))
(assert (<= 0 p__pp__r__position))
(declare-fun user_eq13 (us_rep3 us_rep3) Bool)
(declare-datatypes () ((pp__ref (mk_pp__ref (pp__content us_rep3)))))
(define-fun pp__ref___projection ((a pp__ref)) us_rep3 (pp__content a))
(declare-fun temp___243 (Int Int Int) us_t3)
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range1 temp___expr_39)))
(declare-sort positive 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq14 (positive positive) Bool)
(declare-const dummy13 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant1 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range5 temp___expr_46)))
(define-fun dynamic_invariant2 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range2 temp___expr_18)))
(declare-sort t4 0)
(declare-fun first8 (t4) integer)
(declare-fun last8 (t4) integer)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range2 f) (=> (in_range2 l) (and (= (to_rep1 (first8 (mk4 f l))) f) (= (to_rep1 (last8 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range2 low) (and (in_range2 high) (=> (<= low high) (and (in_range5 low) (in_range5 high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int natural)) (rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int natural) (elts4 a))
(define-fun of_array4 ((a (Array Int natural)) (f Int) (l Int)) us_t4 (mk___t4 a (mk4 f l)))
(define-fun first9 ((a us_t4)) Int (to_rep1 (first8 (rt4 a))))
(define-fun last9 ((a us_t4)) Int (to_rep1 (last8 (rt4 a))))
(define-fun length4 ((a us_t4)) Int (ite (<= (first9 a) (last9 a)) (+ (- (last9 a) (first9 a)) 1) 0))
(declare-const value__size8 Int)
(declare-fun object__size8 ((Array Int natural)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int natural)) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 ((Array Int natural)) Int)
(assert (<= 0 value__size8))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size8 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment8 a))))
(define-fun bool_eq8 ((x us_t4) (y us_t4)) Bool (bool_eq (elts4 x) (to_rep1 (first8 (rt4 x))) (to_rep1 (last8 (rt4 x))) (elts4 y) (to_rep1 (first8 (rt4 y))) (to_rep1 (last8 (rt4 y)))))
(declare-fun user_eq15 (us_t4 us_t4) Bool)
(declare-const dummy14 us_t4)
(declare-datatypes () ((nat_array__ref (mk_nat_array__ref (nat_array__content us_t4)))))
(define-fun nat_array__ref___projection ((a nat_array__ref)) us_t4 (nat_array__content a))
(define-fun dynamic_invariant3 ((temp___expr_205 us_t4) (temp___is_init_201 Bool) (temp___skip_constant_202 Bool) (temp___do_toplevel_203 Bool) (temp___do_typ_inv_204 Bool)) Bool (=> (not (= temp___skip_constant_202 true)) (dynamic_property8 1 2147483647 (first9 temp___expr_205) (last9 temp___expr_205))))
(define-fun dynamic_invariant4 ((temp___expr_211 us_rep) (temp___is_init_207 Bool) (temp___skip_constant_208 Bool) (temp___do_toplevel_209 Bool) (temp___do_typ_inv_210 Bool)) Bool (let ((temp___212 (rec__p__my_rec__c (us_split_discrs1 temp___expr_211)))) (and (dynamic_property1 1 (to_rep temp___212) (first1 (rec__p__my_rec__content (us_split_fields1 temp___expr_211))) (last1 (rec__p__my_rec__content (us_split_fields1 temp___expr_211)))) (and (= (first1 (rec__p__my_rec__content (us_split_fields1 temp___expr_211))) 1) (= (last1 (rec__p__my_rec__content (us_split_fields1 temp___expr_211))) (to_rep temp___212))))))
(define-fun dynamic_invariant5 ((temp___expr_218 us_rep3) (temp___is_init_214 Bool) (temp___skip_constant_215 Bool) (temp___do_toplevel_216 Bool) (temp___do_typ_inv_217 Bool)) Bool (let ((temp___220 (rec__p__pp__c (us_split_discrs5 temp___expr_218)))) (and (in_range3 (to_rep temp___220) (to_base (rec__p__pp__r (us_split_fields7 temp___expr_218)))) (and (dynamic_property3 1 (to_rep temp___220) (first3 (rec__p__my_rec__content1 (us_split_fields3 (rec__p__pp__r (us_split_fields7 temp___expr_218))))) (last3 (rec__p__my_rec__content1 (us_split_fields3 (rec__p__pp__r (us_split_fields7 temp___expr_218)))))) (and (= (first3 (rec__p__my_rec__content1 (us_split_fields3 (rec__p__pp__r (us_split_fields7 temp___expr_218))))) 1) (= (last3 (rec__p__my_rec__content1 (us_split_fields3 (rec__p__pp__r (us_split_fields7 temp___expr_218))))) (to_rep temp___220)))))))
(assert (forall ((temp___245 Int) (temp___246 Int) (temp___247 Int)) (let ((temp___244 (temp___243 temp___245 temp___246 temp___247))) (=> (dynamic_invariant temp___245 true true true true) (and (=> (dynamic_property8 1 2147483647 temp___246 temp___247) (and (= (first7 temp___244) temp___246) (= (last7 temp___244) temp___247))) (forall ((temp___248 Int)) (= (to_rep (select (to_array3 temp___244) temp___248)) temp___245)))))))
(declare-const self__ us_rep3)
(declare-const temp___263 (Array Int natural))
(declare-const temp___2631 t3)
(assert (= (to_rep1 (first6 (rt3 (temp___243 0 1 (to_rep (rec__p__pp__c (us_split_discrs5 self__))))))) 1))
(assert (= (to_rep1 (last6 (rt3 (temp___243 0 1 (to_rep (rec__p__pp__c (us_split_discrs5 self__))))))) (to_rep (rec__p__pp__c (us_split_discrs5 self__)))))
(assert (= (mk___t3 temp___263 temp___2631) (temp___243 0 1 (to_rep (rec__p__pp__c (us_split_discrs5 self__))))))
(assert (not (= (ite (<= (to_rep1 (first6 temp___2631)) (to_rep1 (last6 temp___2631))) (+ (- (to_rep1 (last6 temp___2631)) (to_rep1 (first6 temp___2631))) 1) 0) (ite (<= 1 (to_rep (rec__p__pp__c (us_split_discrs5 self__)))) (+ (- (to_rep (rec__p__pp__c (us_split_discrs5 self__))) 1) 1) 0))))
(check-sat)
(exit)
