(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant1 ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range2 temp___expr_33)))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (integer Int) (Array Int integer))
(assert (forall ((v integer)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int Int) Int)
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-sort index 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 1000000)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (index index) Bool)
(declare-const dummy2 index)
(declare-datatypes () ((index__ref (mk_index__ref (index__content index)))))
(define-fun index__ref___projection ((a index__ref)) index (index__content a))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range3 low) (in_range3 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((text__ref (mk_text__ref (text__content us_t)))))
(define-fun text__ref___projection ((a text__ref)) us_t (text__content a))
(define-fun dynamic_invariant2 ((temp___expr_142 us_t) (temp___is_init_139 Bool) (temp___skip_constant_140 Bool) (temp___do_toplevel_141 Bool)) Bool (=> (not (= temp___skip_constant_140 true)) (dynamic_property 1 1000000 (first1 temp___expr_142) (last1 temp___expr_142))))
(declare-const a us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const x Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const y Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((t5s__ref (mk_t5s__ref (t5s__content integer)))))
(define-fun t5s__ref___projection ((a1 t5s__ref)) integer (t5s__content a1))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int integer)) (rt1 t1)))))
(define-fun to_array1 ((a1 us_t1)) (Array Int integer) (elts1 a1))
(define-fun of_array1 ((a1 (Array Int integer)) (f Int) (l Int)) us_t1 (mk___t1 a1 (mk1 f l)))
(define-fun first3 ((a1 us_t1)) Int (to_rep (first2 (rt1 a1))))
(define-fun last3 ((a1 us_t1)) Int (to_rep (last2 (rt1 a1))))
(define-fun length1 ((a1 us_t1)) Int (ite (<= (first3 a1) (last3 a1)) (+ (- (last3 a1) (first3 a1)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int integer)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int integer)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int integer)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__size1 a1))))
(assert (<= 0 value__component__size1))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__component__size1 a1))))
(assert (<= 0 value__alignment1))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__alignment1 a1))))
(define-fun bool_eq2 ((x1 us_t1) (y1 us_t1)) Bool (bool_eq (elts1 x1) (to_rep (first2 (rt1 x1))) (to_rep (last2 (rt1 x1))) (elts1 y1) (to_rep (first2 (rt1 y1))) (to_rep (last2 (rt1 y1)))))
(declare-fun user_eq5 (us_t1 us_t1) Bool)
(declare-const dummy5 us_t1)
(declare-datatypes () ((t6s__ref (mk_t6s__ref (t6s__content us_t1)))))
(define-fun t6s__ref___projection ((a1 t6s__ref)) us_t1 (t6s__content a1))
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t7s__ref (mk_t7s__ref (t7s__content integer)))))
(define-fun t7s__ref___projection ((a1 t7s__ref)) integer (t7s__content a1))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first4 (mk2 f l))) f) (= (to_rep (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int integer)) (rt2 t2)))))
(define-fun to_array2 ((a1 us_t2)) (Array Int integer) (elts2 a1))
(define-fun of_array2 ((a1 (Array Int integer)) (f Int) (l Int)) us_t2 (mk___t2 a1 (mk2 f l)))
(define-fun first5 ((a1 us_t2)) Int (to_rep (first4 (rt2 a1))))
(define-fun last5 ((a1 us_t2)) Int (to_rep (last4 (rt2 a1))))
(define-fun length2 ((a1 us_t2)) Int (ite (<= (first5 a1) (last5 a1)) (+ (- (last5 a1) (first5 a1)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int integer)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int integer)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int integer)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__size2 a1))))
(assert (<= 0 value__component__size2))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__component__size2 a1))))
(assert (<= 0 value__alignment2))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__alignment2 a1))))
(define-fun bool_eq3 ((x1 us_t2) (y1 us_t2)) Bool (bool_eq (elts2 x1) (to_rep (first4 (rt2 x1))) (to_rep (last4 (rt2 x1))) (elts2 y1) (to_rep (first4 (rt2 y1))) (to_rep (last4 (rt2 y1)))))
(declare-fun user_eq7 (us_t2 us_t2) Bool)
(declare-const dummy7 us_t2)
(declare-datatypes () ((t8s__ref (mk_t8s__ref (t8s__content us_t2)))))
(define-fun t8s__ref___projection ((a1 t8s__ref)) us_t2 (t8s__content a1))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_property5 ((first_int Int) (last_int Int) (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (integer integer) Bool)
(declare-const dummy8 integer)
(declare-datatypes () ((t7b__ref (mk_t7b__ref (t7b__content integer)))))
(define-fun t7b__ref___projection ((a1 t7b__ref)) integer (t7b__content a1))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first6 (mk3 f l))) f) (= (to_rep (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property6 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property5 range_first range_last low) (dynamic_property5 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int integer)) (rt3 t3)))))
(define-fun to_array3 ((a1 us_t3)) (Array Int integer) (elts3 a1))
(define-fun of_array3 ((a1 (Array Int integer)) (f Int) (l Int)) us_t3 (mk___t3 a1 (mk3 f l)))
(define-fun first7 ((a1 us_t3)) Int (to_rep (first6 (rt3 a1))))
(define-fun last7 ((a1 us_t3)) Int (to_rep (last6 (rt3 a1))))
(define-fun length3 ((a1 us_t3)) Int (ite (<= (first7 a1) (last7 a1)) (+ (- (last7 a1) (first7 a1)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int integer)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int integer)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int integer)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__size3 a1))))
(assert (<= 0 value__component__size3))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__component__size3 a1))))
(assert (<= 0 value__alignment3))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__alignment3 a1))))
(define-fun bool_eq4 ((x1 us_t3) (y1 us_t3)) Bool (bool_eq (elts3 x1) (to_rep (first6 (rt3 x1))) (to_rep (last6 (rt3 x1))) (elts3 y1) (to_rep (first6 (rt3 y1))) (to_rep (last6 (rt3 y1)))))
(declare-fun user_eq9 (us_t3 us_t3) Bool)
(declare-const dummy9 us_t3)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content us_t3)))))
(define-fun t8b__ref___projection ((a1 t8b__ref)) us_t3 (t8b__content a1))
(define-fun dynamic_property7 ((first_int Int) (last_int Int) (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t10b__ref (mk_t10b__ref (t10b__content integer)))))
(define-fun t10b__ref___projection ((a1 t10b__ref)) integer (t10b__content a1))
(declare-sort t4 0)
(declare-fun first8 (t4) integer)
(declare-fun last8 (t4) integer)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first8 (mk4 f l))) f) (= (to_rep (last8 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property8 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property7 range_first range_last low) (dynamic_property7 range_first range_last high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int integer)) (rt4 t4)))))
(define-fun to_array4 ((a1 us_t4)) (Array Int integer) (elts4 a1))
(define-fun of_array4 ((a1 (Array Int integer)) (f Int) (l Int)) us_t4 (mk___t4 a1 (mk4 f l)))
(define-fun first9 ((a1 us_t4)) Int (to_rep (first8 (rt4 a1))))
(define-fun last9 ((a1 us_t4)) Int (to_rep (last8 (rt4 a1))))
(define-fun length4 ((a1 us_t4)) Int (ite (<= (first9 a1) (last9 a1)) (+ (- (last9 a1) (first9 a1)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int integer)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int integer)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int integer)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__size4 a1))))
(assert (<= 0 value__component__size4))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__component__size4 a1))))
(assert (<= 0 value__alignment4))
(assert (forall ((a1 (Array Int integer))) (<= 0 (object__alignment4 a1))))
(define-fun bool_eq5 ((x1 us_t4) (y1 us_t4)) Bool (bool_eq (elts4 x1) (to_rep (first8 (rt4 x1))) (to_rep (last8 (rt4 x1))) (elts4 y1) (to_rep (first8 (rt4 y1))) (to_rep (last8 (rt4 y1)))))
(declare-fun user_eq11 (us_t4 us_t4) Bool)
(declare-const dummy11 us_t4)
(declare-datatypes () ((t11b__ref (mk_t11b__ref (t11b__content us_t4)))))
(define-fun t11b__ref___projection ((a1 t11b__ref)) us_t4 (t11b__content a1))
(define-fun dynamic_invariant3 ((temp___expr_136 Int) (temp___is_init_133 Bool) (temp___skip_constant_134 Bool) (temp___do_toplevel_135 Bool)) Bool (=> (or (= temp___is_init_133 true) (<= 1 1000000)) (in_range3 temp___expr_136)))
(declare-const l Int)
(declare-const r6b Int)
(declare-const r9b Int)
(declare-const lcp__result Int)
(declare-const o Int)
(declare-const o1 integer)
(declare-const o2 Int)
(declare-const temp___174 Int)
(declare-const o3 Int)
(declare-const o4 integer)
(declare-const temp___175 Int)
(declare-const o5 Int)
(declare-const o6 integer)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const temp___168 Int)
(declare-const temp___167 Int)
(declare-const temp___166 Int)
(declare-const temp___173 Int)
(declare-const o11 Int)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 Int)
(declare-const o17 (Array Int integer))
(declare-const temp___170 (Array Int integer))
(declare-const temp___1701 t4)
(declare-const o18 Int)
(declare-const temp___1741 Int)
(declare-const o19 Int)
(declare-const o20 integer)
(declare-const temp___1751 Int)
(declare-const o21 Int)
(declare-const o22 integer)
(declare-const o23 Int)
(declare-const o24 Int)
(declare-const o25 Int)
(declare-const o26 Int)
(declare-const o27 Bool)
(declare-const o28 Int)
(declare-const o29 Int)
(declare-const o30 Int)
(declare-const o31 Int)
(declare-const o32 Int)
(declare-const o33 Int)
(declare-const temp___176 Int)
(declare-const temp___177 Int)
(declare-const o34 Int)
(declare-const o35 integer)
(declare-const o36 Int)
(declare-const o37 Int)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const o40 Int)
(declare-const o41 Int)
(declare-const o42 Int)
(declare-const temp___179 Int)
(declare-const o43 (Array Int integer))
(declare-const temp___181 (Array Int integer))
(declare-const temp___1811 t2)
(declare-const o44 Int)
(declare-const o45 Int)
(declare-const temp___178 Int)
(declare-const o46 (Array Int integer))
(declare-const temp___180 (Array Int integer))
(declare-const temp___1801 t1)
(declare-const o47 Int)
(declare-const o48 Int)
(declare-const o49 Int)
(declare-const r6b1 Int)
(declare-const r9b1 Int)
(declare-const result Int)
(declare-const l1 Int)
(declare-const result1 Bool)
(declare-const result2 Bool)
(declare-const result3 Bool)
(declare-const result4 Int)
(declare-const r6b2 Int)
(declare-const result5 Int)
(declare-const r9b2 Int)
(declare-const l2 Int)
(declare-const r6b3 Int)
(declare-const r9b3 Int)
(declare-const temp___1731 Int)
(declare-const result6 Int)
(declare-const temp___1732 Int)
(declare-const result7 Int)
(declare-const l3 Int)
(declare-const result8 Bool)
(declare-const result9 Bool)
(declare-const result10 Bool)
(declare-const result11 Int)
(declare-const r6b4 Int)
(declare-const result12 Int)
(declare-const r9b4 Int)
(declare-const l4 Int)
(declare-const r6b5 Int)
(declare-const r9b5 Int)
(declare-const temp___1733 Int)
(declare-const l5 Int)
(declare-const r6b6 Int)
(declare-const r9b6 Int)
(declare-const temp___1734 Int)
(declare-const l6 Int)
(declare-const r6b7 Int)
(declare-const r9b7 int__ref)
(declare-const l7 Int)
(declare-const r6b8 Int)
(declare-const r9b8 Int)
(declare-const l8 int__ref)
(declare-const r6b9 int__ref)
(declare-const r9b9 int__ref)
(declare-const l9 Int)
(declare-const r6b10 Int)
(declare-const r9b10 Int)
(declare-const result13 int__ref)
(declare-const lcp__result1 Int)
(declare-const lcp__result2 int__ref)
(declare-const lcp__result3 Int)
(declare-const l10 int__ref)
(declare-const r6b11 int__ref)
(declare-const r9b11 int__ref)
(declare-const lcp__result4 int__ref)
(declare-const l11 Int)
(declare-const r6b12 Int)
(declare-const r9b12 Int)
(declare-const lcp__result5 Int)
(declare-const result14 Bool)
(declare-const result15 Bool)
(declare-const result16 Bool)
(assert (dynamic_invariant2 a true false true))
(assert (in_range1 x))
(assert (in_range1 y))
(assert (and (and (<= (to_rep (first (rt a))) x) (<= x (to_rep (last (rt a))))) (and (<= (to_rep (first (rt a))) y) (<= y (to_rep (last (rt a)))))))
(assert (=> (<= 0 2147483647) (in_range2 l)))
(assert (= (mk_int__ref result) (mk_int__ref l)))
(assert (= l1 0))
(assert (and (= o10 (+ x l1)) (in_range1 (+ x l1))))
(assert (= result3 (ite (<= o10 (to_rep (last (rt a)))) true false)))
(assert (=> (= result3 true) (and (= o9 (+ y l1)) (in_range1 (+ y l1)))))
(assert (=> (= result3 true) (= result2 (ite (<= o9 (to_rep (last (rt a)))) true false))))
(assert (=> (not (= result3 true)) (= result2 false)))
(assert (= result2 true))
(assert (not (in_range1 (+ y l1))))
(check-sat)
(exit)
