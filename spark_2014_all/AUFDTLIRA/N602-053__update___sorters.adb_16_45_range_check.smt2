(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq2 (us_t us_t) Bool)
(declare-const dummy2 us_t)
(declare-datatypes () ((array_type__ref (mk_array_type__ref (array_type__content us_t)))))
(define-fun array_type__ref___projection ((a array_type__ref)) us_t (array_type__content a))
(declare-const values__first integer)
(declare-const values__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const x Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const y Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x1 Int)) Bool (and (<= first_int x1) (<= x1 last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((tS1bP1__ref (mk_tS1bP1__ref (tS1bP1__content integer)))))
(define-fun tS1bP1__ref___projection ((a tS1bP1__ref)) integer (tS1bP1__content a))
(declare-fun temp_____aggregate_def_164 (us_t Int Int Int Int) us_t)
(declare-fun temp_____aggregate_def_218 (us_t Int Int Int Int) us_t)
(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant2 ((temp___expr_159 us_t) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (=> (not (= temp___skip_constant_156 true)) (dynamic_property 1 2147483647 (first1 temp___expr_159) (last1 temp___expr_159))))
(assert (forall ((temp___166 us_t)) (forall ((temp___167 Int) (temp___168 Int) (temp___169 Int) (temp___170 Int)) (let ((temp___165 (temp_____aggregate_def_164 temp___166 temp___167 temp___168 temp___169 temp___170))) (=> (and (and (and (and (dynamic_invariant2 temp___166 true true true true) (dynamic_invariant temp___167 true true true true)) (dynamic_invariant1 temp___168 true true true true)) (dynamic_invariant temp___169 true true true true)) (dynamic_invariant1 temp___170 true true true true)) (and (and (= (first1 temp___165) (first1 temp___166)) (= (last1 temp___165) (last1 temp___166))) (forall ((temp___171 Int)) (ite (= temp___171 temp___169) (= (to_rep (select (to_array temp___165) temp___171)) temp___170) (ite (= temp___171 temp___167) (= (to_rep (select (to_array temp___165) temp___171)) temp___168) (= (select (to_array temp___165) temp___171) (select (to_array temp___166) temp___171)))))))))))
(assert (forall ((temp___220 us_t)) (forall ((temp___221 Int) (temp___222 Int) (temp___223 Int) (temp___224 Int)) (let ((temp___219 (temp_____aggregate_def_218 temp___220 temp___221 temp___222 temp___223 temp___224))) (=> (and (and (and (and (dynamic_invariant2 temp___220 true true true true) (dynamic_invariant temp___221 true true true true)) (dynamic_invariant1 temp___222 true true true true)) (dynamic_invariant temp___223 true true true true)) (dynamic_invariant1 temp___224 true true true true)) (and (and (= (first1 temp___219) (first1 temp___220)) (= (last1 temp___219) (last1 temp___220))) (forall ((temp___225 Int)) (ite (= temp___225 temp___223) (= (to_rep (select (to_array temp___219) temp___225)) temp___224) (ite (= temp___225 temp___221) (= (to_rep (select (to_array temp___219) temp___225)) temp___222) (= (select (to_array temp___219) temp___225) (select (to_array temp___220) temp___225)))))))))))
(declare-const values (Array Int integer))
(declare-const us Int)
(declare-const o Int)
(declare-const o1 integer)
(declare-const us1 Int)
(declare-const o2 Int)
(declare-const o3 integer)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const temp___226 (Array Int integer))
(declare-const temp___2261 t)
(declare-const temp___227 (Array Int integer))
(declare-const temp___2271 t)
(declare-const o8 (Array Int integer))
(declare-const o9 Int)
(declare-const o10 integer)
(declare-const o11 Int)
(declare-const result (Array Int integer))
(declare-const values1 (Array Int integer))
(declare-const values2 (Array Int integer))
(declare-const values3 (Array Int integer))
(define-fun temp___2262 () us_t (mk___t temp___226 temp___2261))
(assert (dynamic_property 1 2147483647 (to_rep values__first) (to_rep values__last)))
(assert (in_range2 x))
(assert (in_range2 y))
(assert (and (and (<= (to_rep values__first) x) (<= x (to_rep values__last))) (and (and (<= (to_rep values__first) y) (<= y (to_rep values__last))) (not (= x y)))))
(assert (and (<= (to_rep values__first) x) (<= x (to_rep values__last))))
(assert (= o2 x))
(assert (= o3 (select values o2)))
(assert (= o4 (to_rep o3)))
(assert (and (= us1 y) (dynamic_property1 (to_rep values__first) (to_rep values__last) y)))
(assert (= o5 y))
(assert (and (<= (to_rep values__first) y) (<= y (to_rep values__last))))
(assert (= o y))
(assert (= o1 (select values o)))
(assert (= o6 (to_rep o1)))
(assert (and (= us x) (dynamic_property1 (to_rep values__first) (to_rep values__last) x)))
(assert (= o7 x))
(assert (= temp___2262 (temp_____aggregate_def_218 (mk___t values (mk (to_rep values__first) (to_rep values__last))) o7 o6 o5 o4)))
(assert (= (ite (<= (to_rep (first temp___2261)) (to_rep (last temp___2261))) (+ (- (to_rep (last temp___2261)) (to_rep (first temp___2261))) 1) 0) (ite (<= (to_rep values__first) (to_rep values__last)) (+ (- (to_rep values__last) (to_rep values__first)) 1) 0)))
(assert (= (mk___t temp___227 temp___2271) temp___2262))
(assert (= o8 (slide temp___227 (to_rep (first temp___2271)) (to_rep values__first))))
(assert (= (mk_map__ref result) (mk_map__ref values)))
(assert (= values1 o8))
(assert (= values1 values2))
(assert (= values3 values1))
(assert (and (<= (to_rep values__first) x) (<= x (to_rep values__last))))
(assert (= o9 x))
(assert (= o10 (select values o9)))
(assert (= o11 (to_rep o10)))
(assert (not (in_range2 y)))
(check-sat)
(exit)
