(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type scrabble_letter

predicate in_range(x: int) = ((65 <= x) and (x <= 90))

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq1 : int, int -> bool

axiom bool_eq_def :
  (forall x:int. forall y:int [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : scrabble_letter, scrabble_letter -> bool

logic dummy : scrabble_letter

type scrabble_letter__ref = { scrabble_letter__content : scrabble_letter
}

function scrabble_letter__ref___projection(a: scrabble_letter__ref) : scrabble_letter =
  (a).scrabble_letter__content

type scrabble_value

predicate in_range1(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : scrabble_value, scrabble_value -> bool

logic dummy1 : scrabble_value

type scrabble_value__ref = { scrabble_value__content : scrabble_value
}

function scrabble_value__ref___projection(a: scrabble_value__ref) : scrabble_value =
  (a).scrabble_value__content

logic to_rep : scrabble_value -> int

logic of_rep : int -> scrabble_value

axiom inversion_axiom :
  (forall x:scrabble_value [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom :
  (forall x:scrabble_value [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,scrabble_value) farray
}

logic slide : (int,scrabble_value) farray, int,
  int -> (int,scrabble_value) farray

axiom slide_eq :
  (forall a:(int,scrabble_value) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,scrabble_value) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq3 : (int,scrabble_value) farray, int, int,
  (int,scrabble_value) farray, int, int -> bool

axiom bool_eq_def2 :
  (forall a:(int,scrabble_value) farray. forall a__first:int.
  forall a__last:int. forall b:(int,scrabble_value) farray.
  forall b__first:int. forall b__last:int [bool_eq3(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_155:int. ((((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) and
  (to_rep((a[temp___idx_155])) = to_rep((b[((b__first - a__first) + temp___idx_155)])))) or
  (not ((a__first <= temp___idx_155) and (temp___idx_155 <= a__last)))))) ->
  (bool_eq3(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) ->
  (to_rep((a[temp___idx_155])) = to_rep((b[((b__first - a__first) + temp___idx_155)]))))))) ->
  (bool_eq3(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,scrabble_value) farray.
  forall b:(int,scrabble_value) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq3(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) ->
  (to_rep((a[temp___idx_155])) = to_rep((b[((b__first - a__first) + temp___idx_155)])))))))))

logic lookup_table : (int,scrabble_value) farray

logic attr__ATTRIBUTE_ADDRESS : int

logic scrabble__lookup_table__aggregate_def : int, int, int, int, int, int,
  int, int, int, int, int, int, int, int, int, int, int, int, int, int, int,
  int, int, int, int, int -> (int,scrabble_value) farray

axiom lookup_table__def_axiom :
  (lookup_table = scrabble__lookup_table__aggregate_def(1, 3, 3, 2, 1, 4, 2,
  4, 1, 8, 5, 1, 3, 1, 1, 3, 10, 1, 1, 1, 1, 4, 4, 8, 4, 10))

axiom def_axiom :
  (forall temp___157:int. forall temp___158:int. forall temp___159:int.
  forall temp___160:int. forall temp___161:int. forall temp___162:int.
  forall temp___163:int. forall temp___164:int. forall temp___165:int.
  forall temp___166:int. forall temp___167:int. forall temp___168:int.
  forall temp___169:int. forall temp___170:int. forall temp___171:int.
  forall temp___172:int. forall temp___173:int. forall temp___174:int.
  forall temp___175:int. forall temp___176:int. forall temp___177:int.
  forall temp___178:int. forall temp___179:int. forall temp___180:int.
  forall temp___181:int. forall temp___182:int.
  (((((((((((((((((((((((((((in_range1(temp___157) and
  (((1 <= temp___157) and (temp___157 <= 5)) or (((8 <= temp___157) and
  (temp___157 <= 8)) or ((10 <= temp___157) and (temp___157 <= 10))))) and
  (in_range1(temp___158) and (((1 <= temp___158) and (temp___158 <= 5)) or
  (((8 <= temp___158) and (temp___158 <= 8)) or ((10 <= temp___158) and
  (temp___158 <= 10)))))) and (in_range1(temp___159) and
  (((1 <= temp___159) and (temp___159 <= 5)) or (((8 <= temp___159) and
  (temp___159 <= 8)) or ((10 <= temp___159) and (temp___159 <= 10)))))) and
  (in_range1(temp___160) and (((1 <= temp___160) and (temp___160 <= 5)) or
  (((8 <= temp___160) and (temp___160 <= 8)) or ((10 <= temp___160) and
  (temp___160 <= 10)))))) and (in_range1(temp___161) and
  (((1 <= temp___161) and (temp___161 <= 5)) or (((8 <= temp___161) and
  (temp___161 <= 8)) or ((10 <= temp___161) and (temp___161 <= 10)))))) and
  (in_range1(temp___162) and (((1 <= temp___162) and (temp___162 <= 5)) or
  (((8 <= temp___162) and (temp___162 <= 8)) or ((10 <= temp___162) and
  (temp___162 <= 10)))))) and (in_range1(temp___163) and
  (((1 <= temp___163) and (temp___163 <= 5)) or (((8 <= temp___163) and
  (temp___163 <= 8)) or ((10 <= temp___163) and (temp___163 <= 10)))))) and
  (in_range1(temp___164) and (((1 <= temp___164) and (temp___164 <= 5)) or
  (((8 <= temp___164) and (temp___164 <= 8)) or ((10 <= temp___164) and
  (temp___164 <= 10)))))) and (in_range1(temp___165) and
  (((1 <= temp___165) and (temp___165 <= 5)) or (((8 <= temp___165) and
  (temp___165 <= 8)) or ((10 <= temp___165) and (temp___165 <= 10)))))) and
  (in_range1(temp___166) and (((1 <= temp___166) and (temp___166 <= 5)) or
  (((8 <= temp___166) and (temp___166 <= 8)) or ((10 <= temp___166) and
  (temp___166 <= 10)))))) and (in_range1(temp___167) and
  (((1 <= temp___167) and (temp___167 <= 5)) or (((8 <= temp___167) and
  (temp___167 <= 8)) or ((10 <= temp___167) and (temp___167 <= 10)))))) and
  (in_range1(temp___168) and (((1 <= temp___168) and (temp___168 <= 5)) or
  (((8 <= temp___168) and (temp___168 <= 8)) or ((10 <= temp___168) and
  (temp___168 <= 10)))))) and (in_range1(temp___169) and
  (((1 <= temp___169) and (temp___169 <= 5)) or (((8 <= temp___169) and
  (temp___169 <= 8)) or ((10 <= temp___169) and (temp___169 <= 10)))))) and
  (in_range1(temp___170) and (((1 <= temp___170) and (temp___170 <= 5)) or
  (((8 <= temp___170) and (temp___170 <= 8)) or ((10 <= temp___170) and
  (temp___170 <= 10)))))) and (in_range1(temp___171) and
  (((1 <= temp___171) and (temp___171 <= 5)) or (((8 <= temp___171) and
  (temp___171 <= 8)) or ((10 <= temp___171) and (temp___171 <= 10)))))) and
  (in_range1(temp___172) and (((1 <= temp___172) and (temp___172 <= 5)) or
  (((8 <= temp___172) and (temp___172 <= 8)) or ((10 <= temp___172) and
  (temp___172 <= 10)))))) and (in_range1(temp___173) and
  (((1 <= temp___173) and (temp___173 <= 5)) or (((8 <= temp___173) and
  (temp___173 <= 8)) or ((10 <= temp___173) and (temp___173 <= 10)))))) and
  (in_range1(temp___174) and (((1 <= temp___174) and (temp___174 <= 5)) or
  (((8 <= temp___174) and (temp___174 <= 8)) or ((10 <= temp___174) and
  (temp___174 <= 10)))))) and (in_range1(temp___175) and
  (((1 <= temp___175) and (temp___175 <= 5)) or (((8 <= temp___175) and
  (temp___175 <= 8)) or ((10 <= temp___175) and (temp___175 <= 10)))))) and
  (in_range1(temp___176) and (((1 <= temp___176) and (temp___176 <= 5)) or
  (((8 <= temp___176) and (temp___176 <= 8)) or ((10 <= temp___176) and
  (temp___176 <= 10)))))) and (in_range1(temp___177) and
  (((1 <= temp___177) and (temp___177 <= 5)) or (((8 <= temp___177) and
  (temp___177 <= 8)) or ((10 <= temp___177) and (temp___177 <= 10)))))) and
  (in_range1(temp___178) and (((1 <= temp___178) and (temp___178 <= 5)) or
  (((8 <= temp___178) and (temp___178 <= 8)) or ((10 <= temp___178) and
  (temp___178 <= 10)))))) and (in_range1(temp___179) and
  (((1 <= temp___179) and (temp___179 <= 5)) or (((8 <= temp___179) and
  (temp___179 <= 8)) or ((10 <= temp___179) and (temp___179 <= 10)))))) and
  (in_range1(temp___180) and (((1 <= temp___180) and (temp___180 <= 5)) or
  (((8 <= temp___180) and (temp___180 <= 8)) or ((10 <= temp___180) and
  (temp___180 <= 10)))))) and (in_range1(temp___181) and
  (((1 <= temp___181) and (temp___181 <= 5)) or (((8 <= temp___181) and
  (temp___181 <= 8)) or ((10 <= temp___181) and (temp___181 <= 10)))))) and
  (in_range1(temp___182) and (((1 <= temp___182) and (temp___182 <= 5)) or
  (((8 <= temp___182) and (temp___182 <= 8)) or ((10 <= temp___182) and
  (temp___182 <= 10)))))) ->
  ((((((((((((((((((((((((((to_rep((scrabble__lookup_table__aggregate_def(temp___157,
  temp___158, temp___159, temp___160, temp___161, temp___162, temp___163,
  temp___164, temp___165, temp___166, temp___167, temp___168, temp___169,
  temp___170, temp___171, temp___172, temp___173, temp___174, temp___175,
  temp___176, temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[65])) = temp___157) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[66])) = temp___158)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[67])) = temp___159)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[68])) = temp___160)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[69])) = temp___161)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[70])) = temp___162)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[71])) = temp___163)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[72])) = temp___164)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[73])) = temp___165)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[74])) = temp___166)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[75])) = temp___167)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[76])) = temp___168)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[77])) = temp___169)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[78])) = temp___170)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[79])) = temp___171)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[80])) = temp___172)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[81])) = temp___173)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[82])) = temp___174)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[83])) = temp___175)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[84])) = temp___176)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[85])) = temp___177)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[86])) = temp___178)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[87])) = temp___179)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[88])) = temp___180)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[89])) = temp___181)) and
  (to_rep((scrabble__lookup_table__aggregate_def(temp___157, temp___158,
  temp___159, temp___160, temp___161, temp___162, temp___163, temp___164,
  temp___165, temp___166, temp___167, temp___168, temp___169, temp___170,
  temp___171, temp___172, temp___173, temp___174, temp___175, temp___176,
  temp___177, temp___178, temp___179, temp___180, temp___181,
  temp___182)[90])) = temp___182))))

 (* File "scrabble.ads", line 12, characters 0-0 *)
goal WP_parameter_def :
  (forall o:int. forall o1:int. forall o2:int. forall o3:int. forall o4:int.
  forall o5:int. forall o6:int. forall o7:int. forall o8:int. forall o9:int.
  forall o10:int. forall o11:int. forall o12:int. forall o13:int.
  forall o14:int. (((((1 <= 10) and (10 <= 5)) or (((8 <= 10) and
  (10 <= 8)) or (10 <= 10))) and (o = 10)) -> (((((1 <= 4) and (4 <= 5)) or
  (((8 <= 4) and (4 <= 8)) or ((10 <= 4) and (4 <= 10)))) and (o1 = 4)) ->
  (((((1 <= 8) and (8 <= 5)) or ((8 <= 8) or ((10 <= 8) and (8 <= 10)))) and
  (o2 = 8)) -> (((((1 <= 4) and (4 <= 5)) or (((8 <= 4) and (4 <= 8)) or
  ((10 <= 4) and (4 <= 10)))) and (o3 = 4)) -> (((((1 <= 4) and (4 <= 5)) or
  (((8 <= 4) and (4 <= 8)) or ((10 <= 4) and (4 <= 10)))) and (o4 = 4)) ->
  (((((1 <= 1) and (1 <= 5)) or (((8 <= 1) and (1 <= 8)) or ((10 <= 1) and
  (1 <= 10)))) and (o5 = 1)) -> (((((1 <= 1) and (1 <= 5)) or (((8 <= 1) and
  (1 <= 8)) or ((10 <= 1) and (1 <= 10)))) and (o6 = 1)) -> (((((1 <= 1) and
  (1 <= 5)) or (((8 <= 1) and (1 <= 8)) or ((10 <= 1) and (1 <= 10)))) and
  (o7 = 1)) -> (((((1 <= 1) and (1 <= 5)) or (((8 <= 1) and (1 <= 8)) or
  ((10 <= 1) and (1 <= 10)))) and (o8 = 1)) -> (((((1 <= 10) and
  (10 <= 5)) or (((8 <= 10) and (10 <= 8)) or (10 <= 10))) and (o9 = 10)) ->
  (((((1 <= 3) and (3 <= 5)) or (((8 <= 3) and (3 <= 8)) or ((10 <= 3) and
  (3 <= 10)))) and (o10 = 3)) -> (((((1 <= 1) and (1 <= 5)) or (((8 <= 1) and
  (1 <= 8)) or ((10 <= 1) and (1 <= 10)))) and (o11 = 1)) -> (((((1 <= 1) and
  (1 <= 5)) or (((8 <= 1) and (1 <= 8)) or ((10 <= 1) and (1 <= 10)))) and
  (o12 = 1)) -> (((((1 <= 3) and (3 <= 5)) or (((8 <= 3) and (3 <= 8)) or
  ((10 <= 3) and (3 <= 10)))) and (o13 = 3)) -> (((((1 <= 1) and (1 <= 5)) or
  (((8 <= 1) and (1 <= 8)) or ((10 <= 1) and (1 <= 10)))) and (o14 = 1)) ->
  (((1 <= 5) and (5 <= 5)) or (((8 <= 5) and (5 <= 8)) or ((10 <= 5) and
  (5 <= 10))))))))))))))))))))
