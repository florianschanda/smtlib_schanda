(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-sort card 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 52)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (card card) Bool)
(declare-const dummy4 card)
(declare-datatypes () ((card__ref (mk_card__ref (card__content card)))))
(define-fun card__ref___projection ((a card__ref)) card (card__content a))
(declare-fun to_rep2 (card) Int)
(declare-fun of_rep2 (Int) card)
(assert (forall ((x card)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x card)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int card))))))
(declare-fun slide1 ((Array Int card) Int Int) (Array Int card))
(assert (forall ((a (Array Int card))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int card))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int card) Int Int (Array Int card) Int Int) (Array Int card))
(assert (forall ((a (Array Int card)) (b (Array Int card))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (card Int) (Array Int card))
(assert (forall ((v card)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq2 ((a (Array Int card)) (a__first Int) (a__last Int) (b (Array Int card)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep2 (select a temp___idx_151)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_151))))))) true false))
(assert (forall ((a (Array Int card)) (b (Array Int card))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep2 (select a temp___idx_151)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_151)))))))))))
(declare-fun compare1 ((Array Int card) Int Int (Array Int card) Int Int) Int)
(assert (forall ((a (Array Int card)) (b (Array Int card))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq2 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int card)) (b (Array Int card))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq2 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep2 (select a (+ i 1))) (to_rep2 (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int card)) (b (Array Int card))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq2 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep2 (select b (+ i 1))) (to_rep2 (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int card)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int card) (elts1 a))
(define-fun of_array1 ((a (Array Int card)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int card)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int card)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int card)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int card))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int card))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int card))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq2 (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq5 (us_t1 us_t1) Bool)
(declare-const dummy5 us_t1)
(declare-datatypes () ((cardstack__ref (mk_cardstack__ref (cardstack__content us_t1)))))
(define-fun cardstack__ref___projection ((a cardstack__ref)) us_t1 (cardstack__content a))
(declare-sort cardindex 0)
(define-fun in_range5 ((x Int)) Bool (and (<= (- 1) x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (cardindex cardindex) Bool)
(declare-const dummy6 cardindex)
(declare-datatypes () ((cardindex__ref (mk_cardindex__ref (cardindex__content cardindex)))))
(define-fun cardindex__ref___projection ((a cardindex__ref)) cardindex (cardindex__content a))
(define-fun dynamic_invariant ((temp___expr_556 Int) (temp___is_init_553 Bool) (temp___skip_constant_554 Bool) (temp___do_toplevel_555 Bool)) Bool (=> (or (= temp___is_init_553 true) (<= (- 1) 100)) (in_range5 temp___expr_556)))
(declare-fun to_rep3 (cardindex) Int)
(declare-fun of_rep3 (Int) cardindex)
(assert (forall ((x cardindex)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x cardindex)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort tcardarrayD1 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 99)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (tcardarrayD1 tcardarrayD1) Bool)
(declare-const dummy7 tcardarrayD1)
(declare-datatypes () ((tcardarrayD1__ref (mk_tcardarrayD1__ref (tcardarrayD1__content tcardarrayD1)))))
(define-fun tcardarrayD1__ref___projection ((a tcardarrayD1__ref)) tcardarrayD1 (tcardarrayD1__content a))
(declare-sort tindexarrayD1 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 99)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq8 (tindexarrayD1 tindexarrayD1) Bool)
(declare-const dummy8 tindexarrayD1)
(declare-datatypes () ((tindexarrayD1__ref (mk_tindexarrayD1__ref (tindexarrayD1__content tindexarrayD1)))))
(define-fun tindexarrayD1__ref___projection ((a tindexarrayD1__ref)) tindexarrayD1 (tindexarrayD1__content a))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int cardindex))))))
(declare-fun slide2 ((Array Int cardindex) Int Int) (Array Int cardindex))
(assert (forall ((a (Array Int cardindex))) (forall ((first4 Int)) (! (= (slide2 a first4 first4) a) :pattern ((slide2 a first4 first4))))))
(assert (forall ((a (Array Int cardindex))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int cardindex) Int Int (Array Int cardindex) Int Int) (Array Int cardindex))
(assert (forall ((a (Array Int cardindex)) (b (Array Int cardindex))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (cardindex Int) (Array Int cardindex))
(assert (forall ((v cardindex)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq4 ((a (Array Int cardindex)) (a__first Int) (a__last Int) (b (Array Int cardindex)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (to_rep3 (select a temp___idx_152)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_152))))))) true false))
(assert (forall ((a (Array Int cardindex)) (b (Array Int cardindex))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (to_rep3 (select a temp___idx_152)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_152)))))))))))
(declare-fun compare2 ((Array Int cardindex) Int Int (Array Int cardindex) Int Int) Int)
(assert (forall ((a (Array Int cardindex)) (b (Array Int cardindex))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare2 a a_first a_last b b_first b_last) 0) (= (bool_eq4 a a_first a_last b b_first b_last) true)) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int cardindex)) (b (Array Int cardindex))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare2 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq4 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep3 (select a (+ i 1))) (to_rep3 (select b (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int cardindex)) (b (Array Int cardindex))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare2 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq4 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep3 (select b (+ i 1))) (to_rep3 (select a (+ j 1))))))))))) :pattern ((compare2 a a_first a_last b b_first b_last))))))
(declare-const dummy9 (Array Int cardindex))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int cardindex)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int cardindex)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int cardindex)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int cardindex))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int cardindex))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int cardindex))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq9 ((Array Int cardindex) (Array Int cardindex)) Bool)
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int (Array Int cardindex)))))))
(declare-fun slide3 ((Array Int (Array Int cardindex)) Int Int) (Array Int (Array Int cardindex)))
(assert (forall ((a (Array Int (Array Int cardindex)))) (forall ((first4 Int)) (! (= (slide3 a first4 first4) a) :pattern ((slide3 a first4 first4))))))
(assert (forall ((a (Array Int (Array Int cardindex)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(declare-fun concat4 ((Array Int (Array Int cardindex)) Int Int (Array Int (Array Int cardindex)) Int Int) (Array Int (Array Int cardindex)))
(assert (forall ((a (Array Int (Array Int cardindex))) (b (Array Int (Array Int cardindex)))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat4 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton4 ((Array Int cardindex) Int) (Array Int (Array Int cardindex)))
(assert (forall ((v (Array Int cardindex))) (forall ((i Int)) (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i))))))
(define-fun bool_eq5 ((a (Array Int (Array Int cardindex))) (a__first Int) (a__last Int) (b (Array Int (Array Int cardindex))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (bool_eq4 (select a temp___idx_153) 0 99 (select b (+ (- b__first a__first) temp___idx_153)) 0 99) true)))) true false))
(assert (forall ((a (Array Int (Array Int cardindex))) (b (Array Int (Array Int cardindex)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq5 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (bool_eq4 (select a temp___idx_153) 0 99 (select b (+ (- b__first a__first) temp___idx_153)) 0 99) true))))))))
(declare-const dummy10 (Array Int card))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int card)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int card)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int card)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int card))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int card))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int card))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq10 ((Array Int card) (Array Int card)) Bool)
(declare-const dummy11 (Array Int (Array Int cardindex)))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int (Array Int cardindex))) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int (Array Int cardindex))) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int (Array Int cardindex))) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__alignment4 a))))
(declare-fun user_eq11 ((Array Int (Array Int cardindex)) (Array Int (Array Int cardindex))) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__patience__state__numelts cardindex) (rec__patience__state__values (Array Int card)) (rec__patience__state__numstacks cardindex) (rec__patience__state__stacksizes (Array Int cardindex)) (rec__patience__state__stacks (Array Int (Array Int cardindex))) (rec__patience__state__posstack (Array Int cardindex)) (rec__patience__state__posheight (Array Int cardindex)) (rec__patience__state__preds (Array Int cardindex))))))
(define-fun us_split_fields_NumElts__projection ((a us_split_fields)) cardindex (rec__patience__state__numelts a))
(define-fun us_split_fields_Values__projection ((a us_split_fields)) (Array Int card) (rec__patience__state__values a))
(define-fun us_split_fields_NumStacks__projection ((a us_split_fields)) cardindex (rec__patience__state__numstacks a))
(define-fun us_split_fields_StackSizes__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__stacksizes a))
(define-fun us_split_fields_Stacks__projection ((a us_split_fields)) (Array Int (Array Int cardindex)) (rec__patience__state__stacks a))
(define-fun us_split_fields_PosStack__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__posstack a))
(define-fun us_split_fields_PosHeight__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__posheight a))
(define-fun us_split_fields_Preds__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__preds a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___3__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq6 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (and (and (and (and (= (to_rep3 (rec__patience__state__numelts (us_split_fields1 a))) (to_rep3 (rec__patience__state__numelts (us_split_fields1 b)))) (= (bool_eq2 (rec__patience__state__values (us_split_fields1 a)) 0 99 (rec__patience__state__values (us_split_fields1 b)) 0 99) true)) (= (to_rep3 (rec__patience__state__numstacks (us_split_fields1 a))) (to_rep3 (rec__patience__state__numstacks (us_split_fields1 b))))) (= (bool_eq4 (rec__patience__state__stacksizes (us_split_fields1 a)) 0 99 (rec__patience__state__stacksizes (us_split_fields1 b)) 0 99) true)) (= (bool_eq5 (rec__patience__state__stacks (us_split_fields1 a)) 0 99 (rec__patience__state__stacks (us_split_fields1 b)) 0 99) true)) (= (bool_eq4 (rec__patience__state__posstack (us_split_fields1 a)) 0 99 (rec__patience__state__posstack (us_split_fields1 b)) 0 99) true)) (= (bool_eq4 (rec__patience__state__posheight (us_split_fields1 a)) 0 99 (rec__patience__state__posheight (us_split_fields1 b)) 0 99) true)) (= (bool_eq4 (rec__patience__state__preds (us_split_fields1 a)) 0 99 (rec__patience__state__preds (us_split_fields1 b)) 0 99) true)) true false))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep)) (<= 0 (object__alignment5 a))))
(declare-const patience__state__numelts__first__bit Int)
(declare-const patience__state__numelts__last__bit Int)
(declare-const patience__state__numelts__position Int)
(assert (<= 0 patience__state__numelts__first__bit))
(assert (< patience__state__numelts__first__bit patience__state__numelts__last__bit))
(assert (<= 0 patience__state__numelts__position))
(declare-const patience__state__values__first__bit Int)
(declare-const patience__state__values__last__bit Int)
(declare-const patience__state__values__position Int)
(assert (<= 0 patience__state__values__first__bit))
(assert (< patience__state__values__first__bit patience__state__values__last__bit))
(assert (<= 0 patience__state__values__position))
(declare-const patience__state__numstacks__first__bit Int)
(declare-const patience__state__numstacks__last__bit Int)
(declare-const patience__state__numstacks__position Int)
(assert (<= 0 patience__state__numstacks__first__bit))
(assert (< patience__state__numstacks__first__bit patience__state__numstacks__last__bit))
(assert (<= 0 patience__state__numstacks__position))
(declare-const patience__state__stacksizes__first__bit Int)
(declare-const patience__state__stacksizes__last__bit Int)
(declare-const patience__state__stacksizes__position Int)
(assert (<= 0 patience__state__stacksizes__first__bit))
(assert (< patience__state__stacksizes__first__bit patience__state__stacksizes__last__bit))
(assert (<= 0 patience__state__stacksizes__position))
(declare-const patience__state__stacks__first__bit Int)
(declare-const patience__state__stacks__last__bit Int)
(declare-const patience__state__stacks__position Int)
(assert (<= 0 patience__state__stacks__first__bit))
(assert (< patience__state__stacks__first__bit patience__state__stacks__last__bit))
(assert (<= 0 patience__state__stacks__position))
(declare-const patience__state__posstack__first__bit Int)
(declare-const patience__state__posstack__last__bit Int)
(declare-const patience__state__posstack__position Int)
(assert (<= 0 patience__state__posstack__first__bit))
(assert (< patience__state__posstack__first__bit patience__state__posstack__last__bit))
(assert (<= 0 patience__state__posstack__position))
(declare-const patience__state__posheight__first__bit Int)
(declare-const patience__state__posheight__last__bit Int)
(declare-const patience__state__posheight__position Int)
(assert (<= 0 patience__state__posheight__first__bit))
(assert (< patience__state__posheight__first__bit patience__state__posheight__last__bit))
(assert (<= 0 patience__state__posheight__position))
(declare-const patience__state__preds__first__bit Int)
(declare-const patience__state__preds__last__bit Int)
(declare-const patience__state__preds__position Int)
(assert (<= 0 patience__state__preds__first__bit))
(assert (< patience__state__preds__first__bit patience__state__preds__last__bit))
(assert (<= 0 patience__state__preds__position))
(declare-fun user_eq12 (us_rep us_rep) Bool)
(declare-const dummy12 us_rep)
(declare-datatypes () ((state__ref (mk_state__ref (state__content us_rep)))))
(define-fun state__ref___projection ((a state__ref)) us_rep (state__content a))
(declare-fun inv (us_rep) Bool)
(declare-fun inv__function_guard (Bool us_rep) Bool)
(declare-fun playgame (us_t1) us_rep)
(declare-fun playgame__function_guard (us_rep us_t1) Bool)
(declare-sort t48b 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq13 (t48b t48b) Bool)
(declare-const dummy13 t48b)
(declare-datatypes () ((t48b__ref (mk_t48b__ref (t48b__content t48b)))))
(define-fun t48b__ref___projection ((a t48b__ref)) t48b (t48b__content a))
(declare-const input__first integer)
(declare-const input__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const c60b us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-fun test_patience__input__aggregate_def (Int Int Int Int Int Int Int) (Array Int card))
(assert (forall ((temp___765 Int) (temp___766 Int) (temp___767 Int) (temp___768 Int) (temp___769 Int) (temp___770 Int) (temp___771 Int)) (let ((temp___764 (test_patience__input__aggregate_def temp___765 temp___766 temp___767 temp___768 temp___769 temp___770 temp___771))) (and (and (and (and (and (and (= (select temp___764 1) (of_rep2 temp___765)) (= (select temp___764 2) (of_rep2 temp___766))) (= (select temp___764 3) (of_rep2 temp___767))) (= (select temp___764 4) (of_rep2 temp___768))) (= (select temp___764 5) (of_rep2 temp___769))) (= (select temp___764 6) (of_rep2 temp___770))) (= (select temp___764 7) (of_rep2 temp___771))))))
(declare-fun temp___String_Literal_776 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_776 us_void_param) 1)) 84) (= (to_rep (select (temp___String_Literal_776 us_void_param) 2)) 101)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 3)) 115)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 4)) 116)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 5)) 32)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 6)) 111)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 7)) 102)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 9)) 97)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 11)) 112)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 12)) 97)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 14)) 105)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 15)) 101)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 16)) 110)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 17)) 99)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 18)) 101)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 20)) 103)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 21)) 97)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 22)) 109)) (= (to_rep (select (temp___String_Literal_776 us_void_param) 23)) 101)) :pattern ((temp___String_Literal_776 us_void_param)))))
(declare-fun temp___String_Literal_777 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_777 us_void_param) 1)) 45) (= (to_rep (select (temp___String_Literal_777 us_void_param) 2)) 45)) (= (to_rep (select (temp___String_Literal_777 us_void_param) 3)) 45)) (= (to_rep (select (temp___String_Literal_777 us_void_param) 4)) 45)) (= (to_rep (select (temp___String_Literal_777 us_void_param) 5)) 45)) (= (to_rep (select (temp___String_Literal_777 us_void_param) 6)) 45)) (= (to_rep (select (temp___String_Literal_777 us_void_param) 7)) 45)) (= (to_rep (select (temp___String_Literal_777 us_void_param) 8)) 45)) :pattern ((temp___String_Literal_777 us_void_param)))))
(declare-fun temp___String_Literal_778 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_778 us_void_param) 1)) 67) (= (to_rep (select (temp___String_Literal_778 us_void_param) 2)) 97)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 3)) 114)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 4)) 100)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 5)) 83)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 6)) 116)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 7)) 97)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 8)) 99)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 9)) 107)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 11)) 40)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 12)) 102)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 13)) 105)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 14)) 114)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 15)) 115)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 16)) 116)) (= (to_rep (select (temp___String_Literal_778 us_void_param) 17)) 61)) :pattern ((temp___String_Literal_778 us_void_param)))))
(declare-fun temp___String_Literal_781 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (= (to_rep (select (temp___String_Literal_781 us_void_param) 1)) 41) (= (to_rep (select (temp___String_Literal_781 us_void_param) 2)) 32)) (= (to_rep (select (temp___String_Literal_781 us_void_param) 3)) 61)) (= (to_rep (select (temp___String_Literal_781 us_void_param) 4)) 32)) :pattern ((temp___String_Literal_781 us_void_param)))))
(declare-fun temp___String_Literal_784 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (= (to_rep (select (temp___String_Literal_784 us_void_param) 1)) 32) :pattern ((temp___String_Literal_784 us_void_param)))))
(declare-fun temp___String_Literal_789 (tuple0) (Array Int character))
(assert true)
(declare-fun temp___String_Literal_790 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_790 us_void_param) 1)) 45) (= (to_rep (select (temp___String_Literal_790 us_void_param) 2)) 45)) (= (to_rep (select (temp___String_Literal_790 us_void_param) 3)) 45)) (= (to_rep (select (temp___String_Literal_790 us_void_param) 4)) 45)) (= (to_rep (select (temp___String_Literal_790 us_void_param) 5)) 45)) (= (to_rep (select (temp___String_Literal_790 us_void_param) 6)) 45)) (= (to_rep (select (temp___String_Literal_790 us_void_param) 7)) 45)) (= (to_rep (select (temp___String_Literal_790 us_void_param) 8)) 45)) :pattern ((temp___String_Literal_790 us_void_param)))))
(declare-fun temp___String_Literal_792 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_792 us_void_param) 1)) 45) (= (to_rep (select (temp___String_Literal_792 us_void_param) 2)) 45)) (= (to_rep (select (temp___String_Literal_792 us_void_param) 3)) 45)) (= (to_rep (select (temp___String_Literal_792 us_void_param) 4)) 45)) (= (to_rep (select (temp___String_Literal_792 us_void_param) 5)) 45)) (= (to_rep (select (temp___String_Literal_792 us_void_param) 6)) 45)) (= (to_rep (select (temp___String_Literal_792 us_void_param) 7)) 45)) (= (to_rep (select (temp___String_Literal_792 us_void_param) 8)) 45)) :pattern ((temp___String_Literal_792 us_void_param)))))
(declare-fun temp___String_Literal_793 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_793 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_793 us_void_param) 2)) 117)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 3)) 109)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 4)) 98)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 8)) 111)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 9)) 102)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 11)) 101)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 12)) 108)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 14)) 115)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 16)) 61)) (= (to_rep (select (temp___String_Literal_793 us_void_param) 17)) 32)) :pattern ((temp___String_Literal_793 us_void_param)))))
(declare-fun temp___String_Literal_796 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_796 us_void_param) 1)) 67) (= (to_rep (select (temp___String_Literal_796 us_void_param) 2)) 97)) (= (to_rep (select (temp___String_Literal_796 us_void_param) 3)) 114)) (= (to_rep (select (temp___String_Literal_796 us_void_param) 4)) 100)) (= (to_rep (select (temp___String_Literal_796 us_void_param) 5)) 32)) (= (to_rep (select (temp___String_Literal_796 us_void_param) 6)) 118)) (= (to_rep (select (temp___String_Literal_796 us_void_param) 7)) 97)) (= (to_rep (select (temp___String_Literal_796 us_void_param) 8)) 108)) (= (to_rep (select (temp___String_Literal_796 us_void_param) 9)) 117)) (= (to_rep (select (temp___String_Literal_796 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_796 us_void_param) 11)) 115)) (= (to_rep (select (temp___String_Literal_796 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_796 us_void_param) 13)) 61)) :pattern ((temp___String_Literal_796 us_void_param)))))
(declare-fun temp___String_Literal_797 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (= (to_rep (select (temp___String_Literal_797 us_void_param) 1)) 32) :pattern ((temp___String_Literal_797 us_void_param)))))
(declare-fun temp___String_Literal_803 (tuple0) (Array Int character))
(assert true)
(declare-fun temp___String_Literal_804 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_804 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_804 us_void_param) 2)) 117)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 3)) 109)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 4)) 98)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 8)) 111)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 9)) 102)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 11)) 115)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 12)) 116)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 13)) 97)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 14)) 99)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 15)) 107)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 16)) 115)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 18)) 61)) (= (to_rep (select (temp___String_Literal_804 us_void_param) 19)) 32)) :pattern ((temp___String_Literal_804 us_void_param)))))
(declare-fun temp___String_Literal_808 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (= (to_rep (select (temp___String_Literal_808 us_void_param) 1)) 83) (= (to_rep (select (temp___String_Literal_808 us_void_param) 2)) 116)) (= (to_rep (select (temp___String_Literal_808 us_void_param) 3)) 97)) (= (to_rep (select (temp___String_Literal_808 us_void_param) 4)) 99)) (= (to_rep (select (temp___String_Literal_808 us_void_param) 5)) 107)) (= (to_rep (select (temp___String_Literal_808 us_void_param) 6)) 32)) :pattern ((temp___String_Literal_808 us_void_param)))))
(declare-fun temp___String_Literal_811 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_811 us_void_param) 1)) 32) (= (to_rep (select (temp___String_Literal_811 us_void_param) 2)) 104)) (= (to_rep (select (temp___String_Literal_811 us_void_param) 3)) 97)) (= (to_rep (select (temp___String_Literal_811 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_811 us_void_param) 5)) 32)) (= (to_rep (select (temp___String_Literal_811 us_void_param) 6)) 115)) (= (to_rep (select (temp___String_Literal_811 us_void_param) 7)) 105)) (= (to_rep (select (temp___String_Literal_811 us_void_param) 8)) 122)) (= (to_rep (select (temp___String_Literal_811 us_void_param) 9)) 101)) (= (to_rep (select (temp___String_Literal_811 us_void_param) 10)) 32)) :pattern ((temp___String_Literal_811 us_void_param)))))
(declare-fun temp___String_Literal_817 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_817 us_void_param) 1)) 32) (= (to_rep (select (temp___String_Literal_817 us_void_param) 2)) 58)) :pattern ((temp___String_Literal_817 us_void_param)))))
(declare-fun temp___String_Literal_822 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (= (to_rep (select (temp___String_Literal_822 us_void_param) 1)) 32) :pattern ((temp___String_Literal_822 us_void_param)))))
(declare-fun temp___String_Literal_825 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (= (to_rep (select (temp___String_Literal_825 us_void_param) 1)) 32) (= (to_rep (select (temp___String_Literal_825 us_void_param) 2)) 61)) (= (to_rep (select (temp___String_Literal_825 us_void_param) 3)) 62)) :pattern ((temp___String_Literal_825 us_void_param)))))
(declare-fun temp___String_Literal_836 (tuple0) (Array Int character))
(assert true)
(declare-fun temp___String_Literal_839 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_839 us_void_param) 1)) 45) (= (to_rep (select (temp___String_Literal_839 us_void_param) 2)) 45)) (= (to_rep (select (temp___String_Literal_839 us_void_param) 3)) 45)) (= (to_rep (select (temp___String_Literal_839 us_void_param) 4)) 45)) (= (to_rep (select (temp___String_Literal_839 us_void_param) 5)) 45)) (= (to_rep (select (temp___String_Literal_839 us_void_param) 6)) 45)) (= (to_rep (select (temp___String_Literal_839 us_void_param) 7)) 45)) (= (to_rep (select (temp___String_Literal_839 us_void_param) 8)) 45)) :pattern ((temp___String_Literal_839 us_void_param)))))
(define-fun dynamic_invariant1 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant2 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant3 ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant4 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(define-fun dynamic_invariant5 ((temp___expr_545 Int) (temp___is_init_542 Bool) (temp___skip_constant_543 Bool) (temp___do_toplevel_544 Bool)) Bool (=> (or (= temp___is_init_542 true) (<= 1 52)) (in_range4 temp___expr_545)))
(define-fun dynamic_invariant6 ((temp___expr_551 us_t1) (temp___is_init_548 Bool) (temp___skip_constant_549 Bool) (temp___do_toplevel_550 Bool)) Bool (=> (not (= temp___skip_constant_549 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_551) (last3 temp___expr_551))))
(assert true)
(assert (forall ((s us_rep)) (! (= (= (inv s) true) (and (and (and (and (and (and (and (and (and (<= 0 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 s)))) (<= (to_rep3 (rec__patience__state__numstacks (us_split_fields1 s))) (to_rep3 (rec__patience__state__numelts (us_split_fields1 s))))) (<= (to_rep3 (rec__patience__state__numelts (us_split_fields1 s))) 100)) (or (= (to_rep3 (rec__patience__state__numelts (us_split_fields1 s))) 0) (< 0 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 s)))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep3 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (and (and (<= 1 (to_rep3 (let ((temp___685 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___685 i)))) (<= (to_rep3 (let ((temp___686 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___686 i))) (to_rep3 (rec__patience__state__numelts (us_split_fields1 s))))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep3 (let ((temp___687 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___687 i))) 1))) (and (<= 0 (to_rep3 (let ((temp___689 (let ((temp___688 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___688 i)))) (select temp___689 j)))) (< (to_rep3 (let ((temp___691 (let ((temp___690 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___690 i)))) (select temp___691 j))) (to_rep3 (rec__patience__state__numelts (us_split_fields1 s))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 s))) 1))) (and (and (and (<= 0 (to_rep3 (let ((temp___692 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___692 i)))) (<= (to_rep3 (let ((temp___692 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___692 i))) (- (to_rep3 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (and (<= 0 (to_rep3 (let ((temp___693 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___693 i)))) (<= (to_rep3 (let ((temp___693 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___693 i))) (- (to_rep3 (let ((temp___694 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___694 (to_rep3 (let ((temp___695 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___695 i)))))) 1)))) (= (to_rep3 (let ((temp___698 (let ((temp___696 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___696 (to_rep3 (let ((temp___697 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___697 i))))))) (select temp___698 (to_rep3 (let ((temp___699 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___699 i)))))) i))))) (forall ((ist Int)) (=> (and (<= 0 ist) (<= ist (- (to_rep3 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (forall ((ip Int)) (=> (and (<= 0 ip) (<= ip (- (to_rep3 (let ((temp___700 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___700 ist))) 1))) (and (= ist (to_rep3 (let ((temp___701 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___701 (to_rep3 (let ((temp___703 (let ((temp___702 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___702 ist)))) (select temp___703 ip))))))) (= ip (to_rep3 (let ((temp___704 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___704 (to_rep3 (let ((temp___706 (let ((temp___705 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___705 ist)))) (select temp___706 ip))))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep3 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep3 (let ((temp___707 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___707 i))) 2))) (forall ((k Int)) (=> (and (<= (+ j 1) k) (<= k (- (to_rep3 (let ((temp___708 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___708 i))) 1))) (< (to_rep3 (let ((temp___710 (let ((temp___709 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___709 i)))) (select temp___710 j))) (to_rep3 (let ((temp___712 (let ((temp___711 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___711 i)))) (select temp___712 k))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep3 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep3 (let ((temp___713 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___713 i))) 2))) (forall ((k Int)) (=> (and (<= (+ j 1) k) (<= k (- (to_rep3 (let ((temp___714 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___714 i))) 1))) (<= (to_rep2 (let ((temp___718 (rec__patience__state__values (us_split_fields1 s)))) (select temp___718 (to_rep3 (let ((temp___720 (let ((temp___719 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___719 i)))) (select temp___720 k)))))) (to_rep2 (let ((temp___715 (rec__patience__state__values (us_split_fields1 s)))) (select temp___715 (to_rep3 (let ((temp___717 (let ((temp___716 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___716 i)))) (select temp___717 j)))))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 s))) 1))) (and (and (and (<= (- 1) (to_rep3 (let ((temp___721 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___721 i)))) (<= (to_rep3 (let ((temp___721 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___721 i))) (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 s))) 1))) (< (to_rep3 (let ((temp___722 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___722 i))) i)) (ite (< (to_rep3 (let ((temp___731 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___731 i))) 0) (= (to_rep3 (let ((temp___723 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___723 i))) 0) (and (and (< (to_rep2 (let ((temp___724 (rec__patience__state__values (us_split_fields1 s)))) (select temp___724 (to_rep3 (let ((temp___725 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___725 i)))))) (to_rep2 (let ((temp___726 (rec__patience__state__values (us_split_fields1 s)))) (select temp___726 i)))) (< 0 (to_rep3 (let ((temp___727 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___727 i))))) (= (to_rep3 (let ((temp___728 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___728 (to_rep3 (let ((temp___729 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___729 i)))))) (- (to_rep3 (let ((temp___730 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___730 i))) 1))))))))) :pattern ((inv s)))))
(declare-const input (Array Int card))
(declare-const s__split_fields cardindex)
(declare-const s__split_fields1 (Array Int card))
(declare-const s__split_fields2 cardindex)
(declare-const s__split_fields3 (Array Int cardindex))
(declare-const s__split_fields4 (Array Int (Array Int cardindex)))
(declare-const s__split_fields5 (Array Int cardindex))
(declare-const s__split_fields6 (Array Int cardindex))
(declare-const s__split_fields7 (Array Int cardindex))
(declare-const i Int)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const temp___782 (Array Int character))
(declare-const temp___7821 t)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const o12 (Array Int character))
(declare-const o13 t)
(declare-const o14 Int)
(declare-const o15 card)
(declare-const o16 Int)
(declare-const o17 us_image)
(declare-const temp___786 (Array Int character))
(declare-const temp___7861 t)
(declare-const o18 Int)
(declare-const o19 Int)
(declare-const o20 Int)
(declare-const o21 Int)
(declare-const o22 Int)
(declare-const o23 Int)
(declare-const o24 (Array Int character))
(declare-const o25 t)
(declare-const temp___791 cardindex)
(declare-const temp___7911 (Array Int card))
(declare-const temp___7912 cardindex)
(declare-const temp___7913 (Array Int cardindex))
(declare-const temp___7914 (Array Int (Array Int cardindex)))
(declare-const temp___7915 (Array Int cardindex))
(declare-const temp___7916 (Array Int cardindex))
(declare-const temp___7917 (Array Int cardindex))
(declare-const o26 Int)
(declare-const o27 Int)
(declare-const o28 Int)
(declare-const o29 Int)
(declare-const o30 Int)
(declare-const o31 Int)
(declare-const o32 (Array Int character))
(declare-const o33 t)
(declare-const o34 Int)
(declare-const o35 Int)
(declare-const o36 Int)
(declare-const o37 Int)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const o40 (Array Int character))
(declare-const o41 t)
(declare-const o42 Int)
(declare-const o43 Int)
(declare-const o44 Int)
(declare-const o45 Int)
(declare-const o46 Int)
(declare-const o47 Int)
(declare-const o48 (Array Int character))
(declare-const o49 t)
(declare-const o50 Int)
(declare-const o51 Int)
(declare-const o52 Int)
(declare-const o53 Int)
(declare-const o54 Int)
(declare-const o55 Int)
(declare-const temp___812 (Array Int character))
(declare-const temp___8121 t)
(declare-const o56 Int)
(declare-const o57 Int)
(declare-const o58 Int)
(declare-const o59 Int)
(declare-const o60 Int)
(declare-const o61 Int)
(declare-const temp___815 (Array Int character))
(declare-const temp___8151 t)
(declare-const o62 Int)
(declare-const o63 Int)
(declare-const o64 Int)
(declare-const o65 Int)
(declare-const o66 Int)
(declare-const o67 Int)
(declare-const temp___818 (Array Int character))
(declare-const temp___8181 t)
(declare-const o68 Int)
(declare-const o69 Int)
(declare-const o70 Int)
(declare-const o71 Int)
(declare-const o72 Int)
(declare-const o73 Int)
(declare-const o74 us_t)
(declare-const o75 Int)
(declare-const o76 cardindex)
(declare-const o77 Int)
(declare-const o78 Int)
(declare-const o79 card)
(declare-const o80 Int)
(declare-const o81 us_image)
(declare-const temp___830 us_t)
(declare-const o82 Int)
(declare-const o83 Int)
(declare-const o84 Int)
(declare-const o85 Int)
(declare-const o86 Int)
(declare-const o87 Int)
(declare-const temp___826 us_t)
(declare-const o88 Int)
(declare-const o89 Int)
(declare-const o90 Int)
(declare-const o91 Int)
(declare-const o92 Int)
(declare-const o93 Int)
(declare-const temp___829 us_t)
(declare-const o94 Int)
(declare-const o95 Int)
(declare-const o96 Int)
(declare-const o97 Int)
(declare-const o98 Int)
(declare-const result map__ref1)
(declare-const input1 (Array Int card))
(declare-const result1 int__ref)
(declare-const i3 Int)
(declare-const i4 Int)
(declare-const i5 int__ref)
(declare-const i6 Int)
(declare-const i7 int__ref)
(declare-const i8 Int)
(declare-const result2 us_split_fields__ref)
(declare-const s__split_fields8 us_split_fields)
(declare-const result3 int__ref)
(declare-const i9 Int)
(declare-const i10 Int)
(declare-const i11 int__ref)
(declare-const i12 Int)
(declare-const i13 int__ref)
(declare-const i14 Int)
(declare-const result4 int__ref)
(declare-const i15 Int)
(declare-const i16 Int)
(declare-const size Int)
(declare-const idx Int)
(declare-const j Int)
(declare-const result5 int__ref)
(declare-const size1 Int)
(declare-const result6 int__ref)
(declare-const j1 Int)
(declare-const idx1 Int)
(declare-const j2 Int)
(declare-const result7 int__ref)
(declare-const idx2 Int)
(define-fun temp___7918 () us_rep (mk___rep (mk___split_fields temp___791 temp___7911 temp___7912 temp___7913 temp___7914 temp___7915 temp___7916 temp___7917)))
(assert (= result (mk_map__ref1 input)))
(assert (= input1 (test_patience__input__aggregate_def 9 7 10 9 5 4 10)))
(assert (= (to_rep1 input__first) (to_rep1 (first2 (mk1 1 7)))))
(assert (= (to_rep1 input__last) (to_rep1 (last2 (mk1 1 7)))))
(assert (dynamic_property1 1 2147483647 (to_rep1 input__first) (to_rep1 input__last)))
(assert (=> (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first))))))) (= o (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first))))))) 1))))
(assert (=> (not (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))))) (= o 0)))
(assert (=> (<= 1 17) (= o1 (+ (- 17 1) 1))))
(assert (=> (not (<= 1 17)) (= o1 0)))
(assert (= o2 (+ o1 o)))
(assert (= o3 (+ 1 o2)))
(assert (= o4 (- o3 1)))
(assert (and (= o5 o4) (in_range2 o4)))
(assert (= (concat1 (temp___String_Literal_778 Tuple0) 1 17 (elts (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first))))))) temp___782))
(assert (= (mk 1 o5) temp___7821))
(assert (=> (= (length (mk___t temp___782 temp___7821)) 0) (= (temp___String_Literal_781 Tuple0) o12)))
(assert (=> (= (length (mk___t temp___782 temp___7821)) 0) (= (mk 1 4) o13)))
(assert (=> (not (= (length (mk___t temp___782 temp___7821)) 0)) (=> (<= 1 4) (= o6 (+ (- 4 1) 1)))))
(assert (=> (not (= (length (mk___t temp___782 temp___7821)) 0)) (=> (not (<= 1 4)) (= o6 0))))
(assert (=> (not (= (length (mk___t temp___782 temp___7821)) 0)) (=> (<= (to_rep1 (first temp___7821)) (to_rep1 (last temp___7821))) (= o7 (+ (- (to_rep1 (last temp___7821)) (to_rep1 (first temp___7821))) 1)))))
(assert (=> (not (= (length (mk___t temp___782 temp___7821)) 0)) (=> (not (<= (to_rep1 (first temp___7821)) (to_rep1 (last temp___7821)))) (= o7 0))))
(assert (=> (not (= (length (mk___t temp___782 temp___7821)) 0)) (= o8 (+ o7 o6))))
(assert (=> (not (= (length (mk___t temp___782 temp___7821)) 0)) (= o9 (+ (to_rep1 (first temp___7821)) o8))))
(assert (=> (not (= (length (mk___t temp___782 temp___7821)) 0)) (= o10 (- o9 1))))
(assert (=> (not (= (length (mk___t temp___782 temp___7821)) 0)) (and (= o11 o10) (in_range2 o10))))
(assert (=> (not (= (length (mk___t temp___782 temp___7821)) 0)) (= (concat1 temp___782 (to_rep1 (first temp___7821)) (to_rep1 (last temp___7821)) (temp___String_Literal_781 Tuple0) 1 4) o12)))
(assert (=> (not (= (length (mk___t temp___782 temp___7821)) 0)) (= (mk (to_rep1 (first temp___7821)) o11) o13)))
(assert (= result1 (mk_int__ref i)))
(assert (= i3 (to_rep1 input__first)))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (and (<= (to_rep1 input__first) i4) (<= i4 (to_rep1 input__last)))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (and (<= (to_rep1 input__first) i4) (<= i4 (to_rep1 input__last)))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= o14 i4)))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= o15 (select input1 o14))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= o16 (to_rep2 o15))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= o17 (attr__ATTRIBUTE_IMAGE4 o16))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= (mk___t temp___786 temp___7861) (to_string o17))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (=> (<= (to_rep1 (first temp___7861)) (to_rep1 (last temp___7861))) (= o18 (+ (- (to_rep1 (last temp___7861)) (to_rep1 (first temp___7861))) 1)))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (=> (not (<= (to_rep1 (first temp___7861)) (to_rep1 (last temp___7861)))) (= o18 0))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (=> (<= 1 1) (= o19 (+ (- 1 1) 1)))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (=> (not (<= 1 1)) (= o19 0))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= o20 (+ o19 o18))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= o21 (+ 1 o20))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= o22 (- o21 1))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (and (= o23 o22) (in_range2 o22))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= o24 (concat1 (temp___String_Literal_784 Tuple0) 1 1 temp___786 (to_rep1 (first temp___7861)) (to_rep1 (last temp___7861))))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= o25 (mk 1 o23))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= i4 (to_rep1 input__last))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= i5 (mk_int__ref i4))))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= i6 i4)))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= i7 i5)))
(assert (=> (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last))) (= i8 i6)))
(assert (=> (not (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))) (= i7 (mk_int__ref i3))))
(assert (=> (not (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))) (= i8 i3)))
(assert (and (= temp___7918 (playgame (mk___t1 input1 (mk1 (to_rep1 input__first) (to_rep1 input__last))))) (= (inv temp___7918) true)))
(assert (= result2 (mk___split_fields__ref (mk___split_fields s__split_fields s__split_fields1 s__split_fields2 s__split_fields3 s__split_fields4 s__split_fields5 s__split_fields6 s__split_fields7))))
(assert (= s__split_fields8 (mk___split_fields temp___791 temp___7911 temp___7912 temp___7913 temp___7914 temp___7915 temp___7916 temp___7917)))
(assert (= (mk___rep s__split_fields8) c60b))
(assert (=> (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b)))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))))))))) (= o26 (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b)))))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))))))))) 1))))
(assert (=> (not (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b)))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b)))))))))) (= o26 0)))
(assert (=> (<= 1 17) (= o27 (+ (- 17 1) 1))))
(assert (=> (not (<= 1 17)) (= o27 0)))
(assert (= o28 (+ o27 o26)))
(assert (= o29 (+ 1 o28)))
(assert (= o30 (- o29 1)))
(assert (and (= o31 o30) (in_range2 o30)))
(assert (= o32 (concat1 (temp___String_Literal_793 Tuple0) 1 17 (elts (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b)))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b)))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b)))))))))))
(assert (= o33 (mk 1 o31)))
(assert (= result3 (mk_int__ref i1)))
(assert (= i9 0))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (and (<= 0 i10) (<= i10 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (=> (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (select (rec__patience__state__values (us_split_fields1 c60b)) i10))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (select (rec__patience__state__values (us_split_fields1 c60b)) i10)))))))) (= o34 (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (select (rec__patience__state__values (us_split_fields1 c60b)) i10))))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (select (rec__patience__state__values (us_split_fields1 c60b)) i10)))))))) 1)))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (=> (not (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (select (rec__patience__state__values (us_split_fields1 c60b)) i10))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (select (rec__patience__state__values (us_split_fields1 c60b)) i10))))))))) (= o34 0))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (=> (<= 1 1) (= o35 (+ (- 1 1) 1)))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (=> (not (<= 1 1)) (= o35 0))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (= o36 (+ o35 o34))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (= o37 (+ 1 o36))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (= o38 (- o37 1))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (and (= o39 o38) (in_range2 o38))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (= o40 (concat1 (temp___String_Literal_797 Tuple0) 1 1 (elts (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (select (rec__patience__state__values (us_split_fields1 c60b)) i10))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (select (rec__patience__state__values (us_split_fields1 c60b)) i10))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (select (rec__patience__state__values (us_split_fields1 c60b)) i10)))))))))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (= o41 (mk 1 o39))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (= i10 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (= i11 (mk_int__ref i10))))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (= i12 i10)))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (= i13 i11)))
(assert (=> (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))) (= i14 i12)))
(assert (=> (not (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))) (= i13 (mk_int__ref i9))))
(assert (=> (not (and (<= 0 i9) (<= i9 (- (to_rep3 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))) (= i14 i9)))
(assert (=> (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b)))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b))))))))) (= o42 (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b)))))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b))))))))) 1))))
(assert (=> (not (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b)))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b)))))))))) (= o42 0)))
(assert (=> (<= 1 19) (= o43 (+ (- 19 1) 1))))
(assert (=> (not (<= 1 19)) (= o43 0)))
(assert (= o44 (+ o43 o42)))
(assert (= o45 (+ 1 o44)))
(assert (= o46 (- o45 1)))
(assert (and (= o47 o46) (in_range2 o46)))
(assert (= o48 (concat1 (temp___String_Literal_804 Tuple0) 1 19 (elts (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b)))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b)))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b)))))))))))
(assert (= o49 (mk 1 o47)))
(assert (= result4 (mk_int__ref i2)))
(assert (= i15 0))
(assert (<= 0 i15))
(assert (<= i15 (- (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b))) 1)))
(assert (and (<= 0 i16) (<= i16 (- (to_rep3 (rec__patience__state__numstacks (us_split_fields1 c60b))) 1))))
(assert (= result5 (mk_int__ref size)))
(assert (= size1 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16))))
(assert (in_range5 size1))
(assert (=> (<= (- 1) 100) (in_range5 idx)))
(assert (=> (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16)))))) (= o50 (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16)))))) 1))))
(assert (=> (not (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16))))))) (= o50 0)))
(assert (=> (<= 1 6) (= o51 (+ (- 6 1) 1))))
(assert (=> (not (<= 1 6)) (= o51 0)))
(assert (= o52 (+ o51 o50)))
(assert (= o53 (+ 1 o52)))
(assert (= o54 (- o53 1)))
(assert (and (= o55 o54) (in_range2 o54)))
(assert (= (concat1 (temp___String_Literal_808 Tuple0) 1 6 (elts (to_string (attr__ATTRIBUTE_IMAGE5 i16))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 i16)))))) temp___812))
(assert (= (mk 1 o55) temp___8121))
(assert (=> (= (length (mk___t temp___812 temp___8121)) 0) (= (temp___String_Literal_811 Tuple0) temp___815)))
(assert (=> (= (length (mk___t temp___812 temp___8121)) 0) (= (mk 1 10) temp___8151)))
(assert (=> (not (= (length (mk___t temp___812 temp___8121)) 0)) (=> (<= 1 10) (= o56 (+ (- 10 1) 1)))))
(assert (=> (not (= (length (mk___t temp___812 temp___8121)) 0)) (=> (not (<= 1 10)) (= o56 0))))
(assert (=> (not (= (length (mk___t temp___812 temp___8121)) 0)) (=> (<= (to_rep1 (first temp___8121)) (to_rep1 (last temp___8121))) (= o57 (+ (- (to_rep1 (last temp___8121)) (to_rep1 (first temp___8121))) 1)))))
(assert (=> (not (= (length (mk___t temp___812 temp___8121)) 0)) (=> (not (<= (to_rep1 (first temp___8121)) (to_rep1 (last temp___8121)))) (= o57 0))))
(assert (=> (not (= (length (mk___t temp___812 temp___8121)) 0)) (= o58 (+ o57 o56))))
(assert (=> (not (= (length (mk___t temp___812 temp___8121)) 0)) (= o59 (+ (to_rep1 (first temp___8121)) o58))))
(assert (=> (not (= (length (mk___t temp___812 temp___8121)) 0)) (= o60 (- o59 1))))
(assert (=> (not (= (length (mk___t temp___812 temp___8121)) 0)) (and (= o61 o60) (in_range2 o60))))
(assert (=> (not (= (length (mk___t temp___812 temp___8121)) 0)) (= (concat1 temp___812 (to_rep1 (first temp___8121)) (to_rep1 (last temp___8121)) (temp___String_Literal_811 Tuple0) 1 10) temp___815)))
(assert (=> (not (= (length (mk___t temp___812 temp___8121)) 0)) (= (mk (to_rep1 (first temp___8121)) o61) temp___8151)))
(assert (=> (= (length (mk___t temp___815 temp___8151)) 0) (= (elts (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16))))) temp___818)))
(assert (=> (= (length (mk___t temp___815 temp___8151)) 0) (= (mk (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16)))))))) temp___8181)))
(assert (=> (not (= (length (mk___t temp___815 temp___8151)) 0)) (=> (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16)))))))) (= o62 (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16))))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16)))))))) 1)))))
(assert (=> (not (= (length (mk___t temp___815 temp___8151)) 0)) (=> (not (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16))))))))) (= o62 0))))
(assert (=> (not (= (length (mk___t temp___815 temp___8151)) 0)) (=> (<= (to_rep1 (first temp___8151)) (to_rep1 (last temp___8151))) (= o63 (+ (- (to_rep1 (last temp___8151)) (to_rep1 (first temp___8151))) 1)))))
(assert (=> (not (= (length (mk___t temp___815 temp___8151)) 0)) (=> (not (<= (to_rep1 (first temp___8151)) (to_rep1 (last temp___8151)))) (= o63 0))))
(assert (=> (not (= (length (mk___t temp___815 temp___8151)) 0)) (= o64 (+ o63 o62))))
(assert (=> (not (= (length (mk___t temp___815 temp___8151)) 0)) (= o65 (+ (to_rep1 (first temp___8151)) o64))))
(assert (=> (not (= (length (mk___t temp___815 temp___8151)) 0)) (= o66 (- o65 1))))
(assert (=> (not (= (length (mk___t temp___815 temp___8151)) 0)) (and (= o67 o66) (in_range2 o66))))
(assert (=> (not (= (length (mk___t temp___815 temp___8151)) 0)) (= (concat1 temp___815 (to_rep1 (first temp___8151)) (to_rep1 (last temp___8151)) (elts (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16)))))))) temp___818)))
(assert (=> (not (= (length (mk___t temp___815 temp___8151)) 0)) (= (mk (to_rep1 (first temp___8151)) o67) temp___8181)))
(assert (=> (= (length (mk___t temp___818 temp___8181)) 0) (= o74 (mk___t (temp___String_Literal_817 Tuple0) (mk 1 2)))))
(assert (=> (not (= (length (mk___t temp___818 temp___8181)) 0)) (=> (<= 1 2) (= o68 (+ (- 2 1) 1)))))
(assert (=> (not (= (length (mk___t temp___818 temp___8181)) 0)) (=> (not (<= 1 2)) (= o68 0))))
(assert (=> (not (= (length (mk___t temp___818 temp___8181)) 0)) (=> (<= (to_rep1 (first temp___8181)) (to_rep1 (last temp___8181))) (= o69 (+ (- (to_rep1 (last temp___8181)) (to_rep1 (first temp___8181))) 1)))))
(assert (=> (not (= (length (mk___t temp___818 temp___8181)) 0)) (=> (not (<= (to_rep1 (first temp___8181)) (to_rep1 (last temp___8181)))) (= o69 0))))
(assert (=> (not (= (length (mk___t temp___818 temp___8181)) 0)) (= o70 (+ o69 o68))))
(assert (=> (not (= (length (mk___t temp___818 temp___8181)) 0)) (= o71 (+ (to_rep1 (first temp___8181)) o70))))
(assert (=> (not (= (length (mk___t temp___818 temp___8181)) 0)) (= o72 (- o71 1))))
(assert (=> (not (= (length (mk___t temp___818 temp___8181)) 0)) (and (= o73 o72) (in_range2 o72))))
(assert (=> (not (= (length (mk___t temp___818 temp___8181)) 0)) (= o74 (mk___t (concat1 temp___818 (to_rep1 (first temp___8181)) (to_rep1 (last temp___8181)) (temp___String_Literal_817 Tuple0) 1 2) (mk (to_rep1 (first temp___8181)) o73)))))
(assert (= result6 (mk_int__ref j)))
(assert (= j1 0))
(assert (<= 0 j1))
(assert (<= j1 (- (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16)) 1)))
(assert (and (=> (<= (- 1) 100) (in_range5 idx1)) (and (<= 0 j2) (<= j2 (- (to_rep3 (select (rec__patience__state__stacksizes (us_split_fields1 c60b)) i16)) 1)))))
(assert (and (<= 0 j2) (<= j2 99)))
(assert (= o75 j2))
(assert (= o76 (select (select (rec__patience__state__stacks (us_split_fields1 c60b)) i16) o75)))
(assert (= o77 (to_rep3 o76)))
(assert (= result7 (mk_int__ref idx1)))
(assert (= idx2 o77))
(assert (and (<= 0 idx2) (<= idx2 99)))
(assert (= o78 idx2))
(assert (= o79 (select (rec__patience__state__values (us_split_fields1 c60b)) o78)))
(assert (= o80 (to_rep2 o79)))
(assert (= o81 (attr__ATTRIBUTE_IMAGE4 o80)))
(assert (= temp___830 (to_string o81)))
(assert (=> (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2)))))) (= o82 (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2)))))) 1))))
(assert (=> (not (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2))))))) (= o82 0)))
(assert (=> (<= 1 1) (= o83 (+ (- 1 1) 1))))
(assert (=> (not (<= 1 1)) (= o83 0)))
(assert (= o84 (+ o83 o82)))
(assert (= o85 (+ 1 o84)))
(assert (= o86 (- o85 1)))
(assert (and (= o87 o86) (in_range2 o86)))
(assert (= temp___826 (mk___t (concat1 (temp___String_Literal_822 Tuple0) 1 1 (elts (to_string (attr__ATTRIBUTE_IMAGE5 idx2))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 idx2)))))) (mk 1 o87))))
(assert (=> (= (length temp___826) 0) (= temp___829 (mk___t (temp___String_Literal_825 Tuple0) (mk 1 3)))))
(assert (=> (not (= (length temp___826) 0)) (=> (<= 1 3) (= o88 (+ (- 3 1) 1)))))
(assert (=> (not (= (length temp___826) 0)) (=> (not (<= 1 3)) (= o88 0))))
(assert (=> (not (= (length temp___826) 0)) (=> (<= (to_rep1 (first (rt temp___826))) (to_rep1 (last (rt temp___826)))) (= o89 (+ (- (to_rep1 (last (rt temp___826))) (to_rep1 (first (rt temp___826)))) 1)))))
(assert (=> (not (= (length temp___826) 0)) (=> (not (<= (to_rep1 (first (rt temp___826))) (to_rep1 (last (rt temp___826))))) (= o89 0))))
(assert (=> (not (= (length temp___826) 0)) (= o90 (+ o89 o88))))
(assert (=> (not (= (length temp___826) 0)) (= o91 (+ (to_rep1 (first (rt temp___826))) o90))))
(assert (=> (not (= (length temp___826) 0)) (= o92 (- o91 1))))
(assert (=> (not (= (length temp___826) 0)) (and (= o93 o92) (in_range2 o92))))
(assert (=> (not (= (length temp___826) 0)) (= temp___829 (mk___t (concat1 (elts temp___826) (to_rep1 (first (rt temp___826))) (to_rep1 (last (rt temp___826))) (temp___String_Literal_825 Tuple0) 1 3) (mk (to_rep1 (first (rt temp___826))) o93)))))
(assert (not (= (length temp___829) 0)))
(assert (=> (<= (to_rep1 (first (rt temp___830))) (to_rep1 (last (rt temp___830)))) (= o94 (+ (- (to_rep1 (last (rt temp___830))) (to_rep1 (first (rt temp___830)))) 1))))
(assert (=> (not (<= (to_rep1 (first (rt temp___830))) (to_rep1 (last (rt temp___830))))) (= o94 0)))
(assert (=> (<= (to_rep1 (first (rt temp___829))) (to_rep1 (last (rt temp___829)))) (= o95 (+ (- (to_rep1 (last (rt temp___829))) (to_rep1 (first (rt temp___829)))) 1))))
(assert (=> (not (<= (to_rep1 (first (rt temp___829))) (to_rep1 (last (rt temp___829))))) (= o95 0)))
(assert (= o96 (+ o95 o94)))
(assert (= o97 (+ (to_rep1 (first (rt temp___829))) o96)))
(assert (= o98 (- o97 1)))
(assert (not (in_range2 o98)))
(check-sat)
(exit)
