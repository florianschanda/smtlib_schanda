(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun is_empty (Int) Bool)
(declare-fun is_empty__function_guard (Bool Int) Bool)
(declare-sort ptr_t 0)
(declare-fun ptr_tqtint (ptr_t) Int)
(assert (forall ((i ptr_t)) (and (<= 0 (ptr_tqtint i)) (<= (ptr_tqtint i) 100))))
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (ptr_t ptr_t) Bool)
(declare-const dummy1 ptr_t)
(declare-datatypes () ((ptr_t__ref (mk_ptr_t__ref (ptr_t__content ptr_t)))))
(define-fun ptr_t__ref___projection ((a ptr_t__ref)) ptr_t (ptr_t__content a))
(define-fun dynamic_invariant1 ((temp___expr_178 Int) (temp___is_init_174 Bool) (temp___skip_constant_175 Bool) (temp___do_toplevel_176 Bool) (temp___do_typ_inv_177 Bool)) Bool (=> (or (= temp___is_init_174 true) (<= 0 100)) (in_range1 temp___expr_178)))
(assert true)
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const v Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort index_t 0)
(declare-fun index_tqtint (index_t) Int)
(assert (forall ((i index_t)) (and (<= 1 (index_tqtint i)) (<= (index_tqtint i) 100))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (index_t index_t) Bool)
(declare-const dummy2 index_t)
(declare-datatypes () ((index_t__ref (mk_index_t__ref (index_t__content index_t)))))
(define-fun index_t__ref___projection ((a index_t__ref)) index_t (index_t__content a))
(define-fun dynamic_invariant2 ((temp___expr_171 Int) (temp___is_init_167 Bool) (temp___skip_constant_168 Bool) (temp___do_toplevel_169 Bool) (temp___do_typ_inv_170 Bool)) Bool (=> (or (= temp___is_init_167 true) (<= 1 100)) (in_range2 temp___expr_171)))
(declare-const the_stack (Array Int integer))
(declare-const the_ptr Int)
(declare-const o Int)
(declare-const o1 integer)
(declare-const o2 Int)
(declare-const o3 (Array Int integer))
(declare-const result Int)
(declare-const the_ptr1 Int)
(declare-const result1 (Array Int integer))
(declare-const the_stack1 (Array Int integer))
(declare-const the_stack2 (Array Int integer))
(declare-const the_ptr2 Int)
(declare-const the_stack3 (Array Int integer))
(declare-const the_ptr3 Int)
(assert (in_range1 the_ptr))
(assert (in_range v))
(assert (and (= o (+ the_ptr 1)) (in_range1 (+ the_ptr 1))))
(assert (= (mk_int__ref result) (mk_int__ref the_ptr)))
(assert (= the_ptr1 o))
(assert (= (to_rep o1) v))
(assert (and (<= 1 the_ptr1) (<= the_ptr1 100)))
(assert (= o2 the_ptr1))
(assert (= o3 (store the_stack o2 o1)))
(assert (= result1 the_stack))
(assert (= the_stack1 o3))
(assert (= the_ptr1 the_ptr2))
(assert (= the_stack2 the_stack1))
(assert (= the_ptr3 the_ptr1))
(assert (= the_stack3 the_stack1))
(assert (not (not (= (is_empty the_ptr2) true))))
(check-sat)
(exit)
