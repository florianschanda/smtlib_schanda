(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range f) (=> (in_range l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range low) (and (in_range high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(declare-sort field 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq4 (field field) Bool)
(declare-const dummy4 field)
(declare-datatypes () ((field__ref (mk_field__ref (field__content field)))))
(define-fun field__ref___projection ((a field__ref)) field (field__content a))
(define-fun dynamic_invariant1 ((temp___expr_534 Int) (temp___is_init_530 Bool) (temp___skip_constant_531 Bool) (temp___do_toplevel_532 Bool) (temp___do_typ_inv_533 Bool)) Bool (=> (or (= temp___is_init_530 true) (<= 0 255)) (in_range3 temp___expr_534)))
(declare-sort number_base 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 2 x) (<= x 16)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (number_base number_base) Bool)
(declare-const dummy5 number_base)
(declare-datatypes () ((number_base__ref (mk_number_base__ref (number_base__content number_base)))))
(define-fun number_base__ref___projection ((a number_base__ref)) number_base (number_base__content a))
(define-fun dynamic_invariant2 ((temp___expr_541 Int) (temp___is_init_537 Bool) (temp___skip_constant_538 Bool) (temp___do_toplevel_539 Bool) (temp___do_typ_inv_540 Bool)) Bool (=> (or (= temp___is_init_537 true) (<= 2 16)) (in_range4 temp___expr_541)))
(declare-sort type_set 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (type_set type_set) Bool)
(declare-const dummy6 type_set)
(declare-datatypes () ((type_set__ref (mk_type_set__ref (type_set__content type_set)))))
(define-fun type_set__ref___projection ((a type_set__ref)) type_set (type_set__content a))
(define-fun dynamic_invariant3 ((temp___expr_548 Int) (temp___is_init_544 Bool) (temp___skip_constant_545 Bool) (temp___do_toplevel_546 Bool) (temp___do_typ_inv_547 Bool)) Bool (=> (or (= temp___is_init_544 true) (<= 0 1)) (in_range5 temp___expr_548)))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort day_type 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 6)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (day_type day_type) Bool)
(declare-const dummy7 day_type)
(declare-datatypes () ((day_type__ref (mk_day_type__ref (day_type__content day_type)))))
(define-fun day_type__ref___projection ((a day_type__ref)) day_type (day_type__content a))
(define-fun dynamic_invariant4 ((temp___expr_589 Int) (temp___is_init_585 Bool) (temp___skip_constant_586 Bool) (temp___do_toplevel_587 Bool) (temp___do_typ_inv_588 Bool)) Bool (=> (or (= temp___is_init_585 true) (<= 0 6)) (in_range6 temp___expr_589)))
(declare-sort traffic_light_color 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq8 (traffic_light_color traffic_light_color) Bool)
(declare-const dummy8 traffic_light_color)
(declare-datatypes () ((traffic_light_color__ref (mk_traffic_light_color__ref (traffic_light_color__content traffic_light_color)))))
(define-fun traffic_light_color__ref___projection ((a traffic_light_color__ref)) traffic_light_color (traffic_light_color__content a))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort enum 0)
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 6)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq9 (enum enum) Bool)
(declare-const dummy9 enum)
(declare-datatypes () ((enum__ref (mk_enum__ref (enum__content enum)))))
(define-fun enum__ref___projection ((a enum__ref)) enum (enum__content a))
(define-fun dynamic_invariant5 ((temp___expr_610 Int) (temp___is_init_606 Bool) (temp___skip_constant_607 Bool) (temp___do_toplevel_608 Bool) (temp___do_typ_inv_609 Bool)) Bool (=> (or (= temp___is_init_606 true) (<= 0 6)) (in_range8 temp___expr_610)))
(declare-fun next_day (Int) Int)
(declare-fun next_day__function_guard (Int Int) Bool)
(assert (forall ((day Int)) (! (=> (dynamic_invariant4 day true true true true) (dynamic_invariant4 (next_day day) true false true true)) :pattern ((next_day day)))))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-fun temp___String_Literal_614 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_614 us_void_param) 1)) 87) (= (to_rep (select (temp___String_Literal_614 us_void_param) 2)) 104)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 3)) 97)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 4)) 116)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 5)) 32)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 6)) 100)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 7)) 97)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 8)) 121)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 10)) 105)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 11)) 115)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 14)) 111)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 15)) 100)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 16)) 97)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 17)) 121)) (= (to_rep (select (temp___String_Literal_614 us_void_param) 18)) 63)) :pattern ((temp___String_Literal_614 us_void_param)))))
(declare-fun temp___String_Literal_615 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_615 us_void_param) 1)) 84) (= (to_rep (select (temp___String_Literal_615 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_615 us_void_param) 3)) 109)) (= (to_rep (select (temp___String_Literal_615 us_void_param) 4)) 111)) (= (to_rep (select (temp___String_Literal_615 us_void_param) 5)) 114)) (= (to_rep (select (temp___String_Literal_615 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_615 us_void_param) 7)) 111)) (= (to_rep (select (temp___String_Literal_615 us_void_param) 8)) 119)) (= (to_rep (select (temp___String_Literal_615 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_615 us_void_param) 10)) 105)) (= (to_rep (select (temp___String_Literal_615 us_void_param) 11)) 115)) (= (to_rep (select (temp___String_Literal_615 us_void_param) 12)) 32)) :pattern ((temp___String_Literal_615 us_void_param)))))
(declare-fun temp___String_Literal_616 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_616 us_void_param) 1)) 84) (= (to_rep (select (temp___String_Literal_616 us_void_param) 2)) 111)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 3)) 100)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 4)) 97)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 5)) 121)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 6)) 32)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 7)) 109)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 8)) 117)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 9)) 115)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 10)) 116)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 11)) 32)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 12)) 98)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 13)) 101)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 15)) 83)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 16)) 117)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 17)) 110)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 18)) 100)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 19)) 97)) (= (to_rep (select (temp___String_Literal_616 us_void_param) 20)) 121)) :pattern ((temp___String_Literal_616 us_void_param)))))
(declare-fun temp___String_Literal_617 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_617 us_void_param) 1)) 84) (= (to_rep (select (temp___String_Literal_617 us_void_param) 2)) 104)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 3)) 101)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 4)) 32)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 5)) 119)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 6)) 101)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 7)) 101)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 8)) 107)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 9)) 32)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 10)) 100)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 11)) 97)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 12)) 121)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 13)) 115)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 14)) 32)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 15)) 97)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 16)) 114)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 17)) 101)) (= (to_rep (select (temp___String_Literal_617 us_void_param) 18)) 32)) :pattern ((temp___String_Literal_617 us_void_param)))))
(define-fun dynamic_invariant6 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range1 temp___expr_46)))
(define-fun dynamic_invariant7 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range2 temp___expr_74)))
(define-fun dynamic_invariant8 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant9 ((temp___expr_596 Int) (temp___is_init_592 Bool) (temp___skip_constant_593 Bool) (temp___do_toplevel_594 Bool) (temp___do_typ_inv_595 Bool)) Bool (=> (or (= temp___is_init_592 true) (<= 0 2)) (in_range7 temp___expr_596)))
(declare-const default_base Int)
(declare-const default_width Int)
(declare-const default_setting Int)
(declare-const today Int)
(declare-const tomorrow Int)
(declare-const count Int)
(declare-const day Int)
(declare-const color Int)
(declare-const color1 Int)
(declare-const o Int)
(declare-const enum_example__day_io__get__2__item Int)
(declare-const result Int)
(declare-const today1 Int)
(declare-const result1 Int)
(declare-const tomorrow1 Int)
(declare-const result2 Int)
(declare-const day1 Int)
(declare-const result3 Int)
(declare-const day2 Int)
(declare-const result4 Int)
(declare-const day3 Int)
(declare-const result5 Int)
(declare-const day4 Int)
(declare-const result6 Int)
(declare-const day5 Int)
(declare-const result7 Int)
(declare-const color2 Int)
(declare-const result8 Int)
(declare-const color3 Int)
(declare-const result9 Int)
(declare-const color4 Int)
(declare-const result10 Int)
(declare-const count1 Int)
(declare-const result11 Int)
(declare-const color5 Int)
(assert (in_range4 default_base))
(assert (in_range3 default_width))
(assert (in_range5 default_setting))
(assert (=> (<= 0 6) (in_range6 today)))
(assert (=> (<= 0 6) (in_range6 tomorrow)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range count)))
(assert (in_range8 enum_example__day_io__get__2__item))
(assert (= result today))
(assert (= today1 enum_example__day_io__get__2__item))
(assert (and (= o (next_day today1)) (in_range6 o)))
(assert (= result1 tomorrow))
(assert (= tomorrow1 o))
(assert (= result2 day))
(assert (= day1 0))
(assert (= result3 day1))
(assert (= day2 1))
(assert (= result4 day2))
(assert (= day3 2))
(assert (= result5 day3))
(assert (= day4 3))
(assert (= result6 day4))
(assert (= day5 4))
(assert (= result7 color))
(assert (= color2 0))
(assert (= result8 color2))
(assert (= color3 1))
(assert (= result9 color3))
(assert (= color4 2))
(assert (= result10 count))
(assert (= count1 0))
(assert (= result11 color1))
(assert (= color5 0))
(assert (not (in_range (+ count1 1))))
(check-sat)
(exit)
