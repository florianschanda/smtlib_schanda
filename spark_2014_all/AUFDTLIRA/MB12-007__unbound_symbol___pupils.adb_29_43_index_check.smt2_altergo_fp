(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type percentage

predicate in_range1(x: int) = ((0 <= x) and (x <= 100))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : percentage, percentage -> bool

logic dummy : percentage

type percentage__ref = { percentage__content : percentage
}

function percentage__ref___projection(a: percentage__ref) : percentage =
  (a).percentage__content

logic to_rep : percentage -> int

logic of_rep : int -> percentage

axiom inversion_axiom :
  (forall x:percentage [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:percentage [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type us_split_fields = { rec__pupils__participation__studying : bool;
rec__pupils__participation__score : percentage
}

function us_split_fields_Studying__projection(a: us_split_fields) : bool =
  (a).rec__pupils__participation__studying

function us_split_fields_Score__projection(a: us_split_fields) : percentage =
  (a).rec__pupils__participation__score

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq3 : us_rep, us_rep -> bool

axiom bool_eq_def2 :
  (forall a:us_rep. forall b:us_rep [bool_eq3(a, b)].
  ((((((a).us_split_fields1).rec__pupils__participation__studying = ((b).us_split_fields1).rec__pupils__participation__studying) and
  (to_rep(((a).us_split_fields1).rec__pupils__participation__score) = to_rep(((b).us_split_fields1).rec__pupils__participation__score))) ->
  (bool_eq3(a, b) = true)) and
  ((not ((((a).us_split_fields1).rec__pupils__participation__studying = ((b).us_split_fields1).rec__pupils__participation__studying) and
  (to_rep(((a).us_split_fields1).rec__pupils__participation__score) = to_rep(((b).us_split_fields1).rec__pupils__participation__score)))) ->
  (bool_eq3(a, b) = false))))

logic value__size : int

logic object__size : us_rep -> int

logic value__alignment : int

logic object__alignment : us_rep -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:bool. forall a1:percentage. (0 <= object__size({
  us_split_fields1 = { rec__pupils__participation__studying = a;
  rec__pupils__participation__score = a1 } })))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:bool. forall a1:percentage. (0 <= object__alignment({
  us_split_fields1 = { rec__pupils__participation__studying = a;
  rec__pupils__participation__score = a1 } })))

logic pupils__participation__studying__first__bit : int

logic pupils__participation__studying__last__bit : int

logic pupils__participation__studying__position : int

axiom pupils__participation__studying__first__bit_axiom :
  (0 <= pupils__participation__studying__first__bit)

axiom pupils__participation__studying__last__bit_axiom :
  (pupils__participation__studying__first__bit <  pupils__participation__studying__last__bit)

axiom pupils__participation__studying__position_axiom :
  (0 <= pupils__participation__studying__position)

logic pupils__participation__score__first__bit : int

logic pupils__participation__score__last__bit : int

logic pupils__participation__score__position : int

axiom pupils__participation__score__first__bit_axiom :
  (0 <= pupils__participation__score__first__bit)

axiom pupils__participation__score__last__bit_axiom :
  (pupils__participation__score__first__bit <  pupils__participation__score__last__bit)

axiom pupils__participation__score__position_axiom :
  (0 <= pupils__participation__score__position)

logic user_eq1 : us_rep, us_rep -> bool

logic dummy1 : bool

logic dummy2 : percentage

type participation__ref = { participation__content : us_rep
}

function participation__ref___projection(a: participation__ref) : us_rep =
  (a).participation__content

type subject

predicate in_range2(x: int) = ((0 <= x) and (x <= 18))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : subject, subject -> bool

logic dummy3 : subject

type subject__ref = { subject__content : subject
}

function subject__ref___projection(a: subject__ref) : subject =
  (a).subject__content

logic to_rep1 : subject -> int

logic of_rep1 : int -> subject

axiom inversion_axiom1 :
  (forall x:subject [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:subject [to_rep1(x)]. in_range2(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range2(x) ->
  (to_rep1(of_rep1(x)) = x)))

type map__ref = { map__content : (int,us_rep) farray
}

logic slide : (int,us_rep) farray, int, int -> (int,us_rep) farray

axiom slide_eq :
  (forall a:(int,us_rep) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,us_rep) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq5 : (int,us_rep) farray, int, int, (int,us_rep) farray, int,
  int -> bool

axiom bool_eq_def4 :
  (forall a:(int,us_rep) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_154:int. ((((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) and (bool_eq3((a[temp___idx_154]),
  (b[((b__first - a__first) + temp___idx_154)])) = true)) or
  (not ((a__first <= temp___idx_154) and (temp___idx_154 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) -> (bool_eq3((a[temp___idx_154]),
  (b[((b__first - a__first) + temp___idx_154)])) = true))))) -> (bool_eq5(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,us_rep) farray. forall b:(int,us_rep) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) -> (bool_eq3((a[temp___idx_154]),
  (b[((b__first - a__first) + temp___idx_154)])) = true)))))))

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq3 : character, character -> bool

logic dummy4 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep2 : character -> int

logic of_rep2 : int -> character

axiom inversion_axiom2 :
  (forall x:character [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:character [to_rep2(x)]. in_range3(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range3(x) ->
  (to_rep2(of_rep2(x)) = x)))

type map__ref1 = { map__content1 : (int,character) farray
}

logic slide1 : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq1 :
  (forall a:(int,character) farray.
  (forall first:int [slide1(a, first, first)]. (slide1(a, first, first) = a)))

axiom slide_def1 :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq7 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def6 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq7(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_91:int. ((((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) and
  (to_rep2((a[temp___idx_91])) = to_rep2((b[((b__first - a__first) + temp___idx_91)])))) or
  (not ((a__first <= temp___idx_91) and (temp___idx_91 <= a__last)))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep2((a[temp___idx_91])) = to_rep2((b[((b__first - a__first) + temp___idx_91)]))))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep2((a[temp___idx_91])) = to_rep2((b[((b__first - a__first) + temp___idx_91)])))))))))

type formtype

predicate in_range4(x: int) = ((0 <= x) and (x <= 8))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : formtype, formtype -> bool

logic dummy5 : formtype

type formtype__ref = { formtype__content : formtype
}

function formtype__ref___projection(a: formtype__ref) : formtype =
  (a).formtype__content

logic to_rep3 : formtype -> int

logic of_rep3 : int -> formtype

axiom inversion_axiom3 :
  (forall x:formtype [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 : (forall x:formtype [to_rep3(x)]. in_range4(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range4(x) ->
  (to_rep3(of_rep3(x)) = x)))

logic dummy6 : (int,us_rep) farray

logic value__size1 : int

logic object__size1 : (int,us_rep) farray -> int

logic value__component__size : int

logic object__component__size : (int,us_rep) farray -> int

logic value__alignment1 : int

logic object__alignment1 : (int,us_rep) farray -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:(int,us_rep) farray. (0 <= object__size1(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,us_rep) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:(int,us_rep) farray. (0 <= object__alignment1(a)))

logic user_eq5 : (int,us_rep) farray, (int,us_rep) farray -> bool

logic dummy7 : (int,character) farray

logic value__size2 : int

logic object__size2 : (int,character) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,character) farray -> int

logic value__alignment2 : int

logic object__alignment2 : (int,character) farray -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:(int,character) farray. (0 <= object__size2(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,character) farray. (0 <= object__component__size1(a)))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:(int,character) farray. (0 <= object__alignment2(a)))

logic user_eq6 : (int,character) farray, (int,character) farray -> bool

type us_split_fields2 = { rec__pupils__pupiltype__surname :
(int,character) farray; rec__pupils__pupiltype__forename :
(int,character) farray; rec__pupils__pupiltype__form : formtype;
rec__pupils__pupiltype__scores : (int,us_rep) farray
}

function us_split_fields_Surname__projection(a: us_split_fields2) : (int,character) farray =
  (a).rec__pupils__pupiltype__surname

function us_split_fields_Forename__projection(a: us_split_fields2) : (int,character) farray =
  (a).rec__pupils__pupiltype__forename

function us_split_fields_Form__projection(a: us_split_fields2) : formtype =
  (a).rec__pupils__pupiltype__form

function us_split_fields_Scores__projection(a: us_split_fields2) : (int,us_rep) farray =
  (a).rec__pupils__pupiltype__scores

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2
}

function us_rep___2__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

logic bool_eq9 : us_rep1, us_rep1 -> bool

axiom bool_eq_def8 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq9(a, b)].
  ((((((bool_eq7(((a).us_split_fields3).rec__pupils__pupiltype__surname, 1,
  25, ((b).us_split_fields3).rec__pupils__pupiltype__surname, 1,
  25) = true) and
  (bool_eq7(((a).us_split_fields3).rec__pupils__pupiltype__forename, 1, 25,
  ((b).us_split_fields3).rec__pupils__pupiltype__forename, 1,
  25) = true)) and
  (to_rep3(((a).us_split_fields3).rec__pupils__pupiltype__form) = to_rep3(((b).us_split_fields3).rec__pupils__pupiltype__form))) and
  (bool_eq5(((a).us_split_fields3).rec__pupils__pupiltype__scores, 0, 18,
  ((b).us_split_fields3).rec__pupils__pupiltype__scores, 0, 18) = true)) ->
  (bool_eq9(a, b) = true)) and
  ((not ((((bool_eq7(((a).us_split_fields3).rec__pupils__pupiltype__surname,
  1, 25, ((b).us_split_fields3).rec__pupils__pupiltype__surname, 1,
  25) = true) and
  (bool_eq7(((a).us_split_fields3).rec__pupils__pupiltype__forename, 1, 25,
  ((b).us_split_fields3).rec__pupils__pupiltype__forename, 1,
  25) = true)) and
  (to_rep3(((a).us_split_fields3).rec__pupils__pupiltype__form) = to_rep3(((b).us_split_fields3).rec__pupils__pupiltype__form))) and
  (bool_eq5(((a).us_split_fields3).rec__pupils__pupiltype__scores, 0, 18,
  ((b).us_split_fields3).rec__pupils__pupiltype__scores, 0, 18) = true))) ->
  (bool_eq9(a, b) = false))))

logic value__size3 : int

logic object__size3 : us_rep1 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep1 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:(int,character) farray. forall a1:(int,character) farray.
  forall a2:formtype. forall a3:(int,us_rep) farray. (0 <= object__size3({
  us_split_fields3 = { rec__pupils__pupiltype__surname = a;
  rec__pupils__pupiltype__forename = a1; rec__pupils__pupiltype__form = a2;
  rec__pupils__pupiltype__scores = a3 } })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:(int,character) farray. forall a1:(int,character) farray.
  forall a2:formtype. forall a3:(int,us_rep) farray.
  (0 <= object__alignment3({ us_split_fields3 = {
  rec__pupils__pupiltype__surname = a; rec__pupils__pupiltype__forename = a1;
  rec__pupils__pupiltype__form = a2; rec__pupils__pupiltype__scores = a3 }
  })))

logic pupils__pupiltype__surname__first__bit : int

logic pupils__pupiltype__surname__last__bit : int

logic pupils__pupiltype__surname__position : int

axiom pupils__pupiltype__surname__first__bit_axiom :
  (0 <= pupils__pupiltype__surname__first__bit)

axiom pupils__pupiltype__surname__last__bit_axiom :
  (pupils__pupiltype__surname__first__bit <  pupils__pupiltype__surname__last__bit)

axiom pupils__pupiltype__surname__position_axiom :
  (0 <= pupils__pupiltype__surname__position)

logic pupils__pupiltype__forename__first__bit : int

logic pupils__pupiltype__forename__last__bit : int

logic pupils__pupiltype__forename__position : int

axiom pupils__pupiltype__forename__first__bit_axiom :
  (0 <= pupils__pupiltype__forename__first__bit)

axiom pupils__pupiltype__forename__last__bit_axiom :
  (pupils__pupiltype__forename__first__bit <  pupils__pupiltype__forename__last__bit)

axiom pupils__pupiltype__forename__position_axiom :
  (0 <= pupils__pupiltype__forename__position)

logic pupils__pupiltype__form__first__bit : int

logic pupils__pupiltype__form__last__bit : int

logic pupils__pupiltype__form__position : int

axiom pupils__pupiltype__form__first__bit_axiom :
  (0 <= pupils__pupiltype__form__first__bit)

axiom pupils__pupiltype__form__last__bit_axiom :
  (pupils__pupiltype__form__first__bit <  pupils__pupiltype__form__last__bit)

axiom pupils__pupiltype__form__position_axiom :
  (0 <= pupils__pupiltype__form__position)

logic pupils__pupiltype__scores__first__bit : int

logic pupils__pupiltype__scores__last__bit : int

logic pupils__pupiltype__scores__position : int

axiom pupils__pupiltype__scores__first__bit_axiom :
  (0 <= pupils__pupiltype__scores__first__bit)

axiom pupils__pupiltype__scores__last__bit_axiom :
  (pupils__pupiltype__scores__first__bit <  pupils__pupiltype__scores__last__bit)

axiom pupils__pupiltype__scores__position_axiom :
  (0 <= pupils__pupiltype__scores__position)

logic user_eq7 : us_rep1, us_rep1 -> bool

logic dummy8 : (int,character) farray

logic dummy9 : (int,character) farray

logic dummy10 : formtype

logic dummy11 : (int,us_rep) farray

type pupiltype__ref = { pupiltype__content : us_rep1
}

function pupiltype__ref___projection(a: pupiltype__ref) : us_rep1 =
  (a).pupiltype__content

type pupilnumbers

predicate in_range5(x: int) = ((0 <= x) and (x <= 250))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq8 : pupilnumbers, pupilnumbers -> bool

logic dummy12 : pupilnumbers

type pupilnumbers__ref = { pupilnumbers__content : pupilnumbers
}

function pupilnumbers__ref___projection(a: pupilnumbers__ref) : pupilnumbers =
  (a).pupilnumbers__content

logic to_rep4 : pupilnumbers -> int

logic of_rep4 : int -> pupilnumbers

axiom inversion_axiom4 :
  (forall x:pupilnumbers [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 :
  (forall x:pupilnumbers [to_rep4(x)]. in_range5(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range5(x) ->
  (to_rep4(of_rep4(x)) = x)))

type pupilindex

predicate in_range6(x: int) = ((1 <= x) and (x <= 250))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq9 : pupilindex, pupilindex -> bool

logic dummy13 : pupilindex

type pupilindex__ref = { pupilindex__content : pupilindex
}

function pupilindex__ref___projection(a: pupilindex__ref) : pupilindex =
  (a).pupilindex__content

type map__ref2 = { map__content2 : (int,us_rep1) farray
}

logic slide2 : (int,us_rep1) farray, int, int -> (int,us_rep1) farray

axiom slide_eq2 :
  (forall a:(int,us_rep1) farray.
  (forall first:int [slide2(a, first, first)]. (slide2(a, first, first) = a)))

axiom slide_def2 :
  (forall a:(int,us_rep1) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq12 : (int,us_rep1) farray, int, int, (int,us_rep1) farray, int,
  int -> bool

axiom bool_eq_def11 :
  (forall a:(int,us_rep1) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep1) farray. forall b__first:int. forall b__last:int
  [bool_eq12(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_161:int. ((((a__first <= temp___idx_161) and
  (temp___idx_161 <= a__last)) and (bool_eq9((a[temp___idx_161]),
  (b[((b__first - a__first) + temp___idx_161)])) = true)) or
  (not ((a__first <= temp___idx_161) and (temp___idx_161 <= a__last)))))) ->
  (bool_eq12(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_161:int. (((a__first <= temp___idx_161) and
  (temp___idx_161 <= a__last)) -> (bool_eq9((a[temp___idx_161]),
  (b[((b__first - a__first) + temp___idx_161)])) = true))))) -> (bool_eq12(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev2 :
  (forall a:(int,us_rep1) farray. forall b:(int,us_rep1) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq12(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_161:int. (((a__first <= temp___idx_161) and
  (temp___idx_161 <= a__last)) -> (bool_eq9((a[temp___idx_161]),
  (b[((b__first - a__first) + temp___idx_161)])) = true)))))))

logic dummy14 : (int,us_rep1) farray

logic value__size4 : int

logic object__size4 : (int,us_rep1) farray -> int

logic value__component__size2 : int

logic object__component__size2 : (int,us_rep1) farray -> int

logic value__alignment4 : int

logic object__alignment4 : (int,us_rep1) farray -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:(int,us_rep1) farray. (0 <= object__size4(a)))

axiom value__component__size_axiom2 : (0 <= value__component__size2)

axiom object__component__size_axiom2 :
  (forall a:(int,us_rep1) farray. (0 <= object__component__size2(a)))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:(int,us_rep1) farray. (0 <= object__alignment4(a)))

logic user_eq10 : (int,us_rep1) farray, (int,us_rep1) farray -> bool

type us_split_fields4 = { rec__pupils__pupildata__numberofpupils :
pupilnumbers; rec__pupils__pupildata__pupilentries : (int,us_rep1) farray
}

function us_split_fields_NumberOfPupils__projection(a: us_split_fields4) : pupilnumbers =
  (a).rec__pupils__pupildata__numberofpupils

function us_split_fields_PupilEntries__projection(a: us_split_fields4) : (int,us_rep1) farray =
  (a).rec__pupils__pupildata__pupilentries

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___3__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_fields5 : us_split_fields4
}

function us_rep___3__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

logic bool_eq13 : us_rep2, us_rep2 -> bool

axiom bool_eq_def12 :
  (forall a:us_rep2. forall b:us_rep2 [bool_eq13(a, b)].
  ((((to_rep4(((a).us_split_fields5).rec__pupils__pupildata__numberofpupils) = to_rep4(((b).us_split_fields5).rec__pupils__pupildata__numberofpupils)) and
  (bool_eq12(((a).us_split_fields5).rec__pupils__pupildata__pupilentries, 1,
  250, ((b).us_split_fields5).rec__pupils__pupildata__pupilentries, 1,
  250) = true)) -> (bool_eq13(a, b) = true)) and
  ((not ((to_rep4(((a).us_split_fields5).rec__pupils__pupildata__numberofpupils) = to_rep4(((b).us_split_fields5).rec__pupils__pupildata__numberofpupils)) and
  (bool_eq12(((a).us_split_fields5).rec__pupils__pupildata__pupilentries, 1,
  250, ((b).us_split_fields5).rec__pupils__pupildata__pupilentries, 1,
  250) = true))) -> (bool_eq13(a, b) = false))))

logic value__size5 : int

logic object__size5 : us_rep2 -> int

logic value__alignment5 : int

logic object__alignment5 : us_rep2 -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 :
  (forall a:pupilnumbers. forall a1:(int,us_rep1) farray.
  (0 <= object__size5({ us_split_fields5 = {
  rec__pupils__pupildata__numberofpupils = a;
  rec__pupils__pupildata__pupilentries = a1 } })))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:pupilnumbers. forall a1:(int,us_rep1) farray.
  (0 <= object__alignment5({ us_split_fields5 = {
  rec__pupils__pupildata__numberofpupils = a;
  rec__pupils__pupildata__pupilentries = a1 } })))

logic pupils__pupildata__numberofpupils__first__bit : int

logic pupils__pupildata__numberofpupils__last__bit : int

logic pupils__pupildata__numberofpupils__position : int

axiom pupils__pupildata__numberofpupils__first__bit_axiom :
  (0 <= pupils__pupildata__numberofpupils__first__bit)

axiom pupils__pupildata__numberofpupils__last__bit_axiom :
  (pupils__pupildata__numberofpupils__first__bit <  pupils__pupildata__numberofpupils__last__bit)

axiom pupils__pupildata__numberofpupils__position_axiom :
  (0 <= pupils__pupildata__numberofpupils__position)

logic pupils__pupildata__pupilentries__first__bit : int

logic pupils__pupildata__pupilentries__last__bit : int

logic pupils__pupildata__pupilentries__position : int

axiom pupils__pupildata__pupilentries__first__bit_axiom :
  (0 <= pupils__pupildata__pupilentries__first__bit)

axiom pupils__pupildata__pupilentries__last__bit_axiom :
  (pupils__pupildata__pupilentries__first__bit <  pupils__pupildata__pupilentries__last__bit)

axiom pupils__pupildata__pupilentries__position_axiom :
  (0 <= pupils__pupildata__pupilentries__position)

logic user_eq11 : us_rep2, us_rep2 -> bool

logic dummy15 : pupilnumbers

logic dummy16 : (int,us_rep1) farray

type pupildata__ref = { pupildata__content : us_rep2
}

function pupildata__ref___projection(a: pupildata__ref) : us_rep2 =
  (a).pupildata__content

type map__ref3 = { map__content3 : (int,subject) farray
}

logic slide3 : (int,subject) farray, int, int -> (int,subject) farray

axiom slide_eq3 :
  (forall a:(int,subject) farray.
  (forall first:int [slide3(a, first, first)]. (slide3(a, first, first) = a)))

axiom slide_def3 :
  (forall a:(int,subject) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide3(a, old_first, new_first)[i])]. ((slide3(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq14 : (int,subject) farray, int, int, (int,subject) farray, int,
  int -> bool

axiom bool_eq_def13 :
  (forall a:(int,subject) farray. forall a__first:int. forall a__last:int.
  forall b:(int,subject) farray. forall b__first:int. forall b__last:int
  [bool_eq14(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_166:int. ((((a__first <= temp___idx_166) and
  (temp___idx_166 <= a__last)) and
  (to_rep1((a[temp___idx_166])) = to_rep1((b[((b__first - a__first) + temp___idx_166)])))) or
  (not ((a__first <= temp___idx_166) and (temp___idx_166 <= a__last)))))) ->
  (bool_eq14(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_166:int. (((a__first <= temp___idx_166) and
  (temp___idx_166 <= a__last)) ->
  (to_rep1((a[temp___idx_166])) = to_rep1((b[((b__first - a__first) + temp___idx_166)]))))))) ->
  (bool_eq14(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev3 :
  (forall a:(int,subject) farray. forall b:(int,subject) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq14(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_166:int. (((a__first <= temp___idx_166) and
  (temp___idx_166 <= a__last)) ->
  (to_rep1((a[temp___idx_166])) = to_rep1((b[((b__first - a__first) + temp___idx_166)])))))))))

type us_split_fields6 = { rec__pupils__subject_score_pair__subj : subject;
rec__pupils__subject_score_pair__score : percentage
}

function us_split_fields_Subj__projection(a: us_split_fields6) : subject =
  (a).rec__pupils__subject_score_pair__subj

function us_split_fields_Score__2__projection(a: us_split_fields6) : percentage =
  (a).rec__pupils__subject_score_pair__score

type us_split_fields__ref3 = { us_split_fields__content3 : us_split_fields6
}

function us_split_fields__ref___4__projection(a: us_split_fields__ref3) : us_split_fields6 =
  (a).us_split_fields__content3

type us_rep3 = { us_split_fields7 : us_split_fields6
}

function us_rep___4__projection(a: us_rep3) : us_split_fields6 =
  (a).us_split_fields7

logic bool_eq15 : us_rep3, us_rep3 -> bool

axiom bool_eq_def14 :
  (forall a:us_rep3. forall b:us_rep3 [bool_eq15(a, b)].
  ((((to_rep1(((a).us_split_fields7).rec__pupils__subject_score_pair__subj) = to_rep1(((b).us_split_fields7).rec__pupils__subject_score_pair__subj)) and
  (to_rep(((a).us_split_fields7).rec__pupils__subject_score_pair__score) = to_rep(((b).us_split_fields7).rec__pupils__subject_score_pair__score))) ->
  (bool_eq15(a, b) = true)) and
  ((not ((to_rep1(((a).us_split_fields7).rec__pupils__subject_score_pair__subj) = to_rep1(((b).us_split_fields7).rec__pupils__subject_score_pair__subj)) and
  (to_rep(((a).us_split_fields7).rec__pupils__subject_score_pair__score) = to_rep(((b).us_split_fields7).rec__pupils__subject_score_pair__score)))) ->
  (bool_eq15(a, b) = false))))

logic value__size6 : int

logic object__size6 : us_rep3 -> int

logic value__alignment6 : int

logic object__alignment6 : us_rep3 -> int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 :
  (forall a:subject. forall a1:percentage. (0 <= object__size6({
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = a;
  rec__pupils__subject_score_pair__score = a1 } })))

axiom value__alignment_axiom6 : (0 <= value__alignment6)

axiom object__alignment_axiom6 :
  (forall a:subject. forall a1:percentage. (0 <= object__alignment6({
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = a;
  rec__pupils__subject_score_pair__score = a1 } })))

logic pupils__subject_score_pair__subj__first__bit : int

logic pupils__subject_score_pair__subj__last__bit : int

logic pupils__subject_score_pair__subj__position : int

axiom pupils__subject_score_pair__subj__first__bit_axiom :
  (0 <= pupils__subject_score_pair__subj__first__bit)

axiom pupils__subject_score_pair__subj__last__bit_axiom :
  (pupils__subject_score_pair__subj__first__bit <  pupils__subject_score_pair__subj__last__bit)

axiom pupils__subject_score_pair__subj__position_axiom :
  (0 <= pupils__subject_score_pair__subj__position)

logic pupils__subject_score_pair__score__first__bit : int

logic pupils__subject_score_pair__score__last__bit : int

logic pupils__subject_score_pair__score__position : int

axiom pupils__subject_score_pair__score__first__bit_axiom :
  (0 <= pupils__subject_score_pair__score__first__bit)

axiom pupils__subject_score_pair__score__last__bit_axiom :
  (pupils__subject_score_pair__score__first__bit <  pupils__subject_score_pair__score__last__bit)

axiom pupils__subject_score_pair__score__position_axiom :
  (0 <= pupils__subject_score_pair__score__position)

logic user_eq12 : us_rep3, us_rep3 -> bool

logic dummy17 : subject

logic dummy18 : percentage

type subject_score_pair__ref = { subject_score_pair__content : us_rep3
}

function subject_score_pair__ref___projection(a: subject_score_pair__ref) : us_rep3 =
  (a).subject_score_pair__content

type map__ref4 = { map__content4 : (int,us_rep3) farray
}

logic slide4 : (int,us_rep3) farray, int, int -> (int,us_rep3) farray

axiom slide_eq4 :
  (forall a:(int,us_rep3) farray.
  (forall first:int [slide4(a, first, first)]. (slide4(a, first, first) = a)))

axiom slide_def4 :
  (forall a:(int,us_rep3) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide4(a, old_first, new_first)[i])]. ((slide4(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq16 : (int,us_rep3) farray, int, int, (int,us_rep3) farray, int,
  int -> bool

axiom bool_eq_def15 :
  (forall a:(int,us_rep3) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep3) farray. forall b__first:int. forall b__last:int
  [bool_eq16(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_167:int. ((((a__first <= temp___idx_167) and
  (temp___idx_167 <= a__last)) and (bool_eq15((a[temp___idx_167]),
  (b[((b__first - a__first) + temp___idx_167)])) = true)) or
  (not ((a__first <= temp___idx_167) and (temp___idx_167 <= a__last)))))) ->
  (bool_eq16(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_167:int. (((a__first <= temp___idx_167) and
  (temp___idx_167 <= a__last)) -> (bool_eq15((a[temp___idx_167]),
  (b[((b__first - a__first) + temp___idx_167)])) = true))))) -> (bool_eq16(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev4 :
  (forall a:(int,us_rep3) farray. forall b:(int,us_rep3) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq16(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_167:int. (((a__first <= temp___idx_167) and
  (temp___idx_167 <= a__last)) -> (bool_eq15((a[temp___idx_167]),
  (b[((b__first - a__first) + temp___idx_167)])) = true)))))))

logic sname : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS : int

logic fname : (int,character) farray

logic attr__ATTRIBUTE_ADDRESS1 : int

logic fm : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic subj0 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic score0 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic subj1 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic score1 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic subj2 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic score2 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic subj3 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic score3 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic subj4 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic score4 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic subj5 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic score5 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

logic subj6 : int

logic attr__ATTRIBUTE_ADDRESS15 : int

logic score6 : int

logic attr__ATTRIBUTE_ADDRESS16 : int

logic subj7 : int

logic attr__ATTRIBUTE_ADDRESS17 : int

logic score7 : int

logic attr__ATTRIBUTE_ADDRESS18 : int

logic subj8 : int

logic attr__ATTRIBUTE_ADDRESS19 : int

logic score8 : int

logic attr__ATTRIBUTE_ADDRESS20 : int

logic subj9 : int

logic attr__ATTRIBUTE_ADDRESS21 : int

logic score9 : int

logic attr__ATTRIBUTE_ADDRESS22 : int

logic attr__ATTRIBUTE_ADDRESS23 : int

logic attr__ATTRIBUTE_ADDRESS24 : int

logic attr__ATTRIBUTE_ADDRESS25 : int

logic attr__ATTRIBUTE_ADDRESS26 : int

logic temp___348 : int, int, int, int, int, int, int, int, int,
  int -> (int,subject) farray

logic temp___362 : int, int, int, int, int, int, int, int, int,
  int -> (int,subject) farray

logic temp___376 : int, int, int, int, int, int, int, int, int,
  int -> (int,subject) farray

logic temp___391 : (int,us_rep) farray, int, us_rep, int, us_rep, int,
  us_rep, int, us_rep, int, us_rep, int, us_rep, int, us_rep, int, us_rep,
  int, us_rep, int, us_rep -> (int,us_rep) farray

logic temp___427 : us_rep3, us_rep3, us_rep3, us_rep3, us_rep3, us_rep3,
  us_rep3, us_rep3, us_rep3, us_rep3 -> (int,us_rep3) farray

axiom def_axiom :
  (forall temp___429:subject. forall temp___4291:percentage.
  forall temp___430:subject. forall temp___4301:percentage.
  forall temp___431:subject. forall temp___4311:percentage.
  forall temp___432:subject. forall temp___4321:percentage.
  forall temp___433:subject. forall temp___4331:percentage.
  forall temp___434:subject. forall temp___4341:percentage.
  forall temp___435:subject. forall temp___4351:percentage.
  forall temp___436:subject. forall temp___4361:percentage.
  forall temp___437:subject. forall temp___4371:percentage.
  forall temp___438:subject. forall temp___4381:percentage.
  (((((((((((temp___427({ us_split_fields7 = {
  rec__pupils__subject_score_pair__subj = temp___429;
  rec__pupils__subject_score_pair__score = temp___4291 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___430;
  rec__pupils__subject_score_pair__score = temp___4301 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___431;
  rec__pupils__subject_score_pair__score = temp___4311 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___432;
  rec__pupils__subject_score_pair__score = temp___4321 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___433;
  rec__pupils__subject_score_pair__score = temp___4331 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___434;
  rec__pupils__subject_score_pair__score = temp___4341 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___435;
  rec__pupils__subject_score_pair__score = temp___4351 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___436;
  rec__pupils__subject_score_pair__score = temp___4361 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___437;
  rec__pupils__subject_score_pair__score = temp___4371 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___438;
  rec__pupils__subject_score_pair__score = temp___4381 } })[0]) = {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___429;
  rec__pupils__subject_score_pair__score = temp___4291 } }) and
  ((temp___427({ us_split_fields7 = { rec__pupils__subject_score_pair__subj =
  temp___429; rec__pupils__subject_score_pair__score = temp___4291 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___430;
  rec__pupils__subject_score_pair__score = temp___4301 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___431;
  rec__pupils__subject_score_pair__score = temp___4311 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___432;
  rec__pupils__subject_score_pair__score = temp___4321 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___433;
  rec__pupils__subject_score_pair__score = temp___4331 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___434;
  rec__pupils__subject_score_pair__score = temp___4341 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___435;
  rec__pupils__subject_score_pair__score = temp___4351 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___436;
  rec__pupils__subject_score_pair__score = temp___4361 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___437;
  rec__pupils__subject_score_pair__score = temp___4371 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___438;
  rec__pupils__subject_score_pair__score = temp___4381 } })[1]) = {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___430;
  rec__pupils__subject_score_pair__score = temp___4301 } })) and
  ((temp___427({ us_split_fields7 = { rec__pupils__subject_score_pair__subj =
  temp___429; rec__pupils__subject_score_pair__score = temp___4291 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___430;
  rec__pupils__subject_score_pair__score = temp___4301 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___431;
  rec__pupils__subject_score_pair__score = temp___4311 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___432;
  rec__pupils__subject_score_pair__score = temp___4321 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___433;
  rec__pupils__subject_score_pair__score = temp___4331 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___434;
  rec__pupils__subject_score_pair__score = temp___4341 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___435;
  rec__pupils__subject_score_pair__score = temp___4351 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___436;
  rec__pupils__subject_score_pair__score = temp___4361 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___437;
  rec__pupils__subject_score_pair__score = temp___4371 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___438;
  rec__pupils__subject_score_pair__score = temp___4381 } })[2]) = {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___431;
  rec__pupils__subject_score_pair__score = temp___4311 } })) and
  ((temp___427({ us_split_fields7 = { rec__pupils__subject_score_pair__subj =
  temp___429; rec__pupils__subject_score_pair__score = temp___4291 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___430;
  rec__pupils__subject_score_pair__score = temp___4301 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___431;
  rec__pupils__subject_score_pair__score = temp___4311 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___432;
  rec__pupils__subject_score_pair__score = temp___4321 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___433;
  rec__pupils__subject_score_pair__score = temp___4331 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___434;
  rec__pupils__subject_score_pair__score = temp___4341 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___435;
  rec__pupils__subject_score_pair__score = temp___4351 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___436;
  rec__pupils__subject_score_pair__score = temp___4361 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___437;
  rec__pupils__subject_score_pair__score = temp___4371 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___438;
  rec__pupils__subject_score_pair__score = temp___4381 } })[3]) = {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___432;
  rec__pupils__subject_score_pair__score = temp___4321 } })) and
  ((temp___427({ us_split_fields7 = { rec__pupils__subject_score_pair__subj =
  temp___429; rec__pupils__subject_score_pair__score = temp___4291 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___430;
  rec__pupils__subject_score_pair__score = temp___4301 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___431;
  rec__pupils__subject_score_pair__score = temp___4311 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___432;
  rec__pupils__subject_score_pair__score = temp___4321 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___433;
  rec__pupils__subject_score_pair__score = temp___4331 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___434;
  rec__pupils__subject_score_pair__score = temp___4341 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___435;
  rec__pupils__subject_score_pair__score = temp___4351 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___436;
  rec__pupils__subject_score_pair__score = temp___4361 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___437;
  rec__pupils__subject_score_pair__score = temp___4371 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___438;
  rec__pupils__subject_score_pair__score = temp___4381 } })[4]) = {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___433;
  rec__pupils__subject_score_pair__score = temp___4331 } })) and
  ((temp___427({ us_split_fields7 = { rec__pupils__subject_score_pair__subj =
  temp___429; rec__pupils__subject_score_pair__score = temp___4291 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___430;
  rec__pupils__subject_score_pair__score = temp___4301 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___431;
  rec__pupils__subject_score_pair__score = temp___4311 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___432;
  rec__pupils__subject_score_pair__score = temp___4321 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___433;
  rec__pupils__subject_score_pair__score = temp___4331 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___434;
  rec__pupils__subject_score_pair__score = temp___4341 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___435;
  rec__pupils__subject_score_pair__score = temp___4351 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___436;
  rec__pupils__subject_score_pair__score = temp___4361 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___437;
  rec__pupils__subject_score_pair__score = temp___4371 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___438;
  rec__pupils__subject_score_pair__score = temp___4381 } })[5]) = {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___434;
  rec__pupils__subject_score_pair__score = temp___4341 } })) and
  ((temp___427({ us_split_fields7 = { rec__pupils__subject_score_pair__subj =
  temp___429; rec__pupils__subject_score_pair__score = temp___4291 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___430;
  rec__pupils__subject_score_pair__score = temp___4301 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___431;
  rec__pupils__subject_score_pair__score = temp___4311 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___432;
  rec__pupils__subject_score_pair__score = temp___4321 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___433;
  rec__pupils__subject_score_pair__score = temp___4331 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___434;
  rec__pupils__subject_score_pair__score = temp___4341 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___435;
  rec__pupils__subject_score_pair__score = temp___4351 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___436;
  rec__pupils__subject_score_pair__score = temp___4361 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___437;
  rec__pupils__subject_score_pair__score = temp___4371 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___438;
  rec__pupils__subject_score_pair__score = temp___4381 } })[6]) = {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___435;
  rec__pupils__subject_score_pair__score = temp___4351 } })) and
  ((temp___427({ us_split_fields7 = { rec__pupils__subject_score_pair__subj =
  temp___429; rec__pupils__subject_score_pair__score = temp___4291 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___430;
  rec__pupils__subject_score_pair__score = temp___4301 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___431;
  rec__pupils__subject_score_pair__score = temp___4311 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___432;
  rec__pupils__subject_score_pair__score = temp___4321 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___433;
  rec__pupils__subject_score_pair__score = temp___4331 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___434;
  rec__pupils__subject_score_pair__score = temp___4341 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___435;
  rec__pupils__subject_score_pair__score = temp___4351 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___436;
  rec__pupils__subject_score_pair__score = temp___4361 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___437;
  rec__pupils__subject_score_pair__score = temp___4371 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___438;
  rec__pupils__subject_score_pair__score = temp___4381 } })[7]) = {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___436;
  rec__pupils__subject_score_pair__score = temp___4361 } })) and
  ((temp___427({ us_split_fields7 = { rec__pupils__subject_score_pair__subj =
  temp___429; rec__pupils__subject_score_pair__score = temp___4291 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___430;
  rec__pupils__subject_score_pair__score = temp___4301 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___431;
  rec__pupils__subject_score_pair__score = temp___4311 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___432;
  rec__pupils__subject_score_pair__score = temp___4321 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___433;
  rec__pupils__subject_score_pair__score = temp___4331 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___434;
  rec__pupils__subject_score_pair__score = temp___4341 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___435;
  rec__pupils__subject_score_pair__score = temp___4351 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___436;
  rec__pupils__subject_score_pair__score = temp___4361 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___437;
  rec__pupils__subject_score_pair__score = temp___4371 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___438;
  rec__pupils__subject_score_pair__score = temp___4381 } })[8]) = {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___437;
  rec__pupils__subject_score_pair__score = temp___4371 } })) and
  ((temp___427({ us_split_fields7 = { rec__pupils__subject_score_pair__subj =
  temp___429; rec__pupils__subject_score_pair__score = temp___4291 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___430;
  rec__pupils__subject_score_pair__score = temp___4301 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___431;
  rec__pupils__subject_score_pair__score = temp___4311 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___432;
  rec__pupils__subject_score_pair__score = temp___4321 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___433;
  rec__pupils__subject_score_pair__score = temp___4331 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___434;
  rec__pupils__subject_score_pair__score = temp___4341 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___435;
  rec__pupils__subject_score_pair__score = temp___4351 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___436;
  rec__pupils__subject_score_pair__score = temp___4361 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___437;
  rec__pupils__subject_score_pair__score = temp___4371 } }, {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___438;
  rec__pupils__subject_score_pair__score = temp___4381 } })[9]) = {
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = temp___438;
  rec__pupils__subject_score_pair__score = temp___4381 } })))

axiom def_axiom1 :
  (forall temp___350:int. forall temp___351:int. forall temp___352:int.
  forall temp___353:int. forall temp___354:int. forall temp___355:int.
  forall temp___356:int. forall temp___357:int. forall temp___358:int.
  forall temp___359:int. ((((((((((in_range2(temp___350) and
  in_range2(temp___351)) and in_range2(temp___352)) and
  in_range2(temp___353)) and in_range2(temp___354)) and
  in_range2(temp___355)) and in_range2(temp___356)) and
  in_range2(temp___357)) and in_range2(temp___358)) and
  in_range2(temp___359)) -> ((((((((((to_rep1((temp___348(temp___350,
  temp___351, temp___352, temp___353, temp___354, temp___355, temp___356,
  temp___357, temp___358, temp___359)[0])) = temp___350) and
  (to_rep1((temp___348(temp___350, temp___351, temp___352, temp___353,
  temp___354, temp___355, temp___356, temp___357, temp___358,
  temp___359)[1])) = temp___351)) and (to_rep1((temp___348(temp___350,
  temp___351, temp___352, temp___353, temp___354, temp___355, temp___356,
  temp___357, temp___358, temp___359)[2])) = temp___352)) and
  (to_rep1((temp___348(temp___350, temp___351, temp___352, temp___353,
  temp___354, temp___355, temp___356, temp___357, temp___358,
  temp___359)[3])) = temp___353)) and (to_rep1((temp___348(temp___350,
  temp___351, temp___352, temp___353, temp___354, temp___355, temp___356,
  temp___357, temp___358, temp___359)[4])) = temp___354)) and
  (to_rep1((temp___348(temp___350, temp___351, temp___352, temp___353,
  temp___354, temp___355, temp___356, temp___357, temp___358,
  temp___359)[5])) = temp___355)) and (to_rep1((temp___348(temp___350,
  temp___351, temp___352, temp___353, temp___354, temp___355, temp___356,
  temp___357, temp___358, temp___359)[6])) = temp___356)) and
  (to_rep1((temp___348(temp___350, temp___351, temp___352, temp___353,
  temp___354, temp___355, temp___356, temp___357, temp___358,
  temp___359)[7])) = temp___357)) and (to_rep1((temp___348(temp___350,
  temp___351, temp___352, temp___353, temp___354, temp___355, temp___356,
  temp___357, temp___358, temp___359)[8])) = temp___358)) and
  (to_rep1((temp___348(temp___350, temp___351, temp___352, temp___353,
  temp___354, temp___355, temp___356, temp___357, temp___358,
  temp___359)[9])) = temp___359))))

axiom def_axiom2 :
  (forall temp___364:int. forall temp___365:int. forall temp___366:int.
  forall temp___367:int. forall temp___368:int. forall temp___369:int.
  forall temp___370:int. forall temp___371:int. forall temp___372:int.
  forall temp___373:int. ((((((((((in_range2(temp___364) and
  in_range2(temp___365)) and in_range2(temp___366)) and
  in_range2(temp___367)) and in_range2(temp___368)) and
  in_range2(temp___369)) and in_range2(temp___370)) and
  in_range2(temp___371)) and in_range2(temp___372)) and
  in_range2(temp___373)) -> ((((((((((to_rep1((temp___362(temp___364,
  temp___365, temp___366, temp___367, temp___368, temp___369, temp___370,
  temp___371, temp___372, temp___373)[0])) = temp___364) and
  (to_rep1((temp___362(temp___364, temp___365, temp___366, temp___367,
  temp___368, temp___369, temp___370, temp___371, temp___372,
  temp___373)[1])) = temp___365)) and (to_rep1((temp___362(temp___364,
  temp___365, temp___366, temp___367, temp___368, temp___369, temp___370,
  temp___371, temp___372, temp___373)[2])) = temp___366)) and
  (to_rep1((temp___362(temp___364, temp___365, temp___366, temp___367,
  temp___368, temp___369, temp___370, temp___371, temp___372,
  temp___373)[3])) = temp___367)) and (to_rep1((temp___362(temp___364,
  temp___365, temp___366, temp___367, temp___368, temp___369, temp___370,
  temp___371, temp___372, temp___373)[4])) = temp___368)) and
  (to_rep1((temp___362(temp___364, temp___365, temp___366, temp___367,
  temp___368, temp___369, temp___370, temp___371, temp___372,
  temp___373)[5])) = temp___369)) and (to_rep1((temp___362(temp___364,
  temp___365, temp___366, temp___367, temp___368, temp___369, temp___370,
  temp___371, temp___372, temp___373)[6])) = temp___370)) and
  (to_rep1((temp___362(temp___364, temp___365, temp___366, temp___367,
  temp___368, temp___369, temp___370, temp___371, temp___372,
  temp___373)[7])) = temp___371)) and (to_rep1((temp___362(temp___364,
  temp___365, temp___366, temp___367, temp___368, temp___369, temp___370,
  temp___371, temp___372, temp___373)[8])) = temp___372)) and
  (to_rep1((temp___362(temp___364, temp___365, temp___366, temp___367,
  temp___368, temp___369, temp___370, temp___371, temp___372,
  temp___373)[9])) = temp___373))))

axiom def_axiom3 :
  (forall temp___378:int. forall temp___379:int. forall temp___380:int.
  forall temp___381:int. forall temp___382:int. forall temp___383:int.
  forall temp___384:int. forall temp___385:int. forall temp___386:int.
  forall temp___387:int. ((((((((((in_range2(temp___378) and
  in_range2(temp___379)) and in_range2(temp___380)) and
  in_range2(temp___381)) and in_range2(temp___382)) and
  in_range2(temp___383)) and in_range2(temp___384)) and
  in_range2(temp___385)) and in_range2(temp___386)) and
  in_range2(temp___387)) -> ((((((((((to_rep1((temp___376(temp___378,
  temp___379, temp___380, temp___381, temp___382, temp___383, temp___384,
  temp___385, temp___386, temp___387)[0])) = temp___378) and
  (to_rep1((temp___376(temp___378, temp___379, temp___380, temp___381,
  temp___382, temp___383, temp___384, temp___385, temp___386,
  temp___387)[1])) = temp___379)) and (to_rep1((temp___376(temp___378,
  temp___379, temp___380, temp___381, temp___382, temp___383, temp___384,
  temp___385, temp___386, temp___387)[2])) = temp___380)) and
  (to_rep1((temp___376(temp___378, temp___379, temp___380, temp___381,
  temp___382, temp___383, temp___384, temp___385, temp___386,
  temp___387)[3])) = temp___381)) and (to_rep1((temp___376(temp___378,
  temp___379, temp___380, temp___381, temp___382, temp___383, temp___384,
  temp___385, temp___386, temp___387)[4])) = temp___382)) and
  (to_rep1((temp___376(temp___378, temp___379, temp___380, temp___381,
  temp___382, temp___383, temp___384, temp___385, temp___386,
  temp___387)[5])) = temp___383)) and (to_rep1((temp___376(temp___378,
  temp___379, temp___380, temp___381, temp___382, temp___383, temp___384,
  temp___385, temp___386, temp___387)[6])) = temp___384)) and
  (to_rep1((temp___376(temp___378, temp___379, temp___380, temp___381,
  temp___382, temp___383, temp___384, temp___385, temp___386,
  temp___387)[7])) = temp___385)) and (to_rep1((temp___376(temp___378,
  temp___379, temp___380, temp___381, temp___382, temp___383, temp___384,
  temp___385, temp___386, temp___387)[8])) = temp___386)) and
  (to_rep1((temp___376(temp___378, temp___379, temp___380, temp___381,
  temp___382, temp___383, temp___384, temp___385, temp___386,
  temp___387)[9])) = temp___387))))

axiom def_axiom4 :
  (forall temp___393:(int,us_rep) farray.
  (forall temp___394:int. forall temp___396:int. forall temp___398:int.
  forall temp___400:int. forall temp___402:int. forall temp___404:int.
  forall temp___406:int. forall temp___408:int. forall temp___410:int.
  forall temp___412:int.
  (forall temp___395:bool. forall temp___3951:percentage.
  forall temp___397:bool. forall temp___3971:percentage.
  forall temp___399:bool. forall temp___3991:percentage.
  forall temp___401:bool. forall temp___4011:percentage.
  forall temp___403:bool. forall temp___4031:percentage.
  forall temp___405:bool. forall temp___4051:percentage.
  forall temp___407:bool. forall temp___4071:percentage.
  forall temp___409:bool. forall temp___4091:percentage.
  forall temp___411:bool. forall temp___4111:percentage.
  forall temp___413:bool. forall temp___4131:percentage.
  ((((((((((in_range2(temp___394) and in_range2(temp___396)) and
  in_range2(temp___398)) and in_range2(temp___400)) and
  in_range2(temp___402)) and in_range2(temp___404)) and
  in_range2(temp___406)) and in_range2(temp___408)) and
  in_range2(temp___410)) and in_range2(temp___412)) ->
  (forall temp___414:int. (((temp___414 = temp___412) ->
  ((temp___391(temp___393, temp___394, { us_split_fields1 = {
  rec__pupils__participation__studying = temp___395;
  rec__pupils__participation__score = temp___3951 } }, temp___396, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___397;
  rec__pupils__participation__score = temp___3971 } }, temp___398, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___399;
  rec__pupils__participation__score = temp___3991 } }, temp___400, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___401;
  rec__pupils__participation__score = temp___4011 } }, temp___402, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___403;
  rec__pupils__participation__score = temp___4031 } }, temp___404, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___405;
  rec__pupils__participation__score = temp___4051 } }, temp___406, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___407;
  rec__pupils__participation__score = temp___4071 } }, temp___408, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___409;
  rec__pupils__participation__score = temp___4091 } }, temp___410, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___411;
  rec__pupils__participation__score = temp___4111 } }, temp___412, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___413;
  rec__pupils__participation__score = temp___4131 } })[temp___414]) = {
  us_split_fields1 = { rec__pupils__participation__studying = temp___413;
  rec__pupils__participation__score = temp___4131 } })) and
  ((not (temp___414 = temp___412)) -> (((temp___414 = temp___410) ->
  ((temp___391(temp___393, temp___394, { us_split_fields1 = {
  rec__pupils__participation__studying = temp___395;
  rec__pupils__participation__score = temp___3951 } }, temp___396, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___397;
  rec__pupils__participation__score = temp___3971 } }, temp___398, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___399;
  rec__pupils__participation__score = temp___3991 } }, temp___400, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___401;
  rec__pupils__participation__score = temp___4011 } }, temp___402, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___403;
  rec__pupils__participation__score = temp___4031 } }, temp___404, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___405;
  rec__pupils__participation__score = temp___4051 } }, temp___406, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___407;
  rec__pupils__participation__score = temp___4071 } }, temp___408, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___409;
  rec__pupils__participation__score = temp___4091 } }, temp___410, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___411;
  rec__pupils__participation__score = temp___4111 } }, temp___412, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___413;
  rec__pupils__participation__score = temp___4131 } })[temp___414]) = {
  us_split_fields1 = { rec__pupils__participation__studying = temp___411;
  rec__pupils__participation__score = temp___4111 } })) and
  ((not (temp___414 = temp___410)) -> (((temp___414 = temp___408) ->
  ((temp___391(temp___393, temp___394, { us_split_fields1 = {
  rec__pupils__participation__studying = temp___395;
  rec__pupils__participation__score = temp___3951 } }, temp___396, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___397;
  rec__pupils__participation__score = temp___3971 } }, temp___398, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___399;
  rec__pupils__participation__score = temp___3991 } }, temp___400, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___401;
  rec__pupils__participation__score = temp___4011 } }, temp___402, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___403;
  rec__pupils__participation__score = temp___4031 } }, temp___404, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___405;
  rec__pupils__participation__score = temp___4051 } }, temp___406, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___407;
  rec__pupils__participation__score = temp___4071 } }, temp___408, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___409;
  rec__pupils__participation__score = temp___4091 } }, temp___410, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___411;
  rec__pupils__participation__score = temp___4111 } }, temp___412, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___413;
  rec__pupils__participation__score = temp___4131 } })[temp___414]) = {
  us_split_fields1 = { rec__pupils__participation__studying = temp___409;
  rec__pupils__participation__score = temp___4091 } })) and
  ((not (temp___414 = temp___408)) -> (((temp___414 = temp___406) ->
  ((temp___391(temp___393, temp___394, { us_split_fields1 = {
  rec__pupils__participation__studying = temp___395;
  rec__pupils__participation__score = temp___3951 } }, temp___396, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___397;
  rec__pupils__participation__score = temp___3971 } }, temp___398, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___399;
  rec__pupils__participation__score = temp___3991 } }, temp___400, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___401;
  rec__pupils__participation__score = temp___4011 } }, temp___402, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___403;
  rec__pupils__participation__score = temp___4031 } }, temp___404, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___405;
  rec__pupils__participation__score = temp___4051 } }, temp___406, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___407;
  rec__pupils__participation__score = temp___4071 } }, temp___408, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___409;
  rec__pupils__participation__score = temp___4091 } }, temp___410, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___411;
  rec__pupils__participation__score = temp___4111 } }, temp___412, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___413;
  rec__pupils__participation__score = temp___4131 } })[temp___414]) = {
  us_split_fields1 = { rec__pupils__participation__studying = temp___407;
  rec__pupils__participation__score = temp___4071 } })) and
  ((not (temp___414 = temp___406)) -> (((temp___414 = temp___404) ->
  ((temp___391(temp___393, temp___394, { us_split_fields1 = {
  rec__pupils__participation__studying = temp___395;
  rec__pupils__participation__score = temp___3951 } }, temp___396, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___397;
  rec__pupils__participation__score = temp___3971 } }, temp___398, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___399;
  rec__pupils__participation__score = temp___3991 } }, temp___400, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___401;
  rec__pupils__participation__score = temp___4011 } }, temp___402, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___403;
  rec__pupils__participation__score = temp___4031 } }, temp___404, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___405;
  rec__pupils__participation__score = temp___4051 } }, temp___406, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___407;
  rec__pupils__participation__score = temp___4071 } }, temp___408, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___409;
  rec__pupils__participation__score = temp___4091 } }, temp___410, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___411;
  rec__pupils__participation__score = temp___4111 } }, temp___412, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___413;
  rec__pupils__participation__score = temp___4131 } })[temp___414]) = {
  us_split_fields1 = { rec__pupils__participation__studying = temp___405;
  rec__pupils__participation__score = temp___4051 } })) and
  ((not (temp___414 = temp___404)) -> (((temp___414 = temp___402) ->
  ((temp___391(temp___393, temp___394, { us_split_fields1 = {
  rec__pupils__participation__studying = temp___395;
  rec__pupils__participation__score = temp___3951 } }, temp___396, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___397;
  rec__pupils__participation__score = temp___3971 } }, temp___398, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___399;
  rec__pupils__participation__score = temp___3991 } }, temp___400, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___401;
  rec__pupils__participation__score = temp___4011 } }, temp___402, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___403;
  rec__pupils__participation__score = temp___4031 } }, temp___404, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___405;
  rec__pupils__participation__score = temp___4051 } }, temp___406, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___407;
  rec__pupils__participation__score = temp___4071 } }, temp___408, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___409;
  rec__pupils__participation__score = temp___4091 } }, temp___410, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___411;
  rec__pupils__participation__score = temp___4111 } }, temp___412, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___413;
  rec__pupils__participation__score = temp___4131 } })[temp___414]) = {
  us_split_fields1 = { rec__pupils__participation__studying = temp___403;
  rec__pupils__participation__score = temp___4031 } })) and
  ((not (temp___414 = temp___402)) -> (((temp___414 = temp___400) ->
  ((temp___391(temp___393, temp___394, { us_split_fields1 = {
  rec__pupils__participation__studying = temp___395;
  rec__pupils__participation__score = temp___3951 } }, temp___396, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___397;
  rec__pupils__participation__score = temp___3971 } }, temp___398, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___399;
  rec__pupils__participation__score = temp___3991 } }, temp___400, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___401;
  rec__pupils__participation__score = temp___4011 } }, temp___402, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___403;
  rec__pupils__participation__score = temp___4031 } }, temp___404, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___405;
  rec__pupils__participation__score = temp___4051 } }, temp___406, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___407;
  rec__pupils__participation__score = temp___4071 } }, temp___408, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___409;
  rec__pupils__participation__score = temp___4091 } }, temp___410, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___411;
  rec__pupils__participation__score = temp___4111 } }, temp___412, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___413;
  rec__pupils__participation__score = temp___4131 } })[temp___414]) = {
  us_split_fields1 = { rec__pupils__participation__studying = temp___401;
  rec__pupils__participation__score = temp___4011 } })) and
  ((not (temp___414 = temp___400)) -> (((temp___414 = temp___398) ->
  ((temp___391(temp___393, temp___394, { us_split_fields1 = {
  rec__pupils__participation__studying = temp___395;
  rec__pupils__participation__score = temp___3951 } }, temp___396, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___397;
  rec__pupils__participation__score = temp___3971 } }, temp___398, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___399;
  rec__pupils__participation__score = temp___3991 } }, temp___400, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___401;
  rec__pupils__participation__score = temp___4011 } }, temp___402, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___403;
  rec__pupils__participation__score = temp___4031 } }, temp___404, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___405;
  rec__pupils__participation__score = temp___4051 } }, temp___406, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___407;
  rec__pupils__participation__score = temp___4071 } }, temp___408, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___409;
  rec__pupils__participation__score = temp___4091 } }, temp___410, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___411;
  rec__pupils__participation__score = temp___4111 } }, temp___412, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___413;
  rec__pupils__participation__score = temp___4131 } })[temp___414]) = {
  us_split_fields1 = { rec__pupils__participation__studying = temp___399;
  rec__pupils__participation__score = temp___3991 } })) and
  ((not (temp___414 = temp___398)) -> (((temp___414 = temp___396) ->
  ((temp___391(temp___393, temp___394, { us_split_fields1 = {
  rec__pupils__participation__studying = temp___395;
  rec__pupils__participation__score = temp___3951 } }, temp___396, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___397;
  rec__pupils__participation__score = temp___3971 } }, temp___398, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___399;
  rec__pupils__participation__score = temp___3991 } }, temp___400, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___401;
  rec__pupils__participation__score = temp___4011 } }, temp___402, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___403;
  rec__pupils__participation__score = temp___4031 } }, temp___404, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___405;
  rec__pupils__participation__score = temp___4051 } }, temp___406, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___407;
  rec__pupils__participation__score = temp___4071 } }, temp___408, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___409;
  rec__pupils__participation__score = temp___4091 } }, temp___410, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___411;
  rec__pupils__participation__score = temp___4111 } }, temp___412, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___413;
  rec__pupils__participation__score = temp___4131 } })[temp___414]) = {
  us_split_fields1 = { rec__pupils__participation__studying = temp___397;
  rec__pupils__participation__score = temp___3971 } })) and
  ((not (temp___414 = temp___396)) -> (((temp___414 = temp___394) ->
  ((temp___391(temp___393, temp___394, { us_split_fields1 = {
  rec__pupils__participation__studying = temp___395;
  rec__pupils__participation__score = temp___3951 } }, temp___396, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___397;
  rec__pupils__participation__score = temp___3971 } }, temp___398, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___399;
  rec__pupils__participation__score = temp___3991 } }, temp___400, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___401;
  rec__pupils__participation__score = temp___4011 } }, temp___402, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___403;
  rec__pupils__participation__score = temp___4031 } }, temp___404, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___405;
  rec__pupils__participation__score = temp___4051 } }, temp___406, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___407;
  rec__pupils__participation__score = temp___4071 } }, temp___408, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___409;
  rec__pupils__participation__score = temp___4091 } }, temp___410, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___411;
  rec__pupils__participation__score = temp___4111 } }, temp___412, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___413;
  rec__pupils__participation__score = temp___4131 } })[temp___414]) = {
  us_split_fields1 = { rec__pupils__participation__studying = temp___395;
  rec__pupils__participation__score = temp___3951 } })) and
  ((not (temp___414 = temp___394)) -> ((temp___391(temp___393, temp___394, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___395;
  rec__pupils__participation__score = temp___3951 } }, temp___396, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___397;
  rec__pupils__participation__score = temp___3971 } }, temp___398, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___399;
  rec__pupils__participation__score = temp___3991 } }, temp___400, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___401;
  rec__pupils__participation__score = temp___4011 } }, temp___402, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___403;
  rec__pupils__participation__score = temp___4031 } }, temp___404, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___405;
  rec__pupils__participation__score = temp___4051 } }, temp___406, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___407;
  rec__pupils__participation__score = temp___4071 } }, temp___408, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___409;
  rec__pupils__participation__score = temp___4091 } }, temp___410, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___411;
  rec__pupils__participation__score = temp___4111 } }, temp___412, {
  us_split_fields1 = { rec__pupils__participation__studying = temp___413;
  rec__pupils__participation__score = temp___4131 }
  })[temp___414]) = (temp___393[temp___414])))))))))))))))))))))))))))

 (* File "pupils.adb", line 22, characters 0-0 *)
goal WP_parameter_def :
  (forall p__split_fields:pupilnumbers.
  forall p__split_fields1:(int,us_rep1) farray. forall success:bool.
  forall subject_scores:(int,us_rep3) farray. forall i:int.
  forall o:percentage. forall o1:subject. forall o2:subject.
  forall o3:percentage. forall o4:percentage. forall o5:subject.
  forall o6:subject. forall o7:percentage. forall o8:percentage.
  forall o9:subject. forall o10:subject. forall o11:percentage.
  forall o12:percentage. forall o13:subject. forall o14:subject.
  forall o15:percentage. forall o16:percentage. forall o17:subject.
  forall o18:subject. forall o19:percentage. forall o20:percentage.
  forall o21:subject. forall o22:subject. forall o23:percentage.
  forall o24:percentage. forall o25:subject. forall o26:subject.
  forall o27:percentage. forall o28:percentage. forall o29:subject.
  forall o30:subject. forall o31:percentage. forall o32:percentage.
  forall o33:subject. forall o34:subject. forall o35:percentage.
  forall o36:percentage. forall o37:subject. forall o38:subject.
  forall o39:percentage. forall o40:subject. forall o41:percentage.
  forall o42:subject. forall o43:percentage. forall o44:subject.
  forall o45:percentage. forall o46:subject. forall o47:percentage.
  forall o48:subject. forall o49:percentage. forall o50:subject.
  forall o51:percentage. forall o52:subject. forall o53:percentage.
  forall o54:subject. forall o55:percentage. forall o56:subject.
  forall o57:percentage. forall o58:subject. forall o59:percentage.
  forall o60:(int,us_rep3) farray. forall o61:int.
  forall o62:(int,character) farray. forall o63:(int,character) farray.
  forall o64:formtype. forall o65:(int,us_rep) farray.
  forall o66:(int,character) farray. forall o67:(int,character) farray.
  forall o68:formtype. forall o69:(int,us_rep) farray.
  forall temp___442:(int,us_rep) farray. forall o70:bool.
  forall o71:percentage. forall o72:us_split_fields. forall o73:bool.
  forall o74:bool. forall o75:percentage. forall o76:us_split_fields.
  forall o77:us_rep. forall o78:(int,us_rep) farray.
  forall o79:us_split_fields2. forall o80:us_rep1. forall result:map__ref4.
  forall subject_scores1:(int,us_rep3) farray. forall result1:int__ref.
  forall i1:int. forall result2:bool__ref. forall success1:bool.
  (in_range4(fm) -> (in_range2(subj0) -> (in_range1(score0) ->
  (in_range2(subj1) -> (in_range1(score1) -> (in_range2(subj2) ->
  (in_range1(score2) -> (in_range2(subj3) -> (in_range1(score3) ->
  (in_range2(subj4) -> (in_range1(score4) -> (in_range2(subj5) ->
  (in_range1(score5) -> (in_range2(subj6) -> (in_range1(score6) ->
  (in_range2(subj7) -> (in_range1(score7) -> (in_range2(subj8) ->
  (in_range1(score8) -> (in_range2(subj9) -> (in_range1(score9) ->
  (((to_rep4(p__split_fields) <  250) and (not (fm = 8))) ->
  ((((((to_rep(o36) = score9) and ((to_rep1(o37) = subj9) and
  ((o37 = o38) and (o36 = o39)))) and ((o40 = o38) and (o41 = o39))) and
  ((((to_rep(o32) = score8) and ((to_rep1(o33) = subj8) and ((o33 = o34) and
  (o32 = o35)))) and ((o42 = o34) and (o43 = o35))) and
  ((((to_rep(o28) = score7) and ((to_rep1(o29) = subj7) and ((o29 = o30) and
  (o28 = o31)))) and ((o44 = o30) and (o45 = o31))) and
  ((((to_rep(o24) = score6) and ((to_rep1(o25) = subj6) and ((o25 = o26) and
  (o24 = o27)))) and ((o46 = o26) and (o47 = o27))) and
  ((((to_rep(o20) = score5) and ((to_rep1(o21) = subj5) and ((o21 = o22) and
  (o20 = o23)))) and ((o48 = o22) and (o49 = o23))) and
  ((((to_rep(o16) = score4) and ((to_rep1(o17) = subj4) and ((o17 = o18) and
  (o16 = o19)))) and ((o50 = o18) and (o51 = o19))) and
  ((((to_rep(o12) = score3) and ((to_rep1(o13) = subj3) and ((o13 = o14) and
  (o12 = o15)))) and ((o52 = o14) and (o53 = o15))) and
  ((((to_rep(o8) = score2) and ((to_rep1(o9) = subj2) and ((o9 = o10) and
  (o8 = o11)))) and ((o54 = o10) and (o55 = o11))) and
  ((((to_rep(o4) = score1) and ((to_rep1(o5) = subj1) and ((o5 = o6) and
  (o4 = o7)))) and ((o56 = o6) and (o57 = o7))) and
  ((((to_rep(o) = score0) and ((to_rep1(o1) = subj0) and ((o1 = o2) and
  (o = o3)))) and ((o58 = o2) and (o59 = o3))) and (o60 = temp___427({
  us_split_fields7 = { rec__pupils__subject_score_pair__subj = o58;
  rec__pupils__subject_score_pair__score = o59 } }, { us_split_fields7 = {
  rec__pupils__subject_score_pair__subj = o56;
  rec__pupils__subject_score_pair__score = o57 } }, { us_split_fields7 = {
  rec__pupils__subject_score_pair__subj = o54;
  rec__pupils__subject_score_pair__score = o55 } }, { us_split_fields7 = {
  rec__pupils__subject_score_pair__subj = o52;
  rec__pupils__subject_score_pair__score = o53 } }, { us_split_fields7 = {
  rec__pupils__subject_score_pair__subj = o50;
  rec__pupils__subject_score_pair__score = o51 } }, { us_split_fields7 = {
  rec__pupils__subject_score_pair__subj = o48;
  rec__pupils__subject_score_pair__score = o49 } }, { us_split_fields7 = {
  rec__pupils__subject_score_pair__subj = o46;
  rec__pupils__subject_score_pair__score = o47 } }, { us_split_fields7 = {
  rec__pupils__subject_score_pair__subj = o44;
  rec__pupils__subject_score_pair__score = o45 } }, { us_split_fields7 = {
  rec__pupils__subject_score_pair__subj = o42;
  rec__pupils__subject_score_pair__score = o43 } }, { us_split_fields7 = {
  rec__pupils__subject_score_pair__subj = o40;
  rec__pupils__subject_score_pair__score = o41 } })))))))))))) and
  ((result = { map__content4 = subject_scores }) and
  (subject_scores1 = o60))) -> (((result1 = { int__content = i }) and
  (i1 = 0)) -> ((((((((((((1 <= (to_rep4(p__split_fields) + 1)) and
  ((to_rep4(p__split_fields) + 1) <= 250)) and
  (o61 = (to_rep4(p__split_fields) + 1))) and ({ us_split_fields3 = {
  rec__pupils__pupiltype__surname = o62; rec__pupils__pupiltype__forename =
  o63; rec__pupils__pupiltype__form = o64; rec__pupils__pupiltype__scores =
  o65 } } = (p__split_fields1[o61]))) and ((o62 = o66) and ((o63 = o67) and
  ((o64 = o68) and (o65 = o69))))) and (temp___442 = o69)) and ({
  us_split_fields1 = { rec__pupils__participation__studying = o70;
  rec__pupils__participation__score = o71 }
  } = (temp___442[to_rep1((((subject_scores1[i1])).us_split_fields7).rec__pupils__subject_score_pair__subj)]))) and
  (o72 = { rec__pupils__participation__studying = o70;
  rec__pupils__participation__score = o71 })) and
  (o73 = (o72).rec__pupils__participation__studying)) and
  (((not (o73 = true)) and (o74 = true)) or ((o73 = true) and
  (o74 = false)))) and ((result2 = { bool__content = success }) and
  (success1 = o74))) -> ((success1 = true) ->
  (((((((to_rep(o75) = to_rep((((subject_scores1[i1])).us_split_fields7).rec__pupils__subject_score_pair__score)) and
  (o76 = { rec__pupils__participation__studying =
  ((((((p__split_fields1[(to_rep4(p__split_fields) + 1)])).us_split_fields3).rec__pupils__pupiltype__scores[to_rep1((((subject_scores1[i1])).us_split_fields7).rec__pupils__subject_score_pair__subj)])).us_split_fields1).rec__pupils__participation__studying;
  rec__pupils__participation__score = o75 })) and (o77 = { us_split_fields1 =
  o76 })) and
  (o78 = ((((p__split_fields1[(to_rep4(p__split_fields) + 1)])).us_split_fields3).rec__pupils__pupiltype__scores[to_rep1((((subject_scores1[i1])).us_split_fields7).rec__pupils__subject_score_pair__subj) <- o77]))) and
  (o79 = { rec__pupils__pupiltype__surname =
  (((p__split_fields1[(to_rep4(p__split_fields) + 1)])).us_split_fields3).rec__pupils__pupiltype__surname;
  rec__pupils__pupiltype__forename =
  (((p__split_fields1[(to_rep4(p__split_fields) + 1)])).us_split_fields3).rec__pupils__pupiltype__forename;
  rec__pupils__pupiltype__form =
  (((p__split_fields1[(to_rep4(p__split_fields) + 1)])).us_split_fields3).rec__pupils__pupiltype__form;
  rec__pupils__pupiltype__scores = o78 })) and (o80 = { us_split_fields3 =
  o79 })) ->
  (1 <= (to_rep4(p__split_fields) + 1))))))))))))))))))))))))))))))
