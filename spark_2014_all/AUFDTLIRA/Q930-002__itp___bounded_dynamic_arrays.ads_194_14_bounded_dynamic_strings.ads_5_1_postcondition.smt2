(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort character 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (character character) Bool)
(declare-const dummy character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-sort component 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (component component) Bool)
(declare-const dummy1 component)
(declare-datatypes () ((component__ref (mk_component__ref (component__content component)))))
(define-fun component__ref___projection ((a component__ref)) component (component__content a))
(define-fun dynamic_invariant ((temp___expr_192 Int) (temp___is_init_188 Bool) (temp___skip_constant_189 Bool) (temp___do_toplevel_190 Bool) (temp___do_typ_inv_191 Bool)) Bool (=> (or (= temp___is_init_188 true) (<= 0 255)) (in_range2 temp___expr_192)))
(declare-sort natural_index 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (natural_index natural_index) Bool)
(declare-const dummy2 natural_index)
(declare-datatypes () ((natural_index__ref (mk_natural_index__ref (natural_index__content natural_index)))))
(define-fun natural_index__ref___projection ((a natural_index__ref)) natural_index (natural_index__content a))
(define-fun dynamic_invariant1 ((temp___expr_222 Int) (temp___is_init_218 Bool) (temp___skip_constant_219 Bool) (temp___do_toplevel_220 Bool) (temp___do_typ_inv_221 Bool)) Bool (=> (or (= temp___is_init_218 true) (<= 0 2147483647)) (in_range3 temp___expr_222)))
(declare-fun to_rep1 (natural_index) Int)
(declare-fun of_rep1 (Int) natural_index)
(assert (forall ((x natural_index)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x natural_index)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort integer 0)
(define-fun in_range4 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep2 (integer) Int)
(declare-fun of_rep2 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x integer)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((t48s__ref (mk_t48s__ref (t48s__content integer)))))
(define-fun t48s__ref___projection ((a t48s__ref)) integer (t48s__content a))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range4 f) (=> (in_range4 l) (and (= (to_rep2 (first (mk f l))) f) (= (to_rep2 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range4 low) (and (in_range4 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep2 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep2 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep2 (first (rt x))) (to_rep2 (last (rt x))) (elts y) (to_rep2 (first (rt y))) (to_rep2 (last (rt y)))))
(declare-fun user_eq5 (us_t us_t) Bool)
(declare-const dummy5 us_t)
(declare-datatypes () ((t49s__ref (mk_t49s__ref (t49s__content us_t)))))
(define-fun t49s__ref___projection ((a t49s__ref)) us_t (t49s__content a))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__bounded_dynamic_strings__sequence__capacity natural_index)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural_index (rec__bounded_dynamic_strings__sequence__capacity a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__bounded_dynamic_strings__sequence__current_length natural_index) (rec__bounded_dynamic_strings__sequence__content us_t)))))
(define-fun us_split_fields_Current_Length__projection ((a us_split_fields)) natural_index (rec__bounded_dynamic_strings__sequence__current_length a))
(define-fun us_split_fields_Content__projection ((a us_split_fields)) us_t (rec__bounded_dynamic_strings__sequence__content a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep1 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 a))) (to_rep1 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 b)))) (and (= (to_rep1 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 a))) (to_rep1 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 b)))) (= (bool_eq1 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 a)) (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 b))) true))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const bounded_dynamic_strings__sequence__capacity__first__bit Int)
(declare-const bounded_dynamic_strings__sequence__capacity__last__bit Int)
(declare-const bounded_dynamic_strings__sequence__capacity__position Int)
(assert (<= 0 bounded_dynamic_strings__sequence__capacity__first__bit))
(assert (< bounded_dynamic_strings__sequence__capacity__first__bit bounded_dynamic_strings__sequence__capacity__last__bit))
(assert (<= 0 bounded_dynamic_strings__sequence__capacity__position))
(declare-const bounded_dynamic_strings__sequence__current_length__first__bit Int)
(declare-const bounded_dynamic_strings__sequence__current_length__last__bit Int)
(declare-const bounded_dynamic_strings__sequence__current_length__position Int)
(assert (<= 0 bounded_dynamic_strings__sequence__current_length__first__bit))
(assert (< bounded_dynamic_strings__sequence__current_length__first__bit bounded_dynamic_strings__sequence__current_length__last__bit))
(assert (<= 0 bounded_dynamic_strings__sequence__current_length__position))
(declare-const bounded_dynamic_strings__sequence__content__first__bit Int)
(declare-const bounded_dynamic_strings__sequence__content__last__bit Int)
(declare-const bounded_dynamic_strings__sequence__content__position Int)
(assert (<= 0 bounded_dynamic_strings__sequence__content__first__bit))
(assert (< bounded_dynamic_strings__sequence__content__first__bit bounded_dynamic_strings__sequence__content__last__bit))
(assert (<= 0 bounded_dynamic_strings__sequence__content__position))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((sequence__ref (mk_sequence__ref (sequence__content us_rep)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep (sequence__content a))
(define-fun dynamic_invariant2 ((temp___expr_236 us_rep) (temp___is_init_232 Bool) (temp___skip_constant_233 Bool) (temp___do_toplevel_234 Bool) (temp___do_typ_inv_235 Bool)) Bool (and (=> (= temp___do_toplevel_234 true) (=> (= temp___is_init_232 true) (and (<= 0 (to_rep1 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 temp___expr_236)))) (<= (to_rep1 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 temp___expr_236))) (to_rep1 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 temp___expr_236))))))) (let ((temp___238 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 temp___expr_236)))) (and (dynamic_property1 1 (to_rep1 temp___238) (first1 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 temp___expr_236))) (last1 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 temp___expr_236)))) (and (= (first1 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 temp___expr_236))) 1) (= (last1 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 temp___expr_236))) (to_rep1 temp___238)))))))
(define-fun dynamic_predicate ((temp___240 us_rep)) Bool (and (<= 0 (to_rep1 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 temp___240)))) (<= (to_rep1 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 temp___240))) (to_rep1 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 temp___240))))))
(declare-const fragment Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const within us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-fun contains (us_rep Int) Bool)
(declare-fun contains__function_guard (Bool us_rep Int) Bool)
(declare-fun length1 (us_rep) Int)
(declare-fun length__function_guard (Int us_rep) Bool)
(assert true)
(assert (forall ((within1 us_rep)) (forall ((fragment1 Int)) (! (= (= (contains within1 fragment1) true) (exists ((k Int)) (and (and (<= 1 k) (<= k (length1 within1))) (= (to_rep (let ((temp___490 (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within1)))) (select (to_array temp___490) k))) fragment1)))) :pattern ((contains within1 fragment1))))))
(declare-const i52s us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const r171b Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (integer integer) Bool)
(declare-const dummy7 integer)
(declare-datatypes () ((t172b__ref (mk_t172b__ref (t172b__content integer)))))
(define-fun t172b__ref___projection ((a t172b__ref)) integer (t172b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_invariant3 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range1 temp___expr_74)))
(define-fun dynamic_invariant4 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range4 temp___expr_18)))
(assert (forall ((this us_rep)) (! (=> (dynamic_invariant2 this true true true true) (dynamic_invariant1 (length1 this) true false true true)) :pattern ((length1 this)))))
(assert (forall ((this us_rep)) (! (=> (dynamic_invariant2 this true true true true) (= (length1 this) (to_rep1 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 this))))) :pattern ((length1 this)))))
(declare-const k Int)
(declare-const bounded_dynamic_strings__location__3__result Int)
(declare-const us Int)
(declare-const temp___1319 Int)
(declare-const temp___1320 Int)
(declare-const temp___1315 Int)
(declare-const o Int)
(declare-const o1 character)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 character)
(declare-const o5 Int)
(declare-const bounded_dynamic_strings__location__3__result1 Int)
(declare-const result Int)
(declare-const k1 Int)
(declare-const result1 Bool)
(declare-const result2 Int)
(declare-const bounded_dynamic_strings__location__3__result2 Int)
(declare-const k2 Int)
(declare-const bounded_dynamic_strings__location__3__result3 Int)
(declare-const result3 Int)
(declare-const k3 Int)
(declare-const result4 Bool)
(declare-const result5 Int)
(declare-const bounded_dynamic_strings__location__3__result4 Int)
(declare-const k4 Int)
(declare-const bounded_dynamic_strings__location__3__result5 Int)
(declare-const k5 Int)
(declare-const bounded_dynamic_strings__location__3__result6 Int)
(declare-const k6 Int)
(declare-const bounded_dynamic_strings__location__3__result7 Int)
(declare-const k7 Int)
(declare-const bounded_dynamic_strings__location__3__result8 Int)
(declare-const k8 Int)
(declare-const bounded_dynamic_strings__location__3__result9 Int)
(declare-const k9 Int)
(declare-const bounded_dynamic_strings__location__3__result10 Int)
(declare-const result6 Int)
(declare-const bounded_dynamic_strings__location__3__result11 Int)
(declare-const bounded_dynamic_strings__location__3__result12 Int)
(declare-const bounded_dynamic_strings__location__3__result13 Int)
(declare-const k10 Int)
(declare-const bounded_dynamic_strings__location__3__result14 Int)
(declare-const k11 Int)
(declare-const bounded_dynamic_strings__location__3__result15 Int)
(declare-const k12 Int)
(declare-const bounded_dynamic_strings__location__3__result16 Int)
(declare-const k13 Int)
(declare-const bounded_dynamic_strings__location__3__result17 Int)
(define-fun bounded_dynamic_strings__location__3__result18 () int__ref (mk_int__ref bounded_dynamic_strings__location__3__result14))
(define-fun k14 () int__ref (mk_int__ref k10))
(define-fun bounded_dynamic_strings__location__3__result19 () int__ref (mk_int__ref bounded_dynamic_strings__location__3__result9))
(define-fun k15 () int__ref (mk_int__ref k8))
(define-fun result7 () int__ref (mk_int__ref result))
(define-fun k16 () int__ref (mk_int__ref k))
(declare-const result8 Int)
(assert (dynamic_invariant2 i52s true false true true))
(assert (in_range2 fragment))
(assert (dynamic_invariant2 within true false true true))
(assert (and (= us (to_rep1 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 within)))) (in_range3 (to_rep1 (rec__bounded_dynamic_strings__sequence__capacity (us_split_discrs1 within))))))
(assert (= (to_rep1 (rec__bounded_dynamic_strings__sequence__current_length (us_split_fields1 within))) r171b))
(assert (in_range3 r171b))
(assert (or (and (and (and (= bounded_dynamic_strings__location__3__result18 (mk_int__ref bounded_dynamic_strings__location__3__result5)) (= k14 (mk_int__ref k4))) (and (= bounded_dynamic_strings__location__3__result15 bounded_dynamic_strings__location__3__result6) (= k11 k5))) (and (= temp___1319 1) (and (= temp___1320 r171b) (and (and (= result7 k16) (= k1 temp___1319)) (and (and (<= temp___1319 k1) (<= k1 temp___1320)) (and (= temp___1315 k1) (or (and (and (and (= bounded_dynamic_strings__location__3__result2 bounded_dynamic_strings__location__3__result5) (= k1 k4)) (and (= bounded_dynamic_strings__location__3__result6 bounded_dynamic_strings__location__3__result2) (= k5 k1))) (and (and (and (and (and (and (<= (to_rep2 (first (rt (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))))) k1) (<= k1 (to_rep2 (last (rt (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))))))) (= o k1)) (= o1 (select (elts (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))) o))) (= o2 (to_rep o1))) (= result1 (ite (= o2 fragment) true false))) (and (= result1 true) (and (= result2 bounded_dynamic_strings__location__3__result) (= bounded_dynamic_strings__location__3__result2 k1))))) (and (and (and (and (and (and (and (<= (to_rep2 (first (rt (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))))) k1) (<= k1 (to_rep2 (last (rt (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))))))) (= o k1)) (= o1 (select (elts (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))) o))) (= o2 (to_rep o1))) (= result1 (ite (= o2 fragment) true false))) (and (not (= result1 true)) (and (= bounded_dynamic_strings__location__3__result2 bounded_dynamic_strings__location__3__result) (= bounded_dynamic_strings__location__3__result2 bounded_dynamic_strings__location__3__result1)))) (and (and (and (= bounded_dynamic_strings__location__3__result4 bounded_dynamic_strings__location__3__result5) (= k3 k4)) (and (= bounded_dynamic_strings__location__3__result6 bounded_dynamic_strings__location__3__result4) (= k5 k3))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j k2)) (not (= (to_rep (select (elts (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))) j)) fragment)))) (and (and (=> (<= 1 r171b) (dynamic_property2 1 r171b k2)) (and (<= 1 k2) (<= k2 r171b))) (and (not (= k2 temp___1320)) (and (and (= k2 result3) (= k3 (+ k2 1))) (and (and (and (and (and (and (<= (to_rep2 (first (rt (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))))) k3) (<= k3 (to_rep2 (last (rt (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))))))) (= o3 k3)) (= o4 (select (elts (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))) o3))) (= o5 (to_rep o4))) (= result4 (ite (= o5 fragment) true false))) (and (= result4 true) (and (= result5 bounded_dynamic_strings__location__3__result3) (= bounded_dynamic_strings__location__3__result4 k3))))))))))))))))) (and (and (and (= result7 k16) (= k1 1)) (ite (and (<= 1 k1) (<= k1 r171b)) (and (and (and (= temp___1315 k1) (and (and (and (and (and (and (and (<= (to_rep2 (first (rt (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))))) k1) (<= k1 (to_rep2 (last (rt (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))))))) (= o k1)) (= o1 (select (elts (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))) o))) (= o2 (to_rep o1))) (= result1 (ite (= o2 fragment) true false))) (and (not (= result1 true)) (and (= bounded_dynamic_strings__location__3__result2 bounded_dynamic_strings__location__3__result) (= bounded_dynamic_strings__location__3__result2 bounded_dynamic_strings__location__3__result1)))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j k2)) (not (= (to_rep (select (elts (rec__bounded_dynamic_strings__sequence__content (us_split_fields1 within))) j)) fragment)))) (and (and (=> (<= 1 r171b) (dynamic_property2 1 r171b k2)) (and (<= 1 k2) (<= k2 r171b))) (= k2 r171b))))) (and (and (= bounded_dynamic_strings__location__3__result3 bounded_dynamic_strings__location__3__result7) (= k2 k6)) (and (= bounded_dynamic_strings__location__3__result8 bounded_dynamic_strings__location__3__result3) (= k7 k2)))) (and (and (= bounded_dynamic_strings__location__3__result19 (mk_int__ref bounded_dynamic_strings__location__3__result7)) (= k15 (mk_int__ref k6))) (and (= bounded_dynamic_strings__location__3__result10 bounded_dynamic_strings__location__3__result8) (= k9 k7)))) (and (and (= bounded_dynamic_strings__location__3__result19 (mk_int__ref bounded_dynamic_strings__location__3__result)) (= k1 k8)) (and (= bounded_dynamic_strings__location__3__result10 bounded_dynamic_strings__location__3__result1) (= k9 k1))))) (and (and (and (= bounded_dynamic_strings__location__3__result18 (mk_int__ref bounded_dynamic_strings__location__3__result12)) (= k14 k15)) (and (= bounded_dynamic_strings__location__3__result15 bounded_dynamic_strings__location__3__result13) (= k11 k9))) (and (and (= bounded_dynamic_strings__location__3__result11 bounded_dynamic_strings__location__3__result12) (= bounded_dynamic_strings__location__3__result13 bounded_dynamic_strings__location__3__result11)) (and (= result6 bounded_dynamic_strings__location__3__result9) (= bounded_dynamic_strings__location__3__result11 0)))))))
(assert (= (mk_int__ref bounded_dynamic_strings__location__3__result16) bounded_dynamic_strings__location__3__result18))
(assert (= (mk_int__ref k12) k14))
(assert (= bounded_dynamic_strings__location__3__result17 bounded_dynamic_strings__location__3__result15))
(assert (= k13 k11))
(assert (= result8 bounded_dynamic_strings__location__3__result16))
(assert (not (<= 0 bounded_dynamic_strings__location__3__result16)))
(check-sat)
(exit)
