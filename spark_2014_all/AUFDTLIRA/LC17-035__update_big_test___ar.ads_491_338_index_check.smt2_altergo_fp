(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type it1

predicate in_range1(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : it1, it1 -> bool

logic dummy : it1

type it1__ref = { it1__content : it1
}

function it1__ref___projection(a: it1__ref) : it1 = (a).it1__content

type it2

predicate in_range2(x: int) = ((5 <= x) and (x <= 50))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : it2, it2 -> bool

logic dummy1 : it2

type it2__ref = { it2__content : it2
}

function it2__ref___projection(a: it2__ref) : it2 = (a).it2__content

type it3

predicate in_range3(x: int) = ((1 <= x) and (x <= 16))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : it3, it3 -> bool

logic dummy2 : it3

type it3__ref = { it3__content : it3
}

function it3__ref___projection(a: it3__ref) : it3 = (a).it3__content

type et1

predicate in_range4(x: int) = ((0 <= x) and (x <= 99))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : et1, et1 -> bool

logic dummy3 : et1

type et1__ref = { et1__content : et1
}

function et1__ref___projection(a: et1__ref) : et1 = (a).et1__content

logic to_rep : et1 -> int

logic of_rep : int -> et1

axiom inversion_axiom : (forall x:et1 [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:et1 [to_rep(x)]. in_range4(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range4(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,et1) farray
}

logic slide : (int,et1) farray, int, int -> (int,et1) farray

axiom slide_eq :
  (forall a:(int,et1) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,et1) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq6 : (int,et1) farray, int, int, (int,et1) farray, int,
  int -> bool

axiom bool_eq_def5 :
  (forall a:(int,et1) farray. forall a__first:int. forall a__last:int.
  forall b:(int,et1) farray. forall b__first:int. forall b__last:int
  [bool_eq6(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_154:int. ((((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) and
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))) or
  (not ((a__first <= temp___idx_154) and (temp___idx_154 <= a__last)))))) ->
  (bool_eq6(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)]))))))) ->
  (bool_eq6(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,et1) farray. forall b:(int,et1) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq6(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))))))))

logic dummy4 : (int,et1) farray

logic value__size : int

logic object__size : (int,et1) farray -> int

logic value__component__size : int

logic object__component__size : (int,et1) farray -> int

logic value__alignment : int

logic object__alignment : (int,et1) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,et1) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,et1) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,et1) farray. (0 <= object__alignment(a)))

logic user_eq4 : (int,et1) farray, (int,et1) farray -> bool

type map__ref1 = { map__content1 : (int,(int,et1) farray) farray
}

logic slide1 : (int,(int,et1) farray) farray, int,
  int -> (int,(int,et1) farray) farray

axiom slide_eq1 :
  (forall a:(int,(int,et1) farray) farray.
  (forall first:int [slide1(a, first, first)]. (slide1(a, first, first) = a)))

axiom slide_def1 :
  (forall a:(int,(int,et1) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq7 : (int,(int,et1) farray) farray, int, int,
  (int,(int,et1) farray) farray, int, int -> bool

axiom bool_eq_def6 :
  (forall a:(int,(int,et1) farray) farray. forall a__first:int.
  forall a__last:int. forall b:(int,(int,et1) farray) farray.
  forall b__first:int. forall b__last:int [bool_eq7(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_155:int. ((((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) and (bool_eq6((a[temp___idx_155]), 1, 10,
  (b[((b__first - a__first) + temp___idx_155)]), 1, 10) = true)) or
  (not ((a__first <= temp___idx_155) and (temp___idx_155 <= a__last)))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq6((a[temp___idx_155]), 1, 10,
  (b[((b__first - a__first) + temp___idx_155)]), 1, 10) = true))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,(int,et1) farray) farray.
  forall b:(int,(int,et1) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq6((a[temp___idx_155]), 1, 10,
  (b[((b__first - a__first) + temp___idx_155)]), 1, 10) = true)))))))

logic dummy5 : (int,(int,et1) farray) farray

logic value__size1 : int

logic object__size1 : (int,(int,et1) farray) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,(int,et1) farray) farray -> int

logic value__alignment1 : int

logic object__alignment1 : (int,(int,et1) farray) farray -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:(int,(int,et1) farray) farray. (0 <= object__size1(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,(int,et1) farray) farray.
  (0 <= object__component__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:(int,(int,et1) farray) farray. (0 <= object__alignment1(a)))

logic user_eq5 : (int,(int,et1) farray) farray,
  (int,(int,et1) farray) farray -> bool

type map__ref2 = { map__content2 : (int,(int,(int,et1) farray) farray) farray
}

logic slide2 : (int,(int,(int,et1) farray) farray) farray, int,
  int -> (int,(int,(int,et1) farray) farray) farray

axiom slide_eq2 :
  (forall a:(int,(int,(int,et1) farray) farray) farray.
  (forall first:int [slide2(a, first, first)]. (slide2(a, first, first) = a)))

axiom slide_def2 :
  (forall a:(int,(int,(int,et1) farray) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq8 : (int,(int,(int,et1) farray) farray) farray, int, int,
  (int,(int,(int,et1) farray) farray) farray, int, int -> bool

axiom bool_eq_def7 :
  (forall a:(int,(int,(int,et1) farray) farray) farray. forall a__first:int.
  forall a__last:int. forall b:(int,(int,(int,et1) farray) farray) farray.
  forall b__first:int. forall b__last:int [bool_eq8(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_156:int. ((((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) and (bool_eq7((a[temp___idx_156]), 5, 50,
  (b[((b__first - a__first) + temp___idx_156)]), 5, 50) = true)) or
  (not ((a__first <= temp___idx_156) and (temp___idx_156 <= a__last)))))) ->
  (bool_eq8(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) -> (bool_eq7((a[temp___idx_156]), 5, 50,
  (b[((b__first - a__first) + temp___idx_156)]), 5, 50) = true))))) ->
  (bool_eq8(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev2 :
  (forall a:(int,(int,(int,et1) farray) farray) farray.
  forall b:(int,(int,(int,et1) farray) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq8(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) -> (bool_eq7((a[temp___idx_156]), 5, 50,
  (b[((b__first - a__first) + temp___idx_156)]), 5, 50) = true)))))))

logic attr__ATTRIBUTE_ADDRESS : int

logic i : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic j : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic k : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic e : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic temp___1874 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___1882 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1889 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1897 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1904 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1913 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___1921 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1928 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1936 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1943 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1952 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___1960 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1967 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1975 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1982 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1991 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___1999 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___2006 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___2014 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___2021 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___5530 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___5536 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___5542 : (int,et1) farray, int, int -> (int,et1) farray

axiom def_axiom :
  (forall temp___5532:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___5533:int.
  (forall temp___5534:(int,(int,et1) farray) farray.
  (in_range3(temp___5533) ->
  (forall temp___5535:int. (((temp___5535 = temp___5533) ->
  ((temp___5530(temp___5532, temp___5533,
  temp___5534)[temp___5535]) = temp___5534)) and
  ((not (temp___5535 = temp___5533)) -> ((temp___5530(temp___5532,
  temp___5533, temp___5534)[temp___5535]) = (temp___5532[temp___5535])))))))))

axiom def_axiom1 :
  (forall temp___5538:(int,(int,et1) farray) farray.
  (forall temp___5539:int.
  (forall temp___5540:(int,et1) farray. (in_range2(temp___5539) ->
  (forall temp___5541:int. (((temp___5541 = temp___5539) ->
  ((temp___5536(temp___5538, temp___5539,
  temp___5540)[temp___5541]) = temp___5540)) and
  ((not (temp___5541 = temp___5539)) -> ((temp___5536(temp___5538,
  temp___5539, temp___5540)[temp___5541]) = (temp___5538[temp___5541])))))))))

axiom def_axiom2 :
  (forall temp___5544:(int,et1) farray.
  (forall temp___5545:int. forall temp___5546:int.
  ((in_range1(temp___5545) and in_range4(temp___5546)) ->
  (forall temp___5547:int. (((temp___5547 = temp___5545) ->
  (to_rep((temp___5542(temp___5544, temp___5545,
  temp___5546)[temp___5547])) = temp___5546)) and
  ((not (temp___5547 = temp___5545)) -> ((temp___5542(temp___5544,
  temp___5545, temp___5546)[temp___5547]) = (temp___5544[temp___5547]))))))))

axiom def_axiom3 :
  (forall temp___1876:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___1877:int. forall temp___1879:int.
  (forall temp___1878:(int,(int,et1) farray) farray.
  forall temp___1880:(int,(int,et1) farray) farray.
  ((in_range3(temp___1877) and in_range3(temp___1879)) ->
  (forall temp___1881:int. (((temp___1881 = temp___1879) ->
  ((temp___1874(temp___1876, temp___1877, temp___1878, temp___1879,
  temp___1880)[temp___1881]) = temp___1880)) and
  ((not (temp___1881 = temp___1879)) -> (((temp___1881 = temp___1877) ->
  ((temp___1874(temp___1876, temp___1877, temp___1878, temp___1879,
  temp___1880)[temp___1881]) = temp___1878)) and
  ((not (temp___1881 = temp___1877)) -> ((temp___1874(temp___1876,
  temp___1877, temp___1878, temp___1879,
  temp___1880)[temp___1881]) = (temp___1876[temp___1881])))))))))))

axiom def_axiom4 :
  (forall temp___1884:(int,(int,et1) farray) farray.
  (forall temp___1885:int.
  (forall temp___1886:(int,et1) farray. (in_range2(temp___1885) ->
  (forall temp___1887:int. (((temp___1887 = temp___1885) ->
  ((temp___1882(temp___1884, temp___1885,
  temp___1886)[temp___1887]) = temp___1886)) and
  ((not (temp___1887 = temp___1885)) -> ((temp___1882(temp___1884,
  temp___1885, temp___1886)[temp___1887]) = (temp___1884[temp___1887])))))))))

axiom def_axiom5 :
  (forall temp___1891:(int,et1) farray.
  (forall temp___1892:int. forall temp___1893:int.
  ((in_range1(temp___1892) and in_range4(temp___1893)) ->
  (forall temp___1894:int. (((temp___1894 = temp___1892) ->
  (to_rep((temp___1889(temp___1891, temp___1892,
  temp___1893)[temp___1894])) = temp___1893)) and
  ((not (temp___1894 = temp___1892)) -> ((temp___1889(temp___1891,
  temp___1892, temp___1893)[temp___1894]) = (temp___1891[temp___1894]))))))))

axiom def_axiom6 :
  (forall temp___1899:(int,(int,et1) farray) farray.
  (forall temp___1900:int.
  (forall temp___1901:(int,et1) farray. (in_range2(temp___1900) ->
  (forall temp___1902:int. (((temp___1902 = temp___1900) ->
  ((temp___1897(temp___1899, temp___1900,
  temp___1901)[temp___1902]) = temp___1901)) and
  ((not (temp___1902 = temp___1900)) -> ((temp___1897(temp___1899,
  temp___1900, temp___1901)[temp___1902]) = (temp___1899[temp___1902])))))))))

axiom def_axiom7 :
  (forall temp___1906:(int,et1) farray.
  (forall temp___1907:int. forall temp___1908:int.
  ((in_range1(temp___1907) and in_range4(temp___1908)) ->
  (forall temp___1909:int. (((temp___1909 = temp___1907) ->
  (to_rep((temp___1904(temp___1906, temp___1907,
  temp___1908)[temp___1909])) = temp___1908)) and
  ((not (temp___1909 = temp___1907)) -> ((temp___1904(temp___1906,
  temp___1907, temp___1908)[temp___1909]) = (temp___1906[temp___1909]))))))))

axiom def_axiom8 :
  (forall temp___1915:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___1916:int. forall temp___1918:int.
  (forall temp___1917:(int,(int,et1) farray) farray.
  forall temp___1919:(int,(int,et1) farray) farray.
  ((in_range3(temp___1916) and in_range3(temp___1918)) ->
  (forall temp___1920:int. (((temp___1920 = temp___1918) ->
  ((temp___1913(temp___1915, temp___1916, temp___1917, temp___1918,
  temp___1919)[temp___1920]) = temp___1919)) and
  ((not (temp___1920 = temp___1918)) -> (((temp___1920 = temp___1916) ->
  ((temp___1913(temp___1915, temp___1916, temp___1917, temp___1918,
  temp___1919)[temp___1920]) = temp___1917)) and
  ((not (temp___1920 = temp___1916)) -> ((temp___1913(temp___1915,
  temp___1916, temp___1917, temp___1918,
  temp___1919)[temp___1920]) = (temp___1915[temp___1920])))))))))))

axiom def_axiom9 :
  (forall temp___1923:(int,(int,et1) farray) farray.
  (forall temp___1924:int.
  (forall temp___1925:(int,et1) farray. (in_range2(temp___1924) ->
  (forall temp___1926:int. (((temp___1926 = temp___1924) ->
  ((temp___1921(temp___1923, temp___1924,
  temp___1925)[temp___1926]) = temp___1925)) and
  ((not (temp___1926 = temp___1924)) -> ((temp___1921(temp___1923,
  temp___1924, temp___1925)[temp___1926]) = (temp___1923[temp___1926])))))))))

axiom def_axiom10 :
  (forall temp___1930:(int,et1) farray.
  (forall temp___1931:int. forall temp___1932:int.
  ((in_range1(temp___1931) and in_range4(temp___1932)) ->
  (forall temp___1933:int. (((temp___1933 = temp___1931) ->
  (to_rep((temp___1928(temp___1930, temp___1931,
  temp___1932)[temp___1933])) = temp___1932)) and
  ((not (temp___1933 = temp___1931)) -> ((temp___1928(temp___1930,
  temp___1931, temp___1932)[temp___1933]) = (temp___1930[temp___1933]))))))))

axiom def_axiom11 :
  (forall temp___1938:(int,(int,et1) farray) farray.
  (forall temp___1939:int.
  (forall temp___1940:(int,et1) farray. (in_range2(temp___1939) ->
  (forall temp___1941:int. (((temp___1941 = temp___1939) ->
  ((temp___1936(temp___1938, temp___1939,
  temp___1940)[temp___1941]) = temp___1940)) and
  ((not (temp___1941 = temp___1939)) -> ((temp___1936(temp___1938,
  temp___1939, temp___1940)[temp___1941]) = (temp___1938[temp___1941])))))))))

axiom def_axiom12 :
  (forall temp___1945:(int,et1) farray.
  (forall temp___1946:int. forall temp___1947:int.
  ((in_range1(temp___1946) and in_range4(temp___1947)) ->
  (forall temp___1948:int. (((temp___1948 = temp___1946) ->
  (to_rep((temp___1943(temp___1945, temp___1946,
  temp___1947)[temp___1948])) = temp___1947)) and
  ((not (temp___1948 = temp___1946)) -> ((temp___1943(temp___1945,
  temp___1946, temp___1947)[temp___1948]) = (temp___1945[temp___1948]))))))))

axiom def_axiom13 :
  (forall temp___1954:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___1955:int. forall temp___1957:int.
  (forall temp___1956:(int,(int,et1) farray) farray.
  forall temp___1958:(int,(int,et1) farray) farray.
  ((in_range3(temp___1955) and in_range3(temp___1957)) ->
  (forall temp___1959:int. (((temp___1959 = temp___1957) ->
  ((temp___1952(temp___1954, temp___1955, temp___1956, temp___1957,
  temp___1958)[temp___1959]) = temp___1958)) and
  ((not (temp___1959 = temp___1957)) -> (((temp___1959 = temp___1955) ->
  ((temp___1952(temp___1954, temp___1955, temp___1956, temp___1957,
  temp___1958)[temp___1959]) = temp___1956)) and
  ((not (temp___1959 = temp___1955)) -> ((temp___1952(temp___1954,
  temp___1955, temp___1956, temp___1957,
  temp___1958)[temp___1959]) = (temp___1954[temp___1959])))))))))))

axiom def_axiom14 :
  (forall temp___1962:(int,(int,et1) farray) farray.
  (forall temp___1963:int.
  (forall temp___1964:(int,et1) farray. (in_range2(temp___1963) ->
  (forall temp___1965:int. (((temp___1965 = temp___1963) ->
  ((temp___1960(temp___1962, temp___1963,
  temp___1964)[temp___1965]) = temp___1964)) and
  ((not (temp___1965 = temp___1963)) -> ((temp___1960(temp___1962,
  temp___1963, temp___1964)[temp___1965]) = (temp___1962[temp___1965])))))))))

axiom def_axiom15 :
  (forall temp___1969:(int,et1) farray.
  (forall temp___1970:int. forall temp___1971:int.
  ((in_range1(temp___1970) and in_range4(temp___1971)) ->
  (forall temp___1972:int. (((temp___1972 = temp___1970) ->
  (to_rep((temp___1967(temp___1969, temp___1970,
  temp___1971)[temp___1972])) = temp___1971)) and
  ((not (temp___1972 = temp___1970)) -> ((temp___1967(temp___1969,
  temp___1970, temp___1971)[temp___1972]) = (temp___1969[temp___1972]))))))))

axiom def_axiom16 :
  (forall temp___1977:(int,(int,et1) farray) farray.
  (forall temp___1978:int.
  (forall temp___1979:(int,et1) farray. (in_range2(temp___1978) ->
  (forall temp___1980:int. (((temp___1980 = temp___1978) ->
  ((temp___1975(temp___1977, temp___1978,
  temp___1979)[temp___1980]) = temp___1979)) and
  ((not (temp___1980 = temp___1978)) -> ((temp___1975(temp___1977,
  temp___1978, temp___1979)[temp___1980]) = (temp___1977[temp___1980])))))))))

axiom def_axiom17 :
  (forall temp___1984:(int,et1) farray.
  (forall temp___1985:int. forall temp___1986:int.
  ((in_range1(temp___1985) and in_range4(temp___1986)) ->
  (forall temp___1987:int. (((temp___1987 = temp___1985) ->
  (to_rep((temp___1982(temp___1984, temp___1985,
  temp___1986)[temp___1987])) = temp___1986)) and
  ((not (temp___1987 = temp___1985)) -> ((temp___1982(temp___1984,
  temp___1985, temp___1986)[temp___1987]) = (temp___1984[temp___1987]))))))))

axiom def_axiom18 :
  (forall temp___1993:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___1994:int. forall temp___1996:int.
  (forall temp___1995:(int,(int,et1) farray) farray.
  forall temp___1997:(int,(int,et1) farray) farray.
  ((in_range3(temp___1994) and in_range3(temp___1996)) ->
  (forall temp___1998:int. (((temp___1998 = temp___1996) ->
  ((temp___1991(temp___1993, temp___1994, temp___1995, temp___1996,
  temp___1997)[temp___1998]) = temp___1997)) and
  ((not (temp___1998 = temp___1996)) -> (((temp___1998 = temp___1994) ->
  ((temp___1991(temp___1993, temp___1994, temp___1995, temp___1996,
  temp___1997)[temp___1998]) = temp___1995)) and
  ((not (temp___1998 = temp___1994)) -> ((temp___1991(temp___1993,
  temp___1994, temp___1995, temp___1996,
  temp___1997)[temp___1998]) = (temp___1993[temp___1998])))))))))))

axiom def_axiom19 :
  (forall temp___2001:(int,(int,et1) farray) farray.
  (forall temp___2002:int.
  (forall temp___2003:(int,et1) farray. (in_range2(temp___2002) ->
  (forall temp___2004:int. (((temp___2004 = temp___2002) ->
  ((temp___1999(temp___2001, temp___2002,
  temp___2003)[temp___2004]) = temp___2003)) and
  ((not (temp___2004 = temp___2002)) -> ((temp___1999(temp___2001,
  temp___2002, temp___2003)[temp___2004]) = (temp___2001[temp___2004])))))))))

axiom def_axiom20 :
  (forall temp___2008:(int,et1) farray.
  (forall temp___2009:int. forall temp___2010:int.
  ((in_range1(temp___2009) and in_range4(temp___2010)) ->
  (forall temp___2011:int. (((temp___2011 = temp___2009) ->
  (to_rep((temp___2006(temp___2008, temp___2009,
  temp___2010)[temp___2011])) = temp___2010)) and
  ((not (temp___2011 = temp___2009)) -> ((temp___2006(temp___2008,
  temp___2009, temp___2010)[temp___2011]) = (temp___2008[temp___2011]))))))))

axiom def_axiom21 :
  (forall temp___2016:(int,(int,et1) farray) farray.
  (forall temp___2017:int.
  (forall temp___2018:(int,et1) farray. (in_range2(temp___2017) ->
  (forall temp___2019:int. (((temp___2019 = temp___2017) ->
  ((temp___2014(temp___2016, temp___2017,
  temp___2018)[temp___2019]) = temp___2018)) and
  ((not (temp___2019 = temp___2017)) -> ((temp___2014(temp___2016,
  temp___2017, temp___2018)[temp___2019]) = (temp___2016[temp___2019])))))))))

axiom def_axiom22 :
  (forall temp___2023:(int,et1) farray.
  (forall temp___2024:int. forall temp___2025:int.
  ((in_range1(temp___2024) and in_range4(temp___2025)) ->
  (forall temp___2026:int. (((temp___2026 = temp___2024) ->
  (to_rep((temp___2021(temp___2023, temp___2024,
  temp___2025)[temp___2026])) = temp___2025)) and
  ((not (temp___2026 = temp___2024)) -> ((temp___2021(temp___2023,
  temp___2024, temp___2025)[temp___2026]) = (temp___2023[temp___2026]))))))))

 (* File "ar.adb", line 864, characters 0-0 *)
goal WP_parameter_def :
  (forall a:(int,(int,(int,et1) farray) farray) farray. forall k_next:int.
  forall f:int. forall o:int. forall o1:et1. forall o2:(int,et1) farray.
  forall o3:(int,(int,et1) farray) farray.
  forall o4:(int,(int,(int,et1) farray) farray) farray. forall o5:int.
  forall temp___5580:(int,(int,et1) farray) farray.
  forall o6:(int,et1) farray. forall o7:(int,et1) farray. forall o8:int.
  forall o9:int. forall temp___5570:(int,(int,et1) farray) farray.
  forall o10:int. forall o11:(int,et1) farray. forall o12:(int,et1) farray.
  forall o13:(int,(int,et1) farray) farray.
  forall o14:(int,(int,et1) farray) farray. forall o15:int.
  forall temp___5571:(int,(int,(int,et1) farray) farray) farray.
  forall t:(int,(int,(int,et1) farray) farray) farray.
  forall a1:(int,(int,(int,et1) farray) farray) farray. forall k_next1:int.
  forall result:int. forall f1:int. forall result1:int. forall f2:int.
  forall result2:(int,(int,(int,et1) farray) farray) farray.
  forall a2:(int,(int,(int,et1) farray) farray) farray.
  forall a3:(int,(int,(int,et1) farray) farray) farray. forall k_next2:int.
  forall f3:int. forall t1:(int,(int,(int,et1) farray) farray) farray.
  forall a4:(int,(int,(int,et1) farray) farray) farray. forall k_next3:int.
  forall f4:int. forall t2:(int,(int,(int,et1) farray) farray) farray.
  forall result3:bool. (in_range1(i) -> (in_range2(j) -> (in_range3(k) ->
  (in_range4(e) -> (((((1 <= 16) -> in_range3(k_next)) and (((0 <= 99) ->
  in_range4(f)) and ((((bool_eq8(a1, 1, 16, temp___5530(t, k,
  temp___5536((t[k]), j, temp___5542(((t[k])[j]), i, e))), 1, 16) = true) and
  (((k = 16) and (k_next1 = 1)) or ((k <  16) and (k_next1 = (k + 1))))) and
  in_range3(k_next1)) and (((1 <= 16) -> in_range3(k_next1)) and
  ((((e = 0) and (({ int__content = result } = { int__content = f }) and
  (f1 = 99))) or ((not (e = 0)) and ((((o = (e - 1)) and
  in_range4((e - 1))) and (({ int__content = result1 } = { int__content = f
  }) and (f2 = o))) and (f1 = f2)))) and (((((to_rep(o1) = f1) and
  (o2 = (((a1[k_next1])[j])[i <- o1]))) and
  (o3 = ((a1[k_next1])[j <- o2]))) and (o4 = (a1[k_next1 <- o3]))) and
  ((a1 = result2) and (a2 = o4)))))))) and (((t = t1) and ((f1 = f3) and
  ((k_next1 = k_next2) and (a2 = a3)))) and ((t2 = t) and ((f4 = f1) and
  ((k_next3 = k_next1) and (a4 = a2)))))) -> ((k <  16) -> ((((0 <  e) and
  ((((((o10 = (e - 1)) and in_range4((e - 1))) and ((((((1 <= (k + 1)) and
  ((k + 1) <= 16)) and (o9 = (k + 1))) and (temp___5570 = (a[o9]))) and
  (o11 = (temp___5570[j]))) and (o12 = temp___1904(o11, i, o10)))) and
  (((((1 <= (k + 1)) and ((k + 1) <= 16)) and (o8 = (k + 1))) and
  (o13 = (a[o8]))) and (o14 = temp___1897(o13, j, o12)))) and
  (((o15 = (k + 1)) and in_range3((k + 1))) and (temp___5571 = temp___1874(a,
  k, temp___1882((a[k]), j, temp___1889(((a[k])[j]), i, e)), o15, o14)))) and
  (result3 = bool_eq8(a3, 1, 16, temp___5571, 1, 16)))) or
  ((not (0 <  e)) and (result3 = false))) -> ((not (result3 = true)) ->
  ((e = 0) -> (((((((1 <= (k + 1)) and ((k + 1) <= 16)) and
  (o5 = (k + 1))) and (temp___5580 = (a[o5]))) and
  (o6 = (temp___5580[j]))) and (o7 = temp___1943(o6, i, 99))) ->
  (1 <= (k + 1)))))))))))))
