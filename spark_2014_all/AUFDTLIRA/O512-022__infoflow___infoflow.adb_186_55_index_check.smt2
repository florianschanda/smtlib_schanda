(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int integer) Int Int (Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (integer Int) (Array Int integer))
(assert (forall ((v integer)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_133 Int)) (=> (and (<= a__first temp___idx_133) (<= temp___idx_133 a__last)) (= (to_rep (select a temp___idx_133)) (to_rep (select b (+ (- b__first a__first) temp___idx_133))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_133 Int)) (=> (and (<= a__first temp___idx_133) (<= temp___idx_133 a__last)) (= (to_rep (select a temp___idx_133)) (to_rep (select b (+ (- b__first a__first) temp___idx_133)))))))))))
(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int Int) Int)
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq1 (us_t us_t) Bool)
(declare-const dummy1 us_t)
(declare-datatypes () ((arr__ref (mk_arr__ref (arr__content us_t)))))
(define-fun arr__ref___projection ((a arr__ref)) us_t (arr__content a))
(define-fun dynamic_invariant1 ((temp___expr_225 us_t) (temp___is_init_222 Bool) (temp___skip_constant_223 Bool) (temp___do_toplevel_224 Bool)) Bool (=> (not (= temp___skip_constant_223 true)) (dynamic_property (- 2147483648) 2147483647 (first1 temp___expr_225) (last1 temp___expr_225))))
(declare-const a_v1__first integer)
(declare-const a_v1__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const a_v2__first integer)
(declare-const a_v2__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const b_v1 us_t)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const c_v1 us_t)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const b_v2 us_t)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const c_v2 us_t)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const k_1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const k_2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const i Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (integer integer) Bool)
(declare-const dummy2 integer)
(declare-datatypes () ((t42b__ref (mk_t42b__ref (t42b__content integer)))))
(define-fun t42b__ref___projection ((a t42b__ref)) integer (t42b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(define-fun dynamic_property2 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((t49b__ref (mk_t49b__ref (t49b__content integer)))))
(define-fun t49b__ref___projection ((a t49b__ref)) integer (t49b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((t62b__ref (mk_t62b__ref (t62b__content integer)))))
(define-fun t62b__ref___projection ((a t62b__ref)) integer (t62b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(define-fun dynamic_property4 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t73b__ref (mk_t73b__ref (t73b__content integer)))))
(define-fun t73b__ref___projection ((a t73b__ref)) integer (t73b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const a_v1 (Array Int integer))
(declare-const a_v2 (Array Int integer))
(declare-const i_v1 Int)
(declare-const i_v11 Int)
(declare-const i_v2 Int)
(declare-const i_v21 Int)
(declare-const o Int)
(declare-const o1 integer)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 integer)
(declare-const o5 Int)
(declare-const temp___433 Int)
(declare-const temp___431 (Array Int integer))
(declare-const m Int)
(declare-const o6 Int)
(declare-const o7 integer)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 integer)
(declare-const o11 Int)
(declare-const o12 integer)
(declare-const o13 Int)
(declare-const o14 (Array Int integer))
(declare-const m1 Int)
(declare-const o15 Int)
(declare-const o16 integer)
(declare-const o17 Int)
(declare-const temp___443 Int)
(declare-const temp___440 (Array Int integer))
(declare-const temp___438 Int)
(declare-const m2 Int)
(declare-const o18 Int)
(declare-const o19 integer)
(declare-const o20 Int)
(declare-const m3 Int)
(declare-const o21 Int)
(declare-const o22 integer)
(declare-const o23 Int)
(declare-const temp___437 Int)
(declare-const o24 Int)
(declare-const o25 integer)
(declare-const o26 Int)
(declare-const o27 integer)
(declare-const o28 Int)
(declare-const o29 (Array Int integer))
(declare-const m4 Int)
(declare-const o30 Int)
(declare-const o31 integer)
(declare-const o32 Int)
(declare-const m5 Int)
(declare-const o33 Int)
(declare-const o34 integer)
(declare-const o35 Int)
(declare-const temp___451 Int)
(declare-const temp___449 (Array Int integer))
(declare-const m6 Int)
(declare-const o36 Int)
(declare-const o37 integer)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const o40 integer)
(declare-const o41 Int)
(declare-const o42 integer)
(declare-const o43 Int)
(declare-const o44 (Array Int integer))
(declare-const m7 Int)
(declare-const o45 Int)
(declare-const o46 integer)
(declare-const o47 Int)
(declare-const m8 Int)
(declare-const o48 Int)
(declare-const o49 integer)
(declare-const o50 Int)
(declare-const m9 Int)
(declare-const o51 Int)
(declare-const o52 integer)
(declare-const o53 Int)
(declare-const temp___464 Int)
(declare-const temp___462 Int)
(declare-const temp___460 (Array Int integer))
(declare-const m10 Int)
(declare-const o54 Int)
(declare-const o55 integer)
(declare-const o56 Int)
(declare-const m11 Int)
(declare-const o57 Int)
(declare-const o58 integer)
(declare-const o59 Int)
(declare-const temp___458 Int)
(declare-const o60 Int)
(declare-const o61 integer)
(declare-const o62 Int)
(declare-const o63 integer)
(declare-const o64 Int)
(declare-const o65 (Array Int integer))
(declare-const o66 Int)
(declare-const o67 integer)
(declare-const o68 Int)
(declare-const o69 Int)
(declare-const o70 integer)
(declare-const o71 Int)
(declare-const a_v11 (Array Int integer))
(declare-const a_v21 (Array Int integer))
(declare-const result Bool)
(declare-const result1 Bool)
(declare-const result2 Int)
(declare-const i_v12 Int)
(declare-const a_v12 (Array Int integer))
(declare-const i_v13 Int)
(declare-const result3 (Array Int integer))
(declare-const a_v13 (Array Int integer))
(declare-const result4 Int)
(declare-const i_v14 Int)
(declare-const a_v14 (Array Int integer))
(declare-const i_v15 Int)
(declare-const a_v15 (Array Int integer))
(declare-const i_v16 Int)
(declare-const a_v16 (Array Int integer))
(declare-const i_v17 Int)
(declare-const a_v17 (Array Int integer))
(declare-const i_v18 Int)
(declare-const a_v18 (Array Int integer))
(declare-const i_v19 Int)
(declare-const a_v19 (Array Int integer))
(declare-const i_v110 Int)
(declare-const result5 Int)
(declare-const i_v111 Int)
(declare-const a_v110 (Array Int integer))
(declare-const i_v112 Int)
(declare-const result6 Bool)
(declare-const result7 (Array Int integer))
(declare-const a_v111 (Array Int integer))
(declare-const result8 Int)
(declare-const i_v113 Int)
(declare-const a_v112 (Array Int integer))
(declare-const i_v114 Int)
(declare-const a_v113 (Array Int integer))
(declare-const i_v115 Int)
(declare-const a_v114 (Array Int integer))
(declare-const i_v116 int__ref)
(declare-const a_v115 (Array Int integer))
(declare-const i_v117 Int)
(declare-const a_v116 map__ref)
(declare-const i_v118 int__ref)
(declare-const a_v117 (Array Int integer))
(declare-const i_v119 Int)
(declare-const a_v118 map__ref)
(declare-const i_v120 int__ref)
(declare-const a_v119 (Array Int integer))
(declare-const i_v121 Int)
(declare-const result9 Bool)
(declare-const result10 int__ref)
(declare-const i_v22 Int)
(declare-const a_v22 (Array Int integer))
(declare-const i_v23 Int)
(declare-const result11 map__ref)
(declare-const a_v23 (Array Int integer))
(declare-const result12 int__ref)
(declare-const i_v24 Int)
(declare-const a_v24 map__ref)
(declare-const i_v25 int__ref)
(declare-const a_v25 (Array Int integer))
(declare-const i_v26 Int)
(declare-const a_v26 map__ref)
(declare-const i_v27 int__ref)
(declare-const a_v27 (Array Int integer))
(declare-const i_v28 Int)
(declare-const a_v28 map__ref)
(declare-const i_v29 int__ref)
(declare-const a_v29 (Array Int integer))
(declare-const i_v210 Int)
(declare-const a_v210 map__ref)
(declare-const i_v211 int__ref)
(declare-const a_v211 (Array Int integer))
(declare-const i_v212 Int)
(declare-const result13 Bool)
(declare-const result14 Bool)
(declare-const result15 int__ref)
(declare-const i_v213 Int)
(declare-const a_v212 (Array Int integer))
(declare-const i_v214 Int)
(declare-const result16 Bool)
(declare-const result17 map__ref)
(declare-const a_v213 (Array Int integer))
(declare-const result18 int__ref)
(declare-const i_v215 Int)
(declare-const a_v214 map__ref)
(declare-const i_v216 int__ref)
(declare-const a_v215 (Array Int integer))
(declare-const i_v217 Int)
(declare-const a_v216 map__ref)
(declare-const i_v218 int__ref)
(declare-const a_v217 (Array Int integer))
(declare-const i_v219 Int)
(declare-const a_v218 map__ref)
(declare-const i_v220 int__ref)
(declare-const a_v219 (Array Int integer))
(declare-const i_v221 Int)
(declare-const a_v220 map__ref)
(declare-const i_v222 int__ref)
(declare-const a_v221 (Array Int integer))
(declare-const i_v223 Int)
(declare-const a_v120 map__ref)
(declare-const a_v222 map__ref)
(declare-const i_v122 int__ref)
(declare-const i_v123 int__ref)
(declare-const i_v224 int__ref)
(declare-const i_v225 int__ref)
(declare-const a_v121 (Array Int integer))
(declare-const a_v223 (Array Int integer))
(declare-const i_v124 Int)
(declare-const i_v125 Int)
(declare-const i_v226 Int)
(declare-const i_v227 Int)
(assert (dynamic_property (- 2147483648) 2147483647 (to_rep a_v1__first) (to_rep a_v1__last)))
(assert (dynamic_property (- 2147483648) 2147483647 (to_rep a_v2__first) (to_rep a_v2__last)))
(assert (dynamic_invariant1 b_v1 true false true))
(assert (dynamic_invariant1 c_v1 true false true))
(assert (dynamic_invariant1 b_v2 true false true))
(assert (dynamic_invariant1 c_v2 true false true))
(assert (in_range1 k_1))
(assert (in_range1 k_2))
(assert (in_range1 i))
(assert (and (= (to_rep a_v1__first) 1) (and (= (to_rep (first (rt b_v1))) 1) (and (= (to_rep (first (rt c_v1))) 1) (and (= (to_rep a_v1__last) (to_rep (last (rt b_v1)))) (and (= (to_rep a_v1__last) (to_rep (last (rt c_v1)))) (and (and (<= (to_rep (first (rt b_v1))) k_1) (<= k_1 (to_rep (last (rt b_v1))))) (and (= (to_rep a_v2__first) 1) (and (= (to_rep (first (rt b_v2))) 1) (and (= (to_rep (first (rt c_v2))) 1) (and (= (to_rep a_v2__last) (to_rep (last (rt b_v2)))) (and (= (to_rep a_v2__last) (to_rep (last (rt c_v2)))) (and (and (<= (to_rep (first (rt b_v2))) k_2) (<= k_2 (to_rep (last (rt b_v2))))) (= (to_rep a_v1__last) (to_rep a_v2__last)))))))))))))))
(assert (forall ((m12 Int)) (=> (and (<= (to_rep a_v1__first) m12) (<= m12 k_1)) (= (to_rep (select a_v18 m12)) (to_rep (select (elts b_v1) m12))))))
(assert (and (= temp___443 (+ k_1 1)) (in_range1 (+ k_1 1))))
(assert (= (mk_int__ref result5) (mk_int__ref i_v11)))
(assert (= i_v111 temp___443))
(assert (<= temp___443 i_v111))
(assert (<= i_v111 (to_rep a_v1__last)))
(assert (and (forall ((m12 Int)) (=> (and (<= (to_rep a_v1__first) m12) (<= m12 k_1)) (= (to_rep (select a_v110 m12)) (to_rep (select (elts b_v1) m12))))) (forall ((m12 Int)) (=> (and (<= (+ k_1 1) m12) (<= m12 (- i_v112 1))) (= (to_rep (select a_v110 m12)) (to_rep (select (elts c_v1) (- m12 k_1))))))))
(assert (and (and (=> (<= (+ k_1 1) (to_rep a_v1__last)) (dynamic_property2 (+ k_1 1) (to_rep a_v1__last) i_v112)) (forall ((temp___441 Int)) (=> (and (<= (to_rep a_v1__first) temp___441) (<= temp___441 (to_rep a_v1__last))) (=> (<= i_v112 temp___441) (= (select a_v110 temp___441) (select a_v18 temp___441)))))) (and (<= (+ k_1 1) i_v112) (<= i_v112 (to_rep a_v1__last)))))
(assert (= (= result6 true) (forall ((m12 Int)) (=> (and (<= (to_rep a_v1__first) m12) (<= m12 k_1)) (= (to_rep (select a_v110 m12)) (to_rep (select (elts b_v1) m12)))))))
(assert (= result6 true))
(assert (<= (+ k_1 1) m2))
(assert (<= m2 (- i_v112 1)))
(assert (not (<= (to_rep (first (rt c_v1))) (- m2 k_1))))
(check-sat)
(exit)
