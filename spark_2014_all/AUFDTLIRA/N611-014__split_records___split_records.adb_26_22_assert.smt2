(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort natural 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__split_records__record_with_mutable_discrs__present Bool)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) Bool (rec__split_records__record_with_mutable_discrs__present a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__split_records__record_with_mutable_discrs__field natural)))))
(define-fun us_split_fields_Field__projection ((a us_split_fields)) natural (rec__split_records__record_with_mutable_discrs__field a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields) (attr__constrained Bool)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___3__projection ((a us_rep)) Bool (attr__constrained a))
(define-fun split_records__record_with_mutable_discrs__field__pred ((a us_rep)) Bool (= (to_int1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))) 1))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (= (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a)) (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 b))) (=> (split_records__record_with_mutable_discrs__field__pred a) (= (to_rep (rec__split_records__record_with_mutable_discrs__field (us_split_fields1 a))) (to_rep (rec__split_records__record_with_mutable_discrs__field (us_split_fields1 b)))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit Int)
(declare-const split_records__record_with_mutable_discrs__present__position Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit))
(assert (< split_records__record_with_mutable_discrs__present__first__bit split_records__record_with_mutable_discrs__present__last__bit))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position))
(declare-const split_records__record_with_mutable_discrs__field__first__bit Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit Int)
(declare-const split_records__record_with_mutable_discrs__field__position Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit))
(assert (< split_records__record_with_mutable_discrs__field__first__bit split_records__record_with_mutable_discrs__field__last__bit))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((record_with_mutable_discrs__ref (mk_record_with_mutable_discrs__ref (record_with_mutable_discrs__content us_rep)))))
(define-fun record_with_mutable_discrs__ref___projection ((a record_with_mutable_discrs__ref)) us_rep (record_with_mutable_discrs__content a))
(define-fun default_initial_assumption ((temp___expr_141 us_rep) (temp___skip_top_level_142 Bool)) Bool (and (= (attr__constrained temp___expr_141) false) (= (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 temp___expr_141)) (of_int 0))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__split_records__mutable_holder__content us_rep)))))
(define-fun us_split_fields_Content__projection ((a us_split_fields2)) us_rep (rec__split_records__mutable_holder__content a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (= (bool_eq (rec__split_records__mutable_holder__content (us_split_fields3 a)) (rec__split_records__mutable_holder__content (us_split_fields3 b))) true) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const split_records__mutable_holder__content__first__bit Int)
(declare-const split_records__mutable_holder__content__last__bit Int)
(declare-const split_records__mutable_holder__content__position Int)
(assert (<= 0 split_records__mutable_holder__content__first__bit))
(assert (< split_records__mutable_holder__content__first__bit split_records__mutable_holder__content__last__bit))
(assert (<= 0 split_records__mutable_holder__content__position))
(declare-fun user_eq2 (us_rep1 us_rep1) Bool)
(declare-const dummy2 us_rep1)
(declare-datatypes () ((mutable_holder__ref (mk_mutable_holder__ref (mutable_holder__content us_rep1)))))
(define-fun mutable_holder__ref___projection ((a mutable_holder__ref)) us_rep1 (mutable_holder__content a))
(define-fun dynamic_invariant ((temp___expr_148 us_rep1) (temp___is_init_145 Bool) (temp___skip_constant_146 Bool) (temp___do_toplevel_147 Bool)) Bool (= (attr__constrained (rec__split_records__mutable_holder__content (us_split_fields3 temp___expr_148))) false))
(define-fun default_initial_assumption1 ((temp___expr_150 us_rep1) (temp___skip_top_level_151 Bool)) Bool (and (= (attr__constrained (rec__split_records__mutable_holder__content (us_split_fields3 temp___expr_150))) false) (= (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 (rec__split_records__mutable_holder__content (us_split_fields3 temp___expr_150)))) (of_int 0))))
(define-fun in_range2 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit1 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit1 Int)
(declare-const split_records__record_with_mutable_discrs__present__position1 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit1))
(assert (< split_records__record_with_mutable_discrs__present__first__bit1 split_records__record_with_mutable_discrs__present__last__bit1))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position1))
(declare-const split_records__record_with_mutable_discrs__field__first__bit1 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit1 Int)
(declare-const split_records__record_with_mutable_discrs__field__position1 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit1))
(assert (< split_records__record_with_mutable_discrs__field__first__bit1 split_records__record_with_mutable_discrs__field__last__bit1))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position1))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((t1s__ref (mk_t1s__ref (t1s__content us_rep)))))
(define-fun t1s__ref___projection ((a t1s__ref)) us_rep (t1s__content a))
(declare-datatypes () ((us_split_discrs2 (mk___split_discrs1 (rec__split_records__holder__present Bool)))))
(define-fun us_split_discrs___2__projection ((a us_split_discrs2)) Bool (rec__split_records__holder__present a))
(declare-datatypes () ((us_split_discrs__ref1 (mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref1)) us_split_discrs2 (us_split_discrs__content1 a))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__split_records__holder__content us_rep)))))
(define-fun us_split_fields_Content__2__projection ((a us_split_fields4)) us_rep (rec__split_records__holder__content a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_discrs3 us_split_discrs2) (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___5__projection ((a us_rep2)) us_split_discrs2 (us_split_discrs3 a))
(define-fun us_rep___6__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq2 ((a us_rep2) (b us_rep2)) Bool (ite (and (= (rec__split_records__holder__present (us_split_discrs3 a)) (rec__split_records__holder__present (us_split_discrs3 b))) (= (bool_eq (rec__split_records__holder__content (us_split_fields5 a)) (rec__split_records__holder__content (us_split_fields5 b))) true)) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep2) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep2) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep2)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment3 a))))
(declare-const split_records__holder__present__first__bit Int)
(declare-const split_records__holder__present__last__bit Int)
(declare-const split_records__holder__present__position Int)
(assert (<= 0 split_records__holder__present__first__bit))
(assert (< split_records__holder__present__first__bit split_records__holder__present__last__bit))
(assert (<= 0 split_records__holder__present__position))
(declare-const split_records__holder__content__first__bit Int)
(declare-const split_records__holder__content__last__bit Int)
(declare-const split_records__holder__content__position Int)
(assert (<= 0 split_records__holder__content__first__bit))
(assert (< split_records__holder__content__first__bit split_records__holder__content__last__bit))
(assert (<= 0 split_records__holder__content__position))
(declare-fun user_eq4 (us_rep2 us_rep2) Bool)
(declare-const dummy4 us_rep2)
(declare-datatypes () ((holder__ref (mk_holder__ref (holder__content us_rep2)))))
(define-fun holder__ref___projection ((a holder__ref)) us_rep2 (holder__content a))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int us_rep))))))
(declare-fun slide ((Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int us_rep))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int us_rep) Int Int (Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (us_rep Int) (Array Int us_rep))
(assert (forall ((v us_rep)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq3 ((a (Array Int us_rep)) (a__first Int) (a__last Int) (b (Array Int us_rep)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (bool_eq (select a temp___idx_132) (select b (+ (- b__first a__first) temp___idx_132))) true)))) true false))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (bool_eq (select a temp___idx_132) (select b (+ (- b__first a__first) temp___idx_132))) true))))))))
(define-fun in_range3 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep)) (<= 0 (object__alignment4 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit2 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit2 Int)
(declare-const split_records__record_with_mutable_discrs__present__position2 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit2))
(assert (< split_records__record_with_mutable_discrs__present__first__bit2 split_records__record_with_mutable_discrs__present__last__bit2))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position2))
(declare-const split_records__record_with_mutable_discrs__field__first__bit2 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit2 Int)
(declare-const split_records__record_with_mutable_discrs__field__position2 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit2))
(assert (< split_records__record_with_mutable_discrs__field__first__bit2 split_records__record_with_mutable_discrs__field__last__bit2))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position2))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((tc1S__ref (mk_tc1S__ref (tc1S__content us_rep)))))
(define-fun tc1S__ref___projection ((a tc1S__ref)) us_rep (tc1S__content a))
(define-fun dynamic_invariant1 ((temp___expr_172 us_rep) (temp___is_init_169 Bool) (temp___skip_constant_170 Bool) (temp___do_toplevel_171 Bool)) Bool (and (=> (not (= temp___skip_constant_170 true)) (in_range3 (of_int 0) temp___expr_172)) (= (attr__constrained temp___expr_172) true)))
(define-fun default_initial_assumption2 ((temp___expr_174 us_rep) (temp___skip_top_level_175 Bool)) Bool (and (= (attr__constrained temp___expr_174) true) (= (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 temp___expr_174)) (of_int 0))))
(declare-const c1__split_discrs us_split_discrs)
(declare-const c1__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun in_range4 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep)) (<= 0 (object__alignment5 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit3 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit3 Int)
(declare-const split_records__record_with_mutable_discrs__present__position3 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit3))
(assert (< split_records__record_with_mutable_discrs__present__first__bit3 split_records__record_with_mutable_discrs__present__last__bit3))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position3))
(declare-const split_records__record_with_mutable_discrs__field__first__bit3 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit3 Int)
(declare-const split_records__record_with_mutable_discrs__field__position3 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit3))
(assert (< split_records__record_with_mutable_discrs__field__first__bit3 split_records__record_with_mutable_discrs__field__last__bit3))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position3))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((t4b__ref (mk_t4b__ref (t4b__content us_rep)))))
(define-fun t4b__ref___projection ((a t4b__ref)) us_rep (t4b__content a))
(declare-const c2__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun in_range5 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep)) (<= 0 (object__alignment6 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit4 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit4 Int)
(declare-const split_records__record_with_mutable_discrs__present__position4 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit4))
(assert (< split_records__record_with_mutable_discrs__present__first__bit4 split_records__record_with_mutable_discrs__present__last__bit4))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position4))
(declare-const split_records__record_with_mutable_discrs__field__first__bit4 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit4 Int)
(declare-const split_records__record_with_mutable_discrs__field__position4 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit4))
(assert (< split_records__record_with_mutable_discrs__field__first__bit4 split_records__record_with_mutable_discrs__field__last__bit4))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position4))
(declare-fun user_eq7 (us_rep us_rep) Bool)
(declare-const dummy7 us_rep)
(declare-datatypes () ((t5b__ref (mk_t5b__ref (t5b__content us_rep)))))
(define-fun t5b__ref___projection ((a t5b__ref)) us_rep (t5b__content a))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__split_records__holder__content1 us_rep)))))
(define-fun us_split_fields_Content__3__projection ((a us_split_fields6)) us_rep (rec__split_records__holder__content1 a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep3 (mk___rep3 (us_split_discrs4 us_split_discrs2) (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___7__projection ((a us_rep3)) us_split_discrs2 (us_split_discrs4 a))
(define-fun us_rep___8__projection ((a us_rep3)) us_split_fields6 (us_split_fields7 a))
(define-fun to_base ((a us_rep3)) us_rep2 (mk___rep2 (us_split_discrs4 a) (mk___split_fields2 (rec__split_records__holder__content1 (us_split_fields7 a)))))
(define-fun of_base ((r us_rep2)) us_rep3 (mk___rep3 (us_split_discrs3 r) (mk___split_fields3 (rec__split_records__holder__content (us_split_fields5 r)))))
(define-fun bool_eq4 ((a us_rep3) (b us_rep3)) Bool (ite (and (= (rec__split_records__holder__present (us_split_discrs4 a)) (rec__split_records__holder__present (us_split_discrs4 b))) (= (bool_eq (rec__split_records__holder__content1 (us_split_fields7 a)) (rec__split_records__holder__content1 (us_split_fields7 b))) true)) true false))
(define-fun in_range6 ((rec__split_records__holder__present1 Bool) (a us_rep2)) Bool (= rec__split_records__holder__present1 (rec__split_records__holder__present (us_split_discrs3 a))))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep3) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep3) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep3)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment7 a))))
(declare-const split_records__holder__present__first__bit1 Int)
(declare-const split_records__holder__present__last__bit1 Int)
(declare-const split_records__holder__present__position1 Int)
(assert (<= 0 split_records__holder__present__first__bit1))
(assert (< split_records__holder__present__first__bit1 split_records__holder__present__last__bit1))
(assert (<= 0 split_records__holder__present__position1))
(declare-const split_records__holder__content__first__bit1 Int)
(declare-const split_records__holder__content__last__bit1 Int)
(declare-const split_records__holder__content__position1 Int)
(assert (<= 0 split_records__holder__content__first__bit1))
(assert (< split_records__holder__content__first__bit1 split_records__holder__content__last__bit1))
(assert (<= 0 split_records__holder__content__position1))
(declare-fun user_eq8 (us_rep3 us_rep3) Bool)
(declare-const dummy8 us_rep3)
(declare-datatypes () ((th1S__ref (mk_th1S__ref (th1S__content us_rep3)))))
(define-fun th1S__ref___projection ((a th1S__ref)) us_rep3 (th1S__content a))
(define-fun dynamic_invariant2 ((temp___expr_181 us_rep3) (temp___is_init_178 Bool) (temp___skip_constant_179 Bool) (temp___do_toplevel_180 Bool)) Bool (and (=> (not (= temp___skip_constant_179 true)) (in_range6 (of_int 0) (to_base temp___expr_181))) (and (and (in_range5 (of_int 0) (rec__split_records__holder__content1 (us_split_fields7 temp___expr_181))) (= (attr__constrained (rec__split_records__holder__content1 (us_split_fields7 temp___expr_181))) true)) (= (attr__constrained (rec__split_records__holder__content1 (us_split_fields7 temp___expr_181))) true))))
(define-fun default_initial_assumption3 ((temp___expr_184 us_rep3) (temp___skip_top_level_185 Bool)) Bool (and (= (rec__split_records__holder__present (us_split_discrs4 temp___expr_184)) (of_int 0)) (and (= (attr__constrained (rec__split_records__holder__content1 (us_split_fields7 temp___expr_184))) true) (= (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 (rec__split_records__holder__content1 (us_split_fields7 temp___expr_184)))) (of_int 0)))))
(define-fun in_range7 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size8 Int)
(declare-fun object__size8 (us_rep) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 (us_rep) Int)
(assert (<= 0 value__size8))
(assert (forall ((a us_rep)) (<= 0 (object__size8 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a us_rep)) (<= 0 (object__alignment8 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit5 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit5 Int)
(declare-const split_records__record_with_mutable_discrs__present__position5 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit5))
(assert (< split_records__record_with_mutable_discrs__present__first__bit5 split_records__record_with_mutable_discrs__present__last__bit5))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position5))
(declare-const split_records__record_with_mutable_discrs__field__first__bit5 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit5 Int)
(declare-const split_records__record_with_mutable_discrs__field__position5 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit5))
(assert (< split_records__record_with_mutable_discrs__field__first__bit5 split_records__record_with_mutable_discrs__field__last__bit5))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position5))
(declare-fun user_eq9 (us_rep us_rep) Bool)
(declare-const dummy9 us_rep)
(declare-datatypes () ((t7b__ref (mk_t7b__ref (t7b__content us_rep)))))
(define-fun t7b__ref___projection ((a t7b__ref)) us_rep (t7b__content a))
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__split_records__holder__content2 us_rep)))))
(define-fun us_split_fields_Content__4__projection ((a us_split_fields8)) us_rep (rec__split_records__holder__content2 a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___5__projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep4 (mk___rep4 (us_split_discrs5 us_split_discrs2) (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___9__projection ((a us_rep4)) us_split_discrs2 (us_split_discrs5 a))
(define-fun us_rep___10__projection ((a us_rep4)) us_split_fields8 (us_split_fields9 a))
(define-fun to_base1 ((a us_rep4)) us_rep2 (mk___rep2 (us_split_discrs5 a) (mk___split_fields2 (rec__split_records__holder__content2 (us_split_fields9 a)))))
(define-fun of_base1 ((r us_rep2)) us_rep4 (mk___rep4 (us_split_discrs3 r) (mk___split_fields4 (rec__split_records__holder__content (us_split_fields5 r)))))
(define-fun bool_eq5 ((a us_rep4) (b us_rep4)) Bool (ite (and (= (rec__split_records__holder__present (us_split_discrs5 a)) (rec__split_records__holder__present (us_split_discrs5 b))) (= (bool_eq (rec__split_records__holder__content2 (us_split_fields9 a)) (rec__split_records__holder__content2 (us_split_fields9 b))) true)) true false))
(define-fun in_range8 ((rec__split_records__holder__present1 Bool) (a us_rep2)) Bool (= rec__split_records__holder__present1 (rec__split_records__holder__present (us_split_discrs3 a))))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep4) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep4) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep4)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment9 a))))
(declare-const split_records__holder__present__first__bit2 Int)
(declare-const split_records__holder__present__last__bit2 Int)
(declare-const split_records__holder__present__position2 Int)
(assert (<= 0 split_records__holder__present__first__bit2))
(assert (< split_records__holder__present__first__bit2 split_records__holder__present__last__bit2))
(assert (<= 0 split_records__holder__present__position2))
(declare-const split_records__holder__content__first__bit2 Int)
(declare-const split_records__holder__content__last__bit2 Int)
(declare-const split_records__holder__content__position2 Int)
(assert (<= 0 split_records__holder__content__first__bit2))
(assert (< split_records__holder__content__first__bit2 split_records__holder__content__last__bit2))
(assert (<= 0 split_records__holder__content__position2))
(declare-fun user_eq10 (us_rep4 us_rep4) Bool)
(declare-const dummy10 us_rep4)
(declare-datatypes () ((t6b__ref (mk_t6b__ref (t6b__content us_rep4)))))
(define-fun t6b__ref___projection ((a t6b__ref)) us_rep4 (t6b__content a))
(define-fun in_range9 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size10 Int)
(declare-fun object__size10 (us_rep) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 (us_rep) Int)
(assert (<= 0 value__size10))
(assert (forall ((a us_rep)) (<= 0 (object__size10 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a us_rep)) (<= 0 (object__alignment10 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit6 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit6 Int)
(declare-const split_records__record_with_mutable_discrs__present__position6 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit6))
(assert (< split_records__record_with_mutable_discrs__present__first__bit6 split_records__record_with_mutable_discrs__present__last__bit6))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position6))
(declare-const split_records__record_with_mutable_discrs__field__first__bit6 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit6 Int)
(declare-const split_records__record_with_mutable_discrs__field__position6 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit6))
(assert (< split_records__record_with_mutable_discrs__field__first__bit6 split_records__record_with_mutable_discrs__field__last__bit6))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position6))
(declare-fun user_eq11 (us_rep us_rep) Bool)
(declare-const dummy11 us_rep)
(declare-datatypes () ((t8b__ref (mk_t8b__ref (t8b__content us_rep)))))
(define-fun t8b__ref___projection ((a t8b__ref)) us_rep (t8b__content a))
(declare-const h1__split_discrs us_split_discrs2)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(define-fun in_range10 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size11 Int)
(declare-fun object__size11 (us_rep) Int)
(declare-const value__alignment11 Int)
(declare-fun object__alignment11 (us_rep) Int)
(assert (<= 0 value__size11))
(assert (forall ((a us_rep)) (<= 0 (object__size11 a))))
(assert (<= 0 value__alignment11))
(assert (forall ((a us_rep)) (<= 0 (object__alignment11 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit7 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit7 Int)
(declare-const split_records__record_with_mutable_discrs__present__position7 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit7))
(assert (< split_records__record_with_mutable_discrs__present__first__bit7 split_records__record_with_mutable_discrs__present__last__bit7))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position7))
(declare-const split_records__record_with_mutable_discrs__field__first__bit7 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit7 Int)
(declare-const split_records__record_with_mutable_discrs__field__position7 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit7))
(assert (< split_records__record_with_mutable_discrs__field__first__bit7 split_records__record_with_mutable_discrs__field__last__bit7))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position7))
(declare-fun user_eq12 (us_rep us_rep) Bool)
(declare-const dummy12 us_rep)
(declare-datatypes () ((t9b__ref (mk_t9b__ref (t9b__content us_rep)))))
(define-fun t9b__ref___projection ((a t9b__ref)) us_rep (t9b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-sort tTaSP1 0)
(define-fun in_range11 ((x Int)) Bool (and (<= 1 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq13 (tTaSP1 tTaSP1) Bool)
(declare-const dummy13 tTaSP1)
(declare-datatypes () ((tTaSP1__ref (mk_tTaSP1__ref (tTaSP1__content tTaSP1)))))
(define-fun tTaSP1__ref___projection ((a tTaSP1__ref)) tTaSP1 (tTaSP1__content a))
(define-fun dynamic_invariant3 ((temp___expr_193 (Array Int us_rep)) (temp___is_init_190 Bool) (temp___skip_constant_191 Bool) (temp___do_toplevel_192 Bool)) Bool (forall ((temp___194 Int)) (=> (and (<= 1 temp___194) (<= temp___194 1)) (= (attr__constrained (select temp___expr_193 temp___194)) false))))
(define-fun default_initial_assumption4 ((temp___expr_196 (Array Int us_rep)) (temp___skip_top_level_197 Bool)) Bool (forall ((temp___198 Int)) (=> (and (<= 1 temp___198) (<= temp___198 1)) (and (= (attr__constrained (select temp___expr_196 temp___198)) false) (= (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 (select temp___expr_196 temp___198))) (of_int 0))))))
(define-fun in_range12 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size12 Int)
(declare-fun object__size12 (us_rep) Int)
(declare-const value__alignment12 Int)
(declare-fun object__alignment12 (us_rep) Int)
(assert (<= 0 value__size12))
(assert (forall ((a us_rep)) (<= 0 (object__size12 a))))
(assert (<= 0 value__alignment12))
(assert (forall ((a us_rep)) (<= 0 (object__alignment12 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit8 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit8 Int)
(declare-const split_records__record_with_mutable_discrs__present__position8 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit8))
(assert (< split_records__record_with_mutable_discrs__present__first__bit8 split_records__record_with_mutable_discrs__present__last__bit8))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position8))
(declare-const split_records__record_with_mutable_discrs__field__first__bit8 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit8 Int)
(declare-const split_records__record_with_mutable_discrs__field__position8 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit8))
(assert (< split_records__record_with_mutable_discrs__field__first__bit8 split_records__record_with_mutable_discrs__field__last__bit8))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position8))
(declare-fun user_eq14 (us_rep us_rep) Bool)
(declare-const dummy14 us_rep)
(declare-datatypes () ((t10b__ref (mk_t10b__ref (t10b__content us_rep)))))
(define-fun t10b__ref___projection ((a t10b__ref)) us_rep (t10b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun in_range13 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size13 Int)
(declare-fun object__size13 (us_rep) Int)
(declare-const value__alignment13 Int)
(declare-fun object__alignment13 (us_rep) Int)
(assert (<= 0 value__size13))
(assert (forall ((a us_rep)) (<= 0 (object__size13 a))))
(assert (<= 0 value__alignment13))
(assert (forall ((a us_rep)) (<= 0 (object__alignment13 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit9 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit9 Int)
(declare-const split_records__record_with_mutable_discrs__present__position9 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit9))
(assert (< split_records__record_with_mutable_discrs__present__first__bit9 split_records__record_with_mutable_discrs__present__last__bit9))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position9))
(declare-const split_records__record_with_mutable_discrs__field__first__bit9 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit9 Int)
(declare-const split_records__record_with_mutable_discrs__field__position9 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit9))
(assert (< split_records__record_with_mutable_discrs__field__first__bit9 split_records__record_with_mutable_discrs__field__last__bit9))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position9))
(declare-fun user_eq15 (us_rep us_rep) Bool)
(declare-const dummy15 us_rep)
(declare-datatypes () ((tc3S__ref (mk_tc3S__ref (tc3S__content us_rep)))))
(define-fun tc3S__ref___projection ((a tc3S__ref)) us_rep (tc3S__content a))
(define-fun dynamic_invariant4 ((temp___expr_205 us_rep) (temp___is_init_202 Bool) (temp___skip_constant_203 Bool) (temp___do_toplevel_204 Bool)) Bool (and (=> (not (= temp___skip_constant_203 true)) (in_range13 (of_int 0) temp___expr_205)) (= (attr__constrained temp___expr_205) true)))
(define-fun default_initial_assumption5 ((temp___expr_207 us_rep) (temp___skip_top_level_208 Bool)) Bool (and (= (attr__constrained temp___expr_207) true) (= (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 temp___expr_207)) (of_int 0))))
(define-fun in_range14 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size14 Int)
(declare-fun object__size14 (us_rep) Int)
(declare-const value__alignment14 Int)
(declare-fun object__alignment14 (us_rep) Int)
(assert (<= 0 value__size14))
(assert (forall ((a us_rep)) (<= 0 (object__size14 a))))
(assert (<= 0 value__alignment14))
(assert (forall ((a us_rep)) (<= 0 (object__alignment14 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit10 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit10 Int)
(declare-const split_records__record_with_mutable_discrs__present__position10 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit10))
(assert (< split_records__record_with_mutable_discrs__present__first__bit10 split_records__record_with_mutable_discrs__present__last__bit10))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position10))
(declare-const split_records__record_with_mutable_discrs__field__first__bit10 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit10 Int)
(declare-const split_records__record_with_mutable_discrs__field__position10 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit10))
(assert (< split_records__record_with_mutable_discrs__field__first__bit10 split_records__record_with_mutable_discrs__field__last__bit10))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position10))
(declare-fun user_eq16 (us_rep us_rep) Bool)
(declare-const dummy16 us_rep)
(declare-datatypes () ((t13b__ref (mk_t13b__ref (t13b__content us_rep)))))
(define-fun t13b__ref___projection ((a t13b__ref)) us_rep (t13b__content a))
(declare-const c3 us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun in_range15 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size15 Int)
(declare-fun object__size15 (us_rep) Int)
(declare-const value__alignment15 Int)
(declare-fun object__alignment15 (us_rep) Int)
(assert (<= 0 value__size15))
(assert (forall ((a us_rep)) (<= 0 (object__size15 a))))
(assert (<= 0 value__alignment15))
(assert (forall ((a us_rep)) (<= 0 (object__alignment15 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit11 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit11 Int)
(declare-const split_records__record_with_mutable_discrs__present__position11 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit11))
(assert (< split_records__record_with_mutable_discrs__present__first__bit11 split_records__record_with_mutable_discrs__present__last__bit11))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position11))
(declare-const split_records__record_with_mutable_discrs__field__first__bit11 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit11 Int)
(declare-const split_records__record_with_mutable_discrs__field__position11 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit11))
(assert (< split_records__record_with_mutable_discrs__field__first__bit11 split_records__record_with_mutable_discrs__field__last__bit11))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position11))
(declare-fun user_eq17 (us_rep us_rep) Bool)
(declare-const dummy17 us_rep)
(declare-datatypes () ((t14b__ref (mk_t14b__ref (t14b__content us_rep)))))
(define-fun t14b__ref___projection ((a t14b__ref)) us_rep (t14b__content a))
(declare-const c4 us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(define-fun in_range16 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size16 Int)
(declare-fun object__size16 (us_rep) Int)
(declare-const value__alignment16 Int)
(declare-fun object__alignment16 (us_rep) Int)
(assert (<= 0 value__size16))
(assert (forall ((a us_rep)) (<= 0 (object__size16 a))))
(assert (<= 0 value__alignment16))
(assert (forall ((a us_rep)) (<= 0 (object__alignment16 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit12 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit12 Int)
(declare-const split_records__record_with_mutable_discrs__present__position12 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit12))
(assert (< split_records__record_with_mutable_discrs__present__first__bit12 split_records__record_with_mutable_discrs__present__last__bit12))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position12))
(declare-const split_records__record_with_mutable_discrs__field__first__bit12 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit12 Int)
(declare-const split_records__record_with_mutable_discrs__field__position12 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit12))
(assert (< split_records__record_with_mutable_discrs__field__first__bit12 split_records__record_with_mutable_discrs__field__last__bit12))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position12))
(declare-fun user_eq18 (us_rep us_rep) Bool)
(declare-const dummy18 us_rep)
(declare-datatypes () ((t15b__ref (mk_t15b__ref (t15b__content us_rep)))))
(define-fun t15b__ref___projection ((a t15b__ref)) us_rep (t15b__content a))
(declare-datatypes () ((us_split_fields10 (mk___split_fields5 (rec__split_records__holder__content3 us_rep)))))
(define-fun us_split_fields_Content__5__projection ((a us_split_fields10)) us_rep (rec__split_records__holder__content3 a))
(declare-datatypes () ((us_split_fields__ref5 (mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___6__projection ((a us_split_fields__ref5)) us_split_fields10 (us_split_fields__content5 a))
(declare-datatypes () ((us_rep5 (mk___rep5 (us_split_discrs6 us_split_discrs2) (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___11__projection ((a us_rep5)) us_split_discrs2 (us_split_discrs6 a))
(define-fun us_rep___12__projection ((a us_rep5)) us_split_fields10 (us_split_fields11 a))
(define-fun to_base2 ((a us_rep5)) us_rep2 (mk___rep2 (us_split_discrs6 a) (mk___split_fields2 (rec__split_records__holder__content3 (us_split_fields11 a)))))
(define-fun of_base2 ((r us_rep2)) us_rep5 (mk___rep5 (us_split_discrs3 r) (mk___split_fields5 (rec__split_records__holder__content (us_split_fields5 r)))))
(define-fun bool_eq6 ((a us_rep5) (b us_rep5)) Bool (ite (and (= (rec__split_records__holder__present (us_split_discrs6 a)) (rec__split_records__holder__present (us_split_discrs6 b))) (= (bool_eq (rec__split_records__holder__content3 (us_split_fields11 a)) (rec__split_records__holder__content3 (us_split_fields11 b))) true)) true false))
(define-fun in_range17 ((rec__split_records__holder__present1 Bool) (a us_rep2)) Bool (= rec__split_records__holder__present1 (rec__split_records__holder__present (us_split_discrs3 a))))
(declare-const value__size17 Int)
(declare-fun object__size17 (us_rep5) Int)
(declare-const value__alignment17 Int)
(declare-fun object__alignment17 (us_rep5) Int)
(assert (<= 0 value__size17))
(assert (forall ((a us_rep5)) (<= 0 (object__size17 a))))
(assert (<= 0 value__alignment17))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment17 a))))
(declare-const split_records__holder__present__first__bit3 Int)
(declare-const split_records__holder__present__last__bit3 Int)
(declare-const split_records__holder__present__position3 Int)
(assert (<= 0 split_records__holder__present__first__bit3))
(assert (< split_records__holder__present__first__bit3 split_records__holder__present__last__bit3))
(assert (<= 0 split_records__holder__present__position3))
(declare-const split_records__holder__content__first__bit3 Int)
(declare-const split_records__holder__content__last__bit3 Int)
(declare-const split_records__holder__content__position3 Int)
(assert (<= 0 split_records__holder__content__first__bit3))
(assert (< split_records__holder__content__first__bit3 split_records__holder__content__last__bit3))
(assert (<= 0 split_records__holder__content__position3))
(declare-fun user_eq19 (us_rep5 us_rep5) Bool)
(declare-const dummy19 us_rep5)
(declare-datatypes () ((th3S__ref (mk_th3S__ref (th3S__content us_rep5)))))
(define-fun th3S__ref___projection ((a th3S__ref)) us_rep5 (th3S__content a))
(define-fun dynamic_invariant5 ((temp___expr_214 us_rep5) (temp___is_init_211 Bool) (temp___skip_constant_212 Bool) (temp___do_toplevel_213 Bool)) Bool (and (=> (not (= temp___skip_constant_212 true)) (in_range17 (of_int 0) (to_base2 temp___expr_214))) (and (and (in_range16 (of_int 0) (rec__split_records__holder__content3 (us_split_fields11 temp___expr_214))) (= (attr__constrained (rec__split_records__holder__content3 (us_split_fields11 temp___expr_214))) true)) (= (attr__constrained (rec__split_records__holder__content3 (us_split_fields11 temp___expr_214))) true))))
(define-fun default_initial_assumption6 ((temp___expr_217 us_rep5) (temp___skip_top_level_218 Bool)) Bool (and (= (rec__split_records__holder__present (us_split_discrs6 temp___expr_217)) (of_int 0)) (and (= (attr__constrained (rec__split_records__holder__content3 (us_split_fields11 temp___expr_217))) true) (= (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 (rec__split_records__holder__content3 (us_split_fields11 temp___expr_217)))) (of_int 0)))))
(define-fun in_range18 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size18 Int)
(declare-fun object__size18 (us_rep) Int)
(declare-const value__alignment18 Int)
(declare-fun object__alignment18 (us_rep) Int)
(assert (<= 0 value__size18))
(assert (forall ((a us_rep)) (<= 0 (object__size18 a))))
(assert (<= 0 value__alignment18))
(assert (forall ((a us_rep)) (<= 0 (object__alignment18 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit13 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit13 Int)
(declare-const split_records__record_with_mutable_discrs__present__position13 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit13))
(assert (< split_records__record_with_mutable_discrs__present__first__bit13 split_records__record_with_mutable_discrs__present__last__bit13))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position13))
(declare-const split_records__record_with_mutable_discrs__field__first__bit13 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit13 Int)
(declare-const split_records__record_with_mutable_discrs__field__position13 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit13))
(assert (< split_records__record_with_mutable_discrs__field__first__bit13 split_records__record_with_mutable_discrs__field__last__bit13))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position13))
(declare-fun user_eq20 (us_rep us_rep) Bool)
(declare-const dummy20 us_rep)
(declare-datatypes () ((t17b__ref (mk_t17b__ref (t17b__content us_rep)))))
(define-fun t17b__ref___projection ((a t17b__ref)) us_rep (t17b__content a))
(declare-datatypes () ((us_split_fields12 (mk___split_fields6 (rec__split_records__holder__content4 us_rep)))))
(define-fun us_split_fields_Content__6__projection ((a us_split_fields12)) us_rep (rec__split_records__holder__content4 a))
(declare-datatypes () ((us_split_fields__ref6 (mk___split_fields__ref6 (us_split_fields__content6 us_split_fields12)))))
(define-fun us_split_fields__ref___7__projection ((a us_split_fields__ref6)) us_split_fields12 (us_split_fields__content6 a))
(declare-datatypes () ((us_rep6 (mk___rep6 (us_split_discrs7 us_split_discrs2) (us_split_fields13 us_split_fields12)))))
(define-fun us_rep___13__projection ((a us_rep6)) us_split_discrs2 (us_split_discrs7 a))
(define-fun us_rep___14__projection ((a us_rep6)) us_split_fields12 (us_split_fields13 a))
(define-fun to_base3 ((a us_rep6)) us_rep2 (mk___rep2 (us_split_discrs7 a) (mk___split_fields2 (rec__split_records__holder__content4 (us_split_fields13 a)))))
(define-fun of_base3 ((r us_rep2)) us_rep6 (mk___rep6 (us_split_discrs3 r) (mk___split_fields6 (rec__split_records__holder__content (us_split_fields5 r)))))
(define-fun bool_eq7 ((a us_rep6) (b us_rep6)) Bool (ite (and (= (rec__split_records__holder__present (us_split_discrs7 a)) (rec__split_records__holder__present (us_split_discrs7 b))) (= (bool_eq (rec__split_records__holder__content4 (us_split_fields13 a)) (rec__split_records__holder__content4 (us_split_fields13 b))) true)) true false))
(define-fun in_range19 ((rec__split_records__holder__present1 Bool) (a us_rep2)) Bool (= rec__split_records__holder__present1 (rec__split_records__holder__present (us_split_discrs3 a))))
(declare-const value__size19 Int)
(declare-fun object__size19 (us_rep6) Int)
(declare-const value__alignment19 Int)
(declare-fun object__alignment19 (us_rep6) Int)
(assert (<= 0 value__size19))
(assert (forall ((a us_rep6)) (<= 0 (object__size19 a))))
(assert (<= 0 value__alignment19))
(assert (forall ((a us_rep6)) (<= 0 (object__alignment19 a))))
(declare-const split_records__holder__present__first__bit4 Int)
(declare-const split_records__holder__present__last__bit4 Int)
(declare-const split_records__holder__present__position4 Int)
(assert (<= 0 split_records__holder__present__first__bit4))
(assert (< split_records__holder__present__first__bit4 split_records__holder__present__last__bit4))
(assert (<= 0 split_records__holder__present__position4))
(declare-const split_records__holder__content__first__bit4 Int)
(declare-const split_records__holder__content__last__bit4 Int)
(declare-const split_records__holder__content__position4 Int)
(assert (<= 0 split_records__holder__content__first__bit4))
(assert (< split_records__holder__content__first__bit4 split_records__holder__content__last__bit4))
(assert (<= 0 split_records__holder__content__position4))
(declare-fun user_eq21 (us_rep6 us_rep6) Bool)
(declare-const dummy21 us_rep6)
(declare-datatypes () ((t16b__ref (mk_t16b__ref (t16b__content us_rep6)))))
(define-fun t16b__ref___projection ((a t16b__ref)) us_rep6 (t16b__content a))
(define-fun in_range20 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size20 Int)
(declare-fun object__size20 (us_rep) Int)
(declare-const value__alignment20 Int)
(declare-fun object__alignment20 (us_rep) Int)
(assert (<= 0 value__size20))
(assert (forall ((a us_rep)) (<= 0 (object__size20 a))))
(assert (<= 0 value__alignment20))
(assert (forall ((a us_rep)) (<= 0 (object__alignment20 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit14 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit14 Int)
(declare-const split_records__record_with_mutable_discrs__present__position14 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit14))
(assert (< split_records__record_with_mutable_discrs__present__first__bit14 split_records__record_with_mutable_discrs__present__last__bit14))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position14))
(declare-const split_records__record_with_mutable_discrs__field__first__bit14 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit14 Int)
(declare-const split_records__record_with_mutable_discrs__field__position14 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit14))
(assert (< split_records__record_with_mutable_discrs__field__first__bit14 split_records__record_with_mutable_discrs__field__last__bit14))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position14))
(declare-fun user_eq22 (us_rep us_rep) Bool)
(declare-const dummy22 us_rep)
(declare-datatypes () ((t18b__ref (mk_t18b__ref (t18b__content us_rep)))))
(define-fun t18b__ref___projection ((a t18b__ref)) us_rep (t18b__content a))
(declare-const h3 us_rep5)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(define-fun in_range21 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size21 Int)
(declare-fun object__size21 (us_rep) Int)
(declare-const value__alignment21 Int)
(declare-fun object__alignment21 (us_rep) Int)
(assert (<= 0 value__size21))
(assert (forall ((a us_rep)) (<= 0 (object__size21 a))))
(assert (<= 0 value__alignment21))
(assert (forall ((a us_rep)) (<= 0 (object__alignment21 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit15 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit15 Int)
(declare-const split_records__record_with_mutable_discrs__present__position15 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit15))
(assert (< split_records__record_with_mutable_discrs__present__first__bit15 split_records__record_with_mutable_discrs__present__last__bit15))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position15))
(declare-const split_records__record_with_mutable_discrs__field__first__bit15 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit15 Int)
(declare-const split_records__record_with_mutable_discrs__field__position15 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit15))
(assert (< split_records__record_with_mutable_discrs__field__first__bit15 split_records__record_with_mutable_discrs__field__last__bit15))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position15))
(declare-fun user_eq23 (us_rep us_rep) Bool)
(declare-const dummy23 us_rep)
(declare-datatypes () ((t19b__ref (mk_t19b__ref (t19b__content us_rep)))))
(define-fun t19b__ref___projection ((a t19b__ref)) us_rep (t19b__content a))
(declare-const h4 us_rep1)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-sort tTa2SP1 0)
(define-fun in_range22 ((x Int)) Bool (and (<= 1 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq24 (tTa2SP1 tTa2SP1) Bool)
(declare-const dummy24 tTa2SP1)
(declare-datatypes () ((tTa2SP1__ref (mk_tTa2SP1__ref (tTa2SP1__content tTa2SP1)))))
(define-fun tTa2SP1__ref___projection ((a tTa2SP1__ref)) tTa2SP1 (tTa2SP1__content a))
(define-fun dynamic_invariant6 ((temp___expr_226 (Array Int us_rep)) (temp___is_init_223 Bool) (temp___skip_constant_224 Bool) (temp___do_toplevel_225 Bool)) Bool (forall ((temp___227 Int)) (=> (and (<= 1 temp___227) (<= temp___227 1)) (= (attr__constrained (select temp___expr_226 temp___227)) false))))
(define-fun default_initial_assumption7 ((temp___expr_229 (Array Int us_rep)) (temp___skip_top_level_230 Bool)) Bool (forall ((temp___231 Int)) (=> (and (<= 1 temp___231) (<= temp___231 1)) (and (= (attr__constrained (select temp___expr_229 temp___231)) false) (= (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 (select temp___expr_229 temp___231))) (of_int 0))))))
(define-fun in_range23 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size22 Int)
(declare-fun object__size22 (us_rep) Int)
(declare-const value__alignment22 Int)
(declare-fun object__alignment22 (us_rep) Int)
(assert (<= 0 value__size22))
(assert (forall ((a us_rep)) (<= 0 (object__size22 a))))
(assert (<= 0 value__alignment22))
(assert (forall ((a us_rep)) (<= 0 (object__alignment22 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit16 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit16 Int)
(declare-const split_records__record_with_mutable_discrs__present__position16 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit16))
(assert (< split_records__record_with_mutable_discrs__present__first__bit16 split_records__record_with_mutable_discrs__present__last__bit16))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position16))
(declare-const split_records__record_with_mutable_discrs__field__first__bit16 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit16 Int)
(declare-const split_records__record_with_mutable_discrs__field__position16 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit16))
(assert (< split_records__record_with_mutable_discrs__field__first__bit16 split_records__record_with_mutable_discrs__field__last__bit16))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position16))
(declare-fun user_eq25 (us_rep us_rep) Bool)
(declare-const dummy25 us_rep)
(declare-datatypes () ((t20b__ref (mk_t20b__ref (t20b__content us_rep)))))
(define-fun t20b__ref___projection ((a t20b__ref)) us_rep (t20b__content a))
(declare-const a2 (Array Int us_rep))
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-fun split_records__test__a2__aggregate_def (us_rep) (Array Int us_rep))
(assert (forall ((temp___134 us_rep)) (= (select (split_records__test__a2__aggregate_def temp___134) 1) temp___134)))
(define-fun in_range24 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size23 Int)
(declare-fun object__size23 (us_rep) Int)
(declare-const value__alignment23 Int)
(declare-fun object__alignment23 (us_rep) Int)
(assert (<= 0 value__size23))
(assert (forall ((a us_rep)) (<= 0 (object__size23 a))))
(assert (<= 0 value__alignment23))
(assert (forall ((a us_rep)) (<= 0 (object__alignment23 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit17 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit17 Int)
(declare-const split_records__record_with_mutable_discrs__present__position17 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit17))
(assert (< split_records__record_with_mutable_discrs__present__first__bit17 split_records__record_with_mutable_discrs__present__last__bit17))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position17))
(declare-const split_records__record_with_mutable_discrs__field__first__bit17 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit17 Int)
(declare-const split_records__record_with_mutable_discrs__field__position17 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit17))
(assert (< split_records__record_with_mutable_discrs__field__first__bit17 split_records__record_with_mutable_discrs__field__last__bit17))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position17))
(declare-fun user_eq26 (us_rep us_rep) Bool)
(declare-const dummy26 us_rep)
(declare-datatypes () ((t23b__ref (mk_t23b__ref (t23b__content us_rep)))))
(define-fun t23b__ref___projection ((a t23b__ref)) us_rep (t23b__content a))
(define-fun in_range25 ((rec__split_records__record_with_mutable_discrs__present1 Bool) (a us_rep)) Bool (= rec__split_records__record_with_mutable_discrs__present1 (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 a))))
(declare-const value__size24 Int)
(declare-fun object__size24 (us_rep) Int)
(declare-const value__alignment24 Int)
(declare-fun object__alignment24 (us_rep) Int)
(assert (<= 0 value__size24))
(assert (forall ((a us_rep)) (<= 0 (object__size24 a))))
(assert (<= 0 value__alignment24))
(assert (forall ((a us_rep)) (<= 0 (object__alignment24 a))))
(declare-const split_records__record_with_mutable_discrs__present__first__bit18 Int)
(declare-const split_records__record_with_mutable_discrs__present__last__bit18 Int)
(declare-const split_records__record_with_mutable_discrs__present__position18 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__present__first__bit18))
(assert (< split_records__record_with_mutable_discrs__present__first__bit18 split_records__record_with_mutable_discrs__present__last__bit18))
(assert (<= 0 split_records__record_with_mutable_discrs__present__position18))
(declare-const split_records__record_with_mutable_discrs__field__first__bit18 Int)
(declare-const split_records__record_with_mutable_discrs__field__last__bit18 Int)
(declare-const split_records__record_with_mutable_discrs__field__position18 Int)
(assert (<= 0 split_records__record_with_mutable_discrs__field__first__bit18))
(assert (< split_records__record_with_mutable_discrs__field__first__bit18 split_records__record_with_mutable_discrs__field__last__bit18))
(assert (<= 0 split_records__record_with_mutable_discrs__field__position18))
(declare-fun user_eq27 (us_rep us_rep) Bool)
(declare-const dummy27 us_rep)
(declare-datatypes () ((t24b__ref (mk_t24b__ref (t24b__content us_rep)))))
(define-fun t24b__ref___projection ((a t24b__ref)) us_rep (t24b__content a))
(declare-fun split_records__test__a__aggregate_def (us_rep) (Array Int us_rep))
(assert (forall ((temp___248 us_rep)) (= (select (split_records__test__a__aggregate_def temp___248) 1) temp___248)))
(define-fun dynamic_invariant7 ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range1 temp___expr_33)))
(assert (= c3 (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) true)))
(assert (= c4 (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) true)))
(assert (= h3 (of_base2 (to_base3 (mk___rep6 (mk___split_discrs1 (of_int 0)) (mk___split_fields6 (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) true)))))))
(assert (= h4 (mk___rep1 (mk___split_fields1 (let ((usq_ (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) true))) (mk___rep (us_split_discrs1 usq_) (us_split_fields1 usq_) false))))))
(assert (= a2 (split_records__test__a2__aggregate_def (let ((usq_ (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) true))) (mk___rep (us_split_discrs1 usq_) (us_split_fields1 usq_) false)))))
(define-fun dynamic_invariant8 ((temp___expr_158 us_rep2) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool)) Bool (and (and (in_range2 (rec__split_records__holder__present (us_split_discrs3 temp___expr_158)) (rec__split_records__holder__content (us_split_fields5 temp___expr_158))) (= (attr__constrained (rec__split_records__holder__content (us_split_fields5 temp___expr_158))) true)) (= (attr__constrained (rec__split_records__holder__content (us_split_fields5 temp___expr_158))) true)))
(declare-const c1__split_fields natural)
(declare-const c2__split_fields natural)
(declare-const c2__split_discrs Bool)
(declare-const h1__split_fields Bool)
(declare-const h1__split_fields1 natural)
(declare-const h1__split_fields2 Bool)
(declare-const h2__split_fields Bool)
(declare-const h2__split_fields1 natural)
(declare-const h2__split_fields2 Bool)
(declare-const a (Array Int us_rep))
(declare-const usq_ Bool)
(declare-const usq_1 natural)
(declare-const usq_2 Bool)
(declare-const o Bool)
(declare-const o1 natural)
(declare-const o2 Bool)
(declare-const o3 us_split_fields2)
(declare-const temp___257 us_rep1)
(declare-const usq_3 us_rep)
(declare-const o4 us_rep)
(declare-const o5 (Array Int us_rep))
(declare-const result us_split_fields__ref)
(declare-const c2__split_fields1 us_split_fields)
(declare-const result1 us_split_discrs__ref)
(declare-const c2__split_discrs1 us_split_discrs)
(declare-const result2 us_split_fields__ref3)
(declare-const h1__split_fields3 us_split_fields6)
(declare-const result3 us_split_fields__ref1)
(declare-const h2__split_fields3 us_split_fields2)
(declare-const result4 map__ref)
(declare-const a1 (Array Int us_rep))
(declare-const split_records__update_field_if_possible__r__discrs us_split_discrs)
(declare-const split_records__update_field_if_possible__r__fields us_split_fields)
(declare-const result5 us_split_fields__ref)
(declare-const c1__split_fields1 us_split_fields)
(declare-const c2__split_fields2 us_split_fields)
(declare-const c2__split_discrs2 us_split_discrs)
(declare-const split_records__update_field_if_possible__r__discrs1 us_split_discrs)
(declare-const split_records__update_field_if_possible__r__fields1 us_split_fields)
(declare-const result6 us_split_fields__ref3)
(declare-const h1__split_fields4 us_split_fields6)
(declare-const result7 us_split_fields__ref1)
(declare-const h2__split_fields4 us_split_fields2)
(declare-const split_records__update_field_if_possible__r__discrs2 us_split_discrs)
(declare-const split_records__update_field_if_possible__r__fields2 us_split_fields)
(declare-const result8 us_split_fields__ref1)
(declare-const h2__split_fields5 us_split_fields2)
(declare-const result9 map__ref)
(declare-const a3 (Array Int us_rep))
(declare-const split_records__update_field_if_possible__r__discrs3 us_split_discrs)
(declare-const split_records__update_field_if_possible__r__fields3 us_split_fields)
(declare-const result10 map__ref)
(declare-const a4 (Array Int us_rep))
(assert (and (= c1__attr__constrained true) (= (rec__split_records__record_with_mutable_discrs__present c1__split_discrs) (of_int 0))))
(assert (and (= (of_int 0) (rec__split_records__record_with_mutable_discrs__present c1__split_discrs)) (= c1__attr__constrained true)))
(assert (= result (mk___split_fields__ref (mk___split_fields c2__split_fields))))
(assert (= c2__split_fields1 (mk___split_fields dummy)))
(assert (= result1 (mk___split_discrs__ref (mk___split_discrs c2__split_discrs))))
(assert (= c2__split_discrs1 (mk___split_discrs (of_int 0))))
(assert (= c2__attr__constrained false))
(assert (= result2 (mk___split_fields__ref3 (mk___split_fields3 (mk___rep (mk___split_discrs h1__split_fields) (mk___split_fields h1__split_fields1) h1__split_fields2)))))
(assert (= h1__split_fields3 (mk___split_fields3 (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) true))))
(assert (= h1__split_discrs (mk___split_discrs1 (of_int 0))))
(assert (dynamic_invariant2 (mk___rep3 h1__split_discrs h1__split_fields3) true false true))
(assert (= result3 (mk___split_fields__ref1 (mk___split_fields1 (mk___rep (mk___split_discrs h2__split_fields) (mk___split_fields h2__split_fields1) h2__split_fields2)))))
(assert (= h2__split_fields3 (mk___split_fields1 (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) false))))
(assert (= (attr__constrained (rec__split_records__mutable_holder__content h2__split_fields3)) false))
(assert (= result4 (mk_map__ref a)))
(assert (= a1 (split_records__test__a__aggregate_def (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) false))))
(assert (dynamic_invariant3 a1 true false true))
(assert (= (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) true) c3))
(assert (and (= (of_int 0) (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 c3))) (= (attr__constrained c3) true)))
(assert (= (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) true) c4))
(assert (and (= (of_int 0) (rec__split_records__record_with_mutable_discrs__present (us_split_discrs1 c4))) (= (attr__constrained c4) true)))
(assert (= (mk___rep5 (mk___split_discrs1 (of_int 0)) (mk___split_fields5 (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) true))) h3))
(assert (dynamic_invariant5 h3 true false true))
(assert (= (mk___rep1 (mk___split_fields1 (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) false))) h4))
(assert (= (attr__constrained (rec__split_records__mutable_holder__content (us_split_fields3 h4))) false))
(assert (= (split_records__test__a2__aggregate_def (mk___rep (mk___split_discrs (of_int 0)) (mk___split_fields dummy) false)) a2))
(assert (dynamic_invariant6 a2 true false true))
(assert (not true))
(check-sat)
(exit)
