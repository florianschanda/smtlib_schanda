(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun to_rep ((x natural)) Int (naturalqtint x))
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int natural))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int natural)) (a__first Int) (a__last Int) (b (Array Int natural)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int natural)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))
(define-fun of_array ((a (Array Int natural)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int natural)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int natural)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int natural)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq2 (us_t us_t) Bool)
(declare-const dummy2 us_t)
(declare-datatypes () ((my_array__ref (mk_my_array__ref (my_array__content us_t)))))
(define-fun my_array__ref___projection ((a my_array__ref)) us_t (my_array__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int natural)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int natural) (elts1 a))
(define-fun of_array1 ((a (Array Int natural)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int natural)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int natural)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int natural)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq3 (us_t1 us_t1) Bool)
(declare-const dummy3 us_t1)
(declare-datatypes () ((constr_arr__ref (mk_constr_arr__ref (constr_arr__content us_t1)))))
(define-fun constr_arr__ref___projection ((a constr_arr__ref)) us_t1 (constr_arr__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range1 low) (in_range1 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int natural)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int natural) (elts2 a))
(define-fun of_array2 ((a (Array Int natural)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int natural)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int natural)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int natural)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq4 (us_t2 us_t2) Bool)
(declare-const dummy4 us_t2)
(declare-datatypes () ((constr_arr_2__ref (mk_constr_arr_2__ref (constr_arr_2__content us_t2)))))
(define-fun constr_arr_2__ref___projection ((a constr_arr_2__ref)) us_t2 (constr_arr_2__content a))
(define-fun dynamic_invariant ((temp___expr_201 us_t) (temp___is_init_197 Bool) (temp___skip_constant_198 Bool) (temp___do_toplevel_199 Bool) (temp___do_typ_inv_200 Bool)) Bool (and (=> (not (= temp___skip_constant_198 true)) (dynamic_property (- 2147483648) 2147483647 (first1 temp___expr_201) (last1 temp___expr_201))) (=> (= temp___do_toplevel_199 true) (=> (= temp___is_init_197 true) (and (<= (first1 temp___expr_201) 1) (<= 3 (last1 temp___expr_201)))))))
(define-fun dynamic_predicate ((temp___204 us_t)) Bool (and (<= (first1 temp___204) 1) (<= 3 (last1 temp___204))))
(define-fun dynamic_invariant1 ((temp___expr_212 us_t1) (temp___is_init_208 Bool) (temp___skip_constant_209 Bool) (temp___do_toplevel_210 Bool) (temp___do_typ_inv_211 Bool)) Bool (and (=> (not (= temp___skip_constant_209 true)) (dynamic_property1 (- 2147483648) 2147483647 (first3 temp___expr_212) (last3 temp___expr_212))) (=> (= temp___do_toplevel_210 true) (=> (= temp___is_init_208 true) (and (let ((temp___214 (of_array (to_array1 temp___expr_212) (first3 temp___expr_212) (last3 temp___expr_212)))) (and (<= (first1 temp___214) 1) (<= 3 (last1 temp___214)))) (not (= (to_rep (select (to_array1 temp___expr_212) 3)) 0)))))))
(define-fun dynamic_predicate1 ((temp___216 us_t1)) Bool (and (let ((temp___218 (of_array (to_array1 temp___216) (first3 temp___216) (last3 temp___216)))) (and (<= (first1 temp___218) 1) (<= 3 (last1 temp___218)))) (not (= (to_rep (select (to_array1 temp___216) 3)) 0))))
(define-fun dynamic_invariant2 ((temp___expr_225 us_t2) (temp___is_init_221 Bool) (temp___skip_constant_222 Bool) (temp___do_toplevel_223 Bool) (temp___do_typ_inv_224 Bool)) Bool (and (=> (not (= temp___skip_constant_222 true)) (dynamic_property2 (- 2147483648) 2147483647 (first5 temp___expr_225) (last5 temp___expr_225))) (=> (= temp___do_toplevel_223 true) (=> (= temp___is_init_221 true) (and (let ((temp___227 (of_array (to_array2 temp___expr_225) (first5 temp___expr_225) (last5 temp___expr_225)))) (and (<= (first1 temp___227) 1) (<= 3 (last1 temp___227)))) (not (= (to_rep (select (to_array2 temp___expr_225) 3)) 0)))))))
(define-fun dynamic_predicate2 ((temp___229 us_t2)) Bool (and (let ((temp___231 (of_array (to_array2 temp___229) (first5 temp___229) (last5 temp___229)))) (and (<= (first1 temp___231) 1) (<= 3 (last1 temp___231)))) (not (= (to_rep (select (to_array2 temp___229) 3)) 0))))
(declare-sort t17b 0)
(declare-fun t17bqtint (t17b) Int)
(assert (forall ((i t17b)) (and (<= 1 (t17bqtint i)) (<= (t17bqtint i) 10))))
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq5 (t17b t17b) Bool)
(declare-const dummy5 t17b)
(declare-datatypes () ((t17b__ref (mk_t17b__ref (t17b__content t17b)))))
(define-fun t17b__ref___projection ((a t17b__ref)) t17b (t17b__content a))
(declare-const x__first integer)
(declare-const x__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort t19b 0)
(declare-fun t19bqtint (t19b) Int)
(assert (forall ((i t19b)) (and (<= 1 (t19bqtint i)) (<= (t19bqtint i) 10))))
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq6 (t19b t19b) Bool)
(declare-const dummy6 t19b)
(declare-datatypes () ((t19b__ref (mk_t19b__ref (t19b__content t19b)))))
(define-fun t19b__ref___projection ((a t19b__ref)) t19b (t19b__content a))
(declare-const y__first integer)
(declare-const y__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-sort t21b 0)
(declare-fun t21bqtint (t21b) Int)
(assert (forall ((i t21b)) (and (<= 1 (t21bqtint i)) (<= (t21bqtint i) 10))))
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq7 (t21b t21b) Bool)
(declare-const dummy7 t21b)
(declare-datatypes () ((t21b__ref (mk_t21b__ref (t21b__content t21b)))))
(define-fun t21b__ref___projection ((a t21b__ref)) t21b (t21b__content a))
(declare-const u__first integer)
(declare-const u__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-fun formals_arr_split_pred__x__aggregate_def (Int) (Array Int natural))
(declare-fun formals_arr_split_pred__y__aggregate_def (Int) (Array Int natural))
(declare-fun formals_arr_split_pred__u__aggregate_def (Int) (Array Int natural))
(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant4 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range2 temp___expr_39)))
(declare-const rliteral natural)
(assert (= (naturalqtint rliteral) 1))
(assert (forall ((temp___292 Int)) (=> (dynamic_invariant4 temp___292 true true true true) (forall ((temp___293 Int)) (= (select (formals_arr_split_pred__x__aggregate_def temp___292) temp___293) rliteral)))))
(assert (forall ((temp___297 Int)) (=> (dynamic_invariant4 temp___297 true true true true) (forall ((temp___298 Int)) (= (select (formals_arr_split_pred__y__aggregate_def temp___297) temp___298) rliteral)))))
(assert (forall ((temp___304 Int)) (=> (dynamic_invariant4 temp___304 true true true true) (forall ((temp___305 Int)) (= (select (formals_arr_split_pred__u__aggregate_def temp___304) temp___305) rliteral)))))
(declare-const x (Array Int natural))
(declare-const y (Array Int natural))
(declare-const u (Array Int natural))
(declare-const temp___299 (Array Int natural))
(declare-const temp___2991 t1)
(declare-const formals_arr_split_pred__y__assume (Array Int natural))
(declare-const formals_arr_split_pred__y__assume1 t1)
(declare-const temp___316 (Array Int natural))
(declare-const temp___3161 t1)
(declare-const formals_arr_split_pred__p__a__compl (Array Int natural))
(declare-const formals_arr_split_pred__p__a__compl1 t1)
(declare-const o integer)
(declare-const o1 integer)
(declare-const o2 (Array Int natural))
(declare-const o3 t)
(declare-const o4 (Array Int natural))
(declare-const o5 integer)
(declare-const o6 integer)
(declare-const result (Array Int natural))
(declare-const x1 (Array Int natural))
(declare-const result1 (Array Int natural))
(declare-const y1 (Array Int natural))
(declare-const result2 (Array Int natural))
(declare-const u1 (Array Int natural))
(declare-const o7 (Array Int natural))
(declare-const o8 (Array Int natural))
(declare-const o9 (Array Int natural))
(declare-const formals_arr_split_pred__p__a (Array Int natural))
(declare-const result3 (Array Int natural))
(declare-const o10 (Array Int natural))
(declare-const y2 (Array Int natural))
(declare-const o11 (Array Int natural))
(declare-const o12 (Array Int natural))
(declare-const formals_arr_split_pred__p2__a (Array Int natural))
(define-fun temp___3162 () us_t1 (mk___t1 temp___316 temp___3161))
(define-fun temp___2992 () us_t1 (mk___t1 temp___299 temp___2991))
(assert (= result x))
(assert (= x1 (formals_arr_split_pred__x__aggregate_def 1)))
(assert (= (to_rep1 x__first) (to_rep1 (first (mk 1 10)))))
(assert (= (to_rep1 x__last) (to_rep1 (last (mk 1 10)))))
(assert (and (dynamic_property (- 2147483648) 2147483647 (to_rep1 x__first) (to_rep1 x__last)) (and (<= (to_rep1 x__first) 1) (<= 3 (to_rep1 x__last)))))
(assert (dynamic_property1 (- 2147483648) 2147483647 1 10))
(assert (= (formals_arr_split_pred__y__aggregate_def 1) temp___299))
(assert (= (mk1 1 10) temp___2991))
(assert (dynamic_predicate1 temp___2992))
(assert (= (mk___t1 formals_arr_split_pred__y__assume formals_arr_split_pred__y__assume1) temp___2992))
(assert (= result1 y))
(assert (= y1 formals_arr_split_pred__y__assume))
(assert (= (to_rep1 y__first) (to_rep1 (first2 formals_arr_split_pred__y__assume1))))
(assert (= (to_rep1 y__last) (to_rep1 (last2 formals_arr_split_pred__y__assume1))))
(assert (and (dynamic_property1 (- 2147483648) 2147483647 (to_rep1 y__first) (to_rep1 y__last)) (and (and (<= (to_rep1 (first (mk (to_rep1 y__first) (to_rep1 y__last)))) 1) (<= 3 (to_rep1 (last (mk (to_rep1 y__first) (to_rep1 y__last)))))) (not (= (to_rep (select y1 3)) 0)))))
(assert (= result2 u))
(assert (= u1 (formals_arr_split_pred__u__aggregate_def 1)))
(assert (= (to_rep1 u__first) (to_rep1 (first4 (mk2 1 10)))))
(assert (= (to_rep1 u__last) (to_rep1 (last4 (mk2 1 10)))))
(assert (and (dynamic_property2 (- 2147483648) 2147483647 (to_rep1 u__first) (to_rep1 u__last)) (and (and (<= (to_rep1 (first (mk (to_rep1 u__first) (to_rep1 u__last)))) 1) (<= 3 (to_rep1 (last (mk (to_rep1 u__first) (to_rep1 u__last)))))) (not (= (to_rep (select u1 3)) 0)))))
(assert (and (and (<= (to_rep1 (first (mk (to_rep1 x__first) (to_rep1 x__last)))) 1) (<= 3 (to_rep1 (last (mk (to_rep1 x__first) (to_rep1 x__last)))))) (not (= (to_rep (select o7 3)) 0))))
(assert (and (<= (to_rep1 x__first) 1) (<= 3 (to_rep1 x__last))))
(assert (and (<= (to_rep1 x__first) 1) (<= 3 (to_rep1 x__last))))
(assert (and (<= (to_rep1 x__first) 1) (<= 3 (to_rep1 x__last))))
(assert (and (<= (to_rep1 x__first) 1) (<= 3 (to_rep1 x__last))))
(assert (and (<= (to_rep1 x__first) 1) (<= 3 (to_rep1 x__last))))
(assert (and (and (<= (to_rep1 (first (mk (to_rep1 x__first) (to_rep1 x__last)))) 1) (<= 3 (to_rep1 (last (mk (to_rep1 x__first) (to_rep1 x__last)))))) (not (= (to_rep (select o8 3)) 0))))
(assert (and (<= (to_rep1 x__first) 1) (<= 3 (to_rep1 x__last))))
(assert (and (<= (to_rep1 x__first) 1) (<= 3 (to_rep1 x__last))))
(assert (and (<= (to_rep1 x__first) 1) (<= 3 (to_rep1 x__last))))
(assert (dynamic_property1 (- 2147483648) 2147483647 (to_rep1 x__first) (to_rep1 x__last)))
(assert (= o9 temp___316))
(assert (= (mk1 (to_rep1 x__first) (to_rep1 x__last)) temp___3161))
(assert (dynamic_predicate1 temp___3162))
(assert (= (mk___t1 formals_arr_split_pred__p__a__compl formals_arr_split_pred__p__a__compl1) temp___3162))
(assert (= (to_rep1 o1) (to_rep1 (last2 formals_arr_split_pred__p__a__compl1))))
(assert (= (to_rep1 o) (to_rep1 (first2 formals_arr_split_pred__p__a__compl1))))
(assert (and (and (<= (to_rep1 (first (mk (to_rep1 o) (to_rep1 o1)))) 1) (<= 3 (to_rep1 (last (mk (to_rep1 o) (to_rep1 o1)))))) (not (= (to_rep (select formals_arr_split_pred__p__a 3)) 0))))
(assert (dynamic_predicate (mk___t formals_arr_split_pred__p__a (mk (to_rep1 (first2 (mk1 (to_rep1 (first2 formals_arr_split_pred__p__a__compl1)) (to_rep1 (last2 formals_arr_split_pred__p__a__compl1))))) (to_rep1 (last2 (mk1 (to_rep1 (first2 formals_arr_split_pred__p__a__compl1)) (to_rep1 (last2 formals_arr_split_pred__p__a__compl1)))))))))
(assert (= formals_arr_split_pred__p__a o2))
(assert (= (mk (to_rep1 (first2 (mk1 (to_rep1 (first2 formals_arr_split_pred__p__a__compl1)) (to_rep1 (last2 formals_arr_split_pred__p__a__compl1))))) (to_rep1 (last2 (mk1 (to_rep1 (first2 formals_arr_split_pred__p__a__compl1)) (to_rep1 (last2 formals_arr_split_pred__p__a__compl1)))))) o3))
(assert (= o4 o2))
(assert (= result3 o9))
(assert (= o10 o4))
(assert (and (and (<= (to_rep1 (first (mk (to_rep1 y__first) (to_rep1 y__last)))) 1) (<= 3 (to_rep1 (last (mk (to_rep1 y__first) (to_rep1 y__last)))))) (not (= (to_rep (select y2 3)) 0))))
(assert (and (and (<= (to_rep1 (first (mk (to_rep1 y__first) (to_rep1 y__last)))) 1) (<= 3 (to_rep1 (last (mk (to_rep1 y__first) (to_rep1 y__last)))))) (not (= (to_rep (select y2 3)) 0))))
(assert (and (<= (to_rep1 y__first) 1) (<= 3 (to_rep1 y__last))))
(assert (and (and (<= (to_rep1 (first (mk (to_rep1 y__first) (to_rep1 y__last)))) 1) (<= 3 (to_rep1 (last (mk (to_rep1 y__first) (to_rep1 y__last)))))) (not (= (to_rep (select o11 3)) 0))))
(assert (and (and (<= (to_rep1 (first (mk (to_rep1 y__first) (to_rep1 y__last)))) 1) (<= 3 (to_rep1 (last (mk (to_rep1 y__first) (to_rep1 y__last)))))) (not (= (to_rep (select o12 3)) 0))))
(assert (and (and (<= (to_rep1 (first (mk (to_rep1 y__first) (to_rep1 y__last)))) 1) (<= 3 (to_rep1 (last (mk (to_rep1 y__first) (to_rep1 y__last)))))) (not (= (to_rep (select o12 3)) 0))))
(assert (= (to_rep1 o6) (to_rep1 (last (mk (to_rep1 y__first) (to_rep1 y__last))))))
(assert (= (to_rep1 o5) (to_rep1 (first (mk (to_rep1 y__first) (to_rep1 y__last))))))
(assert (and (<= (to_rep1 o5) 1) (<= 3 (to_rep1 o6))))
(assert (not (dynamic_predicate1 (mk___t1 formals_arr_split_pred__p2__a (mk1 (to_rep1 (first (mk (to_rep1 (first (mk (to_rep1 y__first) (to_rep1 y__last)))) (to_rep1 (last (mk (to_rep1 y__first) (to_rep1 y__last))))))) (to_rep1 (last (mk (to_rep1 (first (mk (to_rep1 y__first) (to_rep1 y__last)))) (to_rep1 (last (mk (to_rep1 y__first) (to_rep1 y__last))))))))))))
(check-sat)
(exit)
