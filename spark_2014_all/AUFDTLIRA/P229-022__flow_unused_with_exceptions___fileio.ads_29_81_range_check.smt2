(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort positive 0)
(define-fun in_range ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (positive positive) Bool)
(declare-const dummy positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range temp___expr_46)))
(declare-sort character 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (character character) Bool)
(declare-const dummy1 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-sort int__ 0)
(define-fun in_range2 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (int__ int__) Bool)
(declare-const dummy2 int__)
(declare-datatypes () ((int____ref (mk_int____ref (int____content int__)))))
(define-fun int____ref___2__projection ((a int____ref)) int__ (int____content a))
(define-fun dynamic_invariant1 ((temp___expr_349 Int) (temp___is_init_345 Bool) (temp___skip_constant_346 Bool) (temp___do_toplevel_347 Bool) (temp___do_typ_inv_348 Bool)) Bool (=> (or (= temp___is_init_345 true) (<= (- 2147483648) 2147483647)) (in_range2 temp___expr_349)))
(declare-const eof Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort file_descr 0)
(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (file_descr file_descr) Bool)
(declare-const dummy3 file_descr)
(declare-datatypes () ((file_descr__ref (mk_file_descr__ref (file_descr__content file_descr)))))
(define-fun file_descr__ref___projection ((a file_descr__ref)) file_descr (file_descr__content a))
(declare-fun to_rep1 (file_descr) Int)
(declare-fun of_rep1 (Int) file_descr)
(assert (forall ((x file_descr)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x file_descr)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-fun temp___419 ((Array Int character) Int Int) (Array Int character))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__fileio__file_type__descr file_descr) (rec__fileio__file_type__before_lm Bool) (rec__fileio__file_type__before_lm_pm Bool) (rec__fileio__file_type__is_regular_file Bool)))))
(define-fun us_split_fields_Descr__projection ((a us_split_fields)) file_descr (rec__fileio__file_type__descr a))
(define-fun us_split_fields_Before_LM__projection ((a us_split_fields)) Bool (rec__fileio__file_type__before_lm a))
(define-fun us_split_fields_Before_LM_PM__projection ((a us_split_fields)) Bool (rec__fileio__file_type__before_lm_pm a))
(define-fun us_split_fields_Is_Regular_File__projection ((a us_split_fields)) Bool (rec__fileio__file_type__is_regular_file a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq1 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (= (to_rep1 (rec__fileio__file_type__descr (us_split_fields1 a))) (to_rep1 (rec__fileio__file_type__descr (us_split_fields1 b)))) (= (rec__fileio__file_type__before_lm (us_split_fields1 a)) (rec__fileio__file_type__before_lm (us_split_fields1 b)))) (= (rec__fileio__file_type__before_lm_pm (us_split_fields1 a)) (rec__fileio__file_type__before_lm_pm (us_split_fields1 b)))) (= (rec__fileio__file_type__is_regular_file (us_split_fields1 a)) (rec__fileio__file_type__is_regular_file (us_split_fields1 b)))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const fileio__file_type__descr__first__bit Int)
(declare-const fileio__file_type__descr__last__bit Int)
(declare-const fileio__file_type__descr__position Int)
(assert (<= 0 fileio__file_type__descr__first__bit))
(assert (< fileio__file_type__descr__first__bit fileio__file_type__descr__last__bit))
(assert (<= 0 fileio__file_type__descr__position))
(declare-const fileio__file_type__before_lm__first__bit Int)
(declare-const fileio__file_type__before_lm__last__bit Int)
(declare-const fileio__file_type__before_lm__position Int)
(assert (<= 0 fileio__file_type__before_lm__first__bit))
(assert (< fileio__file_type__before_lm__first__bit fileio__file_type__before_lm__last__bit))
(assert (<= 0 fileio__file_type__before_lm__position))
(declare-const fileio__file_type__before_lm_pm__first__bit Int)
(declare-const fileio__file_type__before_lm_pm__last__bit Int)
(declare-const fileio__file_type__before_lm_pm__position Int)
(assert (<= 0 fileio__file_type__before_lm_pm__first__bit))
(assert (< fileio__file_type__before_lm_pm__first__bit fileio__file_type__before_lm_pm__last__bit))
(assert (<= 0 fileio__file_type__before_lm_pm__position))
(declare-const fileio__file_type__is_regular_file__first__bit Int)
(declare-const fileio__file_type__is_regular_file__last__bit Int)
(declare-const fileio__file_type__is_regular_file__position Int)
(assert (<= 0 fileio__file_type__is_regular_file__first__bit))
(assert (< fileio__file_type__is_regular_file__first__bit fileio__file_type__is_regular_file__last__bit))
(assert (<= 0 fileio__file_type__is_regular_file__position))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((file_type__ref (mk_file_type__ref (file_type__content us_rep)))))
(define-fun file_type__ref___projection ((a file_type__ref)) us_rep (file_type__content a))
(declare-const ch Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const file us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-fun temp___440 ((Array Int character) Int Int) (Array Int character))
(define-fun dynamic_invariant2 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range1 temp___expr_74)))
(assert (forall ((temp___442 (Array Int character))) (forall ((temp___443 Int) (temp___444 Int)) (let ((temp___441 (temp___440 temp___442 temp___443 temp___444))) (=> (and (dynamic_invariant temp___443 true true true true) (dynamic_invariant2 temp___444 true true true true)) (forall ((temp___445 Int)) (ite (= temp___445 temp___443) (= (to_rep (select temp___441 temp___445)) temp___444) (= (select temp___441 temp___445) (select temp___442 temp___445)))))))))
(assert (forall ((temp___421 (Array Int character))) (forall ((temp___422 Int) (temp___423 Int)) (let ((temp___420 (temp___419 temp___421 temp___422 temp___423))) (=> (and (dynamic_invariant temp___422 true true true true) (dynamic_invariant2 temp___423 true true true true)) (forall ((temp___424 Int)) (ite (= temp___424 temp___422) (= (to_rep (select temp___420 temp___424)) temp___423) (= (select temp___420 temp___424) (select temp___421 temp___424)))))))))
(define-fun dynamic_invariant3 ((temp___expr_405 Int) (temp___is_init_401 Bool) (temp___skip_constant_402 Bool) (temp___do_toplevel_403 Bool) (temp___do_typ_inv_404 Bool)) Bool (=> (or (= temp___is_init_401 true) (<= (- 2147483648) 2147483647)) (in_range3 temp___expr_405)))
(declare-const the_file (Array Int character))
(declare-const cur_position Int)
(declare-const result__ Int)
(declare-const the_file1 (Array Int character))
(declare-const cur_position1 Int)
(declare-const result__1 Int)
(declare-const the_file2 (Array Int character))
(declare-const cur_position2 Int)
(declare-const result__2 Int)
(declare-const the_file3 (Array Int character))
(declare-const cur_position3 Int)
(declare-const result__3 Int)
(declare-const the_file4 (Array Int character))
(declare-const cur_position4 Int)
(declare-const result__4 Int)
(assert (in_range2 ch))
(assert (in_range2 eof))
(assert (in_range cur_position))
(assert (=> (<= (- 2147483648) 2147483647) (in_range2 result__)))
(assert (=> (not (= ch eof)) (and (=> (not (= result__2 eof)) (and (= cur_position2 (- cur_position 1)) (= (bool_eq the_file2 1 2147483647 (temp___419 the_file cur_position2 ch) 1 2147483647) true))) (and (in_range2 result__2) (in_range cur_position2)))))
(assert (=> (not (= ch eof)) (not (= result__2 eof))))
(assert (=> (not (not (= ch eof))) (= result__2 result__)))
(assert (=> (not (not (= ch eof))) (= cur_position2 cur_position)))
(assert (=> (not (not (= ch eof))) (= the_file2 the_file)))
(assert (=> (not (not (= ch eof))) (= result__2 result__1)))
(assert (=> (not (not (= ch eof))) (= cur_position2 cur_position1)))
(assert (=> (not (not (= ch eof))) (= the_file2 the_file1)))
(assert (= result__2 result__3))
(assert (= cur_position2 cur_position3))
(assert (= the_file2 the_file3))
(assert (= result__4 result__2))
(assert (= cur_position4 cur_position2))
(assert (= the_file4 the_file2))
(assert (not (in_range1 ch)))
(check-sat)
(exit)
