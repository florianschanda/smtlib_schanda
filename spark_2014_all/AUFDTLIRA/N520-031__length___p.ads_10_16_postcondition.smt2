(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range2 temp___expr_39)))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq2 (us_t us_t) Bool)
(declare-const dummy2 us_t)
(declare-datatypes () ((vect__ref (mk_vect__ref (vect__content us_t)))))
(define-fun vect__ref___projection ((a vect__ref)) us_t (vect__content a))
(declare-const v__first integer)
(declare-const v__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const i Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const j Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-fun temp_____aggregate_def_161 (us_t Int Int Int Int) us_t)
(define-fun dynamic_invariant2 ((temp___expr_159 us_t) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (=> (not (= temp___skip_constant_156 true)) (dynamic_property 0 2147483647 (first1 temp___expr_159) (last1 temp___expr_159))))
(assert (forall ((temp___163 us_t)) (forall ((temp___164 Int) (temp___165 Int) (temp___166 Int) (temp___167 Int)) (let ((temp___162 (temp_____aggregate_def_161 temp___163 temp___164 temp___165 temp___166 temp___167))) (=> (and (and (and (and (dynamic_invariant2 temp___163 true true true true) (dynamic_invariant1 temp___164 true true true true)) (dynamic_invariant temp___165 true true true true)) (dynamic_invariant1 temp___166 true true true true)) (dynamic_invariant temp___167 true true true true)) (and (and (= (first1 temp___162) (first1 temp___163)) (= (last1 temp___162) (last1 temp___163))) (forall ((temp___168 Int)) (ite (= temp___168 temp___166) (= (to_rep (select (to_array temp___162) temp___168)) temp___167) (ite (= temp___168 temp___164) (= (to_rep (select (to_array temp___162) temp___168)) temp___165) (= (select (to_array temp___162) temp___168) (select (to_array temp___163) temp___168)))))))))))
(declare-const v (Array Int integer))
(declare-const aux Int)
(declare-const o Int)
(declare-const o1 integer)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 integer)
(declare-const o5 Int)
(declare-const o6 integer)
(declare-const o7 Int)
(declare-const o8 (Array Int integer))
(declare-const o9 integer)
(declare-const o10 Int)
(declare-const o11 (Array Int integer))
(declare-const result Int)
(declare-const aux1 Int)
(declare-const result1 (Array Int integer))
(declare-const v1 (Array Int integer))
(declare-const result2 (Array Int integer))
(declare-const v2 (Array Int integer))
(declare-const v3 (Array Int integer))
(declare-const aux2 Int)
(declare-const v4 (Array Int integer))
(declare-const aux3 Int)
(assert (dynamic_property 0 2147483647 (to_rep v__first) (to_rep v__last)))
(assert (in_range2 i))
(assert (in_range2 j))
(assert (and (and (<= (to_rep v__first) i) (<= i (to_rep v__last))) (and (<= (to_rep v__first) j) (<= j (to_rep v__last)))))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 aux)))
(assert (and (<= (to_rep v__first) i) (<= i (to_rep v__last))))
(assert (= o i))
(assert (= o1 (select v o)))
(assert (= o2 (to_rep o1)))
(assert (= (mk_int__ref result) (mk_int__ref aux)))
(assert (= aux1 o2))
(assert (and (<= (to_rep v__first) j) (<= j (to_rep v__last))))
(assert (= o3 j))
(assert (= o4 (select v o3)))
(assert (= o5 (to_rep o4)))
(assert (= (to_rep o6) o5))
(assert (and (<= (to_rep v__first) i) (<= i (to_rep v__last))))
(assert (= o7 i))
(assert (= o8 (store v o7 o6)))
(assert (= (mk_map__ref result1) (mk_map__ref v)))
(assert (= v1 o8))
(assert (= (to_rep o9) aux1))
(assert (and (<= (to_rep v__first) j) (<= j (to_rep v__last))))
(assert (= o10 j))
(assert (= o11 (store v1 o10 o9)))
(assert (= v1 result2))
(assert (= v2 o11))
(assert (= aux1 aux2))
(assert (= v2 v3))
(assert (= aux3 aux1))
(assert (= v4 v2))
(assert (not (= (let ((temp___195 (temp_____aggregate_def_161 (mk___t v (mk (to_rep v__first) (to_rep v__last))) i (to_rep (select v j)) j (to_rep (select v i))))) (bool_eq v3 (to_rep v__first) (to_rep v__last) (elts temp___195) (to_rep (first (rt temp___195))) (to_rep (last (rt temp___195))))) true)))
(check-sat)
(exit)
