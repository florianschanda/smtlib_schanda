(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type natural

predicate in_range2(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : natural, natural -> bool

logic dummy1 : natural

type natural__ref = { natural__content : natural
}

function natural__ref___projection(a: natural__ref) : natural =
  (a).natural__content

logic to_rep : natural -> int

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range2(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range2(x) ->
  (to_rep(of_rep(x)) = x)))

type positive

predicate in_range3(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : positive, positive -> bool

logic dummy2 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type true_bool

predicate in_range4(x: int) = ((1 <= x) and (x <= 1))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : true_bool, true_bool -> bool

logic dummy3 : true_bool

type true_bool__ref = { true_bool__content : true_bool
}

function true_bool__ref___projection(a: true_bool__ref) : true_bool =
  (a).true_bool__content

type index

predicate in_range5(x: int) = ((1 <= x) and (x <= 100))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq4 : index, index -> bool

logic dummy4 : index

type index__ref = { index__content : index
}

function index__ref___projection(a: index__ref) : index = (a).index__content

type map__ref = { map__content : (int,natural) farray
}

logic slide : (int,natural) farray, int, int -> (int,natural) farray

axiom slide_eq :
  (forall a:(int,natural) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,natural) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,natural) farray, int, int, (int,natural) farray, int,
  int -> (int,natural) farray

axiom concat_def :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : natural, int -> (int,natural) farray

axiom singleton_def :
  (forall v:natural.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq7 : (int,natural) farray, int, int, (int,natural) farray, int,
  int -> bool

axiom bool_eq_def6 :
  (forall a:(int,natural) farray. forall a__first:int. forall a__last:int.
  forall b:(int,natural) farray. forall b__first:int. forall b__last:int
  [bool_eq7(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_132:int. ((((a__first <= temp___idx_132) and
  (temp___idx_132 <= a__last)) and
  (to_rep((a[temp___idx_132])) = to_rep((b[((b__first - a__first) + temp___idx_132)])))) or
  (not ((a__first <= temp___idx_132) and (temp___idx_132 <= a__last)))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_132:int. (((a__first <= temp___idx_132) and
  (temp___idx_132 <= a__last)) ->
  (to_rep((a[temp___idx_132])) = to_rep((b[((b__first - a__first) + temp___idx_132)]))))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_132:int. (((a__first <= temp___idx_132) and
  (temp___idx_132 <= a__last)) ->
  (to_rep((a[temp___idx_132])) = to_rep((b[((b__first - a__first) + temp___idx_132)])))))))))

logic compare : (int,natural) farray, int, int, (int,natural) farray, int,
  int -> int

axiom compare_def_eq :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq7(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq7(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq7(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range5(low) and in_range5(high)))))

type us_t = { elts : (int,natural) farray; rt : t
}

function to_array(a: us_t) : (int,natural) farray = (a).elts

function of_array(a: (int,natural) farray, f: int, l: int) : us_t = { elts =
  a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,natural) farray -> int

logic value__component__size : int

logic object__component__size : (int,natural) farray -> int

logic value__alignment : int

logic object__alignment : (int,natural) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,natural) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,natural) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,natural) farray. (0 <= object__alignment(a)))

function bool_eq8(x: us_t, y: us_t) : bool = bool_eq7((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq5 : us_t, us_t -> bool

logic dummy5 : (int,natural) farray

logic dummy6 : t

type nat_array__ref = { nat_array__content : us_t
}

function nat_array__ref___projection(a: nat_array__ref) : us_t =
  (a).nat_array__content

logic remove : us_t, int -> us_t

logic remove__function_guard : us_t, us_t, int -> prop

logic invariant__ : us_t -> bool

logic invariant____function_guard : bool, us_t -> prop

axiom remove__post_axiom :
  (forall a:(int,natural) farray. forall a1:t.
  (forall i:int [remove({ elts = a; rt = a1 }, i)]. ((in_range5(i) and
  ((invariant__({ elts = a; rt = a1 }) = true) and
  ((to_rep1(first(a1)) <= i) and (i <= to_rep1(last(a1)))))) ->
  (((invariant__(remove({ elts = a; rt = a1 }, i)) = true) and
  ((to_rep1(last((remove({ elts = a; rt = a1 },
  i)).rt)) = (to_rep1(last(a1)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (i - 1))) ->
   (to_rep((a[k])) = to_rep(((remove({ elts = a; rt = a1 }, i)).elts[k]))))) and
  ((forall k:int. ((((i + 1) <= k) and (k <= to_rep1(last(a1)))) ->
   (to_rep((a[k])) = to_rep(((remove({ elts = a; rt = a1 },
   i)).elts[(k - 1)]))))) and
  (forall k:int. (((i <= k) and (k <= (to_rep1(last(a1)) - 1))) ->
  (to_rep((a[(k + 1)])) = to_rep(((remove({ elts = a; rt = a1 },
  i)).elts[k]))))))))) and dynamic_property(1, 100, to_rep1(first((remove({
  elts = a; rt = a1 }, i)).rt)), to_rep1(last((remove({ elts = a; rt = a1 },
  i)).rt)))))))

logic remove_swap : us_t, int, int -> int

logic remove_swap__function_guard : int, us_t, int, int -> prop

axiom remove_swap__post_axiom :
  (forall a:(int,natural) farray. forall a1:t.
  (forall i1:int. forall i2:int [remove_swap({ elts = a; rt = a1 }, i1, i2)].
  (((in_range5(i1) and in_range5(i2)) and ((invariant__({ elts = a; rt = a1
  }) = true) and (((to_rep1(first(a1)) <= i1) and
  (i1 <= to_rep1(last(a1)))) and (((to_rep1(first(a1)) <= i2) and
  (i2 <= to_rep1(last(a1)))) and (i1 <  i2))))) -> (((of_int(remove_swap({
  elts = a; rt = a1 }, i1, i2)) = true) -> (bool_eq7((remove(remove({ elts =
  a; rt = a1 }, i1), (i2 - 1))).elts, to_rep1(first((remove(remove({ elts =
  a; rt = a1 }, i1), (i2 - 1))).rt)), to_rep1(last((remove(remove({ elts = a;
  rt = a1 }, i1), (i2 - 1))).rt)), (remove(remove({ elts = a; rt = a1 }, i2),
  i1)).elts, to_rep1(first((remove(remove({ elts = a; rt = a1 }, i2),
  i1)).rt)), to_rep1(last((remove(remove({ elts = a; rt = a1 }, i2),
  i1)).rt))) = true)) and in_range4(remove_swap({ elts = a; rt = a1 }, i1,
  i2))))))

logic remove_eq : us_t, us_t, int -> int

logic remove_eq__function_guard : int, us_t, us_t, int -> prop

axiom remove_eq__post_axiom :
  (forall a:(int,natural) farray. forall a1:t. forall b:(int,natural) farray.
  forall b1:t.
  (forall i:int [remove_eq({ elts = a; rt = a1 }, { elts = b; rt = b1 }, i)].
  ((in_range5(i) and ((invariant__({ elts = a; rt = a1 }) = true) and
  ((invariant__({ elts = b; rt = b1 }) = true) and
  (((to_rep1(first(a1)) <= i) and (i <= to_rep1(last(a1)))) and (bool_eq7(a,
  to_rep1(first(a1)), to_rep1(last(a1)), b, to_rep1(first(b1)),
  to_rep1(last(b1))) = true))))) -> (((of_int(remove_eq({ elts = a; rt = a1
  }, { elts = b; rt = b1 }, i)) = true) -> (bool_eq7((remove({ elts = a; rt =
  a1 }, i)).elts, to_rep1(first((remove({ elts = a; rt = a1 }, i)).rt)),
  to_rep1(last((remove({ elts = a; rt = a1 }, i)).rt)), (remove({ elts = b;
  rt = b1 }, i)).elts, to_rep1(first((remove({ elts = b; rt = b1 }, i)).rt)),
  to_rep1(last((remove({ elts = b; rt = b1 }, i)).rt))) = true)) and
  in_range4(remove_eq({ elts = a; rt = a1 }, { elts = b; rt = b1 }, i))))))

logic is_perm : us_t, us_t -> bool

logic is_perm__function_guard : bool, us_t, us_t -> prop

axiom is_perm__def_axiom :
  (forall a:(int,natural) farray. forall a1:t. forall b:(int,natural) farray.
  forall b1:t [is_perm({ elts = a; rt = a1 }, { elts = b; rt = b1 })].
  ((is_perm({ elts = a; rt = a1 }, { elts = b; rt = b1 }) = true) <->
  (((length({ elts = a; rt = a1 }) = 0) and (length({ elts = b; rt = b1
  }) = 0)) or
  (exists ia:int. (((to_rep1(first(a1)) <= ia) and
  (ia <= to_rep1(last(a1)))) and
  (exists ib:int. (((to_rep1(first(b1)) <= ib) and
  (ib <= to_rep1(last(b1)))) and ((to_rep((a[ia])) = to_rep((b[ib]))) and
  (is_perm(remove({ elts = a; rt = a1 }, ia), remove({ elts = b; rt = b1 },
  ib)) = true)))))))))

logic perm_reflexive : us_t, us_t -> int

logic perm_reflexive__function_guard : int, us_t, us_t -> prop

axiom perm_reflexive__post_axiom :
  (forall a:(int,natural) farray. forall a1:t. forall b:(int,natural) farray.
  forall b1:t [perm_reflexive({ elts = a; rt = a1 }, { elts = b; rt = b1 })].
  (((invariant__({ elts = a; rt = a1 }) = true) and ((invariant__({ elts = b;
  rt = b1 }) = true) and (bool_eq7(a, to_rep1(first(a1)), to_rep1(last(a1)),
  b, to_rep1(first(b1)), to_rep1(last(b1))) = true))) ->
  (((of_int(perm_reflexive({ elts = a; rt = a1 }, { elts = b; rt = b1
  })) = true) -> (is_perm({ elts = a; rt = a1 }, { elts = b; rt = b1
  }) = true)) and in_range4(perm_reflexive({ elts = a; rt = a1 }, { elts = b;
  rt = b1 })))))

logic perm_transitive : us_t, us_t, us_t -> int

logic perm_transitive__function_guard : int, us_t, us_t, us_t -> prop

axiom perm_transitive__post_axiom :
  (forall a:(int,natural) farray. forall a1:t. forall b:(int,natural) farray.
  forall b1:t. forall c:(int,natural) farray. forall c1:t [perm_transitive({
  elts = a; rt = a1 }, { elts = b; rt = b1 }, { elts = c; rt = c1 })].
  (((invariant__({ elts = a; rt = a1 }) = true) and ((invariant__({ elts = b;
  rt = b1 }) = true) and ((invariant__({ elts = c; rt = c1 }) = true) and
  ((is_perm({ elts = a; rt = a1 }, { elts = b; rt = b1 }) = true) and
  (is_perm({ elts = b; rt = b1 }, { elts = c; rt = c1 }) = true))))) ->
  (((of_int(perm_transitive({ elts = a; rt = a1 }, { elts = b; rt = b1 }, {
  elts = c; rt = c1 })) = true) -> (is_perm({ elts = a; rt = a1 }, { elts =
  c; rt = c1 }) = true)) and in_range4(perm_transitive({ elts = a; rt = a1 },
  { elts = b; rt = b1 }, { elts = c; rt = c1 })))))

type tarray_typeP1

predicate in_range6(x: int) = ((1 <= x) and (x <= 100))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : tarray_typeP1, tarray_typeP1 -> bool

logic dummy7 : tarray_typeP1

type tarray_typeP1__ref = { tarray_typeP1__content : tarray_typeP1
}

function tarray_typeP1__ref___projection(a: tarray_typeP1__ref) : tarray_typeP1 =
  (a).tarray_typeP1__content

logic attr__ATTRIBUTE_ADDRESS : int

logic x : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic y : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic init : (int,natural) farray

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

axiom invariant____post_axiom : true

axiom invariant____def_axiom :
  (forall a:(int,natural) farray. forall a1:t [invariant__({ elts = a; rt =
  a1 })]. ((invariant__({ elts = a; rt = a1 }) = true) <->
  ((to_rep1(first(a1)) = 1) and (0 <= to_rep1(last(a1))))))

logic values : (int,natural) farray

logic temp : int

logic interm : (int,natural) farray

logic hr : int

logic hr1 : int

logic hr2 : int

logic o : int

logic o1 : natural

logic o2 : int

logic o3 : int

logic o4 : natural

logic o5 : int

logic o6 : natural

logic o7 : int

logic o8 : (int,natural) farray

logic o9 : int

logic temp___213 : (int,natural) farray

logic temp___2131 : t

logic o10 : int

logic temp___212 : (int,natural) farray

logic temp___2121 : t

logic o11 : int

logic o12 : natural

logic o13 : int

logic o14 : (int,natural) farray

logic o15 : int

logic temp___217 : (int,natural) farray

logic temp___2171 : t

logic o16 : int

logic temp___216 : (int,natural) farray

logic temp___2161 : t

logic o17 : int

logic o18 : (int,natural) farray

logic o19 : t

logic o20 : int

logic o21 : (int,natural) farray

logic o22 : t

logic o23 : int

logic o24 : int

logic o25 : int

logic o26 : int

logic o27 : int

logic o28 : int

logic o29 : (int,natural) farray

logic o30 : t

logic o31 : int

logic temp___246 : (int,natural) farray

logic temp___2461 : t

logic o32 : int

logic o33 : (int,natural) farray

logic o34 : t

logic o35 : int

logic temp___245 : (int,natural) farray

logic temp___2451 : t

logic o36 : int

logic o37 : (int,natural) farray

logic o38 : t

logic o39 : int

logic temp___250 : (int,natural) farray

logic temp___2501 : t

logic o40 : int

logic o41 : (int,natural) farray

logic o42 : t

logic o43 : int

logic temp___249 : (int,natural) farray

logic temp___2491 : t

logic o44 : int

logic o45 : int

logic o46 : int

logic o47 : int

logic o48 : (int,natural) farray

logic o49 : t

logic o50 : int

logic temp___254 : (int,natural) farray

logic temp___2541 : t

logic o51 : int

logic o52 : (int,natural) farray

logic o53 : t

logic o54 : int

logic temp___253 : (int,natural) farray

logic temp___2531 : t

logic o55 : int

logic o56 : (int,natural) farray

logic o57 : t

logic o58 : int

logic o59 : (int,natural) farray

logic o60 : t

logic o61 : int

logic o62 : int

logic o63 : int

logic o64 : (int,natural) farray

logic o65 : t

logic o66 : int

logic temp___262 : (int,natural) farray

logic temp___2621 : t

logic o67 : int

logic o68 : (int,natural) farray

logic o69 : t

logic o70 : int

logic temp___261 : (int,natural) farray

logic temp___2611 : t

logic o71 : int

logic o72 : (int,natural) farray

logic o73 : t

logic o74 : int

logic o75 : (int,natural) farray

logic o76 : t

logic o77 : int

logic o78 : (int,natural) farray

logic o79 : t

logic o80 : int

logic o81 : (int,natural) farray

logic o82 : t

logic o83 : int

logic o84 : int

logic o85 : int

logic o86 : int

logic o87 : int

logic o88 : (int,natural) farray

logic o89 : t

logic o90 : int

logic o91 : (int,natural) farray

logic o92 : t

logic o93 : int

logic o94 : (int,natural) farray

logic o95 : t

logic o96 : int

logic o97 : (int,natural) farray

logic o98 : t

logic o99 : int

logic o100 : int

logic o101 : (int,natural) farray

logic o102 : t

logic o103 : int

logic o104 : (int,natural) farray

logic o105 : t

logic o106 : int

logic o107 : (int,natural) farray

logic o108 : t

logic o109 : int

logic o110 : (int,natural) farray

logic o111 : t

logic o112 : int

logic o113 : (int,natural) farray

logic o114 : t

logic o115 : int

logic o116 : (int,natural) farray

logic o117 : t

logic o118 : int

logic o119 : int

logic temp___265 : (int,natural) farray

logic temp___2651 : t

logic o120 : int

logic temp___266 : (int,natural) farray

logic temp___2661 : t

logic o121 : int

logic o122 : natural

logic o123 : int

logic o124 : int

logic o125 : (int,natural) farray

logic o126 : t

logic o127 : int

logic o128 : (int,natural) farray

logic o129 : t

logic us : bool

logic o130 : int

logic o131 : (int,natural) farray

logic o132 : t

logic o133 : int

logic o134 : (int,natural) farray

logic o135 : t

logic o136 : int

logic o137 : int

logic o138 : int

logic o139 : int

logic o140 : int

logic o141 : int

logic o142 : (int,natural) farray

logic o143 : t

logic o144 : int

logic temp___221 : (int,natural) farray

logic temp___2211 : t

logic o145 : int

logic o146 : (int,natural) farray

logic o147 : t

logic o148 : int

logic temp___220 : (int,natural) farray

logic temp___2201 : t

logic o149 : int

logic o150 : (int,natural) farray

logic o151 : t

logic o152 : int

logic temp___225 : (int,natural) farray

logic temp___2251 : t

logic o153 : int

logic o154 : (int,natural) farray

logic o155 : t

logic o156 : int

logic temp___224 : (int,natural) farray

logic temp___2241 : t

logic o157 : int

logic o158 : int

logic o159 : int

logic o160 : int

logic o161 : (int,natural) farray

logic o162 : t

logic o163 : int

logic temp___229 : (int,natural) farray

logic temp___2291 : t

logic o164 : int

logic o165 : (int,natural) farray

logic o166 : t

logic o167 : int

logic temp___228 : (int,natural) farray

logic temp___2281 : t

logic o168 : int

logic o169 : (int,natural) farray

logic o170 : t

logic o171 : int

logic o172 : (int,natural) farray

logic o173 : t

logic o174 : int

logic o175 : int

logic o176 : int

logic o177 : (int,natural) farray

logic o178 : t

logic o179 : int

logic temp___237 : (int,natural) farray

logic temp___2371 : t

logic o180 : int

logic o181 : (int,natural) farray

logic o182 : t

logic o183 : int

logic temp___236 : (int,natural) farray

logic temp___2361 : t

logic o184 : int

logic o185 : (int,natural) farray

logic o186 : t

logic o187 : int

logic o188 : (int,natural) farray

logic o189 : t

logic o190 : int

logic o191 : (int,natural) farray

logic o192 : t

logic o193 : int

logic o194 : (int,natural) farray

logic o195 : t

logic o196 : int

logic o197 : int

logic o198 : int

logic o199 : int

logic o200 : int

logic o201 : (int,natural) farray

logic o202 : t

logic o203 : int

logic o204 : (int,natural) farray

logic o205 : t

logic o206 : int

logic o207 : (int,natural) farray

logic o208 : t

logic o209 : int

logic o210 : (int,natural) farray

logic o211 : t

logic o212 : int

logic o213 : int

logic o214 : (int,natural) farray

logic o215 : t

logic o216 : int

logic o217 : (int,natural) farray

logic o218 : t

logic o219 : int

logic o220 : (int,natural) farray

logic o221 : t

logic o222 : int

logic o223 : (int,natural) farray

logic o224 : t

logic o225 : int

logic o226 : (int,natural) farray

logic o227 : t

logic o228 : int

logic o229 : (int,natural) farray

logic o230 : t

logic o231 : int

logic o232 : int

logic temp___240 : (int,natural) farray

logic temp___2401 : t

logic o233 : int

logic temp___242 : (int,natural) farray

logic temp___2421 : t

logic o234 : int

logic o235 : natural

logic o236 : int

logic o237 : int

logic o238 : (int,natural) farray

logic o239 : t

logic o240 : int

logic o241 : (int,natural) farray

logic o242 : t

logic us1 : bool

logic us2 : bool

logic hr3 : int

logic hr4 : int

logic result : int

logic temp1 : int

logic result1 : (int,natural) farray

logic values1 : (int,natural) farray

logic result2 : (int,natural) farray

logic interm1 : (int,natural) farray

logic result3 : (int,natural) farray

logic values2 : (int,natural) farray

logic result4 : int

logic hr5 : int

logic result5 : int

logic hr6 : int

logic result6 : int

logic hr7 : int

logic result7 : int

logic hr8 : int

logic result8 : int

logic hr9 : int

logic result9 : int

logic hr10 : int

logic result10 : int

logic hr11 : int

logic result11 : int

logic hr12 : int

logic result12 : int

logic hr13 : int

logic result13 : int

logic hr14 : int

logic result14 : int

logic hr15 : int

logic result15 : int

logic hr16 : int

logic result16 : int

logic hr17 : int

logic result17 : int

logic hr18 : int

logic result18 : int

logic hr19 : int

logic result19 : int

logic hr20 : int

logic values3 : (int,natural) farray

logic temp2 : int

logic interm2 : (int,natural) farray

logic hr21 : int

logic hr22 : int

logic hr23 : int

logic values4 : (int,natural) farray

logic temp3 : int

logic interm3 : (int,natural) farray

logic hr24 : int

logic hr25 : int

logic hr26 : int

axiom H : in_range3(x)

axiom H1 : in_range3(y)

axiom H2 : (((1 <= x) and (x <= 100)) and (((1 <= y) and (y <= 100)) and
  (not (x = y))))

axiom H3 : (((- 2147483648) <= 2147483647) -> in_range1(temp))

axiom H4 : (values = init)

axiom H5 : ((1 <= 1) -> in_range4(hr))

axiom H6 : ((1 <= x) and (x <= 100))

axiom H7 : (o = x)

axiom H8 : (o1 = (values[o]))

axiom H9 : (o2 = to_rep(o1))

axiom H10 : (result = temp)

axiom H11 : (temp1 = o2)

axiom H12 : ((1 <= y) and (y <= 100))

axiom H13 : (o3 = y)

axiom H14 : (o4 = (values[o3]))

axiom H15 : (o5 = to_rep(o4))

axiom H16 : (to_rep(o6) = o5)

axiom H17 : ((1 <= x) and (x <= 100))

axiom H18 : (o7 = x)

axiom H19 : (o8 = (values[o7 <- o6]))

axiom H20 : (result1 = values)

axiom H21 : (values1 = o8)

axiom H22 : (result2 = interm)

axiom H23 : (interm1 = values1)

axiom H24 : (bool_eq7((remove({ elts = init; rt = mk(1, 100) }, x)).elts,
  to_rep1(first((remove({ elts = init; rt = mk(1, 100) }, x)).rt)),
  to_rep1(last((remove({ elts = init; rt = mk(1, 100) }, x)).rt)), (remove({
  elts = interm1; rt = mk(1, 100) }, x)).elts, to_rep1(first((remove({ elts =
  interm1; rt = mk(1, 100) }, x)).rt)), to_rep1(last((remove({ elts =
  interm1; rt = mk(1, 100) }, x)).rt))) = true)

axiom H25 : ((o11 = temp1) and in_range2(temp1))

axiom H26 : (to_rep(o12) = o11)

axiom H27 : ((1 <= y) and (y <= 100))

axiom H28 : (o13 = y)

axiom H29 : (o14 = (values1[o13 <- o12]))

axiom H30 : (result3 = values1)

axiom H31 : (values2 = o14)

axiom H32 : (bool_eq7((remove({ elts = interm1; rt = mk(1, 100) }, y)).elts,
  to_rep1(first((remove({ elts = interm1; rt = mk(1, 100) }, y)).rt)),
  to_rep1(last((remove({ elts = interm1; rt = mk(1, 100) }, y)).rt)),
  (remove({ elts = values2; rt = mk(1, 100) }, y)).elts,
  to_rep1(first((remove({ elts = values2; rt = mk(1, 100) }, y)).rt)),
  to_rep1(last((remove({ elts = values2; rt = mk(1, 100) }, y)).rt))) = true)

axiom H33 : (y <  x)

axiom H34 : ((1 <= 1) -> in_range4(hr1))

axiom H35 : (bool_eq7((remove(remove({ elts = init; rt = mk(1, 100) }, x),
  y)).elts, to_rep1(first((remove(remove({ elts = init; rt = mk(1, 100) },
  x), y)).rt)), to_rep1(last((remove(remove({ elts = init; rt = mk(1, 100) },
  x), y)).rt)), (remove(remove({ elts = values2; rt = mk(1, 100) }, x),
  y)).elts, to_rep1(first((remove(remove({ elts = values2; rt = mk(1, 100) },
  x), y)).rt)), to_rep1(last((remove(remove({ elts = values2; rt = mk(1, 100)
  }, x), y)).rt))) = true)

axiom H36 : ((o80 = y) and in_range5(y))

axiom H37 : ((o77 = x) and in_range5(x))

axiom H38 : (({ elts = o78; rt = o79 } = remove({ elts = values2; rt = mk(1,
  100) }, o77)) and (dynamic_property(1, 100, to_rep1(first(o79)),
  to_rep1(last(o79))) and ((invariant__({ elts = o78; rt = o79 }) = true) and
  ((to_rep1(last(o79)) = (to_rep1(last(mk(1, 100))) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o77 - 1))) ->
   (to_rep((values2[k])) = to_rep((o78[k]))))) and
  ((forall k:int. ((((o77 + 1) <= k) and (k <= to_rep1(last(mk(1, 100))))) ->
   (to_rep((values2[k])) = to_rep((o78[(k - 1)]))))) and
  (forall k:int. (((o77 <= k) and (k <= (to_rep1(last(mk(1, 100))) - 1))) ->
  (to_rep((values2[(k + 1)])) = to_rep((o78[k])))))))))))

axiom H39 : (({ elts = o81; rt = o82 } = remove({ elts = o78; rt = o79 },
  o80)) and (dynamic_property(1, 100, to_rep1(first(o82)),
  to_rep1(last(o82))) and ((invariant__({ elts = o81; rt = o82 }) = true) and
  ((to_rep1(last(o82)) = (to_rep1(last(o79)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o80 - 1))) ->
   (to_rep((o78[k])) = to_rep((o81[k]))))) and
  ((forall k:int. ((((o80 + 1) <= k) and (k <= to_rep1(last(o79)))) ->
   (to_rep((o78[k])) = to_rep((o81[(k - 1)]))))) and
  (forall k:int. (((o80 <= k) and (k <= (to_rep1(last(o79)) - 1))) ->
  (to_rep((o78[(k + 1)])) = to_rep((o81[k])))))))))))

axiom H40 : ((o74 = y) and in_range5(y))

axiom H41 : ((o71 = x) and in_range5(x))

axiom H42 : (({ elts = o72; rt = o73 } = remove({ elts = init; rt = mk(1,
  100) }, o71)) and (dynamic_property(1, 100, to_rep1(first(o73)),
  to_rep1(last(o73))) and ((invariant__({ elts = o72; rt = o73 }) = true) and
  ((to_rep1(last(o73)) = (to_rep1(last(mk(1, 100))) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o71 - 1))) ->
   (to_rep((init[k])) = to_rep((o72[k]))))) and
  ((forall k:int. ((((o71 + 1) <= k) and (k <= to_rep1(last(mk(1, 100))))) ->
   (to_rep((init[k])) = to_rep((o72[(k - 1)]))))) and
  (forall k:int. (((o71 <= k) and (k <= (to_rep1(last(mk(1, 100))) - 1))) ->
  (to_rep((init[(k + 1)])) = to_rep((o72[k])))))))))))

axiom H43 : (({ elts = o75; rt = o76 } = remove({ elts = o72; rt = o73 },
  o74)) and (dynamic_property(1, 100, to_rep1(first(o76)),
  to_rep1(last(o76))) and ((invariant__({ elts = o75; rt = o76 }) = true) and
  ((to_rep1(last(o76)) = (to_rep1(last(o73)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o74 - 1))) ->
   (to_rep((o72[k])) = to_rep((o75[k]))))) and
  ((forall k:int. ((((o74 + 1) <= k) and (k <= to_rep1(last(o73)))) ->
   (to_rep((o72[k])) = to_rep((o75[(k - 1)]))))) and
  (forall k:int. (((o74 <= k) and (k <= (to_rep1(last(o73)) - 1))) ->
  (to_rep((o72[(k + 1)])) = to_rep((o75[k])))))))))))

axiom H44 : ((o83 = perm_reflexive({ elts = o75; rt = o76 }, { elts = o81;
  rt = o82 })) and (in_range4(o83) and ((of_int(o83) = true) -> (is_perm({
  elts = o75; rt = o76 }, { elts = o81; rt = o82 }) = true))))

axiom H45 : (result8 = hr)

axiom H46 : (hr9 = o83)

axiom H47 : ((o85 = x) and in_range5(x))

axiom H48 : ((o84 = y) and in_range5(y))

axiom H49 : ((o86 = remove_swap({ elts = values2; rt = mk(1, 100) }, o84,
  o85)) and (in_range4(o86) and ((of_int(o86) = true) ->
  (bool_eq7((remove(remove({ elts = values2; rt = mk(1, 100) }, o84),
  (o85 - 1))).elts, to_rep1(first((remove(remove({ elts = values2; rt = mk(1,
  100) }, o84), (o85 - 1))).rt)), to_rep1(last((remove(remove({ elts =
  values2; rt = mk(1, 100) }, o84), (o85 - 1))).rt)), (remove(remove({ elts =
  values2; rt = mk(1, 100) }, o85), o84)).elts,
  to_rep1(first((remove(remove({ elts = values2; rt = mk(1, 100) }, o85),
  o84)).rt)), to_rep1(last((remove(remove({ elts = values2; rt = mk(1, 100)
  }, o85), o84)).rt))) = true))))

axiom H50 : (result9 = hr9)

axiom H51 : (hr10 = o86)

axiom H52 : ((o96 = (x - 1)) and in_range5((x - 1)))

axiom H53 : ((o93 = y) and in_range5(y))

axiom H54 : (({ elts = o94; rt = o95 } = remove({ elts = values2; rt = mk(1,
  100) }, o93)) and (dynamic_property(1, 100, to_rep1(first(o95)),
  to_rep1(last(o95))) and ((invariant__({ elts = o94; rt = o95 }) = true) and
  ((to_rep1(last(o95)) = (to_rep1(last(mk(1, 100))) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o93 - 1))) ->
   (to_rep((values2[k])) = to_rep((o94[k]))))) and
  ((forall k:int. ((((o93 + 1) <= k) and (k <= to_rep1(last(mk(1, 100))))) ->
   (to_rep((values2[k])) = to_rep((o94[(k - 1)]))))) and
  (forall k:int. (((o93 <= k) and (k <= (to_rep1(last(mk(1, 100))) - 1))) ->
  (to_rep((values2[(k + 1)])) = to_rep((o94[k])))))))))))

axiom H55 : (({ elts = o97; rt = o98 } = remove({ elts = o94; rt = o95 },
  o96)) and (dynamic_property(1, 100, to_rep1(first(o98)),
  to_rep1(last(o98))) and ((invariant__({ elts = o97; rt = o98 }) = true) and
  ((to_rep1(last(o98)) = (to_rep1(last(o95)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o96 - 1))) ->
   (to_rep((o94[k])) = to_rep((o97[k]))))) and
  ((forall k:int. ((((o96 + 1) <= k) and (k <= to_rep1(last(o95)))) ->
   (to_rep((o94[k])) = to_rep((o97[(k - 1)]))))) and
  (forall k:int. (((o96 <= k) and (k <= (to_rep1(last(o95)) - 1))) ->
  (to_rep((o94[(k + 1)])) = to_rep((o97[k])))))))))))

axiom H56 : ((o90 = y) and in_range5(y))

axiom H57 : ((o87 = x) and in_range5(x))

axiom H58 : (({ elts = o88; rt = o89 } = remove({ elts = values2; rt = mk(1,
  100) }, o87)) and (dynamic_property(1, 100, to_rep1(first(o89)),
  to_rep1(last(o89))) and ((invariant__({ elts = o88; rt = o89 }) = true) and
  ((to_rep1(last(o89)) = (to_rep1(last(mk(1, 100))) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o87 - 1))) ->
   (to_rep((values2[k])) = to_rep((o88[k]))))) and
  ((forall k:int. ((((o87 + 1) <= k) and (k <= to_rep1(last(mk(1, 100))))) ->
   (to_rep((values2[k])) = to_rep((o88[(k - 1)]))))) and
  (forall k:int. (((o87 <= k) and (k <= (to_rep1(last(mk(1, 100))) - 1))) ->
  (to_rep((values2[(k + 1)])) = to_rep((o88[k])))))))))))

axiom H59 : (({ elts = o91; rt = o92 } = remove({ elts = o88; rt = o89 },
  o90)) and (dynamic_property(1, 100, to_rep1(first(o92)),
  to_rep1(last(o92))) and ((invariant__({ elts = o91; rt = o92 }) = true) and
  ((to_rep1(last(o92)) = (to_rep1(last(o89)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o90 - 1))) ->
   (to_rep((o88[k])) = to_rep((o91[k]))))) and
  ((forall k:int. ((((o90 + 1) <= k) and (k <= to_rep1(last(o89)))) ->
   (to_rep((o88[k])) = to_rep((o91[(k - 1)]))))) and
  (forall k:int. (((o90 <= k) and (k <= (to_rep1(last(o89)) - 1))) ->
  (to_rep((o88[(k + 1)])) = to_rep((o91[k])))))))))))

axiom H60 : ((o99 = perm_reflexive({ elts = o91; rt = o92 }, { elts = o97;
  rt = o98 })) and (in_range4(o99) and ((of_int(o99) = true) -> (is_perm({
  elts = o91; rt = o92 }, { elts = o97; rt = o98 }) = true))))

axiom H61 : (result10 = hr10)

axiom H62 : (hr11 = o99)

axiom H63 : ((o115 = (x - 1)) and in_range5((x - 1)))

axiom H64 : ((o112 = y) and in_range5(y))

axiom H65 : (({ elts = o113; rt = o114 } = remove({ elts = values2; rt =
  mk(1, 100) }, o112)) and (dynamic_property(1, 100, to_rep1(first(o114)),
  to_rep1(last(o114))) and ((invariant__({ elts = o113; rt = o114
  }) = true) and ((to_rep1(last(o114)) = (to_rep1(last(mk(1, 100))) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o112 - 1))) ->
   (to_rep((values2[k])) = to_rep((o113[k]))))) and
  ((forall k:int. ((((o112 + 1) <= k) and (k <= to_rep1(last(mk(1,
   100))))) -> (to_rep((values2[k])) = to_rep((o113[(k - 1)]))))) and
  (forall k:int. (((o112 <= k) and (k <= (to_rep1(last(mk(1, 100))) - 1))) ->
  (to_rep((values2[(k + 1)])) = to_rep((o113[k])))))))))))

axiom H66 : (({ elts = o116; rt = o117 } = remove({ elts = o113; rt = o114 },
  o115)) and (dynamic_property(1, 100, to_rep1(first(o117)),
  to_rep1(last(o117))) and ((invariant__({ elts = o116; rt = o117
  }) = true) and ((to_rep1(last(o117)) = (to_rep1(last(o114)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o115 - 1))) ->
   (to_rep((o113[k])) = to_rep((o116[k]))))) and
  ((forall k:int. ((((o115 + 1) <= k) and (k <= to_rep1(last(o114)))) ->
   (to_rep((o113[k])) = to_rep((o116[(k - 1)]))))) and
  (forall k:int. (((o115 <= k) and (k <= (to_rep1(last(o114)) - 1))) ->
  (to_rep((o113[(k + 1)])) = to_rep((o116[k])))))))))))

axiom H67 : ((o109 = y) and in_range5(y))

axiom H68 : ((o106 = x) and in_range5(x))

axiom H69 : (({ elts = o107; rt = o108 } = remove({ elts = values2; rt =
  mk(1, 100) }, o106)) and (dynamic_property(1, 100, to_rep1(first(o108)),
  to_rep1(last(o108))) and ((invariant__({ elts = o107; rt = o108
  }) = true) and ((to_rep1(last(o108)) = (to_rep1(last(mk(1, 100))) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o106 - 1))) ->
   (to_rep((values2[k])) = to_rep((o107[k]))))) and
  ((forall k:int. ((((o106 + 1) <= k) and (k <= to_rep1(last(mk(1,
   100))))) -> (to_rep((values2[k])) = to_rep((o107[(k - 1)]))))) and
  (forall k:int. (((o106 <= k) and (k <= (to_rep1(last(mk(1, 100))) - 1))) ->
  (to_rep((values2[(k + 1)])) = to_rep((o107[k])))))))))))

axiom H70 : (({ elts = o110; rt = o111 } = remove({ elts = o107; rt = o108 },
  o109)) and (dynamic_property(1, 100, to_rep1(first(o111)),
  to_rep1(last(o111))) and ((invariant__({ elts = o110; rt = o111
  }) = true) and ((to_rep1(last(o111)) = (to_rep1(last(o108)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o109 - 1))) ->
   (to_rep((o107[k])) = to_rep((o110[k]))))) and
  ((forall k:int. ((((o109 + 1) <= k) and (k <= to_rep1(last(o108)))) ->
   (to_rep((o107[k])) = to_rep((o110[(k - 1)]))))) and
  (forall k:int. (((o109 <= k) and (k <= (to_rep1(last(o108)) - 1))) ->
  (to_rep((o107[(k + 1)])) = to_rep((o110[k])))))))))))

axiom H71 : ((o103 = y) and in_range5(y))

axiom H72 : ((o100 = x) and in_range5(x))

axiom H73 : (({ elts = o101; rt = o102 } = remove({ elts = init; rt = mk(1,
  100) }, o100)) and (dynamic_property(1, 100, to_rep1(first(o102)),
  to_rep1(last(o102))) and ((invariant__({ elts = o101; rt = o102
  }) = true) and ((to_rep1(last(o102)) = (to_rep1(last(mk(1, 100))) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o100 - 1))) ->
   (to_rep((init[k])) = to_rep((o101[k]))))) and
  ((forall k:int. ((((o100 + 1) <= k) and (k <= to_rep1(last(mk(1,
   100))))) -> (to_rep((init[k])) = to_rep((o101[(k - 1)]))))) and
  (forall k:int. (((o100 <= k) and (k <= (to_rep1(last(mk(1, 100))) - 1))) ->
  (to_rep((init[(k + 1)])) = to_rep((o101[k])))))))))))

axiom H74 : (({ elts = o104; rt = o105 } = remove({ elts = o101; rt = o102 },
  o103)) and (dynamic_property(1, 100, to_rep1(first(o105)),
  to_rep1(last(o105))) and ((invariant__({ elts = o104; rt = o105
  }) = true) and ((to_rep1(last(o105)) = (to_rep1(last(o102)) - 1)) and
  ((forall k:int. (((1 <= k) and (k <= (o103 - 1))) ->
   (to_rep((o101[k])) = to_rep((o104[k]))))) and
  ((forall k:int. ((((o103 + 1) <= k) and (k <= to_rep1(last(o102)))) ->
   (to_rep((o101[k])) = to_rep((o104[(k - 1)]))))) and
  (forall k:int. (((o103 <= k) and (k <= (to_rep1(last(o102)) - 1))) ->
  (to_rep((o101[(k + 1)])) = to_rep((o104[k])))))))))))

axiom H75 : ((o118 = perm_transitive({ elts = o104; rt = o105 }, { elts =
  o110; rt = o111 }, { elts = o116; rt = o117 })) and (in_range4(o118) and
  ((of_int(o118) = true) -> (is_perm({ elts = o104; rt = o105 }, { elts =
  o116; rt = o117 }) = true))))

axiom H76 : (result11 = hr11)

axiom H77 : (hr12 = o118)

axiom H78 : ((o120 = y) and in_range5(y))

 (* File "sort.ads", line 4, characters 0-0 *)
goal WP_parameter_def : (invariant__({ elts = values2; rt = mk(1, 100)
  }) = true)
