(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic concat : (int,character) farray, int, int, (int,character) farray, int,
  int -> (int,character) farray

axiom concat_def :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int.
  (forall i:int [(concat(a, a_first, a_last, b, b_first, b_last)[i])].
  ((((a_first <= i) and (i <= a_last)) -> ((concat(a, a_first, a_last, b,
  b_first, b_last)[i]) = (a[i]))) and ((a_last <  i) -> ((concat(a, a_first,
  a_last, b, b_first, b_last)[i]) = (b[((i - a_last) + (b_first - 1))])))))))

logic singleton : character, int -> (int,character) farray

axiom singleton_def :
  (forall v:character.
  (forall i:int [(singleton(v, i)[i])]. ((singleton(v, i)[i]) = v)))

logic bool_eq5 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def4 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_78:int. ((((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) and
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))) or
  (not ((a__first <= temp___idx_78) and (temp___idx_78 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_78:int. (((a__first <= temp___idx_78) and
  (temp___idx_78 <= a__last)) ->
  (to_rep((a[temp___idx_78])) = to_rep((b[((b__first - a__first) + temp___idx_78)])))))))))

logic compare : (int,character) farray, int, int, (int,character) farray,
  int, int -> int

axiom compare_def_eq :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) = 0) <-> (bool_eq5(a,
  a_first, a_last, b, b_first, b_last) = true))))

axiom compare_def_lt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((compare(a, a_first, a_last, b, b_first, b_last) <  0) <->
  (exists i:int. exists j:int. ((i <= a_last) and ((j <  b_last) and
  ((bool_eq5(a, a_first, i, b, b_first, j) = true) and ((i = a_last) or
  ((i <  a_last) and (to_rep((a[(i + 1)])) <  to_rep((b[(j + 1)]))))))))))))

axiom compare_def_gt :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a_first:int. forall a_last:int. forall b_first:int.
  forall b_last:int [compare(a, a_first, a_last, b, b_first, b_last)].
  ((0 <  compare(a, a_first, a_last, b, b_first, b_last)) <->
  (exists i:int. exists j:int. ((i <= b_last) and ((j <  a_last) and
  ((bool_eq5(a, a_first, j, b, b_first, i) = true) and ((i = b_last) or
  ((i <  b_last) and (to_rep((b[(i + 1)])) <  to_rep((a[(j + 1)]))))))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,character) farray -> int

logic value__component__size : int

logic object__component__size : (int,character) farray -> int

logic value__alignment : int

logic object__alignment : (int,character) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,character) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,character) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,character) farray. (0 <= object__alignment(a)))

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : (int,character) farray

logic dummy4 : t

logic to_string : us_image -> us_t

logic from_string : us_t -> us_image

type string__ref = { string__content : us_t
}

function string__ref___projection(a: string__ref) : us_t =
  (a).string__content

type natural

predicate in_range4(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : natural, natural -> bool

logic dummy5 : natural

type natural__ref = { natural__content : natural
}

function natural__ref___projection(a: natural__ref) : natural =
  (a).natural__content

logic to_rep2 : natural -> int

logic of_rep2 : int -> natural

axiom inversion_axiom2 :
  (forall x:natural [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:natural [to_rep2(x)]. in_range4(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range4(x) ->
  (to_rep2(of_rep2(x)) = x)))

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep

logic bool_eq8 : us_rep, us_rep -> bool

logic value__size1 : int

logic object__size1 : us_rep -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 : (forall a:us_rep. (0 <= object__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:us_rep. (0 <= object__alignment1(a)))

logic user_eq5 : us_rep, us_rep -> bool

logic dummy6 : us_rep

type file__ref = { file__content : us_rep
}

function file__ref___projection(a: file__ref) : us_rep = (a).file__content

type read_status

predicate in_range5(x: int) = ((0 <= x) and (x <= 2))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq6 : read_status, read_status -> bool

logic dummy7 : read_status

type read_status__ref = { read_status__content : read_status
}

function read_status__ref___projection(a: read_status__ref) : read_status =
  (a).read_status__content

logic to_rep3 : read_status -> int

logic of_rep3 : int -> read_status

axiom inversion_axiom3 :
  (forall x:read_status [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 :
  (forall x:read_status [to_rep3(x)]. in_range5(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range5(x) ->
  (to_rep3(of_rep3(x)) = x)))

type us_split_discrs = { rec__file_io__read_result__status : read_status
}

function us_split_discrs___projection(a: us_split_discrs) : read_status =
  (a).rec__file_io__read_result__status

type us_split_discrs__ref = { us_split_discrs__content : us_split_discrs
}

function us_split_discrs__ref___projection(a: us_split_discrs__ref) : us_split_discrs =
  (a).us_split_discrs__content

type us_split_fields = { rec__file_io__read_result__c : character
}

function us_split_fields_C__projection(a: us_split_fields) : character =
  (a).rec__file_io__read_result__c

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___2__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep1 = { us_split_discrs1 : us_split_discrs; us_split_fields1 :
us_split_fields; attr__constrained : bool
}

function us_rep___3__projection(a: us_rep1) : us_split_discrs =
  (a).us_split_discrs1

function us_rep___4__projection(a: us_rep1) : us_split_fields =
  (a).us_split_fields1

function us_rep___5__projection(a: us_rep1) : bool = (a).attr__constrained

predicate file_io__read_result__c__pred(a: us_rep1) =
  (to_rep3(((a).us_split_discrs1).rec__file_io__read_result__status) = 0)

logic bool_eq10 : us_rep1, us_rep1 -> bool

axiom bool_eq_def7 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq10(a, b)].
  ((((to_rep3(((a).us_split_discrs1).rec__file_io__read_result__status) = to_rep3(((b).us_split_discrs1).rec__file_io__read_result__status)) and
  (file_io__read_result__c__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__file_io__read_result__c) = to_rep(((b).us_split_fields1).rec__file_io__read_result__c)))) ->
  (bool_eq10(a, b) = true)) and
  ((not ((to_rep3(((a).us_split_discrs1).rec__file_io__read_result__status) = to_rep3(((b).us_split_discrs1).rec__file_io__read_result__status)) and
  (file_io__read_result__c__pred(a) ->
  (to_rep(((a).us_split_fields1).rec__file_io__read_result__c) = to_rep(((b).us_split_fields1).rec__file_io__read_result__c))))) ->
  (bool_eq10(a, b) = false))))

logic value__size2 : int

logic object__size2 : us_rep1 -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep1 -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:read_status. forall a1:character. forall a2:bool.
  (0 <= object__size2({ us_split_discrs1 = {
  rec__file_io__read_result__status = a }; us_split_fields1 = {
  rec__file_io__read_result__c = a1 }; attr__constrained = a2 })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:read_status. forall a1:character. forall a2:bool.
  (0 <= object__alignment2({ us_split_discrs1 = {
  rec__file_io__read_result__status = a }; us_split_fields1 = {
  rec__file_io__read_result__c = a1 }; attr__constrained = a2 })))

logic file_io__read_result__status__first__bit : int

logic file_io__read_result__status__last__bit : int

logic file_io__read_result__status__position : int

axiom file_io__read_result__status__first__bit_axiom :
  (0 <= file_io__read_result__status__first__bit)

axiom file_io__read_result__status__last__bit_axiom :
  (file_io__read_result__status__first__bit <  file_io__read_result__status__last__bit)

axiom file_io__read_result__status__position_axiom :
  (0 <= file_io__read_result__status__position)

logic file_io__read_result__c__first__bit : int

logic file_io__read_result__c__last__bit : int

logic file_io__read_result__c__position : int

axiom file_io__read_result__c__first__bit_axiom :
  (0 <= file_io__read_result__c__first__bit)

axiom file_io__read_result__c__last__bit_axiom :
  (file_io__read_result__c__first__bit <  file_io__read_result__c__last__bit)

axiom file_io__read_result__c__position_axiom :
  (0 <= file_io__read_result__c__position)

logic user_eq7 : us_rep1, us_rep1 -> bool

logic dummy8 : read_status

logic dummy9 : character

logic dummy10 : bool

type read_result__ref = { read_result__content : us_rep1
}

function read_result__ref___projection(a: read_result__ref) : us_rep1 =
  (a).read_result__content

type capacity_range

predicate in_range6(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq8 : capacity_range, capacity_range -> bool

logic dummy11 : capacity_range

type capacity_range__ref = { capacity_range__content : capacity_range
}

function capacity_range__ref___projection(a: capacity_range__ref) : capacity_range =
  (a).capacity_range__content

type us_main_type1

logic us_main_eq1 : us_main_type1, us_main_type1 -> bool

type us_split_discrs2 = {
rec__unbounded_strings__char_vectors__vector__capacity : capacity_range
}

function us_split_discrs___2__projection(a: us_split_discrs2) : capacity_range =
  (a).rec__unbounded_strings__char_vectors__vector__capacity

type us_split_discrs__ref1 = { us_split_discrs__content1 : us_split_discrs2
}

function us_split_discrs__ref___2__projection(a: us_split_discrs__ref1) : us_split_discrs2 =
  (a).us_split_discrs__content1

type us_split_fields2 = { rec__unbounded_strings__char_vectors__vector :
us_main_type1
}

function us_split_fields_Vector__projection(a: us_split_fields2) : us_main_type1 =
  (a).rec__unbounded_strings__char_vectors__vector

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___3__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep2 = { us_split_discrs3 : us_split_discrs2; us_split_fields3 :
us_split_fields2
}

function us_rep___6__projection(a: us_rep2) : us_split_discrs2 =
  (a).us_split_discrs3

function us_rep___7__projection(a: us_rep2) : us_split_fields2 =
  (a).us_split_fields3

logic to_rep4 : capacity_range -> int

logic of_rep4 : int -> capacity_range

axiom inversion_axiom4 :
  (forall x:capacity_range [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 :
  (forall x:capacity_range [to_rep4(x)]. in_range6(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range6(x) ->
  (to_rep4(of_rep4(x)) = x)))

logic value__size3 : int

logic object__size3 : us_rep2 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep2 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:capacity_range. forall a1:us_main_type1. (0 <= object__size3({
  us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = a };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector = a1 }
  })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:capacity_range. forall a1:us_main_type1.
  (0 <= object__alignment3({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = a };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector = a1 }
  })))

logic unbounded_strings__char_vectors__vector__capacity__first__bit : int

logic unbounded_strings__char_vectors__vector__capacity__last__bit : int

logic unbounded_strings__char_vectors__vector__capacity__position : int

axiom unbounded_strings__char_vectors__vector__capacity__first__bit_axiom :
  (0 <= unbounded_strings__char_vectors__vector__capacity__first__bit)

axiom unbounded_strings__char_vectors__vector__capacity__last__bit_axiom :
  (unbounded_strings__char_vectors__vector__capacity__first__bit <  unbounded_strings__char_vectors__vector__capacity__last__bit)

axiom unbounded_strings__char_vectors__vector__capacity__position_axiom :
  (0 <= unbounded_strings__char_vectors__vector__capacity__position)

logic user_eq9 : us_rep2, us_rep2 -> bool

logic dummy12 : capacity_range

logic dummy13 : us_main_type1

type vector__ref = { vector__content : us_rep2
}

function vector__ref___projection(a: vector__ref) : us_rep2 =
  (a).vector__content

predicate in_range7(rec__unbounded_strings__char_vectors__vector__capacity1: int,
  a: us_rep2) =
  (rec__unbounded_strings__char_vectors__vector__capacity1 = to_rep4(((a).us_split_discrs3).rec__unbounded_strings__char_vectors__vector__capacity))

logic value__size4 : int

logic object__size4 : us_rep2 -> int

logic value__alignment4 : int

logic object__alignment4 : us_rep2 -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:capacity_range. forall a1:us_main_type1. (0 <= object__size4({
  us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = a };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector = a1 }
  })))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:capacity_range. forall a1:us_main_type1.
  (0 <= object__alignment4({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = a };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector = a1 }
  })))

logic unbounded_strings__char_vectors__vector__capacity__first__bit1 : int

logic unbounded_strings__char_vectors__vector__capacity__last__bit1 : int

logic unbounded_strings__char_vectors__vector__capacity__position1 : int

axiom unbounded_strings__char_vectors__vector__capacity__first__bit_axiom1 :
  (0 <= unbounded_strings__char_vectors__vector__capacity__first__bit1)

axiom unbounded_strings__char_vectors__vector__capacity__last__bit_axiom1 :
  (unbounded_strings__char_vectors__vector__capacity__first__bit1 <  unbounded_strings__char_vectors__vector__capacity__last__bit1)

axiom unbounded_strings__char_vectors__vector__capacity__position_axiom1 :
  (0 <= unbounded_strings__char_vectors__vector__capacity__position1)

logic user_eq10 : us_rep2, us_rep2 -> bool

logic dummy14 : capacity_range

logic dummy15 : us_main_type1

type unbounded_string__ref = { unbounded_string__content : us_rep2
}

function unbounded_string__ref___projection(a: unbounded_string__ref) : us_rep2 =
  (a).unbounded_string__content

logic is_empty : us_rep2 -> bool

logic is_empty__function_guard : bool, us_rep2 -> prop

logic length1 : us_rep2 -> int

logic length__function_guard : int, us_rep2 -> prop

axiom length__post_axiom :
  (forall s:capacity_range. forall s1:us_main_type1 [length1({
  us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector = s1 }
  })]. in_range4(length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector = s1 }
  })))

logic to_string1 : us_rep2 -> us_t

logic to_string__function_guard : us_t, us_rep2 -> prop

axiom to_string__post_axiom :
  (forall s:capacity_range. forall s1:us_main_type1 [to_string1({
  us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector = s1 }
  })]. (((length(to_string1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector = s1 }
  })) = length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector = s1 }
  })) and (to_rep1(first((to_string1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector = s1 }
  })).rt)) = 1)) and dynamic_property(1, 2147483647,
  to_rep1(first((to_string1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector = s1 }
  })).rt)), to_rep1(last((to_string1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector = s1 }
  })).rt)))))

type name_id

predicate in_range8(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq12 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq11 : name_id, name_id -> bool

logic dummy16 : name_id

type name_id__ref = { name_id__content : name_id
}

function name_id__ref___projection(a: name_id__ref) : name_id =
  (a).name_id__content

type token_kind

predicate in_range9(x: int) = ((0 <= x) and (x <= 8))

logic bool_eq13 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq12 : token_kind, token_kind -> bool

logic dummy17 : token_kind

type token_kind__ref = { token_kind__content : token_kind
}

function token_kind__ref___projection(a: token_kind__ref) : token_kind =
  (a).token_kind__content

logic to_rep5 : token_kind -> int

logic of_rep5 : int -> token_kind

axiom inversion_axiom5 :
  (forall x:token_kind [to_rep5(x)]. (of_rep5(to_rep5(x)) = x))

axiom range_axiom5 :
  (forall x:token_kind [to_rep5(x)]. in_range9(to_rep5(x)))

axiom coerce_axiom5 :
  (forall x:int [to_rep5(of_rep5(x))]. (in_range9(x) ->
  (to_rep5(of_rep5(x)) = x)))

type valued_tokens

predicate in_range10(x: int) = ((3 <= x) and (x <= 8))

logic bool_eq14 : int, int -> bool

axiom bool_eq_def11 :
  (forall x:int. forall y:int [bool_eq14(x, y)]. (((x = y) -> (bool_eq14(x,
  y) = true)) and ((not (x = y)) -> (bool_eq14(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq13 : valued_tokens, valued_tokens -> bool

logic dummy18 : valued_tokens

type valued_tokens__ref = { valued_tokens__content : valued_tokens
}

function valued_tokens__ref___projection(a: valued_tokens__ref) : valued_tokens =
  (a).valued_tokens__content

logic to_rep6 : name_id -> int

logic of_rep6 : int -> name_id

axiom inversion_axiom6 :
  (forall x:name_id [to_rep6(x)]. (of_rep6(to_rep6(x)) = x))

axiom range_axiom6 : (forall x:name_id [to_rep6(x)]. in_range8(to_rep6(x)))

axiom coerce_axiom6 :
  (forall x:int [to_rep6(of_rep6(x))]. (in_range8(x) ->
  (to_rep6(of_rep6(x)) = x)))

type us_split_discrs4 = { rec__lexer__token__kind : token_kind
}

function us_split_discrs___3__projection(a: us_split_discrs4) : token_kind =
  (a).rec__lexer__token__kind

type us_split_discrs__ref2 = { us_split_discrs__content2 : us_split_discrs4
}

function us_split_discrs__ref___3__projection(a: us_split_discrs__ref2) : us_split_discrs4 =
  (a).us_split_discrs__content2

type us_split_fields4 = { rec__lexer__token__line : natural;
rec__lexer__token__col : natural; rec__lexer__token__length : natural;
rec__lexer__token__value : name_id
}

function us_split_fields_Line__projection(a: us_split_fields4) : natural =
  (a).rec__lexer__token__line

function us_split_fields_Col__projection(a: us_split_fields4) : natural =
  (a).rec__lexer__token__col

function us_split_fields_Length__projection(a: us_split_fields4) : natural =
  (a).rec__lexer__token__length

function us_split_fields_Value__projection(a: us_split_fields4) : name_id =
  (a).rec__lexer__token__value

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___4__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep3 = { us_split_discrs5 : us_split_discrs4; us_split_fields5 :
us_split_fields4; attr__constrained1 : bool
}

function us_rep___8__projection(a: us_rep3) : us_split_discrs4 =
  (a).us_split_discrs5

function us_rep___9__projection(a: us_rep3) : us_split_fields4 =
  (a).us_split_fields5

function us_rep___10__projection(a: us_rep3) : bool = (a).attr__constrained1

predicate lexer__token__value__pred(a: us_rep3) =
  ((3 <= to_rep5(((a).us_split_discrs5).rec__lexer__token__kind)) and
  (to_rep5(((a).us_split_discrs5).rec__lexer__token__kind) <= 8))

logic bool_eq15 : us_rep3, us_rep3 -> bool

axiom bool_eq_def12 :
  (forall a:us_rep3. forall b:us_rep3 [bool_eq15(a, b)].
  ((((to_rep5(((a).us_split_discrs5).rec__lexer__token__kind) = to_rep5(((b).us_split_discrs5).rec__lexer__token__kind)) and
  ((((to_rep2(((a).us_split_fields5).rec__lexer__token__line) = to_rep2(((b).us_split_fields5).rec__lexer__token__line)) and
  (to_rep2(((a).us_split_fields5).rec__lexer__token__col) = to_rep2(((b).us_split_fields5).rec__lexer__token__col))) and
  (to_rep2(((a).us_split_fields5).rec__lexer__token__length) = to_rep2(((b).us_split_fields5).rec__lexer__token__length))) and
  (lexer__token__value__pred(a) ->
  (to_rep6(((a).us_split_fields5).rec__lexer__token__value) = to_rep6(((b).us_split_fields5).rec__lexer__token__value))))) ->
  (bool_eq15(a, b) = true)) and
  ((not ((to_rep5(((a).us_split_discrs5).rec__lexer__token__kind) = to_rep5(((b).us_split_discrs5).rec__lexer__token__kind)) and
  ((((to_rep2(((a).us_split_fields5).rec__lexer__token__line) = to_rep2(((b).us_split_fields5).rec__lexer__token__line)) and
  (to_rep2(((a).us_split_fields5).rec__lexer__token__col) = to_rep2(((b).us_split_fields5).rec__lexer__token__col))) and
  (to_rep2(((a).us_split_fields5).rec__lexer__token__length) = to_rep2(((b).us_split_fields5).rec__lexer__token__length))) and
  (lexer__token__value__pred(a) ->
  (to_rep6(((a).us_split_fields5).rec__lexer__token__value) = to_rep6(((b).us_split_fields5).rec__lexer__token__value)))))) ->
  (bool_eq15(a, b) = false))))

logic value__size5 : int

logic object__size5 : us_rep3 -> int

logic value__alignment5 : int

logic object__alignment5 : us_rep3 -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 :
  (forall a:token_kind. forall a1:natural. forall a2:natural.
  forall a3:natural. forall a4:name_id. forall a5:bool. (0 <= object__size5({
  us_split_discrs5 = { rec__lexer__token__kind = a }; us_split_fields5 = {
  rec__lexer__token__line = a1; rec__lexer__token__col = a2;
  rec__lexer__token__length = a3; rec__lexer__token__value = a4 };
  attr__constrained1 = a5 })))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:token_kind. forall a1:natural. forall a2:natural.
  forall a3:natural. forall a4:name_id. forall a5:bool.
  (0 <= object__alignment5({ us_split_discrs5 = { rec__lexer__token__kind = a
  }; us_split_fields5 = { rec__lexer__token__line = a1;
  rec__lexer__token__col = a2; rec__lexer__token__length = a3;
  rec__lexer__token__value = a4 }; attr__constrained1 = a5 })))

logic lexer__token__kind__first__bit : int

logic lexer__token__kind__last__bit : int

logic lexer__token__kind__position : int

axiom lexer__token__kind__first__bit_axiom :
  (0 <= lexer__token__kind__first__bit)

axiom lexer__token__kind__last__bit_axiom :
  (lexer__token__kind__first__bit <  lexer__token__kind__last__bit)

axiom lexer__token__kind__position_axiom :
  (0 <= lexer__token__kind__position)

logic lexer__token__line__first__bit : int

logic lexer__token__line__last__bit : int

logic lexer__token__line__position : int

axiom lexer__token__line__first__bit_axiom :
  (0 <= lexer__token__line__first__bit)

axiom lexer__token__line__last__bit_axiom :
  (lexer__token__line__first__bit <  lexer__token__line__last__bit)

axiom lexer__token__line__position_axiom :
  (0 <= lexer__token__line__position)

logic lexer__token__col__first__bit : int

logic lexer__token__col__last__bit : int

logic lexer__token__col__position : int

axiom lexer__token__col__first__bit_axiom :
  (0 <= lexer__token__col__first__bit)

axiom lexer__token__col__last__bit_axiom :
  (lexer__token__col__first__bit <  lexer__token__col__last__bit)

axiom lexer__token__col__position_axiom : (0 <= lexer__token__col__position)

logic lexer__token__length__first__bit : int

logic lexer__token__length__last__bit : int

logic lexer__token__length__position : int

axiom lexer__token__length__first__bit_axiom :
  (0 <= lexer__token__length__first__bit)

axiom lexer__token__length__last__bit_axiom :
  (lexer__token__length__first__bit <  lexer__token__length__last__bit)

axiom lexer__token__length__position_axiom :
  (0 <= lexer__token__length__position)

logic lexer__token__value__first__bit : int

logic lexer__token__value__last__bit : int

logic lexer__token__value__position : int

axiom lexer__token__value__first__bit_axiom :
  (0 <= lexer__token__value__first__bit)

axiom lexer__token__value__last__bit_axiom :
  (lexer__token__value__first__bit <  lexer__token__value__last__bit)

axiom lexer__token__value__position_axiom :
  (0 <= lexer__token__value__position)

logic user_eq14 : us_rep3, us_rep3 -> bool

logic dummy19 : token_kind

logic dummy20 : natural

logic dummy21 : natural

logic dummy22 : natural

logic dummy23 : name_id

logic dummy24 : bool

type token__ref = { token__content : us_rep3
}

function token__ref___projection(a: token__ref) : us_rep3 =
  (a).token__content

logic current_read__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS : int

logic next_read__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS1 : int

logic invariant__ : us_private, us_split_fields, us_split_discrs,
  us_split_fields, us_split_discrs -> bool

logic invariant____function_guard : bool, us_private, us_split_fields,
  us_split_discrs, us_split_fields, us_split_discrs -> prop

logic invariant__1 : us_private -> bool

logic invariant____function_guard1 : bool, us_private -> prop

logic local_invariant : us_split_fields, us_split_discrs, us_split_fields,
  us_split_discrs -> bool

logic local_invariant__function_guard : bool, us_split_fields,
  us_split_discrs, us_split_fields, us_split_discrs -> prop

axiom invariant____post_axiom : true

axiom invariant____def_axiom :
  (forall names__name_table:us_private.
  (forall lexer__current_read__fields:character.
  forall lexer__next_read__fields:character.
  (forall lexer__current_read__discrs:read_status.
  forall lexer__next_read__discrs:read_status [invariant__(names__name_table,
  { rec__file_io__read_result__c = lexer__current_read__fields }, {
  rec__file_io__read_result__status = lexer__current_read__discrs }, {
  rec__file_io__read_result__c = lexer__next_read__fields }, {
  rec__file_io__read_result__status = lexer__next_read__discrs })].
  ((invariant__(names__name_table, { rec__file_io__read_result__c =
  lexer__current_read__fields }, { rec__file_io__read_result__status =
  lexer__current_read__discrs }, { rec__file_io__read_result__c =
  lexer__next_read__fields }, { rec__file_io__read_result__status =
  lexer__next_read__discrs }) = true) <->
  ((invariant__1(names__name_table) = true) and (local_invariant({
  rec__file_io__read_result__c = lexer__current_read__fields }, {
  rec__file_io__read_result__status = lexer__current_read__discrs }, {
  rec__file_io__read_result__c = lexer__next_read__fields }, {
  rec__file_io__read_result__status = lexer__next_read__discrs }) = true))))))

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic t__attr__constrained : bool

logic attr__ATTRIBUTE_ADDRESS7 : int

logic s__split_discrs : capacity_range

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

type parse_state

predicate in_range11(x: int) = ((0 <= x) and (x <= 9))

logic bool_eq16 : int, int -> bool

axiom bool_eq_def13 :
  (forall x:int. forall y:int [bool_eq16(x, y)]. (((x = y) -> (bool_eq16(x,
  y) = true)) and ((not (x = y)) -> (bool_eq16(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq15 : parse_state, parse_state -> bool

logic dummy25 : parse_state

type parse_state__ref = { parse_state__content : parse_state
}

function parse_state__ref___projection(a: parse_state__ref) : parse_state =
  (a).parse_state__content

type terminal_states

predicate in_range12(x: int) = ((0 <= x) and (x <= 9))

logic bool_eq17 : int, int -> bool

axiom bool_eq_def14 :
  (forall x:int. forall y:int [bool_eq17(x, y)]. (((x = y) -> (bool_eq17(x,
  y) = true)) and ((not (x = y)) -> (bool_eq17(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq16 : terminal_states, terminal_states -> bool

logic dummy26 : terminal_states

type terminal_states__ref = { terminal_states__content : terminal_states
}

function terminal_states__ref___projection(a: terminal_states__ref) : terminal_states =
  (a).terminal_states__content

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic r54b : int

logic attr__ATTRIBUTE_ADDRESS14 : int

predicate in_range13(rec__lexer__token__kind1: int, a: us_rep3) =
  (rec__lexer__token__kind1 = to_rep5(((a).us_split_discrs5).rec__lexer__token__kind))

logic value__size6 : int

logic object__size6 : us_rep3 -> int

logic value__alignment6 : int

logic object__alignment6 : us_rep3 -> int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 :
  (forall a:token_kind. forall a1:natural. forall a2:natural.
  forall a3:natural. forall a4:name_id. forall a5:bool. (0 <= object__size6({
  us_split_discrs5 = { rec__lexer__token__kind = a }; us_split_fields5 = {
  rec__lexer__token__line = a1; rec__lexer__token__col = a2;
  rec__lexer__token__length = a3; rec__lexer__token__value = a4 };
  attr__constrained1 = a5 })))

axiom value__alignment_axiom6 : (0 <= value__alignment6)

axiom object__alignment_axiom6 :
  (forall a:token_kind. forall a1:natural. forall a2:natural.
  forall a3:natural. forall a4:name_id. forall a5:bool.
  (0 <= object__alignment6({ us_split_discrs5 = { rec__lexer__token__kind = a
  }; us_split_fields5 = { rec__lexer__token__line = a1;
  rec__lexer__token__col = a2; rec__lexer__token__length = a3;
  rec__lexer__token__value = a4 }; attr__constrained1 = a5 })))

logic lexer__token__kind__first__bit1 : int

logic lexer__token__kind__last__bit1 : int

logic lexer__token__kind__position1 : int

axiom lexer__token__kind__first__bit_axiom1 :
  (0 <= lexer__token__kind__first__bit1)

axiom lexer__token__kind__last__bit_axiom1 :
  (lexer__token__kind__first__bit1 <  lexer__token__kind__last__bit1)

axiom lexer__token__kind__position_axiom1 :
  (0 <= lexer__token__kind__position1)

logic lexer__token__value__first__bit1 : int

logic lexer__token__value__last__bit1 : int

logic lexer__token__value__position1 : int

axiom lexer__token__value__first__bit_axiom1 :
  (0 <= lexer__token__value__first__bit1)

axiom lexer__token__value__last__bit_axiom1 :
  (lexer__token__value__first__bit1 <  lexer__token__value__last__bit1)

axiom lexer__token__value__position_axiom1 :
  (0 <= lexer__token__value__position1)

logic lexer__token__line__first__bit1 : int

logic lexer__token__line__last__bit1 : int

logic lexer__token__line__position1 : int

axiom lexer__token__line__first__bit_axiom1 :
  (0 <= lexer__token__line__first__bit1)

axiom lexer__token__line__last__bit_axiom1 :
  (lexer__token__line__first__bit1 <  lexer__token__line__last__bit1)

axiom lexer__token__line__position_axiom1 :
  (0 <= lexer__token__line__position1)

logic lexer__token__col__first__bit1 : int

logic lexer__token__col__last__bit1 : int

logic lexer__token__col__position1 : int

axiom lexer__token__col__first__bit_axiom1 :
  (0 <= lexer__token__col__first__bit1)

axiom lexer__token__col__last__bit_axiom1 :
  (lexer__token__col__first__bit1 <  lexer__token__col__last__bit1)

axiom lexer__token__col__position_axiom1 :
  (0 <= lexer__token__col__position1)

logic lexer__token__length__first__bit1 : int

logic lexer__token__length__last__bit1 : int

logic lexer__token__length__position1 : int

axiom lexer__token__length__first__bit_axiom1 :
  (0 <= lexer__token__length__first__bit1)

axiom lexer__token__length__last__bit_axiom1 :
  (lexer__token__length__first__bit1 <  lexer__token__length__last__bit1)

axiom lexer__token__length__position_axiom1 :
  (0 <= lexer__token__length__position1)

logic user_eq17 : us_rep3, us_rep3 -> bool

logic dummy27 : token_kind

logic dummy28 : natural

logic dummy29 : natural

logic dummy30 : natural

logic dummy31 : name_id

logic dummy32 : bool

type t55b__ref = { t55b__content : us_rep3
}

function t55b__ref___projection(a: t55b__ref) : us_rep3 = (a).t55b__content

logic tmp : (int,character) farray

logic tmp1 : t

logic attr__ATTRIBUTE_ADDRESS15 : int

logic attr__ATTRIBUTE_ADDRESS16 : int

predicate dynamic_property1(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq18 : int, int -> bool

axiom bool_eq_def15 :
  (forall x:int. forall y:int [bool_eq18(x, y)]. (((x = y) -> (bool_eq18(x,
  y) = true)) and ((not (x = y)) -> (bool_eq18(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq18 : integer, integer -> bool

logic dummy33 : integer

type t63b__ref = { t63b__content : integer
}

function t63b__ref___projection(a: t63b__ref) : integer = (a).t63b__content

type t1

logic first2 : t1 -> integer

logic last2 : t1 -> integer

logic mk1 : int, int -> t1

axiom mk_def1 :
  (forall f:int. forall l:int [mk1(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first2(mk1(f, l))) = f) and (to_rep1(last2(mk1(f, l))) = l)))))

predicate dynamic_property2(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (dynamic_property1(range_first, range_last, low) and
  dynamic_property1(range_first, range_last, high)))))

type us_t1 = { elts1 : (int,character) farray; rt1 : t1
}

function to_array1(a: us_t1) : (int,character) farray = (a).elts1

function of_array1(a: (int,character) farray, f: int, l: int) : us_t1 = {
  elts1 = a; rt1 = mk1(f, l) }

function first3(a: us_t1) : int = to_rep1(first2((a).rt1))

function last3(a: us_t1) : int = to_rep1(last2((a).rt1))

logic length2 : us_t1 -> int

axiom length_def1 :
  (forall a:us_t1 [length2(a)]. (((first3(a) <= last3(a)) ->
  (length2(a) = ((last3(a) - first3(a)) + 1))) and
  ((not (first3(a) <= last3(a))) -> (length2(a) = 0))))

logic value__size7 : int

logic object__size7 : (int,character) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,character) farray -> int

logic value__alignment7 : int

logic object__alignment7 : (int,character) farray -> int

axiom value__size_axiom7 : (0 <= value__size7)

axiom object__size_axiom7 :
  (forall a:(int,character) farray. (0 <= object__size7(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,character) farray. (0 <= object__component__size1(a)))

axiom value__alignment_axiom7 : (0 <= value__alignment7)

axiom object__alignment_axiom7 :
  (forall a:(int,character) farray. (0 <= object__alignment7(a)))

function bool_eq19(x: us_t1, y: us_t1) : bool = bool_eq5((x).elts1,
  to_rep1(first2((x).rt1)), to_rep1(last2((x).rt1)), (y).elts1,
  to_rep1(first2((y).rt1)), to_rep1(last2((y).rt1)))

logic user_eq19 : us_t1, us_t1 -> bool

logic dummy34 : (int,character) farray

logic dummy35 : t1

type t64b__ref = { t64b__content : us_t1
}

function t64b__ref___projection(a: t64b__ref) : us_t1 = (a).t64b__content

predicate dynamic_property3(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq20 : int, int -> bool

axiom bool_eq_def16 :
  (forall x:int. forall y:int [bool_eq20(x, y)]. (((x = y) -> (bool_eq20(x,
  y) = true)) and ((not (x = y)) -> (bool_eq20(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE13 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check13 : us_image -> prop

logic attr__ATTRIBUTE_VALUE13 : us_image -> int

logic user_eq20 : integer, integer -> bool

logic dummy36 : integer

type t66b__ref = { t66b__content : integer
}

function t66b__ref___projection(a: t66b__ref) : integer = (a).t66b__content

type t2

logic first4 : t2 -> integer

logic last4 : t2 -> integer

logic mk2 : int, int -> t2

axiom mk_def2 :
  (forall f:int. forall l:int [mk2(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first4(mk2(f, l))) = f) and (to_rep1(last4(mk2(f, l))) = l)))))

predicate dynamic_property4(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (dynamic_property3(range_first, range_last, low) and
  dynamic_property3(range_first, range_last, high)))))

type us_t2 = { elts2 : (int,character) farray; rt2 : t2
}

function to_array2(a: us_t2) : (int,character) farray = (a).elts2

function of_array2(a: (int,character) farray, f: int, l: int) : us_t2 = {
  elts2 = a; rt2 = mk2(f, l) }

function first5(a: us_t2) : int = to_rep1(first4((a).rt2))

function last5(a: us_t2) : int = to_rep1(last4((a).rt2))

logic length3 : us_t2 -> int

axiom length_def2 :
  (forall a:us_t2 [length3(a)]. (((first5(a) <= last5(a)) ->
  (length3(a) = ((last5(a) - first5(a)) + 1))) and
  ((not (first5(a) <= last5(a))) -> (length3(a) = 0))))

logic value__size8 : int

logic object__size8 : (int,character) farray -> int

logic value__component__size2 : int

logic object__component__size2 : (int,character) farray -> int

logic value__alignment8 : int

logic object__alignment8 : (int,character) farray -> int

axiom value__size_axiom8 : (0 <= value__size8)

axiom object__size_axiom8 :
  (forall a:(int,character) farray. (0 <= object__size8(a)))

axiom value__component__size_axiom2 : (0 <= value__component__size2)

axiom object__component__size_axiom2 :
  (forall a:(int,character) farray. (0 <= object__component__size2(a)))

axiom value__alignment_axiom8 : (0 <= value__alignment8)

axiom object__alignment_axiom8 :
  (forall a:(int,character) farray. (0 <= object__alignment8(a)))

function bool_eq21(x: us_t2, y: us_t2) : bool = bool_eq5((x).elts2,
  to_rep1(first4((x).rt2)), to_rep1(last4((x).rt2)), (y).elts2,
  to_rep1(first4((y).rt2)), to_rep1(last4((y).rt2)))

logic user_eq21 : us_t2, us_t2 -> bool

logic dummy37 : (int,character) farray

logic dummy38 : t2

type t67b__ref = { t67b__content : us_t2
}

function t67b__ref___projection(a: t67b__ref) : us_t2 = (a).t67b__content

predicate dynamic_property5(first_int: int, last_int: int, x: int) =
  ((first_int <= x) and (x <= last_int))

logic bool_eq22 : int, int -> bool

axiom bool_eq_def17 :
  (forall x:int. forall y:int [bool_eq22(x, y)]. (((x = y) -> (bool_eq22(x,
  y) = true)) and ((not (x = y)) -> (bool_eq22(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE14 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check14 : us_image -> prop

logic attr__ATTRIBUTE_VALUE14 : us_image -> int

logic user_eq22 : integer, integer -> bool

logic dummy39 : integer

type t70b__ref = { t70b__content : integer
}

function t70b__ref___projection(a: t70b__ref) : integer = (a).t70b__content

type t3

logic first6 : t3 -> integer

logic last6 : t3 -> integer

logic mk3 : int, int -> t3

axiom mk_def3 :
  (forall f:int. forall l:int [mk3(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first6(mk3(f, l))) = f) and (to_rep1(last6(mk3(f, l))) = l)))))

predicate dynamic_property6(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (dynamic_property5(range_first, range_last, low) and
  dynamic_property5(range_first, range_last, high)))))

type us_t3 = { elts3 : (int,character) farray; rt3 : t3
}

function to_array3(a: us_t3) : (int,character) farray = (a).elts3

function of_array3(a: (int,character) farray, f: int, l: int) : us_t3 = {
  elts3 = a; rt3 = mk3(f, l) }

function first7(a: us_t3) : int = to_rep1(first6((a).rt3))

function last7(a: us_t3) : int = to_rep1(last6((a).rt3))

logic length4 : us_t3 -> int

axiom length_def3 :
  (forall a:us_t3 [length4(a)]. (((first7(a) <= last7(a)) ->
  (length4(a) = ((last7(a) - first7(a)) + 1))) and
  ((not (first7(a) <= last7(a))) -> (length4(a) = 0))))

logic value__size9 : int

logic object__size9 : (int,character) farray -> int

logic value__component__size3 : int

logic object__component__size3 : (int,character) farray -> int

logic value__alignment9 : int

logic object__alignment9 : (int,character) farray -> int

axiom value__size_axiom9 : (0 <= value__size9)

axiom object__size_axiom9 :
  (forall a:(int,character) farray. (0 <= object__size9(a)))

axiom value__component__size_axiom3 : (0 <= value__component__size3)

axiom object__component__size_axiom3 :
  (forall a:(int,character) farray. (0 <= object__component__size3(a)))

axiom value__alignment_axiom9 : (0 <= value__alignment9)

axiom object__alignment_axiom9 :
  (forall a:(int,character) farray. (0 <= object__alignment9(a)))

function bool_eq23(x: us_t3, y: us_t3) : bool = bool_eq5((x).elts3,
  to_rep1(first6((x).rt3)), to_rep1(last6((x).rt3)), (y).elts3,
  to_rep1(first6((y).rt3)), to_rep1(last6((y).rt3)))

logic user_eq23 : us_t3, us_t3 -> bool

logic dummy40 : (int,character) farray

logic dummy41 : t3

type t71b__ref = { t71b__content : us_t3
}

function t71b__ref___projection(a: t71b__ref) : us_t3 = (a).t71b__content

logic str__first : integer

logic str__last : integer

logic attr__ATTRIBUTE_ADDRESS17 : int

logic temp___String_Literal_834 : unit -> (int,character) farray

axiom temp___String_Literal_834__def_axiom :
  (((((((((((((((((((to_rep((temp___String_Literal_834(void)[1])) = 105) and
  (to_rep((temp___String_Literal_834(void)[2])) = 110)) and
  (to_rep((temp___String_Literal_834(void)[3])) = 118)) and
  (to_rep((temp___String_Literal_834(void)[4])) = 97)) and
  (to_rep((temp___String_Literal_834(void)[5])) = 108)) and
  (to_rep((temp___String_Literal_834(void)[6])) = 105)) and
  (to_rep((temp___String_Literal_834(void)[7])) = 100)) and
  (to_rep((temp___String_Literal_834(void)[8])) = 32)) and
  (to_rep((temp___String_Literal_834(void)[9])) = 99)) and
  (to_rep((temp___String_Literal_834(void)[10])) = 104)) and
  (to_rep((temp___String_Literal_834(void)[11])) = 97)) and
  (to_rep((temp___String_Literal_834(void)[12])) = 114)) and
  (to_rep((temp___String_Literal_834(void)[13])) = 97)) and
  (to_rep((temp___String_Literal_834(void)[14])) = 99)) and
  (to_rep((temp___String_Literal_834(void)[15])) = 116)) and
  (to_rep((temp___String_Literal_834(void)[16])) = 101)) and
  (to_rep((temp___String_Literal_834(void)[17])) = 114)) and
  (to_rep((temp___String_Literal_834(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_834(void)[19])) = 39))

logic temp___String_Literal_836 : unit -> (int,character) farray

axiom temp___String_Literal_836__def_axiom :
  (to_rep((temp___String_Literal_836(void)[1])) = 39)

logic temp___String_Literal_852 : unit -> (int,character) farray

axiom temp___String_Literal_852__def_axiom :
  ((((((((((((((((((((((((((((((((((to_rep((temp___String_Literal_852(void)[1])) = 105) and
  (to_rep((temp___String_Literal_852(void)[2])) = 110)) and
  (to_rep((temp___String_Literal_852(void)[3])) = 118)) and
  (to_rep((temp___String_Literal_852(void)[4])) = 97)) and
  (to_rep((temp___String_Literal_852(void)[5])) = 108)) and
  (to_rep((temp___String_Literal_852(void)[6])) = 105)) and
  (to_rep((temp___String_Literal_852(void)[7])) = 100)) and
  (to_rep((temp___String_Literal_852(void)[8])) = 32)) and
  (to_rep((temp___String_Literal_852(void)[9])) = 102)) and
  (to_rep((temp___String_Literal_852(void)[10])) = 111)) and
  (to_rep((temp___String_Literal_852(void)[11])) = 114)) and
  (to_rep((temp___String_Literal_852(void)[12])) = 109)) and
  (to_rep((temp___String_Literal_852(void)[13])) = 97)) and
  (to_rep((temp___String_Literal_852(void)[14])) = 116)) and
  (to_rep((temp___String_Literal_852(void)[15])) = 44)) and
  (to_rep((temp___String_Literal_852(void)[16])) = 32)) and
  (to_rep((temp___String_Literal_852(void)[17])) = 109)) and
  (to_rep((temp___String_Literal_852(void)[18])) = 117)) and
  (to_rep((temp___String_Literal_852(void)[19])) = 115)) and
  (to_rep((temp___String_Literal_852(void)[20])) = 116)) and
  (to_rep((temp___String_Literal_852(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_852(void)[22])) = 98)) and
  (to_rep((temp___String_Literal_852(void)[23])) = 101)) and
  (to_rep((temp___String_Literal_852(void)[24])) = 32)) and
  (to_rep((temp___String_Literal_852(void)[25])) = 39)) and
  (to_rep((temp___String_Literal_852(void)[26])) = 98)) and
  (to_rep((temp___String_Literal_852(void)[27])) = 39)) and
  (to_rep((temp___String_Literal_852(void)[28])) = 32)) and
  (to_rep((temp___String_Literal_852(void)[29])) = 111)) and
  (to_rep((temp___String_Literal_852(void)[30])) = 114)) and
  (to_rep((temp___String_Literal_852(void)[31])) = 32)) and
  (to_rep((temp___String_Literal_852(void)[32])) = 39)) and
  (to_rep((temp___String_Literal_852(void)[33])) = 120)) and
  (to_rep((temp___String_Literal_852(void)[34])) = 39))

logic temp___String_Literal_870 : unit -> (int,character) farray

axiom temp___String_Literal_870__def_axiom : true

logic temp___String_Literal_875 : unit -> (int,character) farray

axiom temp___String_Literal_875__def_axiom :
  (((((((((((((((((((((((((((((((to_rep((temp___String_Literal_875(void)[1])) = 113) and
  (to_rep((temp___String_Literal_875(void)[2])) = 117)) and
  (to_rep((temp___String_Literal_875(void)[3])) = 111)) and
  (to_rep((temp___String_Literal_875(void)[4])) = 116)) and
  (to_rep((temp___String_Literal_875(void)[5])) = 101)) and
  (to_rep((temp___String_Literal_875(void)[6])) = 100)) and
  (to_rep((temp___String_Literal_875(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_875(void)[8])) = 115)) and
  (to_rep((temp___String_Literal_875(void)[9])) = 121)) and
  (to_rep((temp___String_Literal_875(void)[10])) = 109)) and
  (to_rep((temp___String_Literal_875(void)[11])) = 98)) and
  (to_rep((temp___String_Literal_875(void)[12])) = 111)) and
  (to_rep((temp___String_Literal_875(void)[13])) = 108)) and
  (to_rep((temp___String_Literal_875(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_875(void)[15])) = 105)) and
  (to_rep((temp___String_Literal_875(void)[16])) = 115)) and
  (to_rep((temp___String_Literal_875(void)[17])) = 32)) and
  (to_rep((temp___String_Literal_875(void)[18])) = 110)) and
  (to_rep((temp___String_Literal_875(void)[19])) = 111)) and
  (to_rep((temp___String_Literal_875(void)[20])) = 116)) and
  (to_rep((temp___String_Literal_875(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_875(void)[22])) = 116)) and
  (to_rep((temp___String_Literal_875(void)[23])) = 101)) and
  (to_rep((temp___String_Literal_875(void)[24])) = 114)) and
  (to_rep((temp___String_Literal_875(void)[25])) = 109)) and
  (to_rep((temp___String_Literal_875(void)[26])) = 105)) and
  (to_rep((temp___String_Literal_875(void)[27])) = 110)) and
  (to_rep((temp___String_Literal_875(void)[28])) = 97)) and
  (to_rep((temp___String_Literal_875(void)[29])) = 116)) and
  (to_rep((temp___String_Literal_875(void)[30])) = 101)) and
  (to_rep((temp___String_Literal_875(void)[31])) = 100))

logic temp___String_Literal_876 : unit -> (int,character) farray

axiom temp___String_Literal_876__def_axiom :
  ((((((((((((((((((((((((((((((((((((to_rep((temp___String_Literal_876(void)[1])) = 98) and
  (to_rep((temp___String_Literal_876(void)[2])) = 105)) and
  (to_rep((temp___String_Literal_876(void)[3])) = 110)) and
  (to_rep((temp___String_Literal_876(void)[4])) = 97)) and
  (to_rep((temp___String_Literal_876(void)[5])) = 114)) and
  (to_rep((temp___String_Literal_876(void)[6])) = 121)) and
  (to_rep((temp___String_Literal_876(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_876(void)[8])) = 111)) and
  (to_rep((temp___String_Literal_876(void)[9])) = 114)) and
  (to_rep((temp___String_Literal_876(void)[10])) = 32)) and
  (to_rep((temp___String_Literal_876(void)[11])) = 104)) and
  (to_rep((temp___String_Literal_876(void)[12])) = 101)) and
  (to_rep((temp___String_Literal_876(void)[13])) = 120)) and
  (to_rep((temp___String_Literal_876(void)[14])) = 32)) and
  (to_rep((temp___String_Literal_876(void)[15])) = 115)) and
  (to_rep((temp___String_Literal_876(void)[16])) = 121)) and
  (to_rep((temp___String_Literal_876(void)[17])) = 109)) and
  (to_rep((temp___String_Literal_876(void)[18])) = 98)) and
  (to_rep((temp___String_Literal_876(void)[19])) = 111)) and
  (to_rep((temp___String_Literal_876(void)[20])) = 108)) and
  (to_rep((temp___String_Literal_876(void)[21])) = 32)) and
  (to_rep((temp___String_Literal_876(void)[22])) = 105)) and
  (to_rep((temp___String_Literal_876(void)[23])) = 115)) and
  (to_rep((temp___String_Literal_876(void)[24])) = 32)) and
  (to_rep((temp___String_Literal_876(void)[25])) = 110)) and
  (to_rep((temp___String_Literal_876(void)[26])) = 111)) and
  (to_rep((temp___String_Literal_876(void)[27])) = 116)) and
  (to_rep((temp___String_Literal_876(void)[28])) = 32)) and
  (to_rep((temp___String_Literal_876(void)[29])) = 102)) and
  (to_rep((temp___String_Literal_876(void)[30])) = 105)) and
  (to_rep((temp___String_Literal_876(void)[31])) = 110)) and
  (to_rep((temp___String_Literal_876(void)[32])) = 105)) and
  (to_rep((temp___String_Literal_876(void)[33])) = 115)) and
  (to_rep((temp___String_Literal_876(void)[34])) = 104)) and
  (to_rep((temp___String_Literal_876(void)[35])) = 101)) and
  (to_rep((temp___String_Literal_876(void)[36])) = 100))

logic temp___String_Literal_877 : unit -> (int,character) farray

axiom temp___String_Literal_877__def_axiom :
  ((((((((((((((((((((((((((((((((to_rep((temp___String_Literal_877(void)[1])) = 115) and
  (to_rep((temp___String_Literal_877(void)[2])) = 116)) and
  (to_rep((temp___String_Literal_877(void)[3])) = 114)) and
  (to_rep((temp___String_Literal_877(void)[4])) = 105)) and
  (to_rep((temp___String_Literal_877(void)[5])) = 110)) and
  (to_rep((temp___String_Literal_877(void)[6])) = 103)) and
  (to_rep((temp___String_Literal_877(void)[7])) = 32)) and
  (to_rep((temp___String_Literal_877(void)[8])) = 108)) and
  (to_rep((temp___String_Literal_877(void)[9])) = 105)) and
  (to_rep((temp___String_Literal_877(void)[10])) = 116)) and
  (to_rep((temp___String_Literal_877(void)[11])) = 101)) and
  (to_rep((temp___String_Literal_877(void)[12])) = 114)) and
  (to_rep((temp___String_Literal_877(void)[13])) = 97)) and
  (to_rep((temp___String_Literal_877(void)[14])) = 108)) and
  (to_rep((temp___String_Literal_877(void)[15])) = 32)) and
  (to_rep((temp___String_Literal_877(void)[16])) = 105)) and
  (to_rep((temp___String_Literal_877(void)[17])) = 115)) and
  (to_rep((temp___String_Literal_877(void)[18])) = 32)) and
  (to_rep((temp___String_Literal_877(void)[19])) = 110)) and
  (to_rep((temp___String_Literal_877(void)[20])) = 111)) and
  (to_rep((temp___String_Literal_877(void)[21])) = 116)) and
  (to_rep((temp___String_Literal_877(void)[22])) = 32)) and
  (to_rep((temp___String_Literal_877(void)[23])) = 116)) and
  (to_rep((temp___String_Literal_877(void)[24])) = 101)) and
  (to_rep((temp___String_Literal_877(void)[25])) = 114)) and
  (to_rep((temp___String_Literal_877(void)[26])) = 109)) and
  (to_rep((temp___String_Literal_877(void)[27])) = 105)) and
  (to_rep((temp___String_Literal_877(void)[28])) = 110)) and
  (to_rep((temp___String_Literal_877(void)[29])) = 97)) and
  (to_rep((temp___String_Literal_877(void)[30])) = 116)) and
  (to_rep((temp___String_Literal_877(void)[31])) = 101)) and
  (to_rep((temp___String_Literal_877(void)[32])) = 100))

axiom local_invariant__post_axiom : true

axiom local_invariant__def_axiom :
  (forall lexer__current_read__fields:character.
  forall lexer__next_read__fields:character.
  (forall lexer__current_read__discrs:read_status.
  forall lexer__next_read__discrs:read_status [local_invariant({
  rec__file_io__read_result__c = lexer__current_read__fields }, {
  rec__file_io__read_result__status = lexer__current_read__discrs }, {
  rec__file_io__read_result__c = lexer__next_read__fields }, {
  rec__file_io__read_result__status = lexer__next_read__discrs })].
  ((local_invariant({ rec__file_io__read_result__c =
  lexer__current_read__fields }, { rec__file_io__read_result__status =
  lexer__current_read__discrs }, { rec__file_io__read_result__c =
  lexer__next_read__fields }, { rec__file_io__read_result__status =
  lexer__next_read__discrs }) = true) <->
  ((not (current_read__attr__constrained = true)) and
  (not (next_read__attr__constrained = true))))))

axiom invariant____post_axiom1 : true

logic capacity__function_guard : int, us_rep2 -> prop

logic length5 : us_rep2 -> int

logic length__function_guard1 : int, us_rep2 -> prop

axiom length__post_axiom1 :
  (forall container:capacity_range. forall container1:us_main_type1
  [length5({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = container };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  container1 } })]. ((((of_int(0) = true) -> (length5({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = container };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  container1 } }) <= to_rep4(container))) and ((not (of_int(0) = true)) ->
  (length5({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = container };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  container1 } }) <= 2147483647))) and in_range6(length5({ us_split_discrs3 =
  { rec__unbounded_strings__char_vectors__vector__capacity = container };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  container1 } }))))

axiom is_empty__post_axiom :
  (forall container:capacity_range. forall container1:us_main_type1
  [is_empty({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = container };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  container1 } })]. ((is_empty({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = container };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  container1 } }) = true) <-> (length5({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = container };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  container1 } }) = 0)))

logic t__split_fields : natural

logic t__split_fields1 : natural

logic t__split_fields2 : natural

logic t__split_fields3 : name_id

logic t__split_discrs : token_kind

logic the_filename : int

logic the_file : us_rep

logic current_read__split_fields : character

logic current_read__split_discrs : read_status

logic current_line : int

logic current_col : int

logic current_pos : int

logic next_read__split_fields : character

logic next_read__split_discrs : read_status

logic s__split_fields : us_main_type1

logic first_line : int

logic first_col : int

logic first_pos : int

logic state : int

logic c : int

logic k : int

logic str : (int,character) farray

logic name_table : us_private

logic temp___851 : int

logic temp___850 : int

logic temp___849 : us_rep

logic temp___847 : int

logic temp___848 : token_kind

logic temp___8481 : natural

logic temp___8482 : natural

logic temp___8483 : natural

logic temp___8484 : name_id

logic temp___8485 : bool

logic temp___846 : read_status

logic temp___8461 : character

logic temp___8462 : bool

logic temp___845 : capacity_range

logic temp___8451 : us_main_type1

logic temp___844 : int

logic temp___843 : int

logic temp___842 : int

logic temp___841 : int

logic temp___840 : int

logic temp___839 : read_status

logic temp___8391 : character

logic temp___8392 : bool

logic o : token_kind

logic o1 : int

logic o2 : natural

logic o3 : natural

logic o4 : natural

logic o5 : natural

logic o6 : natural

logic o7 : natural

logic o8 : name_id

logic o9 : token_kind

logic temp___831 : token_kind

logic temp___8311 : natural

logic temp___8312 : natural

logic temp___8313 : natural

logic temp___8314 : name_id

logic temp___8315 : bool

logic usq_ : token_kind

logic usq_1 : natural

logic usq_2 : natural

logic usq_3 : natural

logic usq_4 : name_id

logic usq_5 : bool

logic temp___833 : token_kind

logic temp___8331 : natural

logic temp___8332 : natural

logic temp___8333 : natural

logic temp___8334 : name_id

logic temp___8335 : bool

logic o10 : character

logic o11 : (int,character) farray

logic o12 : int

logic o13 : int

logic o14 : int

logic o15 : int

logic o16 : int

logic o17 : (int,character) farray

logic temp___837 : (int,character) farray

logic temp___8371 : t

logic o18 : int

logic o19 : int

logic o20 : int

logic o21 : int

logic o22 : int

logic o23 : int

logic o24 : (int,character) farray

logic o25 : t

logic temp___861 : int

logic temp___860 : us_rep

logic temp___859 : read_status

logic temp___8591 : character

logic temp___8592 : bool

logic temp___858 : capacity_range

logic temp___8581 : us_main_type1

logic temp___857 : int

logic temp___856 : int

logic temp___855 : int

logic temp___854 : int

logic temp___853 : read_status

logic temp___8531 : character

logic temp___8532 : bool

logic lexer__read_token__B_6__tmp__assume : (int,character) farray

logic lexer__read_token__B_6__tmp__assume1 : t

logic o26 : int

logic temp___864 : int

logic o27 : (int,character) farray

logic temp___866 : (int,character) farray

logic temp___8661 : t1

logic temp___868 : int

logic temp___867 : int

logic o28 : (int,character) farray

logic temp___869 : (int,character) farray

logic temp___8691 : t2

logic temp___871 : int

logic o29 : (int,character) farray

logic temp___873 : (int,character) farray

logic temp___8731 : t3

logic lexer__read_token__B_6__str__assume : (int,character) farray

logic lexer__read_token__B_6__str__assume1 : t

logic k1 : int

logic str1 : (int,character) farray

logic name_table1 : us_private

logic t__split_fields4 : natural

logic t__split_fields5 : natural

logic t__split_fields6 : natural

logic t__split_fields7 : name_id

logic t__split_discrs1 : token_kind

logic current_read__split_fields1 : character

logic current_read__split_discrs1 : read_status

logic current_line1 : int

logic current_col1 : int

logic current_pos1 : int

logic next_read__split_fields1 : character

logic next_read__split_discrs1 : read_status

logic s__split_fields1 : us_main_type1

logic first_line1 : int

logic first_col1 : int

logic first_pos1 : int

logic state1 : int

logic c1 : int

logic the_file1 : us_rep

logic current_read__split_fields2 : character

logic current_read__split_discrs2 : read_status

logic current_line2 : int

logic current_col2 : int

logic current_pos2 : int

logic next_read__split_fields2 : character

logic next_read__split_discrs2 : read_status

logic result : natural

logic result1 : natural

logic result2 : natural

logic result3 : name_id

logic t__split_fields8 : natural

logic t__split_fields9 : natural

logic t__split_fields10 : natural

logic t__split_fields11 : name_id

logic result4 : token_kind

logic t__split_discrs2 : token_kind

logic result5 : int

logic first_line2 : int

logic result6 : int

logic first_col2 : int

logic result7 : int

logic first_pos2 : int

logic result8 : int

logic c2 : int

logic s__split_fields2 : us_main_type1

logic the_file2 : us_rep

logic current_read__split_fields3 : character

logic current_read__split_discrs3 : read_status

logic current_line3 : int

logic current_col3 : int

logic current_pos3 : int

logic next_read__split_fields3 : character

logic next_read__split_discrs3 : read_status

logic s__split_fields3 : us_main_type1

logic t__split_fields12 : natural

logic t__split_fields13 : natural

logic t__split_fields14 : natural

logic t__split_fields15 : name_id

logic t__split_discrs3 : token_kind

logic t__split_fields16 : natural

logic t__split_fields17 : natural

logic t__split_fields18 : natural

logic t__split_fields19 : name_id

logic t__split_discrs4 : token_kind

logic result9 : int

logic state2 : int

logic result10 : int

logic state3 : int

logic result11 : int

logic state4 : int

logic result12 : int

logic state5 : int

logic result13 : int

logic state6 : int

logic state7 : int

logic state8 : int

logic state9 : int

logic state10 : int

logic state11 : int

logic state12 : int

logic state13 : int

logic state14 : int

logic t__split_fields20 : natural

logic t__split_fields21 : natural

logic t__split_fields22 : natural

logic t__split_fields23 : name_id

logic t__split_discrs5 : token_kind

logic t__split_fields24 : natural

logic t__split_fields25 : natural

logic t__split_fields26 : natural

logic t__split_fields27 : name_id

logic t__split_discrs6 : token_kind

logic t__split_fields28 : natural

logic t__split_fields29 : natural

logic t__split_fields30 : natural

logic t__split_fields31 : name_id

logic t__split_discrs7 : token_kind

logic state15 : int

logic t__split_fields32 : natural

logic t__split_fields33 : natural

logic t__split_fields34 : natural

logic t__split_fields35 : name_id

logic t__split_discrs8 : token_kind

logic state16 : int

logic t__split_fields36 : natural

logic t__split_fields37 : natural

logic t__split_fields38 : natural

logic t__split_fields39 : name_id

logic t__split_discrs9 : token_kind

logic the_file3 : us_rep

logic current_read__split_fields4 : character

logic current_read__split_discrs4 : read_status

logic current_line4 : int

logic current_col4 : int

logic current_pos4 : int

logic next_read__split_fields4 : character

logic next_read__split_discrs4 : read_status

logic s__split_fields4 : us_main_type1

logic first_line3 : int

logic first_col3 : int

logic first_pos3 : int

logic c3 : int

logic t__split_fields40 : natural

logic t__split_fields41 : natural

logic t__split_fields42 : natural

logic t__split_fields43 : name_id

logic t__split_discrs10 : token_kind

logic the_file4 : us_rep

logic current_read__split_fields5 : character

logic current_read__split_discrs5 : read_status

logic current_line5 : int

logic current_col5 : int

logic current_pos5 : int

logic next_read__split_fields5 : character

logic next_read__split_discrs5 : read_status

logic s__split_fields5 : us_main_type1

logic first_line4 : int

logic first_col4 : int

logic first_pos4 : int

logic c4 : int

logic t__split_fields44 : natural

logic t__split_fields45 : natural

logic t__split_fields46 : natural

logic t__split_fields47 : name_id

logic t__split_discrs11 : token_kind

logic the_file5 : us_rep

logic current_read__split_fields6 : character

logic current_read__split_discrs6 : read_status

logic current_line6 : int

logic current_col6 : int

logic current_pos6 : int

logic next_read__split_fields6 : character

logic next_read__split_discrs6 : read_status

logic s__split_fields6 : us_main_type1

logic first_line5 : int

logic first_col5 : int

logic first_pos5 : int

logic state17 : int

logic c5 : int

logic t__split_fields48 : natural

logic t__split_fields49 : natural

logic t__split_fields50 : natural

logic t__split_fields51 : name_id

logic t__split_discrs12 : token_kind

logic the_file6 : us_rep

logic current_read__split_fields7 : character

logic current_read__split_discrs7 : read_status

logic current_line7 : int

logic current_col7 : int

logic current_pos7 : int

logic next_read__split_fields7 : character

logic next_read__split_discrs7 : read_status

logic s__split_fields7 : us_main_type1

logic first_line6 : int

logic first_col6 : int

logic first_pos6 : int

logic state18 : int

logic c6 : int

logic t__split_fields52 : natural

logic t__split_fields53 : natural

logic t__split_fields54 : natural

logic t__split_fields55 : name_id

logic t__split_discrs13 : token_kind

logic the_file7 : us_rep

logic current_read__split_fields8 : character

logic current_read__split_discrs8 : read_status

logic current_line8 : int

logic current_col8 : int

logic current_pos8 : int

logic next_read__split_fields8 : character

logic next_read__split_discrs8 : read_status

logic s__split_fields8 : us_main_type1

logic first_line7 : int

logic first_col7 : int

logic first_pos7 : int

logic state19 : int

logic c7 : int

logic t__split_fields56 : natural

logic t__split_fields57 : natural

logic t__split_fields58 : natural

logic t__split_fields59 : name_id

logic t__split_discrs14 : token_kind

logic the_file8 : us_rep

logic current_read__split_fields9 : character

logic current_read__split_discrs9 : read_status

logic current_line9 : int

logic current_col9 : int

logic current_pos9 : int

logic next_read__split_fields9 : character

logic next_read__split_discrs9 : read_status

logic s__split_fields9 : us_main_type1

logic first_line8 : int

logic first_col8 : int

logic first_pos8 : int

logic state20 : int

logic c8 : int

logic result14 : int

logic c9 : int

logic the_file9 : us_rep

logic current_read__split_fields10 : character

logic current_read__split_discrs10 : read_status

logic current_line10 : int

logic current_col10 : int

logic current_pos10 : int

logic next_read__split_fields10 : character

logic next_read__split_discrs10 : read_status

logic s__split_fields10 : us_main_type1

logic state21 : int

logic c10 : int

logic result15 : int

logic state22 : int

logic state23 : int

logic state24 : int

logic state25 : int

logic state26 : int

logic result16 : int

logic state27 : int

logic result17 : int

logic state28 : int

logic result18 : int

logic state29 : int

logic state30 : int

logic state31 : int

logic state32 : int

logic state33 : int

logic the_file10 : us_rep

logic current_read__split_fields11 : character

logic current_read__split_discrs11 : read_status

logic current_line11 : int

logic current_col11 : int

logic current_pos11 : int

logic next_read__split_fields11 : character

logic next_read__split_discrs11 : read_status

logic s__split_fields11 : us_main_type1

logic result19 : int

logic state34 : int

logic the_file11 : us_rep

logic current_read__split_fields12 : character

logic current_read__split_discrs12 : read_status

logic current_line12 : int

logic current_col12 : int

logic current_pos12 : int

logic next_read__split_fields12 : character

logic next_read__split_discrs12 : read_status

logic s__split_fields12 : us_main_type1

logic state35 : int

logic the_file12 : us_rep

logic current_read__split_fields13 : character

logic current_read__split_discrs13 : read_status

logic current_line13 : int

logic current_col13 : int

logic current_pos13 : int

logic next_read__split_fields13 : character

logic next_read__split_discrs13 : read_status

logic s__split_fields13 : us_main_type1

logic state36 : int

logic result20 : bool

logic the_file13 : us_rep

logic current_read__split_fields14 : character

logic current_read__split_discrs14 : read_status

logic current_line14 : int

logic current_col14 : int

logic current_pos14 : int

logic next_read__split_fields14 : character

logic next_read__split_discrs14 : read_status

logic the_file14 : us_rep

logic current_read__split_fields15 : character

logic current_read__split_discrs15 : read_status

logic current_line15 : int

logic current_col15 : int

logic current_pos15 : int

logic next_read__split_fields15 : character

logic next_read__split_discrs15 : read_status

logic s__split_fields14 : us_main_type1

logic result21 : int

logic state37 : int

logic the_file15 : us_rep

logic current_read__split_fields16 : character

logic current_read__split_discrs16 : read_status

logic current_line16 : int

logic current_col16 : int

logic current_pos16 : int

logic next_read__split_fields16 : character

logic next_read__split_discrs16 : read_status

logic s__split_fields15 : us_main_type1

logic state38 : int

logic the_file16 : us_rep

logic current_read__split_fields17 : character

logic current_read__split_discrs17 : read_status

logic current_line17 : int

logic current_col17 : int

logic current_pos17 : int

logic next_read__split_fields17 : character

logic next_read__split_discrs17 : read_status

logic s__split_fields16 : us_main_type1

logic state39 : int

logic the_file17 : us_rep

logic current_read__split_fields18 : character

logic current_read__split_discrs18 : read_status

logic current_line18 : int

logic current_col18 : int

logic current_pos18 : int

logic next_read__split_fields18 : character

logic next_read__split_discrs18 : read_status

logic s__split_fields17 : us_main_type1

logic state40 : int

logic the_file18 : us_rep

logic current_read__split_fields19 : character

logic current_read__split_discrs19 : read_status

logic current_line19 : int

logic current_col19 : int

logic current_pos19 : int

logic next_read__split_fields19 : character

logic next_read__split_discrs19 : read_status

logic s__split_fields18 : us_main_type1

logic state41 : int

logic the_file19 : us_rep

logic current_read__split_fields20 : character

logic current_read__split_discrs20 : read_status

logic current_line20 : int

logic current_col20 : int

logic current_pos20 : int

logic next_read__split_fields20 : character

logic next_read__split_discrs20 : read_status

logic s__split_fields19 : us_main_type1

logic state42 : int

logic the_file20 : us_rep

logic current_read__split_fields21 : character

logic current_read__split_discrs21 : read_status

logic current_line21 : int

logic current_col21 : int

logic current_pos21 : int

logic next_read__split_fields21 : character

logic next_read__split_discrs21 : read_status

logic s__split_fields20 : us_main_type1

logic state43 : int

logic the_file21 : us_rep

logic current_read__split_fields22 : character

logic current_read__split_discrs22 : read_status

logic current_line22 : int

logic current_col22 : int

logic current_pos22 : int

logic next_read__split_fields22 : character

logic next_read__split_discrs22 : read_status

logic s__split_fields21 : us_main_type1

logic state44 : int

logic the_file22 : us_rep

logic current_read__split_fields23 : character

logic current_read__split_discrs23 : read_status

logic current_line23 : int

logic current_col23 : int

logic current_pos23 : int

logic next_read__split_fields23 : character

logic next_read__split_discrs23 : read_status

logic s__split_fields22 : us_main_type1

logic state45 : int

logic the_file23 : us_rep

logic current_read__split_fields24 : character

logic current_read__split_discrs24 : read_status

logic current_line24 : int

logic current_col24 : int

logic current_pos24 : int

logic next_read__split_fields24 : character

logic next_read__split_discrs24 : read_status

logic s__split_fields23 : us_main_type1

logic state46 : int

logic the_file24 : us_rep

logic current_read__split_fields25 : character

logic current_read__split_discrs25 : read_status

logic current_line25 : int

logic current_col25 : int

logic current_pos25 : int

logic next_read__split_fields25 : character

logic next_read__split_discrs25 : read_status

logic s__split_fields24 : us_main_type1

logic state47 : int

logic the_file25 : us_rep

logic current_read__split_fields26 : character

logic current_read__split_discrs26 : read_status

logic current_line26 : int

logic current_col26 : int

logic current_pos26 : int

logic next_read__split_fields26 : character

logic next_read__split_discrs26 : read_status

logic s__split_fields25 : us_main_type1

logic state48 : int

logic the_file26 : us_rep

logic current_read__split_fields27 : character

logic current_read__split_discrs27 : read_status

logic current_line27 : int

logic current_col27 : int

logic current_pos27 : int

logic next_read__split_fields27 : character

logic next_read__split_discrs27 : read_status

logic s__split_fields26 : us_main_type1

logic state49 : int

logic the_file27 : us_rep

logic current_read__split_fields28 : character

logic current_read__split_discrs28 : read_status

logic current_line28 : int

logic current_col28 : int

logic current_pos28 : int

logic next_read__split_fields28 : character

logic next_read__split_discrs28 : read_status

logic s__split_fields27 : us_main_type1

logic state50 : int

logic the_file28 : us_rep

logic current_read__split_fields29 : character

logic current_read__split_discrs29 : read_status

logic current_line29 : int

logic current_col29 : int

logic current_pos29 : int

logic next_read__split_fields29 : character

logic next_read__split_discrs29 : read_status

logic s__split_fields28 : us_main_type1

logic state51 : int

logic the_file29 : us_rep

logic current_read__split_fields30 : character

logic current_read__split_discrs30 : read_status

logic current_line30 : int

logic current_col30 : int

logic current_pos30 : int

logic next_read__split_fields30 : character

logic next_read__split_discrs30 : read_status

logic s__split_fields29 : us_main_type1

logic state52 : int

logic the_file30 : us_rep

logic current_read__split_fields31 : character

logic current_read__split_discrs31 : read_status

logic current_line31 : int

logic current_col31 : int

logic current_pos31 : int

logic next_read__split_fields31 : character

logic next_read__split_discrs31 : read_status

logic s__split_fields30 : us_main_type1

logic state53 : int

logic the_file31 : us_rep

logic current_read__split_fields32 : character

logic current_read__split_discrs32 : read_status

logic current_line32 : int

logic current_col32 : int

logic current_pos32 : int

logic next_read__split_fields32 : character

logic next_read__split_discrs32 : read_status

logic s__split_fields31 : us_main_type1

logic state54 : int

logic the_file32 : us_rep

logic current_read__split_fields33 : character

logic current_read__split_discrs33 : read_status

logic current_line33 : int

logic current_col33 : int

logic current_pos33 : int

logic next_read__split_fields33 : character

logic next_read__split_discrs33 : read_status

logic s__split_fields32 : us_main_type1

logic state55 : int

logic the_file33 : us_rep

logic current_read__split_fields34 : character

logic current_read__split_discrs34 : read_status

logic current_line34 : int

logic current_col34 : int

logic current_pos34 : int

logic next_read__split_fields34 : character

logic next_read__split_discrs34 : read_status

logic s__split_fields33 : us_main_type1

logic state56 : int

logic the_file34 : us_rep

logic current_read__split_fields35 : character

logic current_read__split_discrs35 : read_status

logic current_line35 : int

logic current_col35 : int

logic current_pos35 : int

logic next_read__split_fields35 : character

logic next_read__split_discrs35 : read_status

logic s__split_fields34 : us_main_type1

logic state57 : int

logic the_file35 : us_rep

logic current_read__split_fields36 : character

logic current_read__split_discrs36 : read_status

logic current_line36 : int

logic current_col36 : int

logic current_pos36 : int

logic next_read__split_fields36 : character

logic next_read__split_discrs36 : read_status

logic s__split_fields35 : us_main_type1

logic state58 : int

logic the_file36 : us_rep

logic current_read__split_fields37 : character

logic current_read__split_discrs37 : read_status

logic current_line37 : int

logic current_col37 : int

logic current_pos37 : int

logic next_read__split_fields37 : character

logic next_read__split_discrs37 : read_status

logic s__split_fields36 : us_main_type1

logic state59 : int

logic the_file37 : us_rep

logic current_read__split_fields38 : character

logic current_read__split_discrs38 : read_status

logic current_line38 : int

logic current_col38 : int

logic current_pos38 : int

logic next_read__split_fields38 : character

logic next_read__split_discrs38 : read_status

logic s__split_fields37 : us_main_type1

logic state60 : int

logic the_file38 : us_rep

logic current_read__split_fields39 : character

logic current_read__split_discrs39 : read_status

logic current_line39 : int

logic current_col39 : int

logic current_pos39 : int

logic next_read__split_fields39 : character

logic next_read__split_discrs39 : read_status

logic s__split_fields38 : us_main_type1

logic state61 : int

logic the_file39 : us_rep

logic current_read__split_fields40 : character

logic current_read__split_discrs40 : read_status

logic current_line40 : int

logic current_col40 : int

logic current_pos40 : int

logic next_read__split_fields40 : character

logic next_read__split_discrs40 : read_status

logic s__split_fields39 : us_main_type1

logic state62 : int

logic the_file40 : us_rep

logic current_read__split_fields41 : character

logic current_read__split_discrs41 : read_status

logic current_line41 : int

logic current_col41 : int

logic current_pos41 : int

logic next_read__split_fields41 : character

logic next_read__split_discrs41 : read_status

logic s__split_fields40 : us_main_type1

logic state63 : int

logic the_file41 : us_rep

logic current_read__split_fields42 : character

logic current_read__split_discrs42 : read_status

logic current_line42 : int

logic current_col42 : int

logic current_pos42 : int

logic next_read__split_fields42 : character

logic next_read__split_discrs42 : read_status

logic s__split_fields41 : us_main_type1

logic state64 : int

logic the_file42 : us_rep

logic current_read__split_fields43 : character

logic current_read__split_discrs43 : read_status

logic current_line43 : int

logic current_col43 : int

logic current_pos43 : int

logic next_read__split_fields43 : character

logic next_read__split_discrs43 : read_status

logic s__split_fields42 : us_main_type1

logic state65 : int

logic the_file43 : us_rep

logic current_read__split_fields44 : character

logic current_read__split_discrs44 : read_status

logic current_line44 : int

logic current_col44 : int

logic current_pos44 : int

logic next_read__split_fields44 : character

logic next_read__split_discrs44 : read_status

logic s__split_fields43 : us_main_type1

logic state66 : int

logic the_file44 : us_rep

logic current_read__split_fields45 : character

logic current_read__split_discrs45 : read_status

logic current_line45 : int

logic current_col45 : int

logic current_pos45 : int

logic next_read__split_fields45 : character

logic next_read__split_discrs45 : read_status

logic s__split_fields44 : us_main_type1

logic state67 : int

logic the_file45 : us_rep

logic current_read__split_fields46 : character

logic current_read__split_discrs46 : read_status

logic current_line46 : int

logic current_col46 : int

logic current_pos46 : int

logic next_read__split_fields46 : character

logic next_read__split_discrs46 : read_status

logic s__split_fields45 : us_main_type1

logic state68 : int

logic the_file46 : us_rep

logic current_read__split_fields47 : character

logic current_read__split_discrs47 : read_status

logic current_line47 : int

logic current_col47 : int

logic current_pos47 : int

logic next_read__split_fields47 : character

logic next_read__split_discrs47 : read_status

logic s__split_fields46 : us_main_type1

logic state69 : int

logic the_file47 : us_rep

logic current_read__split_fields48 : character

logic current_read__split_discrs48 : read_status

logic current_line48 : int

logic current_col48 : int

logic current_pos48 : int

logic next_read__split_fields48 : character

logic next_read__split_discrs48 : read_status

logic s__split_fields47 : us_main_type1

logic result22 : int

logic c11 : int

logic the_file48 : us_rep

logic current_read__split_fields49 : character

logic current_read__split_discrs49 : read_status

logic current_line49 : int

logic current_col49 : int

logic current_pos49 : int

logic next_read__split_fields49 : character

logic next_read__split_discrs49 : read_status

logic s__split_fields48 : us_main_type1

logic state70 : int

logic the_file49 : us_rep

logic current_read__split_fields50 : character

logic current_read__split_discrs50 : read_status

logic current_line50 : int

logic current_col50 : int

logic current_pos50 : int

logic next_read__split_fields50 : character

logic next_read__split_discrs50 : read_status

logic s__split_fields49 : us_main_type1

logic state71 : int

logic the_file50 : us_rep

logic current_read__split_fields51 : character

logic current_read__split_discrs51 : read_status

logic current_line51 : int

logic current_col51 : int

logic current_pos51 : int

logic next_read__split_fields51 : character

logic next_read__split_discrs51 : read_status

logic s__split_fields50 : us_main_type1

logic state72 : int

logic c12 : int

logic the_file51 : us_rep

logic current_read__split_fields52 : character

logic current_read__split_discrs52 : read_status

logic current_line52 : int

logic current_col52 : int

logic current_pos52 : int

logic next_read__split_fields52 : character

logic next_read__split_discrs52 : read_status

logic s__split_fields51 : us_main_type1

logic state73 : int

logic c13 : int

logic the_file52 : us_rep

logic current_read__split_fields53 : character

logic current_read__split_discrs53 : read_status

logic current_line53 : int

logic current_col53 : int

logic current_pos53 : int

logic next_read__split_fields53 : character

logic next_read__split_discrs53 : read_status

logic s__split_fields52 : us_main_type1

logic state74 : int

logic c14 : int

logic the_file53 : us_rep

logic current_read__split_fields54 : character

logic current_read__split_discrs54 : read_status

logic current_line54 : int

logic current_col54 : int

logic current_pos54 : int

logic next_read__split_fields54 : character

logic next_read__split_discrs54 : read_status

logic s__split_fields53 : us_main_type1

logic state75 : int

logic c15 : int

logic the_file54 : us_rep

logic current_read__split_fields55 : character

logic current_read__split_discrs55 : read_status

logic current_line55 : int

logic current_col55 : int

logic current_pos55 : int

logic next_read__split_fields55 : character

logic next_read__split_discrs55 : read_status

logic s__split_fields54 : us_main_type1

logic state76 : int

logic c16 : int

logic the_file55 : us_rep

logic current_read__split_fields56 : character

logic current_read__split_discrs56 : read_status

logic current_line56 : int

logic current_col56 : int

logic current_pos56 : int

logic next_read__split_fields56 : character

logic next_read__split_discrs56 : read_status

logic s__split_fields55 : us_main_type1

logic state77 : int

logic c17 : int

logic the_file56 : us_rep

logic current_read__split_fields57 : character

logic current_read__split_discrs57 : read_status

logic current_line57 : int

logic current_col57 : int

logic current_pos57 : int

logic next_read__split_fields57 : character

logic next_read__split_discrs57 : read_status

logic s__split_fields56 : us_main_type1

logic state78 : int

logic c18 : int

logic the_file57 : us_rep

logic current_read__split_fields58 : character

logic current_read__split_discrs58 : read_status

logic current_line58 : int

logic current_col58 : int

logic current_pos58 : int

logic next_read__split_fields58 : character

logic next_read__split_discrs58 : read_status

logic s__split_fields57 : us_main_type1

logic state79 : int

logic c19 : int

logic result23 : int

logic k2 : int

logic result24 : (int,character) farray

logic str2 : (int,character) farray

logic t__split_fields60 : natural

logic t__split_fields61 : natural

logic t__split_fields62 : natural

logic t__split_fields63 : name_id

logic t__split_discrs15 : token_kind

logic name_table2 : us_private

logic t__split_fields64 : natural

logic t__split_fields65 : natural

logic t__split_fields66 : natural

logic t__split_fields67 : name_id

logic t__split_discrs16 : token_kind

logic the_file58 : us_rep

logic current_read__split_fields59 : character

logic current_read__split_discrs59 : read_status

logic current_line59 : int

logic current_col59 : int

logic current_pos59 : int

logic next_read__split_fields59 : character

logic next_read__split_discrs59 : read_status

logic s__split_fields58 : us_main_type1

logic first_line9 : int

logic first_col9 : int

logic first_pos9 : int

logic state80 : int

logic c20 : int

logic k3 : int

logic str3 : (int,character) farray

logic name_table3 : us_private

logic t__split_fields68 : natural

logic t__split_fields69 : natural

logic t__split_fields70 : natural

logic t__split_fields71 : name_id

logic t__split_discrs17 : token_kind

logic the_file59 : us_rep

logic current_read__split_fields60 : character

logic current_read__split_discrs60 : read_status

logic current_line60 : int

logic current_col60 : int

logic current_pos60 : int

logic next_read__split_fields60 : character

logic next_read__split_discrs60 : read_status

logic s__split_fields59 : us_main_type1

logic first_line10 : int

logic first_col10 : int

logic first_pos10 : int

logic state81 : int

logic c21 : int

logic k4 : int

logic str4 : (int,character) farray

logic name_table4 : us_private

logic t__split_fields72 : natural

logic t__split_fields73 : natural

logic t__split_fields74 : natural

logic t__split_fields75 : name_id

logic t__split_discrs18 : token_kind

logic the_file60 : us_rep

logic current_read__split_fields61 : character

logic current_read__split_discrs61 : read_status

logic current_line61 : int

logic current_col61 : int

logic current_pos61 : int

logic next_read__split_fields61 : character

logic next_read__split_discrs61 : read_status

logic s__split_fields60 : us_main_type1

logic first_line11 : int

logic first_col11 : int

logic first_pos11 : int

logic state82 : int

logic c22 : int

logic k5 : int

logic str5 : (int,character) farray

logic name_table5 : us_private

logic t__split_fields76 : natural

logic t__split_fields77 : natural

logic t__split_fields78 : natural

logic t__split_fields79 : name_id

logic t__split_discrs19 : token_kind

logic the_file61 : us_rep

logic current_read__split_fields62 : character

logic current_read__split_discrs62 : read_status

logic current_line62 : int

logic current_col62 : int

logic current_pos62 : int

logic next_read__split_fields62 : character

logic next_read__split_discrs62 : read_status

logic s__split_fields61 : us_main_type1

logic first_line12 : int

logic first_col12 : int

logic first_pos12 : int

logic state83 : int

logic c23 : int

logic k6 : int

logic str6 : (int,character) farray

logic name_table6 : us_private

axiom H : in_range8(the_filename)

axiom H1 : (current_read__attr__constrained = false)

axiom H2 : in_range2(current_line)

axiom H3 : in_range4(current_col)

axiom H4 : in_range4(current_pos)

axiom H5 : (next_read__attr__constrained = false)

axiom H6 : ((invariant__(name_table, { rec__file_io__read_result__c =
  current_read__split_fields }, { rec__file_io__read_result__status =
  current_read__split_discrs }, { rec__file_io__read_result__c =
  next_read__split_fields }, { rec__file_io__read_result__status =
  next_read__split_discrs }) = true) and (not (t__attr__constrained = true)))

axiom H7 : ((to_rep4(s__split_discrs) = 32) and (is_empty({
  us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields } }) = true))

axiom H8 : (32 = to_rep4(s__split_discrs))

axiom H9 : ((0 <= 2147483647) -> in_range4(first_line))

axiom H10 : ((0 <= 2147483647) -> in_range4(first_col))

axiom H11 : ((0 <= 2147483647) -> in_range4(first_pos))

axiom H12 : ((0 <= 9) -> in_range11(state))

axiom H13 : ((0 <= 255) -> in_range3(c))

axiom H14 : (temp___851 = first_col)

axiom H15 : (temp___850 = state)

axiom H16 : (temp___849 = the_file)

axiom H17 : (temp___847 = first_line)

axiom H18 : ((temp___848 = t__split_discrs) and
  (((temp___8481 = t__split_fields) and ((temp___8482 = t__split_fields1) and
  ((temp___8483 = t__split_fields2) and
  (temp___8484 = t__split_fields3)))) and
  (temp___8485 = t__attr__constrained)))

axiom H19 : ((temp___846 = next_read__split_discrs) and
  ((temp___8461 = next_read__split_fields) and
  (temp___8462 = next_read__attr__constrained)))

axiom H20 : ((temp___845 = s__split_discrs) and
  (temp___8451 = s__split_fields))

axiom H21 : (temp___844 = current_pos)

axiom H22 : (temp___843 = current_col)

axiom H23 : (temp___842 = current_line)

axiom H24 : (temp___841 = first_pos)

axiom H25 : (temp___840 = c)

axiom H26 : ((temp___839 = current_read__split_discrs) and
  ((temp___8391 = current_read__split_fields) and
  (temp___8392 = current_read__attr__constrained)))

axiom H27 : (((((((((0 <= 255) -> in_range3(c1)) and ((0 <= 2147483647) ->
  in_range4(first_pos1))) and in_range2(current_line1)) and
  in_range4(current_col1)) and in_range4(current_pos1)) and
  ((0 <= 2147483647) -> in_range4(first_line1))) and ((0 <= 9) ->
  in_range11(state1))) and ((0 <= 2147483647) -> in_range4(first_col1)))

axiom H28 : ((local_invariant({ rec__file_io__read_result__c =
  current_read__split_fields2 }, { rec__file_io__read_result__status =
  current_read__split_discrs2 }, { rec__file_io__read_result__c =
  next_read__split_fields2 }, { rec__file_io__read_result__status =
  next_read__split_discrs2 }) = true) and ((in_range2(current_line2) and
  in_range4(current_col2)) and in_range4(current_pos2)))

axiom H29 : (not (to_rep3(current_read__split_discrs2) = 1))

axiom H30 : (not (to_rep3(current_read__split_discrs2) = 2))

axiom H31 : (t__split_discrs2 = t__split_discrs1)

axiom H32 : ((t__split_fields8 = t__split_fields4) and
  ((t__split_fields9 = t__split_fields5) and
  ((t__split_fields10 = t__split_fields6) and
  (t__split_fields11 = t__split_fields7))))

axiom H33 : (result5 = first_line1)

axiom H34 : (first_line2 = current_line2)

axiom H35 : (result6 = first_col1)

axiom H36 : (first_col2 = current_col2)

axiom H37 : (result7 = first_pos1)

axiom H38 : (first_pos2 = current_pos2)

axiom H39 : (result8 = c1)

axiom H40 : (c2 = to_rep(current_read__split_fields2))

axiom H41 : (length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields2 } }) = 0)

axiom H42 : ((((local_invariant({ rec__file_io__read_result__c =
  current_read__split_fields3 }, { rec__file_io__read_result__status =
  current_read__split_discrs3 }, { rec__file_io__read_result__c =
  next_read__split_fields3 }, { rec__file_io__read_result__status =
  next_read__split_discrs3 }) = true) and (length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields3 } }) = (length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields2 } }) + 1))) and (current_pos2 <= current_pos3)) and
  ((in_range2(current_line3) and in_range4(current_col3)) and
  in_range4(current_pos3)))

axiom H43 : (state15 = state13)

axiom H44 : (t__split_discrs7 = t__split_discrs2)

axiom H45 : ((t__split_fields28 = t__split_fields8) and
  ((t__split_fields29 = t__split_fields9) and
  ((t__split_fields30 = t__split_fields10) and
  (t__split_fields31 = t__split_fields11))))

axiom H46 : (state16 = state14)

axiom H47 : (t__split_discrs8 = t__split_discrs2)

axiom H48 : ((t__split_fields32 = t__split_fields8) and
  ((t__split_fields33 = t__split_fields9) and
  ((t__split_fields34 = t__split_fields10) and
  (t__split_fields35 = t__split_fields11))))

axiom H49 : (not (c2 = 40))

axiom H50 : (not (c2 = 41))

axiom H51 : ((c2 = 124) -> (state13 = state2))

axiom H52 : ((c2 = 124) -> (state14 = state2))

axiom H53 : ((c2 = 124) -> (result9 = state1))

axiom H54 : ((c2 = 124) -> (state2 = 1))

axiom H55 : ((not (c2 = 124)) -> (state13 = state11))

axiom H56 : ((not (c2 = 124)) -> (state14 = state12))

axiom H57 : ((not (c2 = 124)) -> ((c2 = 35) -> (state11 = state3)))

axiom H58 : ((not (c2 = 124)) -> ((c2 = 35) -> (state12 = state3)))

axiom H59 : ((not (c2 = 124)) -> ((c2 = 35) -> (result10 = state1)))

axiom H60 : ((not (c2 = 124)) -> ((c2 = 35) -> (state3 = 5)))

axiom H61 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> (state11 = state9)))

axiom H62 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> (state12 = state10)))

axiom H63 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> (((48 <= c2) and
  (c2 <= 57)) -> (state9 = state4))))

axiom H64 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> (((48 <= c2) and
  (c2 <= 57)) -> (state10 = state4))))

axiom H65 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> (((48 <= c2) and
  (c2 <= 57)) -> (result11 = state1))))

axiom H66 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> (((48 <= c2) and
  (c2 <= 57)) -> (state4 = 3))))

axiom H67 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> ((not ((48 <= c2) and
  (c2 <= 57))) -> (state9 = state7))))

axiom H68 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> ((not ((48 <= c2) and
  (c2 <= 57))) -> (state10 = state8))))

axiom H69 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> ((not ((48 <= c2) and
  (c2 <= 57))) -> ((((0 <= c2) and ((not (c2 <= 255)) -> ((0 <= c2) and
  (c2 <= 255)))) or ((not (0 <= c2)) and ((0 <= c2) and (c2 <= 255)))) ->
  (state7 = state5)))))

axiom H70 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> ((not ((48 <= c2) and
  (c2 <= 57))) -> ((((0 <= c2) and ((not (c2 <= 255)) -> ((0 <= c2) and
  (c2 <= 255)))) or ((not (0 <= c2)) and ((0 <= c2) and (c2 <= 255)))) ->
  (state8 = state5)))))

axiom H71 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> ((not ((48 <= c2) and
  (c2 <= 57))) -> ((((0 <= c2) and ((not (c2 <= 255)) -> ((0 <= c2) and
  (c2 <= 255)))) or ((not (0 <= c2)) and ((0 <= c2) and (c2 <= 255)))) ->
  (result12 = state1)))))

axiom H72 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> ((not ((48 <= c2) and
  (c2 <= 57))) -> ((((0 <= c2) and ((not (c2 <= 255)) -> ((0 <= c2) and
  (c2 <= 255)))) or ((not (0 <= c2)) and ((0 <= c2) and (c2 <= 255)))) ->
  (state5 = 0)))))

axiom H73 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> ((not ((48 <= c2) and
  (c2 <= 57))) -> ((not (((0 <= c2) -> ((not (c2 <= 255)) -> ((0 <= c2) and
  (c2 <= 255)))) and ((not (0 <= c2)) -> ((0 <= c2) and (c2 <= 255))))) ->
  (state7 = state6)))))

axiom H74 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> ((not ((48 <= c2) and
  (c2 <= 57))) -> ((not (((0 <= c2) -> ((not (c2 <= 255)) -> ((0 <= c2) and
  (c2 <= 255)))) and ((not (0 <= c2)) -> ((0 <= c2) and (c2 <= 255))))) ->
  (state8 = state6)))))

axiom H75 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> ((not ((48 <= c2) and
  (c2 <= 57))) -> ((not (((0 <= c2) -> ((not (c2 <= 255)) -> ((0 <= c2) and
  (c2 <= 255)))) and ((not (0 <= c2)) -> ((0 <= c2) and (c2 <= 255))))) ->
  (c2 = 34)))))

axiom H76 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> ((not ((48 <= c2) and
  (c2 <= 57))) -> ((not (((0 <= c2) -> ((not (c2 <= 255)) -> ((0 <= c2) and
  (c2 <= 255)))) and ((not (0 <= c2)) -> ((0 <= c2) and (c2 <= 255))))) ->
  (result13 = state1)))))

axiom H77 : ((not (c2 = 124)) -> ((not (c2 = 35)) -> ((not ((48 <= c2) and
  (c2 <= 57))) -> ((not (((0 <= c2) -> ((not (c2 <= 255)) -> ((0 <= c2) and
  (c2 <= 255)))) and ((not (0 <= c2)) -> ((0 <= c2) and (c2 <= 255))))) ->
  (state6 = 8)))))

axiom H78 : (c5 = c2)

axiom H79 : (state17 = state15)

axiom H80 : (first_pos5 = first_pos2)

axiom H81 : (first_col5 = first_col2)

axiom H82 : (first_line5 = first_line2)

axiom H83 : (s__split_fields6 = s__split_fields3)

axiom H84 : (next_read__split_discrs6 = next_read__split_discrs3)

axiom H85 : (next_read__split_fields6 = next_read__split_fields3)

axiom H86 : (current_pos6 = current_pos3)

axiom H87 : (current_col6 = current_col3)

axiom H88 : (current_line6 = current_line3)

axiom H89 : (current_read__split_discrs6 = current_read__split_discrs3)

axiom H90 : (current_read__split_fields6 = current_read__split_fields3)

axiom H91 : (the_file5 = the_file2)

axiom H92 : (t__split_discrs11 = t__split_discrs7)

axiom H93 : ((t__split_fields44 = t__split_fields28) and
  ((t__split_fields45 = t__split_fields29) and
  ((t__split_fields46 = t__split_fields30) and
  (t__split_fields47 = t__split_fields31))))

axiom H94 : (c6 = c2)

axiom H95 : (state18 = state16)

axiom H96 : (first_pos6 = first_pos2)

axiom H97 : (first_col6 = first_col2)

axiom H98 : (first_line6 = first_line2)

axiom H99 : (s__split_fields7 = s__split_fields3)

axiom H100 : (next_read__split_discrs7 = next_read__split_discrs3)

axiom H101 : (next_read__split_fields7 = next_read__split_fields3)

axiom H102 : (current_pos7 = current_pos3)

axiom H103 : (current_col7 = current_col3)

axiom H104 : (current_line7 = current_line3)

axiom H105 : (current_read__split_discrs7 = current_read__split_discrs3)

axiom H106 : (current_read__split_fields7 = current_read__split_fields3)

axiom H107 : (the_file6 = the_file2)

axiom H108 : (t__split_discrs12 = t__split_discrs8)

axiom H109 : ((t__split_fields48 = t__split_fields32) and
  ((t__split_fields49 = t__split_fields33) and
  ((t__split_fields50 = t__split_fields34) and
  (t__split_fields51 = t__split_fields35))))

axiom H110 : (c7 = c5)

axiom H111 : (state19 = state17)

axiom H112 : (first_pos7 = first_pos5)

axiom H113 : (first_col7 = first_col5)

axiom H114 : (first_line7 = first_line5)

axiom H115 : (s__split_fields8 = s__split_fields6)

axiom H116 : (next_read__split_discrs8 = next_read__split_discrs6)

axiom H117 : (next_read__split_fields8 = next_read__split_fields6)

axiom H118 : (current_pos8 = current_pos6)

axiom H119 : (current_col8 = current_col6)

axiom H120 : (current_line8 = current_line6)

axiom H121 : (current_read__split_discrs8 = current_read__split_discrs6)

axiom H122 : (current_read__split_fields8 = current_read__split_fields6)

axiom H123 : (the_file7 = the_file5)

axiom H124 : (t__split_discrs13 = t__split_discrs11)

axiom H125 : ((t__split_fields52 = t__split_fields44) and
  ((t__split_fields53 = t__split_fields45) and
  ((t__split_fields54 = t__split_fields46) and
  (t__split_fields55 = t__split_fields47))))

axiom H126 : (c8 = c6)

axiom H127 : (state20 = state18)

axiom H128 : (first_pos8 = first_pos6)

axiom H129 : (first_col8 = first_col6)

axiom H130 : (first_line8 = first_line6)

axiom H131 : (s__split_fields9 = s__split_fields7)

axiom H132 : (next_read__split_discrs9 = next_read__split_discrs7)

axiom H133 : (next_read__split_fields9 = next_read__split_fields7)

axiom H134 : (current_pos9 = current_pos7)

axiom H135 : (current_col9 = current_col7)

axiom H136 : (current_line9 = current_line7)

axiom H137 : (current_read__split_discrs9 = current_read__split_discrs7)

axiom H138 : (current_read__split_fields9 = current_read__split_fields7)

axiom H139 : (the_file8 = the_file6)

axiom H140 : (t__split_discrs14 = t__split_discrs12)

axiom H141 : ((t__split_fields56 = t__split_fields48) and
  ((t__split_fields57 = t__split_fields49) and
  ((t__split_fields58 = t__split_fields50) and
  (t__split_fields59 = t__split_fields51))))

axiom H142 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (((temp___861 = state19) and ((temp___860 = the_file7) and
  (((temp___859 = next_read__split_discrs8) and
  ((temp___8591 = next_read__split_fields8) and
  (temp___8592 = next_read__attr__constrained))) and
  (((temp___858 = s__split_discrs) and (temp___8581 = s__split_fields8)) and
  ((temp___857 = current_pos8) and ((temp___856 = current_col8) and
  ((temp___855 = current_line8) and ((temp___854 = c7) and
  (((temp___853 = current_read__split_discrs8) and
  ((temp___8531 = current_read__split_fields8) and
  (temp___8532 = current_read__attr__constrained))) and (((result14 = c7) and
  (c9 = to_rep(current_read__split_fields8))) and
  ((((((to_rep3(current_read__split_discrs10) = 0) and
  (in_range12(state21) -> (not (((2 <= state21) and (state21 <= 2)) or
  ((9 <= state21) and (state21 <= 9)))))) and (1 <= length1({
  us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields10 } }))) and (first_pos7 <= current_pos10)) and
  (((state21 = 6) or (state21 = 7)) -> (2 <= length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields10 } })))) and (((((((0 <= 255) -> in_range3(c10)) and
  in_range2(current_line10)) and in_range4(current_col10)) and
  in_range4(current_pos10)) and ((0 <= 9) -> in_range11(state21))) and
  (((((state70 = state68) and ((s__split_fields48 = s__split_fields45) and
  ((next_read__split_discrs49 = next_read__split_discrs46) and
  ((next_read__split_fields49 = next_read__split_fields46) and
  ((current_pos49 = current_pos46) and ((current_col49 = current_col46) and
  ((current_line49 = current_line46) and
  ((current_read__split_discrs49 = current_read__split_discrs46) and
  ((current_read__split_fields49 = current_read__split_fields46) and
  (the_file48 = the_file45)))))))))) and ((state71 = state69) and
  ((s__split_fields49 = s__split_fields46) and
  ((next_read__split_discrs50 = next_read__split_discrs47) and
  ((next_read__split_fields50 = next_read__split_fields47) and
  ((current_pos50 = current_pos47) and ((current_col50 = current_col47) and
  ((current_line50 = current_line47) and
  ((current_read__split_discrs50 = current_read__split_discrs47) and
  ((current_read__split_fields50 = current_read__split_fields47) and
  (the_file49 = the_file46))))))))))) and (((state21 = 3) ->
  ((((state68 = state21) and ((s__split_fields45 = s__split_fields10) and
  ((next_read__split_discrs46 = next_read__split_discrs10) and
  ((next_read__split_fields46 = next_read__split_fields10) and
  ((current_pos46 = current_pos10) and ((current_col46 = current_col10) and
  ((current_line46 = current_line10) and
  ((current_read__split_discrs46 = current_read__split_discrs10) and
  ((current_read__split_fields46 = current_read__split_fields10) and
  (the_file45 = the_file9)))))))))) and ((state69 = state21) and
  ((s__split_fields46 = s__split_fields10) and
  ((next_read__split_discrs47 = next_read__split_discrs10) and
  ((next_read__split_fields47 = next_read__split_fields10) and
  ((current_pos47 = current_pos10) and ((current_col47 = current_col10) and
  ((current_line47 = current_line10) and
  ((current_read__split_discrs47 = current_read__split_discrs10) and
  ((current_read__split_fields47 = current_read__split_fields10) and
  (the_file46 = the_file9))))))))))) and ((not ((48 <= c10) and
  (c10 <= 57))) and (not (c10 = 46))))) and ((not (state21 = 3)) ->
  ((((state68 = state64) and ((s__split_fields45 = s__split_fields41) and
  ((next_read__split_discrs46 = next_read__split_discrs42) and
  ((next_read__split_fields46 = next_read__split_fields42) and
  ((current_pos46 = current_pos42) and ((current_col46 = current_col42) and
  ((current_line46 = current_line42) and
  ((current_read__split_discrs46 = current_read__split_discrs42) and
  ((current_read__split_fields46 = current_read__split_fields42) and
  (the_file45 = the_file41)))))))))) and ((state69 = state65) and
  ((s__split_fields46 = s__split_fields42) and
  ((next_read__split_discrs47 = next_read__split_discrs43) and
  ((next_read__split_fields47 = next_read__split_fields43) and
  ((current_pos47 = current_pos43) and ((current_col47 = current_col43) and
  ((current_line47 = current_line43) and
  ((current_read__split_discrs47 = current_read__split_discrs43) and
  ((current_read__split_fields47 = current_read__split_fields43) and
  (the_file46 = the_file42))))))))))) and (((state21 = 4) ->
  ((((state64 = state21) and ((s__split_fields41 = s__split_fields10) and
  ((next_read__split_discrs42 = next_read__split_discrs10) and
  ((next_read__split_fields42 = next_read__split_fields10) and
  ((current_pos42 = current_pos10) and ((current_col42 = current_col10) and
  ((current_line42 = current_line10) and
  ((current_read__split_discrs42 = current_read__split_discrs10) and
  ((current_read__split_fields42 = current_read__split_fields10) and
  (the_file41 = the_file9)))))))))) and ((state65 = state21) and
  ((s__split_fields42 = s__split_fields10) and
  ((next_read__split_discrs43 = next_read__split_discrs10) and
  ((next_read__split_fields43 = next_read__split_fields10) and
  ((current_pos43 = current_pos10) and ((current_col43 = current_col10) and
  ((current_line43 = current_line10) and
  ((current_read__split_discrs43 = current_read__split_discrs10) and
  ((current_read__split_fields43 = current_read__split_fields10) and
  (the_file42 = the_file9))))))))))) and (not ((48 <= c10) and
  (c10 <= 57))))) and ((not (state21 = 4)) -> ((((state64 = state58) and
  ((s__split_fields41 = s__split_fields35) and
  ((next_read__split_discrs42 = next_read__split_discrs36) and
  ((next_read__split_fields42 = next_read__split_fields36) and
  ((current_pos42 = current_pos36) and ((current_col42 = current_col36) and
  ((current_line42 = current_line36) and
  ((current_read__split_discrs42 = current_read__split_discrs36) and
  ((current_read__split_fields42 = current_read__split_fields36) and
  (the_file41 = the_file35)))))))))) and ((state65 = state59) and
  ((s__split_fields42 = s__split_fields36) and
  ((next_read__split_discrs43 = next_read__split_discrs37) and
  ((next_read__split_fields43 = next_read__split_fields37) and
  ((current_pos43 = current_pos37) and ((current_col43 = current_col37) and
  ((current_line43 = current_line37) and
  ((current_read__split_discrs43 = current_read__split_discrs37) and
  ((current_read__split_fields43 = current_read__split_fields37) and
  (the_file42 = the_file36))))))))))) and ((not (state21 = 5)) and
  (((state21 = 6) -> ((((state58 = state21) and
  ((s__split_fields35 = s__split_fields10) and
  ((next_read__split_discrs36 = next_read__split_discrs10) and
  ((next_read__split_fields36 = next_read__split_fields10) and
  ((current_pos36 = current_pos10) and ((current_col36 = current_col10) and
  ((current_line36 = current_line10) and
  ((current_read__split_discrs36 = current_read__split_discrs10) and
  ((current_read__split_fields36 = current_read__split_fields10) and
  (the_file35 = the_file9)))))))))) and ((state59 = state21) and
  ((s__split_fields36 = s__split_fields10) and
  ((next_read__split_discrs37 = next_read__split_discrs10) and
  ((next_read__split_fields37 = next_read__split_fields10) and
  ((current_pos37 = current_pos10) and ((current_col37 = current_col10) and
  ((current_line37 = current_line10) and
  ((current_read__split_discrs37 = current_read__split_discrs10) and
  ((current_read__split_fields37 = current_read__split_fields10) and
  (the_file36 = the_file9))))))))))) and (not ((48 <= c10) and
  (c10 <= 49))))) and ((not (state21 = 6)) -> ((((state58 = state54) and
  ((s__split_fields35 = s__split_fields31) and
  ((next_read__split_discrs36 = next_read__split_discrs32) and
  ((next_read__split_fields36 = next_read__split_fields32) and
  ((current_pos36 = current_pos32) and ((current_col36 = current_col32) and
  ((current_line36 = current_line32) and
  ((current_read__split_discrs36 = current_read__split_discrs32) and
  ((current_read__split_fields36 = current_read__split_fields32) and
  (the_file35 = the_file31)))))))))) and ((state59 = state55) and
  ((s__split_fields36 = s__split_fields32) and
  ((next_read__split_discrs37 = next_read__split_discrs33) and
  ((next_read__split_fields37 = next_read__split_fields33) and
  ((current_pos37 = current_pos33) and ((current_col37 = current_col33) and
  ((current_line37 = current_line33) and
  ((current_read__split_discrs37 = current_read__split_discrs33) and
  ((current_read__split_fields37 = current_read__split_fields33) and
  (the_file36 = the_file32))))))))))) and (((state21 = 7) ->
  ((((state54 = state21) and ((s__split_fields31 = s__split_fields10) and
  ((next_read__split_discrs32 = next_read__split_discrs10) and
  ((next_read__split_fields32 = next_read__split_fields10) and
  ((current_pos32 = current_pos10) and ((current_col32 = current_col10) and
  ((current_line32 = current_line10) and
  ((current_read__split_discrs32 = current_read__split_discrs10) and
  ((current_read__split_fields32 = current_read__split_fields10) and
  (the_file31 = the_file9)))))))))) and ((state55 = state21) and
  ((s__split_fields32 = s__split_fields10) and
  ((next_read__split_discrs33 = next_read__split_discrs10) and
  ((next_read__split_fields33 = next_read__split_fields10) and
  ((current_pos33 = current_pos10) and ((current_col33 = current_col10) and
  ((current_line33 = current_line10) and
  ((current_read__split_discrs33 = current_read__split_discrs10) and
  ((current_read__split_fields33 = current_read__split_fields10) and
  (the_file32 = the_file9))))))))))) and (not ((0 <= c10) and
  (c10 <= 255))))) and ((not (state21 = 7)) -> ((((state54 = state50) and
  ((s__split_fields31 = s__split_fields27) and
  ((next_read__split_discrs32 = next_read__split_discrs28) and
  ((next_read__split_fields32 = next_read__split_fields28) and
  ((current_pos32 = current_pos28) and ((current_col32 = current_col28) and
  ((current_line32 = current_line28) and
  ((current_read__split_discrs32 = current_read__split_discrs28) and
  ((current_read__split_fields32 = current_read__split_fields28) and
  (the_file31 = the_file27)))))))))) and ((state55 = state51) and
  ((s__split_fields32 = s__split_fields28) and
  ((next_read__split_discrs33 = next_read__split_discrs29) and
  ((next_read__split_fields33 = next_read__split_fields29) and
  ((current_pos33 = current_pos29) and ((current_col33 = current_col29) and
  ((current_line33 = current_line29) and
  ((current_read__split_discrs33 = current_read__split_discrs29) and
  ((current_read__split_fields33 = current_read__split_fields29) and
  (the_file32 = the_file28))))))))))) and (((state21 = 0) ->
  ((((state50 = state21) and ((s__split_fields27 = s__split_fields10) and
  ((next_read__split_discrs28 = next_read__split_discrs10) and
  ((next_read__split_fields28 = next_read__split_fields10) and
  ((current_pos28 = current_pos10) and ((current_col28 = current_col10) and
  ((current_line28 = current_line10) and
  ((current_read__split_discrs28 = current_read__split_discrs10) and
  ((current_read__split_fields28 = current_read__split_fields10) and
  (the_file27 = the_file9)))))))))) and ((state51 = state21) and
  ((s__split_fields28 = s__split_fields10) and
  ((next_read__split_discrs29 = next_read__split_discrs10) and
  ((next_read__split_fields29 = next_read__split_fields10) and
  ((current_pos29 = current_pos10) and ((current_col29 = current_col10) and
  ((current_line29 = current_line10) and
  ((current_read__split_discrs29 = current_read__split_discrs10) and
  ((current_read__split_fields29 = current_read__split_fields10) and
  (the_file28 = the_file9))))))))))) and (not (((0 <= c10) and
  ((not (c10 <= 255)) -> (((48 <= c10) and ((not (c10 <= 57)) ->
  ((0 <= c10) and (c10 <= 255)))) or ((not (48 <= c10)) and ((0 <= c10) and
  (c10 <= 255)))))) or ((not (0 <= c10)) and (((48 <= c10) and
  ((not (c10 <= 57)) -> ((0 <= c10) and (c10 <= 255)))) or
  ((not (48 <= c10)) and ((0 <= c10) and (c10 <= 255))))))))) and
  ((not (state21 = 0)) -> ((((state50 = state46) and
  ((s__split_fields27 = s__split_fields23) and
  ((next_read__split_discrs28 = next_read__split_discrs24) and
  ((next_read__split_fields28 = next_read__split_fields24) and
  ((current_pos28 = current_pos24) and ((current_col28 = current_col24) and
  ((current_line28 = current_line24) and
  ((current_read__split_discrs28 = current_read__split_discrs24) and
  ((current_read__split_fields28 = current_read__split_fields24) and
  (the_file27 = the_file23)))))))))) and ((state51 = state47) and
  ((s__split_fields28 = s__split_fields24) and
  ((next_read__split_discrs29 = next_read__split_discrs25) and
  ((next_read__split_fields29 = next_read__split_fields25) and
  ((current_pos29 = current_pos25) and ((current_col29 = current_col25) and
  ((current_line29 = current_line25) and
  ((current_read__split_discrs29 = current_read__split_discrs25) and
  ((current_read__split_fields29 = current_read__split_fields25) and
  (the_file28 = the_file24))))))))))) and (((state21 = 1) ->
  ((((state46 = state34) and ((s__split_fields23 = s__split_fields11) and
  ((next_read__split_discrs24 = next_read__split_discrs11) and
  ((next_read__split_fields24 = next_read__split_fields11) and
  ((current_pos24 = current_pos11) and ((current_col24 = current_col11) and
  ((current_line24 = current_line11) and
  ((current_read__split_discrs24 = current_read__split_discrs11) and
  ((current_read__split_fields24 = current_read__split_fields11) and
  (the_file23 = the_file10)))))))))) and ((state47 = state34) and
  ((s__split_fields24 = s__split_fields11) and
  ((next_read__split_discrs25 = next_read__split_discrs11) and
  ((next_read__split_fields25 = next_read__split_fields11) and
  ((current_pos25 = current_pos11) and ((current_col25 = current_col11) and
  ((current_line25 = current_line11) and
  ((current_read__split_discrs25 = current_read__split_discrs11) and
  ((current_read__split_fields25 = current_read__split_fields11) and
  (the_file24 = the_file10))))))))))) and ((c10 = 124) and
  (((((local_invariant({ rec__file_io__read_result__c =
  current_read__split_fields11 }, { rec__file_io__read_result__status =
  current_read__split_discrs11 }, { rec__file_io__read_result__c =
  next_read__split_fields11 }, { rec__file_io__read_result__status =
  next_read__split_discrs11 }) = true) and (length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields11 } }) = (length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields10 } }) + 1))) and (current_pos10 <= current_pos11)) and
  ((in_range2(current_line11) and in_range4(current_col11)) and
  in_range4(current_pos11))) and ((result19 = state21) and
  (state34 = 2)))))) and ((not (state21 = 1)) -> ((((state46 = state37) and
  ((s__split_fields23 = s__split_fields14) and
  ((next_read__split_discrs24 = next_read__split_discrs15) and
  ((next_read__split_fields24 = next_read__split_fields15) and
  ((current_pos24 = current_pos15) and ((current_col24 = current_col15) and
  ((current_line24 = current_line15) and
  ((current_read__split_discrs24 = current_read__split_discrs15) and
  ((current_read__split_fields24 = current_read__split_fields15) and
  (the_file23 = the_file14)))))))))) and ((state47 = state37) and
  ((s__split_fields24 = s__split_fields14) and
  ((next_read__split_discrs25 = next_read__split_discrs15) and
  ((next_read__split_fields25 = next_read__split_fields15) and
  ((current_pos25 = current_pos15) and ((current_col25 = current_col15) and
  ((current_line25 = current_line15) and
  ((current_read__split_discrs25 = current_read__split_discrs15) and
  ((current_read__split_fields25 = current_read__split_fields15) and
  (the_file24 = the_file14))))))))))) and ((state21 = 8) and ((c10 = 34) and
  ((((to_rep3(next_read__split_discrs10) = 0) ->
  (((to_rep(next_read__split_fields10) = 34) -> (result20 = true)) and
  ((not (to_rep(next_read__split_fields10) = 34)) ->
  (result20 = false)))) and
  ((not (to_rep3(next_read__split_discrs10) = 0)) -> (result20 = false))) and
  ((not (result20 = true)) and (((((local_invariant({
  rec__file_io__read_result__c = current_read__split_fields15 }, {
  rec__file_io__read_result__status = current_read__split_discrs15 }, {
  rec__file_io__read_result__c = next_read__split_fields15 }, {
  rec__file_io__read_result__status = next_read__split_discrs15
  }) = true) and (length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields14 } }) = (length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields10 } }) + 1))) and (current_pos10 <= current_pos15)) and
  ((in_range2(current_line15) and in_range4(current_col15)) and
  in_range4(current_pos15))) and ((result21 = state21) and
  (state37 = 9))))))))))))))))))))))))))) or ((((state21 = 3) ->
  (((((48 <= c10) and (c10 <= 57)) -> ((state25 = state21) and
  (state26 = state21))) and ((not ((48 <= c10) and (c10 <= 57))) ->
  (((c10 = 46) and (((result15 = state21) and (state22 = 4)) and
  ((state23 = state22) and (state24 = state22)))) and
  ((state25 = state23) and (state26 = state24))))) and
  (((state66 = state25) and ((s__split_fields43 = s__split_fields10) and
  ((next_read__split_discrs44 = next_read__split_discrs10) and
  ((next_read__split_fields44 = next_read__split_fields10) and
  ((current_pos44 = current_pos10) and ((current_col44 = current_col10) and
  ((current_line44 = current_line10) and
  ((current_read__split_discrs44 = current_read__split_discrs10) and
  ((current_read__split_fields44 = current_read__split_fields10) and
  (the_file43 = the_file9)))))))))) and ((state67 = state26) and
  ((s__split_fields44 = s__split_fields10) and
  ((next_read__split_discrs45 = next_read__split_discrs10) and
  ((next_read__split_fields45 = next_read__split_fields10) and
  ((current_pos45 = current_pos10) and ((current_col45 = current_col10) and
  ((current_line45 = current_line10) and
  ((current_read__split_discrs45 = current_read__split_discrs10) and
  ((current_read__split_fields45 = current_read__split_fields10) and
  (the_file44 = the_file9))))))))))))) and ((not (state21 = 3)) ->
  ((((state21 = 4) -> (((48 <= c10) and (c10 <= 57)) and
  (((state62 = state21) and ((s__split_fields39 = s__split_fields10) and
  ((next_read__split_discrs40 = next_read__split_discrs10) and
  ((next_read__split_fields40 = next_read__split_fields10) and
  ((current_pos40 = current_pos10) and ((current_col40 = current_col10) and
  ((current_line40 = current_line10) and
  ((current_read__split_discrs40 = current_read__split_discrs10) and
  ((current_read__split_fields40 = current_read__split_fields10) and
  (the_file39 = the_file9)))))))))) and ((state63 = state21) and
  ((s__split_fields40 = s__split_fields10) and
  ((next_read__split_discrs41 = next_read__split_discrs10) and
  ((next_read__split_fields41 = next_read__split_fields10) and
  ((current_pos41 = current_pos10) and ((current_col41 = current_col10) and
  ((current_line41 = current_line10) and
  ((current_read__split_discrs41 = current_read__split_discrs10) and
  ((current_read__split_fields41 = current_read__split_fields10) and
  (the_file40 = the_file9))))))))))))) and ((not (state21 = 4)) ->
  ((((state21 = 5) -> ((((c10 = 98) -> (((result16 = state21) and
  (state27 = 6)) and ((state32 = state27) and (state33 = state27)))) and
  ((not (c10 = 98)) -> ((((c10 = 120) -> (((result17 = state21) and
  (state28 = 7)) and ((state30 = state28) and (state31 = state28)))) and
  ((not (c10 = 120)) -> (((result18 = state21) and (state29 = 7)) and
  ((state30 = state29) and (state31 = state29))))) and
  ((state32 = state30) and (state33 = state31))))) and
  (((state60 = state32) and ((s__split_fields37 = s__split_fields10) and
  ((next_read__split_discrs38 = next_read__split_discrs10) and
  ((next_read__split_fields38 = next_read__split_fields10) and
  ((current_pos38 = current_pos10) and ((current_col38 = current_col10) and
  ((current_line38 = current_line10) and
  ((current_read__split_discrs38 = current_read__split_discrs10) and
  ((current_read__split_fields38 = current_read__split_fields10) and
  (the_file37 = the_file9)))))))))) and ((state61 = state33) and
  ((s__split_fields38 = s__split_fields10) and
  ((next_read__split_discrs39 = next_read__split_discrs10) and
  ((next_read__split_fields39 = next_read__split_fields10) and
  ((current_pos39 = current_pos10) and ((current_col39 = current_col10) and
  ((current_line39 = current_line10) and
  ((current_read__split_discrs39 = current_read__split_discrs10) and
  ((current_read__split_fields39 = current_read__split_fields10) and
  (the_file38 = the_file9))))))))))))) and ((not (state21 = 5)) ->
  ((((state21 = 6) -> (((48 <= c10) and (c10 <= 49)) and
  (((state56 = state21) and ((s__split_fields33 = s__split_fields10) and
  ((next_read__split_discrs34 = next_read__split_discrs10) and
  ((next_read__split_fields34 = next_read__split_fields10) and
  ((current_pos34 = current_pos10) and ((current_col34 = current_col10) and
  ((current_line34 = current_line10) and
  ((current_read__split_discrs34 = current_read__split_discrs10) and
  ((current_read__split_fields34 = current_read__split_fields10) and
  (the_file33 = the_file9)))))))))) and ((state57 = state21) and
  ((s__split_fields34 = s__split_fields10) and
  ((next_read__split_discrs35 = next_read__split_discrs10) and
  ((next_read__split_fields35 = next_read__split_fields10) and
  ((current_pos35 = current_pos10) and ((current_col35 = current_col10) and
  ((current_line35 = current_line10) and
  ((current_read__split_discrs35 = current_read__split_discrs10) and
  ((current_read__split_fields35 = current_read__split_fields10) and
  (the_file34 = the_file9))))))))))))) and ((not (state21 = 6)) ->
  ((((state21 = 7) -> (((0 <= c10) and (c10 <= 255)) and
  (((state52 = state21) and ((s__split_fields29 = s__split_fields10) and
  ((next_read__split_discrs30 = next_read__split_discrs10) and
  ((next_read__split_fields30 = next_read__split_fields10) and
  ((current_pos30 = current_pos10) and ((current_col30 = current_col10) and
  ((current_line30 = current_line10) and
  ((current_read__split_discrs30 = current_read__split_discrs10) and
  ((current_read__split_fields30 = current_read__split_fields10) and
  (the_file29 = the_file9)))))))))) and ((state53 = state21) and
  ((s__split_fields30 = s__split_fields10) and
  ((next_read__split_discrs31 = next_read__split_discrs10) and
  ((next_read__split_fields31 = next_read__split_fields10) and
  ((current_pos31 = current_pos10) and ((current_col31 = current_col10) and
  ((current_line31 = current_line10) and
  ((current_read__split_discrs31 = current_read__split_discrs10) and
  ((current_read__split_fields31 = current_read__split_fields10) and
  (the_file30 = the_file9))))))))))))) and ((not (state21 = 7)) ->
  ((((state21 = 0) -> ((((0 <= c10) -> ((not (c10 <= 255)) ->
  (((48 <= c10) -> ((not (c10 <= 57)) -> ((0 <= c10) and (c10 <= 255)))) and
  ((not (48 <= c10)) -> ((0 <= c10) and (c10 <= 255)))))) and
  ((not (0 <= c10)) -> (((48 <= c10) -> ((not (c10 <= 57)) -> ((0 <= c10) and
  (c10 <= 255)))) and ((not (48 <= c10)) -> ((0 <= c10) and
  (c10 <= 255)))))) and (((state48 = state21) and
  ((s__split_fields25 = s__split_fields10) and
  ((next_read__split_discrs26 = next_read__split_discrs10) and
  ((next_read__split_fields26 = next_read__split_fields10) and
  ((current_pos26 = current_pos10) and ((current_col26 = current_col10) and
  ((current_line26 = current_line10) and
  ((current_read__split_discrs26 = current_read__split_discrs10) and
  ((current_read__split_fields26 = current_read__split_fields10) and
  (the_file25 = the_file9)))))))))) and ((state49 = state21) and
  ((s__split_fields26 = s__split_fields10) and
  ((next_read__split_discrs27 = next_read__split_discrs10) and
  ((next_read__split_fields27 = next_read__split_fields10) and
  ((current_pos27 = current_pos10) and ((current_col27 = current_col10) and
  ((current_line27 = current_line10) and
  ((current_read__split_discrs27 = current_read__split_discrs10) and
  ((current_read__split_fields27 = current_read__split_fields10) and
  (the_file26 = the_file9))))))))))))) and ((not (state21 = 0)) ->
  ((((state21 = 1) -> (((not (c10 = 124)) and ((not (c10 = 124)) ->
  (((state35 = state21) and ((s__split_fields12 = s__split_fields10) and
  ((next_read__split_discrs12 = next_read__split_discrs10) and
  ((next_read__split_fields12 = next_read__split_fields10) and
  ((current_pos12 = current_pos10) and ((current_col12 = current_col10) and
  ((current_line12 = current_line10) and
  ((current_read__split_discrs12 = current_read__split_discrs10) and
  ((current_read__split_fields12 = current_read__split_fields10) and
  (the_file11 = the_file9)))))))))) and ((state36 = state21) and
  ((s__split_fields13 = s__split_fields10) and
  ((next_read__split_discrs13 = next_read__split_discrs10) and
  ((next_read__split_fields13 = next_read__split_fields10) and
  ((current_pos13 = current_pos10) and ((current_col13 = current_col10) and
  ((current_line13 = current_line10) and
  ((current_read__split_discrs13 = current_read__split_discrs10) and
  ((current_read__split_fields13 = current_read__split_fields10) and
  (the_file12 = the_file9))))))))))))) and (((state44 = state35) and
  ((s__split_fields21 = s__split_fields12) and
  ((next_read__split_discrs22 = next_read__split_discrs12) and
  ((next_read__split_fields22 = next_read__split_fields12) and
  ((current_pos22 = current_pos12) and ((current_col22 = current_col12) and
  ((current_line22 = current_line12) and
  ((current_read__split_discrs22 = current_read__split_discrs12) and
  ((current_read__split_fields22 = current_read__split_fields12) and
  (the_file21 = the_file11)))))))))) and ((state45 = state36) and
  ((s__split_fields22 = s__split_fields13) and
  ((next_read__split_discrs23 = next_read__split_discrs13) and
  ((next_read__split_fields23 = next_read__split_fields13) and
  ((current_pos23 = current_pos13) and ((current_col23 = current_col13) and
  ((current_line23 = current_line13) and
  ((current_read__split_discrs23 = current_read__split_discrs13) and
  ((current_read__split_fields23 = current_read__split_fields13) and
  (the_file22 = the_file12))))))))))))) and ((not (state21 = 1)) ->
  ((((state21 = 8) -> ((((c10 = 34) ->
  (((((to_rep3(next_read__split_discrs10) = 0) ->
  (((to_rep(next_read__split_fields10) = 34) -> (result20 = true)) and
  ((not (to_rep(next_read__split_fields10) = 34)) ->
  (result20 = false)))) and
  ((not (to_rep3(next_read__split_discrs10) = 0)) -> (result20 = false))) and
  (((result20 = true) -> (((((local_invariant({
  rec__file_io__read_result__c = current_read__split_fields14 }, {
  rec__file_io__read_result__status = current_read__split_discrs14 }, {
  rec__file_io__read_result__c = next_read__split_fields14 }, {
  rec__file_io__read_result__status = next_read__split_discrs14
  }) = true) and (bool_eq10({ us_split_discrs1 = {
  rec__file_io__read_result__status = current_read__split_discrs14 };
  us_split_fields1 = { rec__file_io__read_result__c =
  current_read__split_fields14 }; attr__constrained =
  current_read__attr__constrained }, { us_split_discrs1 = {
  rec__file_io__read_result__status = next_read__split_discrs10 };
  us_split_fields1 = { rec__file_io__read_result__c =
  next_read__split_fields10 }; attr__constrained =
  next_read__attr__constrained }) = true)) and
  (current_pos10 <= current_pos14)) and ((in_range2(current_line14) and
  in_range4(current_col14)) and in_range4(current_pos14))) and
  (((state38 = state21) and ((s__split_fields15 = s__split_fields10) and
  ((next_read__split_discrs16 = next_read__split_discrs14) and
  ((next_read__split_fields16 = next_read__split_fields14) and
  ((current_pos16 = current_pos14) and ((current_col16 = current_col14) and
  ((current_line16 = current_line14) and
  ((current_read__split_discrs16 = current_read__split_discrs14) and
  ((current_read__split_fields16 = current_read__split_fields14) and
  (the_file15 = the_file13)))))))))) and ((state39 = state21) and
  ((s__split_fields16 = s__split_fields10) and
  ((next_read__split_discrs17 = next_read__split_discrs14) and
  ((next_read__split_fields17 = next_read__split_fields14) and
  ((current_pos17 = current_pos14) and ((current_col17 = current_col14) and
  ((current_line17 = current_line14) and
  ((current_read__split_discrs17 = current_read__split_discrs14) and
  ((current_read__split_fields17 = current_read__split_fields14) and
  (the_file16 = the_file13))))))))))))) and (result20 = true))) and
  (((state40 = state38) and ((s__split_fields17 = s__split_fields15) and
  ((next_read__split_discrs18 = next_read__split_discrs16) and
  ((next_read__split_fields18 = next_read__split_fields16) and
  ((current_pos18 = current_pos16) and ((current_col18 = current_col16) and
  ((current_line18 = current_line16) and
  ((current_read__split_discrs18 = current_read__split_discrs16) and
  ((current_read__split_fields18 = current_read__split_fields16) and
  (the_file17 = the_file15)))))))))) and ((state41 = state39) and
  ((s__split_fields18 = s__split_fields16) and
  ((next_read__split_discrs19 = next_read__split_discrs17) and
  ((next_read__split_fields19 = next_read__split_fields17) and
  ((current_pos19 = current_pos17) and ((current_col19 = current_col17) and
  ((current_line19 = current_line17) and
  ((current_read__split_discrs19 = current_read__split_discrs17) and
  ((current_read__split_fields19 = current_read__split_fields17) and
  (the_file18 = the_file16))))))))))))) and ((not (c10 = 34)) ->
  (((state40 = state21) and ((s__split_fields17 = s__split_fields10) and
  ((next_read__split_discrs18 = next_read__split_discrs10) and
  ((next_read__split_fields18 = next_read__split_fields10) and
  ((current_pos18 = current_pos10) and ((current_col18 = current_col10) and
  ((current_line18 = current_line10) and
  ((current_read__split_discrs18 = current_read__split_discrs10) and
  ((current_read__split_fields18 = current_read__split_fields10) and
  (the_file17 = the_file9)))))))))) and ((state41 = state21) and
  ((s__split_fields18 = s__split_fields10) and
  ((next_read__split_discrs19 = next_read__split_discrs10) and
  ((next_read__split_fields19 = next_read__split_fields10) and
  ((current_pos19 = current_pos10) and ((current_col19 = current_col10) and
  ((current_line19 = current_line10) and
  ((current_read__split_discrs19 = current_read__split_discrs10) and
  ((current_read__split_fields19 = current_read__split_fields10) and
  (the_file18 = the_file9))))))))))))) and (((state42 = state40) and
  ((s__split_fields19 = s__split_fields17) and
  ((next_read__split_discrs20 = next_read__split_discrs18) and
  ((next_read__split_fields20 = next_read__split_fields18) and
  ((current_pos20 = current_pos18) and ((current_col20 = current_col18) and
  ((current_line20 = current_line18) and
  ((current_read__split_discrs20 = current_read__split_discrs18) and
  ((current_read__split_fields20 = current_read__split_fields18) and
  (the_file19 = the_file17)))))))))) and ((state43 = state41) and
  ((s__split_fields20 = s__split_fields18) and
  ((next_read__split_discrs21 = next_read__split_discrs19) and
  ((next_read__split_fields21 = next_read__split_fields19) and
  ((current_pos21 = current_pos19) and ((current_col21 = current_col19) and
  ((current_line21 = current_line19) and
  ((current_read__split_discrs21 = current_read__split_discrs19) and
  ((current_read__split_fields21 = current_read__split_fields19) and
  (the_file20 = the_file18))))))))))))) and (state21 = 8)) and
  (((state44 = state42) and ((s__split_fields21 = s__split_fields19) and
  ((next_read__split_discrs22 = next_read__split_discrs20) and
  ((next_read__split_fields22 = next_read__split_fields20) and
  ((current_pos22 = current_pos20) and ((current_col22 = current_col20) and
  ((current_line22 = current_line20) and
  ((current_read__split_discrs22 = current_read__split_discrs20) and
  ((current_read__split_fields22 = current_read__split_fields20) and
  (the_file21 = the_file19)))))))))) and ((state45 = state43) and
  ((s__split_fields22 = s__split_fields20) and
  ((next_read__split_discrs23 = next_read__split_discrs21) and
  ((next_read__split_fields23 = next_read__split_fields21) and
  ((current_pos23 = current_pos21) and ((current_col23 = current_col21) and
  ((current_line23 = current_line21) and
  ((current_read__split_discrs23 = current_read__split_discrs21) and
  ((current_read__split_fields23 = current_read__split_fields21) and
  (the_file22 = the_file20)))))))))))))) and (((state48 = state44) and
  ((s__split_fields25 = s__split_fields21) and
  ((next_read__split_discrs26 = next_read__split_discrs22) and
  ((next_read__split_fields26 = next_read__split_fields22) and
  ((current_pos26 = current_pos22) and ((current_col26 = current_col22) and
  ((current_line26 = current_line22) and
  ((current_read__split_discrs26 = current_read__split_discrs22) and
  ((current_read__split_fields26 = current_read__split_fields22) and
  (the_file25 = the_file21)))))))))) and ((state49 = state45) and
  ((s__split_fields26 = s__split_fields22) and
  ((next_read__split_discrs27 = next_read__split_discrs23) and
  ((next_read__split_fields27 = next_read__split_fields23) and
  ((current_pos27 = current_pos23) and ((current_col27 = current_col23) and
  ((current_line27 = current_line23) and
  ((current_read__split_discrs27 = current_read__split_discrs23) and
  ((current_read__split_fields27 = current_read__split_fields23) and
  (the_file26 = the_file22)))))))))))))) and (((state52 = state48) and
  ((s__split_fields29 = s__split_fields25) and
  ((next_read__split_discrs30 = next_read__split_discrs26) and
  ((next_read__split_fields30 = next_read__split_fields26) and
  ((current_pos30 = current_pos26) and ((current_col30 = current_col26) and
  ((current_line30 = current_line26) and
  ((current_read__split_discrs30 = current_read__split_discrs26) and
  ((current_read__split_fields30 = current_read__split_fields26) and
  (the_file29 = the_file25)))))))))) and ((state53 = state49) and
  ((s__split_fields30 = s__split_fields26) and
  ((next_read__split_discrs31 = next_read__split_discrs27) and
  ((next_read__split_fields31 = next_read__split_fields27) and
  ((current_pos31 = current_pos27) and ((current_col31 = current_col27) and
  ((current_line31 = current_line27) and
  ((current_read__split_discrs31 = current_read__split_discrs27) and
  ((current_read__split_fields31 = current_read__split_fields27) and
  (the_file30 = the_file26)))))))))))))) and (((state56 = state52) and
  ((s__split_fields33 = s__split_fields29) and
  ((next_read__split_discrs34 = next_read__split_discrs30) and
  ((next_read__split_fields34 = next_read__split_fields30) and
  ((current_pos34 = current_pos30) and ((current_col34 = current_col30) and
  ((current_line34 = current_line30) and
  ((current_read__split_discrs34 = current_read__split_discrs30) and
  ((current_read__split_fields34 = current_read__split_fields30) and
  (the_file33 = the_file29)))))))))) and ((state57 = state53) and
  ((s__split_fields34 = s__split_fields30) and
  ((next_read__split_discrs35 = next_read__split_discrs31) and
  ((next_read__split_fields35 = next_read__split_fields31) and
  ((current_pos35 = current_pos31) and ((current_col35 = current_col31) and
  ((current_line35 = current_line31) and
  ((current_read__split_discrs35 = current_read__split_discrs31) and
  ((current_read__split_fields35 = current_read__split_fields31) and
  (the_file34 = the_file30)))))))))))))) and (((state60 = state56) and
  ((s__split_fields37 = s__split_fields33) and
  ((next_read__split_discrs38 = next_read__split_discrs34) and
  ((next_read__split_fields38 = next_read__split_fields34) and
  ((current_pos38 = current_pos34) and ((current_col38 = current_col34) and
  ((current_line38 = current_line34) and
  ((current_read__split_discrs38 = current_read__split_discrs34) and
  ((current_read__split_fields38 = current_read__split_fields34) and
  (the_file37 = the_file33)))))))))) and ((state61 = state57) and
  ((s__split_fields38 = s__split_fields34) and
  ((next_read__split_discrs39 = next_read__split_discrs35) and
  ((next_read__split_fields39 = next_read__split_fields35) and
  ((current_pos39 = current_pos35) and ((current_col39 = current_col35) and
  ((current_line39 = current_line35) and
  ((current_read__split_discrs39 = current_read__split_discrs35) and
  ((current_read__split_fields39 = current_read__split_fields35) and
  (the_file38 = the_file34)))))))))))))) and (((state62 = state60) and
  ((s__split_fields39 = s__split_fields37) and
  ((next_read__split_discrs40 = next_read__split_discrs38) and
  ((next_read__split_fields40 = next_read__split_fields38) and
  ((current_pos40 = current_pos38) and ((current_col40 = current_col38) and
  ((current_line40 = current_line38) and
  ((current_read__split_discrs40 = current_read__split_discrs38) and
  ((current_read__split_fields40 = current_read__split_fields38) and
  (the_file39 = the_file37)))))))))) and ((state63 = state61) and
  ((s__split_fields40 = s__split_fields38) and
  ((next_read__split_discrs41 = next_read__split_discrs39) and
  ((next_read__split_fields41 = next_read__split_fields39) and
  ((current_pos41 = current_pos39) and ((current_col41 = current_col39) and
  ((current_line41 = current_line39) and
  ((current_read__split_discrs41 = current_read__split_discrs39) and
  ((current_read__split_fields41 = current_read__split_fields39) and
  (the_file40 = the_file38)))))))))))))) and (((state66 = state62) and
  ((s__split_fields43 = s__split_fields39) and
  ((next_read__split_discrs44 = next_read__split_discrs40) and
  ((next_read__split_fields44 = next_read__split_fields40) and
  ((current_pos44 = current_pos40) and ((current_col44 = current_col40) and
  ((current_line44 = current_line40) and
  ((current_read__split_discrs44 = current_read__split_discrs40) and
  ((current_read__split_fields44 = current_read__split_fields40) and
  (the_file43 = the_file39)))))))))) and ((state67 = state63) and
  ((s__split_fields44 = s__split_fields40) and
  ((next_read__split_discrs45 = next_read__split_discrs41) and
  ((next_read__split_fields45 = next_read__split_fields41) and
  ((current_pos45 = current_pos41) and ((current_col45 = current_col41) and
  ((current_line45 = current_line41) and
  ((current_read__split_discrs45 = current_read__split_discrs41) and
  ((current_read__split_fields45 = current_read__split_fields41) and
  (the_file44 = the_file40)))))))))))))) and ((((state70 = state66) and
  ((s__split_fields48 = s__split_fields47) and
  ((next_read__split_discrs49 = next_read__split_discrs48) and
  ((next_read__split_fields49 = next_read__split_fields48) and
  ((current_pos49 = current_pos48) and ((current_col49 = current_col48) and
  ((current_line49 = current_line48) and
  ((current_read__split_discrs49 = current_read__split_discrs48) and
  ((current_read__split_fields49 = current_read__split_fields48) and
  (the_file48 = the_file47)))))))))) and ((state71 = state67) and
  ((s__split_fields49 = s__split_fields47) and
  ((next_read__split_discrs50 = next_read__split_discrs48) and
  ((next_read__split_fields50 = next_read__split_fields48) and
  ((current_pos50 = current_pos48) and ((current_col50 = current_col48) and
  ((current_line50 = current_line48) and
  ((current_read__split_discrs50 = current_read__split_discrs48) and
  ((current_read__split_fields50 = current_read__split_fields48) and
  (the_file49 = the_file47))))))))))) and (((((local_invariant({
  rec__file_io__read_result__c = current_read__split_fields48 }, {
  rec__file_io__read_result__status = current_read__split_discrs48 }, {
  rec__file_io__read_result__c = next_read__split_fields48 }, {
  rec__file_io__read_result__status = next_read__split_discrs48
  }) = true) and (length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields47 } }) = (length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields43 } }) + 1))) and (current_pos44 <= current_pos48)) and
  ((in_range2(current_line48) and in_range4(current_col48)) and
  in_range4(current_pos48))) and
  (not (to_rep3(current_read__split_discrs48) = 0)))))))))))))))))) and
  (((c16 = c10) and ((state76 = state70) and
  ((s__split_fields54 = s__split_fields48) and
  ((next_read__split_discrs55 = next_read__split_discrs49) and
  ((next_read__split_fields55 = next_read__split_fields49) and
  ((current_pos55 = current_pos49) and ((current_col55 = current_col49) and
  ((current_line55 = current_line49) and
  ((current_read__split_discrs55 = current_read__split_discrs49) and
  ((current_read__split_fields55 = current_read__split_fields49) and
  (the_file54 = the_file48))))))))))) and ((c17 = c10) and
  ((state77 = state71) and ((s__split_fields55 = s__split_fields49) and
  ((next_read__split_discrs56 = next_read__split_discrs50) and
  ((next_read__split_fields56 = next_read__split_fields50) and
  ((current_pos56 = current_pos50) and ((current_col56 = current_col50) and
  ((current_line56 = current_line50) and
  ((current_read__split_discrs56 = current_read__split_discrs50) and
  ((current_read__split_fields56 = current_read__split_fields50) and
  (the_file55 = the_file49))))))))))))))

axiom H143 : ((to_rep3(current_read__split_discrs8) = 0) -> (c18 = c16))

axiom H144 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (state78 = state76))

axiom H145 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (s__split_fields56 = s__split_fields54))

axiom H146 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (next_read__split_discrs57 = next_read__split_discrs55))

axiom H147 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (next_read__split_fields57 = next_read__split_fields55))

axiom H148 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (current_pos57 = current_pos55))

axiom H149 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (current_col57 = current_col55))

axiom H150 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (current_line57 = current_line55))

axiom H151 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (current_read__split_discrs57 = current_read__split_discrs55))

axiom H152 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (current_read__split_fields57 = current_read__split_fields55))

axiom H153 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (the_file56 = the_file54))

axiom H154 : ((to_rep3(current_read__split_discrs8) = 0) -> (c19 = c17))

axiom H155 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (state79 = state77))

axiom H156 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (s__split_fields57 = s__split_fields55))

axiom H157 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (next_read__split_discrs58 = next_read__split_discrs56))

axiom H158 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (next_read__split_fields58 = next_read__split_fields56))

axiom H159 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (current_pos58 = current_pos56))

axiom H160 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (current_col58 = current_col56))

axiom H161 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (current_line58 = current_line56))

axiom H162 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (current_read__split_discrs58 = current_read__split_discrs56))

axiom H163 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (current_read__split_fields58 = current_read__split_fields56))

axiom H164 : ((to_rep3(current_read__split_discrs8) = 0) ->
  (the_file57 = the_file55))

axiom H165 : ((not (to_rep3(current_read__split_discrs8) = 0)) -> (c18 = c7))

axiom H166 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (state78 = state19))

axiom H167 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (s__split_fields56 = s__split_fields8))

axiom H168 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (next_read__split_discrs57 = next_read__split_discrs8))

axiom H169 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (next_read__split_fields57 = next_read__split_fields8))

axiom H170 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (current_pos57 = current_pos8))

axiom H171 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (current_col57 = current_col8))

axiom H172 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (current_line57 = current_line8))

axiom H173 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (current_read__split_discrs57 = current_read__split_discrs8))

axiom H174 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (current_read__split_fields57 = current_read__split_fields8))

axiom H175 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (the_file56 = the_file7))

axiom H176 : ((not (to_rep3(current_read__split_discrs8) = 0)) -> (c19 = c8))

axiom H177 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (state79 = state20))

axiom H178 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (s__split_fields57 = s__split_fields9))

axiom H179 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (next_read__split_discrs58 = next_read__split_discrs9))

axiom H180 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (next_read__split_fields58 = next_read__split_fields9))

axiom H181 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (current_pos58 = current_pos9))

axiom H182 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (current_col58 = current_col9))

axiom H183 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (current_line58 = current_line9))

axiom H184 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (current_read__split_discrs58 = current_read__split_discrs9))

axiom H185 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (current_read__split_fields58 = current_read__split_fields9))

axiom H186 : ((not (to_rep3(current_read__split_discrs8) = 0)) ->
  (the_file57 = the_file8))

axiom H187 : (((state78 = 2) or ((state78 = 7) or (state78 = 6))) ->
  (2 <= length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields56 } })))

axiom H188 : (({ elts = lexer__read_token__B_6__tmp__assume; rt =
  lexer__read_token__B_6__tmp__assume1 } = to_string1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields56 } })) and (dynamic_property(1, 2147483647,
  to_rep1(first(lexer__read_token__B_6__tmp__assume1)),
  to_rep1(last(lexer__read_token__B_6__tmp__assume1))) and ((length({ elts =
  lexer__read_token__B_6__tmp__assume; rt =
  lexer__read_token__B_6__tmp__assume1 }) = length1({ us_split_discrs3 = {
  rec__unbounded_strings__char_vectors__vector__capacity = s__split_discrs };
  us_split_fields3 = { rec__unbounded_strings__char_vectors__vector =
  s__split_fields56 } })) and
  (to_rep1(first(lexer__read_token__B_6__tmp__assume1)) = 1))))

axiom H189 : ((lexer__read_token__B_6__tmp__assume = tmp) and
  (lexer__read_token__B_6__tmp__assume1 = tmp1))

axiom H190 : dynamic_property(1, 2147483647, to_rep1(first(tmp1)),
  to_rep1(last(tmp1)))

axiom H191 : (((not (state78 = 0)) -> ((not (state78 = 1)) ->
  (state78 = 2))) -> (o26 = 3))

axiom H192 : ((not ((not (state78 = 0)) -> ((not (state78 = 1)) ->
  (state78 = 2)))) -> ((state78 = 3) -> (o26 = 4)))

axiom H193 : ((not ((not (state78 = 0)) -> ((not (state78 = 1)) ->
  (state78 = 2)))) -> ((not (state78 = 3)) -> ((state78 = 4) -> (o26 = 5))))

axiom H194 : ((not ((not (state78 = 0)) -> ((not (state78 = 1)) ->
  (state78 = 2)))) -> ((not (state78 = 3)) -> ((not (state78 = 4)) ->
  (((not (state78 = 5)) -> (state78 = 7)) -> (o26 = 7)))))

axiom H195 : ((not ((not (state78 = 0)) -> ((not (state78 = 1)) ->
  (state78 = 2)))) -> ((not (state78 = 3)) -> ((not (state78 = 4)) ->
  ((not ((not (state78 = 5)) -> (state78 = 7))) -> ((state78 = 6) ->
  (o26 = 6))))))

axiom H196 : ((not ((not (state78 = 0)) -> ((not (state78 = 1)) ->
  (state78 = 2)))) -> ((not (state78 = 3)) -> ((not (state78 = 4)) ->
  ((not ((not (state78 = 5)) -> (state78 = 7))) -> ((not (state78 = 6)) ->
  (o26 = 8))))))

axiom H197 : (result23 = k)

axiom H198 : (k2 = o26)

axiom H199 : in_range10(k2)

axiom H200 : (((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4))) -> ((lexer__read_token__B_6__str__assume = tmp) and
  (lexer__read_token__B_6__str__assume1 = tmp1)))

axiom H201 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> (((not (state78 = 1)) -> (state78 = 8)) ->
  ((temp___864 = (to_rep1(first(tmp1)) + 1)) and
  in_range1((to_rep1(first(tmp1)) + 1)))))

axiom H202 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> (((not (state78 = 1)) -> (state78 = 8)) ->
  ((temp___864 <= to_rep1(last(tmp1))) ->
  (((to_rep1(first(tmp1)) <= temp___864) and
  (temp___864 <= to_rep1(last(tmp1)))) and
  ((to_rep1(first(tmp1)) <= to_rep1(last(tmp1))) and
  (to_rep1(last(tmp1)) <= to_rep1(last(tmp1))))))))

axiom H203 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> (((not (state78 = 1)) -> (state78 = 8)) ->
  (o27 = tmp)))

axiom H204 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> (((not (state78 = 1)) -> (state78 = 8)) ->
  ((temp___866 = o27) and (temp___8661 = mk1(temp___864,
  to_rep1(last(tmp1)))))))

axiom H205 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> (((not (state78 = 1)) -> (state78 = 8)) ->
  ((lexer__read_token__B_6__str__assume = temp___866) and
  (lexer__read_token__B_6__str__assume1 = mk(to_rep1(first2(temp___8661)),
  to_rep1(last2(temp___8661)))))))

axiom H206 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> ((not ((not (state78 = 1)) -> (state78 = 8))) ->
  (((not (state78 = 2)) -> (state78 = 9)) ->
  ((temp___868 = (to_rep1(last(tmp1)) - 1)) and
  in_range1((to_rep1(last(tmp1)) - 1))))))

axiom H207 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> ((not ((not (state78 = 1)) -> (state78 = 8))) ->
  (((not (state78 = 2)) -> (state78 = 9)) ->
  ((temp___867 = (to_rep1(first(tmp1)) + 1)) and
  in_range1((to_rep1(first(tmp1)) + 1))))))

axiom H208 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> ((not ((not (state78 = 1)) -> (state78 = 8))) ->
  (((not (state78 = 2)) -> (state78 = 9)) -> ((temp___867 <= temp___868) ->
  (((to_rep1(first(tmp1)) <= temp___867) and
  (temp___867 <= to_rep1(last(tmp1)))) and
  ((to_rep1(first(tmp1)) <= temp___868) and
  (temp___868 <= to_rep1(last(tmp1)))))))))

axiom H209 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> ((not ((not (state78 = 1)) -> (state78 = 8))) ->
  (((not (state78 = 2)) -> (state78 = 9)) -> (o28 = tmp))))

axiom H210 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> ((not ((not (state78 = 1)) -> (state78 = 8))) ->
  (((not (state78 = 2)) -> (state78 = 9)) -> ((temp___869 = o28) and
  (temp___8691 = mk2(temp___867, temp___868))))))

axiom H211 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> ((not ((not (state78 = 1)) -> (state78 = 8))) ->
  (((not (state78 = 2)) -> (state78 = 9)) ->
  ((lexer__read_token__B_6__str__assume = temp___869) and
  (lexer__read_token__B_6__str__assume1 = mk(to_rep1(first4(temp___8691)),
  to_rep1(last4(temp___8691))))))))

axiom H212 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> ((not ((not (state78 = 1)) -> (state78 = 8))) ->
  ((not ((not (state78 = 2)) -> (state78 = 9))) -> ((state78 = 5) ->
  ((lexer__read_token__B_6__str__assume = temp___String_Literal_870(void)) and
  (lexer__read_token__B_6__str__assume1 = mk(1, 0)))))))

axiom H213 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> ((not ((not (state78 = 1)) -> (state78 = 8))) ->
  ((not ((not (state78 = 2)) -> (state78 = 9))) -> ((not (state78 = 5)) ->
  ((temp___871 = (to_rep1(first(tmp1)) + 2)) and
  in_range1((to_rep1(first(tmp1)) + 2)))))))

axiom H214 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> ((not ((not (state78 = 1)) -> (state78 = 8))) ->
  ((not ((not (state78 = 2)) -> (state78 = 9))) -> ((not (state78 = 5)) ->
  ((temp___871 <= to_rep1(last(tmp1))) ->
  (((to_rep1(first(tmp1)) <= temp___871) and
  (temp___871 <= to_rep1(last(tmp1)))) and
  ((to_rep1(first(tmp1)) <= to_rep1(last(tmp1))) and
  (to_rep1(last(tmp1)) <= to_rep1(last(tmp1))))))))))

axiom H215 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> ((not ((not (state78 = 1)) -> (state78 = 8))) ->
  ((not ((not (state78 = 2)) -> (state78 = 9))) -> ((not (state78 = 5)) ->
  (o29 = tmp)))))

axiom H216 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> ((not ((not (state78 = 1)) -> (state78 = 8))) ->
  ((not ((not (state78 = 2)) -> (state78 = 9))) -> ((not (state78 = 5)) ->
  ((temp___873 = o29) and (temp___8731 = mk3(temp___871,
  to_rep1(last(tmp1)))))))))

axiom H217 : ((not ((not (state78 = 0)) -> ((not (state78 = 3)) ->
  (state78 = 4)))) -> ((not ((not (state78 = 1)) -> (state78 = 8))) ->
  ((not ((not (state78 = 2)) -> (state78 = 9))) -> ((not (state78 = 5)) ->
  ((lexer__read_token__B_6__str__assume = temp___873) and
  (lexer__read_token__B_6__str__assume1 = mk(to_rep1(first6(temp___8731)),
  to_rep1(last6(temp___8731)))))))))

axiom H218 : (result24 = str)

axiom H219 : (str2 = lexer__read_token__B_6__str__assume)

axiom H220 :
  (to_rep1(str__first) = to_rep1(first(lexer__read_token__B_6__str__assume1)))

axiom H221 :
  (to_rep1(str__last) = to_rep1(last(lexer__read_token__B_6__str__assume1)))

axiom H222 : dynamic_property(1, 2147483647, to_rep1(str__first),
  to_rep1(str__last))

axiom H223 : (((((invariant__1(name_table2) = true) and
  (to_rep5(t__split_discrs15) = k2)) and
  (to_rep2(t__split_fields60) = first_line7)) and
  (to_rep2(t__split_fields61) = first_col7)) and
  (to_rep2(t__split_fields62) = (current_pos57 - first_pos7)))

axiom H224 : (not (state78 = 1))

axiom H225 : (state78 = 5)

 (* File "lexer.ads", line 65, characters 0-0 *)
goal WP_parameter_def : (invariant__1(name_table2) = true)
