(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun concat_singleton_left (character Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a character)) (forall ((b (Array Int character))) (forall ((a_first Int) (b_first Int) (b_last Int)) (! (and (= (select (concat_singleton_left a a_first b b_first b_last) a_first) a) (forall ((i Int)) (! (=> (< a_first i) (= (select (concat_singleton_left a a_first b b_first b_last) i) (select b (+ (- i a_first) (- b_first 1))))) :pattern ((select (concat_singleton_left a a_first b b_first b_last) i))))) :pattern ((concat_singleton_left a a_first b b_first b_last)))))))
(declare-fun concat_singleton_right ((Array Int character) Int Int character) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((b character)) (forall ((a_first Int) (a_last Int)) (! (and (= (select (concat_singleton_right a a_first a_last b) (+ a_last 1)) b) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (concat_singleton_right a a_first a_last b) i) (select a i))) :pattern ((select (concat_singleton_right a a_first a_last b) i)) :pattern ((select a i))))) :pattern ((concat_singleton_right a a_first a_last b)))))))
(declare-fun concat_singletons (character Int character) (Array Int character))
(assert (forall ((a character) (b character)) (forall ((a_first Int)) (! (and (= (select (concat_singletons a a_first b) a_first) a) (= (select (concat_singletons a a_first b) (+ a_first 1)) b)) :pattern ((concat_singletons a a_first b))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (natural natural) Bool)
(declare-const dummy4 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range4 temp___expr_39)))
(define-fun to_rep2 ((x natural)) Int (naturalqtint x))
(declare-fun of_rep2 (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x natural)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(define-fun to_rep3 ((x positive)) Int (positiveqtint x))
(declare-fun of_rep3 (Int) positive)
(assert (forall ((x positive)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x positive)) (! (in_range2 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-sort element_type 0)
(declare-fun element_typeqtint (element_type) Int)
(assert (forall ((i element_type)) (and (<= (- 2147483648) (element_typeqtint i)) (<= (element_typeqtint i) 2147483647))))
(define-fun in_range5 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (element_type element_type) Bool)
(declare-const dummy5 element_type)
(declare-datatypes () ((element_type__ref (mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___projection ((a element_type__ref)) element_type (element_type__content a))
(define-fun to_rep4 ((x element_type)) Int (element_typeqtint x))
(declare-fun of_rep4 (Int) element_type)
(assert (forall ((x element_type)) (! (= (of_rep4 (to_rep4 x)) x) :pattern ((to_rep4 x)))))
(assert (forall ((x element_type)) (! (in_range5 (to_rep4 x)) :pattern ((to_rep4 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep4 (of_rep4 x)) x)) :pattern ((to_rep4 (of_rep4 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int element_type))))))
(declare-fun slide1 ((Array Int element_type) Int Int) (Array Int element_type))
(assert (forall ((a (Array Int element_type))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int element_type))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int element_type)) (a__first Int) (a__last Int) (b (Array Int element_type)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep4 (select a temp___idx_154)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int element_type)) (b (Array Int element_type))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep4 (select a temp___idx_154)) (to_rep4 (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (integer integer) Bool)
(declare-const dummy6 integer)
(declare-datatypes () ((t3s__ref (mk_t3s__ref (t3s__content integer)))))
(define-fun t3s__ref___projection ((a t3s__ref)) integer (t3s__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int element_type)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int element_type) (elts1 a))
(define-fun of_array1 ((a (Array Int element_type)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int element_type)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int element_type)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int element_type)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int element_type))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int element_type))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int element_type))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq2 (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq7 (us_t1 us_t1) Bool)
(declare-const dummy7 us_t1)
(declare-datatypes () ((t4s__ref (mk_t4s__ref (t4s__content us_t1)))))
(define-fun t4s__ref___projection ((a t4s__ref)) us_t1 (t4s__content a))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__bounded_queue_v1__queue_type__max_size positive)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) positive (rec__bounded_queue_v1__queue_type__max_size a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__bounded_queue_v1__queue_type__count natural) (rec__bounded_queue_v1__queue_type__front positive) (rec__bounded_queue_v1__queue_type__rear positive) (rec__bounded_queue_v1__queue_type__items us_t1)))))
(define-fun us_split_fields_Count__projection ((a us_split_fields)) natural (rec__bounded_queue_v1__queue_type__count a))
(define-fun us_split_fields_Front__projection ((a us_split_fields)) positive (rec__bounded_queue_v1__queue_type__front a))
(define-fun us_split_fields_Rear__projection ((a us_split_fields)) positive (rec__bounded_queue_v1__queue_type__rear a))
(define-fun us_split_fields_Items__projection ((a us_split_fields)) us_t1 (rec__bounded_queue_v1__queue_type__items a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq4 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep3 (rec__bounded_queue_v1__queue_type__max_size (us_split_discrs1 a))) (to_rep3 (rec__bounded_queue_v1__queue_type__max_size (us_split_discrs1 b)))) (and (and (and (= (to_rep2 (rec__bounded_queue_v1__queue_type__count (us_split_fields1 a))) (to_rep2 (rec__bounded_queue_v1__queue_type__count (us_split_fields1 b)))) (= (to_rep3 (rec__bounded_queue_v1__queue_type__front (us_split_fields1 a))) (to_rep3 (rec__bounded_queue_v1__queue_type__front (us_split_fields1 b))))) (= (to_rep3 (rec__bounded_queue_v1__queue_type__rear (us_split_fields1 a))) (to_rep3 (rec__bounded_queue_v1__queue_type__rear (us_split_fields1 b))))) (= (bool_eq3 (rec__bounded_queue_v1__queue_type__items (us_split_fields1 a)) (rec__bounded_queue_v1__queue_type__items (us_split_fields1 b))) true))) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const bounded_queue_v1__queue_type__max_size__first__bit Int)
(declare-const bounded_queue_v1__queue_type__max_size__last__bit Int)
(declare-const bounded_queue_v1__queue_type__max_size__position Int)
(assert (<= 0 bounded_queue_v1__queue_type__max_size__first__bit))
(assert (< bounded_queue_v1__queue_type__max_size__first__bit bounded_queue_v1__queue_type__max_size__last__bit))
(assert (<= 0 bounded_queue_v1__queue_type__max_size__position))
(declare-const bounded_queue_v1__queue_type__count__first__bit Int)
(declare-const bounded_queue_v1__queue_type__count__last__bit Int)
(declare-const bounded_queue_v1__queue_type__count__position Int)
(assert (<= 0 bounded_queue_v1__queue_type__count__first__bit))
(assert (< bounded_queue_v1__queue_type__count__first__bit bounded_queue_v1__queue_type__count__last__bit))
(assert (<= 0 bounded_queue_v1__queue_type__count__position))
(declare-const bounded_queue_v1__queue_type__front__first__bit Int)
(declare-const bounded_queue_v1__queue_type__front__last__bit Int)
(declare-const bounded_queue_v1__queue_type__front__position Int)
(assert (<= 0 bounded_queue_v1__queue_type__front__first__bit))
(assert (< bounded_queue_v1__queue_type__front__first__bit bounded_queue_v1__queue_type__front__last__bit))
(assert (<= 0 bounded_queue_v1__queue_type__front__position))
(declare-const bounded_queue_v1__queue_type__rear__first__bit Int)
(declare-const bounded_queue_v1__queue_type__rear__last__bit Int)
(declare-const bounded_queue_v1__queue_type__rear__position Int)
(assert (<= 0 bounded_queue_v1__queue_type__rear__first__bit))
(assert (< bounded_queue_v1__queue_type__rear__first__bit bounded_queue_v1__queue_type__rear__last__bit))
(assert (<= 0 bounded_queue_v1__queue_type__rear__position))
(declare-const bounded_queue_v1__queue_type__items__first__bit Int)
(declare-const bounded_queue_v1__queue_type__items__last__bit Int)
(declare-const bounded_queue_v1__queue_type__items__position Int)
(assert (<= 0 bounded_queue_v1__queue_type__items__first__bit))
(assert (< bounded_queue_v1__queue_type__items__first__bit bounded_queue_v1__queue_type__items__last__bit))
(assert (<= 0 bounded_queue_v1__queue_type__items__position))
(declare-fun user_eq8 (us_rep us_rep) Bool)
(declare-const dummy8 us_rep)
(declare-datatypes () ((queue_type__ref (mk_queue_type__ref (queue_type__content us_rep)))))
(define-fun queue_type__ref___projection ((a queue_type__ref)) us_rep (queue_type__content a))
(declare-fun size (us_rep) Int)
(declare-fun size__function_guard (Int us_rep) Bool)
(define-fun dynamic_invariant2 ((temp___expr_192 us_rep) (temp___is_init_188 Bool) (temp___skip_constant_189 Bool) (temp___do_toplevel_190 Bool) (temp___do_typ_inv_191 Bool)) Bool (let ((temp___193 (rec__bounded_queue_v1__queue_type__max_size (us_split_discrs1 temp___expr_192)))) (and (dynamic_property2 1 (to_rep3 temp___193) (first3 (rec__bounded_queue_v1__queue_type__items (us_split_fields1 temp___expr_192))) (last3 (rec__bounded_queue_v1__queue_type__items (us_split_fields1 temp___expr_192)))) (and (= (first3 (rec__bounded_queue_v1__queue_type__items (us_split_fields1 temp___expr_192))) 1) (= (last3 (rec__bounded_queue_v1__queue_type__items (us_split_fields1 temp___expr_192))) (to_rep3 temp___193))))))
(assert (forall ((queue us_rep)) (! (=> (dynamic_invariant2 queue true true true true) (dynamic_invariant1 (size queue) true false true true)) :pattern ((size queue)))))
(declare-fun empty (us_rep) Bool)
(declare-fun empty__function_guard (Bool us_rep) Bool)
(declare-fun full (us_rep) Bool)
(declare-fun full__function_guard (Bool us_rep) Bool)
(declare-fun last_element (us_rep) Int)
(declare-fun last_element__function_guard (Int us_rep) Bool)
(declare-fun first_element (us_rep) Int)
(declare-fun first_element__function_guard (Int us_rep) Bool)
(define-fun dynamic_invariant3 ((temp___expr_179 Int) (temp___is_init_175 Bool) (temp___skip_constant_176 Bool) (temp___do_toplevel_177 Bool) (temp___do_typ_inv_178 Bool)) Bool (=> (or (= temp___is_init_175 true) (<= (- 2147483648) 2147483647)) (in_range5 temp___expr_179)))
(declare-sort tT1bP1 0)
(declare-fun tT1bP1qtint (tT1bP1) Int)
(assert (forall ((i tT1bP1)) (and (<= 1 (tT1bP1qtint i)) (<= (tT1bP1qtint i) 100))))
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (tT1bP1 tT1bP1) Bool)
(declare-const dummy9 tT1bP1)
(declare-datatypes () ((tT1bP1__ref (mk_tT1bP1__ref (tT1bP1__content tT1bP1)))))
(define-fun tT1bP1__ref___projection ((a tT1bP1__ref)) tT1bP1 (tT1bP1__content a))
(declare-const dummy10 (Array Int element_type))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int element_type)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int element_type)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int element_type)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int element_type))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int element_type))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int element_type))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq10 ((Array Int element_type) (Array Int element_type)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__bounded_queue_v1__queue_type__count1 natural) (rec__bounded_queue_v1__queue_type__front1 positive) (rec__bounded_queue_v1__queue_type__rear1 positive) (rec__bounded_queue_v1__queue_type__items1 (Array Int element_type))))))
(define-fun us_split_fields_Count__2__projection ((a us_split_fields2)) natural (rec__bounded_queue_v1__queue_type__count1 a))
(define-fun us_split_fields_Front__2__projection ((a us_split_fields2)) positive (rec__bounded_queue_v1__queue_type__front1 a))
(define-fun us_split_fields_Rear__2__projection ((a us_split_fields2)) positive (rec__bounded_queue_v1__queue_type__rear1 a))
(define-fun us_split_fields_Items__2__projection ((a us_split_fields2)) (Array Int element_type) (rec__bounded_queue_v1__queue_type__items1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs2 us_split_discrs) (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___5__projection ((a us_rep1)) us_split_discrs (us_split_discrs2 a))
(define-fun us_rep___6__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (us_split_discrs2 a) (mk___split_fields (rec__bounded_queue_v1__queue_type__count1 (us_split_fields3 a)) (rec__bounded_queue_v1__queue_type__front1 (us_split_fields3 a)) (rec__bounded_queue_v1__queue_type__rear1 (us_split_fields3 a)) (of_array1 (rec__bounded_queue_v1__queue_type__items1 (us_split_fields3 a)) 1 100))))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (us_split_discrs1 r) (mk___split_fields1 (rec__bounded_queue_v1__queue_type__count (us_split_fields1 r)) (rec__bounded_queue_v1__queue_type__front (us_split_fields1 r)) (rec__bounded_queue_v1__queue_type__rear (us_split_fields1 r)) (let ((temp___174 (rec__bounded_queue_v1__queue_type__items (us_split_fields1 r)))) (to_array1 temp___174)))))
(define-fun bool_eq5 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep3 (rec__bounded_queue_v1__queue_type__max_size (us_split_discrs2 a))) (to_rep3 (rec__bounded_queue_v1__queue_type__max_size (us_split_discrs2 b)))) (and (and (and (= (to_rep2 (rec__bounded_queue_v1__queue_type__count1 (us_split_fields3 a))) (to_rep2 (rec__bounded_queue_v1__queue_type__count1 (us_split_fields3 b)))) (= (to_rep3 (rec__bounded_queue_v1__queue_type__front1 (us_split_fields3 a))) (to_rep3 (rec__bounded_queue_v1__queue_type__front1 (us_split_fields3 b))))) (= (to_rep3 (rec__bounded_queue_v1__queue_type__rear1 (us_split_fields3 a))) (to_rep3 (rec__bounded_queue_v1__queue_type__rear1 (us_split_fields3 b))))) (= (bool_eq2 (rec__bounded_queue_v1__queue_type__items1 (us_split_fields3 a)) 1 100 (rec__bounded_queue_v1__queue_type__items1 (us_split_fields3 b)) 1 100) true))) true false))
(define-fun in_range7 ((rec__bounded_queue_v1__queue_type__max_size1 Int) (a us_rep)) Bool (= rec__bounded_queue_v1__queue_type__max_size1 (to_rep3 (rec__bounded_queue_v1__queue_type__max_size (us_split_discrs1 a)))))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep1) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep1) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep1)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment4 a))))
(declare-const bounded_queue_v1__queue_type__max_size__first__bit1 Int)
(declare-const bounded_queue_v1__queue_type__max_size__last__bit1 Int)
(declare-const bounded_queue_v1__queue_type__max_size__position1 Int)
(assert (<= 0 bounded_queue_v1__queue_type__max_size__first__bit1))
(assert (< bounded_queue_v1__queue_type__max_size__first__bit1 bounded_queue_v1__queue_type__max_size__last__bit1))
(assert (<= 0 bounded_queue_v1__queue_type__max_size__position1))
(declare-const bounded_queue_v1__queue_type__count__first__bit1 Int)
(declare-const bounded_queue_v1__queue_type__count__last__bit1 Int)
(declare-const bounded_queue_v1__queue_type__count__position1 Int)
(assert (<= 0 bounded_queue_v1__queue_type__count__first__bit1))
(assert (< bounded_queue_v1__queue_type__count__first__bit1 bounded_queue_v1__queue_type__count__last__bit1))
(assert (<= 0 bounded_queue_v1__queue_type__count__position1))
(declare-const bounded_queue_v1__queue_type__front__first__bit1 Int)
(declare-const bounded_queue_v1__queue_type__front__last__bit1 Int)
(declare-const bounded_queue_v1__queue_type__front__position1 Int)
(assert (<= 0 bounded_queue_v1__queue_type__front__first__bit1))
(assert (< bounded_queue_v1__queue_type__front__first__bit1 bounded_queue_v1__queue_type__front__last__bit1))
(assert (<= 0 bounded_queue_v1__queue_type__front__position1))
(declare-const bounded_queue_v1__queue_type__rear__first__bit1 Int)
(declare-const bounded_queue_v1__queue_type__rear__last__bit1 Int)
(declare-const bounded_queue_v1__queue_type__rear__position1 Int)
(assert (<= 0 bounded_queue_v1__queue_type__rear__first__bit1))
(assert (< bounded_queue_v1__queue_type__rear__first__bit1 bounded_queue_v1__queue_type__rear__last__bit1))
(assert (<= 0 bounded_queue_v1__queue_type__rear__position1))
(declare-const bounded_queue_v1__queue_type__items__first__bit1 Int)
(declare-const bounded_queue_v1__queue_type__items__last__bit1 Int)
(declare-const bounded_queue_v1__queue_type__items__position1 Int)
(assert (<= 0 bounded_queue_v1__queue_type__items__first__bit1))
(assert (< bounded_queue_v1__queue_type__items__first__bit1 bounded_queue_v1__queue_type__items__last__bit1))
(assert (<= 0 bounded_queue_v1__queue_type__items__position1))
(declare-fun user_eq11 (us_rep1 us_rep1) Bool)
(declare-const dummy11 us_rep1)
(declare-datatypes () ((tmy_queueS__ref (mk_tmy_queueS__ref (tmy_queueS__content us_rep1)))))
(define-fun tmy_queueS__ref___projection ((a tmy_queueS__ref)) us_rep1 (tmy_queueS__content a))
(define-fun dynamic_invariant4 ((temp___expr_626 us_rep1) (temp___is_init_622 Bool) (temp___skip_constant_623 Bool) (temp___do_toplevel_624 Bool) (temp___do_typ_inv_625 Bool)) Bool (=> (not (= temp___skip_constant_623 true)) (in_range7 100 (to_base temp___expr_626))))
(define-fun default_initial_assumption ((temp___expr_629 us_rep1) (temp___skip_top_level_630 Bool)) Bool (= (to_rep3 (rec__bounded_queue_v1__queue_type__max_size (us_split_discrs2 temp___expr_629))) 100))
(declare-const my_queue__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-fun temp___String_Literal_652 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_652 us_void_param) 1)) 83) (= (to_rep (select (temp___String_Literal_652 us_void_param) 2)) 105)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 3)) 122)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 4)) 101)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 5)) 32)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 6)) 111)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 7)) 102)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 9)) 99)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 10)) 108)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 11)) 101)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 12)) 97)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 13)) 114)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 14)) 101)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 15)) 100)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 16)) 32)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 17)) 113)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 18)) 117)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 19)) 101)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 20)) 117)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 21)) 101)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 22)) 32)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 23)) 105)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 24)) 115)) (= (to_rep (select (temp___String_Literal_652 us_void_param) 25)) 32)) :pattern ((temp___String_Literal_652 us_void_param)))))
(define-fun dynamic_invariant5 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant6 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant7 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(assert true)
(assert true)
(assert (forall ((queue us_rep)) (! (=> (and (dynamic_invariant2 queue true true true true) (not (= (empty queue) true))) (dynamic_invariant3 (first_element queue) true false true true)) :pattern ((first_element queue)))))
(assert (forall ((queue us_rep)) (! (=> (and (dynamic_invariant2 queue true true true true) (not (= (empty queue) true))) (dynamic_invariant3 (last_element queue) true false true true)) :pattern ((last_element queue)))))
(declare-const my_queue__split_fields natural)
(declare-const my_queue__split_fields1 positive)
(declare-const my_queue__split_fields2 positive)
(declare-const my_queue__split_fields3 (Array Int element_type))
(declare-const value Int)
(declare-const count Int)
(declare-const us Int)
(declare-const bounded_queue_v1__clear__queue__fields natural)
(declare-const bounded_queue_v1__clear__queue__fields1 positive)
(declare-const bounded_queue_v1__clear__queue__fields2 positive)
(declare-const bounded_queue_v1__clear__queue__fields3 (Array Int element_type))
(declare-const bounded_queue_v1__clear__queue__fields4 t1)
(declare-const result natural)
(declare-const result1 positive)
(declare-const result2 positive)
(declare-const result3 (Array Int element_type))
(declare-const my_queue__split_fields4 natural)
(declare-const my_queue__split_fields5 positive)
(declare-const my_queue__split_fields6 positive)
(declare-const my_queue__split_fields7 (Array Int element_type))
(declare-const result4 Int)
(declare-const count1 Int)
(declare-const my_queue__split_fields8 natural)
(declare-const my_queue__split_fields9 positive)
(declare-const my_queue__split_fields10 positive)
(declare-const my_queue__split_fields11 (Array Int element_type))
(declare-const count2 Int)
(define-fun bounded_queue_v1__clear__queue__fields5 () us_split_fields (mk___split_fields bounded_queue_v1__clear__queue__fields bounded_queue_v1__clear__queue__fields1 bounded_queue_v1__clear__queue__fields2 (mk___t1 bounded_queue_v1__clear__queue__fields3 bounded_queue_v1__clear__queue__fields4)))
(assert (and (= us 100) (in_range2 100)))
(assert (= (to_rep3 (rec__bounded_queue_v1__queue_type__max_size my_queue__split_discrs)) 100))
(assert (= 100 (to_rep3 (rec__bounded_queue_v1__queue_type__max_size my_queue__split_discrs))))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 value)))
(assert (and (and (= (empty (mk___rep my_queue__split_discrs bounded_queue_v1__clear__queue__fields5)) true) (= (size (mk___rep my_queue__split_discrs bounded_queue_v1__clear__queue__fields5)) 0)) (dynamic_invariant2 (mk___rep my_queue__split_discrs bounded_queue_v1__clear__queue__fields5) true true true true)))
(assert (= result my_queue__split_fields))
(assert (= result1 my_queue__split_fields1))
(assert (= result2 my_queue__split_fields2))
(assert (= result3 my_queue__split_fields3))
(assert (= bounded_queue_v1__clear__queue__fields my_queue__split_fields4))
(assert (= bounded_queue_v1__clear__queue__fields1 my_queue__split_fields5))
(assert (= bounded_queue_v1__clear__queue__fields2 my_queue__split_fields6))
(assert (= bounded_queue_v1__clear__queue__fields3 my_queue__split_fields7))
(assert (= (mk_int__ref result4) (mk_int__ref count)))
(assert (= count1 17))
(assert (<= 17 count1))
(assert (<= count1 52))
(assert (and (<= 17 count2) (<= count2 52)))
(assert (not (not (= (full (mk___rep my_queue__split_discrs (mk___split_fields my_queue__split_fields8 my_queue__split_fields9 my_queue__split_fields10 (mk___t1 my_queue__split_fields11 (mk1 1 100))))) true))))
(check-sat)
(exit)
