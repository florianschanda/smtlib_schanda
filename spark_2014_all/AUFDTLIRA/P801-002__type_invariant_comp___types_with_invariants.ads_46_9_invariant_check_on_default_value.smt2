(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort natural 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (natural natural) Bool)
(declare-const dummy1 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range2 temp___expr_33)))
(declare-fun to_rep1 (natural) Int)
(declare-fun of_rep1 (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x natural)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort positive 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (positive positive) Bool)
(declare-const dummy2 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__types_with_invariants__my_integer__sign Bool) (rec__types_with_invariants__my_integer__val natural)))))
(define-fun us_split_fields_Sign__projection ((a us_split_fields)) Bool (rec__types_with_invariants__my_integer__sign a))
(define-fun us_split_fields_Val__projection ((a us_split_fields)) natural (rec__types_with_invariants__my_integer__val a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (= (rec__types_with_invariants__my_integer__sign (us_split_fields1 a)) (rec__types_with_invariants__my_integer__sign (us_split_fields1 b))) (= (to_rep1 (rec__types_with_invariants__my_integer__val (us_split_fields1 a))) (to_rep1 (rec__types_with_invariants__my_integer__val (us_split_fields1 b))))) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const types_with_invariants__my_integer__sign__first__bit Int)
(declare-const types_with_invariants__my_integer__sign__last__bit Int)
(declare-const types_with_invariants__my_integer__sign__position Int)
(assert (<= 0 types_with_invariants__my_integer__sign__first__bit))
(assert (< types_with_invariants__my_integer__sign__first__bit types_with_invariants__my_integer__sign__last__bit))
(assert (<= 0 types_with_invariants__my_integer__sign__position))
(declare-const types_with_invariants__my_integer__val__first__bit Int)
(declare-const types_with_invariants__my_integer__val__last__bit Int)
(declare-const types_with_invariants__my_integer__val__position Int)
(assert (<= 0 types_with_invariants__my_integer__val__first__bit))
(assert (< types_with_invariants__my_integer__val__first__bit types_with_invariants__my_integer__val__last__bit))
(assert (<= 0 types_with_invariants__my_integer__val__position))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((my_integer__ref (mk_my_integer__ref (my_integer__content us_rep)))))
(define-fun my_integer__ref___projection ((a my_integer__ref)) us_rep (my_integer__content a))
(define-fun default_initial_assumption ((temp___expr_138 us_rep) (temp___skip_top_level_139 Bool)) Bool (and (= (rec__types_with_invariants__my_integer__sign (us_split_fields1 temp___expr_138)) (of_int 1)) (= (to_rep1 (rec__types_with_invariants__my_integer__val (us_split_fields1 temp___expr_138))) 0)))
(define-fun type_invariant ((temp___140 us_rep)) Bool (=> (= (to_rep1 (rec__types_with_invariants__my_integer__val (us_split_fields1 temp___140))) 0) (= (rec__types_with_invariants__my_integer__sign (us_split_fields1 temp___140)) true)))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int us_rep))))))
(declare-fun slide ((Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int us_rep))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int us_rep) Int Int (Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (us_rep Int) (Array Int us_rep))
(assert (forall ((v us_rep)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq1 ((a (Array Int us_rep)) (a__first Int) (a__last Int) (b (Array Int us_rep)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (bool_eq (select a temp___idx_132) (select b (+ (- b__first a__first) temp___idx_132))) true)))) true false))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (bool_eq (select a temp___idx_132) (select b (+ (- b__first a__first) temp___idx_132))) true))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range3 low) (in_range3 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int us_rep)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int us_rep) (elts a))
(define-fun of_array ((a (Array Int us_rep)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int us_rep)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int us_rep)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int us_rep)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t) (y us_t)) Bool (bool_eq1 (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq4 (us_t us_t) Bool)
(declare-const dummy4 us_t)
(declare-datatypes () ((my_array__ref (mk_my_array__ref (my_array__content us_t)))))
(define-fun my_array__ref___projection ((a my_array__ref)) us_t (my_array__content a))
(define-fun dynamic_invariant1 ((temp___expr_145 us_t) (temp___is_init_142 Bool) (temp___skip_constant_143 Bool) (temp___do_toplevel_144 Bool)) Bool (=> (not (= temp___skip_constant_143 true)) (dynamic_property 1 2147483647 (first1 temp___expr_145) (last1 temp___expr_145))))
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (integer integer) Bool)
(declare-const dummy5 integer)
(declare-datatypes () ((t7s__ref (mk_t7s__ref (t7s__content integer)))))
(define-fun t7s__ref___projection ((a t7s__ref)) integer (t7s__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int us_rep)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int us_rep) (elts1 a))
(define-fun of_array1 ((a (Array Int us_rep)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int us_rep)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int us_rep)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int us_rep)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t1) (y us_t1)) Bool (bool_eq1 (elts1 x) (to_rep (first2 (rt1 x))) (to_rep (last2 (rt1 x))) (elts1 y) (to_rep (first2 (rt1 y))) (to_rep (last2 (rt1 y)))))
(declare-fun user_eq6 (us_t1 us_t1) Bool)
(declare-const dummy6 us_t1)
(declare-datatypes () ((t8s__ref (mk_t8s__ref (t8s__content us_t1)))))
(define-fun t8s__ref___projection ((a t8s__ref)) us_t1 (t8s__content a))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__types_with_invariants__container__c natural)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural (rec__types_with_invariants__container__c a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__types_with_invariants__container__content us_t1)))))
(define-fun us_split_fields_Content__projection ((a us_split_fields2)) us_t1 (rec__types_with_invariants__container__content a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs1 us_split_discrs) (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___2__projection ((a us_rep1)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq4 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep1 (rec__types_with_invariants__container__c (us_split_discrs1 a))) (to_rep1 (rec__types_with_invariants__container__c (us_split_discrs1 b)))) (= (bool_eq3 (rec__types_with_invariants__container__content (us_split_fields3 a)) (rec__types_with_invariants__container__content (us_split_fields3 b))) true)) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep1) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep1) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep1)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment3 a))))
(declare-const types_with_invariants__container__c__first__bit Int)
(declare-const types_with_invariants__container__c__last__bit Int)
(declare-const types_with_invariants__container__c__position Int)
(assert (<= 0 types_with_invariants__container__c__first__bit))
(assert (< types_with_invariants__container__c__first__bit types_with_invariants__container__c__last__bit))
(assert (<= 0 types_with_invariants__container__c__position))
(declare-const types_with_invariants__container__content__first__bit Int)
(declare-const types_with_invariants__container__content__last__bit Int)
(declare-const types_with_invariants__container__content__position Int)
(assert (<= 0 types_with_invariants__container__content__first__bit))
(assert (< types_with_invariants__container__content__first__bit types_with_invariants__container__content__last__bit))
(assert (<= 0 types_with_invariants__container__content__position))
(declare-fun user_eq7 (us_rep1 us_rep1) Bool)
(declare-const dummy7 us_rep1)
(declare-datatypes () ((container__ref (mk_container__ref (container__content us_rep1)))))
(define-fun container__ref___projection ((a container__ref)) us_rep1 (container__content a))
(define-fun dynamic_invariant2 ((temp___expr_150 us_rep1) (temp___is_init_147 Bool) (temp___skip_constant_148 Bool) (temp___do_toplevel_149 Bool)) Bool (let ((temp___151 (rec__types_with_invariants__container__c (us_split_discrs1 temp___expr_150)))) (and (dynamic_property2 1 (to_rep1 temp___151) (first3 (rec__types_with_invariants__container__content (us_split_fields3 temp___expr_150))) (last3 (rec__types_with_invariants__container__content (us_split_fields3 temp___expr_150)))) (and (= (first3 (rec__types_with_invariants__container__content (us_split_fields3 temp___expr_150))) 1) (= (last3 (rec__types_with_invariants__container__content (us_split_fields3 temp___expr_150))) (to_rep1 temp___151))))))
(declare-sort ttB 0)
(define-fun in_range4 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq8 (ttB ttB) Bool)
(declare-const dummy8 ttB)
(declare-datatypes () ((ttB__ref (mk_ttB__ref (ttB__content ttB)))))
(define-fun ttB__ref___projection ((a ttB__ref)) ttB (ttB__content a))
(define-fun type_invariant1 ((temp___163 Int)) Bool (not (= temp___163 0)))
(declare-sort t2 0)
(define-fun in_range5 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq9 (t2 t2) Bool)
(declare-const dummy9 t2)
(declare-datatypes () ((t__ref (mk_t__ref (t__content t2)))))
(define-fun t__ref___projection ((a t__ref)) t2 (t__content a))
(declare-fun to_rep2 (t2) Int)
(declare-fun of_rep2 (Int) t2)
(assert (forall ((x t2)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x t2)) (! (in_range5 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort tsB 0)
(define-fun in_range6 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq10 (tsB tsB) Bool)
(declare-const dummy10 tsB)
(declare-datatypes () ((tsB__ref (mk_tsB__ref (tsB__content tsB)))))
(define-fun tsB__ref___projection ((a tsB__ref)) tsB (tsB__content a))
(declare-sort taD1 0)
(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq11 (taD1 taD1) Bool)
(declare-const dummy11 taD1)
(declare-datatypes () ((taD1__ref (mk_taD1__ref (taD1__content taD1)))))
(define-fun taD1__ref___projection ((a taD1__ref)) taD1 (taD1__content a))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int integer))))))
(declare-fun slide1 ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first4 Int)) (! (= (slide1 a first4 first4) a) :pattern ((slide1 a first4 first4))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int integer) Int Int (Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 (integer Int) (Array Int integer))
(assert (forall ((v integer)) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq5 ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_133 Int)) (=> (and (<= a__first temp___idx_133) (<= temp___idx_133 a__last)) (= (to_rep (select a temp___idx_133)) (to_rep (select b (+ (- b__first a__first) temp___idx_133))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq5 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_133 Int)) (=> (and (<= a__first temp___idx_133) (<= temp___idx_133 a__last)) (= (to_rep (select a temp___idx_133)) (to_rep (select b (+ (- b__first a__first) temp___idx_133)))))))))))
(declare-fun compare ((Array Int integer) Int Int (Array Int integer) Int Int) Int)
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq5 a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq5 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq5 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-sort t3 0)
(declare-fun first4 (t3) integer)
(declare-fun last4 (t3) integer)
(declare-fun mk2 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first4 (mk2 f l))) f) (= (to_rep (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property3 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range7 low) (in_range7 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int integer)) (rt2 t3)))))
(define-fun to_array2 ((a us_t2)) (Array Int integer) (elts2 a))
(define-fun of_array2 ((a (Array Int integer)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int integer)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int integer)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int integer)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment4 a))))
(define-fun bool_eq6 ((x us_t2) (y us_t2)) Bool (bool_eq5 (elts2 x) (to_rep (first4 (rt2 x))) (to_rep (last4 (rt2 x))) (elts2 y) (to_rep (first4 (rt2 y))) (to_rep (last4 (rt2 y)))))
(declare-fun user_eq12 (us_t2 us_t2) Bool)
(declare-const dummy12 us_t2)
(declare-datatypes () ((taB__ref (mk_taB__ref (taB__content us_t2)))))
(define-fun taB__ref___projection ((a taB__ref)) us_t2 (taB__content a))
(define-fun type_invariant2 ((temp___177 us_t2)) Bool (and (not (= (to_rep (select (to_array2 temp___177) 1)) 0)) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (not (= (to_rep (select (to_array2 temp___177) i)) 0))))))
(declare-sort t4 0)
(declare-fun first6 (t4) integer)
(declare-fun last6 (t4) integer)
(declare-fun mk3 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first6 (mk3 f l))) f) (= (to_rep (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range3 low) (in_range3 high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int integer)) (rt3 t4)))))
(define-fun to_array3 ((a us_t3)) (Array Int integer) (elts3 a))
(define-fun of_array3 ((a (Array Int integer)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int integer)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int integer)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int integer)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment5 a))))
(define-fun bool_eq7 ((x us_t3) (y us_t3)) Bool (bool_eq5 (elts3 x) (to_rep (first6 (rt3 x))) (to_rep (last6 (rt3 x))) (elts3 y) (to_rep (first6 (rt3 y))) (to_rep (last6 (rt3 y)))))
(declare-fun user_eq13 (us_t3 us_t3) Bool)
(declare-const dummy13 us_t3)
(declare-datatypes () ((u__ref (mk_u__ref (u__content us_t3)))))
(define-fun u__ref___projection ((a u__ref)) us_t3 (u__content a))
(define-fun dynamic_invariant3 ((temp___expr_191 us_t3) (temp___is_init_188 Bool) (temp___skip_constant_189 Bool) (temp___do_toplevel_190 Bool)) Bool (=> (not (= temp___skip_constant_189 true)) (dynamic_property4 1 2147483647 (first7 temp___expr_191) (last7 temp___expr_191))))
(define-fun type_invariant3 ((temp___193 us_t3)) Bool (and (not (= (to_rep (select (to_array3 temp___193) (first7 temp___193))) 1)) (forall ((i Int)) (=> (and (<= (first7 temp___193) i) (<= i (last7 temp___193))) (not (= (to_rep (select (to_array3 temp___193) i)) 0))))))
(declare-datatypes () ((us_split_discrs2 (mk___split_discrs1 (rec__types_with_invariants__r__c t2)))))
(define-fun us_split_discrs___2__projection ((a us_split_discrs2)) t2 (rec__types_with_invariants__r__c a))
(declare-datatypes () ((us_split_discrs__ref1 (mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref1)) us_split_discrs2 (us_split_discrs__content1 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_discrs3 us_split_discrs2)))))
(define-fun us_rep___4__projection ((a us_rep2)) us_split_discrs2 (us_split_discrs3 a))
(define-fun bool_eq8 ((a us_rep2) (b us_rep2)) Bool (ite (= (to_rep2 (rec__types_with_invariants__r__c (us_split_discrs3 a))) (to_rep2 (rec__types_with_invariants__r__c (us_split_discrs3 b)))) true false))
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep2) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep2) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep2)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment6 a))))
(declare-const types_with_invariants__r__c__first__bit Int)
(declare-const types_with_invariants__r__c__last__bit Int)
(declare-const types_with_invariants__r__c__position Int)
(assert (<= 0 types_with_invariants__r__c__first__bit))
(assert (< types_with_invariants__r__c__first__bit types_with_invariants__r__c__last__bit))
(assert (<= 0 types_with_invariants__r__c__position))
(declare-fun user_eq14 (us_rep2 us_rep2) Bool)
(declare-const dummy14 us_rep2)
(declare-datatypes () ((r__ref (mk_r__ref (r__content us_rep2)))))
(define-fun r__ref___projection ((a r__ref)) us_rep2 (r__content a))
(define-fun dynamic_invariant4 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant5 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range3 temp___expr_39)))
(define-fun dynamic_invariant6 ((temp___expr_168 Int) (temp___is_init_165 Bool) (temp___skip_constant_166 Bool) (temp___do_toplevel_167 Bool)) Bool (=> (or (= temp___is_init_165 true) (<= (- 2147483648) 2147483647)) (in_range5 temp___expr_168)))
(declare-const temp___249 Bool)
(declare-const temp___2491 natural)
(declare-const temp___245 (Array Int us_rep))
(declare-const temp___2451 t)
(declare-const temp___c_237 Int)
(declare-const temp___238 natural)
(declare-const temp___2381 (Array Int us_rep))
(declare-const temp___2382 t1)
(declare-const temp___236 Int)
(declare-const temp___233 t2)
(declare-const us Int)
(declare-const temp___231 Int)
(declare-const temp___226 (Array Int integer))
(declare-const temp___2261 t3)
(declare-const temp___222 (Array Int integer))
(declare-const temp___2221 t4)
(declare-const i Int)
(declare-const o Int)
(declare-const o1 integer)
(declare-const o2 Int)
(declare-const o3 Bool)
(declare-const result Bool)
(assert (in_range2 temp___c_237))
(assert (in_range4 temp___236))
(assert (= temp___236 1))
(assert (not (type_invariant1 temp___236)))
(check-sat)
(exit)
