(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun concat_singleton_left (character Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a character)) (forall ((b (Array Int character))) (forall ((a_first Int) (b_first Int) (b_last Int)) (! (and (= (select (concat_singleton_left a a_first b b_first b_last) a_first) a) (forall ((i Int)) (! (=> (< a_first i) (= (select (concat_singleton_left a a_first b b_first b_last) i) (select b (+ (- i a_first) (- b_first 1))))) :pattern ((select (concat_singleton_left a a_first b b_first b_last) i))))) :pattern ((concat_singleton_left a a_first b b_first b_last)))))))
(declare-fun concat_singleton_right ((Array Int character) Int Int character) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((b character)) (forall ((a_first Int) (a_last Int)) (! (and (= (select (concat_singleton_right a a_first a_last b) (+ a_last 1)) b) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (concat_singleton_right a a_first a_last b) i) (select a i))) :pattern ((select (concat_singleton_right a a_first a_last b) i)) :pattern ((select a i))))) :pattern ((concat_singleton_right a a_first a_last b)))))))
(declare-fun concat_singletons (character Int character) (Array Int character))
(assert (forall ((a character) (b character)) (forall ((a_first Int)) (! (and (= (select (concat_singletons a a_first b) a_first) a) (= (select (concat_singletons a a_first b) (+ a_first 1)) b)) :pattern ((concat_singletons a a_first b))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int character)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int character) (elts1 a))
(define-fun of_array1 ((a (Array Int character)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int character)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int character)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int character)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq4 (us_t1 us_t1) Bool)
(declare-const dummy4 us_t1)
(declare-datatypes () ((stringf1l1000__ref (mk_stringf1l1000__ref (stringf1l1000__content us_t1)))))
(define-fun stringf1l1000__ref___projection ((a stringf1l1000__ref)) us_t1 (stringf1l1000__content a))
(declare-fun unsigned32t_image (Int) us_t1)
(declare-fun unsigned32t_image__function_guard (us_t1 Int) Bool)
(declare-sort unsigned32t 0)
(declare-fun unsigned32tqtint (unsigned32t) Int)
(assert (forall ((i unsigned32t)) (and (<= 0 (unsigned32tqtint i)) (<= (unsigned32tqtint i) 4294967295))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 4294967295)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (unsigned32t unsigned32t) Bool)
(declare-const dummy5 unsigned32t)
(declare-datatypes () ((unsigned32t__ref (mk_unsigned32t__ref (unsigned32t__content unsigned32t)))))
(define-fun unsigned32t__ref___projection ((a unsigned32t__ref)) unsigned32t (unsigned32t__content a))
(define-fun dynamic_invariant ((temp___expr_190 Int) (temp___is_init_186 Bool) (temp___skip_constant_187 Bool) (temp___do_toplevel_188 Bool) (temp___do_typ_inv_189 Bool)) Bool (=> (or (= temp___is_init_186 true) (<= 0 4294967295)) (in_range4 temp___expr_190)))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first4 (mk2 f l))) f) (= (to_rep1 (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int character)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int character) (elts2 a))
(define-fun of_array2 ((a (Array Int character)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep1 (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep1 (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int character)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int character)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int character)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment2 a))))
(define-fun bool_eq3 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep1 (first4 (rt2 x))) (to_rep1 (last4 (rt2 x))) (elts2 y) (to_rep1 (first4 (rt2 y))) (to_rep1 (last4 (rt2 y)))))
(declare-fun user_eq6 (us_t2 us_t2) Bool)
(declare-const dummy6 us_t2)
(declare-datatypes () ((stringf1__ref (mk_stringf1__ref (stringf1__content us_t2)))))
(define-fun stringf1__ref___projection ((a stringf1__ref)) us_t2 (stringf1__content a))
(define-fun dynamic_invariant1 ((temp___expr_333 us_t1) (temp___is_init_329 Bool) (temp___skip_constant_330 Bool) (temp___do_toplevel_331 Bool) (temp___do_typ_inv_332 Bool)) Bool (and (=> (not (= temp___skip_constant_330 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_333) (last3 temp___expr_333))) (=> (= temp___do_toplevel_331 true) (=> (= temp___is_init_329 true) (and (let ((temp___335 (of_array2 (to_array1 temp___expr_333) (first3 temp___expr_333) (last3 temp___expr_333)))) (and (= (first5 temp___335) 1) (<= 0 (last5 temp___335)))) (<= (last3 temp___expr_333) 1000))))))
(define-fun dynamic_predicate ((temp___337 us_t1)) Bool (and (let ((temp___339 (of_array2 (to_array1 temp___337) (first3 temp___337) (last3 temp___337)))) (and (= (first5 temp___339) 1) (<= 0 (last5 temp___339)))) (<= (last3 temp___337) 1000)))
(assert (forall ((x Int)) (! (=> (dynamic_invariant x true true true true) (dynamic_invariant1 (unsigned32t_image x) true false true true)) :pattern ((unsigned32t_image x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant x true true true true) (= (unsigned32t_image x) (let ((temp___390 (to_string (attr__ATTRIBUTE_IMAGE4 x)))) (of_array1 (to_array temp___390) (first1 temp___390) (last1 temp___390))))) :pattern ((unsigned32t_image x)))))
(declare-fun returnt_image (Int) us_t1)
(declare-fun returnt_image__function_guard (us_t1 Int) Bool)
(declare-sort returnt 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 16)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq7 (returnt returnt) Bool)
(declare-const dummy7 returnt)
(declare-datatypes () ((returnt__ref (mk_returnt__ref (returnt__content returnt)))))
(define-fun returnt__ref___projection ((a returnt__ref)) returnt (returnt__content a))
(define-fun dynamic_invariant2 ((temp___expr_1411 Int) (temp___is_init_1407 Bool) (temp___skip_constant_1408 Bool) (temp___do_toplevel_1409 Bool) (temp___do_typ_inv_1410 Bool)) Bool (=> (or (= temp___is_init_1407 true) (<= 0 16)) (in_range5 temp___expr_1411)))
(assert (forall ((x Int)) (! (=> (dynamic_invariant2 x true true true true) (dynamic_invariant1 (returnt_image x) true false true true)) :pattern ((returnt_image x)))))
(assert (forall ((x Int)) (! (=> (dynamic_invariant2 x true true true true) (= (returnt_image x) (let ((temp___1415 (to_string (attr__ATTRIBUTE_IMAGE5 x)))) (of_array1 (to_array temp___1415) (first1 temp___1415) (last1 temp___1415))))) :pattern ((returnt_image x)))))
(declare-const i17s us_t1)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort descriptioni 0)
(declare-fun descriptioniqtint (descriptioni) Int)
(assert (forall ((i descriptioni)) (and (<= 1 (descriptioniqtint i)) (<= (descriptioniqtint i) 150))))
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 150)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq8 (descriptioni descriptioni) Bool)
(declare-const dummy8 descriptioni)
(declare-datatypes () ((descriptioni__ref (mk_descriptioni__ref (descriptioni__content descriptioni)))))
(define-fun descriptioni__ref___projection ((a descriptioni__ref)) descriptioni (descriptioni__content a))
(declare-const text us_t1)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const returnvalue Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const fullstring__first integer)
(declare-const fullstring__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq9 (integer integer) Bool)
(declare-const dummy9 integer)
(declare-datatypes () ((t18b__ref (mk_t18b__ref (t18b__content integer)))))
(define-fun t18b__ref___projection ((a t18b__ref)) integer (t18b__content a))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last6 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first6 (mk3 f l))) f) (= (to_rep1 (last6 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int character)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int character) (elts3 a))
(define-fun of_array3 ((a (Array Int character)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep1 (first6 (rt3 a))))
(define-fun last7 ((a us_t3)) Int (to_rep1 (last6 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last7 a)) (+ (- (last7 a) (first7 a)) 1) 0))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int character)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int character)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int character)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment3 a))))
(define-fun bool_eq4 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep1 (first6 (rt3 x))) (to_rep1 (last6 (rt3 x))) (elts3 y) (to_rep1 (first6 (rt3 y))) (to_rep1 (last6 (rt3 y)))))
(declare-fun user_eq10 (us_t3 us_t3) Bool)
(declare-const dummy10 us_t3)
(declare-datatypes () ((t19b__ref (mk_t19b__ref (t19b__content us_t3)))))
(define-fun t19b__ref___projection ((a t19b__ref)) us_t3 (t19b__content a))
(declare-fun temp___String_Literal_1509 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1509 us_void_param) 1)) 58) (= (to_rep (select (temp___String_Literal_1509 us_void_param) 2)) 32)) :pattern ((temp___String_Literal_1509 us_void_param)))))
(declare-fun temp___String_Literal_1513 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (= (to_rep (select (temp___String_Literal_1513 us_void_param) 1)) 32) (= (to_rep (select (temp___String_Literal_1513 us_void_param) 2)) 40)) (= (to_rep (select (temp___String_Literal_1513 us_void_param) 3)) 32)) :pattern ((temp___String_Literal_1513 us_void_param)))))
(declare-fun temp___String_Literal_1518 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_1518 us_void_param) 1)) 32) (= (to_rep (select (temp___String_Literal_1518 us_void_param) 2)) 41)) :pattern ((temp___String_Literal_1518 us_void_param)))))
(define-fun dynamic_invariant3 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant4 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant5 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant6 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant7 ((temp___expr_586 Int) (temp___is_init_582 Bool) (temp___skip_constant_583 Bool) (temp___do_toplevel_584 Bool) (temp___do_typ_inv_585 Bool)) Bool (=> (or (= temp___is_init_582 true) (<= 1 150)) (in_range6 temp___expr_586)))
(define-fun dynamic_invariant8 ((temp___expr_296 us_t2) (temp___is_init_292 Bool) (temp___skip_constant_293 Bool) (temp___do_toplevel_294 Bool) (temp___do_typ_inv_295 Bool)) Bool (and (=> (not (= temp___skip_constant_293 true)) (dynamic_property2 1 2147483647 (first5 temp___expr_296) (last5 temp___expr_296))) (=> (= temp___do_toplevel_294 true) (=> (= temp___is_init_292 true) (and (= (first5 temp___expr_296) 1) (<= 0 (last5 temp___expr_296)))))))
(define-fun dynamic_predicate1 ((temp___299 us_t2)) Bool (and (= (first5 temp___299) 1) (<= 0 (last5 temp___299))))
(declare-const thecodename Int)
(declare-const temp___1517 (Array Int character))
(declare-const temp___15171 t1)
(declare-const temp___1512 (Array Int character))
(declare-const temp___15121 t1)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const temp___1511 (Array Int character))
(declare-const temp___15111 t)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const temp___1514 (Array Int character))
(declare-const temp___15141 t)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 Int)
(define-fun temp___15122 () us_t1 (mk___t1 temp___1512 temp___15121))
(define-fun temp___15172 () us_t1 (mk___t1 temp___1517 temp___15171))
(assert (dynamic_invariant1 i17s true false true true))
(assert (dynamic_invariant1 text true false true true))
(assert (in_range4 returnvalue))
(assert (in_range5 thecodename))
(assert (and (= temp___15172 (unsigned32t_image returnvalue)) (and (dynamic_invariant1 temp___15172 true false true true) (= temp___15172 (let ((temp___388 (to_string (attr__ATTRIBUTE_IMAGE4 returnvalue)))) (mk___t1 (elts temp___388) (mk1 (to_rep1 (first (rt temp___388))) (to_rep1 (last (rt temp___388))))))))))
(assert (and (= temp___15122 (returnt_image thecodename)) (and (dynamic_invariant1 temp___15122 true false true true) (= temp___15122 (let ((temp___1414 (to_string (attr__ATTRIBUTE_IMAGE5 thecodename)))) (mk___t1 (elts temp___1414) (mk1 (to_rep1 (first (rt temp___1414))) (to_rep1 (last (rt temp___1414))))))))))
(assert (=> (= (length1 text) 0) (= (temp___String_Literal_1509 Tuple0) temp___1511)))
(assert (=> (= (length1 text) 0) (= (mk 1 2) temp___15111)))
(assert (=> (not (= (length1 text) 0)) (=> (<= 1 2) (= o (+ (- 2 1) 1)))))
(assert (=> (not (= (length1 text) 0)) (=> (not (<= 1 2)) (= o 0))))
(assert (=> (not (= (length1 text) 0)) (=> (<= (to_rep1 (first2 (rt1 text))) (to_rep1 (last2 (rt1 text)))) (= o1 (+ (- (to_rep1 (last2 (rt1 text))) (to_rep1 (first2 (rt1 text)))) 1)))))
(assert (=> (not (= (length1 text) 0)) (=> (not (<= (to_rep1 (first2 (rt1 text))) (to_rep1 (last2 (rt1 text))))) (= o1 0))))
(assert (=> (not (= (length1 text) 0)) (= o2 (+ o1 o))))
(assert (=> (not (= (length1 text) 0)) (= o3 (+ (to_rep1 (first2 (rt1 text))) o2))))
(assert (=> (not (= (length1 text) 0)) (= o4 (- o3 1))))
(assert (=> (not (= (length1 text) 0)) (and (= o5 o4) (in_range2 o4))))
(assert (=> (not (= (length1 text) 0)) (= (concat1 (elts1 text) (to_rep1 (first2 (rt1 text))) (to_rep1 (last2 (rt1 text))) (temp___String_Literal_1509 Tuple0) 1 2) temp___1511)))
(assert (=> (not (= (length1 text) 0)) (= (mk (to_rep1 (first2 (rt1 text))) o5) temp___15111)))
(assert (=> (= (length (mk___t temp___1511 temp___15111)) 0) (= temp___1512 temp___1514)))
(assert (=> (= (length (mk___t temp___1511 temp___15111)) 0) (= (mk (to_rep1 (first2 temp___15121)) (to_rep1 (last2 temp___15121))) temp___15141)))
(assert (=> (not (= (length (mk___t temp___1511 temp___15111)) 0)) (=> (<= (to_rep1 (first2 temp___15121)) (to_rep1 (last2 temp___15121))) (= o6 (+ (- (to_rep1 (last2 temp___15121)) (to_rep1 (first2 temp___15121))) 1)))))
(assert (=> (not (= (length (mk___t temp___1511 temp___15111)) 0)) (=> (not (<= (to_rep1 (first2 temp___15121)) (to_rep1 (last2 temp___15121)))) (= o6 0))))
(assert (=> (not (= (length (mk___t temp___1511 temp___15111)) 0)) (=> (<= (to_rep1 (first temp___15111)) (to_rep1 (last temp___15111))) (= o7 (+ (- (to_rep1 (last temp___15111)) (to_rep1 (first temp___15111))) 1)))))
(assert (=> (not (= (length (mk___t temp___1511 temp___15111)) 0)) (=> (not (<= (to_rep1 (first temp___15111)) (to_rep1 (last temp___15111)))) (= o7 0))))
(assert (=> (not (= (length (mk___t temp___1511 temp___15111)) 0)) (= o8 (+ o7 o6))))
(assert (=> (not (= (length (mk___t temp___1511 temp___15111)) 0)) (= o9 (+ (to_rep1 (first temp___15111)) o8))))
(assert (=> (not (= (length (mk___t temp___1511 temp___15111)) 0)) (= o10 (- o9 1))))
(assert (=> (not (= (length (mk___t temp___1511 temp___15111)) 0)) (and (= o11 o10) (in_range2 o10))))
(assert (=> (not (= (length (mk___t temp___1511 temp___15111)) 0)) (= (concat1 temp___1511 (to_rep1 (first temp___15111)) (to_rep1 (last temp___15111)) temp___1512 (to_rep1 (first2 temp___15121)) (to_rep1 (last2 temp___15121))) temp___1514)))
(assert (=> (not (= (length (mk___t temp___1511 temp___15111)) 0)) (= (mk (to_rep1 (first temp___15111)) o11) temp___15141)))
(assert (not (= (length (mk___t temp___1514 temp___15141)) 0)))
(assert (=> (<= 1 3) (= o12 (+ (- 3 1) 1))))
(assert (=> (not (<= 1 3)) (= o12 0)))
(assert (=> (<= (to_rep1 (first temp___15141)) (to_rep1 (last temp___15141))) (= o13 (+ (- (to_rep1 (last temp___15141)) (to_rep1 (first temp___15141))) 1))))
(assert (=> (not (<= (to_rep1 (first temp___15141)) (to_rep1 (last temp___15141)))) (= o13 0)))
(assert (= o14 (+ o13 o12)))
(assert (= o15 (+ (to_rep1 (first temp___15141)) o14)))
(assert (= o16 (- o15 1)))
(assert (not (in_range2 o16)))
(check-sat)
(exit)
