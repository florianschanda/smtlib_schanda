(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort ta_tD1 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (ta_tD1 ta_tD1) Bool)
(declare-const dummy1 ta_tD1)
(declare-datatypes () ((ta_tD1__ref (mk_ta_tD1__ref (ta_tD1__content ta_tD1)))))
(define-fun ta_tD1__ref___projection ((a ta_tD1__ref)) ta_tD1 (ta_tD1__content a))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int integer)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int integer) (elts a))
(define-fun of_array ((a (Array Int integer)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq2 (us_t us_t) Bool)
(declare-const dummy2 us_t)
(declare-datatypes () ((ta_tB__ref (mk_ta_tB__ref (ta_tB__content us_t)))))
(define-fun ta_tB__ref___projection ((a ta_tB__ref)) us_t (ta_tB__content a))
(declare-sort tb_tD1 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (tb_tD1 tb_tD1) Bool)
(declare-const dummy3 tb_tD1)
(declare-datatypes () ((tb_tD1__ref (mk_tb_tD1__ref (tb_tD1__content tb_tD1)))))
(define-fun tb_tD1__ref___projection ((a tb_tD1__ref)) tb_tD1 (tb_tD1__content a))
(declare-const dummy4 (Array Int integer))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int integer)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int integer)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int integer)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq4 ((Array Int integer) (Array Int integer)) Bool)
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int (Array Int integer)))))))
(declare-fun slide1 ((Array Int (Array Int integer)) Int Int) (Array Int (Array Int integer)))
(assert (forall ((a (Array Int (Array Int integer)))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int (Array Int integer)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int (Array Int integer))) (a__first Int) (a__last Int) (b (Array Int (Array Int integer))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq (select a temp___idx_155) 1 2 (select b (+ (- b__first a__first) temp___idx_155)) 1 2) true)))) true false))
(assert (forall ((a (Array Int (Array Int integer))) (b (Array Int (Array Int integer)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq (select a temp___idx_155) 1 2 (select b (+ (- b__first a__first) temp___idx_155)) 1 2) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const o_a (Array Int integer))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const o_b (Array Int (Array Int integer)))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-fun temp___221 ((Array Int integer) Int Int) (Array Int integer))
(declare-fun update_proof__B_1__a__aggregate_def (Int Int) (Array Int integer))
(declare-fun temp___233 (Int) (Array Int integer))
(declare-fun temp___241 (Int) (Array Int integer))
(declare-fun temp___249 ((Array Int (Array Int integer)) Int (Array Int integer)) (Array Int (Array Int integer)))
(declare-fun temp___255 (Int) (Array Int integer))
(declare-fun temp___261 (Int) (Array Int integer))
(declare-fun update_proof__B_2__b__aggregate_def ((Array Int integer) (Array Int integer)) (Array Int (Array Int integer)))
(declare-fun temp___275 (Int Int) (Array Int integer))
(declare-fun temp___280 (Int Int) (Array Int integer))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(assert (forall ((temp___230 Int) (temp___231 Int)) (let ((temp___229 (update_proof__B_1__a__aggregate_def temp___230 temp___231))) (=> (and (dynamic_invariant temp___230 true true true true) (dynamic_invariant temp___231 true true true true)) (and (= (to_rep (select temp___229 1)) temp___230) (= (to_rep (select temp___229 2)) temp___231))))))
(assert (forall ((temp___223 (Array Int integer))) (forall ((temp___224 Int) (temp___225 Int)) (let ((temp___222 (temp___221 temp___223 temp___224 temp___225))) (=> (and (in_range2 temp___224) (dynamic_invariant temp___225 true true true true)) (forall ((temp___226 Int)) (ite (= temp___226 temp___224) (= (to_rep (select temp___222 temp___226)) temp___225) (= (select temp___222 temp___226) (select temp___223 temp___226)))))))))
(assert (forall ((temp___272 (Array Int integer)) (temp___273 (Array Int integer))) (let ((temp___271 (update_proof__B_2__b__aggregate_def temp___272 temp___273))) (and (= (select temp___271 1) temp___272) (= (select temp___271 2) temp___273)))))
(assert (forall ((temp___277 Int) (temp___278 Int)) (let ((temp___276 (temp___275 temp___277 temp___278))) (=> (and (dynamic_invariant temp___277 true true true true) (dynamic_invariant temp___278 true true true true)) (and (= (to_rep (select temp___276 1)) temp___277) (= (to_rep (select temp___276 2)) temp___278))))))
(assert (forall ((temp___282 Int) (temp___283 Int)) (let ((temp___281 (temp___280 temp___282 temp___283))) (=> (and (dynamic_invariant temp___282 true true true true) (dynamic_invariant temp___283 true true true true)) (and (= (to_rep (select temp___281 1)) temp___282) (= (to_rep (select temp___281 2)) temp___283))))))
(assert (forall ((temp___235 Int)) (=> (dynamic_invariant temp___235 true true true true) (forall ((temp___236 Int)) (= (to_rep (select (temp___233 temp___235) temp___236)) temp___235)))))
(assert (forall ((temp___243 Int)) (=> (dynamic_invariant temp___243 true true true true) (forall ((temp___244 Int)) (= (to_rep (select (temp___241 temp___243) temp___244)) temp___243)))))
(assert (forall ((temp___251 (Array Int (Array Int integer)))) (forall ((temp___252 Int)) (forall ((temp___253 (Array Int integer))) (let ((temp___250 (temp___249 temp___251 temp___252 temp___253))) (=> (in_range3 temp___252) (forall ((temp___254 Int)) (ite (= temp___254 temp___252) (= (select temp___250 temp___254) temp___253) (= (select temp___250 temp___254) (select temp___251 temp___254))))))))))
(assert (forall ((temp___257 Int)) (=> (dynamic_invariant temp___257 true true true true) (forall ((temp___258 Int)) (= (to_rep (select (temp___255 temp___257) temp___258)) temp___257)))))
(assert (forall ((temp___263 Int)) (=> (dynamic_invariant temp___263 true true true true) (forall ((temp___264 Int)) (= (to_rep (select (temp___261 temp___263) temp___264)) temp___263)))))
(declare-const a (Array Int integer))
(declare-const b (Array Int (Array Int integer)))
(declare-const o integer)
(declare-const o1 (Array Int integer))
(declare-const result (Array Int integer))
(declare-const a1 (Array Int integer))
(declare-const result1 (Array Int integer))
(declare-const a2 (Array Int integer))
(declare-const result2 (Array Int (Array Int integer)))
(declare-const b1 (Array Int (Array Int integer)))
(declare-const result3 (Array Int (Array Int integer)))
(declare-const b2 (Array Int (Array Int integer)))
(assert (= (mk_map__ref result) (mk_map__ref a)))
(assert (= a1 (update_proof__B_1__a__aggregate_def 1 2)))
(assert (= a1 o_a))
(assert (= (to_rep o) 0))
(assert (= o1 (store a1 2 o)))
(assert (= a1 result1))
(assert (= a2 o1))
(assert (= (to_rep (select a2 1)) (to_rep (select o_a 1))))
(assert (= (to_rep (select a2 2)) 0))
(assert (= (bool_eq a2 1 2 (temp___221 o_a 2 0) 1 2) true))
(assert (= result2 b))
(assert (= b1 (update_proof__B_2__b__aggregate_def (temp___275 11 12) (temp___280 21 22))))
(assert (= b1 o_b))
(assert (= result3 b1))
(assert (= b2 (store b1 2 (temp___233 0))))
(assert (= (bool_eq (select b2 1) 1 2 (select o_b 1) 1 2) true))
(assert (= (bool_eq (select b2 2) 1 2 (temp___241 0) 1 2) true))
(assert (not (= (bool_eq2 b2 1 2 (temp___249 o_b 2 (temp___255 0)) 1 2) true)))
(check-sat)
(exit)
