(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range temp___expr_18)))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int integer))))))
(declare-fun slide ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-const dummy1 (Array Int integer))
(declare-const value__size Int)
(declare-fun object__size ((Array Int integer)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int integer)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int integer)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int integer))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int integer))) (<= 0 (object__alignment a))))
(declare-fun user_eq1 ((Array Int integer) (Array Int integer)) Bool)
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int (Array Int integer)))))))
(declare-fun slide1 ((Array Int (Array Int integer)) Int Int) (Array Int (Array Int integer)))
(assert (forall ((a (Array Int (Array Int integer)))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int (Array Int integer)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int (Array Int integer))) (a__first Int) (a__last Int) (b (Array Int (Array Int integer))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq (select a temp___idx_155) 1 2 (select b (+ (- b__first a__first) temp___idx_155)) 1 2) true)))) true false))
(assert (forall ((a (Array Int (Array Int integer))) (b (Array Int (Array Int integer)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq (select a temp___idx_155) 1 2 (select b (+ (- b__first a__first) temp___idx_155)) 1 2) true))))))))
(declare-sort ta3D1 0)
(declare-fun ta3D1qtint (ta3D1) Int)
(assert (forall ((i ta3D1)) (and (<= 1 (ta3D1qtint i)) (<= (ta3D1qtint i) 2))))
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq2 (ta3D1 ta3D1) Bool)
(declare-const dummy2 ta3D1)
(declare-datatypes () ((ta3D1__ref (mk_ta3D1__ref (ta3D1__content ta3D1)))))
(define-fun ta3D1__ref___projection ((a ta3D1__ref)) ta3D1 (ta3D1__content a))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const b Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-sort t59s 0)
(declare-fun t59sqtint (t59s) Int)
(assert (forall ((i t59s)) (and (<= 1 (t59sqtint i)) (<= (t59sqtint i) 2))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq3 (t59s t59s) Bool)
(declare-const dummy3 t59s)
(declare-datatypes () ((t59s__ref (mk_t59s__ref (t59s__content t59s)))))
(define-fun t59s__ref___projection ((a t59s__ref)) t59s (t59s__content a))
(declare-sort t65s 0)
(declare-fun t65sqtint (t65s) Int)
(assert (forall ((i t65s)) (and (<= 1 (t65sqtint i)) (<= (t65sqtint i) 2))))
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq4 (t65s t65s) Bool)
(declare-const dummy4 t65s)
(declare-datatypes () ((t65s__ref (mk_t65s__ref (t65s__content t65s)))))
(define-fun t65s__ref___projection ((a t65s__ref)) t65s (t65s__content a))
(declare-sort t71s 0)
(declare-fun t71sqtint (t71s) Int)
(assert (forall ((i t71s)) (and (<= 1 (t71sqtint i)) (<= (t71sqtint i) 2))))
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq5 (t71s t71s) Bool)
(declare-const dummy5 t71s)
(declare-datatypes () ((t71s__ref (mk_t71s__ref (t71s__content t71s)))))
(define-fun t71s__ref___projection ((a t71s__ref)) t71s (t71s__content a))
(declare-sort t77s 0)
(declare-fun t77sqtint (t77s) Int)
(assert (forall ((i t77s)) (and (<= 1 (t77sqtint i)) (<= (t77sqtint i) 2))))
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq6 (t77s t77s) Bool)
(declare-const dummy6 t77s)
(declare-datatypes () ((t77s__ref (mk_t77s__ref (t77s__content t77s)))))
(define-fun t77s__ref___projection ((a t77s__ref)) t77s (t77s__content a))
(declare-sort t83s 0)
(declare-fun t83sqtint (t83s) Int)
(assert (forall ((i t83s)) (and (<= 1 (t83sqtint i)) (<= (t83sqtint i) 2))))
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq7 (t83s t83s) Bool)
(declare-const dummy7 t83s)
(declare-datatypes () ((t83s__ref (mk_t83s__ref (t83s__content t83s)))))
(define-fun t83s__ref___projection ((a t83s__ref)) t83s (t83s__content a))
(declare-fun temp_____aggregate_def_249 ((Array Int integer) (Array Int integer)) (Array Int (Array Int integer)))
(declare-fun temp_____aggregate_def_254 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_259 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_265 ((Array Int integer) (Array Int integer)) (Array Int (Array Int integer)))
(declare-fun temp_____aggregate_def_270 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_275 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_281 ((Array Int integer) (Array Int integer)) (Array Int (Array Int integer)))
(declare-fun temp_____aggregate_def_286 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_291 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_297 ((Array Int integer) (Array Int integer)) (Array Int (Array Int integer)))
(declare-fun temp_____aggregate_def_302 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_307 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_313 ((Array Int integer) (Array Int integer)) (Array Int (Array Int integer)))
(declare-fun temp_____aggregate_def_318 (Int Int) (Array Int integer))
(declare-fun temp_____aggregate_def_323 (Int Int) (Array Int integer))
(declare-const rliteral integer)
(assert (= (integerqtint rliteral) 2))
(assert (forall ((temp___256 Int) (temp___257 Int)) (let ((temp___255 (temp_____aggregate_def_254 temp___256 temp___257))) (=> (and (dynamic_invariant temp___256 true true true true) (dynamic_invariant temp___257 true true true true)) (and (= (to_rep (select temp___255 1)) temp___256) (= (select temp___255 2) rliteral))))))
(assert (forall ((temp___251 (Array Int integer)) (temp___252 (Array Int integer))) (let ((temp___250 (temp_____aggregate_def_249 temp___251 temp___252))) (and (= (select temp___250 1) temp___251) (= (select temp___250 2) temp___252)))))
(assert (forall ((temp___261 Int) (temp___262 Int)) (let ((temp___260 (temp_____aggregate_def_259 temp___261 temp___262))) (=> (and (dynamic_invariant temp___261 true true true true) (dynamic_invariant temp___262 true true true true)) (and (= (to_rep (select temp___260 1)) temp___261) (= (select temp___260 2) rliteral))))))
(assert (forall ((temp___272 Int) (temp___273 Int)) (let ((temp___271 (temp_____aggregate_def_270 temp___272 temp___273))) (=> (and (dynamic_invariant temp___272 true true true true) (dynamic_invariant temp___273 true true true true)) (and (= (to_rep (select temp___271 1)) temp___272) (= (to_rep (select temp___271 2)) temp___273))))))
(assert (forall ((temp___267 (Array Int integer)) (temp___268 (Array Int integer))) (let ((temp___266 (temp_____aggregate_def_265 temp___267 temp___268))) (and (= (select temp___266 1) temp___267) (= (select temp___266 2) temp___268)))))
(assert (forall ((temp___277 Int) (temp___278 Int)) (let ((temp___276 (temp_____aggregate_def_275 temp___277 temp___278))) (=> (and (dynamic_invariant temp___277 true true true true) (dynamic_invariant temp___278 true true true true)) (and (= (to_rep (select temp___276 1)) temp___277) (= (to_rep (select temp___276 2)) temp___278))))))
(assert (forall ((temp___288 Int) (temp___289 Int)) (let ((temp___287 (temp_____aggregate_def_286 temp___288 temp___289))) (=> (and (dynamic_invariant temp___288 true true true true) (dynamic_invariant temp___289 true true true true)) (and (= (to_rep (select temp___287 1)) temp___288) (= (to_rep (select temp___287 2)) temp___289))))))
(assert (forall ((temp___283 (Array Int integer)) (temp___284 (Array Int integer))) (let ((temp___282 (temp_____aggregate_def_281 temp___283 temp___284))) (and (= (select temp___282 1) temp___283) (= (select temp___282 2) temp___284)))))
(assert (forall ((temp___293 Int) (temp___294 Int)) (let ((temp___292 (temp_____aggregate_def_291 temp___293 temp___294))) (=> (and (dynamic_invariant temp___293 true true true true) (dynamic_invariant temp___294 true true true true)) (and (= (to_rep (select temp___292 1)) temp___293) (= (to_rep (select temp___292 2)) temp___294))))))
(assert (forall ((temp___304 Int) (temp___305 Int)) (let ((temp___303 (temp_____aggregate_def_302 temp___304 temp___305))) (=> (and (dynamic_invariant temp___304 true true true true) (dynamic_invariant temp___305 true true true true)) (and (= (select temp___303 1) rliteral) (= (to_rep (select temp___303 2)) temp___305))))))
(assert (forall ((temp___299 (Array Int integer)) (temp___300 (Array Int integer))) (let ((temp___298 (temp_____aggregate_def_297 temp___299 temp___300))) (and (= (select temp___298 1) temp___299) (= (select temp___298 2) temp___300)))))
(assert (forall ((temp___309 Int) (temp___310 Int)) (let ((temp___308 (temp_____aggregate_def_307 temp___309 temp___310))) (=> (and (dynamic_invariant temp___309 true true true true) (dynamic_invariant temp___310 true true true true)) (and (= (select temp___308 1) rliteral) (= (to_rep (select temp___308 2)) temp___310))))))
(assert (forall ((temp___320 Int) (temp___321 Int)) (let ((temp___319 (temp_____aggregate_def_318 temp___320 temp___321))) (=> (and (dynamic_invariant temp___320 true true true true) (dynamic_invariant temp___321 true true true true)) (and (= (to_rep (select temp___319 1)) temp___320) (= (select temp___319 2) rliteral))))))
(assert (forall ((temp___315 (Array Int integer)) (temp___316 (Array Int integer))) (let ((temp___314 (temp_____aggregate_def_313 temp___315 temp___316))) (and (= (select temp___314 1) temp___315) (= (select temp___314 2) temp___316)))))
(assert (forall ((temp___325 Int) (temp___326 Int)) (let ((temp___324 (temp_____aggregate_def_323 temp___325 temp___326))) (=> (and (dynamic_invariant temp___325 true true true true) (dynamic_invariant temp___326 true true true true)) (and (= (to_rep (select temp___324 1)) temp___325) (= (select temp___324 2) rliteral))))))
(declare-const one Int)
(declare-const a (Array Int (Array Int integer)))
(declare-const a1 (Array Int (Array Int integer)))
(declare-const a2 (Array Int (Array Int integer)))
(assert (in_range one))
(assert (in_range b))
(assert (= one 1))
(assert (ite (= b 1) (forall ((j Int)) (=> (and (<= 1 j) (<= j 2)) (and (= (to_rep (select (select a j) one)) one) (= (to_rep (select (select a j) 2)) 2)))) (ite (= b 2) (forall ((j Int)) (=> (and (<= 1 j) (<= j 2)) (forall ((k Int)) (=> (and (<= 1 k) (<= k 2)) (= (to_rep (select (select a j) k)) one))))) (ite (= b 3) (forall ((j Int)) (=> (and (<= 1 j) (<= j 2)) (forall ((k Int)) (=> (and (<= 1 k) (<= k 2)) (= (to_rep (select (select a j) k)) one))))) (ite (= b 4) (forall ((j Int)) (=> (and (<= 1 j) (<= j 2)) (and (= (to_rep (select (select a j) one)) 2) (= (to_rep (select (select a j) 2)) one)))) (forall ((j Int)) (=> (and (<= 1 j) (<= j 2)) (and (= (to_rep (select (select a j) one)) one) (= (to_rep (select (select a j) 2)) 2)))))))))
(assert (= a a1))
(assert (= a2 a))
(assert (not (= b 1)))
(assert (= b 2))
(assert (not (= (bool_eq1 a1 1 2 (temp_____aggregate_def_265 (temp_____aggregate_def_270 one one) (temp_____aggregate_def_275 one one)) 1 2) true)))
(check-sat)
(exit)
