(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(declare-sort item_t 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 9)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (item_t item_t) Bool)
(declare-const dummy1 item_t)
(declare-datatypes () ((item_t__ref (mk_item_t__ref (item_t__content item_t)))))
(define-fun item_t__ref___4__projection ((a item_t__ref)) item_t (item_t__content a))
(define-fun to_rep ((x natural)) Int (naturalqtint x))
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-fun to_rep1 (item_t) Int)
(declare-fun of_rep1 (Int) item_t)
(assert (forall ((x item_t)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x item_t)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int item_t))))))
(declare-fun slide ((Array Int item_t) Int Int) (Array Int item_t))
(assert (forall ((a (Array Int item_t))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int item_t))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int item_t)) (a__first Int) (a__last Int) (b (Array Int item_t)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (to_rep1 (select a temp___idx_155)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_155))))))) true false))
(assert (forall ((a (Array Int item_t)) (b (Array Int item_t))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (to_rep1 (select a temp___idx_155)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_155)))))))))))
(declare-const dummy2 (Array Int item_t))
(declare-const value__size Int)
(declare-fun object__size ((Array Int item_t)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int item_t)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int item_t)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int item_t))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int item_t))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int item_t))) (<= 0 (object__alignment a))))
(declare-fun user_eq2 ((Array Int item_t) (Array Int item_t)) Bool)
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__test__fruit_rec__record_t__d natural)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) natural (rec__test__fruit_rec__record_t__d a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__test__fruit_rec__record_t__single_item item_t) (rec__test__fruit_rec__record_t__a item_t) (rec__test__fruit_rec__record_t__b item_t) (rec__test__fruit_rec__record_t__arr (Array Int item_t))))))
(define-fun us_split_fields_Single_Item__projection ((a us_split_fields)) item_t (rec__test__fruit_rec__record_t__single_item a))
(define-fun us_split_fields_A__projection ((a us_split_fields)) item_t (rec__test__fruit_rec__record_t__a a))
(define-fun us_split_fields_B__projection ((a us_split_fields)) item_t (rec__test__fruit_rec__record_t__b a))
(define-fun us_split_fields_Arr__projection ((a us_split_fields)) (Array Int item_t) (rec__test__fruit_rec__record_t__arr a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields) (attr__constrained Bool)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___3__projection ((a us_rep)) Bool (attr__constrained a))
(define-fun test__fruit_rec__record_t__single_item__pred ((a us_rep)) Bool (= (to_rep (rec__test__fruit_rec__record_t__d (us_split_discrs1 a))) 1))
(define-fun test__fruit_rec__record_t__a__pred ((a us_rep)) Bool (= (to_rep (rec__test__fruit_rec__record_t__d (us_split_discrs1 a))) 2))
(define-fun test__fruit_rec__record_t__b__pred ((a us_rep)) Bool (= (to_rep (rec__test__fruit_rec__record_t__d (us_split_discrs1 a))) 2))
(define-fun test__fruit_rec__record_t__arr__pred ((a us_rep)) Bool (and (not (= (to_rep (rec__test__fruit_rec__record_t__d (us_split_discrs1 a))) 1)) (not (= (to_rep (rec__test__fruit_rec__record_t__d (us_split_discrs1 a))) 2))))
(define-fun bool_eq1 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep (rec__test__fruit_rec__record_t__d (us_split_discrs1 a))) (to_rep (rec__test__fruit_rec__record_t__d (us_split_discrs1 b)))) (and (and (and (=> (test__fruit_rec__record_t__single_item__pred a) (= (to_rep1 (rec__test__fruit_rec__record_t__single_item (us_split_fields1 a))) (to_rep1 (rec__test__fruit_rec__record_t__single_item (us_split_fields1 b))))) (=> (test__fruit_rec__record_t__a__pred a) (= (to_rep1 (rec__test__fruit_rec__record_t__a (us_split_fields1 a))) (to_rep1 (rec__test__fruit_rec__record_t__a (us_split_fields1 b)))))) (=> (test__fruit_rec__record_t__b__pred a) (= (to_rep1 (rec__test__fruit_rec__record_t__b (us_split_fields1 a))) (to_rep1 (rec__test__fruit_rec__record_t__b (us_split_fields1 b)))))) (=> (test__fruit_rec__record_t__arr__pred a) (= (bool_eq (rec__test__fruit_rec__record_t__arr (us_split_fields1 a)) 1 5 (rec__test__fruit_rec__record_t__arr (us_split_fields1 b)) 1 5) true)))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const test__fruit_rec__record_t__d__first__bit Int)
(declare-const test__fruit_rec__record_t__d__last__bit Int)
(declare-const test__fruit_rec__record_t__d__position Int)
(assert (<= 0 test__fruit_rec__record_t__d__first__bit))
(assert (< test__fruit_rec__record_t__d__first__bit test__fruit_rec__record_t__d__last__bit))
(assert (<= 0 test__fruit_rec__record_t__d__position))
(declare-const test__fruit_rec__record_t__single_item__first__bit Int)
(declare-const test__fruit_rec__record_t__single_item__last__bit Int)
(declare-const test__fruit_rec__record_t__single_item__position Int)
(assert (<= 0 test__fruit_rec__record_t__single_item__first__bit))
(assert (< test__fruit_rec__record_t__single_item__first__bit test__fruit_rec__record_t__single_item__last__bit))
(assert (<= 0 test__fruit_rec__record_t__single_item__position))
(declare-const test__fruit_rec__record_t__a__first__bit Int)
(declare-const test__fruit_rec__record_t__a__last__bit Int)
(declare-const test__fruit_rec__record_t__a__position Int)
(assert (<= 0 test__fruit_rec__record_t__a__first__bit))
(assert (< test__fruit_rec__record_t__a__first__bit test__fruit_rec__record_t__a__last__bit))
(assert (<= 0 test__fruit_rec__record_t__a__position))
(declare-const test__fruit_rec__record_t__b__first__bit Int)
(declare-const test__fruit_rec__record_t__b__last__bit Int)
(declare-const test__fruit_rec__record_t__b__position Int)
(assert (<= 0 test__fruit_rec__record_t__b__first__bit))
(assert (< test__fruit_rec__record_t__b__first__bit test__fruit_rec__record_t__b__last__bit))
(assert (<= 0 test__fruit_rec__record_t__b__position))
(declare-const test__fruit_rec__record_t__arr__first__bit Int)
(declare-const test__fruit_rec__record_t__arr__last__bit Int)
(declare-const test__fruit_rec__record_t__arr__position Int)
(assert (<= 0 test__fruit_rec__record_t__arr__first__bit))
(assert (< test__fruit_rec__record_t__arr__first__bit test__fruit_rec__record_t__arr__last__bit))
(assert (<= 0 test__fruit_rec__record_t__arr__position))
(declare-fun user_eq3 (us_rep us_rep) Bool)
(declare-const dummy3 us_rep)
(declare-datatypes () ((record_t__ref (mk_record_t__ref (record_t__content us_rep)))))
(define-fun record_t__ref___projection ((a record_t__ref)) us_rep (record_t__content a))
(define-fun default_initial_assumption ((temp___expr_295 us_rep) (temp___skip_top_level_296 Bool)) Bool (and (= (attr__constrained temp___expr_295) false) (= (to_rep (rec__test__fruit_rec__record_t__d (us_split_discrs1 temp___expr_295))) 0)))
(define-fun in_range2 ((rec__test__fruit_rec__record_t__d1 Int) (a us_rep)) Bool (= rec__test__fruit_rec__record_t__d1 (to_rep (rec__test__fruit_rec__record_t__d (us_split_discrs1 a)))))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const test__fruit_rec__record_t__d__first__bit1 Int)
(declare-const test__fruit_rec__record_t__d__last__bit1 Int)
(declare-const test__fruit_rec__record_t__d__position1 Int)
(assert (<= 0 test__fruit_rec__record_t__d__first__bit1))
(assert (< test__fruit_rec__record_t__d__first__bit1 test__fruit_rec__record_t__d__last__bit1))
(assert (<= 0 test__fruit_rec__record_t__d__position1))
(declare-const test__fruit_rec__record_t__single_item__first__bit1 Int)
(declare-const test__fruit_rec__record_t__single_item__last__bit1 Int)
(declare-const test__fruit_rec__record_t__single_item__position1 Int)
(assert (<= 0 test__fruit_rec__record_t__single_item__first__bit1))
(assert (< test__fruit_rec__record_t__single_item__first__bit1 test__fruit_rec__record_t__single_item__last__bit1))
(assert (<= 0 test__fruit_rec__record_t__single_item__position1))
(declare-const test__fruit_rec__record_t__a__first__bit1 Int)
(declare-const test__fruit_rec__record_t__a__last__bit1 Int)
(declare-const test__fruit_rec__record_t__a__position1 Int)
(assert (<= 0 test__fruit_rec__record_t__a__first__bit1))
(assert (< test__fruit_rec__record_t__a__first__bit1 test__fruit_rec__record_t__a__last__bit1))
(assert (<= 0 test__fruit_rec__record_t__a__position1))
(declare-const test__fruit_rec__record_t__b__first__bit1 Int)
(declare-const test__fruit_rec__record_t__b__last__bit1 Int)
(declare-const test__fruit_rec__record_t__b__position1 Int)
(assert (<= 0 test__fruit_rec__record_t__b__first__bit1))
(assert (< test__fruit_rec__record_t__b__first__bit1 test__fruit_rec__record_t__b__last__bit1))
(assert (<= 0 test__fruit_rec__record_t__b__position1))
(declare-const test__fruit_rec__record_t__arr__first__bit1 Int)
(declare-const test__fruit_rec__record_t__arr__last__bit1 Int)
(declare-const test__fruit_rec__record_t__arr__position1 Int)
(assert (<= 0 test__fruit_rec__record_t__arr__first__bit1))
(assert (< test__fruit_rec__record_t__arr__first__bit1 test__fruit_rec__record_t__arr__last__bit1))
(assert (<= 0 test__fruit_rec__record_t__arr__position1))
(declare-fun user_eq4 (us_rep us_rep) Bool)
(declare-const dummy4 us_rep)
(declare-datatypes () ((tapple_basketS__ref (mk_tapple_basketS__ref (tapple_basketS__content us_rep)))))
(define-fun tapple_basketS__ref___projection ((a tapple_basketS__ref)) us_rep (tapple_basketS__content a))
(define-fun dynamic_invariant ((temp___expr_330 us_rep) (temp___is_init_326 Bool) (temp___skip_constant_327 Bool) (temp___do_toplevel_328 Bool) (temp___do_typ_inv_329 Bool)) Bool (and (=> (not (= temp___skip_constant_327 true)) (in_range2 0 temp___expr_330)) (= (attr__constrained temp___expr_330) true)))
(define-fun default_initial_assumption1 ((temp___expr_333 us_rep) (temp___skip_top_level_334 Bool)) Bool (and (= (attr__constrained temp___expr_333) true) (= (to_rep (rec__test__fruit_rec__record_t__d (us_split_discrs1 temp___expr_333))) 0)))
(define-fun in_range3 ((rec__test__fruit_rec__record_t__d1 Int) (a us_rep)) Bool (= rec__test__fruit_rec__record_t__d1 (to_rep (rec__test__fruit_rec__record_t__d (us_split_discrs1 a)))))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const test__fruit_rec__record_t__d__first__bit2 Int)
(declare-const test__fruit_rec__record_t__d__last__bit2 Int)
(declare-const test__fruit_rec__record_t__d__position2 Int)
(assert (<= 0 test__fruit_rec__record_t__d__first__bit2))
(assert (< test__fruit_rec__record_t__d__first__bit2 test__fruit_rec__record_t__d__last__bit2))
(assert (<= 0 test__fruit_rec__record_t__d__position2))
(declare-const test__fruit_rec__record_t__single_item__first__bit2 Int)
(declare-const test__fruit_rec__record_t__single_item__last__bit2 Int)
(declare-const test__fruit_rec__record_t__single_item__position2 Int)
(assert (<= 0 test__fruit_rec__record_t__single_item__first__bit2))
(assert (< test__fruit_rec__record_t__single_item__first__bit2 test__fruit_rec__record_t__single_item__last__bit2))
(assert (<= 0 test__fruit_rec__record_t__single_item__position2))
(declare-const test__fruit_rec__record_t__a__first__bit2 Int)
(declare-const test__fruit_rec__record_t__a__last__bit2 Int)
(declare-const test__fruit_rec__record_t__a__position2 Int)
(assert (<= 0 test__fruit_rec__record_t__a__first__bit2))
(assert (< test__fruit_rec__record_t__a__first__bit2 test__fruit_rec__record_t__a__last__bit2))
(assert (<= 0 test__fruit_rec__record_t__a__position2))
(declare-const test__fruit_rec__record_t__b__first__bit2 Int)
(declare-const test__fruit_rec__record_t__b__last__bit2 Int)
(declare-const test__fruit_rec__record_t__b__position2 Int)
(assert (<= 0 test__fruit_rec__record_t__b__first__bit2))
(assert (< test__fruit_rec__record_t__b__first__bit2 test__fruit_rec__record_t__b__last__bit2))
(assert (<= 0 test__fruit_rec__record_t__b__position2))
(declare-const test__fruit_rec__record_t__arr__first__bit2 Int)
(declare-const test__fruit_rec__record_t__arr__last__bit2 Int)
(declare-const test__fruit_rec__record_t__arr__position2 Int)
(assert (<= 0 test__fruit_rec__record_t__arr__first__bit2))
(assert (< test__fruit_rec__record_t__arr__first__bit2 test__fruit_rec__record_t__arr__last__bit2))
(assert (<= 0 test__fruit_rec__record_t__arr__position2))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((t17b__ref (mk_t17b__ref (t17b__content us_rep)))))
(define-fun t17b__ref___projection ((a t17b__ref)) us_rep (t17b__content a))
(declare-const apple_basket__split_discrs us_split_discrs)
(declare-const apple_basket__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(define-fun in_range4 ((rec__test__fruit_rec__record_t__d1 Int) (a us_rep)) Bool (= rec__test__fruit_rec__record_t__d1 (to_rep (rec__test__fruit_rec__record_t__d (us_split_discrs1 a)))))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep)) (<= 0 (object__alignment4 a))))
(declare-const test__fruit_rec__record_t__d__first__bit3 Int)
(declare-const test__fruit_rec__record_t__d__last__bit3 Int)
(declare-const test__fruit_rec__record_t__d__position3 Int)
(assert (<= 0 test__fruit_rec__record_t__d__first__bit3))
(assert (< test__fruit_rec__record_t__d__first__bit3 test__fruit_rec__record_t__d__last__bit3))
(assert (<= 0 test__fruit_rec__record_t__d__position3))
(declare-const test__fruit_rec__record_t__single_item__first__bit3 Int)
(declare-const test__fruit_rec__record_t__single_item__last__bit3 Int)
(declare-const test__fruit_rec__record_t__single_item__position3 Int)
(assert (<= 0 test__fruit_rec__record_t__single_item__first__bit3))
(assert (< test__fruit_rec__record_t__single_item__first__bit3 test__fruit_rec__record_t__single_item__last__bit3))
(assert (<= 0 test__fruit_rec__record_t__single_item__position3))
(declare-const test__fruit_rec__record_t__a__first__bit3 Int)
(declare-const test__fruit_rec__record_t__a__last__bit3 Int)
(declare-const test__fruit_rec__record_t__a__position3 Int)
(assert (<= 0 test__fruit_rec__record_t__a__first__bit3))
(assert (< test__fruit_rec__record_t__a__first__bit3 test__fruit_rec__record_t__a__last__bit3))
(assert (<= 0 test__fruit_rec__record_t__a__position3))
(declare-const test__fruit_rec__record_t__b__first__bit3 Int)
(declare-const test__fruit_rec__record_t__b__last__bit3 Int)
(declare-const test__fruit_rec__record_t__b__position3 Int)
(assert (<= 0 test__fruit_rec__record_t__b__first__bit3))
(assert (< test__fruit_rec__record_t__b__first__bit3 test__fruit_rec__record_t__b__last__bit3))
(assert (<= 0 test__fruit_rec__record_t__b__position3))
(declare-const test__fruit_rec__record_t__arr__first__bit3 Int)
(declare-const test__fruit_rec__record_t__arr__last__bit3 Int)
(declare-const test__fruit_rec__record_t__arr__position3 Int)
(assert (<= 0 test__fruit_rec__record_t__arr__first__bit3))
(assert (< test__fruit_rec__record_t__arr__first__bit3 test__fruit_rec__record_t__arr__last__bit3))
(assert (<= 0 test__fruit_rec__record_t__arr__position3))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((t20b__ref (mk_t20b__ref (t20b__content us_rep)))))
(define-fun t20b__ref___projection ((a t20b__ref)) us_rep (t20b__content a))
(declare-const mixed_basket__attr__constrained Bool)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-fun temp_____aggregate_def_445 (Int Int Int Int Int) (Array Int item_t))
(declare-fun temp_____aggregate_def_453 (Int Int Int Int Int) (Array Int item_t))
(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range temp___expr_39)))
(define-fun dynamic_invariant2 ((temp___expr_275 Int) (temp___is_init_271 Bool) (temp___skip_constant_272 Bool) (temp___do_toplevel_273 Bool) (temp___do_typ_inv_274 Bool)) Bool (=> (or (= temp___is_init_271 true) (<= 0 9)) (in_range1 temp___expr_275)))
(assert (forall ((temp___455 Int) (temp___456 Int) (temp___457 Int) (temp___458 Int) (temp___459 Int)) (let ((temp___454 (temp_____aggregate_def_453 temp___455 temp___456 temp___457 temp___458 temp___459))) (=> (and (and (and (and (dynamic_invariant2 temp___455 true true true true) (dynamic_invariant2 temp___456 true true true true)) (dynamic_invariant2 temp___457 true true true true)) (dynamic_invariant2 temp___458 true true true true)) (dynamic_invariant2 temp___459 true true true true)) (and (and (and (and (= (to_rep1 (select temp___454 1)) temp___455) (= (to_rep1 (select temp___454 2)) temp___456)) (= (to_rep1 (select temp___454 3)) temp___457)) (= (to_rep1 (select temp___454 4)) temp___458)) (= (to_rep1 (select temp___454 5)) temp___459))))))
(assert (forall ((temp___447 Int) (temp___448 Int) (temp___449 Int) (temp___450 Int) (temp___451 Int)) (let ((temp___446 (temp_____aggregate_def_445 temp___447 temp___448 temp___449 temp___450 temp___451))) (=> (and (and (and (and (dynamic_invariant2 temp___447 true true true true) (dynamic_invariant2 temp___448 true true true true)) (dynamic_invariant2 temp___449 true true true true)) (dynamic_invariant2 temp___450 true true true true)) (dynamic_invariant2 temp___451 true true true true)) (and (and (and (and (= (to_rep1 (select temp___446 1)) temp___447) (= (to_rep1 (select temp___446 2)) temp___448)) (= (to_rep1 (select temp___446 3)) temp___449)) (= (to_rep1 (select temp___446 4)) temp___450)) (= (to_rep1 (select temp___446 5)) temp___451))))))
(assert (not (in_range 0)))
(check-sat)
(exit)
