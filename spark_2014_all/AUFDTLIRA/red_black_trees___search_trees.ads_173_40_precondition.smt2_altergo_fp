(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type natural

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : natural, natural -> bool

logic dummy : natural

type natural__ref = { natural__content : natural
}

function natural__ref___projection(a: natural__ref) : natural =
  (a).natural__content

logic to_rep : natural -> int

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type tcount_typeB

predicate in_range2(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : tcount_typeB, tcount_typeB -> bool

logic dummy1 : tcount_typeB

type tcount_typeB__ref = { tcount_typeB__content : tcount_typeB
}

function tcount_typeB__ref___projection(a: tcount_typeB__ref) : tcount_typeB =
  (a).tcount_typeB__content

type index_type

predicate in_range3(x: int) = ((1 <= x) and (x <= 100))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : index_type, index_type -> bool

logic dummy2 : index_type

type index_type__ref = { index_type__content : index_type
}

function index_type__ref___projection(a: index_type__ref) : index_type =
  (a).index_type__content

type extended_index_type

predicate in_range4(x: int) = ((0 <= x) and (x <= 100))

logic bool_eq5 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq5(x, y)]. (((x = y) -> (bool_eq5(x,
  y) = true)) and ((not (x = y)) -> (bool_eq5(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq3 : extended_index_type, extended_index_type -> bool

logic dummy3 : extended_index_type

type extended_index_type__ref = { extended_index_type__content :
extended_index_type
}

function extended_index_type__ref___projection(a: extended_index_type__ref) : extended_index_type =
  (a).extended_index_type__content

logic to_rep1 : extended_index_type -> int

logic of_rep1 : int -> extended_index_type

axiom inversion_axiom1 :
  (forall x:extended_index_type [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:extended_index_type [to_rep1(x)]. in_range4(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range4(x) ->
  (to_rep1(of_rep1(x)) = x)))

type direction

predicate in_range5(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq4 : direction, direction -> bool

logic dummy4 : direction

type direction__ref = { direction__content : direction
}

function direction__ref___projection(a: direction__ref) : direction =
  (a).direction__content

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep

logic bool_eq7 : us_rep, us_rep -> bool

logic value__size : int

logic object__size : us_rep -> int

logic value__alignment : int

logic object__alignment : us_rep -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (forall a:us_rep. (0 <= object__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:us_rep. (0 <= object__alignment(a)))

logic user_eq5 : us_rep, us_rep -> bool

logic dummy5 : us_rep

type sequence__ref = { sequence__content : us_rep
}

function sequence__ref___projection(a: sequence__ref) : us_rep =
  (a).sequence__content

logic length : us_rep -> int

logic length__function_guard : int, us_rep -> prop

type count_type

predicate in_range6(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : count_type, count_type -> bool

logic dummy6 : count_type

type count_type__ref = { count_type__content : count_type
}

function count_type__ref___projection(a: count_type__ref) : count_type =
  (a).count_type__content

logic last__function_guard : int, us_rep -> prop

logic get : us_rep, int -> int

logic get__function_guard : int, us_rep, int -> prop

logic oeq__function_guard : bool, us_rep, us_rep -> prop

axiom user_eq__def_axiom :
  (forall a:us_rep. forall b:us_rep [user_eq5(a, b)].
  (((forall n:int. (((1 <= n) and (n <= (0 + length(a)))) -> (get(a,
    n) = get(b, n)))) ->
  (user_eq5(a, b) = match_bool(bool_eq1(length(a), length(b)), true,
  false))) and
  ((not (forall n:int. (((1 <= n) and (n <= (0 + length(a)))) -> (get(a,
        n) = get(b, n))))) ->
  (user_eq5(a, b) = match_bool(bool_eq1(length(a), length(b)), false,
  false)))))

axiom length__post_axiom :
  (forall container:us_rep [length(container)].
  (((0 + length(container)) <= 2147483647) and in_range6(length(container))))

type element_type

predicate in_range7(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq7 : element_type, element_type -> bool

logic dummy7 : element_type

type element_type__ref = { element_type__content : element_type
}

function element_type__ref___projection(a: element_type__ref) : element_type =
  (a).element_type__content

type extended_index

predicate in_range8(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq8 : extended_index, extended_index -> bool

logic dummy8 : extended_index

type extended_index__ref = { extended_index__content : extended_index
}

function extended_index__ref___projection(a: extended_index__ref) : extended_index =
  (a).extended_index__content

axiom get__post_axiom :
  (forall container:us_rep.
  (forall position:int [get(container, position)]. ((in_range8(position) and
  ((1 <= position) and (position <= (0 + length(container))))) ->
  in_range7(get(container, position)))))

logic olt__function_guard : bool, us_rep, us_rep -> prop

type us_split_fields = { rec__tree_model__path_type__a : us_rep;
rec__tree_model__path_type__k : bool
}

function us_split_fields_A__projection(a: us_split_fields) : us_rep =
  (a).rec__tree_model__path_type__a

function us_split_fields_K__projection(a: us_split_fields) : bool =
  (a).rec__tree_model__path_type__k

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep1 = { us_split_fields1 : us_split_fields
}

function us_rep___projection(a: us_rep1) : us_split_fields =
  (a).us_split_fields1

logic bool_eq11 : us_rep1, us_rep1 -> bool

axiom bool_eq_def9 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq11(a, b)].
  ((((user_eq5(((a).us_split_fields1).rec__tree_model__path_type__a,
  ((b).us_split_fields1).rec__tree_model__path_type__a) = true) and
  (((a).us_split_fields1).rec__tree_model__path_type__k = ((b).us_split_fields1).rec__tree_model__path_type__k)) ->
  (bool_eq11(a, b) = true)) and
  ((not ((user_eq5(((a).us_split_fields1).rec__tree_model__path_type__a,
  ((b).us_split_fields1).rec__tree_model__path_type__a) = true) and
  (((a).us_split_fields1).rec__tree_model__path_type__k = ((b).us_split_fields1).rec__tree_model__path_type__k))) ->
  (bool_eq11(a, b) = false))))

logic value__size1 : int

logic object__size1 : us_rep1 -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep1 -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:us_rep. forall a1:bool. (0 <= object__size1({ us_split_fields1 =
  { rec__tree_model__path_type__a = a; rec__tree_model__path_type__k = a1 }
  })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:us_rep. forall a1:bool. (0 <= object__alignment1({
  us_split_fields1 = { rec__tree_model__path_type__a = a;
  rec__tree_model__path_type__k = a1 } })))

logic tree_model__path_type__a__first__bit : int

logic tree_model__path_type__a__last__bit : int

logic tree_model__path_type__a__position : int

axiom tree_model__path_type__a__first__bit_axiom :
  (0 <= tree_model__path_type__a__first__bit)

axiom tree_model__path_type__a__last__bit_axiom :
  (tree_model__path_type__a__first__bit <  tree_model__path_type__a__last__bit)

axiom tree_model__path_type__a__position_axiom :
  (0 <= tree_model__path_type__a__position)

logic tree_model__path_type__k__first__bit : int

logic tree_model__path_type__k__last__bit : int

logic tree_model__path_type__k__position : int

axiom tree_model__path_type__k__first__bit_axiom :
  (0 <= tree_model__path_type__k__first__bit)

axiom tree_model__path_type__k__last__bit_axiom :
  (tree_model__path_type__k__first__bit <  tree_model__path_type__k__last__bit)

axiom tree_model__path_type__k__position_axiom :
  (0 <= tree_model__path_type__k__position)

logic user_eq9 : us_rep1, us_rep1 -> bool

logic dummy9 : us_rep

logic dummy10 : bool

type path_type__ref = { path_type__content : us_rep1
}

function path_type__ref___projection(a: path_type__ref) : us_rep1 =
  (a).path_type__content

type map__ref = { map__content : (int,us_rep1) farray
}

logic slide : (int,us_rep1) farray, int, int -> (int,us_rep1) farray

axiom slide_eq :
  (forall a:(int,us_rep1) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,us_rep1) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq12 : (int,us_rep1) farray, int, int, (int,us_rep1) farray, int,
  int -> bool

axiom bool_eq_def10 :
  (forall a:(int,us_rep1) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep1) farray. forall b__first:int. forall b__last:int
  [bool_eq12(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_154:int. ((((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) and (bool_eq11((a[temp___idx_154]),
  (b[((b__first - a__first) + temp___idx_154)])) = true)) or
  (not ((a__first <= temp___idx_154) and (temp___idx_154 <= a__last)))))) ->
  (bool_eq12(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) -> (bool_eq11((a[temp___idx_154]),
  (b[((b__first - a__first) + temp___idx_154)])) = true))))) -> (bool_eq12(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,us_rep1) farray. forall b:(int,us_rep1) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq12(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) -> (bool_eq11((a[temp___idx_154]),
  (b[((b__first - a__first) + temp___idx_154)])) = true)))))))

logic oeq : (int,us_rep1) farray, (int,us_rep1) farray -> bool

logic oeq__function_guard1 : bool, (int,us_rep1) farray,
  (int,us_rep1) farray -> prop

axiom oeq__post_axiom : true

axiom oeq__def_axiom :
  (forall m1:(int,us_rep1) farray. forall m2:(int,us_rep1) farray [oeq(m1,
  m2)]. (((oeq(m1, m2) = true) ->
  (forall i:int. (((1 <= i) and (i <= 100)) ->
  ((((bool_eq1(length((((m1[i])).us_split_fields1).rec__tree_model__path_type__a),
  length((((m2[i])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((m1[i])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((m1[i])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((m2[i])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
  (not (bool_eq1(length((((m1[i])).us_split_fields1).rec__tree_model__path_type__a),
  length((((m2[i])).us_split_fields1).rec__tree_model__path_type__a)) = false))) and
  (((((m1[i])).us_split_fields1).rec__tree_model__path_type__k = true) <->
  ((((m2[i])).us_split_fields1).rec__tree_model__path_type__k = true)))))) and
  ((forall i:int. (((1 <= i) and (i <= 100)) ->
   (((bool_eq1(length((((m1[i])).us_split_fields1).rec__tree_model__path_type__a),
   length((((m2[i])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and
   (n <= (0 + length((((m1[i])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((m1[i])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((m2[i])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (((((m1[i])).us_split_fields1).rec__tree_model__path_type__k = true) <->
   ((((m2[i])).us_split_fields1).rec__tree_model__path_type__k = true))))) ->
  (oeq(m1, m2) = true))))

logic is_add : us_rep, int, us_rep -> bool

logic is_add__function_guard : bool, us_rep, int, us_rep -> prop

type us_main_type1

logic us_main_eq1 : us_main_type1, us_main_type1 -> bool

type us_rep2

logic bool_eq13 : us_rep2, us_rep2 -> bool

logic value__size2 : int

logic object__size2 : us_rep2 -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep2 -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 : (forall a:us_rep2. (0 <= object__size2(a)))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:us_rep2. (0 <= object__alignment2(a)))

logic user_eq10 : us_rep2, us_rep2 -> bool

logic dummy11 : us_rep2

type set__ref = { set__content : us_rep2
}

function set__ref___projection(a: set__ref) : us_rep2 = (a).set__content

logic oeq1 : us_rep2, us_rep2 -> bool

logic oeq__function_guard2 : bool, us_rep2, us_rep2 -> prop

logic is_empty : us_rep2 -> bool

logic is_empty__function_guard : bool, us_rep2 -> prop

logic ole : us_rep2, us_rep2 -> bool

logic ole__function_guard : bool, us_rep2, us_rep2 -> prop

axiom oeq__post_axiom1 :
  (forall left:us_rep2. forall right:us_rep2 [oeq1(left, right)].
  ((oeq1(left, right) = true) <-> ((ole(left, right) = true) and (ole(right,
  left) = true))))

type value_set__ref = { value_set__content : us_rep2
}

function value_set__ref___projection(a: value_set__ref) : us_rep2 =
  (a).value_set__content

type position_type

predicate in_range9(x: int) = ((0 <= x) and (x <= 2))

logic bool_eq14 : int, int -> bool

axiom bool_eq_def11 :
  (forall x:int. forall y:int [bool_eq14(x, y)]. (((x = y) -> (bool_eq14(x,
  y) = true)) and ((not (x = y)) -> (bool_eq14(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq11 : position_type, position_type -> bool

logic dummy12 : position_type

type position_type__ref = { position_type__content : position_type
}

function position_type__ref___projection(a: position_type__ref) : position_type =
  (a).position_type__content

logic to_rep2 : position_type -> int

logic of_rep2 : int -> position_type

axiom inversion_axiom2 :
  (forall x:position_type [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:position_type [to_rep2(x)]. in_range9(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range9(x) ->
  (to_rep2(of_rep2(x)) = x)))

type us_split_fields2 = { rec__binary_trees__cell__left :
extended_index_type; rec__binary_trees__cell__right : extended_index_type;
rec__binary_trees__cell__parent : extended_index_type;
rec__binary_trees__cell__position : position_type
}

function us_split_fields_Left__projection(a: us_split_fields2) : extended_index_type =
  (a).rec__binary_trees__cell__left

function us_split_fields_Right__projection(a: us_split_fields2) : extended_index_type =
  (a).rec__binary_trees__cell__right

function us_split_fields_Parent__projection(a: us_split_fields2) : extended_index_type =
  (a).rec__binary_trees__cell__parent

function us_split_fields_Position__projection(a: us_split_fields2) : position_type =
  (a).rec__binary_trees__cell__position

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep3 = { us_split_fields3 : us_split_fields2
}

function us_rep___2__projection(a: us_rep3) : us_split_fields2 =
  (a).us_split_fields3

logic bool_eq15 : us_rep3, us_rep3 -> bool

axiom bool_eq_def12 :
  (forall a:us_rep3. forall b:us_rep3 [bool_eq15(a, b)].
  ((((((to_rep1(((a).us_split_fields3).rec__binary_trees__cell__left) = to_rep1(((b).us_split_fields3).rec__binary_trees__cell__left)) and
  (to_rep1(((a).us_split_fields3).rec__binary_trees__cell__right) = to_rep1(((b).us_split_fields3).rec__binary_trees__cell__right))) and
  (to_rep1(((a).us_split_fields3).rec__binary_trees__cell__parent) = to_rep1(((b).us_split_fields3).rec__binary_trees__cell__parent))) and
  (to_rep2(((a).us_split_fields3).rec__binary_trees__cell__position) = to_rep2(((b).us_split_fields3).rec__binary_trees__cell__position))) ->
  (bool_eq15(a, b) = true)) and
  ((not ((((to_rep1(((a).us_split_fields3).rec__binary_trees__cell__left) = to_rep1(((b).us_split_fields3).rec__binary_trees__cell__left)) and
  (to_rep1(((a).us_split_fields3).rec__binary_trees__cell__right) = to_rep1(((b).us_split_fields3).rec__binary_trees__cell__right))) and
  (to_rep1(((a).us_split_fields3).rec__binary_trees__cell__parent) = to_rep1(((b).us_split_fields3).rec__binary_trees__cell__parent))) and
  (to_rep2(((a).us_split_fields3).rec__binary_trees__cell__position) = to_rep2(((b).us_split_fields3).rec__binary_trees__cell__position)))) ->
  (bool_eq15(a, b) = false))))

logic value__size3 : int

logic object__size3 : us_rep3 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep3 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:extended_index_type. forall a1:extended_index_type.
  forall a2:extended_index_type. forall a3:position_type.
  (0 <= object__size3({ us_split_fields3 = { rec__binary_trees__cell__left =
  a; rec__binary_trees__cell__right = a1; rec__binary_trees__cell__parent =
  a2; rec__binary_trees__cell__position = a3 } })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:extended_index_type. forall a1:extended_index_type.
  forall a2:extended_index_type. forall a3:position_type.
  (0 <= object__alignment3({ us_split_fields3 = {
  rec__binary_trees__cell__left = a; rec__binary_trees__cell__right = a1;
  rec__binary_trees__cell__parent = a2; rec__binary_trees__cell__position =
  a3 } })))

logic binary_trees__cell__left__first__bit : int

logic binary_trees__cell__left__last__bit : int

logic binary_trees__cell__left__position : int

axiom binary_trees__cell__left__first__bit_axiom :
  (0 <= binary_trees__cell__left__first__bit)

axiom binary_trees__cell__left__last__bit_axiom :
  (binary_trees__cell__left__first__bit <  binary_trees__cell__left__last__bit)

axiom binary_trees__cell__left__position_axiom :
  (0 <= binary_trees__cell__left__position)

logic binary_trees__cell__right__first__bit : int

logic binary_trees__cell__right__last__bit : int

logic binary_trees__cell__right__position : int

axiom binary_trees__cell__right__first__bit_axiom :
  (0 <= binary_trees__cell__right__first__bit)

axiom binary_trees__cell__right__last__bit_axiom :
  (binary_trees__cell__right__first__bit <  binary_trees__cell__right__last__bit)

axiom binary_trees__cell__right__position_axiom :
  (0 <= binary_trees__cell__right__position)

logic binary_trees__cell__parent__first__bit : int

logic binary_trees__cell__parent__last__bit : int

logic binary_trees__cell__parent__position : int

axiom binary_trees__cell__parent__first__bit_axiom :
  (0 <= binary_trees__cell__parent__first__bit)

axiom binary_trees__cell__parent__last__bit_axiom :
  (binary_trees__cell__parent__first__bit <  binary_trees__cell__parent__last__bit)

axiom binary_trees__cell__parent__position_axiom :
  (0 <= binary_trees__cell__parent__position)

logic binary_trees__cell__position__first__bit : int

logic binary_trees__cell__position__last__bit : int

logic binary_trees__cell__position__position : int

axiom binary_trees__cell__position__first__bit_axiom :
  (0 <= binary_trees__cell__position__first__bit)

axiom binary_trees__cell__position__last__bit_axiom :
  (binary_trees__cell__position__first__bit <  binary_trees__cell__position__last__bit)

axiom binary_trees__cell__position__position_axiom :
  (0 <= binary_trees__cell__position__position)

logic user_eq12 : us_rep3, us_rep3 -> bool

logic dummy13 : extended_index_type

logic dummy14 : extended_index_type

logic dummy15 : extended_index_type

logic dummy16 : position_type

type cell__ref = { cell__content : us_rep3
}

function cell__ref___projection(a: cell__ref) : us_rep3 = (a).cell__content

type map__ref1 = { map__content1 : (int,us_rep3) farray
}

logic slide1 : (int,us_rep3) farray, int, int -> (int,us_rep3) farray

axiom slide_eq1 :
  (forall a:(int,us_rep3) farray.
  (forall first:int [slide1(a, first, first)]. (slide1(a, first, first) = a)))

axiom slide_def1 :
  (forall a:(int,us_rep3) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq16 : (int,us_rep3) farray, int, int, (int,us_rep3) farray, int,
  int -> bool

axiom bool_eq_def13 :
  (forall a:(int,us_rep3) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep3) farray. forall b__first:int. forall b__last:int
  [bool_eq16(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_155:int. ((((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) and (bool_eq15((a[temp___idx_155]),
  (b[((b__first - a__first) + temp___idx_155)])) = true)) or
  (not ((a__first <= temp___idx_155) and (temp___idx_155 <= a__last)))))) ->
  (bool_eq16(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq15((a[temp___idx_155]),
  (b[((b__first - a__first) + temp___idx_155)])) = true))))) -> (bool_eq16(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,us_rep3) farray. forall b:(int,us_rep3) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq16(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq15((a[temp___idx_155]),
  (b[((b__first - a__first) + temp___idx_155)])) = true)))))))

logic dummy17 : (int,us_rep3) farray

logic value__size4 : int

logic object__size4 : (int,us_rep3) farray -> int

logic value__component__size : int

logic object__component__size : (int,us_rep3) farray -> int

logic value__alignment4 : int

logic object__alignment4 : (int,us_rep3) farray -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:(int,us_rep3) farray. (0 <= object__size4(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,us_rep3) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:(int,us_rep3) farray. (0 <= object__alignment4(a)))

logic user_eq13 : (int,us_rep3) farray, (int,us_rep3) farray -> bool

type us_split_fields4 = { rec__binary_trees__forest__s : extended_index_type;
rec__binary_trees__forest__c : (int,us_rep3) farray
}

function us_split_fields_S__projection(a: us_split_fields4) : extended_index_type =
  (a).rec__binary_trees__forest__s

function us_split_fields_C__projection(a: us_split_fields4) : (int,us_rep3) farray =
  (a).rec__binary_trees__forest__c

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___3__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep4 = { us_split_fields5 : us_split_fields4
}

function us_rep___3__projection(a: us_rep4) : us_split_fields4 =
  (a).us_split_fields5

logic bool_eq17 : us_rep4, us_rep4 -> bool

axiom bool_eq_def14 :
  (forall a:us_rep4. forall b:us_rep4 [bool_eq17(a, b)].
  ((((to_rep1(((a).us_split_fields5).rec__binary_trees__forest__s) = to_rep1(((b).us_split_fields5).rec__binary_trees__forest__s)) and
  (bool_eq16(((a).us_split_fields5).rec__binary_trees__forest__c, 1, 100,
  ((b).us_split_fields5).rec__binary_trees__forest__c, 1, 100) = true)) ->
  (bool_eq17(a, b) = true)) and
  ((not ((to_rep1(((a).us_split_fields5).rec__binary_trees__forest__s) = to_rep1(((b).us_split_fields5).rec__binary_trees__forest__s)) and
  (bool_eq16(((a).us_split_fields5).rec__binary_trees__forest__c, 1, 100,
  ((b).us_split_fields5).rec__binary_trees__forest__c, 1, 100) = true))) ->
  (bool_eq17(a, b) = false))))

logic value__size5 : int

logic object__size5 : us_rep4 -> int

logic value__alignment5 : int

logic object__alignment5 : us_rep4 -> int

axiom value__size_axiom5 : (0 <= value__size5)

axiom object__size_axiom5 :
  (forall a:extended_index_type. forall a1:(int,us_rep3) farray.
  (0 <= object__size5({ us_split_fields5 = { rec__binary_trees__forest__s =
  a; rec__binary_trees__forest__c = a1 } })))

axiom value__alignment_axiom5 : (0 <= value__alignment5)

axiom object__alignment_axiom5 :
  (forall a:extended_index_type. forall a1:(int,us_rep3) farray.
  (0 <= object__alignment5({ us_split_fields5 = {
  rec__binary_trees__forest__s = a; rec__binary_trees__forest__c = a1 } })))

logic binary_trees__forest__s__first__bit : int

logic binary_trees__forest__s__last__bit : int

logic binary_trees__forest__s__position : int

axiom binary_trees__forest__s__first__bit_axiom :
  (0 <= binary_trees__forest__s__first__bit)

axiom binary_trees__forest__s__last__bit_axiom :
  (binary_trees__forest__s__first__bit <  binary_trees__forest__s__last__bit)

axiom binary_trees__forest__s__position_axiom :
  (0 <= binary_trees__forest__s__position)

logic binary_trees__forest__c__first__bit : int

logic binary_trees__forest__c__last__bit : int

logic binary_trees__forest__c__position : int

axiom binary_trees__forest__c__first__bit_axiom :
  (0 <= binary_trees__forest__c__first__bit)

axiom binary_trees__forest__c__last__bit_axiom :
  (binary_trees__forest__c__first__bit <  binary_trees__forest__c__last__bit)

axiom binary_trees__forest__c__position_axiom :
  (0 <= binary_trees__forest__c__position)

logic user_eq14 : us_rep4, us_rep4 -> bool

logic dummy18 : extended_index_type

logic dummy19 : (int,us_rep3) farray

type forest__ref = { forest__content : us_rep4
}

function forest__ref___projection(a: forest__ref) : us_rep4 =
  (a).forest__content

logic size : us_rep4 -> int

logic size__function_guard : int, us_rep4 -> prop

logic tree_structure : us_rep4 -> bool

logic tree_structure__function_guard : bool, us_rep4 -> prop

logic valid_root : us_rep4, int -> bool

logic valid_root__function_guard : bool, us_rep4, int -> prop

logic parent : us_rep4, int -> int

logic parent__function_guard : int, us_rep4, int -> prop

axiom parent__post_axiom :
  (forall f:extended_index_type. forall f1:(int,us_rep3) farray.
  (forall i:int [parent({ us_split_fields5 = { rec__binary_trees__forest__s =
  f; rec__binary_trees__forest__c = f1 } }, i)]. (((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }) = true) and in_range3(i)) ->
  ((((valid_root({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }, i) = true) -> (parent({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }, i) = 0)) and ((size({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }) = 0) -> (parent({ us_split_fields5 =
  { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  i) = 0))) and in_range4(parent({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  i))))))

logic position : us_rep4, int -> int

logic position__function_guard : int, us_rep4, int -> prop

axiom position__post_axiom :
  (forall f:extended_index_type. forall f1:(int,us_rep3) farray.
  (forall i:int [position({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  i)]. ((((tree_structure({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 }
  }) = true) and in_range3(i)) and (not (parent({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  i) = 0))) -> in_range5(position({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  i)))))

logic model__ : us_rep4, int -> (int,us_rep1) farray

logic model____function_guard : (int,us_rep1) farray, us_rep4, int -> prop

axiom model____post_axiom :
  (forall f:extended_index_type. forall f1:(int,us_rep3) farray.
  (forall root:int [model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)]. ((((tree_structure({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 }
  }) = true) and in_range3(root)) and (valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root) = true)) -> ((((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f; rec__binary_trees__forest__c = f1 } },
  root)[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i:int. (((1 <= i) and (i <= 100)) -> ((not (i = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i) = 0)) and ((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, root)[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i)])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i) = 0)) and ((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, root)[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i)])).us_split_fields1).rec__tree_model__path_type__k = true))) ->
   (not ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i:int. (((1 <= i) and (i <= 100)) -> (((((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i = root))) -> (is_add((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   i)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i), (((model__({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__a) = true)) and
   ((not (((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i = root)))) -> (length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i:int. (((1 <= i) and (i <= 100)) -> (((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j:int. (((1 <= j) and (j <= 100)) -> ((((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((bool_eq1(length((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
  (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f; rec__binary_trees__forest__c = f1 } },
  root)[j])).us_split_fields1).rec__tree_model__path_type__a, n)))))) ->
  (j = i))))))))))) and
  (forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100)))))))

logic peek : us_rep4, int, int -> int

logic peek__function_guard : int, us_rep4, int, int -> prop

logic ole__function_guard1 : bool, us_rep, us_rep -> prop

logic is_concat : us_rep, us_rep, us_rep -> bool

logic is_concat__function_guard : bool, us_rep, us_rep, us_rep -> prop

type map__ref2 = { map__content2 : (int,natural) farray
}

logic slide2 : (int,natural) farray, int, int -> (int,natural) farray

axiom slide_eq2 :
  (forall a:(int,natural) farray.
  (forall first:int [slide2(a, first, first)]. (slide2(a, first, first) = a)))

axiom slide_def2 :
  (forall a:(int,natural) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq18 : (int,natural) farray, int, int, (int,natural) farray, int,
  int -> bool

axiom bool_eq_def15 :
  (forall a:(int,natural) farray. forall a__first:int. forall a__last:int.
  forall b:(int,natural) farray. forall b__first:int. forall b__last:int
  [bool_eq18(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_156:int. ((((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) and
  (to_rep((a[temp___idx_156])) = to_rep((b[((b__first - a__first) + temp___idx_156)])))) or
  (not ((a__first <= temp___idx_156) and (temp___idx_156 <= a__last)))))) ->
  (bool_eq18(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) ->
  (to_rep((a[temp___idx_156])) = to_rep((b[((b__first - a__first) + temp___idx_156)]))))))) ->
  (bool_eq18(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev2 :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq18(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) ->
  (to_rep((a[temp___idx_156])) = to_rep((b[((b__first - a__first) + temp___idx_156)])))))))))

logic dummy20 : (int,natural) farray

logic value__size6 : int

logic object__size6 : (int,natural) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,natural) farray -> int

logic value__alignment6 : int

logic object__alignment6 : (int,natural) farray -> int

axiom value__size_axiom6 : (0 <= value__size6)

axiom object__size_axiom6 :
  (forall a:(int,natural) farray. (0 <= object__size6(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,natural) farray. (0 <= object__component__size1(a)))

axiom value__alignment_axiom6 : (0 <= value__alignment6)

axiom object__alignment_axiom6 :
  (forall a:(int,natural) farray. (0 <= object__alignment6(a)))

logic user_eq15 : (int,natural) farray, (int,natural) farray -> bool

type us_split_fields6 = { rec__search_trees__search_tree__root :
extended_index_type; rec__search_trees__search_tree__struct : us_rep4;
rec__search_trees__search_tree__values : (int,natural) farray
}

function us_split_fields_Root__projection(a: us_split_fields6) : extended_index_type =
  (a).rec__search_trees__search_tree__root

function us_split_fields_Struct__projection(a: us_split_fields6) : us_rep4 =
  (a).rec__search_trees__search_tree__struct

function us_split_fields_Values__projection(a: us_split_fields6) : (int,natural) farray =
  (a).rec__search_trees__search_tree__values

type us_split_fields__ref3 = { us_split_fields__content3 : us_split_fields6
}

function us_split_fields__ref___4__projection(a: us_split_fields__ref3) : us_split_fields6 =
  (a).us_split_fields__content3

type us_rep5 = { us_split_fields7 : us_split_fields6
}

function us_rep___4__projection(a: us_rep5) : us_split_fields6 =
  (a).us_split_fields7

logic bool_eq19 : us_rep5, us_rep5 -> bool

axiom bool_eq_def16 :
  (forall a:us_rep5. forall b:us_rep5 [bool_eq19(a, b)].
  (((((to_rep1(((a).us_split_fields7).rec__search_trees__search_tree__root) = to_rep1(((b).us_split_fields7).rec__search_trees__search_tree__root)) and
  (bool_eq17(((a).us_split_fields7).rec__search_trees__search_tree__struct,
  ((b).us_split_fields7).rec__search_trees__search_tree__struct) = true)) and
  (bool_eq18(((a).us_split_fields7).rec__search_trees__search_tree__values,
  1, 100, ((b).us_split_fields7).rec__search_trees__search_tree__values, 1,
  100) = true)) -> (bool_eq19(a, b) = true)) and
  ((not (((to_rep1(((a).us_split_fields7).rec__search_trees__search_tree__root) = to_rep1(((b).us_split_fields7).rec__search_trees__search_tree__root)) and
  (bool_eq17(((a).us_split_fields7).rec__search_trees__search_tree__struct,
  ((b).us_split_fields7).rec__search_trees__search_tree__struct) = true)) and
  (bool_eq18(((a).us_split_fields7).rec__search_trees__search_tree__values,
  1, 100, ((b).us_split_fields7).rec__search_trees__search_tree__values, 1,
  100) = true))) -> (bool_eq19(a, b) = false))))

logic value__size7 : int

logic object__size7 : us_rep5 -> int

logic value__alignment7 : int

logic object__alignment7 : us_rep5 -> int

axiom value__size_axiom7 : (0 <= value__size7)

axiom object__size_axiom7 :
  (forall a:extended_index_type. forall a1:extended_index_type.
  forall a2:(int,us_rep3) farray. forall a3:(int,natural) farray.
  (0 <= object__size7({ us_split_fields7 = {
  rec__search_trees__search_tree__root = a;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = a1; rec__binary_trees__forest__c = a2 } };
  rec__search_trees__search_tree__values = a3 } })))

axiom value__alignment_axiom7 : (0 <= value__alignment7)

axiom object__alignment_axiom7 :
  (forall a:extended_index_type. forall a1:extended_index_type.
  forall a2:(int,us_rep3) farray. forall a3:(int,natural) farray.
  (0 <= object__alignment7({ us_split_fields7 = {
  rec__search_trees__search_tree__root = a;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = a1; rec__binary_trees__forest__c = a2 } };
  rec__search_trees__search_tree__values = a3 } })))

logic search_trees__search_tree__root__first__bit : int

logic search_trees__search_tree__root__last__bit : int

logic search_trees__search_tree__root__position : int

axiom search_trees__search_tree__root__first__bit_axiom :
  (0 <= search_trees__search_tree__root__first__bit)

axiom search_trees__search_tree__root__last__bit_axiom :
  (search_trees__search_tree__root__first__bit <  search_trees__search_tree__root__last__bit)

axiom search_trees__search_tree__root__position_axiom :
  (0 <= search_trees__search_tree__root__position)

logic search_trees__search_tree__struct__first__bit : int

logic search_trees__search_tree__struct__last__bit : int

logic search_trees__search_tree__struct__position : int

axiom search_trees__search_tree__struct__first__bit_axiom :
  (0 <= search_trees__search_tree__struct__first__bit)

axiom search_trees__search_tree__struct__last__bit_axiom :
  (search_trees__search_tree__struct__first__bit <  search_trees__search_tree__struct__last__bit)

axiom search_trees__search_tree__struct__position_axiom :
  (0 <= search_trees__search_tree__struct__position)

logic search_trees__search_tree__values__first__bit : int

logic search_trees__search_tree__values__last__bit : int

logic search_trees__search_tree__values__position : int

axiom search_trees__search_tree__values__first__bit_axiom :
  (0 <= search_trees__search_tree__values__first__bit)

axiom search_trees__search_tree__values__last__bit_axiom :
  (search_trees__search_tree__values__first__bit <  search_trees__search_tree__values__last__bit)

axiom search_trees__search_tree__values__position_axiom :
  (0 <= search_trees__search_tree__values__position)

logic user_eq16 : us_rep5, us_rep5 -> bool

logic dummy21 : extended_index_type

logic dummy22 : extended_index_type

logic dummy23 : (int,us_rep3) farray

logic dummy24 : (int,natural) farray

type search_tree__ref = { search_tree__content : us_rep5
}

function search_tree__ref___projection(a: search_tree__ref) : us_rep5 =
  (a).search_tree__content

logic size1 : us_rep5 -> int

logic size__function_guard1 : int, us_rep5 -> prop

logic ordered_leafs : us_rep4, int, (int,natural) farray -> bool

logic ordered_leafs__function_guard : bool, us_rep4, int,
  (int,natural) farray -> prop

logic temp___431 : int -> (int,natural) farray

axiom size__post_axiom :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray [size1({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } })]. (((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = true) and (((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0) and (to_rep1(t) = 0)) or
  ((not (size({ us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0)) and
  (((not (to_rep1(t) = 0)) and (valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t)) = true)) and (ordered_leafs({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t), t3) = true))))) -> in_range4(size1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }))))

axiom size__def_axiom :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray [size1({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } })]. ((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = true) -> (size1({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }) = size({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }))))

logic root : us_rep5 -> int

logic root__function_guard : int, us_rep5 -> prop

axiom root__post_axiom :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray [root({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } })]. ((((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = true) and (((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0) and (to_rep1(t) = 0)) or
  ((not (size({ us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0)) and
  (((not (to_rep1(t) = 0)) and (valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t)) = true)) and (ordered_leafs({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t), t3) = true))))) and (not (size1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }) = 0))) -> in_range3(root({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }))))

axiom root__def_axiom :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray [root({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } })]. ((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = true) -> (root({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }) = to_rep1(t))))

logic parent1 : us_rep5, int -> int

logic parent__function_guard1 : int, us_rep5, int -> prop

axiom parent__post_axiom1 :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray.
  (forall i:int [parent1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i)]. ((((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = true) and in_range3(i)) and
  (((size({ us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0) and (to_rep1(t) = 0)) or
  ((not (size({ us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0)) and
  (((not (to_rep1(t) = 0)) and (valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t)) = true)) and (ordered_leafs({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t), t3) = true))))) -> (((size1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }) = 0) -> (parent1({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i) = 0)) and
  in_range4(parent1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i))))))

axiom parent__def_axiom :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray.
  (forall i:int [parent1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i)]. (((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = true) and in_range3(i)) ->
  (parent1({ us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i) = parent({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }, i)))))

logic position1 : us_rep5, int -> int

logic position__function_guard1 : int, us_rep5, int -> prop

axiom position__post_axiom1 :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray.
  (forall i:int [position1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i)]. (((((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = true) and in_range3(i)) and
  (((size({ us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0) and (to_rep1(t) = 0)) or
  ((not (size({ us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0)) and
  (((not (to_rep1(t) = 0)) and (valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t)) = true)) and (ordered_leafs({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t), t3) = true))))) and (not (parent1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i) = 0))) ->
  in_range5(position1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i)))))

axiom position__def_axiom :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray.
  (forall i:int [position1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i)]. (((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = true) and in_range3(i)) ->
  (position1({ us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i) = position({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }, i)))))

logic model__1 : us_rep5 -> (int,us_rep1) farray

logic model____function_guard1 : (int,us_rep1) farray, us_rep5 -> prop

axiom model____post_axiom1 :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray [model__1({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } })]. ((((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = true) and (((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0) and (to_rep1(t) = 0)) or
  ((not (size({ us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0)) and
  (((not (to_rep1(t) = 0)) and (valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t)) = true)) and (ordered_leafs({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t), t3) = true))))) and (not (size1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }) = 0))) ->
  (forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
  (length((((model__1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 }
  })[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100)))))

axiom model____def_axiom :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray [model__1({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } })]. ((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = true) -> (model__1({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }) = model__({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }, to_rep1(t)))))

logic peek1 : us_rep5, int, int -> int

logic peek__function_guard1 : int, us_rep5, int, int -> prop

axiom peek__post_axiom :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray.
  (forall i:int. forall d:int [peek1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i, d)].
  ((((((tree_structure({ us_split_fields5 = { rec__binary_trees__forest__s =
  t1; rec__binary_trees__forest__c = t2 } }) = true) and in_range3(i)) and
  in_range5(d)) and (((size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 }
  }) = 0) and (to_rep1(t) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 }
  }) = 0)) and (((not (to_rep1(t) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t)) = true)) and (ordered_leafs({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t), t3) = true))))) and ((not (size1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }) = 0)) and ((((model__1({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 }
  })[i])).us_split_fields1).rec__tree_model__path_type__k = true))) ->
  in_range4(peek1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i, d)))))

axiom peek__def_axiom :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray.
  (forall i:int. forall d:int [peek1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i, d)].
  ((((tree_structure({ us_split_fields5 = { rec__binary_trees__forest__s =
  t1; rec__binary_trees__forest__c = t2 } }) = true) and in_range3(i)) and
  in_range5(d)) -> (peek1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }, i, d) = peek({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }, i, d)))))

logic values : us_rep5 -> us_rep2

logic values__function_guard : us_rep2, us_rep5 -> prop

logic values1 : us_rep5 -> us_rep2

logic values__function_guard1 : us_rep2, us_rep5 -> prop

logic contains : us_rep2, int -> bool

logic contains__function_guard : bool, us_rep2, int -> prop

axiom values__post_axiom :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray [values({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } })]. (((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = true) and (((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0) and (to_rep1(t) = 0)) or
  ((not (size({ us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0)) and
  (((not (to_rep1(t) = 0)) and (valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t)) = true)) and (ordered_leafs({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t), t3) = true))))) -> ((size1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }) = 0) -> (is_empty(values({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } })) = true))))

axiom values__post_refine_axiom :
  (forall t:extended_index_type. forall t1:extended_index_type.
  forall t2:(int,us_rep3) farray. forall t3:(int,natural) farray [values1({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } })]. (((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = true) and (((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0) and (to_rep1(t) = 0)) or
  ((not (size({ us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0)) and
  (((not (to_rep1(t) = 0)) and (valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t)) = true)) and (ordered_leafs({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } },
  to_rep1(t), t3) = true))))) -> (((size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 }
  }) = 0) -> (is_empty(values1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } })) = true)) and
  ((not (size({ us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } }) = 0)) ->
  ((forall i:int. (((1 <= i) and (i <= 100)) -> (((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = t1;
   rec__binary_trees__forest__c = t2 } },
   to_rep1(t))[i])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   (contains(values1({ us_split_fields7 = {
   rec__search_trees__search_tree__root = t;
   rec__search_trees__search_tree__struct = { us_split_fields5 = {
   rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
   rec__search_trees__search_tree__values = t3 } }),
   to_rep((t3[i]))) = true)))) and
  (forall v:int. (((0 <= v) and (v <= 2147483647)) -> ((contains(values1({
  us_split_fields7 = { rec__search_trees__search_tree__root = t;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t1; rec__binary_trees__forest__c = t2 } };
  rec__search_trees__search_tree__values = t3 } }), v) = true) ->
  (exists i:int. (((1 <= i) and (i <= 100)) and (((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = t1;
  rec__binary_trees__forest__c = t2 } },
  to_rep1(t))[i])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (to_rep((t3[i])) = v))))))))))))

logic attr__ATTRIBUTE_ADDRESS : int

logic i : int

logic attr__ATTRIBUTE_ADDRESS1 : int

axiom ordered_leafs__post_axiom : true

axiom ordered_leafs__def_axiom :
  (forall f:extended_index_type. forall f1:(int,us_rep3) farray.
  (forall root1:int.
  (forall values2:(int,natural) farray [ordered_leafs({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root1, values2)]. (((ordered_leafs({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root1, values2) = true) ->
  (forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
  (forall j:int. (((1 <= j) and (j <= 100)) -> (((((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root1)[j])).us_split_fields1).rec__tree_model__path_type__k = true)) and
  ((bool_lt(length((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root1)[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root1)[j])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
  (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root1)[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root1)[i1])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f; rec__binary_trees__forest__c = f1 } },
  root1)[j])).us_split_fields1).rec__tree_model__path_type__a, n)))))) ->
  (((get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root1)[j])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root1)[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) ->
  (to_rep((values2[j])) <  to_rep((values2[i1])))) and
  ((not (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f; rec__binary_trees__forest__c = f1 } },
  root1)[j])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root1)[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) ->
  (to_rep((values2[i1])) <  to_rep((values2[j]))))))))))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
   (forall j:int. (((1 <= j) and (j <= 100)) -> (((((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root1)[j])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   (((bool_lt(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root1)[i1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root1)[j])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root1)[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root1)[i1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root1)[j])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_lt(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root1)[i1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root1)[j])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
   (((get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root1)[j])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root1)[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) and
   (to_rep((values2[j])) <  to_rep((values2[i1])))) or
   ((not (get((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root1)[j])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root1)[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) and
   (to_rep((values2[i1])) <  to_rep((values2[j])))))))))) ->
  (ordered_leafs({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }, root1, values2) = true))))))

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic is_root : bool

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

axiom def_axiom :
  (forall temp___433:int. (in_range1(temp___433) ->
  (forall temp___434:int.
  (to_rep((temp___431(temp___433)[temp___434])) = temp___433))))

axiom is_concat__post_axiom : true

axiom is_concat__def_axiom :
  (forall q:us_rep. forall v:us_rep. forall p:us_rep [is_concat(q, v, p)].
  ((is_concat(q, v, p) = true) <->
  (((((length(p) - length(v)) = length(q)) and
  (forall i1:int. (((1 <= i1) and (i1 <= length(q))) -> (get(p, i1) = get(q,
  i1))))) and
  (forall i1:int. (((1 <= i1) and (i1 <= length(v))) -> (get(p,
  (i1 + length(q))) = get(v, i1))))) and
  (forall i1:int. ((((length(q) + 1) <= i1) and (i1 <= length(p))) -> (get(v,
  (i1 - length(q))) = get(p, i1)))))))

axiom is_add__post_axiom : true

axiom is_add__def_axiom :
  (forall s1:us_rep. forall s2:us_rep.
  (forall d:int [is_add(s1, d, s2)]. (((is_add(s1, d, s2) = true) ->
  ((((length(s2) - 1) = length(s1)) and (((bool_lt(length(s1),
  length(s2)) = true) ->
  (forall n:int. (((1 <= n) and (n <= (0 + length(s1)))) -> (get(s1,
  n) = get(s2, n))))) and (not (bool_lt(length(s1),
  length(s2)) = false)))) and (get(s2, length(s2)) = d))) and
  (((((length(s2) - 1) = length(s1)) and ((bool_lt(length(s1),
  length(s2)) = true) and
  (forall n:int. (((1 <= n) and (n <= (0 + length(s1)))) -> (get(s1,
  n) = get(s2, n)))))) and (get(s2, length(s2)) = d)) -> (is_add(s1, d,
  s2) = true)))))

axiom size__post_axiom1 :
  (forall f:extended_index_type. forall f1:(int,us_rep3) farray [size({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } })]. ((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }) = true) -> in_range4(size({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }))))

axiom valid_root__post_axiom :
  (forall f:extended_index_type. forall f1:(int,us_rep3) farray.
  (forall i1:int [valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  i1)]. (((tree_structure({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 }
  }) = true) and in_range3(i1)) -> ((size({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 }
  }) <  i1) -> (not (valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  i1) = true))))))

axiom peek__post_axiom1 :
  (forall f:extended_index_type. forall f1:(int,us_rep3) farray.
  (forall i1:int. forall d:int [peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  i1, d)]. ((((tree_structure({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 }
  }) = true) and in_range3(i1)) and in_range5(d)) -> (((((not (peek({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }, i1, d) = 0)) -> ((position({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }, peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  i1, d)) = d) and (parent({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  peek({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }, i1, d)) = i1))) and ((peek({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }, i1, d) = 0) ->
  (forall j:int. (((1 <= j) and (j <= 100)) -> ((parent({ us_split_fields5 =
  { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  j) = i1) -> (not (position({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  j) = d))))))) and
  (forall j:int. (((1 <= j) and (j <= 100)) -> (((parent({ us_split_fields5 =
  { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  j) = i1) and (position({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  j) = d)) -> (peek({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }, i1, d) = j))))) and in_range4(peek({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }, i1, d))))))

axiom tree_structure__post_axiom : true

type element_type1

predicate in_range10(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq20 : int, int -> bool

axiom bool_eq_def17 :
  (forall x:int. forall y:int [bool_eq20(x, y)]. (((x = y) -> (bool_eq20(x,
  y) = true)) and ((not (x = y)) -> (bool_eq20(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq17 : element_type1, element_type1 -> bool

logic dummy25 : element_type1

type element_type__ref1 = { element_type__content1 : element_type1
}

function element_type__ref___2__projection(a: element_type__ref1) : element_type1 =
  (a).element_type__content1

axiom contains__post_axiom :
  (forall container:us_rep2.
  (forall item:int [contains(container, item)]. (in_range10(item) ->
  ((of_int(1) = true) ->
  ((exists e:int. ((in_range10(e) and (contains(container, e) = true)) and
   (e = item))) ->
  (contains(container, item) = true))))))

logic length1 : us_rep2 -> int

logic length__function_guard1 : int, us_rep2 -> prop

axiom length__post_axiom1 :
  (forall container:us_rep2 [length1(container)].
  in_range6(length1(container)))

axiom ole__post_axiom :
  (forall left:us_rep2. forall right:us_rep2 [ole(left, right)]. ((ole(left,
  right) = true) <->
  (forall item:int. ((in_range10(item) and (contains(left, item) = true)) ->
  (contains(right, item) = true)))))

axiom is_empty__post_axiom :
  (forall container:us_rep2 [is_empty(container)].
  (((is_empty(container) = true) <->
  (forall item:int. (not (in_range10(item) and (contains(container,
  item) = true))))) and ((is_empty(container) = true) <->
  (length1(container) = 0))))

 (* File "system.ads", line 1, characters 0-0 *)
goal WP_parameter_def :
  (forall t__split_fields:extended_index_type.
  forall t__split_fields1:extended_index_type.
  forall t__split_fields2:(int,us_rep3) farray.
  forall t__split_fields3:(int,natural) farray. forall x:int. forall y:int.
  forall yl:int. forall j:int. forall d:int.
  forall t_old__split_fields:extended_index_type.
  forall t_old__split_fields1:extended_index_type.
  forall t_old__split_fields2:(int,us_rep3) farray.
  forall t_old__split_fields3:(int,natural) farray.
  forall f_old__split_fields:extended_index_type.
  forall f_old__split_fields1:(int,us_rep3) farray.
  forall f_1__split_fields:extended_index_type.
  forall f_1__split_fields1:(int,us_rep3) farray.
  forall f_2__split_fields:extended_index_type.
  forall f_2__split_fields1:(int,us_rep3) farray.
  forall f_3__split_fields:extended_index_type.
  forall f_3__split_fields1:(int,us_rep3) farray.
  forall f_4__split_fields:extended_index_type.
  forall f_4__split_fields1:(int,us_rep3) farray.
  forall f_5__split_fields:extended_index_type.
  forall f_5__split_fields1:(int,us_rep3) farray. forall o:int.
  forall o1:int. forall o2:int. forall o3:int. forall o4:int. forall o5:int.
  forall o6:int. forall o7:int. forall o8:int. forall o9:int. forall o10:int.
  forall o11:int. forall o12:int. forall o13:int.
  forall o14:extended_index_type. forall o15:extended_index_type.
  forall o16:extended_index_type. forall o17:(int,us_rep3) farray.
  forall o18:(int,natural) farray. forall temp___994:us_rep5. forall o19:int.
  forall o20:int. forall temp___905:(int,us_rep1) farray. forall o21:us_rep1.
  forall o22:us_split_fields. forall o23:us_rep. forall o24:int.
  forall temp___906:(int,us_rep1) farray. forall o25:us_rep1.
  forall o26:us_split_fields. forall o27:us_rep. forall o28:int.
  forall temp___907:(int,us_rep1) farray. forall o29:us_rep1.
  forall o30:us_split_fields. forall o31:us_rep. forall o32:int.
  forall temp___908:(int,us_rep1) farray. forall o33:us_rep1.
  forall o34:us_split_fields. forall o35:us_rep. forall o36:int.
  forall j1:int. forall o37:int. forall o38:bool. forall o39:int.
  forall o40:bool. forall o41:int. forall o42:int. forall o43:int.
  forall o44:int. forall o45:int. forall o46:bool. forall o47:int.
  forall o48:int. forall o49:int. forall o50:int. forall o51:int.
  forall o52:int. forall o53:int. forall o54:int. forall o55:int.
  forall o56:int. forall o57:int. forall o58:int. forall o59:int.
  forall o60:int. forall o61:int. forall o62:int. forall o63:int.
  forall o64:int. forall o65:int. forall o66:int. forall o67:int.
  forall o68:int. forall o69:int. forall o70:int. forall o71:int.
  forall o72:int. forall o73:int. forall o74:int. forall o75:int.
  forall o76:int. forall o77:int. forall o78:int. forall o79:int.
  forall o80:int. forall o81:int. forall o82:int. forall o83:int.
  forall o84:int. forall o85:int. forall o86:int. forall o87:int.
  forall o88:int. forall o89:int. forall o90:int. forall o91:int.
  forall t__split_fields4:us_split_fields6. forall result:int__ref.
  forall j2:int. forall result1:int__ref. forall d1:int.
  forall result2:us_split_fields__ref3.
  forall t_old__split_fields4:us_split_fields6.
  forall result3:us_split_fields__ref2.
  forall f_old__split_fields2:us_split_fields4.
  forall result4:us_split_fields__ref2.
  forall f_1__split_fields2:us_split_fields4.
  forall result5:us_split_fields__ref2.
  forall f_2__split_fields2:us_split_fields4.
  forall result6:us_split_fields__ref2.
  forall f_3__split_fields2:us_split_fields4.
  forall result7:us_split_fields__ref2.
  forall f_4__split_fields2:us_split_fields4.
  forall result8:us_split_fields__ref2.
  forall f_5__split_fields2:us_split_fields4. forall result9:int__ref.
  forall x1:int. forall result10:int__ref. forall j3:int.
  forall result11:int__ref. forall d2:int.
  forall binary_trees__extract__v:int.
  forall binary_trees__extract__f__fields:us_split_fields4.
  forall result12:us_split_fields__ref3.
  forall t__split_fields5:us_split_fields6. forall result13:int__ref.
  forall x2:int. forall result14:us_split_fields__ref2.
  forall f_1__split_fields3:us_split_fields4.
  forall binary_trees__extract__v1:int.
  forall binary_trees__extract__f__fields1:us_split_fields4.
  forall result15:us_split_fields__ref3.
  forall t__split_fields6:us_split_fields6. forall result16:int__ref.
  forall y1:int. forall result17:us_split_fields__ref2.
  forall f_2__split_fields3:us_split_fields4. forall yl1:int.
  forall binary_trees__extract__f__fields2:us_split_fields4.
  forall result18:us_split_fields__ref3.
  forall t__split_fields7:us_split_fields6.
  forall result19:us_split_fields__ref2.
  forall f_3__split_fields3:us_split_fields4.
  forall binary_trees__plug__f__fields:us_split_fields4.
  forall result20:us_split_fields__ref3.
  forall t__split_fields8:us_split_fields6.
  forall result21:us_split_fields__ref2.
  forall f_4__split_fields3:us_split_fields4.
  forall binary_trees__plug__f__fields1:us_split_fields4.
  forall result22:us_split_fields__ref3.
  forall t__split_fields9:us_split_fields6.
  forall result23:us_split_fields__ref2.
  forall f_5__split_fields3:us_split_fields4.
  forall result24:us_split_fields__ref3.
  forall t__split_fields10:us_split_fields6.
  forall binary_trees__plug__f__fields2:us_split_fields4.
  forall result25:us_split_fields__ref3.
  forall t__split_fields11:us_split_fields6.
  forall t__split_fields12:us_split_fields__ref3. forall x3:int__ref.
  forall y2:int__ref. forall yl2:int__ref. forall j4:int__ref.
  forall d3:int__ref. forall t_old__split_fields5:us_split_fields__ref3.
  forall f_old__split_fields3:us_split_fields__ref2.
  forall f_1__split_fields4:us_split_fields__ref2.
  forall f_2__split_fields4:us_split_fields__ref2.
  forall f_3__split_fields4:us_split_fields__ref2.
  forall f_4__split_fields4:us_split_fields__ref2.
  forall f_5__split_fields4:us_split_fields__ref2.
  forall t__split_fields13:us_split_fields6. forall x4:int. forall y3:int.
  forall yl3:int. forall j5:int. forall d4:int.
  forall t_old__split_fields6:us_split_fields6.
  forall f_old__split_fields4:us_split_fields4.
  forall f_1__split_fields5:us_split_fields4.
  forall f_2__split_fields5:us_split_fields4.
  forall f_3__split_fields5:us_split_fields4.
  forall f_4__split_fields5:us_split_fields4.
  forall f_5__split_fields5:us_split_fields4. forall result26:bool.
  forall result27:bool. forall result28:bool. forall result29:bool.
  forall result30:bool. forall result31:bool. forall result32:bool.
  forall result33:bool. forall result34:bool. forall result35:bool.
  forall result36:bool. forall result37:bool. ((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = true) ->
  (in_range3(i) -> ((((size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) -> (((0 <  size1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } })) and
  (((((model__1({ us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 }
  })[i])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (not (peek1({ us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i,
  1) = 0)))) -> (((((1 <= 100) -> in_range3(x)) and (((1 <= 100) ->
  in_range3(y)) and (((0 <= 100) -> in_range4(yl)) and
  ((((i = to_rep1(t__split_fields)) and (true = is_root)) or
  ((not (i = to_rep1(t__split_fields))) and (false = is_root))) and
  (((result = { int__content = j }) and (j2 = 1)) and (in_range3(j2) and
  (((result1 = { int__content = d }) and (d1 = 0)) and (in_range5(d1) and
  (((result2 = { us_split_fields__content3 = {
  rec__search_trees__search_tree__root = t_old__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t_old__split_fields1;
  rec__binary_trees__forest__c = t_old__split_fields2 } };
  rec__search_trees__search_tree__values = t_old__split_fields3 } }) and
  (t_old__split_fields4 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 })) and
  ((tree_structure((t_old__split_fields4).rec__search_trees__search_tree__struct) = true) and
  (((result3 = { us_split_fields__content2 = { rec__binary_trees__forest__s =
  f_old__split_fields; rec__binary_trees__forest__c = f_old__split_fields1 }
  }) and (f_old__split_fields2 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 })) and
  ((tree_structure({ us_split_fields5 = f_old__split_fields2 }) = true) and
  (((result4 = { us_split_fields__content2 = { rec__binary_trees__forest__s =
  f_1__split_fields; rec__binary_trees__forest__c = f_1__split_fields1 }
  }) and (f_1__split_fields2 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 })) and
  ((tree_structure({ us_split_fields5 = f_1__split_fields2 }) = true) and
  (((result5 = { us_split_fields__content2 = { rec__binary_trees__forest__s =
  f_2__split_fields; rec__binary_trees__forest__c = f_2__split_fields1 }
  }) and (f_2__split_fields2 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 })) and
  ((tree_structure({ us_split_fields5 = f_2__split_fields2 }) = true) and
  (((result6 = { us_split_fields__content2 = { rec__binary_trees__forest__s =
  f_3__split_fields; rec__binary_trees__forest__c = f_3__split_fields1 }
  }) and (f_3__split_fields2 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 })) and
  ((tree_structure({ us_split_fields5 = f_3__split_fields2 }) = true) and
  (((result7 = { us_split_fields__content2 = { rec__binary_trees__forest__s =
  f_4__split_fields; rec__binary_trees__forest__c = f_4__split_fields1 }
  }) and (f_4__split_fields2 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 })) and
  ((tree_structure({ us_split_fields5 = f_4__split_fields2 }) = true) and
  (((result8 = { us_split_fields__content2 = { rec__binary_trees__forest__s =
  f_5__split_fields; rec__binary_trees__forest__c = f_5__split_fields1 }
  }) and (f_5__split_fields2 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 })) and
  ((tree_structure({ us_split_fields5 = f_5__split_fields2 }) = true) and
  ((((is_root = true) and ((((o = to_rep1(t__split_fields)) and
  in_range3(to_rep1(t__split_fields))) and ((result9 = { int__content = x
  }) and (x1 = o))) and (((d2 = d1) and ((j3 = j2) and (t__split_fields5 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 }))) and
  ((d2 = d1) and ((j3 = j2) and (t__split_fields5 = t__split_fields4)))))) or
  ((not (is_root = true)) and ((((((o1 = parent({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i)) and
  (in_range4(o1) and (((valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i) = true) ->
  (o1 = 0)) and ((size({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 }
  }) = 0) -> (o1 = 0))))) and ((o2 = o1) and in_range3(o1))) and
  ((result10 = { int__content = j2 }) and (j3 = o2))) and ((((o3 = position({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i)) and
  in_range5(o3)) and ((result11 = { int__content = d1 }) and (d2 = o3))) and
  ((((o4 = to_rep1(t__split_fields)) and
  in_range3(to_rep1(t__split_fields))) and (((size({ us_split_fields5 =
  binary_trees__extract__f__fields }) = size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } })) and ((valid_root({
  us_split_fields5 = binary_trees__extract__f__fields }, o4) = true) and
  ((binary_trees__extract__v = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, j3, d2)) and ((peek({
  us_split_fields5 = binary_trees__extract__f__fields }, j3, d2) = 0) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
   ((not (j6 = binary_trees__extract__v)) -> (parent({ us_split_fields5 =
   binary_trees__extract__f__fields }, j6) = parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = t__split_fields1;
   rec__binary_trees__forest__c = t__split_fields2 } }, j6))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
   (((not (j6 = binary_trees__extract__v)) and (not (parent({
   us_split_fields5 = binary_trees__extract__f__fields }, j6) = 0))) ->
   (position({ us_split_fields5 = binary_trees__extract__f__fields },
   j6) = position({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   j6))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
   (forall e:int. (((0 <= e) and (e <= 1)) -> (((not (j6 = j3)) or
   (not (e = d2))) -> (peek({ us_split_fields5 =
   binary_trees__extract__f__fields }, j6, e) = peek({ us_split_fields5 = {
   rec__binary_trees__forest__s = t__split_fields1;
   rec__binary_trees__forest__c = t__split_fields2 } }, j6, e))))))) and
  ((forall t:int. (((1 <= t) and (t <= 100)) -> ((((valid_root({
   us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
   rec__binary_trees__forest__c = t__split_fields2 } }, t) = true) and
   (not (j3 = t))) and (not (binary_trees__extract__v = t))) -> (valid_root({
   us_split_fields5 = binary_trees__extract__f__fields }, t) = true)))) and
  ((forall t:int. (((1 <= t) and (t <= 100)) -> ((((valid_root({
   us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
   rec__binary_trees__forest__c = t__split_fields2 } }, t) = true) and
   (not (o4 = t))) and (not (binary_trees__extract__v = t))) ->
   (oeq(model__({ us_split_fields5 = binary_trees__extract__f__fields }, t),
   model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   t)) = true)))) and
  (((not (binary_trees__extract__v = 0)) -> (valid_root({ us_split_fields5 =
  binary_trees__extract__f__fields }, binary_trees__extract__v) = true)) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
   rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((not (binary_trees__extract__v = 0)) and ((bool_le(length((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
   rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[binary_trees__extract__v])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
   rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[binary_trees__extract__v])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[binary_trees__extract__v])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__a, n)))))) and
   ((((model__({ us_split_fields5 = binary_trees__extract__f__fields },
   binary_trees__extract__v)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (binary_trees__extract__v = 0)) and
   (((bool_le(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = t__split_fields1;
   rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[binary_trees__extract__v])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
   rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[binary_trees__extract__v])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[binary_trees__extract__v])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_le(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = t__split_fields1;
   rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[binary_trees__extract__v])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = false))))) and
   ((((model__({ us_split_fields5 = binary_trees__extract__f__fields },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 = binary_trees__extract__f__fields },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
   (((not (binary_trees__extract__v = 0)) and ((((model__({
   us_split_fields5 = binary_trees__extract__f__fields },
   binary_trees__extract__v)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 = binary_trees__extract__f__fields },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((bool_eq1(length((((model__({ us_split_fields5 =
   binary_trees__extract__f__fields },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = binary_trees__extract__f__fields },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = binary_trees__extract__f__fields },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
   o4)[i1])).us_split_fields1).rec__tree_model__path_type__a, n)))))))) and
  (forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
  (((not (binary_trees__extract__v = 0)) and ((((model__({ us_split_fields5 =
  binary_trees__extract__f__fields },
  binary_trees__extract__v)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
  (is_concat((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
  o4)[binary_trees__extract__v])).us_split_fields1).rec__tree_model__path_type__a,
  (((model__({ us_split_fields5 = binary_trees__extract__f__fields },
  binary_trees__extract__v)[i1])).us_split_fields1).rec__tree_model__path_type__a,
  (((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 } },
  o4)[i1])).us_split_fields1).rec__tree_model__path_type__a) = true)))))))))))))))))) and
  ((tree_structure({ us_split_fields5 = binary_trees__extract__f__fields
  }) = true) and in_range4(binary_trees__extract__v)))) and (((result12 = {
  us_split_fields__content3 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }) and
  (t__split_fields5 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = binary_trees__extract__f__fields };
  rec__search_trees__search_tree__values = t__split_fields3 })) and
  (((o5 = binary_trees__extract__v) and
  in_range3(binary_trees__extract__v)) and ((result13 = { int__content = x
  }) and (x2 = o5))))))) and (x1 = x2)))) and (((not (is_root = true)) ->
  (((o6 = to_rep1((t__split_fields5).rec__search_trees__search_tree__root)) and
  in_range3(to_rep1((t__split_fields5).rec__search_trees__search_tree__root))) and
  ((ordered_leafs((t__split_fields5).rec__search_trees__search_tree__struct,
  o6, (t__split_fields5).rec__search_trees__search_tree__values) = true) and
  ((ordered_leafs((t__split_fields5).rec__search_trees__search_tree__struct,
  x1, (t__split_fields5).rec__search_trees__search_tree__values) = true) and
  (forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
  ((((((model__((t__split_fields5).rec__search_trees__search_tree__struct,
  o6)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_lt(length((((model__((t__split_fields5).rec__search_trees__search_tree__struct,
  o6)[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = f_old__split_fields2 },
  o6)[x1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((model__((t__split_fields5).rec__search_trees__search_tree__struct,
  o6)[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((model__((t__split_fields5).rec__search_trees__search_tree__struct,
  o6)[i1])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((model__({ us_split_fields5 = f_old__split_fields2 },
  o6)[x1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
  (not (bool_lt(length((((model__((t__split_fields5).rec__search_trees__search_tree__struct,
  o6)[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = f_old__split_fields2 },
  o6)[x1])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (((get((((model__({ us_split_fields5 = f_old__split_fields2 },
  o6)[x1])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__((t__split_fields5).rec__search_trees__search_tree__struct,
  o6)[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) and
  (forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
  (((((model__((t__split_fields5).rec__search_trees__search_tree__struct,
  x1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (to_rep(((t__split_fields5).rec__search_trees__search_tree__values[j6])) <  to_rep(((t__split_fields5).rec__search_trees__search_tree__values[i1]))))))) or
  ((not (get((((model__({ us_split_fields5 = f_old__split_fields2 },
  o6)[x1])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__((t__split_fields5).rec__search_trees__search_tree__struct,
  o6)[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) and
  (forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
  (((((model__((t__split_fields5).rec__search_trees__search_tree__struct,
  x1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (to_rep(((t__split_fields5).rec__search_trees__search_tree__values[i1])) <  to_rep(((t__split_fields5).rec__search_trees__search_tree__values[j6]))))))))))))))) and
  (((result14 = { us_split_fields__content2 = f_1__split_fields2 }) and
  (f_1__split_fields3 = ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5)) and
  (((((size({ us_split_fields5 = binary_trees__extract__f__fields1
  }) = size({ us_split_fields5 =
  ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
  })) and ((valid_root({ us_split_fields5 = binary_trees__extract__f__fields1
  }, x1) = true) and ((binary_trees__extract__v1 = peek({ us_split_fields5 =
  ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
  }, x1, 1)) and ((peek({ us_split_fields5 =
  binary_trees__extract__f__fields1 }, x1, 1) = 0) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
   ((not (j6 = binary_trees__extract__v1)) -> (parent({ us_split_fields5 =
   binary_trees__extract__f__fields1 }, j6) = parent({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
   (((not (j6 = binary_trees__extract__v1)) and (not (parent({
   us_split_fields5 = binary_trees__extract__f__fields1 }, j6) = 0))) ->
   (position({ us_split_fields5 = binary_trees__extract__f__fields1 },
   j6) = position({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
   (forall e:int. (((0 <= e) and (e <= 1)) -> (((not (j6 = x1)) or
   (not (e = 1))) -> (peek({ us_split_fields5 =
   binary_trees__extract__f__fields1 }, j6, e) = peek({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6, e))))))) and
  ((forall t:int. (((1 <= t) and (t <= 100)) -> ((((valid_root({
   us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, t) = true) and (not (x1 = t))) and
   (not (binary_trees__extract__v1 = t))) -> (valid_root({ us_split_fields5 =
   binary_trees__extract__f__fields1 }, t) = true)))) and
  ((forall t:int. (((1 <= t) and (t <= 100)) -> ((((valid_root({
   us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, t) = true) and (not (x1 = t))) and
   (not (binary_trees__extract__v1 = t))) -> (oeq(model__({
   us_split_fields5 = binary_trees__extract__f__fields1 }, t), model__({
   us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, t)) = true)))) and
  (((not (binary_trees__extract__v1 = 0)) -> (valid_root({ us_split_fields5 =
  binary_trees__extract__f__fields1 },
  binary_trees__extract__v1) = true)) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((not (binary_trees__extract__v1 = 0)) and ((bool_le(length((((model__({
   us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   },
   x1)[binary_trees__extract__v1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   },
   x1)[binary_trees__extract__v1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   },
   x1)[binary_trees__extract__v1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[i1])).us_split_fields1).rec__tree_model__path_type__a, n)))))) and
   ((((model__({ us_split_fields5 = binary_trees__extract__f__fields1 },
   binary_trees__extract__v1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (binary_trees__extract__v1 = 0)) and
   (((bool_le(length((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   },
   x1)[binary_trees__extract__v1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   },
   x1)[binary_trees__extract__v1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   },
   x1)[binary_trees__extract__v1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[i1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_le(length((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   },
   x1)[binary_trees__extract__v1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = false))))) and
   ((((model__({ us_split_fields5 = binary_trees__extract__f__fields1 },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 = binary_trees__extract__f__fields1 },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
   (((not (binary_trees__extract__v1 = 0)) and ((((model__({
   us_split_fields5 = binary_trees__extract__f__fields1 },
   binary_trees__extract__v1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
   ((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 = binary_trees__extract__f__fields1 },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((bool_eq1(length((((model__({ us_split_fields5 =
   binary_trees__extract__f__fields1 },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = binary_trees__extract__f__fields1 },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = binary_trees__extract__f__fields1 },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 =
   ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[i1])).us_split_fields1).rec__tree_model__path_type__a, n)))))))) and
  (forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
  (((not (binary_trees__extract__v1 = 0)) and ((((model__({
  us_split_fields5 = binary_trees__extract__f__fields1 },
  binary_trees__extract__v1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
  (is_concat((((model__({ us_split_fields5 =
  ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
  },
  x1)[binary_trees__extract__v1])).us_split_fields1).rec__tree_model__path_type__a,
  (((model__({ us_split_fields5 = binary_trees__extract__f__fields1 },
  binary_trees__extract__v1)[i1])).us_split_fields1).rec__tree_model__path_type__a,
  (((model__({ us_split_fields5 =
  ((t__split_fields5).rec__search_trees__search_tree__struct).us_split_fields5
  }, x1)[i1])).us_split_fields1).rec__tree_model__path_type__a) = true)))))))))))))))))) and
  ((tree_structure({ us_split_fields5 = binary_trees__extract__f__fields1
  }) = true) and in_range4(binary_trees__extract__v1))) and (((result15 = {
  us_split_fields__content3 = t__split_fields5 }) and (t__split_fields6 = {
  rec__search_trees__search_tree__root =
  (t__split_fields5).rec__search_trees__search_tree__root;
  rec__search_trees__search_tree__struct = { us_split_fields5 =
  binary_trees__extract__f__fields1 };
  rec__search_trees__search_tree__values =
  (t__split_fields5).rec__search_trees__search_tree__values })) and
  (((o7 = binary_trees__extract__v1) and
  in_range3(binary_trees__extract__v1)) and ((result16 = { int__content = y
  }) and (y1 = o7))))) and
  (((ordered_leafs((t__split_fields6).rec__search_trees__search_tree__struct,
  x1, (t__split_fields6).rec__search_trees__search_tree__values) = true) and
  ((ordered_leafs((t__split_fields6).rec__search_trees__search_tree__struct,
  y1, (t__split_fields6).rec__search_trees__search_tree__values) = true) and
  (forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
  ((((((model__((t__split_fields6).rec__search_trees__search_tree__struct,
  x1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_lt(length((((model__((t__split_fields6).rec__search_trees__search_tree__struct,
  x1)[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = f_1__split_fields3 },
  x1)[y1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((model__((t__split_fields6).rec__search_trees__search_tree__struct,
  x1)[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((model__((t__split_fields6).rec__search_trees__search_tree__struct,
  x1)[i1])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((model__({ us_split_fields5 = f_1__split_fields3 },
  x1)[y1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
  (not (bool_lt(length((((model__((t__split_fields6).rec__search_trees__search_tree__struct,
  x1)[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = f_1__split_fields3 },
  x1)[y1])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (((get((((model__({ us_split_fields5 = f_1__split_fields3 },
  x1)[y1])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__((t__split_fields6).rec__search_trees__search_tree__struct,
  x1)[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) and
  (forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
  (((((model__((t__split_fields6).rec__search_trees__search_tree__struct,
  y1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (to_rep(((t__split_fields6).rec__search_trees__search_tree__values[j6])) <  to_rep(((t__split_fields6).rec__search_trees__search_tree__values[i1]))))))) or
  ((not (get((((model__({ us_split_fields5 = f_1__split_fields3 },
  x1)[y1])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__((t__split_fields6).rec__search_trees__search_tree__struct,
  x1)[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) and
  (forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
  (((((model__((t__split_fields6).rec__search_trees__search_tree__struct,
  y1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (to_rep(((t__split_fields6).rec__search_trees__search_tree__values[i1])) <  to_rep(((t__split_fields6).rec__search_trees__search_tree__values[j6]))))))))))))) and
  ((get((((model__({ us_split_fields5 = f_1__split_fields3 },
  x1)[y1])).us_split_fields1).rec__tree_model__path_type__a, 1) = 1) and
  ((to_rep(((t__split_fields6).rec__search_trees__search_tree__values[x1])) <  to_rep(((t__split_fields6).rec__search_trees__search_tree__values[y1]))) and
  (((not (is_root = true)) ->
  (((o8 = to_rep1((t__split_fields6).rec__search_trees__search_tree__root)) and
  in_range3(to_rep1((t__split_fields6).rec__search_trees__search_tree__root))) and
  (ordered_leafs((t__split_fields6).rec__search_trees__search_tree__struct,
  o8,
  (t__split_fields6).rec__search_trees__search_tree__values) = true))) and
  (((result17 = { us_split_fields__content2 = f_2__split_fields2 }) and
  (f_2__split_fields3 = ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5)) and
  (((((size({ us_split_fields5 = binary_trees__extract__f__fields2
  }) = size({ us_split_fields5 =
  ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
  })) and ((valid_root({ us_split_fields5 = binary_trees__extract__f__fields2
  }, y1) = true) and ((yl1 = peek({ us_split_fields5 =
  ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
  }, y1, 0)) and ((peek({ us_split_fields5 =
  binary_trees__extract__f__fields2 }, y1, 0) = 0) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> ((not (j6 = yl1)) ->
   (parent({ us_split_fields5 = binary_trees__extract__f__fields2 },
   j6) = parent({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((not (j6 = yl1)) and
   (not (parent({ us_split_fields5 = binary_trees__extract__f__fields2 },
   j6) = 0))) -> (position({ us_split_fields5 =
   binary_trees__extract__f__fields2 }, j6) = position({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
   (forall e:int. (((0 <= e) and (e <= 1)) -> (((not (j6 = y1)) or
   (not (e = 0))) -> (peek({ us_split_fields5 =
   binary_trees__extract__f__fields2 }, j6, e) = peek({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6, e))))))) and
  ((forall t:int. (((1 <= t) and (t <= 100)) -> ((((valid_root({
   us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, t) = true) and (not (y1 = t))) and (not (yl1 = t))) -> (valid_root({
   us_split_fields5 = binary_trees__extract__f__fields2 }, t) = true)))) and
  ((forall t:int. (((1 <= t) and (t <= 100)) -> ((((valid_root({
   us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, t) = true) and (not (y1 = t))) and (not (yl1 = t))) -> (oeq(model__({
   us_split_fields5 = binary_trees__extract__f__fields2 }, t), model__({
   us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, t)) = true)))) and
  (((not (yl1 = 0)) -> (valid_root({ us_split_fields5 =
  binary_trees__extract__f__fields2 }, yl1) = true)) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((not (yl1 = 0)) and ((bool_le(length((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[yl1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[yl1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[yl1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[i1])).us_split_fields1).rec__tree_model__path_type__a, n)))))) and
   ((((model__({ us_split_fields5 = binary_trees__extract__f__fields2 },
   yl1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (yl1 = 0)) and (((bool_le(length((((model__({
   us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[yl1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[yl1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[yl1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[i1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_le(length((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[yl1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = false))))) and
   ((((model__({ us_split_fields5 = binary_trees__extract__f__fields2 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 = binary_trees__extract__f__fields2 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((not (yl1 = 0)) and
   ((((model__({ us_split_fields5 = binary_trees__extract__f__fields2 },
   yl1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
   ((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 = binary_trees__extract__f__fields2 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((bool_eq1(length((((model__({ us_split_fields5 =
   binary_trees__extract__f__fields2 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = binary_trees__extract__f__fields2 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = binary_trees__extract__f__fields2 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 =
   ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[i1])).us_split_fields1).rec__tree_model__path_type__a, n)))))))) and
  (forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((not (yl1 = 0)) and
  ((((model__({ us_split_fields5 = binary_trees__extract__f__fields2 },
  yl1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
  (is_concat((((model__({ us_split_fields5 =
  ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
  }, y1)[yl1])).us_split_fields1).rec__tree_model__path_type__a, (((model__({
  us_split_fields5 = binary_trees__extract__f__fields2 },
  yl1)[i1])).us_split_fields1).rec__tree_model__path_type__a, (((model__({
  us_split_fields5 =
  ((t__split_fields6).rec__search_trees__search_tree__struct).us_split_fields5
  }, y1)[i1])).us_split_fields1).rec__tree_model__path_type__a) = true)))))))))))))))))) and
  ((tree_structure({ us_split_fields5 = binary_trees__extract__f__fields2
  }) = true) and in_range4(yl1))) and ((result18 = {
  us_split_fields__content3 = t__split_fields6 }) and (t__split_fields7 = {
  rec__search_trees__search_tree__root =
  (t__split_fields6).rec__search_trees__search_tree__root;
  rec__search_trees__search_tree__struct = { us_split_fields5 =
  binary_trees__extract__f__fields2 };
  rec__search_trees__search_tree__values =
  (t__split_fields6).rec__search_trees__search_tree__values }))) and
  ((((not (yl1 = 0)) and ((((o9 = yl1) and in_range3(yl1)) and
  ((ordered_leafs((t__split_fields7).rec__search_trees__search_tree__struct,
  y1, (t__split_fields7).rec__search_trees__search_tree__values) = true) and
  ((ordered_leafs((t__split_fields7).rec__search_trees__search_tree__struct,
  o9, (t__split_fields7).rec__search_trees__search_tree__values) = true) and
  (forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
  ((((((model__((t__split_fields7).rec__search_trees__search_tree__struct,
  y1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_lt(length((((model__((t__split_fields7).rec__search_trees__search_tree__struct,
  y1)[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = f_2__split_fields3 },
  y1)[o9])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((model__((t__split_fields7).rec__search_trees__search_tree__struct,
  y1)[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((model__((t__split_fields7).rec__search_trees__search_tree__struct,
  y1)[i1])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((model__({ us_split_fields5 = f_2__split_fields3 },
  y1)[o9])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
  (not (bool_lt(length((((model__((t__split_fields7).rec__search_trees__search_tree__struct,
  y1)[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = f_2__split_fields3 },
  y1)[o9])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (((get((((model__({ us_split_fields5 = f_2__split_fields3 },
  y1)[o9])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__((t__split_fields7).rec__search_trees__search_tree__struct,
  y1)[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) and
  (forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
  (((((model__((t__split_fields7).rec__search_trees__search_tree__struct,
  o9)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (to_rep(((t__split_fields7).rec__search_trees__search_tree__values[j6])) <  to_rep(((t__split_fields7).rec__search_trees__search_tree__values[i1]))))))) or
  ((not (get((((model__({ us_split_fields5 = f_2__split_fields3 },
  y1)[o9])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__((t__split_fields7).rec__search_trees__search_tree__struct,
  y1)[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) and
  (forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
  (((((model__((t__split_fields7).rec__search_trees__search_tree__struct,
  o9)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (to_rep(((t__split_fields7).rec__search_trees__search_tree__values[i1])) <  to_rep(((t__split_fields7).rec__search_trees__search_tree__values[j6])))))))))))))) and
  (get((((model__({ us_split_fields5 = f_2__split_fields3 },
  y1)[yl1])).us_split_fields1).rec__tree_model__path_type__a, 1) = 0))) or
  ((yl1 = 0) and
  (ordered_leafs((t__split_fields7).rec__search_trees__search_tree__struct,
  y1,
  (t__split_fields7).rec__search_trees__search_tree__values) = true))) and
  ((ordered_leafs((t__split_fields7).rec__search_trees__search_tree__struct,
  x1, (t__split_fields7).rec__search_trees__search_tree__values) = true) and
  (((not (is_root = true)) ->
  (((o10 = to_rep1((t__split_fields7).rec__search_trees__search_tree__root)) and
  in_range3(to_rep1((t__split_fields7).rec__search_trees__search_tree__root))) and
  (ordered_leafs((t__split_fields7).rec__search_trees__search_tree__struct,
  o10,
  (t__split_fields7).rec__search_trees__search_tree__values) = true))) and
  (((result19 = { us_split_fields__content2 = f_3__split_fields2 }) and
  (f_3__split_fields3 = ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5)) and
  (((((size({ us_split_fields5 = binary_trees__plug__f__fields }) = size({
  us_split_fields5 =
  ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
  })) and ((yl1 = peek({ us_split_fields5 = binary_trees__plug__f__fields },
  x1, 1)) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((valid_root({
   us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6) = true) and (not (j6 = yl1))) -> (valid_root({ us_split_fields5 =
   binary_trees__plug__f__fields }, j6) = true)))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> ((valid_root({
   us_split_fields5 = binary_trees__plug__f__fields }, j6) = true) ->
   (valid_root({ us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6) = true)))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> ((not (j6 = yl1)) ->
   (parent({ us_split_fields5 = binary_trees__plug__f__fields },
   j6) = parent({ us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((not (j6 = yl1)) and
   (not (parent({ us_split_fields5 = binary_trees__plug__f__fields },
   j6) = 0))) -> (position({ us_split_fields5 = binary_trees__plug__f__fields
   }, j6) = position({ us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
   (forall e:int. (((0 <= e) and (e <= 1)) -> (((not (j6 = x1)) or
   (not (e = 1))) -> (peek({ us_split_fields5 = binary_trees__plug__f__fields
   }, j6, e) = peek({ us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6, e))))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((((model__({
   us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((model__({ us_split_fields5 = binary_trees__plug__f__fields },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((not (yl1 = 0)) and
   ((((model__({ us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, yl1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
   ((((model__({ us_split_fields5 = binary_trees__plug__f__fields },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 = binary_trees__plug__f__fields },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((not (yl1 = 0)) and ((bool_le(length((((model__({ us_split_fields5 =
   binary_trees__plug__f__fields },
   x1)[yl1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = binary_trees__plug__f__fields },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = binary_trees__plug__f__fields },
   x1)[yl1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = binary_trees__plug__f__fields },
   x1)[yl1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = binary_trees__plug__f__fields },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__a, n)))))) and
   ((((model__({ us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, yl1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (yl1 = 0)) and (((bool_le(length((((model__({
   us_split_fields5 = binary_trees__plug__f__fields },
   x1)[yl1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = binary_trees__plug__f__fields },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = binary_trees__plug__f__fields },
   x1)[yl1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = binary_trees__plug__f__fields },
   x1)[yl1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = binary_trees__plug__f__fields },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_le(length((((model__({ us_split_fields5 =
   binary_trees__plug__f__fields },
   x1)[yl1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = binary_trees__plug__f__fields },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = false))))) and
   ((((model__({ us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((((model__({
   us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((bool_eq1(length((((model__({ us_split_fields5 =
   binary_trees__plug__f__fields },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[j6])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = binary_trees__plug__f__fields },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = binary_trees__plug__f__fields },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[j6])).us_split_fields1).rec__tree_model__path_type__a, n)))))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((not (yl1 = 0)) and
   ((((model__({ us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, yl1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
   (is_concat((((model__({ us_split_fields5 = binary_trees__plug__f__fields
   }, x1)[peek({ us_split_fields5 = binary_trees__plug__f__fields }, x1,
   1)])).us_split_fields1).rec__tree_model__path_type__a, (((model__({
   us_split_fields5 =
   ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
   }, yl1)[j6])).us_split_fields1).rec__tree_model__path_type__a,
   (((model__({ us_split_fields5 = binary_trees__plug__f__fields },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__a) = true)))) and
  (forall t:int. (((1 <= t) and (t <= 100)) -> ((((valid_root({
  us_split_fields5 =
  ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
  }, t) = true) and (not (x1 = t))) and (not (yl1 = t))) -> (oeq(model__({
  us_split_fields5 = binary_trees__plug__f__fields }, t), model__({
  us_split_fields5 =
  ((t__split_fields7).rec__search_trees__search_tree__struct).us_split_fields5
  }, t)) = true)))))))))))))))) and (tree_structure({ us_split_fields5 =
  binary_trees__plug__f__fields }) = true)) and ((result20 = {
  us_split_fields__content3 = t__split_fields7 }) and (t__split_fields8 = {
  rec__search_trees__search_tree__root =
  (t__split_fields7).rec__search_trees__search_tree__root;
  rec__search_trees__search_tree__struct = { us_split_fields5 =
  binary_trees__plug__f__fields }; rec__search_trees__search_tree__values =
  (t__split_fields7).rec__search_trees__search_tree__values }))) and
  ((((not (yl1 = 0)) and
  ((get((((model__((t__split_fields8).rec__search_trees__search_tree__struct,
  x1)[yl1])).us_split_fields1).rec__tree_model__path_type__a, 1) = 1) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((((model__({
   us_split_fields5 = f_3__split_fields3 },
   y1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   (to_rep(((t__split_fields8).rec__search_trees__search_tree__values[x1])) <  to_rep(((t__split_fields8).rec__search_trees__search_tree__values[j6])))))) and
  ((ordered_leafs({ us_split_fields5 = f_3__split_fields3 }, x1,
  (t__split_fields8).rec__search_trees__search_tree__values) = true) and
  ((ordered_leafs({ us_split_fields5 = f_3__split_fields3 }, yl1,
  (t__split_fields8).rec__search_trees__search_tree__values) = true) and
  (((o11 = yl1) and in_range3(yl1)) and
  (ordered_leafs((t__split_fields8).rec__search_trees__search_tree__struct,
  x1,
  (t__split_fields8).rec__search_trees__search_tree__values) = true))))))) or
  ((yl1 = 0) and
  (ordered_leafs((t__split_fields8).rec__search_trees__search_tree__struct,
  x1,
  (t__split_fields8).rec__search_trees__search_tree__values) = true))) and
  ((ordered_leafs((t__split_fields8).rec__search_trees__search_tree__struct,
  y1, (t__split_fields8).rec__search_trees__search_tree__values) = true) and
  (((not (is_root = true)) ->
  (((o12 = to_rep1((t__split_fields8).rec__search_trees__search_tree__root)) and
  in_range3(to_rep1((t__split_fields8).rec__search_trees__search_tree__root))) and
  (ordered_leafs((t__split_fields8).rec__search_trees__search_tree__struct,
  o12,
  (t__split_fields8).rec__search_trees__search_tree__values) = true))) and
  (((result21 = { us_split_fields__content2 = f_4__split_fields2 }) and
  (f_4__split_fields3 = ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5)) and
  (((((size({ us_split_fields5 = binary_trees__plug__f__fields1 }) = size({
  us_split_fields5 =
  ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
  })) and ((x1 = peek({ us_split_fields5 = binary_trees__plug__f__fields1 },
  y1, 0)) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((valid_root({
   us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6) = true) and (not (j6 = x1))) -> (valid_root({ us_split_fields5 =
   binary_trees__plug__f__fields1 }, j6) = true)))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> ((valid_root({
   us_split_fields5 = binary_trees__plug__f__fields1 }, j6) = true) ->
   (valid_root({ us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6) = true)))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> ((not (j6 = x1)) ->
   (parent({ us_split_fields5 = binary_trees__plug__f__fields1 },
   j6) = parent({ us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((not (j6 = x1)) and
   (not (parent({ us_split_fields5 = binary_trees__plug__f__fields1 },
   j6) = 0))) -> (position({ us_split_fields5 =
   binary_trees__plug__f__fields1 }, j6) = position({ us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
   (forall e:int. (((0 <= e) and (e <= 1)) -> (((not (j6 = y1)) or
   (not (e = 0))) -> (peek({ us_split_fields5 =
   binary_trees__plug__f__fields1 }, j6, e) = peek({ us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6, e))))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((((model__({
   us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((model__({ us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((not (x1 = 0)) and
   ((((model__({ us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
   ((((model__({ us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((not (x1 = 0)) and ((bool_le(length((((model__({ us_split_fields5 =
   binary_trees__plug__f__fields1 },
   y1)[x1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[x1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[x1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__a, n)))))) and
   ((((model__({ us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (x1 = 0)) and (((bool_le(length((((model__({
   us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[x1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[x1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[x1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_le(length((((model__({ us_split_fields5 =
   binary_trees__plug__f__fields1 },
   y1)[x1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = false))))) and
   ((((model__({ us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((((model__({
   us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((bool_eq1(length((((model__({ us_split_fields5 =
   binary_trees__plug__f__fields1 },
   y1)[j6])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[j6])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[j6])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[j6])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[j6])).us_split_fields1).rec__tree_model__path_type__a, n)))))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((not (x1 = 0)) and
   ((((model__({ us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
   (is_concat((((model__({ us_split_fields5 = binary_trees__plug__f__fields1
   }, y1)[peek({ us_split_fields5 = binary_trees__plug__f__fields1 }, y1,
   0)])).us_split_fields1).rec__tree_model__path_type__a, (((model__({
   us_split_fields5 =
   ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
   }, x1)[j6])).us_split_fields1).rec__tree_model__path_type__a, (((model__({
   us_split_fields5 = binary_trees__plug__f__fields1 },
   y1)[j6])).us_split_fields1).rec__tree_model__path_type__a) = true)))) and
  (forall t:int. (((1 <= t) and (t <= 100)) -> ((((valid_root({
  us_split_fields5 =
  ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
  }, t) = true) and (not (y1 = t))) and (not (x1 = t))) -> (oeq(model__({
  us_split_fields5 = binary_trees__plug__f__fields1 }, t), model__({
  us_split_fields5 =
  ((t__split_fields8).rec__search_trees__search_tree__struct).us_split_fields5
  }, t)) = true)))))))))))))))) and (tree_structure({ us_split_fields5 =
  binary_trees__plug__f__fields1 }) = true)) and ((result22 = {
  us_split_fields__content3 = t__split_fields8 }) and (t__split_fields9 = {
  rec__search_trees__search_tree__root =
  (t__split_fields8).rec__search_trees__search_tree__root;
  rec__search_trees__search_tree__struct = { us_split_fields5 =
  binary_trees__plug__f__fields1 }; rec__search_trees__search_tree__values =
  (t__split_fields8).rec__search_trees__search_tree__values }))) and
  ((get((((model__((t__split_fields9).rec__search_trees__search_tree__struct,
  y1)[x1])).us_split_fields1).rec__tree_model__path_type__a, 1) = 0) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> ((((((model__({
   us_split_fields5 = f_2__split_fields3 },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (((bool_lt(length((((model__({ us_split_fields5 = f_2__split_fields3 },
   x1)[x1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = f_2__split_fields3 },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = f_2__split_fields3 },
   x1)[x1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = f_2__split_fields3 },
   x1)[x1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = f_2__split_fields3 },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_lt(length((((model__({ us_split_fields5 = f_2__split_fields3 },
   x1)[x1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = f_2__split_fields3 },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
   (not (get((((model__({ us_split_fields5 = f_2__split_fields3 },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = f_2__split_fields3 },
   x1)[x1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 1))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((((model__({
   us_split_fields5 = f_3__split_fields3 },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   (to_rep(((t__split_fields9).rec__search_trees__search_tree__values[j6])) <= to_rep(((t__split_fields9).rec__search_trees__search_tree__values[x1])))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((((model__({
   us_split_fields5 = f_4__split_fields3 },
   x1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   (to_rep(((t__split_fields9).rec__search_trees__search_tree__values[j6])) <  to_rep(((t__split_fields9).rec__search_trees__search_tree__values[y1])))))) and
  ((ordered_leafs({ us_split_fields5 = f_4__split_fields3 }, x1,
  (t__split_fields9).rec__search_trees__search_tree__values) = true) and
  ((ordered_leafs({ us_split_fields5 = f_4__split_fields3 }, y1,
  (t__split_fields9).rec__search_trees__search_tree__values) = true) and
  ((ordered_leafs((t__split_fields9).rec__search_trees__search_tree__struct,
  y1, (t__split_fields9).rec__search_trees__search_tree__values) = true) and
  (((not (is_root = true)) ->
  (((o13 = to_rep1((t__split_fields9).rec__search_trees__search_tree__root)) and
  in_range3(to_rep1((t__split_fields9).rec__search_trees__search_tree__root))) and
  (ordered_leafs((t__split_fields9).rec__search_trees__search_tree__struct,
  o13,
  (t__split_fields9).rec__search_trees__search_tree__values) = true))) and
  (((result23 = { us_split_fields__content2 = f_5__split_fields2 }) and
  (f_5__split_fields3 = ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5)) and
  ((((is_root = true) and ((((to_rep1(o14) = y1) and ((o14 = o15) and
  (((t__split_fields9).rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = o16;
  rec__binary_trees__forest__c = o17 } }) and
  ((t__split_fields9).rec__search_trees__search_tree__values = o18)))) and
  (temp___994 = { us_split_fields7 = { rec__search_trees__search_tree__root =
  o15; rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = o16; rec__binary_trees__forest__c = o17 } };
  rec__search_trees__search_tree__values = o18 } })) and ((result24 = {
  us_split_fields__content3 = t__split_fields9 }) and
  (t__split_fields10 = (temp___994).us_split_fields7)))) or
  ((not (is_root = true)) and
  ((((((o19 = to_rep1((t__split_fields9).rec__search_trees__search_tree__root)) and
  in_range3(to_rep1((t__split_fields9).rec__search_trees__search_tree__root))) and
  (((size({ us_split_fields5 = binary_trees__plug__f__fields2 }) = size({
  us_split_fields5 =
  ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
  })) and ((y1 = peek({ us_split_fields5 = binary_trees__plug__f__fields2 },
  j3, d2)) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((valid_root({
   us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6) = true) and (not (j6 = y1))) -> (valid_root({ us_split_fields5 =
   binary_trees__plug__f__fields2 }, j6) = true)))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> ((valid_root({
   us_split_fields5 = binary_trees__plug__f__fields2 }, j6) = true) ->
   (valid_root({ us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6) = true)))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> ((not (j6 = y1)) ->
   (parent({ us_split_fields5 = binary_trees__plug__f__fields2 },
   j6) = parent({ us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((not (j6 = y1)) and
   (not (parent({ us_split_fields5 = binary_trees__plug__f__fields2 },
   j6) = 0))) -> (position({ us_split_fields5 =
   binary_trees__plug__f__fields2 }, j6) = position({ us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
   (forall e:int. (((0 <= e) and (e <= 1)) -> (((not (j6 = j3)) or
   (not (e = d2))) -> (peek({ us_split_fields5 =
   binary_trees__plug__f__fields2 }, j6, e) = peek({ us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, j6, e))))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((((model__({
   us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, o19)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((model__({ us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[j6])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((not (y1 = 0)) and
   ((((model__({ us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
   ((((model__({ us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[j6])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((not (y1 = 0)) and ((bool_le(length((((model__({ us_split_fields5 =
   binary_trees__plug__f__fields2 },
   o19)[y1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[y1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[y1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[i1])).us_split_fields1).rec__tree_model__path_type__a, n)))))) and
   ((((model__({ us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (y1 = 0)) and (((bool_le(length((((model__({
   us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[y1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[y1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[y1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[i1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_le(length((((model__({ us_split_fields5 =
   binary_trees__plug__f__fields2 },
   o19)[y1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[i1])).us_split_fields1).rec__tree_model__path_type__a)) = false))))) and
   ((((model__({ us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, o19)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((((model__({
   us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, o19)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((bool_eq1(length((((model__({ us_split_fields5 =
   binary_trees__plug__f__fields2 },
   o19)[j6])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   },
   o19)[j6])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[j6])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[j6])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, o19)[j6])).us_split_fields1).rec__tree_model__path_type__a, n)))))))) and
  ((forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((not (y1 = 0)) and
   ((((model__({ us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
   (is_concat((((model__({ us_split_fields5 = binary_trees__plug__f__fields2
   }, o19)[peek({ us_split_fields5 = binary_trees__plug__f__fields2 }, j3,
   d2)])).us_split_fields1).rec__tree_model__path_type__a, (((model__({
   us_split_fields5 =
   ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
   }, y1)[j6])).us_split_fields1).rec__tree_model__path_type__a, (((model__({
   us_split_fields5 = binary_trees__plug__f__fields2 },
   o19)[j6])).us_split_fields1).rec__tree_model__path_type__a) = true)))) and
  (forall t:int. (((1 <= t) and (t <= 100)) -> ((((valid_root({
  us_split_fields5 =
  ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
  }, t) = true) and (not (o19 = t))) and (not (y1 = t))) -> (oeq(model__({
  us_split_fields5 = binary_trees__plug__f__fields2 }, t), model__({
  us_split_fields5 =
  ((t__split_fields9).rec__search_trees__search_tree__struct).us_split_fields5
  }, t)) = true)))))))))))))))) and (tree_structure({ us_split_fields5 =
  binary_trees__plug__f__fields2 }) = true))) and ((result25 = {
  us_split_fields__content3 = t__split_fields9 }) and (t__split_fields11 = {
  rec__search_trees__search_tree__root =
  (t__split_fields9).rec__search_trees__search_tree__root;
  rec__search_trees__search_tree__struct = { us_split_fields5 =
  binary_trees__plug__f__fields2 }; rec__search_trees__search_tree__values =
  (t__split_fields9).rec__search_trees__search_tree__values }))) and
  ((oeq(model__({ us_split_fields5 = f_5__split_fields3 },
  to_rep1((t__split_fields11).rec__search_trees__search_tree__root)),
  model__({ us_split_fields5 = f_1__split_fields3 },
  to_rep1((t__split_fields11).rec__search_trees__search_tree__root))) = true) and
  ((((((((o32 = to_rep1((t__split_fields11).rec__search_trees__search_tree__root)) and
  in_range3(to_rep1((t__split_fields11).rec__search_trees__search_tree__root))) and
  ((temp___908 = model__({ us_split_fields5 = f_old__split_fields2 },
  o32)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___908[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___908[o32])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___908[o32])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> ((not (i1 = o32)) ->
   ((((not (parent({ us_split_fields5 = f_old__split_fields2 }, i1) = 0)) and
   ((((temp___908[parent({ us_split_fields5 = f_old__split_fields2 },
   i1)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___908[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = f_old__split_fields2 },
   i1) = 0)) and ((((temp___908[parent({ us_split_fields5 =
   f_old__split_fields2 },
   i1)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___908[i1])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
   (((((((temp___908[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i1 = o32))) and (is_add((((temp___908[parent({ us_split_fields5 =
   f_old__split_fields2 },
   i1)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = f_old__split_fields2 }, i1),
   (((temp___908[i1])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___908[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i1 = o32)))) and
   (length((((temp___908[i1])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
  (((((temp___908[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
  ((((((temp___908[j6])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___908[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___908[j6])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___908[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___908[i1])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___908[j6])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___908[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___908[j6])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j6 = i1)))))))))))))) and (o33 = (temp___908[x1]))) and
  (o34 = (o33).us_split_fields1)) and
  (o35 = (o34).rec__tree_model__path_type__a)) and
  (((((((o28 = to_rep1((t__split_fields11).rec__search_trees__search_tree__root)) and
  in_range3(to_rep1((t__split_fields11).rec__search_trees__search_tree__root))) and
  ((temp___907 = model__((t__split_fields11).rec__search_trees__search_tree__struct,
  o28)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___907[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___907[o28])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___907[o28])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> ((not (i1 = o28)) ->
   ((((not (parent((t__split_fields11).rec__search_trees__search_tree__struct,
   i1) = 0)) and
   ((((temp___907[parent((t__split_fields11).rec__search_trees__search_tree__struct,
   i1)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___907[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent((t__split_fields11).rec__search_trees__search_tree__struct,
   i1) = 0)) and
   ((((temp___907[parent((t__split_fields11).rec__search_trees__search_tree__struct,
   i1)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___907[i1])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
   (((((((temp___907[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i1 = o28))) and
   (is_add((((temp___907[parent((t__split_fields11).rec__search_trees__search_tree__struct,
   i1)])).us_split_fields1).rec__tree_model__path_type__a,
   position((t__split_fields11).rec__search_trees__search_tree__struct, i1),
   (((temp___907[i1])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___907[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i1 = o28)))) and
   (length((((temp___907[i1])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
  (((((temp___907[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
  ((((((temp___907[j6])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___907[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___907[j6])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___907[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___907[i1])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___907[j6])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___907[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___907[j6])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j6 = i1)))))))))))))) and (o29 = (temp___907[y1]))) and
  (o30 = (o29).us_split_fields1)) and
  (o31 = (o30).rec__tree_model__path_type__a)) and
  (((((((o24 = to_rep1((t__split_fields11).rec__search_trees__search_tree__root)) and
  in_range3(to_rep1((t__split_fields11).rec__search_trees__search_tree__root))) and
  ((temp___906 = model__({ us_split_fields5 = f_old__split_fields2 },
  o24)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___906[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___906[o24])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___906[o24])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> ((not (i1 = o24)) ->
   ((((not (parent({ us_split_fields5 = f_old__split_fields2 }, i1) = 0)) and
   ((((temp___906[parent({ us_split_fields5 = f_old__split_fields2 },
   i1)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___906[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = f_old__split_fields2 },
   i1) = 0)) and ((((temp___906[parent({ us_split_fields5 =
   f_old__split_fields2 },
   i1)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___906[i1])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
   (((((((temp___906[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i1 = o24))) and (is_add((((temp___906[parent({ us_split_fields5 =
   f_old__split_fields2 },
   i1)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = f_old__split_fields2 }, i1),
   (((temp___906[i1])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___906[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i1 = o24)))) and
   (length((((temp___906[i1])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
  (((((temp___906[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
  ((((((temp___906[j6])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___906[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___906[j6])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___906[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___906[i1])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___906[j6])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___906[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___906[j6])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j6 = i1)))))))))))))) and (o25 = (temp___906[j3]))) and
  (o26 = (o25).us_split_fields1)) and
  (o27 = (o26).rec__tree_model__path_type__a)) and
  (((((((o20 = to_rep1((t__split_fields11).rec__search_trees__search_tree__root)) and
  in_range3(to_rep1((t__split_fields11).rec__search_trees__search_tree__root))) and
  ((temp___905 = model__((t__split_fields11).rec__search_trees__search_tree__struct,
  o20)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___905[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___905[o20])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___905[o20])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> ((not (i1 = o20)) ->
   ((((not (parent((t__split_fields11).rec__search_trees__search_tree__struct,
   i1) = 0)) and
   ((((temp___905[parent((t__split_fields11).rec__search_trees__search_tree__struct,
   i1)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___905[i1])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent((t__split_fields11).rec__search_trees__search_tree__struct,
   i1) = 0)) and
   ((((temp___905[parent((t__split_fields11).rec__search_trees__search_tree__struct,
   i1)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___905[i1])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
   (((((((temp___905[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i1 = o20))) and
   (is_add((((temp___905[parent((t__split_fields11).rec__search_trees__search_tree__struct,
   i1)])).us_split_fields1).rec__tree_model__path_type__a,
   position((t__split_fields11).rec__search_trees__search_tree__struct, i1),
   (((temp___905[i1])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___905[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i1 = o20)))) and
   (length((((temp___905[i1])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i1:int. (((1 <= i1) and (i1 <= 100)) ->
  (((((temp___905[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j6:int. (((1 <= j6) and (j6 <= 100)) ->
  ((((((temp___905[j6])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___905[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___905[j6])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___905[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___905[i1])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___905[j6])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___905[i1])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___905[j6])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j6 = i1)))))))))))))) and (o21 = (temp___905[j3]))) and
  (o22 = (o21).us_split_fields1)) and
  (o23 = (o22).rec__tree_model__path_type__a)) and ((bool_eq1(length(o31),
  length(o35)) = true) and
  (forall n:int. (((1 <= n) and (n <= (0 + length(o31)))) -> (get(o31,
  n) = get(o35, n))))))))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> (((((model__({
   us_split_fields5 = f_5__split_fields3 },
   y1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((model__({ us_split_fields5 = f_1__split_fields3 },
   x1)[i1])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> ((((((model__({
   us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (((bool_lt(length((((model__({ us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__((t__split_fields11).rec__search_trees__search_tree__struct,
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[y1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__((t__split_fields11).rec__search_trees__search_tree__struct,
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[y1])).us_split_fields1).rec__tree_model__path_type__a,
   n))))) and (not (bool_lt(length((((model__({ us_split_fields5 =
   f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__((t__split_fields11).rec__search_trees__search_tree__struct,
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[y1])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
   (((((model__({ us_split_fields5 = f_1__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   ((bool_lt(length((((model__({ us_split_fields5 = f_1__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = f_old__split_fields2 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[x1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = f_1__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = f_1__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = f_old__split_fields2 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[x1])).us_split_fields1).rec__tree_model__path_type__a,
   n))))))))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> ((((((model__({
   us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (((bool_lt(length((((model__({ us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__((t__split_fields11).rec__search_trees__search_tree__struct,
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[y1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__((t__split_fields11).rec__search_trees__search_tree__struct,
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[y1])).us_split_fields1).rec__tree_model__path_type__a,
   n))))) and (not (bool_lt(length((((model__({ us_split_fields5 =
   f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__((t__split_fields11).rec__search_trees__search_tree__struct,
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[y1])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
   (get((((model__({ us_split_fields5 = f_old__split_fields2 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[x1])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = f_1__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = get((((model__((t__split_fields11).rec__search_trees__search_tree__struct,
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[y1])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)))))) and
  ((forall i1:int. (((1 <= i1) and (i1 <= 100)) -> ((((((model__({
   us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (((bool_lt(length((((model__({ us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__((t__split_fields11).rec__search_trees__search_tree__struct,
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[y1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__((t__split_fields11).rec__search_trees__search_tree__struct,
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[y1])).us_split_fields1).rec__tree_model__path_type__a,
   n))))) and (not (bool_lt(length((((model__({ us_split_fields5 =
   f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__((t__split_fields11).rec__search_trees__search_tree__struct,
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[y1])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
   (((get((((model__((t__split_fields11).rec__search_trees__search_tree__struct,
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[y1])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) and
   (forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((((model__({
   us_split_fields5 = f_5__split_fields3 },
   y1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   (to_rep(((t__split_fields11).rec__search_trees__search_tree__values[j6])) <  to_rep(((t__split_fields11).rec__search_trees__search_tree__values[i1]))))))) or
   ((not (get((((model__((t__split_fields11).rec__search_trees__search_tree__struct,
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[y1])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = f_5__split_fields3 },
   to_rep1((t__split_fields11).rec__search_trees__search_tree__root))[i1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) and
   (forall j6:int. (((1 <= j6) and (j6 <= 100)) -> (((((model__({
   us_split_fields5 = f_5__split_fields3 },
   y1)[j6])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   (to_rep(((t__split_fields11).rec__search_trees__search_tree__values[i1])) <  to_rep(((t__split_fields11).rec__search_trees__search_tree__values[j6]))))))))))) and
  (((o36 = to_rep1((t__split_fields11).rec__search_trees__search_tree__root)) and
  in_range3(to_rep1((t__split_fields11).rec__search_trees__search_tree__root))) and
  (ordered_leafs((t__split_fields11).rec__search_trees__search_tree__struct,
  o36,
  (t__split_fields11).rec__search_trees__search_tree__values) = true))))))))) and
  (t__split_fields10 = t__split_fields11)))) and (oeq1(values1({
  us_split_fields7 = t_old__split_fields4 }), values1({ us_split_fields7 =
  t__split_fields10
  })) = true))))))))))))))))))))))))))))))))))))))))))))))))))))) and
  (((f_5__split_fields4 = { us_split_fields__content2 = f_5__split_fields3
  }) and ((f_4__split_fields4 = { us_split_fields__content2 =
  f_4__split_fields3 }) and ((f_3__split_fields4 = {
  us_split_fields__content2 = f_3__split_fields3 }) and
  ((f_2__split_fields4 = { us_split_fields__content2 = f_2__split_fields3
  }) and ((f_1__split_fields4 = { us_split_fields__content2 =
  f_1__split_fields3 }) and ((f_old__split_fields3 = {
  us_split_fields__content2 = f_old__split_fields2 }) and
  ((t_old__split_fields5 = { us_split_fields__content3 = t_old__split_fields4
  }) and ((d3 = { int__content = d2 }) and ((j4 = { int__content = j3 }) and
  ((yl2 = { int__content = yl1 }) and ((y2 = { int__content = y1 }) and
  ((x3 = { int__content = x1 }) and (t__split_fields12 = {
  us_split_fields__content3 = t__split_fields10 }))))))))))))) and
  ((f_5__split_fields5 = f_5__split_fields3) and
  ((f_4__split_fields5 = f_4__split_fields3) and
  ((f_3__split_fields5 = f_3__split_fields3) and
  ((f_2__split_fields5 = f_2__split_fields3) and
  ((f_1__split_fields5 = f_1__split_fields3) and
  ((f_old__split_fields4 = f_old__split_fields2) and
  ((t_old__split_fields6 = t_old__split_fields4) and ((d4 = d2) and
  ((j5 = j3) and ((yl3 = yl1) and ((y3 = y1) and ((x4 = x1) and
  (t__split_fields13 = t__split_fields10))))))))))))))) ->
  ((((size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0) and
  (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) or
  ((not (size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0)) and
  (((not (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) and
  (valid_root(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root)) = true)) and
  (ordered_leafs(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root),
  ((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__values) = true)))) ->
  ((((((size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0) and
  (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) or
  ((not (size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0)) and
  (((not (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) and
  (valid_root(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root)) = true)) and
  (ordered_leafs(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root),
  ((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__values) = true)))) and
  ((o91 = size1({ us_split_fields7 =
  (t__split_fields12).us_split_fields__content3 })) and (in_range4(o91) and
  (o91 = size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct))))) and
  (((o91 = size1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } })) and
  (result26 = true)) or ((not (o91 = size1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }))) and
  (result26 = false)))) -> ((result26 = true) -> ((((not (root({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }) = i)) and
  (((((size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0) and
  (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) or
  ((not (size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0)) and
  (((not (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) and
  (valid_root(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root)) = true)) and
  (ordered_leafs(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root),
  ((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__values) = true)))) and
  ((o88 = root({ us_split_fields7 =
  (t__split_fields12).us_split_fields__content3 })) and (in_range3(o88) and
  (o88 = to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root))))) and
  (((o88 = root({ us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } })) and
  (result27 = true)) or ((not (o88 = root({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }))) and
  (result27 = false))))) or ((root({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }) = i) and
  (((((size({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 }
  }) = 0) and (to_rep1(t__split_fields) = 0)) or ((not (size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o89 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o89) and (o89 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  (((((size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0) and
  (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) or
  ((not (size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0)) and
  (((not (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) and
  (valid_root(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root)) = true)) and
  (ordered_leafs(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root),
  ((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__values) = true)))) and
  ((o90 = root({ us_split_fields7 =
  (t__split_fields12).us_split_fields__content3 })) and (in_range3(o90) and
  (o90 = to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root))))) and
  (((o90 = o89) and (result27 = true)) or ((not (o90 = o89)) and
  (result27 = false))))))) -> ((result27 = true) -> ((((((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o86 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o86) and (o86 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  (((((size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0) and
  (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) or
  ((not (size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0)) and
  (((not (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) and
  (valid_root(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root)) = true)) and
  (ordered_leafs(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root),
  ((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__values) = true)))) and
  ((o87 = parent1({ us_split_fields7 =
  (t__split_fields12).us_split_fields__content3 }, i)) and
  (in_range4(o87) and
  ((o87 = parent(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  i)) and ((size1({ us_split_fields7 =
  (t__split_fields12).us_split_fields__content3 }) = 0) -> (o87 = 0)))))) and
  (((o87 = o86) and (result28 = true)) or ((not (o87 = o86)) and
  (result28 = false))))) -> ((result28 = true) ->
  ((((((size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0) and
  (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) or
  ((not (size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0)) and
  (((not (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) and
  (valid_root(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root)) = true)) and
  (ordered_leafs(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root),
  ((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__values) = true)))) and
  ((o85 = position1({ us_split_fields7 =
  (t__split_fields12).us_split_fields__content3 }, i)) and
  (in_range5(o85) and
  (o85 = position(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  i))))) and (((o85 = 0) and (result29 = true)) or ((not (o85 = 0)) and
  (result29 = false)))) -> ((result29 = true) -> ((((((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and
  ((o83 = parent1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i)) and
  (in_range4(o83) and ((o83 = parent({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i)) and ((size1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }) = 0) ->
  (o83 = 0)))))) and ((((((((size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o79 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o79) and (o79 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o80 = o79) and in_range3(o79))) and
  (((size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0) and
  (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) or
  ((not (size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0)) and
  (((not (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) and
  (valid_root(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root)) = true)) and
  (ordered_leafs(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root),
  ((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__values) = true))))) and
  ((((((size({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 }
  }) = 0) and (to_rep1(t__split_fields) = 0)) or ((not (size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o81 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o81) and (o81 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o82 = o81) and in_range3(o81))) and ((o84 = parent1({ us_split_fields7 =
  (t__split_fields12).us_split_fields__content3 }, o82)) and
  (in_range4(o84) and
  ((o84 = parent(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  o82)) and ((size1({ us_split_fields7 =
  (t__split_fields12).us_split_fields__content3 }) = 0) ->
  (o84 = 0))))))) and (((o84 = o83) and (result30 = true)) or
  ((not (o84 = o83)) and (result30 = false))))) -> ((result30 = true) ->
  ((((not (root({ us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }) = i)) and
  (((((size({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 }
  }) = 0) and (to_rep1(t__split_fields) = 0)) or ((not (size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and
  ((o77 = position1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i)) and
  (in_range5(o77) and (o77 = position({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i))))) and
  ((((((((size({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 }
  }) = 0) and (to_rep1(t__split_fields) = 0)) or ((not (size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o73 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o73) and (o73 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o74 = o73) and in_range3(o73))) and
  (((size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0) and
  (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) or
  ((not (size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0)) and
  (((not (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) and
  (valid_root(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root)) = true)) and
  (ordered_leafs(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root),
  ((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__values) = true))))) and
  ((((((size({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 }
  }) = 0) and (to_rep1(t__split_fields) = 0)) or ((not (size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o75 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o75) and (o75 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o76 = o75) and in_range3(o75))) and ((o78 = position1({
  us_split_fields7 = (t__split_fields12).us_split_fields__content3 },
  o76)) and (in_range5(o78) and
  (o78 = position(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  o76)))))) and (((o78 = o77) and (result31 = true)) or
  ((not (o78 = o77)) and (result31 = false)))))) or ((root({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }) = i) and
  (result31 = of_int(1)))) -> ((result31 = true) -> (((((((((((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o41 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o41) and (o41 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o42 = o41) and in_range3(o41))) and (((size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true))))) and ((((((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o43 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o43) and (o43 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o44 = o43) and in_range3(o43))) and ((o45 = peek1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, o44, 0)) and
  (in_range4(o45) and (o45 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, o44, 0)))))) and
  (((o45 = 0) and (o46 = true)) or ((not (o45 = 0)) and (o46 = false)))) and
  (((not (o46 = true)) and (result33 = true)) or ((o46 = true) and
  (result33 = false)))) and (((result33 = true) and ((((((((((((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o60 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o60) and (o60 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o61 = o60) and in_range3(o60))) and (((size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true))))) and ((((((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o62 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o62) and (o62 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o63 = o62) and in_range3(o62))) and ((o64 = peek1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, o63, 0)) and
  (in_range4(o64) and (o64 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, o63, 0)))))) and
  ((o65 = o64) and in_range3(o64))) and
  (((size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0) and
  (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) or
  ((not (size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0)) and
  (((not (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) and
  (valid_root(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root)) = true)) and
  (ordered_leafs(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root),
  ((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__values) = true))))) and
  (((((((((size({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 }
  }) = 0) and (to_rep1(t__split_fields) = 0)) or ((not (size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o66 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o66) and (o66 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o67 = o66) and in_range3(o66))) and (((size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true))))) and ((((((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o68 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o68) and (o68 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o69 = o68) and in_range3(o68))) and ((o70 = peek1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, o69, 0)) and
  (in_range4(o70) and (o70 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, o69, 0)))))) and
  ((o71 = o70) and in_range3(o70))) and ((o72 = parent1({ us_split_fields7 =
  (t__split_fields12).us_split_fields__content3 }, o71)) and
  (in_range4(o72) and
  ((o72 = parent(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  o71)) and ((size1({ us_split_fields7 =
  (t__split_fields12).us_split_fields__content3 }) = 0) ->
  (o72 = 0))))))) and (((o72 = i) and (result34 = true)) or
  ((not (o72 = i)) and (result34 = false)))) and (((result34 = true) and
  (((((((((((size({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 }
  }) = 0) and (to_rep1(t__split_fields) = 0)) or ((not (size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o47 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o47) and (o47 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o48 = o47) and in_range3(o47))) and (((size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true))))) and ((((((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o49 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o49) and (o49 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o50 = o49) and in_range3(o49))) and ((o51 = peek1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, o50, 0)) and
  (in_range4(o51) and (o51 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, o50, 0)))))) and
  ((o52 = o51) and in_range3(o51))) and
  (((size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0) and
  (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) or
  ((not (size(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct) = 0)) and
  (((not (to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root) = 0)) and
  (valid_root(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root)) = true)) and
  (ordered_leafs(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  to_rep1(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__root),
  ((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__values) = true))))) and
  (((((((((size({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 }
  }) = 0) and (to_rep1(t__split_fields) = 0)) or ((not (size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o53 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o53) and (o53 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o54 = o53) and in_range3(o53))) and (((size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true))))) and ((((((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and ((o55 = peek1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, i, 1)) and
  (in_range4(o55) and (o55 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, i, 1))))) and
  ((o56 = o55) and in_range3(o55))) and ((o57 = peek1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, o56, 0)) and
  (in_range4(o57) and (o57 = peek({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, o56, 0)))))) and
  ((o58 = o57) and in_range3(o57))) and ((o59 = position1({
  us_split_fields7 = (t__split_fields12).us_split_fields__content3 },
  o58)) and (in_range5(o59) and
  (o59 = position(((t__split_fields12).us_split_fields__content3).rec__search_trees__search_tree__struct,
  o58)))))) and (((o59 = 1) and (result32 = true)) or ((not (o59 = 1)) and
  (result32 = false))))) or ((not (result34 = true)) and
  (result32 = false))))) or ((not (result33 = true)) and
  (result32 = of_int(1))))) -> ((result32 = true) -> (((result35 = true) <->
  (forall j6:int. (((1 <= j6) and (j6 <= 100)) -> ((((not (j6 = i)) and
  ((not (parent1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, j6) = i)) or
  (position1({ us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } },
  j6) = 0))) and ((((parent1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, j6) = 0) or
  (not (parent1({ us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, parent1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } },
  j6)) = i))) or (position1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, parent1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } },
  j6)) = 0)) or (position1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } },
  j6) = 1))) -> (parent1({ us_split_fields7 =
  (t__split_fields12).us_split_fields__content3 }, j6) = parent1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, j6)))))) ->
  ((result35 = true) -> (((1 <= j1) and (j1 <= 100)) -> ((((not (j1 = i)) and
  ((((((size({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 }
  }) = 0) and (to_rep1(t__split_fields) = 0)) or ((not (size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and
  ((o39 = parent1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, j1)) and
  (in_range4(o39) and ((o39 = parent({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, j1)) and ((size1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }) = 0) ->
  (o39 = 0)))))) and (((o39 = 0) and (o40 = true)) or ((not (o39 = 0)) and
  (o40 = false)))) and (((not (o40 = true)) and (result36 = true)) or
  ((o40 = true) and (result36 = false))))) or ((j1 = i) and
  (result36 = false))) -> ((result36 = true) -> (((((((size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0) and
  (to_rep1(t__split_fields) = 0)) or ((not (size({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) and
  ((o37 = parent1({ us_split_fields7 = {
  rec__search_trees__search_tree__root = t__split_fields;
  rec__search_trees__search_tree__struct = { us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }, j1)) and
  (in_range4(o37) and ((o37 = parent({ us_split_fields5 = {
  rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }, j1)) and ((size1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } }) = 0) ->
  (o37 = 0)))))) and (((o37 = i) and (o38 = true)) or ((not (o37 = i)) and
  (o38 = false)))) and (((not (o38 = true)) and (result37 = true)) or
  ((o38 = true) and (result37 = false)))) -> ((not (result37 = true)) ->
  ((((size({ us_split_fields5 = { rec__binary_trees__forest__s =
  t__split_fields1; rec__binary_trees__forest__c = t__split_fields2 }
  }) = 0) and (to_rep1(t__split_fields) = 0)) or ((not (size({
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } }) = 0)) and
  (((not (to_rep1(t__split_fields) = 0)) and (valid_root({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields)) = true)) and (ordered_leafs({ us_split_fields5 =
  { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } },
  to_rep1(t__split_fields), t__split_fields3) = true)))) -> (not (parent1({
  us_split_fields7 = { rec__search_trees__search_tree__root =
  t__split_fields; rec__search_trees__search_tree__struct = {
  us_split_fields5 = { rec__binary_trees__forest__s = t__split_fields1;
  rec__binary_trees__forest__c = t__split_fields2 } };
  rec__search_trees__search_tree__values = t__split_fields3 } },
  j1) = 0)))))))))))))))))))))))))))))))
