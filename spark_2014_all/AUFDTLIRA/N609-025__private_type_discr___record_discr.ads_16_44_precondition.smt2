(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort natural 0)
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range1 temp___expr_33)))
(declare-fun to_rep (natural) Int)
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__private_record__result_ty__found Bool)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) Bool (rec__private_record__result_ty__found a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__private_record__result_ty us_main_type)))))
(define-fun us_split_fields_Result_Ty__projection ((a us_split_fields)) us_main_type (rec__private_record__result_ty a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq ((a us_rep) (b us_rep)) Bool (ite (and (= (rec__private_record__result_ty__found (us_split_discrs1 a)) (rec__private_record__result_ty__found (us_split_discrs1 b))) (= (us_main_eq (rec__private_record__result_ty (us_split_fields1 a)) (rec__private_record__result_ty (us_split_fields1 b))) true)) true false))
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-const private_record__result_ty__found__first__bit Int)
(declare-const private_record__result_ty__found__last__bit Int)
(declare-const private_record__result_ty__found__position Int)
(assert (<= 0 private_record__result_ty__found__first__bit))
(assert (< private_record__result_ty__found__first__bit private_record__result_ty__found__last__bit))
(assert (<= 0 private_record__result_ty__found__position))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((result_ty__ref (mk_result_ty__ref (result_ty__content us_rep)))))
(define-fun result_ty__ref___projection ((a result_ty__ref)) us_rep (result_ty__content a))
(declare-fun get_content (us_rep) Int)
(declare-fun get_content__function_guard (Int us_rep) Bool)
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (positive positive) Bool)
(declare-const dummy2 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun dynamic_invariant1 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(declare-fun mk_result (Bool Int) us_rep)
(declare-fun mk_result__function_guard (us_rep Bool Int) Bool)
(assert (forall ((found Bool)) (forall ((content Int)) (! (=> (dynamic_invariant1 content true true true) (let ((result (mk_result found content))) (and (= (= (rec__private_record__result_ty__found (us_split_discrs1 result)) true) (= found true)) (=> (= found true) (= (get_content result) content))))) :pattern ((mk_result found content))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int natural))))))
(declare-fun slide ((Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int natural))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int natural) Int Int (Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (natural Int) (Array Int natural))
(assert (forall ((v natural)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq1 ((a (Array Int natural)) (a__first Int) (a__last Int) (b (Array Int natural)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132))))))) true false))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_132 Int)) (=> (and (<= a__first temp___idx_132) (<= temp___idx_132 a__last)) (= (to_rep (select a temp___idx_132)) (to_rep (select b (+ (- b__first a__first) temp___idx_132)))))))))))
(declare-fun compare ((Array Int natural) Int Int (Array Int natural) Int Int) Int)
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq1 a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq1 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq1 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-sort integer 0)
(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((t3s__ref (mk_t3s__ref (t3s__content integer)))))
(define-fun t3s__ref___projection ((a t3s__ref)) integer (t3s__content a))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range3 f) (=> (in_range3 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range3 low) (and (in_range3 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int natural)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int natural) (elts a))
(define-fun of_array ((a (Array Int natural)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int natural)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int natural)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int natural)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment1 a))))
(define-fun bool_eq2 ((x us_t) (y us_t)) Bool (bool_eq1 (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq5 (us_t us_t) Bool)
(declare-const dummy5 us_t)
(declare-datatypes () ((t4s__ref (mk_t4s__ref (t4s__content us_t)))))
(define-fun t4s__ref___projection ((a t4s__ref)) us_t (t4s__content a))
(declare-datatypes () ((us_split_discrs2 (mk___split_discrs1 (rec__record_discr__interm_result__upto natural)))))
(define-fun us_split_discrs___2__projection ((a us_split_discrs2)) natural (rec__record_discr__interm_result__upto a))
(declare-datatypes () ((us_split_discrs__ref1 (mk___split_discrs__ref1 (us_split_discrs__content1 us_split_discrs2)))))
(define-fun us_split_discrs__ref___2__projection ((a us_split_discrs__ref1)) us_split_discrs2 (us_split_discrs__content1 a))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__record_discr__interm_result__to_search us_t)))))
(define-fun us_split_fields_To_Search__projection ((a us_split_fields2)) us_t (rec__record_discr__interm_result__to_search a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_discrs3 us_split_discrs2) (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_discrs2 (us_split_discrs3 a))
(define-fun us_rep___4__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (= (to_rep (rec__record_discr__interm_result__upto (us_split_discrs3 a))) (to_rep (rec__record_discr__interm_result__upto (us_split_discrs3 b)))) (= (bool_eq2 (rec__record_discr__interm_result__to_search (us_split_fields3 a)) (rec__record_discr__interm_result__to_search (us_split_fields3 b))) true)) true false))
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep1) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep1) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep1)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment2 a))))
(declare-const record_discr__interm_result__upto__first__bit Int)
(declare-const record_discr__interm_result__upto__last__bit Int)
(declare-const record_discr__interm_result__upto__position Int)
(assert (<= 0 record_discr__interm_result__upto__first__bit))
(assert (< record_discr__interm_result__upto__first__bit record_discr__interm_result__upto__last__bit))
(assert (<= 0 record_discr__interm_result__upto__position))
(declare-const record_discr__interm_result__to_search__first__bit Int)
(declare-const record_discr__interm_result__to_search__last__bit Int)
(declare-const record_discr__interm_result__to_search__position Int)
(assert (<= 0 record_discr__interm_result__to_search__first__bit))
(assert (< record_discr__interm_result__to_search__first__bit record_discr__interm_result__to_search__last__bit))
(assert (<= 0 record_discr__interm_result__to_search__position))
(declare-fun user_eq6 (us_rep1 us_rep1) Bool)
(declare-const dummy6 us_rep1)
(declare-datatypes () ((interm_result__ref (mk_interm_result__ref (interm_result__content us_rep1)))))
(define-fun interm_result__ref___projection ((a interm_result__ref)) us_rep1 (interm_result__content a))
(declare-sort tT5sP1 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq7 (tT5sP1 tT5sP1) Bool)
(declare-const dummy7 tT5sP1)
(declare-datatypes () ((tT5sP1__ref (mk_tT5sP1__ref (tT5sP1__content tT5sP1)))))
(define-fun tT5sP1__ref___projection ((a tT5sP1__ref)) tT5sP1 (tT5sP1__content a))
(declare-const dummy8 (Array Int natural))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int natural)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int natural)) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int natural)) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq8 ((Array Int natural) (Array Int natural)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__record_discr__interm_result__to_search1 (Array Int natural))))))
(define-fun us_split_fields_To_Search__2__projection ((a us_split_fields4)) (Array Int natural) (rec__record_discr__interm_result__to_search1 a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep2 (mk___rep2 (us_split_discrs4 us_split_discrs2) (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___5__projection ((a us_rep2)) us_split_discrs2 (us_split_discrs4 a))
(define-fun us_rep___6__projection ((a us_rep2)) us_split_fields4 (us_split_fields5 a))
(define-fun to_base ((a us_rep2)) us_rep1 (mk___rep1 (us_split_discrs4 a) (mk___split_fields1 (of_array (rec__record_discr__interm_result__to_search1 (us_split_fields5 a)) 1 3))))
(define-fun of_base ((r us_rep1)) us_rep2 (mk___rep2 (us_split_discrs3 r) (mk___split_fields2 (let ((temp___133 (rec__record_discr__interm_result__to_search (us_split_fields3 r)))) (to_array temp___133)))))
(define-fun bool_eq4 ((a us_rep2) (b us_rep2)) Bool (ite (and (= (to_rep (rec__record_discr__interm_result__upto (us_split_discrs4 a))) (to_rep (rec__record_discr__interm_result__upto (us_split_discrs4 b)))) (= (bool_eq1 (rec__record_discr__interm_result__to_search1 (us_split_fields5 a)) 1 3 (rec__record_discr__interm_result__to_search1 (us_split_fields5 b)) 1 3) true)) true false))
(define-fun in_range5 ((rec__record_discr__interm_result__upto1 Int) (a us_rep1)) Bool (= rec__record_discr__interm_result__upto1 (to_rep (rec__record_discr__interm_result__upto (us_split_discrs3 a)))))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep2) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep2) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep2)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment4 a))))
(declare-const record_discr__interm_result__upto__first__bit1 Int)
(declare-const record_discr__interm_result__upto__last__bit1 Int)
(declare-const record_discr__interm_result__upto__position1 Int)
(assert (<= 0 record_discr__interm_result__upto__first__bit1))
(assert (< record_discr__interm_result__upto__first__bit1 record_discr__interm_result__upto__last__bit1))
(assert (<= 0 record_discr__interm_result__upto__position1))
(declare-const record_discr__interm_result__to_search__first__bit1 Int)
(declare-const record_discr__interm_result__to_search__last__bit1 Int)
(declare-const record_discr__interm_result__to_search__position1 Int)
(assert (<= 0 record_discr__interm_result__to_search__first__bit1))
(assert (< record_discr__interm_result__to_search__first__bit1 record_discr__interm_result__to_search__last__bit1))
(assert (<= 0 record_discr__interm_result__to_search__position1))
(declare-fun user_eq9 (us_rep2 us_rep2) Bool)
(declare-const dummy9 us_rep2)
(declare-datatypes () ((result_3__ref (mk_result_3__ref (result_3__content us_rep2)))))
(define-fun result_3__ref___projection ((a result_3__ref)) us_rep2 (result_3__content a))
(define-fun dynamic_invariant2 ((temp___expr_166 us_rep2) (temp___is_init_163 Bool) (temp___skip_constant_164 Bool) (temp___do_toplevel_165 Bool)) Bool (=> (not (= temp___skip_constant_164 true)) (in_range5 3 (to_base temp___expr_166))))
(define-fun default_initial_assumption ((temp___expr_169 us_rep2) (temp___skip_top_level_170 Bool)) Bool (= (to_rep (rec__record_discr__interm_result__upto (us_split_discrs4 temp___expr_169))) 3))
(declare-const r us_rep2)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const e Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_invariant3 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range3 temp___expr_15)))
(define-fun dynamic_invariant4 ((temp___expr_160 us_rep1) (temp___is_init_157 Bool) (temp___skip_constant_158 Bool) (temp___do_toplevel_159 Bool)) Bool (let ((temp___161 (rec__record_discr__interm_result__upto (us_split_discrs3 temp___expr_160)))) (and (dynamic_property1 1 (to_rep temp___161) (first1 (rec__record_discr__interm_result__to_search (us_split_fields3 temp___expr_160))) (last1 (rec__record_discr__interm_result__to_search (us_split_fields3 temp___expr_160)))) (and (= (first1 (rec__record_discr__interm_result__to_search (us_split_fields3 temp___expr_160))) 1) (= (last1 (rec__record_discr__interm_result__to_search (us_split_fields3 temp___expr_160))) (to_rep temp___161))))))
(declare-const record_discr__search_upto_3__result Bool)
(declare-const record_discr__search_upto_3__result1 us_main_type)
(declare-const o Bool)
(declare-const o1 us_main_type)
(declare-const o2 Bool)
(declare-const o3 us_main_type)
(declare-const o4 Bool)
(declare-const o5 us_main_type)
(declare-const o6 Bool)
(declare-const o7 us_main_type)
(declare-const temp___251 Int)
(declare-const o8 Int)
(declare-const i Int)
(declare-const result Bool)
(declare-const result1 us_main_type)
(declare-const record_discr__search_upto_3__result2 Bool)
(declare-const record_discr__search_upto_3__result3 us_main_type)
(declare-const result2 result_ty__ref)
(declare-const record_discr__search_upto_3__result4 us_rep)
(declare-const result3 result_ty__ref)
(declare-const record_discr__search_upto_3__result5 us_rep)
(declare-const result4 result_ty__ref)
(declare-const record_discr__search_upto_3__result6 us_rep)
(declare-const record_discr__search_upto_3__result7 result_ty__ref)
(declare-const record_discr__search_upto_3__result8 us_rep)
(declare-const record_discr__search_upto_3__result9 result_ty__ref)
(declare-const record_discr__search_upto_3__result10 us_rep)
(declare-const record_discr__search_upto_3__result11 result_ty__ref)
(declare-const record_discr__search_upto_3__result12 us_rep)
(declare-const record_discr__search_upto_3__result13 result_ty__ref)
(declare-const record_discr__search_upto_3__result14 us_rep)
(declare-const record_discr__search_upto_3__result15 result_ty__ref)
(declare-const record_discr__search_upto_3__result16 us_rep)
(declare-const result5 Bool)
(assert (= 3 (to_rep (rec__record_discr__interm_result__upto (us_split_discrs4 r)))))
(assert (in_range1 e))
(assert (and (and (= (to_rep (rec__record_discr__interm_result__upto (us_split_discrs4 r))) 3) (and (and (= record_discr__search_upto_3__result13 record_discr__search_upto_3__result11) (= record_discr__search_upto_3__result14 record_discr__search_upto_3__result12)) (ite (= (to_rep (select (rec__record_discr__interm_result__to_search1 (us_split_fields5 r)) 1)) e) (and (and (= record_discr__search_upto_3__result11 (mk_result_ty__ref (mk___rep (mk___split_discrs record_discr__search_upto_3__result2) (mk___split_fields record_discr__search_upto_3__result3)))) (= record_discr__search_upto_3__result12 (mk___rep (mk___split_discrs record_discr__search_upto_3__result2) (mk___split_fields record_discr__search_upto_3__result3)))) (and (and (= (mk___rep (mk___split_discrs o) (mk___split_fields o1)) (mk_result (of_int 1) 1)) (and (= (= o true) (= (of_int 1) true)) (=> (= (of_int 1) true) (= (get_content (mk___rep (mk___split_discrs o) (mk___split_fields o1))) 1)))) (and (= (mk_result_ty__ref (mk___rep (mk___split_discrs result) (mk___split_fields result1))) (mk_result_ty__ref (mk___rep (mk___split_discrs record_discr__search_upto_3__result) (mk___split_fields record_discr__search_upto_3__result1)))) (= (mk___rep (mk___split_discrs record_discr__search_upto_3__result2) (mk___split_fields record_discr__search_upto_3__result3)) (mk___rep (mk___split_discrs o) (mk___split_fields o1)))))) (and (and (= record_discr__search_upto_3__result11 record_discr__search_upto_3__result9) (= record_discr__search_upto_3__result12 record_discr__search_upto_3__result10)) (ite (= (to_rep (select (rec__record_discr__interm_result__to_search1 (us_split_fields5 r)) 2)) e) (and (and (= record_discr__search_upto_3__result9 (mk_result_ty__ref record_discr__search_upto_3__result4)) (= record_discr__search_upto_3__result10 record_discr__search_upto_3__result4)) (and (and (= (mk___rep (mk___split_discrs o2) (mk___split_fields o3)) (mk_result (of_int 1) 2)) (and (= (= o2 true) (= (of_int 1) true)) (=> (= (of_int 1) true) (= (get_content (mk___rep (mk___split_discrs o2) (mk___split_fields o3))) 2)))) (and (= result2 (mk_result_ty__ref (mk___rep (mk___split_discrs record_discr__search_upto_3__result) (mk___split_fields record_discr__search_upto_3__result1)))) (= record_discr__search_upto_3__result4 (mk___rep (mk___split_discrs o2) (mk___split_fields o3)))))) (and (and (= record_discr__search_upto_3__result9 record_discr__search_upto_3__result7) (= record_discr__search_upto_3__result10 record_discr__search_upto_3__result8)) (ite (= (to_rep (select (rec__record_discr__interm_result__to_search1 (us_split_fields5 r)) 3)) e) (and (and (= record_discr__search_upto_3__result7 (mk_result_ty__ref record_discr__search_upto_3__result5)) (= record_discr__search_upto_3__result8 record_discr__search_upto_3__result5)) (and (and (= (mk___rep (mk___split_discrs o4) (mk___split_fields o5)) (mk_result (of_int 1) 3)) (and (= (= o4 true) (= (of_int 1) true)) (=> (= (of_int 1) true) (= (get_content (mk___rep (mk___split_discrs o4) (mk___split_fields o5))) 3)))) (and (= result3 (mk_result_ty__ref (mk___rep (mk___split_discrs record_discr__search_upto_3__result) (mk___split_fields record_discr__search_upto_3__result1)))) (= record_discr__search_upto_3__result5 (mk___rep (mk___split_discrs o4) (mk___split_fields o5)))))) (and (and (= record_discr__search_upto_3__result7 (mk_result_ty__ref record_discr__search_upto_3__result6)) (= record_discr__search_upto_3__result8 record_discr__search_upto_3__result6)) (and (and (= (mk___rep (mk___split_discrs o6) (mk___split_fields o7)) (mk_result (of_int 0) 1)) (and (= (= o6 true) (= (of_int 0) true)) (=> (= (of_int 0) true) (= (get_content (mk___rep (mk___split_discrs o6) (mk___split_fields o7))) 1)))) (and (= result4 (mk_result_ty__ref (mk___rep (mk___split_discrs record_discr__search_upto_3__result) (mk___split_fields record_discr__search_upto_3__result1)))) (= record_discr__search_upto_3__result6 (mk___rep (mk___split_discrs o6) (mk___split_fields o7))))))))))))) (and (= record_discr__search_upto_3__result15 record_discr__search_upto_3__result13) (= record_discr__search_upto_3__result16 record_discr__search_upto_3__result14))))
(assert (= (rec__private_record__result_ty__found (us_split_discrs1 (result_ty__content record_discr__search_upto_3__result15))) true))
(assert (and (= o8 (get_content (result_ty__content record_discr__search_upto_3__result15))) (in_range2 o8)))
(assert (= result5 (ite (<= o8 (to_rep (rec__record_discr__interm_result__upto (us_split_discrs4 r)))) true false)))
(assert (= result5 true))
(assert (= (rec__private_record__result_ty__found (us_split_discrs1 (result_ty__content record_discr__search_upto_3__result15))) true))
(assert (not true))
(check-sat)
(exit)
