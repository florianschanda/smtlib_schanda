(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun dynamic_invariant ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(declare-fun to_rep (integer) Int)
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort slot 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (slot slot) Bool)
(declare-const dummy1 slot)
(declare-datatypes () ((slot__ref (mk_slot__ref (slot__content slot)))))
(define-fun slot__ref___projection ((a slot__ref)) slot (slot__content a))
(declare-fun to_rep1 (slot) Int)
(declare-fun of_rep1 (Int) slot)
(assert (forall ((x slot)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x slot)) (! (in_range2 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort pos 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 1 x) (<= x 3)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (pos pos) Bool)
(declare-const dummy2 pos)
(declare-datatypes () ((pos__ref (mk_pos__ref (pos__content pos)))))
(define-fun pos__ref___projection ((a pos__ref)) pos (pos__content a))
(declare-fun to_rep2 (pos) Int)
(declare-fun of_rep2 (Int) pos)
(assert (forall ((x pos)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x pos)) (! (in_range3 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int slot))))))
(declare-fun slide ((Array Int slot) Int Int) (Array Int slot))
(assert (forall ((a (Array Int slot))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int slot))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int slot) Int Int (Array Int slot) Int Int) (Array Int slot))
(assert (forall ((a (Array Int slot)) (b (Array Int slot))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (slot Int) (Array Int slot))
(assert (forall ((v slot)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int slot)) (a__first Int) (a__last Int) (b (Array Int slot)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep1 (select a temp___idx_151)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_151))))))) true false))
(assert (forall ((a (Array Int slot)) (b (Array Int slot))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_151 Int)) (=> (and (<= a__first temp___idx_151) (<= temp___idx_151 a__last)) (= (to_rep1 (select a temp___idx_151)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_151)))))))))))
(declare-fun compare ((Array Int slot) Int Int (Array Int slot) Int Int) Int)
(assert (forall ((a (Array Int slot)) (b (Array Int slot))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int slot)) (b (Array Int slot))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep1 (select a (+ i 1))) (to_rep1 (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int slot)) (b (Array Int slot))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep1 (select b (+ i 1))) (to_rep1 (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-const dummy3 (Array Int slot))
(declare-const value__size Int)
(declare-fun object__size ((Array Int slot)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int slot)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int slot)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int slot))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int slot))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int slot))) (<= 0 (object__alignment a))))
(declare-fun user_eq3 ((Array Int slot) (Array Int slot)) Bool)
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int (Array Int slot)))))))
(declare-fun slide1 ((Array Int (Array Int slot)) Int Int) (Array Int (Array Int slot)))
(assert (forall ((a (Array Int (Array Int slot)))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int (Array Int slot)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(declare-fun concat2 ((Array Int (Array Int slot)) Int Int (Array Int (Array Int slot)) Int Int) (Array Int (Array Int slot)))
(assert (forall ((a (Array Int (Array Int slot))) (b (Array Int (Array Int slot)))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat2 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat2 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat2 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton2 ((Array Int slot) Int) (Array Int (Array Int slot)))
(assert (forall ((v (Array Int slot))) (forall ((i Int)) (! (= (select (singleton2 v i) i) v) :pattern ((select (singleton2 v i) i))))))
(define-fun bool_eq1 ((a (Array Int (Array Int slot))) (a__first Int) (a__last Int) (b (Array Int (Array Int slot))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq (select a temp___idx_152) 1 3 (select b (+ (- b__first a__first) temp___idx_152)) 1 3) true)))) true false))
(assert (forall ((a (Array Int (Array Int slot))) (b (Array Int (Array Int slot)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_152 Int)) (=> (and (<= a__first temp___idx_152) (<= temp___idx_152 a__last)) (= (bool_eq (select a temp___idx_152) 1 3 (select b (+ (- b__first a__first) temp___idx_152)) 1 3) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-fun num_free_slots ((Array Int (Array Int slot))) Int)
(declare-fun num_free_slots__function_guard (Int (Array Int (Array Int slot))) Bool)
(declare-sort natural 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (natural natural) Bool)
(declare-const dummy4 natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant1 ((temp___expr_33 Int) (temp___is_init_30 Bool) (temp___skip_constant_31 Bool) (temp___do_toplevel_32 Bool)) Bool (=> (or (= temp___is_init_30 true) (<= 0 2147483647)) (in_range4 temp___expr_33)))
(declare-fun count_free_slots (Int Int (Array Int (Array Int slot))) Int)
(declare-fun count_free_slots__function_guard (Int Int Int (Array Int (Array Int slot))) Bool)
(assert (forall ((tictactoe__my_board (Array Int (Array Int slot)))) (! (dynamic_invariant1 (num_free_slots tictactoe__my_board) true false true) :pattern ((num_free_slots tictactoe__my_board)))))
(assert (forall ((tictactoe__my_board (Array Int (Array Int slot)))) (! (= (num_free_slots tictactoe__my_board) (count_free_slots 3 3 tictactoe__my_board)) :pattern ((num_free_slots tictactoe__my_board)))))
(declare-fun is_full ((Array Int (Array Int slot))) Bool)
(declare-fun is_full__function_guard (Bool (Array Int (Array Int slot))) Bool)
(assert true)
(assert (forall ((tictactoe__my_board (Array Int (Array Int slot)))) (! (= (= (is_full tictactoe__my_board) true) (= (num_free_slots tictactoe__my_board) 0)) :pattern ((is_full tictactoe__my_board)))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__tictactoe__position__x pos) (rec__tictactoe__position__y pos)))))
(define-fun us_split_fields_X__projection ((a us_split_fields)) pos (rec__tictactoe__position__x a))
(define-fun us_split_fields_Y__projection ((a us_split_fields)) pos (rec__tictactoe__position__y a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___3__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep2 (rec__tictactoe__position__x (us_split_fields1 a))) (to_rep2 (rec__tictactoe__position__x (us_split_fields1 b)))) (= (to_rep2 (rec__tictactoe__position__y (us_split_fields1 a))) (to_rep2 (rec__tictactoe__position__y (us_split_fields1 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const tictactoe__position__x__first__bit Int)
(declare-const tictactoe__position__x__last__bit Int)
(declare-const tictactoe__position__x__position Int)
(assert (<= 0 tictactoe__position__x__first__bit))
(assert (< tictactoe__position__x__first__bit tictactoe__position__x__last__bit))
(assert (<= 0 tictactoe__position__x__position))
(declare-const tictactoe__position__y__first__bit Int)
(declare-const tictactoe__position__y__last__bit Int)
(declare-const tictactoe__position__y__position Int)
(assert (<= 0 tictactoe__position__y__first__bit))
(assert (< tictactoe__position__y__first__bit tictactoe__position__y__last__bit))
(assert (<= 0 tictactoe__position__y__position))
(declare-fun user_eq5 (us_rep us_rep) Bool)
(declare-const dummy5 us_rep)
(declare-datatypes () ((position__ref (mk_position__ref (position__content us_rep)))))
(define-fun position__ref___projection ((a position__ref)) us_rep (position__content a))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int us_rep))))))
(declare-fun slide2 ((Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int us_rep))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(declare-fun concat3 ((Array Int us_rep) Int Int (Array Int us_rep) Int Int) (Array Int us_rep))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat3 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat3 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat3 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton3 (us_rep Int) (Array Int us_rep))
(assert (forall ((v us_rep)) (forall ((i Int)) (! (= (select (singleton3 v i) i) v) :pattern ((select (singleton3 v i) i))))))
(define-fun bool_eq3 ((a (Array Int us_rep)) (a__first Int) (a__last Int) (b (Array Int us_rep)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (bool_eq2 (select a temp___idx_153) (select b (+ (- b__first a__first) temp___idx_153))) true)))) true false))
(assert (forall ((a (Array Int us_rep)) (b (Array Int us_rep))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_153 Int)) (=> (and (<= a__first temp___idx_153) (<= temp___idx_153 a__last)) (= (bool_eq2 (select a temp___idx_153) (select b (+ (- b__first a__first) temp___idx_153))) true))))))))
(declare-const dummy6 (Array Int us_rep))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int us_rep)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int us_rep)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int us_rep)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int us_rep))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq6 ((Array Int us_rep) (Array Int us_rep)) Bool)
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int (Array Int us_rep)))))))
(declare-fun slide3 ((Array Int (Array Int us_rep)) Int Int) (Array Int (Array Int us_rep)))
(assert (forall ((a (Array Int (Array Int us_rep)))) (forall ((first Int)) (! (= (slide3 a first first) a) :pattern ((slide3 a first first))))))
(assert (forall ((a (Array Int (Array Int us_rep)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(declare-fun concat4 ((Array Int (Array Int us_rep)) Int Int (Array Int (Array Int us_rep)) Int Int) (Array Int (Array Int us_rep)))
(assert (forall ((a (Array Int (Array Int us_rep))) (b (Array Int (Array Int us_rep)))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat4 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat4 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat4 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton4 ((Array Int us_rep) Int) (Array Int (Array Int us_rep)))
(assert (forall ((v (Array Int us_rep))) (forall ((i Int)) (! (= (select (singleton4 v i) i) v) :pattern ((select (singleton4 v i) i))))))
(define-fun bool_eq4 ((a (Array Int (Array Int us_rep))) (a__first Int) (a__last Int) (b (Array Int (Array Int us_rep))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq3 (select a temp___idx_154) 1 3 (select b (+ (- b__first a__first) temp___idx_154)) 1 3) true)))) true false))
(assert (forall ((a (Array Int (Array Int us_rep))) (b (Array Int (Array Int us_rep)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq3 (select a temp___idx_154) 1 3 (select b (+ (- b__first a__first) temp___idx_154)) 1 3) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-fun won ((Array Int (Array Int slot)) (Array Int (Array Int us_rep))) Int)
(declare-fun won__function_guard (Int (Array Int (Array Int slot)) (Array Int (Array Int us_rep))) Bool)
(define-fun dynamic_invariant2 ((temp___expr_513 Int) (temp___is_init_510 Bool) (temp___skip_constant_511 Bool) (temp___do_toplevel_512 Bool)) Bool (=> (or (= temp___is_init_510 true) (<= 0 2)) (in_range2 temp___expr_513)))
(assert (forall ((tictactoe__my_board (Array Int (Array Int slot)))) (forall ((tictactoe__all_solutions (Array Int (Array Int us_rep)))) (! (dynamic_invariant2 (won tictactoe__my_board tictactoe__all_solutions) true false true) :pattern ((won tictactoe__my_board tictactoe__all_solutions))))))
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int integer))))))
(declare-fun slide4 ((Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer))) (forall ((first Int)) (! (= (slide4 a first first) a) :pattern ((slide4 a first first))))))
(assert (forall ((a (Array Int integer))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(declare-fun concat5 ((Array Int integer) Int Int (Array Int integer) Int Int) (Array Int integer))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat5 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat5 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat5 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton5 (integer Int) (Array Int integer))
(assert (forall ((v integer)) (forall ((i Int)) (! (= (select (singleton5 v i) i) v) :pattern ((select (singleton5 v i) i))))))
(define-fun bool_eq5 ((a (Array Int integer)) (a__first Int) (a__last Int) (b (Array Int integer)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (to_rep (select a temp___idx_155)) (to_rep (select b (+ (- b__first a__first) temp___idx_155))))))) true false))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq5 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (to_rep (select a temp___idx_155)) (to_rep (select b (+ (- b__first a__first) temp___idx_155)))))))))))
(declare-fun compare1 ((Array Int integer) Int Int (Array Int integer) Int Int) Int)
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare1 a a_first a_last b b_first b_last) 0) (= (bool_eq5 a a_first a_last b b_first b_last) true)) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare1 a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq5 a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int integer)) (b (Array Int integer))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare1 a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq5 a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare1 a a_first a_last b b_first b_last))))))
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-fun tictactoe__computer_play__target_scores__aggregate_def (Int Int) (Array Int integer))
(assert (forall ((temp___788 Int) (temp___789 Int)) (let ((temp___787 (tictactoe__computer_play__target_scores__aggregate_def temp___788 temp___789))) (and (= (select temp___787 1) (of_rep temp___788)) (= (select temp___787 2) (of_rep temp___789))))))
(define-fun dynamic_invariant3 ((temp___expr_519 Int) (temp___is_init_516 Bool) (temp___skip_constant_517 Bool) (temp___do_toplevel_518 Bool)) Bool (=> (or (= temp___is_init_516 true) (<= 1 3)) (in_range3 temp___expr_519)))
(declare-fun one_free_slot (Int Int (Array Int (Array Int slot))) Int)
(declare-fun one_free_slot__function_guard (Int Int Int (Array Int (Array Int slot))) Bool)
(assert (forall ((x Int) (y Int)) (forall ((tictactoe__my_board (Array Int (Array Int slot)))) (! (=> (and (dynamic_invariant3 x true true true) (dynamic_invariant3 y true true true)) (dynamic_invariant (one_free_slot x y tictactoe__my_board) true false true)) :pattern ((one_free_slot x y tictactoe__my_board))))))
(assert (forall ((x Int) (y Int)) (forall ((tictactoe__my_board (Array Int (Array Int slot)))) (! (=> (and (dynamic_invariant3 x true true true) (dynamic_invariant3 y true true true)) (= (one_free_slot x y tictactoe__my_board) (ite (= (to_rep1 (let ((temp___548 (select tictactoe__my_board x))) (select temp___548 y))) 0) 1 0))) :pattern ((one_free_slot x y tictactoe__my_board))))))
(assert (forall ((x Int) (y Int)) (forall ((tictactoe__my_board (Array Int (Array Int slot)))) (! (=> (and (dynamic_invariant3 x true true true) (dynamic_invariant3 y true true true)) (dynamic_invariant (count_free_slots x y tictactoe__my_board) true false true)) :pattern ((count_free_slots x y tictactoe__my_board))))))
(assert (forall ((x Int) (y Int)) (forall ((tictactoe__my_board (Array Int (Array Int slot)))) (! (=> (and (dynamic_invariant3 x true true true) (dynamic_invariant3 y true true true)) (= (count_free_slots x y tictactoe__my_board) (+ (+ (+ (+ (one_free_slot 1 1 tictactoe__my_board) (ite (<= 2 y) (one_free_slot 1 2 tictactoe__my_board) 0)) (ite (<= 3 y) (one_free_slot 1 3 tictactoe__my_board) 0)) (ite (<= 2 x) (+ (+ (one_free_slot 2 1 tictactoe__my_board) (ite (<= 2 y) (one_free_slot 2 2 tictactoe__my_board) 0)) (ite (<= 3 y) (one_free_slot 2 3 tictactoe__my_board) 0)) 0)) (ite (<= 3 x) (+ (+ (one_free_slot 3 1 tictactoe__my_board) (ite (<= 2 y) (one_free_slot 3 2 tictactoe__my_board) 0)) (ite (<= 3 y) (one_free_slot 3 3 tictactoe__my_board) 0)) 0)))) :pattern ((count_free_slots x y tictactoe__my_board))))))
(declare-const my_board (Array Int (Array Int slot)))
(declare-const all_solutions (Array Int (Array Int us_rep)))
(declare-const score Int)
(declare-const target_scores (Array Int integer))
(declare-const p__split_fields pos)
(declare-const p__split_fields1 pos)
(declare-const found Bool)
(declare-const target_score Int)
(declare-const c38b Int)
(declare-const i Int)
(declare-const c41b Int)
(declare-const i1 Int)
(declare-const j Int)
(declare-const o pos)
(declare-const o1 pos)
(declare-const o2 pos)
(declare-const o3 pos)
(declare-const tictactoe__computer_play__p__assume pos)
(declare-const tictactoe__computer_play__p__assume1 pos)
(declare-const temp___816 Int)
(declare-const temp___815 Bool)
(declare-const temp___814 pos)
(declare-const temp___8141 pos)
(declare-const temp___811 Int)
(declare-const temp___810 Bool)
(declare-const temp___809 pos)
(declare-const temp___8091 pos)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const temp___806 Bool)
(declare-const temp___805 pos)
(declare-const temp___8051 pos)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const temp___8061 Bool)
(declare-const temp___8052 us_rep)
(declare-const o16 Int)
(declare-const o17 Int)
(declare-const o18 Int)
(declare-const o19 Int)
(declare-const o20 Int)
(declare-const o21 Int)
(declare-const temp___8062 Bool)
(declare-const temp___8053 us_rep)
(declare-const o22 Int)
(declare-const o23 Int)
(declare-const o24 Int)
(declare-const o25 Int)
(declare-const o26 Int)
(declare-const o27 Int)
(declare-const temp___8063 Bool)
(declare-const temp___8054 us_rep)
(declare-const o28 Int)
(declare-const o29 Int)
(declare-const o30 Int)
(declare-const o31 Int)
(declare-const o32 Int)
(declare-const o33 Int)
(declare-const temp___8064 Bool)
(declare-const temp___8055 us_rep)
(declare-const o34 Int)
(declare-const o35 Int)
(declare-const o36 Int)
(declare-const o37 Int)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const temp___8065 Bool)
(declare-const temp___8056 us_rep)
(declare-const o40 Int)
(declare-const o41 Int)
(declare-const o42 Int)
(declare-const o43 Int)
(declare-const o44 Int)
(declare-const o45 Int)
(declare-const temp___8066 Bool)
(declare-const temp___8057 us_rep)
(declare-const o46 Int)
(declare-const o47 Int)
(declare-const o48 Int)
(declare-const o49 Int)
(declare-const o50 Int)
(declare-const o51 Int)
(declare-const temp___8067 Bool)
(declare-const temp___8058 us_rep)
(declare-const temp___8111 Int)
(declare-const temp___8101 Bool)
(declare-const temp___8092 us_rep)
(declare-const o52 Int)
(declare-const o53 Int)
(declare-const o54 Int)
(declare-const o55 Int)
(declare-const o56 Int)
(declare-const o57 Int)
(declare-const temp___8068 Bool)
(declare-const temp___8059 us_rep)
(declare-const o58 Int)
(declare-const o59 Int)
(declare-const o60 Int)
(declare-const o61 Int)
(declare-const o62 Int)
(declare-const o63 Int)
(declare-const temp___8069 Bool)
(declare-const temp___80510 us_rep)
(declare-const o64 Int)
(declare-const o65 Int)
(declare-const o66 Int)
(declare-const o67 Int)
(declare-const o68 Int)
(declare-const o69 Int)
(declare-const temp___80610 Bool)
(declare-const temp___80511 us_rep)
(declare-const o70 Int)
(declare-const o71 Int)
(declare-const o72 Int)
(declare-const o73 Int)
(declare-const o74 Int)
(declare-const o75 Int)
(declare-const temp___80611 Bool)
(declare-const temp___80512 us_rep)
(declare-const o76 Int)
(declare-const o77 Int)
(declare-const o78 Int)
(declare-const o79 Int)
(declare-const o80 Int)
(declare-const o81 Int)
(declare-const temp___80612 Bool)
(declare-const temp___80513 us_rep)
(declare-const o82 Int)
(declare-const o83 Int)
(declare-const o84 Int)
(declare-const o85 Int)
(declare-const o86 Int)
(declare-const o87 Int)
(declare-const temp___80613 Bool)
(declare-const temp___80514 us_rep)
(declare-const o88 Int)
(declare-const o89 Int)
(declare-const o90 Int)
(declare-const o91 Int)
(declare-const o92 Int)
(declare-const o93 Int)
(declare-const temp___80614 Bool)
(declare-const temp___80515 us_rep)
(declare-const o94 Int)
(declare-const o95 Int)
(declare-const o96 Int)
(declare-const o97 Int)
(declare-const o98 Int)
(declare-const o99 Int)
(declare-const temp___80615 Bool)
(declare-const temp___80516 us_rep)
(declare-const temp___823 (Array Int (Array Int slot)))
(declare-const temp___820 (Array Int (Array Int slot)))
(declare-const o100 pos)
(declare-const o101 pos)
(declare-const o102 us_split_fields)
(declare-const o103 us_rep)
(declare-const o104 pos)
(declare-const o105 pos)
(declare-const o106 us_split_fields)
(declare-const o107 us_rep)
(declare-const o108 pos)
(declare-const o109 pos)
(declare-const o110 us_split_fields)
(declare-const o111 us_rep)
(declare-const temp___8201 (Array Int (Array Int slot)))
(declare-const o112 pos)
(declare-const o113 pos)
(declare-const o114 us_split_fields)
(declare-const o115 us_rep)
(declare-const o116 pos)
(declare-const o117 pos)
(declare-const o118 us_split_fields)
(declare-const o119 us_rep)
(declare-const o120 pos)
(declare-const o121 pos)
(declare-const o122 us_split_fields)
(declare-const o123 us_rep)
(declare-const temp___8202 (Array Int (Array Int slot)))
(declare-const o124 pos)
(declare-const o125 pos)
(declare-const o126 us_split_fields)
(declare-const o127 us_rep)
(declare-const o128 pos)
(declare-const o129 pos)
(declare-const o130 us_split_fields)
(declare-const o131 us_rep)
(declare-const o132 pos)
(declare-const o133 pos)
(declare-const o134 us_split_fields)
(declare-const o135 us_rep)
(declare-const my_board1 (Array Int (Array Int slot)))
(declare-const c41b1 Int)
(declare-const i2 Int)
(declare-const j1 Int)
(declare-const result map__ref4)
(declare-const target_scores1 (Array Int integer))
(declare-const result1 us_split_fields__ref)
(declare-const p__split_fields2 us_split_fields)
(declare-const result2 bool__ref)
(declare-const found1 Bool)
(declare-const result3 int__ref)
(declare-const target_score1 Int)
(declare-const result4 int__ref)
(declare-const c38b1 Int)
(declare-const result5 int__ref)
(declare-const score1 Int)
(declare-const result6 int__ref)
(declare-const i3 Int)
(declare-const result7 us_split_fields__ref)
(declare-const p__split_fields3 us_split_fields)
(declare-const result8 int__ref)
(declare-const score2 Int)
(declare-const result9 int__ref)
(declare-const score3 Int)
(declare-const result10 int__ref)
(declare-const i4 Int)
(declare-const result11 us_split_fields__ref)
(declare-const p__split_fields4 us_split_fields)
(declare-const result12 int__ref)
(declare-const score4 Int)
(declare-const result13 int__ref)
(declare-const score5 Int)
(declare-const result14 int__ref)
(declare-const i5 Int)
(declare-const result15 us_split_fields__ref)
(declare-const p__split_fields5 us_split_fields)
(declare-const result16 int__ref)
(declare-const score6 Int)
(declare-const result17 int__ref)
(declare-const score7 Int)
(declare-const result18 int__ref)
(declare-const c41b2 Int)
(declare-const result19 bool__ref)
(declare-const found2 Bool)
(declare-const result20 us_split_fields__ref)
(declare-const p__split_fields6 us_split_fields)
(declare-const result21 int__ref)
(declare-const c41b3 Int)
(declare-const result22 bool__ref)
(declare-const found3 Bool)
(declare-const result23 us_split_fields__ref)
(declare-const p__split_fields7 us_split_fields)
(declare-const result24 int__ref)
(declare-const c41b4 Int)
(declare-const result25 bool__ref)
(declare-const found4 Bool)
(declare-const result26 us_split_fields__ref)
(declare-const p__split_fields8 us_split_fields)
(declare-const p__split_fields9 us_split_fields__ref)
(declare-const found5 bool__ref)
(declare-const c41b5 int__ref)
(declare-const p__split_fields10 us_split_fields)
(declare-const found6 Bool)
(declare-const c41b6 Int)
(declare-const p__split_fields11 us_split_fields__ref)
(declare-const found7 bool__ref)
(declare-const c41b7 int__ref)
(declare-const p__split_fields12 us_split_fields)
(declare-const found8 Bool)
(declare-const c41b8 Int)
(declare-const result27 int__ref)
(declare-const c38b2 Int)
(declare-const result28 int__ref)
(declare-const score8 Int)
(declare-const result29 int__ref)
(declare-const i6 Int)
(declare-const result30 us_split_fields__ref)
(declare-const p__split_fields13 us_split_fields)
(declare-const result31 int__ref)
(declare-const score9 Int)
(declare-const result32 int__ref)
(declare-const score10 Int)
(declare-const result33 int__ref)
(declare-const i7 Int)
(declare-const result34 us_split_fields__ref)
(declare-const p__split_fields14 us_split_fields)
(declare-const result35 int__ref)
(declare-const score11 Int)
(declare-const result36 int__ref)
(declare-const score12 Int)
(declare-const result37 int__ref)
(declare-const i8 Int)
(declare-const result38 us_split_fields__ref)
(declare-const p__split_fields15 us_split_fields)
(declare-const result39 int__ref)
(declare-const score13 Int)
(declare-const result40 int__ref)
(declare-const score14 Int)
(declare-const result41 int__ref)
(declare-const c41b9 Int)
(declare-const result42 bool__ref)
(declare-const found9 Bool)
(declare-const result43 us_split_fields__ref)
(declare-const p__split_fields16 us_split_fields)
(declare-const result44 int__ref)
(declare-const c41b10 Int)
(declare-const result45 bool__ref)
(declare-const found10 Bool)
(declare-const result46 us_split_fields__ref)
(declare-const p__split_fields17 us_split_fields)
(declare-const result47 int__ref)
(declare-const c41b11 Int)
(declare-const result48 bool__ref)
(declare-const found11 Bool)
(declare-const result49 us_split_fields__ref)
(declare-const p__split_fields18 us_split_fields)
(declare-const p__split_fields19 us_split_fields__ref)
(declare-const found12 bool__ref)
(declare-const c41b12 int__ref)
(declare-const p__split_fields20 us_split_fields)
(declare-const found13 Bool)
(declare-const c41b13 Int)
(declare-const p__split_fields21 us_split_fields__ref)
(declare-const found14 bool__ref)
(declare-const c41b14 int__ref)
(declare-const p__split_fields22 us_split_fields)
(declare-const found15 Bool)
(declare-const c41b15 Int)
(declare-const result50 int__ref)
(declare-const c38b3 Int)
(declare-const result51 int__ref)
(declare-const score15 Int)
(declare-const result52 int__ref)
(declare-const i9 Int)
(declare-const result53 us_split_fields__ref)
(declare-const p__split_fields23 us_split_fields)
(declare-const result54 int__ref)
(declare-const score16 Int)
(declare-const result55 int__ref)
(declare-const score17 Int)
(declare-const result56 int__ref)
(declare-const i10 Int)
(declare-const result57 us_split_fields__ref)
(declare-const p__split_fields24 us_split_fields)
(declare-const result58 int__ref)
(declare-const score18 Int)
(declare-const result59 int__ref)
(declare-const score19 Int)
(declare-const result60 int__ref)
(declare-const i11 Int)
(declare-const result61 us_split_fields__ref)
(declare-const p__split_fields25 us_split_fields)
(declare-const result62 int__ref)
(declare-const score20 Int)
(declare-const result63 int__ref)
(declare-const score21 Int)
(declare-const result64 int__ref)
(declare-const c41b16 Int)
(declare-const result65 bool__ref)
(declare-const found16 Bool)
(declare-const result66 us_split_fields__ref)
(declare-const p__split_fields26 us_split_fields)
(declare-const result67 int__ref)
(declare-const c41b17 Int)
(declare-const result68 bool__ref)
(declare-const found17 Bool)
(declare-const result69 us_split_fields__ref)
(declare-const p__split_fields27 us_split_fields)
(declare-const result70 int__ref)
(declare-const c41b18 Int)
(declare-const result71 bool__ref)
(declare-const found18 Bool)
(declare-const result72 us_split_fields__ref)
(declare-const p__split_fields28 us_split_fields)
(declare-const p__split_fields29 us_split_fields__ref)
(declare-const found19 bool__ref)
(declare-const c41b19 int__ref)
(declare-const p__split_fields30 us_split_fields)
(declare-const found20 Bool)
(declare-const c41b20 Int)
(declare-const p__split_fields31 us_split_fields__ref)
(declare-const found21 bool__ref)
(declare-const c41b21 int__ref)
(declare-const p__split_fields32 us_split_fields)
(declare-const found22 Bool)
(declare-const c41b22 Int)
(declare-const result73 int__ref)
(declare-const c38b4 Int)
(declare-const result74 int__ref)
(declare-const score22 Int)
(declare-const result75 int__ref)
(declare-const i12 Int)
(declare-const result76 us_split_fields__ref)
(declare-const p__split_fields33 us_split_fields)
(declare-const result77 int__ref)
(declare-const score23 Int)
(declare-const result78 int__ref)
(declare-const score24 Int)
(declare-const result79 int__ref)
(declare-const i13 Int)
(declare-const result80 us_split_fields__ref)
(declare-const p__split_fields34 us_split_fields)
(declare-const result81 int__ref)
(declare-const score25 Int)
(declare-const result82 int__ref)
(declare-const score26 Int)
(declare-const result83 int__ref)
(declare-const i14 Int)
(declare-const result84 us_split_fields__ref)
(declare-const p__split_fields35 us_split_fields)
(declare-const result85 int__ref)
(declare-const score27 Int)
(declare-const result86 int__ref)
(declare-const score28 Int)
(declare-const result87 int__ref)
(declare-const c41b23 Int)
(declare-const result88 bool__ref)
(declare-const found23 Bool)
(declare-const result89 us_split_fields__ref)
(declare-const p__split_fields36 us_split_fields)
(declare-const result90 int__ref)
(declare-const c41b24 Int)
(declare-const result91 bool__ref)
(declare-const found24 Bool)
(declare-const result92 us_split_fields__ref)
(declare-const p__split_fields37 us_split_fields)
(declare-const result93 int__ref)
(declare-const c41b25 Int)
(declare-const result94 bool__ref)
(declare-const found25 Bool)
(declare-const result95 us_split_fields__ref)
(declare-const p__split_fields38 us_split_fields)
(declare-const p__split_fields39 us_split_fields__ref)
(declare-const found26 bool__ref)
(declare-const c41b26 int__ref)
(declare-const p__split_fields40 us_split_fields)
(declare-const found27 Bool)
(declare-const c41b27 Int)
(declare-const p__split_fields41 us_split_fields__ref)
(declare-const found28 bool__ref)
(declare-const c41b28 int__ref)
(declare-const p__split_fields42 us_split_fields)
(declare-const found29 Bool)
(declare-const c41b29 Int)
(declare-const result96 int__ref)
(declare-const c38b5 Int)
(declare-const result97 int__ref)
(declare-const score29 Int)
(declare-const result98 int__ref)
(declare-const i15 Int)
(declare-const result99 us_split_fields__ref)
(declare-const p__split_fields43 us_split_fields)
(declare-const result100 int__ref)
(declare-const score30 Int)
(declare-const result101 int__ref)
(declare-const score31 Int)
(declare-const result102 int__ref)
(declare-const i16 Int)
(declare-const result103 us_split_fields__ref)
(declare-const p__split_fields44 us_split_fields)
(declare-const result104 int__ref)
(declare-const score32 Int)
(declare-const result105 int__ref)
(declare-const score33 Int)
(declare-const result106 int__ref)
(declare-const i17 Int)
(declare-const result107 us_split_fields__ref)
(declare-const p__split_fields45 us_split_fields)
(declare-const result108 int__ref)
(declare-const score34 Int)
(declare-const result109 int__ref)
(declare-const score35 Int)
(declare-const result110 int__ref)
(declare-const c41b30 Int)
(declare-const result111 bool__ref)
(declare-const found30 Bool)
(declare-const result112 us_split_fields__ref)
(declare-const p__split_fields46 us_split_fields)
(declare-const result113 int__ref)
(declare-const c41b31 Int)
(declare-const result114 bool__ref)
(declare-const found31 Bool)
(declare-const result115 us_split_fields__ref)
(declare-const p__split_fields47 us_split_fields)
(declare-const result116 int__ref)
(declare-const c41b32 Int)
(declare-const result117 bool__ref)
(declare-const found32 Bool)
(declare-const result118 us_split_fields__ref)
(declare-const p__split_fields48 us_split_fields)
(declare-const p__split_fields49 us_split_fields__ref)
(declare-const found33 bool__ref)
(declare-const c41b33 int__ref)
(declare-const p__split_fields50 us_split_fields)
(declare-const found34 Bool)
(declare-const c41b34 Int)
(declare-const p__split_fields51 us_split_fields__ref)
(declare-const found35 bool__ref)
(declare-const c41b35 int__ref)
(declare-const p__split_fields52 us_split_fields)
(declare-const found36 Bool)
(declare-const c41b36 Int)
(declare-const result119 int__ref)
(declare-const c38b6 Int)
(declare-const result120 int__ref)
(declare-const score36 Int)
(declare-const result121 int__ref)
(declare-const i18 Int)
(declare-const result122 us_split_fields__ref)
(declare-const p__split_fields53 us_split_fields)
(declare-const result123 int__ref)
(declare-const score37 Int)
(declare-const result124 int__ref)
(declare-const score38 Int)
(declare-const result125 int__ref)
(declare-const i19 Int)
(declare-const result126 us_split_fields__ref)
(declare-const p__split_fields54 us_split_fields)
(declare-const result127 int__ref)
(declare-const score39 Int)
(declare-const result128 int__ref)
(declare-const score40 Int)
(declare-const result129 int__ref)
(declare-const i20 Int)
(declare-const result130 us_split_fields__ref)
(declare-const p__split_fields55 us_split_fields)
(declare-const result131 int__ref)
(declare-const score41 Int)
(declare-const result132 int__ref)
(declare-const score42 Int)
(declare-const result133 int__ref)
(declare-const c41b37 Int)
(declare-const result134 bool__ref)
(declare-const found37 Bool)
(declare-const result135 us_split_fields__ref)
(declare-const p__split_fields56 us_split_fields)
(declare-const result136 int__ref)
(declare-const c41b38 Int)
(declare-const result137 bool__ref)
(declare-const found38 Bool)
(declare-const result138 us_split_fields__ref)
(declare-const p__split_fields57 us_split_fields)
(declare-const result139 int__ref)
(declare-const c41b39 Int)
(declare-const result140 bool__ref)
(declare-const found39 Bool)
(declare-const result141 us_split_fields__ref)
(declare-const p__split_fields58 us_split_fields)
(declare-const p__split_fields59 us_split_fields__ref)
(declare-const found40 bool__ref)
(declare-const c41b40 int__ref)
(declare-const p__split_fields60 us_split_fields)
(declare-const found41 Bool)
(declare-const c41b41 Int)
(declare-const p__split_fields61 us_split_fields__ref)
(declare-const found42 bool__ref)
(declare-const c41b42 int__ref)
(declare-const p__split_fields62 us_split_fields)
(declare-const found43 Bool)
(declare-const c41b43 Int)
(declare-const result142 int__ref)
(declare-const c38b7 Int)
(declare-const result143 int__ref)
(declare-const score43 Int)
(declare-const result144 int__ref)
(declare-const i21 Int)
(declare-const result145 us_split_fields__ref)
(declare-const p__split_fields63 us_split_fields)
(declare-const result146 int__ref)
(declare-const score44 Int)
(declare-const result147 int__ref)
(declare-const score45 Int)
(declare-const result148 int__ref)
(declare-const i22 Int)
(declare-const result149 us_split_fields__ref)
(declare-const p__split_fields64 us_split_fields)
(declare-const result150 int__ref)
(declare-const score46 Int)
(declare-const result151 int__ref)
(declare-const score47 Int)
(declare-const result152 int__ref)
(declare-const i23 Int)
(declare-const result153 us_split_fields__ref)
(declare-const p__split_fields65 us_split_fields)
(declare-const result154 int__ref)
(declare-const score48 Int)
(declare-const result155 int__ref)
(declare-const score49 Int)
(declare-const result156 int__ref)
(declare-const c41b44 Int)
(declare-const result157 bool__ref)
(declare-const found44 Bool)
(declare-const result158 us_split_fields__ref)
(declare-const p__split_fields66 us_split_fields)
(declare-const result159 int__ref)
(declare-const c41b45 Int)
(declare-const result160 bool__ref)
(declare-const found45 Bool)
(declare-const result161 us_split_fields__ref)
(declare-const p__split_fields67 us_split_fields)
(declare-const result162 int__ref)
(declare-const c41b46 Int)
(declare-const result163 bool__ref)
(declare-const found46 Bool)
(declare-const result164 us_split_fields__ref)
(declare-const p__split_fields68 us_split_fields)
(declare-const p__split_fields69 us_split_fields__ref)
(declare-const found47 bool__ref)
(declare-const c41b47 int__ref)
(declare-const p__split_fields70 us_split_fields)
(declare-const found48 Bool)
(declare-const c41b48 Int)
(declare-const p__split_fields71 us_split_fields__ref)
(declare-const found49 bool__ref)
(declare-const c41b49 int__ref)
(declare-const p__split_fields72 us_split_fields)
(declare-const found50 Bool)
(declare-const c41b50 Int)
(declare-const result165 int__ref)
(declare-const c38b8 Int)
(declare-const result166 int__ref)
(declare-const score50 Int)
(declare-const result167 int__ref)
(declare-const i24 Int)
(declare-const result168 us_split_fields__ref)
(declare-const p__split_fields73 us_split_fields)
(declare-const result169 int__ref)
(declare-const score51 Int)
(declare-const result170 int__ref)
(declare-const score52 Int)
(declare-const result171 int__ref)
(declare-const i25 Int)
(declare-const result172 us_split_fields__ref)
(declare-const p__split_fields74 us_split_fields)
(declare-const result173 int__ref)
(declare-const score53 Int)
(declare-const result174 int__ref)
(declare-const score54 Int)
(declare-const result175 int__ref)
(declare-const i26 Int)
(declare-const result176 us_split_fields__ref)
(declare-const p__split_fields75 us_split_fields)
(declare-const result177 int__ref)
(declare-const score55 Int)
(declare-const result178 int__ref)
(declare-const score56 Int)
(declare-const result179 int__ref)
(declare-const c41b51 Int)
(declare-const result180 bool__ref)
(declare-const found51 Bool)
(declare-const result181 us_split_fields__ref)
(declare-const p__split_fields76 us_split_fields)
(declare-const result182 int__ref)
(declare-const c41b52 Int)
(declare-const result183 bool__ref)
(declare-const found52 Bool)
(declare-const result184 us_split_fields__ref)
(declare-const p__split_fields77 us_split_fields)
(declare-const result185 int__ref)
(declare-const c41b53 Int)
(declare-const result186 bool__ref)
(declare-const found53 Bool)
(declare-const result187 us_split_fields__ref)
(declare-const p__split_fields78 us_split_fields)
(declare-const p__split_fields79 us_split_fields__ref)
(declare-const found54 bool__ref)
(declare-const c41b54 int__ref)
(declare-const p__split_fields80 us_split_fields)
(declare-const found55 Bool)
(declare-const c41b55 Int)
(declare-const p__split_fields81 us_split_fields__ref)
(declare-const found56 bool__ref)
(declare-const c41b56 int__ref)
(declare-const p__split_fields82 us_split_fields)
(declare-const found57 Bool)
(declare-const c41b57 Int)
(declare-const score57 int__ref)
(declare-const p__split_fields83 us_split_fields__ref)
(declare-const found58 bool__ref)
(declare-const c38b9 int__ref)
(declare-const i27 int__ref)
(declare-const c41b58 int__ref)
(declare-const score58 Int)
(declare-const p__split_fields84 us_split_fields)
(declare-const found59 Bool)
(declare-const c38b10 Int)
(declare-const i28 Int)
(declare-const c41b59 Int)
(declare-const score59 int__ref)
(declare-const p__split_fields85 us_split_fields__ref)
(declare-const found60 bool__ref)
(declare-const c38b11 int__ref)
(declare-const i29 int__ref)
(declare-const c41b60 int__ref)
(declare-const score60 Int)
(declare-const p__split_fields86 us_split_fields)
(declare-const found61 Bool)
(declare-const c38b12 Int)
(declare-const i30 Int)
(declare-const c41b61 Int)
(declare-const score61 int__ref)
(declare-const p__split_fields87 us_split_fields__ref)
(declare-const found62 bool__ref)
(declare-const c38b13 int__ref)
(declare-const i31 int__ref)
(declare-const c41b62 int__ref)
(declare-const score62 Int)
(declare-const p__split_fields88 us_split_fields)
(declare-const found63 Bool)
(declare-const c38b14 Int)
(declare-const i32 Int)
(declare-const c41b63 Int)
(declare-const score63 int__ref)
(declare-const p__split_fields89 us_split_fields__ref)
(declare-const found64 bool__ref)
(declare-const c38b15 int__ref)
(declare-const i33 int__ref)
(declare-const c41b64 int__ref)
(declare-const score64 Int)
(declare-const p__split_fields90 us_split_fields)
(declare-const found65 Bool)
(declare-const c38b16 Int)
(declare-const i34 Int)
(declare-const c41b65 Int)
(declare-const score65 int__ref)
(declare-const p__split_fields91 us_split_fields__ref)
(declare-const found66 bool__ref)
(declare-const c38b17 int__ref)
(declare-const i35 int__ref)
(declare-const c41b66 int__ref)
(declare-const score66 Int)
(declare-const p__split_fields92 us_split_fields)
(declare-const found67 Bool)
(declare-const c38b18 Int)
(declare-const i36 Int)
(declare-const c41b67 Int)
(declare-const score67 int__ref)
(declare-const p__split_fields93 us_split_fields__ref)
(declare-const found68 bool__ref)
(declare-const c38b19 int__ref)
(declare-const i37 int__ref)
(declare-const c41b68 int__ref)
(declare-const score68 Int)
(declare-const p__split_fields94 us_split_fields)
(declare-const found69 Bool)
(declare-const c38b20 Int)
(declare-const i38 Int)
(declare-const c41b69 Int)
(declare-const score69 int__ref)
(declare-const p__split_fields95 us_split_fields__ref)
(declare-const found70 bool__ref)
(declare-const c38b21 int__ref)
(declare-const i39 int__ref)
(declare-const c41b70 int__ref)
(declare-const score70 Int)
(declare-const p__split_fields96 us_split_fields)
(declare-const found71 Bool)
(declare-const c38b22 Int)
(declare-const i40 Int)
(declare-const c41b71 Int)
(declare-const result188 int__ref)
(declare-const target_score2 Int)
(declare-const result189 int__ref)
(declare-const c38b23 Int)
(declare-const result190 int__ref)
(declare-const score71 Int)
(declare-const result191 int__ref)
(declare-const i41 Int)
(declare-const result192 us_split_fields__ref)
(declare-const p__split_fields97 us_split_fields)
(declare-const result193 int__ref)
(declare-const score72 Int)
(declare-const result194 int__ref)
(declare-const score73 Int)
(declare-const result195 int__ref)
(declare-const i42 Int)
(declare-const result196 us_split_fields__ref)
(declare-const p__split_fields98 us_split_fields)
(declare-const result197 int__ref)
(declare-const score74 Int)
(declare-const result198 int__ref)
(declare-const score75 Int)
(declare-const result199 int__ref)
(declare-const i43 Int)
(declare-const result200 us_split_fields__ref)
(declare-const p__split_fields99 us_split_fields)
(declare-const result201 int__ref)
(declare-const score76 Int)
(declare-const result202 int__ref)
(declare-const score77 Int)
(declare-const result203 int__ref)
(declare-const c41b72 Int)
(declare-const result204 bool__ref)
(declare-const found72 Bool)
(declare-const result205 us_split_fields__ref)
(declare-const p__split_fields100 us_split_fields)
(declare-const result206 int__ref)
(declare-const c41b73 Int)
(declare-const result207 bool__ref)
(declare-const found73 Bool)
(declare-const result208 us_split_fields__ref)
(declare-const p__split_fields101 us_split_fields)
(declare-const result209 int__ref)
(declare-const c41b74 Int)
(declare-const result210 bool__ref)
(declare-const found74 Bool)
(declare-const result211 us_split_fields__ref)
(declare-const p__split_fields102 us_split_fields)
(declare-const p__split_fields103 us_split_fields__ref)
(declare-const found75 bool__ref)
(declare-const c41b75 int__ref)
(declare-const p__split_fields104 us_split_fields)
(declare-const found76 Bool)
(declare-const c41b76 Int)
(declare-const p__split_fields105 us_split_fields__ref)
(declare-const found77 bool__ref)
(declare-const c41b77 int__ref)
(declare-const p__split_fields106 us_split_fields)
(declare-const found78 Bool)
(declare-const c41b78 Int)
(declare-const result212 int__ref)
(declare-const c38b24 Int)
(declare-const result213 int__ref)
(declare-const score78 Int)
(declare-const result214 int__ref)
(declare-const i44 Int)
(declare-const result215 us_split_fields__ref)
(declare-const p__split_fields107 us_split_fields)
(declare-const result216 int__ref)
(declare-const score79 Int)
(declare-const result217 int__ref)
(declare-const score80 Int)
(declare-const result218 int__ref)
(declare-const i45 Int)
(declare-const result219 us_split_fields__ref)
(declare-const p__split_fields108 us_split_fields)
(declare-const result220 int__ref)
(declare-const score81 Int)
(declare-const result221 int__ref)
(declare-const score82 Int)
(declare-const result222 int__ref)
(declare-const i46 Int)
(declare-const result223 us_split_fields__ref)
(declare-const p__split_fields109 us_split_fields)
(declare-const result224 int__ref)
(declare-const score83 Int)
(declare-const result225 int__ref)
(declare-const score84 Int)
(declare-const result226 int__ref)
(declare-const c41b79 Int)
(declare-const result227 bool__ref)
(declare-const found79 Bool)
(declare-const result228 us_split_fields__ref)
(declare-const p__split_fields110 us_split_fields)
(declare-const result229 int__ref)
(declare-const c41b80 Int)
(declare-const result230 bool__ref)
(declare-const found80 Bool)
(declare-const result231 us_split_fields__ref)
(declare-const p__split_fields111 us_split_fields)
(declare-const result232 int__ref)
(declare-const c41b81 Int)
(declare-const result233 bool__ref)
(declare-const found81 Bool)
(declare-const result234 us_split_fields__ref)
(declare-const p__split_fields112 us_split_fields)
(declare-const p__split_fields113 us_split_fields__ref)
(declare-const found82 bool__ref)
(declare-const c41b82 int__ref)
(declare-const p__split_fields114 us_split_fields)
(declare-const found83 Bool)
(declare-const c41b83 Int)
(declare-const p__split_fields115 us_split_fields__ref)
(declare-const found84 bool__ref)
(declare-const c41b84 int__ref)
(declare-const p__split_fields116 us_split_fields)
(declare-const found85 Bool)
(declare-const c41b85 Int)
(declare-const result235 int__ref)
(declare-const c38b25 Int)
(declare-const result236 int__ref)
(declare-const score85 Int)
(declare-const result237 int__ref)
(declare-const i47 Int)
(declare-const result238 us_split_fields__ref)
(declare-const p__split_fields117 us_split_fields)
(declare-const result239 int__ref)
(declare-const score86 Int)
(declare-const result240 int__ref)
(declare-const score87 Int)
(declare-const result241 int__ref)
(declare-const i48 Int)
(declare-const result242 us_split_fields__ref)
(declare-const p__split_fields118 us_split_fields)
(declare-const result243 int__ref)
(declare-const score88 Int)
(declare-const result244 int__ref)
(declare-const score89 Int)
(declare-const result245 int__ref)
(declare-const i49 Int)
(declare-const result246 us_split_fields__ref)
(declare-const p__split_fields119 us_split_fields)
(declare-const result247 int__ref)
(declare-const score90 Int)
(declare-const result248 int__ref)
(declare-const score91 Int)
(declare-const result249 int__ref)
(declare-const c41b86 Int)
(declare-const result250 bool__ref)
(declare-const found86 Bool)
(declare-const result251 us_split_fields__ref)
(declare-const p__split_fields120 us_split_fields)
(declare-const result252 int__ref)
(declare-const c41b87 Int)
(declare-const result253 bool__ref)
(declare-const found87 Bool)
(declare-const result254 us_split_fields__ref)
(declare-const p__split_fields121 us_split_fields)
(declare-const result255 int__ref)
(declare-const c41b88 Int)
(declare-const result256 bool__ref)
(declare-const found88 Bool)
(declare-const result257 us_split_fields__ref)
(declare-const p__split_fields122 us_split_fields)
(declare-const p__split_fields123 us_split_fields__ref)
(declare-const found89 bool__ref)
(declare-const c41b89 int__ref)
(declare-const p__split_fields124 us_split_fields)
(declare-const found90 Bool)
(declare-const c41b90 Int)
(declare-const p__split_fields125 us_split_fields__ref)
(declare-const found91 bool__ref)
(declare-const c41b91 int__ref)
(declare-const p__split_fields126 us_split_fields)
(declare-const found92 Bool)
(declare-const c41b92 Int)
(declare-const result258 int__ref)
(declare-const c38b26 Int)
(declare-const result259 int__ref)
(declare-const score92 Int)
(declare-const result260 int__ref)
(declare-const i50 Int)
(declare-const result261 us_split_fields__ref)
(declare-const p__split_fields127 us_split_fields)
(declare-const result262 int__ref)
(declare-const score93 Int)
(declare-const result263 int__ref)
(declare-const score94 Int)
(declare-const result264 int__ref)
(declare-const i51 Int)
(declare-const result265 us_split_fields__ref)
(declare-const p__split_fields128 us_split_fields)
(declare-const result266 int__ref)
(declare-const score95 Int)
(declare-const result267 int__ref)
(declare-const score96 Int)
(declare-const result268 int__ref)
(declare-const i52 Int)
(declare-const result269 us_split_fields__ref)
(declare-const p__split_fields129 us_split_fields)
(declare-const result270 int__ref)
(declare-const score97 Int)
(declare-const result271 int__ref)
(declare-const score98 Int)
(declare-const result272 int__ref)
(declare-const c41b93 Int)
(declare-const result273 bool__ref)
(declare-const found93 Bool)
(declare-const result274 us_split_fields__ref)
(declare-const p__split_fields130 us_split_fields)
(declare-const result275 int__ref)
(declare-const c41b94 Int)
(declare-const result276 bool__ref)
(declare-const found94 Bool)
(declare-const result277 us_split_fields__ref)
(declare-const p__split_fields131 us_split_fields)
(declare-const result278 int__ref)
(declare-const c41b95 Int)
(declare-const result279 bool__ref)
(declare-const found95 Bool)
(declare-const result280 us_split_fields__ref)
(declare-const p__split_fields132 us_split_fields)
(declare-const p__split_fields133 us_split_fields__ref)
(declare-const found96 bool__ref)
(declare-const c41b96 int__ref)
(declare-const p__split_fields134 us_split_fields)
(declare-const found97 Bool)
(declare-const c41b97 Int)
(declare-const p__split_fields135 us_split_fields__ref)
(declare-const found98 bool__ref)
(declare-const c41b98 int__ref)
(declare-const p__split_fields136 us_split_fields)
(declare-const found99 Bool)
(declare-const c41b99 Int)
(declare-const result281 int__ref)
(declare-const c38b27 Int)
(declare-const result282 int__ref)
(declare-const score99 Int)
(declare-const result283 int__ref)
(declare-const i53 Int)
(declare-const result284 us_split_fields__ref)
(declare-const p__split_fields137 us_split_fields)
(declare-const result285 int__ref)
(declare-const score100 Int)
(declare-const result286 int__ref)
(declare-const score101 Int)
(declare-const result287 int__ref)
(declare-const i54 Int)
(declare-const result288 us_split_fields__ref)
(declare-const p__split_fields138 us_split_fields)
(declare-const result289 int__ref)
(declare-const score102 Int)
(declare-const result290 int__ref)
(declare-const score103 Int)
(declare-const result291 int__ref)
(declare-const i55 Int)
(declare-const result292 us_split_fields__ref)
(declare-const p__split_fields139 us_split_fields)
(declare-const result293 int__ref)
(declare-const score104 Int)
(declare-const result294 int__ref)
(declare-const score105 Int)
(declare-const result295 int__ref)
(declare-const c41b100 Int)
(declare-const result296 bool__ref)
(declare-const found100 Bool)
(declare-const result297 us_split_fields__ref)
(declare-const p__split_fields140 us_split_fields)
(declare-const result298 int__ref)
(declare-const c41b101 Int)
(declare-const result299 bool__ref)
(declare-const found101 Bool)
(declare-const result300 us_split_fields__ref)
(declare-const p__split_fields141 us_split_fields)
(declare-const result301 int__ref)
(declare-const c41b102 Int)
(declare-const result302 bool__ref)
(declare-const found102 Bool)
(declare-const result303 us_split_fields__ref)
(declare-const p__split_fields142 us_split_fields)
(declare-const p__split_fields143 us_split_fields__ref)
(declare-const found103 bool__ref)
(declare-const c41b103 int__ref)
(declare-const p__split_fields144 us_split_fields)
(declare-const found104 Bool)
(declare-const c41b104 Int)
(declare-const p__split_fields145 us_split_fields__ref)
(declare-const found105 bool__ref)
(declare-const c41b105 int__ref)
(declare-const p__split_fields146 us_split_fields)
(declare-const found106 Bool)
(declare-const c41b106 Int)
(declare-const result304 int__ref)
(declare-const c38b28 Int)
(declare-const result305 int__ref)
(declare-const score106 Int)
(declare-const result306 int__ref)
(declare-const i56 Int)
(declare-const result307 us_split_fields__ref)
(declare-const p__split_fields147 us_split_fields)
(declare-const result308 int__ref)
(declare-const score107 Int)
(declare-const result309 int__ref)
(declare-const score108 Int)
(declare-const result310 int__ref)
(declare-const i57 Int)
(declare-const result311 us_split_fields__ref)
(declare-const p__split_fields148 us_split_fields)
(declare-const result312 int__ref)
(declare-const score109 Int)
(declare-const result313 int__ref)
(declare-const score110 Int)
(declare-const result314 int__ref)
(declare-const i58 Int)
(declare-const result315 us_split_fields__ref)
(declare-const p__split_fields149 us_split_fields)
(declare-const result316 int__ref)
(declare-const score111 Int)
(declare-const result317 int__ref)
(declare-const score112 Int)
(declare-const result318 int__ref)
(declare-const c41b107 Int)
(declare-const result319 bool__ref)
(declare-const found107 Bool)
(declare-const result320 us_split_fields__ref)
(declare-const p__split_fields150 us_split_fields)
(declare-const result321 int__ref)
(declare-const c41b108 Int)
(declare-const result322 bool__ref)
(declare-const found108 Bool)
(declare-const result323 us_split_fields__ref)
(declare-const p__split_fields151 us_split_fields)
(declare-const result324 int__ref)
(declare-const c41b109 Int)
(declare-const result325 bool__ref)
(declare-const found109 Bool)
(declare-const result326 us_split_fields__ref)
(declare-const p__split_fields152 us_split_fields)
(declare-const p__split_fields153 us_split_fields__ref)
(declare-const found110 bool__ref)
(declare-const c41b110 int__ref)
(declare-const p__split_fields154 us_split_fields)
(declare-const found111 Bool)
(declare-const c41b111 Int)
(declare-const p__split_fields155 us_split_fields__ref)
(declare-const found112 bool__ref)
(declare-const c41b112 int__ref)
(declare-const p__split_fields156 us_split_fields)
(declare-const found113 Bool)
(declare-const c41b113 Int)
(declare-const result327 int__ref)
(declare-const c38b29 Int)
(declare-const result328 int__ref)
(declare-const score113 Int)
(declare-const result329 int__ref)
(declare-const i59 Int)
(declare-const result330 us_split_fields__ref)
(declare-const p__split_fields157 us_split_fields)
(declare-const result331 int__ref)
(declare-const score114 Int)
(declare-const result332 int__ref)
(declare-const score115 Int)
(declare-const result333 int__ref)
(declare-const i60 Int)
(declare-const result334 us_split_fields__ref)
(declare-const p__split_fields158 us_split_fields)
(declare-const result335 int__ref)
(declare-const score116 Int)
(declare-const result336 int__ref)
(declare-const score117 Int)
(declare-const result337 int__ref)
(declare-const i61 Int)
(declare-const result338 us_split_fields__ref)
(declare-const p__split_fields159 us_split_fields)
(declare-const result339 int__ref)
(declare-const score118 Int)
(declare-const result340 int__ref)
(declare-const score119 Int)
(declare-const result341 int__ref)
(declare-const c41b114 Int)
(declare-const result342 bool__ref)
(declare-const found114 Bool)
(declare-const result343 us_split_fields__ref)
(declare-const p__split_fields160 us_split_fields)
(declare-const result344 int__ref)
(declare-const c41b115 Int)
(declare-const result345 bool__ref)
(declare-const found115 Bool)
(declare-const result346 us_split_fields__ref)
(declare-const p__split_fields161 us_split_fields)
(declare-const result347 int__ref)
(declare-const c41b116 Int)
(declare-const result348 bool__ref)
(declare-const found116 Bool)
(declare-const result349 us_split_fields__ref)
(declare-const p__split_fields162 us_split_fields)
(declare-const p__split_fields163 us_split_fields__ref)
(declare-const found117 bool__ref)
(declare-const c41b117 int__ref)
(declare-const p__split_fields164 us_split_fields)
(declare-const found118 Bool)
(declare-const c41b118 Int)
(declare-const p__split_fields165 us_split_fields__ref)
(declare-const found119 bool__ref)
(declare-const c41b119 int__ref)
(declare-const p__split_fields166 us_split_fields)
(declare-const found120 Bool)
(declare-const c41b120 Int)
(declare-const result350 int__ref)
(declare-const c38b30 Int)
(declare-const result351 int__ref)
(declare-const score120 Int)
(declare-const result352 int__ref)
(declare-const i62 Int)
(declare-const result353 us_split_fields__ref)
(declare-const p__split_fields167 us_split_fields)
(declare-const result354 int__ref)
(declare-const score121 Int)
(declare-const result355 int__ref)
(declare-const score122 Int)
(declare-const result356 int__ref)
(declare-const i63 Int)
(declare-const result357 us_split_fields__ref)
(declare-const p__split_fields168 us_split_fields)
(declare-const result358 int__ref)
(declare-const score123 Int)
(declare-const result359 int__ref)
(declare-const score124 Int)
(declare-const result360 int__ref)
(declare-const i64 Int)
(declare-const result361 us_split_fields__ref)
(declare-const p__split_fields169 us_split_fields)
(declare-const result362 int__ref)
(declare-const score125 Int)
(declare-const result363 int__ref)
(declare-const score126 Int)
(declare-const result364 int__ref)
(declare-const c41b121 Int)
(declare-const result365 bool__ref)
(declare-const found121 Bool)
(declare-const result366 us_split_fields__ref)
(declare-const p__split_fields170 us_split_fields)
(declare-const result367 int__ref)
(declare-const c41b122 Int)
(declare-const result368 bool__ref)
(declare-const found122 Bool)
(declare-const result369 us_split_fields__ref)
(declare-const p__split_fields171 us_split_fields)
(declare-const result370 int__ref)
(declare-const c41b123 Int)
(declare-const result371 bool__ref)
(declare-const found123 Bool)
(declare-const result372 us_split_fields__ref)
(declare-const p__split_fields172 us_split_fields)
(declare-const p__split_fields173 us_split_fields__ref)
(declare-const found124 bool__ref)
(declare-const c41b124 int__ref)
(declare-const p__split_fields174 us_split_fields)
(declare-const found125 Bool)
(declare-const c41b125 Int)
(declare-const p__split_fields175 us_split_fields__ref)
(declare-const found126 bool__ref)
(declare-const c41b126 int__ref)
(declare-const p__split_fields176 us_split_fields)
(declare-const found127 Bool)
(declare-const c41b127 Int)
(declare-const score127 int__ref)
(declare-const p__split_fields177 us_split_fields__ref)
(declare-const found128 bool__ref)
(declare-const c38b31 int__ref)
(declare-const i65 int__ref)
(declare-const c41b128 int__ref)
(declare-const score128 Int)
(declare-const p__split_fields178 us_split_fields)
(declare-const found129 Bool)
(declare-const c38b32 Int)
(declare-const i66 Int)
(declare-const c41b129 Int)
(declare-const score129 int__ref)
(declare-const p__split_fields179 us_split_fields__ref)
(declare-const found130 bool__ref)
(declare-const c38b33 int__ref)
(declare-const i67 int__ref)
(declare-const c41b130 int__ref)
(declare-const score130 Int)
(declare-const p__split_fields180 us_split_fields)
(declare-const found131 Bool)
(declare-const c38b34 Int)
(declare-const i68 Int)
(declare-const c41b131 Int)
(declare-const score131 int__ref)
(declare-const p__split_fields181 us_split_fields__ref)
(declare-const found132 bool__ref)
(declare-const c38b35 int__ref)
(declare-const i69 int__ref)
(declare-const c41b132 int__ref)
(declare-const score132 Int)
(declare-const p__split_fields182 us_split_fields)
(declare-const found133 Bool)
(declare-const c38b36 Int)
(declare-const i70 Int)
(declare-const c41b133 Int)
(declare-const score133 int__ref)
(declare-const p__split_fields183 us_split_fields__ref)
(declare-const found134 bool__ref)
(declare-const c38b37 int__ref)
(declare-const i71 int__ref)
(declare-const c41b134 int__ref)
(declare-const score134 Int)
(declare-const p__split_fields184 us_split_fields)
(declare-const found135 Bool)
(declare-const c38b38 Int)
(declare-const i72 Int)
(declare-const c41b135 Int)
(declare-const score135 int__ref)
(declare-const p__split_fields185 us_split_fields__ref)
(declare-const found136 bool__ref)
(declare-const c38b39 int__ref)
(declare-const i73 int__ref)
(declare-const c41b136 int__ref)
(declare-const score136 Int)
(declare-const p__split_fields186 us_split_fields)
(declare-const found137 Bool)
(declare-const c38b40 Int)
(declare-const i74 Int)
(declare-const c41b137 Int)
(declare-const score137 int__ref)
(declare-const p__split_fields187 us_split_fields__ref)
(declare-const found138 bool__ref)
(declare-const c38b41 int__ref)
(declare-const i75 int__ref)
(declare-const c41b138 int__ref)
(declare-const score138 Int)
(declare-const p__split_fields188 us_split_fields)
(declare-const found139 Bool)
(declare-const c38b42 Int)
(declare-const i76 Int)
(declare-const c41b139 Int)
(declare-const score139 int__ref)
(declare-const p__split_fields189 us_split_fields__ref)
(declare-const found140 bool__ref)
(declare-const c38b43 int__ref)
(declare-const i77 int__ref)
(declare-const c41b140 int__ref)
(declare-const score140 Int)
(declare-const p__split_fields190 us_split_fields)
(declare-const found141 Bool)
(declare-const c38b44 Int)
(declare-const i78 Int)
(declare-const c41b141 Int)
(declare-const score141 int__ref)
(declare-const p__split_fields191 us_split_fields__ref)
(declare-const found142 bool__ref)
(declare-const target_score3 int__ref)
(declare-const c38b45 int__ref)
(declare-const i79 int__ref)
(declare-const c41b142 int__ref)
(declare-const score142 Int)
(declare-const p__split_fields192 us_split_fields)
(declare-const found143 Bool)
(declare-const target_score4 Int)
(declare-const c38b46 Int)
(declare-const i80 Int)
(declare-const c41b143 Int)
(declare-const score143 int__ref)
(declare-const p__split_fields193 us_split_fields__ref)
(declare-const found144 bool__ref)
(declare-const target_score5 int__ref)
(declare-const c38b47 int__ref)
(declare-const i81 int__ref)
(declare-const c41b144 int__ref)
(declare-const score144 Int)
(declare-const p__split_fields194 us_split_fields)
(declare-const found145 Bool)
(declare-const target_score6 Int)
(declare-const c38b48 Int)
(declare-const i82 Int)
(declare-const c41b145 Int)
(declare-const my_board2 (Array Int (Array Int slot)))
(declare-const my_board3 map__ref1)
(declare-const my_board4 (Array Int (Array Int slot)))
(declare-const result373 int__ref)
(declare-const i83 Int)
(declare-const result374 int__ref)
(declare-const j2 Int)
(declare-const my_board5 (Array Int (Array Int slot)))
(declare-const my_board6 map__ref1)
(declare-const my_board7 (Array Int (Array Int slot)))
(declare-const result375 int__ref)
(declare-const j3 Int)
(declare-const my_board8 (Array Int (Array Int slot)))
(declare-const my_board9 map__ref1)
(declare-const my_board10 (Array Int (Array Int slot)))
(declare-const result376 int__ref)
(declare-const j4 Int)
(declare-const my_board11 (Array Int (Array Int slot)))
(declare-const my_board12 map__ref1)
(declare-const my_board13 (Array Int (Array Int slot)))
(declare-const my_board14 map__ref1)
(declare-const j5 int__ref)
(declare-const my_board15 (Array Int (Array Int slot)))
(declare-const j6 Int)
(declare-const my_board16 map__ref1)
(declare-const j7 int__ref)
(declare-const my_board17 (Array Int (Array Int slot)))
(declare-const j8 Int)
(declare-const result377 int__ref)
(declare-const i84 Int)
(declare-const result378 int__ref)
(declare-const j9 Int)
(declare-const my_board18 (Array Int (Array Int slot)))
(declare-const my_board19 map__ref1)
(declare-const my_board20 (Array Int (Array Int slot)))
(declare-const result379 int__ref)
(declare-const j10 Int)
(declare-const my_board21 (Array Int (Array Int slot)))
(declare-const my_board22 map__ref1)
(declare-const my_board23 (Array Int (Array Int slot)))
(declare-const result380 int__ref)
(declare-const j11 Int)
(declare-const my_board24 (Array Int (Array Int slot)))
(declare-const my_board25 map__ref1)
(declare-const my_board26 (Array Int (Array Int slot)))
(declare-const my_board27 map__ref1)
(declare-const j12 int__ref)
(declare-const my_board28 (Array Int (Array Int slot)))
(declare-const j13 Int)
(declare-const my_board29 map__ref1)
(declare-const j14 int__ref)
(declare-const my_board30 (Array Int (Array Int slot)))
(declare-const j15 Int)
(declare-const result381 int__ref)
(declare-const i85 Int)
(declare-const result382 int__ref)
(declare-const j16 Int)
(declare-const my_board31 (Array Int (Array Int slot)))
(declare-const my_board32 map__ref1)
(declare-const my_board33 (Array Int (Array Int slot)))
(declare-const result383 int__ref)
(declare-const j17 Int)
(declare-const my_board34 (Array Int (Array Int slot)))
(declare-const my_board35 map__ref1)
(declare-const my_board36 (Array Int (Array Int slot)))
(declare-const result384 int__ref)
(declare-const j18 Int)
(declare-const my_board37 (Array Int (Array Int slot)))
(declare-const my_board38 map__ref1)
(declare-const my_board39 (Array Int (Array Int slot)))
(declare-const my_board40 map__ref1)
(declare-const j19 int__ref)
(declare-const my_board41 (Array Int (Array Int slot)))
(declare-const j20 Int)
(declare-const my_board42 map__ref1)
(declare-const j21 int__ref)
(declare-const my_board43 (Array Int (Array Int slot)))
(declare-const j22 Int)
(declare-const my_board44 map__ref1)
(declare-const i86 int__ref)
(declare-const j23 int__ref)
(declare-const my_board45 (Array Int (Array Int slot)))
(declare-const i87 Int)
(declare-const j24 Int)
(declare-const my_board46 map__ref1)
(declare-const i88 int__ref)
(declare-const j25 int__ref)
(declare-const my_board47 (Array Int (Array Int slot)))
(declare-const i89 Int)
(declare-const j26 Int)
(declare-const my_board48 map__ref1)
(declare-const i90 int__ref)
(declare-const j27 int__ref)
(declare-const my_board49 (Array Int (Array Int slot)))
(declare-const i91 Int)
(declare-const j28 Int)
(declare-const my_board50 map__ref1)
(declare-const i92 int__ref)
(declare-const j29 int__ref)
(declare-const my_board51 (Array Int (Array Int slot)))
(declare-const i93 Int)
(declare-const j30 Int)
(declare-const my_board52 map__ref1)
(declare-const score145 int__ref)
(declare-const target_scores2 map__ref4)
(declare-const p__split_fields195 us_split_fields__ref)
(declare-const found146 bool__ref)
(declare-const target_score7 int__ref)
(declare-const c38b49 int__ref)
(declare-const i94 int__ref)
(declare-const c41b146 int__ref)
(declare-const i95 int__ref)
(declare-const j31 int__ref)
(declare-const my_board53 (Array Int (Array Int slot)))
(declare-const score146 Int)
(declare-const target_scores3 (Array Int integer))
(declare-const p__split_fields196 us_split_fields)
(declare-const found147 Bool)
(declare-const target_score8 Int)
(declare-const c38b50 Int)
(declare-const i96 Int)
(declare-const c41b147 Int)
(declare-const i97 Int)
(declare-const j32 Int)
(assert (and (not (= (is_full my_board) true)) (= (won my_board all_solutions) 0)))
(assert (=> (<= (- 2147483648) 2147483647) (in_range1 score)))
(assert (= result (mk_map__ref4 target_scores)))
(assert (= target_scores1 (tictactoe__computer_play__target_scores__aggregate_def 2 20)))
(assert (= (to_rep2 o) 1))
(assert (= (to_rep2 o1) 1))
(assert (= o1 o2))
(assert (= o o3))
(assert (= tictactoe__computer_play__p__assume o2))
(assert (= tictactoe__computer_play__p__assume1 o3))
(assert (= result1 (mk___split_fields__ref (mk___split_fields p__split_fields p__split_fields1))))
(assert (= p__split_fields2 (mk___split_fields tictactoe__computer_play__p__assume tictactoe__computer_play__p__assume1)))
(assert (= result2 (mk_bool__ref found)))
(assert (= found1 (of_int 0)))
(assert (= result3 (mk_int__ref target_score)))
(assert (= target_score1 1))
(assert (= result4 (mk_int__ref c38b)))
(assert (= c38b1 1))
(assert (= result5 (mk_int__ref score)))
(assert (= score1 0))
(assert (= result6 (mk_int__ref i)))
(assert (= i3 1))
(assert (= result7 (mk___split_fields__ref p__split_fields2)))
(assert (= p__split_fields3 (us_split_fields1 (select (select all_solutions c38b1) i3))))
(assert (= (to_rep1 (select (select my_board (to_rep2 (rec__tictactoe__position__x p__split_fields3))) (to_rep2 (rec__tictactoe__position__y p__split_fields3)))) 2))
(assert (not (in_range1 (+ score1 1))))
(check-sat)
(exit)
