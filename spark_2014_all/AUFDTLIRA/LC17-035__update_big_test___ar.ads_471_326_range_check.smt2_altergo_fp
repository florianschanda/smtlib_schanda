(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

type it1

predicate in_range(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq1 : int, int -> bool

axiom bool_eq_def :
  (forall x:int. forall y:int [bool_eq1(x, y)]. (((x = y) -> (bool_eq1(x,
  y) = true)) and ((not (x = y)) -> (bool_eq1(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> int

logic user_eq : it1, it1 -> bool

logic dummy : it1

type it1__ref = { it1__content : it1
}

function it1__ref___projection(a: it1__ref) : it1 = (a).it1__content

type it2

predicate in_range1(x: int) = ((5 <= x) and (x <= 50))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq1 : it2, it2 -> bool

logic dummy1 : it2

type it2__ref = { it2__content : it2
}

function it2__ref___projection(a: it2__ref) : it2 = (a).it2__content

type it3

predicate in_range2(x: int) = ((1 <= x) and (x <= 16))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq2 : it3, it3 -> bool

logic dummy2 : it3

type it3__ref = { it3__content : it3
}

function it3__ref___projection(a: it3__ref) : it3 = (a).it3__content

type et1

predicate in_range3(x: int) = ((0 <= x) and (x <= 99))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq3 : et1, et1 -> bool

logic dummy3 : et1

type et1__ref = { et1__content : et1
}

function et1__ref___projection(a: et1__ref) : et1 = (a).et1__content

logic to_rep : et1 -> int

logic of_rep : int -> et1

axiom inversion_axiom : (forall x:et1 [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:et1 [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,et1) farray
}

logic slide : (int,et1) farray, int, int -> (int,et1) farray

axiom slide_eq :
  (forall a:(int,et1) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,et1) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq5 : (int,et1) farray, int, int, (int,et1) farray, int,
  int -> bool

axiom bool_eq_def4 :
  (forall a:(int,et1) farray. forall a__first:int. forall a__last:int.
  forall b:(int,et1) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_154:int. ((((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) and
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))) or
  (not ((a__first <= temp___idx_154) and (temp___idx_154 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,et1) farray. forall b:(int,et1) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) ->
  (to_rep((a[temp___idx_154])) = to_rep((b[((b__first - a__first) + temp___idx_154)])))))))))

logic dummy4 : (int,et1) farray

logic value__size : int

logic object__size : (int,et1) farray -> int

logic value__component__size : int

logic object__component__size : (int,et1) farray -> int

logic value__alignment : int

logic object__alignment : (int,et1) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,et1) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,et1) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,et1) farray. (0 <= object__alignment(a)))

logic user_eq4 : (int,et1) farray, (int,et1) farray -> bool

type map__ref1 = { map__content1 : (int,(int,et1) farray) farray
}

logic slide1 : (int,(int,et1) farray) farray, int,
  int -> (int,(int,et1) farray) farray

axiom slide_eq1 :
  (forall a:(int,(int,et1) farray) farray.
  (forall first:int [slide1(a, first, first)]. (slide1(a, first, first) = a)))

axiom slide_def1 :
  (forall a:(int,(int,et1) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq6 : (int,(int,et1) farray) farray, int, int,
  (int,(int,et1) farray) farray, int, int -> bool

axiom bool_eq_def5 :
  (forall a:(int,(int,et1) farray) farray. forall a__first:int.
  forall a__last:int. forall b:(int,(int,et1) farray) farray.
  forall b__first:int. forall b__last:int [bool_eq6(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_155:int. ((((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) and (bool_eq5((a[temp___idx_155]), 1, 10,
  (b[((b__first - a__first) + temp___idx_155)]), 1, 10) = true)) or
  (not ((a__first <= temp___idx_155) and (temp___idx_155 <= a__last)))))) ->
  (bool_eq6(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq5((a[temp___idx_155]), 1, 10,
  (b[((b__first - a__first) + temp___idx_155)]), 1, 10) = true))))) ->
  (bool_eq6(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,(int,et1) farray) farray.
  forall b:(int,(int,et1) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq6(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq5((a[temp___idx_155]), 1, 10,
  (b[((b__first - a__first) + temp___idx_155)]), 1, 10) = true)))))))

logic dummy5 : (int,(int,et1) farray) farray

logic value__size1 : int

logic object__size1 : (int,(int,et1) farray) farray -> int

logic value__component__size1 : int

logic object__component__size1 : (int,(int,et1) farray) farray -> int

logic value__alignment1 : int

logic object__alignment1 : (int,(int,et1) farray) farray -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:(int,(int,et1) farray) farray. (0 <= object__size1(a)))

axiom value__component__size_axiom1 : (0 <= value__component__size1)

axiom object__component__size_axiom1 :
  (forall a:(int,(int,et1) farray) farray.
  (0 <= object__component__size1(a)))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:(int,(int,et1) farray) farray. (0 <= object__alignment1(a)))

logic user_eq5 : (int,(int,et1) farray) farray,
  (int,(int,et1) farray) farray -> bool

type map__ref2 = { map__content2 : (int,(int,(int,et1) farray) farray) farray
}

logic slide2 : (int,(int,(int,et1) farray) farray) farray, int,
  int -> (int,(int,(int,et1) farray) farray) farray

axiom slide_eq2 :
  (forall a:(int,(int,(int,et1) farray) farray) farray.
  (forall first:int [slide2(a, first, first)]. (slide2(a, first, first) = a)))

axiom slide_def2 :
  (forall a:(int,(int,(int,et1) farray) farray) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq7 : (int,(int,(int,et1) farray) farray) farray, int, int,
  (int,(int,(int,et1) farray) farray) farray, int, int -> bool

axiom bool_eq_def6 :
  (forall a:(int,(int,(int,et1) farray) farray) farray. forall a__first:int.
  forall a__last:int. forall b:(int,(int,(int,et1) farray) farray) farray.
  forall b__first:int. forall b__last:int [bool_eq7(a, a__first, a__last, b,
  b__first, b__last)]. ((((((a__first <= a__last) and
  ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_156:int. ((((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) and (bool_eq6((a[temp___idx_156]), 5, 50,
  (b[((b__first - a__first) + temp___idx_156)]), 5, 50) = true)) or
  (not ((a__first <= temp___idx_156) and (temp___idx_156 <= a__last)))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) -> (bool_eq6((a[temp___idx_156]), 5, 50,
  (b[((b__first - a__first) + temp___idx_156)]), 5, 50) = true))))) ->
  (bool_eq7(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev2 :
  (forall a:(int,(int,(int,et1) farray) farray) farray.
  forall b:(int,(int,(int,et1) farray) farray) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq7(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) -> (bool_eq6((a[temp___idx_156]), 5, 50,
  (b[((b__first - a__first) + temp___idx_156)]), 5, 50) = true)))))))

logic attr__ATTRIBUTE_ADDRESS : int

logic i : int

logic attr__ATTRIBUTE_ADDRESS1 : int

logic j : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic k : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic e : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic temp___1534 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___1542 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1549 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1557 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1564 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1573 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___1581 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1588 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1596 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1603 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1612 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___1620 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1627 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1635 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1642 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1651 : (int,(int,(int,et1) farray) farray) farray, int,
  (int,(int,et1) farray) farray, int,
  (int,(int,et1) farray) farray -> (int,(int,(int,et1) farray) farray) farray

logic temp___1659 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1666 : (int,et1) farray, int, int -> (int,et1) farray

logic temp___1674 : (int,(int,et1) farray) farray, int,
  (int,et1) farray -> (int,(int,et1) farray) farray

logic temp___1681 : (int,et1) farray, int, int -> (int,et1) farray

axiom def_axiom :
  (forall temp___1536:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___1537:int. forall temp___1539:int.
  (forall temp___1538:(int,(int,et1) farray) farray.
  forall temp___1540:(int,(int,et1) farray) farray.
  ((in_range2(temp___1537) and in_range2(temp___1539)) ->
  (forall temp___1541:int. (((temp___1541 = temp___1539) ->
  ((temp___1534(temp___1536, temp___1537, temp___1538, temp___1539,
  temp___1540)[temp___1541]) = temp___1540)) and
  ((not (temp___1541 = temp___1539)) -> (((temp___1541 = temp___1537) ->
  ((temp___1534(temp___1536, temp___1537, temp___1538, temp___1539,
  temp___1540)[temp___1541]) = temp___1538)) and
  ((not (temp___1541 = temp___1537)) -> ((temp___1534(temp___1536,
  temp___1537, temp___1538, temp___1539,
  temp___1540)[temp___1541]) = (temp___1536[temp___1541])))))))))))

axiom def_axiom1 :
  (forall temp___1544:(int,(int,et1) farray) farray.
  (forall temp___1545:int.
  (forall temp___1546:(int,et1) farray. (in_range1(temp___1545) ->
  (forall temp___1547:int. (((temp___1547 = temp___1545) ->
  ((temp___1542(temp___1544, temp___1545,
  temp___1546)[temp___1547]) = temp___1546)) and
  ((not (temp___1547 = temp___1545)) -> ((temp___1542(temp___1544,
  temp___1545, temp___1546)[temp___1547]) = (temp___1544[temp___1547])))))))))

axiom def_axiom2 :
  (forall temp___1551:(int,et1) farray.
  (forall temp___1552:int. forall temp___1553:int.
  ((in_range(temp___1552) and in_range3(temp___1553)) ->
  (forall temp___1554:int. (((temp___1554 = temp___1552) ->
  (to_rep((temp___1549(temp___1551, temp___1552,
  temp___1553)[temp___1554])) = temp___1553)) and
  ((not (temp___1554 = temp___1552)) -> ((temp___1549(temp___1551,
  temp___1552, temp___1553)[temp___1554]) = (temp___1551[temp___1554]))))))))

axiom def_axiom3 :
  (forall temp___1559:(int,(int,et1) farray) farray.
  (forall temp___1560:int.
  (forall temp___1561:(int,et1) farray. (in_range1(temp___1560) ->
  (forall temp___1562:int. (((temp___1562 = temp___1560) ->
  ((temp___1557(temp___1559, temp___1560,
  temp___1561)[temp___1562]) = temp___1561)) and
  ((not (temp___1562 = temp___1560)) -> ((temp___1557(temp___1559,
  temp___1560, temp___1561)[temp___1562]) = (temp___1559[temp___1562])))))))))

axiom def_axiom4 :
  (forall temp___1566:(int,et1) farray.
  (forall temp___1567:int. forall temp___1568:int.
  ((in_range(temp___1567) and in_range3(temp___1568)) ->
  (forall temp___1569:int. (((temp___1569 = temp___1567) ->
  (to_rep((temp___1564(temp___1566, temp___1567,
  temp___1568)[temp___1569])) = temp___1568)) and
  ((not (temp___1569 = temp___1567)) -> ((temp___1564(temp___1566,
  temp___1567, temp___1568)[temp___1569]) = (temp___1566[temp___1569]))))))))

axiom def_axiom5 :
  (forall temp___1575:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___1576:int. forall temp___1578:int.
  (forall temp___1577:(int,(int,et1) farray) farray.
  forall temp___1579:(int,(int,et1) farray) farray.
  ((in_range2(temp___1576) and in_range2(temp___1578)) ->
  (forall temp___1580:int. (((temp___1580 = temp___1578) ->
  ((temp___1573(temp___1575, temp___1576, temp___1577, temp___1578,
  temp___1579)[temp___1580]) = temp___1579)) and
  ((not (temp___1580 = temp___1578)) -> (((temp___1580 = temp___1576) ->
  ((temp___1573(temp___1575, temp___1576, temp___1577, temp___1578,
  temp___1579)[temp___1580]) = temp___1577)) and
  ((not (temp___1580 = temp___1576)) -> ((temp___1573(temp___1575,
  temp___1576, temp___1577, temp___1578,
  temp___1579)[temp___1580]) = (temp___1575[temp___1580])))))))))))

axiom def_axiom6 :
  (forall temp___1583:(int,(int,et1) farray) farray.
  (forall temp___1584:int.
  (forall temp___1585:(int,et1) farray. (in_range1(temp___1584) ->
  (forall temp___1586:int. (((temp___1586 = temp___1584) ->
  ((temp___1581(temp___1583, temp___1584,
  temp___1585)[temp___1586]) = temp___1585)) and
  ((not (temp___1586 = temp___1584)) -> ((temp___1581(temp___1583,
  temp___1584, temp___1585)[temp___1586]) = (temp___1583[temp___1586])))))))))

axiom def_axiom7 :
  (forall temp___1590:(int,et1) farray.
  (forall temp___1591:int. forall temp___1592:int.
  ((in_range(temp___1591) and in_range3(temp___1592)) ->
  (forall temp___1593:int. (((temp___1593 = temp___1591) ->
  (to_rep((temp___1588(temp___1590, temp___1591,
  temp___1592)[temp___1593])) = temp___1592)) and
  ((not (temp___1593 = temp___1591)) -> ((temp___1588(temp___1590,
  temp___1591, temp___1592)[temp___1593]) = (temp___1590[temp___1593]))))))))

axiom def_axiom8 :
  (forall temp___1598:(int,(int,et1) farray) farray.
  (forall temp___1599:int.
  (forall temp___1600:(int,et1) farray. (in_range1(temp___1599) ->
  (forall temp___1601:int. (((temp___1601 = temp___1599) ->
  ((temp___1596(temp___1598, temp___1599,
  temp___1600)[temp___1601]) = temp___1600)) and
  ((not (temp___1601 = temp___1599)) -> ((temp___1596(temp___1598,
  temp___1599, temp___1600)[temp___1601]) = (temp___1598[temp___1601])))))))))

axiom def_axiom9 :
  (forall temp___1605:(int,et1) farray.
  (forall temp___1606:int. forall temp___1607:int.
  ((in_range(temp___1606) and in_range3(temp___1607)) ->
  (forall temp___1608:int. (((temp___1608 = temp___1606) ->
  (to_rep((temp___1603(temp___1605, temp___1606,
  temp___1607)[temp___1608])) = temp___1607)) and
  ((not (temp___1608 = temp___1606)) -> ((temp___1603(temp___1605,
  temp___1606, temp___1607)[temp___1608]) = (temp___1605[temp___1608]))))))))

axiom def_axiom10 :
  (forall temp___1614:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___1615:int. forall temp___1617:int.
  (forall temp___1616:(int,(int,et1) farray) farray.
  forall temp___1618:(int,(int,et1) farray) farray.
  ((in_range2(temp___1615) and in_range2(temp___1617)) ->
  (forall temp___1619:int. (((temp___1619 = temp___1617) ->
  ((temp___1612(temp___1614, temp___1615, temp___1616, temp___1617,
  temp___1618)[temp___1619]) = temp___1618)) and
  ((not (temp___1619 = temp___1617)) -> (((temp___1619 = temp___1615) ->
  ((temp___1612(temp___1614, temp___1615, temp___1616, temp___1617,
  temp___1618)[temp___1619]) = temp___1616)) and
  ((not (temp___1619 = temp___1615)) -> ((temp___1612(temp___1614,
  temp___1615, temp___1616, temp___1617,
  temp___1618)[temp___1619]) = (temp___1614[temp___1619])))))))))))

axiom def_axiom11 :
  (forall temp___1622:(int,(int,et1) farray) farray.
  (forall temp___1623:int.
  (forall temp___1624:(int,et1) farray. (in_range1(temp___1623) ->
  (forall temp___1625:int. (((temp___1625 = temp___1623) ->
  ((temp___1620(temp___1622, temp___1623,
  temp___1624)[temp___1625]) = temp___1624)) and
  ((not (temp___1625 = temp___1623)) -> ((temp___1620(temp___1622,
  temp___1623, temp___1624)[temp___1625]) = (temp___1622[temp___1625])))))))))

axiom def_axiom12 :
  (forall temp___1629:(int,et1) farray.
  (forall temp___1630:int. forall temp___1631:int.
  ((in_range(temp___1630) and in_range3(temp___1631)) ->
  (forall temp___1632:int. (((temp___1632 = temp___1630) ->
  (to_rep((temp___1627(temp___1629, temp___1630,
  temp___1631)[temp___1632])) = temp___1631)) and
  ((not (temp___1632 = temp___1630)) -> ((temp___1627(temp___1629,
  temp___1630, temp___1631)[temp___1632]) = (temp___1629[temp___1632]))))))))

axiom def_axiom13 :
  (forall temp___1637:(int,(int,et1) farray) farray.
  (forall temp___1638:int.
  (forall temp___1639:(int,et1) farray. (in_range1(temp___1638) ->
  (forall temp___1640:int. (((temp___1640 = temp___1638) ->
  ((temp___1635(temp___1637, temp___1638,
  temp___1639)[temp___1640]) = temp___1639)) and
  ((not (temp___1640 = temp___1638)) -> ((temp___1635(temp___1637,
  temp___1638, temp___1639)[temp___1640]) = (temp___1637[temp___1640])))))))))

axiom def_axiom14 :
  (forall temp___1644:(int,et1) farray.
  (forall temp___1645:int. forall temp___1646:int.
  ((in_range(temp___1645) and in_range3(temp___1646)) ->
  (forall temp___1647:int. (((temp___1647 = temp___1645) ->
  (to_rep((temp___1642(temp___1644, temp___1645,
  temp___1646)[temp___1647])) = temp___1646)) and
  ((not (temp___1647 = temp___1645)) -> ((temp___1642(temp___1644,
  temp___1645, temp___1646)[temp___1647]) = (temp___1644[temp___1647]))))))))

axiom def_axiom15 :
  (forall temp___1653:(int,(int,(int,et1) farray) farray) farray.
  (forall temp___1654:int. forall temp___1656:int.
  (forall temp___1655:(int,(int,et1) farray) farray.
  forall temp___1657:(int,(int,et1) farray) farray.
  ((in_range2(temp___1654) and in_range2(temp___1656)) ->
  (forall temp___1658:int. (((temp___1658 = temp___1656) ->
  ((temp___1651(temp___1653, temp___1654, temp___1655, temp___1656,
  temp___1657)[temp___1658]) = temp___1657)) and
  ((not (temp___1658 = temp___1656)) -> (((temp___1658 = temp___1654) ->
  ((temp___1651(temp___1653, temp___1654, temp___1655, temp___1656,
  temp___1657)[temp___1658]) = temp___1655)) and
  ((not (temp___1658 = temp___1654)) -> ((temp___1651(temp___1653,
  temp___1654, temp___1655, temp___1656,
  temp___1657)[temp___1658]) = (temp___1653[temp___1658])))))))))))

axiom def_axiom16 :
  (forall temp___1661:(int,(int,et1) farray) farray.
  (forall temp___1662:int.
  (forall temp___1663:(int,et1) farray. (in_range1(temp___1662) ->
  (forall temp___1664:int. (((temp___1664 = temp___1662) ->
  ((temp___1659(temp___1661, temp___1662,
  temp___1663)[temp___1664]) = temp___1663)) and
  ((not (temp___1664 = temp___1662)) -> ((temp___1659(temp___1661,
  temp___1662, temp___1663)[temp___1664]) = (temp___1661[temp___1664])))))))))

axiom def_axiom17 :
  (forall temp___1668:(int,et1) farray.
  (forall temp___1669:int. forall temp___1670:int.
  ((in_range(temp___1669) and in_range3(temp___1670)) ->
  (forall temp___1671:int. (((temp___1671 = temp___1669) ->
  (to_rep((temp___1666(temp___1668, temp___1669,
  temp___1670)[temp___1671])) = temp___1670)) and
  ((not (temp___1671 = temp___1669)) -> ((temp___1666(temp___1668,
  temp___1669, temp___1670)[temp___1671]) = (temp___1668[temp___1671]))))))))

axiom def_axiom18 :
  (forall temp___1676:(int,(int,et1) farray) farray.
  (forall temp___1677:int.
  (forall temp___1678:(int,et1) farray. (in_range1(temp___1677) ->
  (forall temp___1679:int. (((temp___1679 = temp___1677) ->
  ((temp___1674(temp___1676, temp___1677,
  temp___1678)[temp___1679]) = temp___1678)) and
  ((not (temp___1679 = temp___1677)) -> ((temp___1674(temp___1676,
  temp___1677, temp___1678)[temp___1679]) = (temp___1676[temp___1679])))))))))

axiom def_axiom19 :
  (forall temp___1683:(int,et1) farray.
  (forall temp___1684:int. forall temp___1685:int.
  ((in_range(temp___1684) and in_range3(temp___1685)) ->
  (forall temp___1686:int. (((temp___1686 = temp___1684) ->
  (to_rep((temp___1681(temp___1683, temp___1684,
  temp___1685)[temp___1686])) = temp___1685)) and
  ((not (temp___1686 = temp___1684)) -> ((temp___1681(temp___1683,
  temp___1684, temp___1685)[temp___1686]) = (temp___1683[temp___1686]))))))))

 (* File "ar.ads", line 466, characters 0-0 *)
goal WP_parameter_def :
  (forall a:(int,(int,(int,et1) farray) farray) farray. forall k_next:int.
  forall f:int. forall o:et1. forall o1:(int,et1) farray.
  forall o2:(int,(int,et1) farray) farray.
  forall o3:(int,(int,(int,et1) farray) farray) farray. forall o4:int.
  forall o5:int. forall o6:et1. forall o7:(int,et1) farray.
  forall o8:(int,(int,et1) farray) farray.
  forall o9:(int,(int,(int,et1) farray) farray) farray. forall o10:int.
  forall o11:int. forall temp___5280:(int,(int,et1) farray) farray.
  forall o12:(int,et1) farray. forall o13:(int,et1) farray.
  forall o14:(int,(int,et1) farray) farray.
  forall o15:(int,(int,et1) farray) farray. forall o16:int. forall o17:int.
  forall temp___5270:(int,(int,et1) farray) farray. forall o18:int.
  forall o19:(int,et1) farray. forall o20:(int,et1) farray.
  forall o21:(int,(int,et1) farray) farray.
  forall o22:(int,(int,et1) farray) farray. forall o23:int.
  forall temp___5271:(int,(int,(int,et1) farray) farray) farray.
  forall result:(int,(int,(int,et1) farray) farray) farray.
  forall a1:(int,(int,(int,et1) farray) farray) farray. forall result1:int.
  forall k_next1:int. forall result2:int. forall k_next2:int.
  forall result3:int. forall f1:int. forall result4:int. forall f2:int.
  forall result5:(int,(int,(int,et1) farray) farray) farray.
  forall a2:(int,(int,(int,et1) farray) farray) farray.
  forall a3:(int,(int,(int,et1) farray) farray) farray. forall k_next3:int.
  forall f3:int. forall a4:(int,(int,(int,et1) farray) farray) farray.
  forall k_next4:int. forall f4:int. forall result6:bool. (in_range(i) ->
  (in_range1(j) -> (in_range2(k) -> (in_range3(e) -> (((((1 <= 16) ->
  in_range2(k_next)) and (((0 <= 99) -> in_range3(f)) and
  ((((((to_rep(o) = e) and (o1 = (((a[k])[j])[i <- o]))) and
  (o2 = ((a[k])[j <- o1]))) and (o3 = (a[k <- o2]))) and (({ map__content2 =
  result } = { map__content2 = a }) and (a1 = o3))) and ((((k = 16) and (({
  int__content = result1 } = { int__content = k_next }) and
  (k_next1 = 1))) or ((not (k = 16)) and ((((o4 = (k + 1)) and
  in_range2((k + 1))) and (({ int__content = result2 } = { int__content =
  k_next }) and (k_next2 = o4))) and (k_next1 = k_next2)))) and
  ((((e = 0) and (({ int__content = result3 } = { int__content = f }) and
  (f1 = 99))) or ((not (e = 0)) and ((((o5 = (e - 1)) and
  in_range3((e - 1))) and (({ int__content = result4 } = { int__content = f
  }) and (f2 = o5))) and (f1 = f2)))) and (((((to_rep(o6) = f1) and
  (o7 = (((a1[k_next1])[j])[i <- o6]))) and
  (o8 = ((a1[k_next1])[j <- o7]))) and (o9 = (a1[k_next1 <- o8]))) and
  ((a1 = result5) and (a2 = o9)))))))) and (((f1 = f3) and
  ((k_next1 = k_next3) and (a2 = a3))) and ((f4 = f1) and
  ((k_next4 = k_next1) and (a4 = a2))))) -> ((k <  16) -> ((((0 <  e) and
  ((((((o18 = (e - 1)) and in_range3((e - 1))) and ((((((1 <= (k + 1)) and
  ((k + 1) <= 16)) and (o17 = (k + 1))) and (temp___5270 = (a[o17]))) and
  (o19 = (temp___5270[j]))) and (o20 = temp___1564(o19, i, o18)))) and
  (((((1 <= (k + 1)) and ((k + 1) <= 16)) and (o16 = (k + 1))) and
  (o21 = (a[o16]))) and (o22 = temp___1557(o21, j, o20)))) and
  (((o23 = (k + 1)) and in_range2((k + 1))) and (temp___5271 = temp___1534(a,
  k, temp___1542((a[k]), j, temp___1549(((a[k])[j]), i, e)), o23, o22)))) and
  (result6 = bool_eq7(a3, 1, 16, temp___5271, 1, 16)))) or
  ((not (0 <  e)) and (result6 = false))) -> ((not (result6 = true)) ->
  ((e = 0) -> ((((((((1 <= (k + 1)) and ((k + 1) <= 16)) and
  (o11 = (k + 1))) and (temp___5280 = (a[o11]))) and
  (o12 = (temp___5280[j]))) and (o13 = temp___1603(o12, i, 99))) and
  (((((1 <= (k + 1)) and ((k + 1) <= 16)) and (o10 = (k + 1))) and
  (o14 = (a[o10]))) and (o15 = temp___1596(o14, j, o13)))) ->
  in_range2((k + 1)))))))))))))
