(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort it1 0)
(declare-fun it1qtint (it1) Int)
(assert (forall ((i it1)) (and (<= 1 (it1qtint i)) (<= (it1qtint i) 10))))
(define-fun in_range ((x Int)) Bool (and (<= 1 x) (<= x 10)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (it1 it1) Bool)
(declare-const dummy it1)
(declare-datatypes () ((it1__ref (mk_it1__ref (it1__content it1)))))
(define-fun it1__ref___projection ((a it1__ref)) it1 (it1__content a))
(define-fun dynamic_invariant ((temp___expr_176 Int) (temp___is_init_172 Bool) (temp___skip_constant_173 Bool) (temp___do_toplevel_174 Bool) (temp___do_typ_inv_175 Bool)) Bool (=> (or (= temp___is_init_172 true) (<= 1 10)) (in_range temp___expr_176)))
(declare-sort it2 0)
(declare-fun it2qtint (it2) Int)
(assert (forall ((i it2)) (and (<= 5 (it2qtint i)) (<= (it2qtint i) 50))))
(define-fun in_range1 ((x Int)) Bool (and (<= 5 x) (<= x 50)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (it2 it2) Bool)
(declare-const dummy1 it2)
(declare-datatypes () ((it2__ref (mk_it2__ref (it2__content it2)))))
(define-fun it2__ref___projection ((a it2__ref)) it2 (it2__content a))
(define-fun dynamic_invariant1 ((temp___expr_183 Int) (temp___is_init_179 Bool) (temp___skip_constant_180 Bool) (temp___do_toplevel_181 Bool) (temp___do_typ_inv_182 Bool)) Bool (=> (or (= temp___is_init_179 true) (<= 5 50)) (in_range1 temp___expr_183)))
(declare-sort it3 0)
(declare-fun it3qtint (it3) Int)
(assert (forall ((i it3)) (and (<= 1 (it3qtint i)) (<= (it3qtint i) 16))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 16)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (it3 it3) Bool)
(declare-const dummy2 it3)
(declare-datatypes () ((it3__ref (mk_it3__ref (it3__content it3)))))
(define-fun it3__ref___projection ((a it3__ref)) it3 (it3__content a))
(define-fun dynamic_invariant2 ((temp___expr_190 Int) (temp___is_init_186 Bool) (temp___skip_constant_187 Bool) (temp___do_toplevel_188 Bool) (temp___do_typ_inv_189 Bool)) Bool (=> (or (= temp___is_init_186 true) (<= 1 16)) (in_range2 temp___expr_190)))
(declare-sort et1 0)
(declare-fun et1qtint (et1) Int)
(assert (forall ((i et1)) (and (<= 0 (et1qtint i)) (<= (et1qtint i) 99))))
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 99)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (et1 et1) Bool)
(declare-const dummy3 et1)
(declare-datatypes () ((et1__ref (mk_et1__ref (et1__content et1)))))
(define-fun et1__ref___projection ((a et1__ref)) et1 (et1__content a))
(define-fun dynamic_invariant3 ((temp___expr_204 Int) (temp___is_init_200 Bool) (temp___skip_constant_201 Bool) (temp___do_toplevel_202 Bool) (temp___do_typ_inv_203 Bool)) Bool (=> (or (= temp___is_init_200 true) (<= 0 99)) (in_range3 temp___expr_204)))
(define-fun to_rep ((x et1)) Int (et1qtint x))
(declare-fun of_rep (Int) et1)
(assert (forall ((x et1)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x et1)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int et1))))))
(declare-fun slide ((Array Int et1) Int Int) (Array Int et1))
(assert (forall ((a (Array Int et1))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int et1))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int et1)) (a__first Int) (a__last Int) (b (Array Int et1)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int et1)) (b (Array Int et1))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep (select a temp___idx_154)) (to_rep (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-const dummy4 (Array Int et1))
(declare-const value__size Int)
(declare-fun object__size ((Array Int et1)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int et1)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int et1)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int et1))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int et1))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int et1))) (<= 0 (object__alignment a))))
(declare-fun user_eq4 ((Array Int et1) (Array Int et1)) Bool)
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int (Array Int et1)))))))
(declare-fun slide1 ((Array Int (Array Int et1)) Int Int) (Array Int (Array Int et1)))
(assert (forall ((a (Array Int (Array Int et1)))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int (Array Int et1)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq1 ((a (Array Int (Array Int et1))) (a__first Int) (a__last Int) (b (Array Int (Array Int et1))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq (select a temp___idx_155) 1 10 (select b (+ (- b__first a__first) temp___idx_155)) 1 10) true)))) true false))
(assert (forall ((a (Array Int (Array Int et1))) (b (Array Int (Array Int et1)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq1 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq (select a temp___idx_155) 1 10 (select b (+ (- b__first a__first) temp___idx_155)) 1 10) true))))))))
(declare-const dummy5 (Array Int (Array Int et1)))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int (Array Int et1))) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int (Array Int et1))) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int (Array Int et1))) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int (Array Int et1)))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int (Array Int et1)))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int (Array Int et1)))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq5 ((Array Int (Array Int et1)) (Array Int (Array Int et1))) Bool)
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int (Array Int (Array Int et1))))))))
(declare-fun slide2 ((Array Int (Array Int (Array Int et1))) Int Int) (Array Int (Array Int (Array Int et1))))
(assert (forall ((a (Array Int (Array Int (Array Int et1))))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int (Array Int (Array Int et1))))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int (Array Int (Array Int et1)))) (a__first Int) (a__last Int) (b (Array Int (Array Int (Array Int et1)))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (bool_eq1 (select a temp___idx_156) 5 50 (select b (+ (- b__first a__first) temp___idx_156)) 5 50) true)))) true false))
(assert (forall ((a (Array Int (Array Int (Array Int et1)))) (b (Array Int (Array Int (Array Int et1))))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (bool_eq1 (select a temp___idx_156) 5 50 (select b (+ (- b__first a__first) temp___idx_156)) 5 50) true))))))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const i Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const j Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const k Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const e Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-fun temp_____aggregate_def_1704 ((Array Int (Array Int (Array Int et1))) Int (Array Int (Array Int et1)) Int (Array Int (Array Int et1))) (Array Int (Array Int (Array Int et1))))
(declare-fun temp_____aggregate_def_1712 ((Array Int (Array Int et1)) Int (Array Int et1)) (Array Int (Array Int et1)))
(declare-fun temp_____aggregate_def_1719 ((Array Int et1) Int Int) (Array Int et1))
(declare-fun temp_____aggregate_def_1727 ((Array Int (Array Int et1)) Int (Array Int et1)) (Array Int (Array Int et1)))
(declare-fun temp_____aggregate_def_1734 ((Array Int et1) Int Int) (Array Int et1))
(declare-fun temp_____aggregate_def_1743 ((Array Int (Array Int (Array Int et1))) Int (Array Int (Array Int et1)) Int (Array Int (Array Int et1))) (Array Int (Array Int (Array Int et1))))
(declare-fun temp_____aggregate_def_1751 ((Array Int (Array Int et1)) Int (Array Int et1)) (Array Int (Array Int et1)))
(declare-fun temp_____aggregate_def_1758 ((Array Int et1) Int Int) (Array Int et1))
(declare-fun temp_____aggregate_def_1766 ((Array Int (Array Int et1)) Int (Array Int et1)) (Array Int (Array Int et1)))
(declare-fun temp_____aggregate_def_1773 ((Array Int et1) Int Int) (Array Int et1))
(declare-fun temp_____aggregate_def_1782 ((Array Int (Array Int (Array Int et1))) Int (Array Int (Array Int et1)) Int (Array Int (Array Int et1))) (Array Int (Array Int (Array Int et1))))
(declare-fun temp_____aggregate_def_1790 ((Array Int (Array Int et1)) Int (Array Int et1)) (Array Int (Array Int et1)))
(declare-fun temp_____aggregate_def_1797 ((Array Int et1) Int Int) (Array Int et1))
(declare-fun temp_____aggregate_def_1805 ((Array Int (Array Int et1)) Int (Array Int et1)) (Array Int (Array Int et1)))
(declare-fun temp_____aggregate_def_1812 ((Array Int et1) Int Int) (Array Int et1))
(declare-fun temp_____aggregate_def_1821 ((Array Int (Array Int (Array Int et1))) Int (Array Int (Array Int et1)) Int (Array Int (Array Int et1))) (Array Int (Array Int (Array Int et1))))
(declare-fun temp_____aggregate_def_1829 ((Array Int (Array Int et1)) Int (Array Int et1)) (Array Int (Array Int et1)))
(declare-fun temp_____aggregate_def_1836 ((Array Int et1) Int Int) (Array Int et1))
(declare-fun temp_____aggregate_def_1844 ((Array Int (Array Int et1)) Int (Array Int et1)) (Array Int (Array Int et1)))
(declare-fun temp_____aggregate_def_1851 ((Array Int et1) Int Int) (Array Int et1))
(declare-fun temp_____aggregate_def_5380 ((Array Int (Array Int (Array Int et1))) Int (Array Int (Array Int et1))) (Array Int (Array Int (Array Int et1))))
(declare-fun temp_____aggregate_def_5386 ((Array Int (Array Int et1)) Int (Array Int et1)) (Array Int (Array Int et1)))
(declare-fun temp_____aggregate_def_5392 ((Array Int et1) Int Int) (Array Int et1))
(assert (forall ((temp___5382 (Array Int (Array Int (Array Int et1))))) (forall ((temp___5383 Int)) (forall ((temp___5384 (Array Int (Array Int et1)))) (let ((temp___5381 (temp_____aggregate_def_5380 temp___5382 temp___5383 temp___5384))) (=> (dynamic_invariant2 temp___5383 true true true true) (forall ((temp___5385 Int)) (ite (= temp___5385 temp___5383) (= (select temp___5381 temp___5385) temp___5384) (= (select temp___5381 temp___5385) (select temp___5382 temp___5385))))))))))
(assert (forall ((temp___5388 (Array Int (Array Int et1)))) (forall ((temp___5389 Int)) (forall ((temp___5390 (Array Int et1))) (let ((temp___5387 (temp_____aggregate_def_5386 temp___5388 temp___5389 temp___5390))) (=> (dynamic_invariant1 temp___5389 true true true true) (forall ((temp___5391 Int)) (ite (= temp___5391 temp___5389) (= (select temp___5387 temp___5391) temp___5390) (= (select temp___5387 temp___5391) (select temp___5388 temp___5391))))))))))
(assert (forall ((temp___5394 (Array Int et1))) (forall ((temp___5395 Int) (temp___5396 Int)) (let ((temp___5393 (temp_____aggregate_def_5392 temp___5394 temp___5395 temp___5396))) (=> (and (dynamic_invariant temp___5395 true true true true) (dynamic_invariant3 temp___5396 true true true true)) (forall ((temp___5397 Int)) (ite (= temp___5397 temp___5395) (= (to_rep (select temp___5393 temp___5397)) temp___5396) (= (select temp___5393 temp___5397) (select temp___5394 temp___5397)))))))))
(assert (forall ((temp___1706 (Array Int (Array Int (Array Int et1))))) (forall ((temp___1707 Int) (temp___1709 Int)) (forall ((temp___1708 (Array Int (Array Int et1))) (temp___1710 (Array Int (Array Int et1)))) (let ((temp___1705 (temp_____aggregate_def_1704 temp___1706 temp___1707 temp___1708 temp___1709 temp___1710))) (=> (and (dynamic_invariant2 temp___1707 true true true true) (dynamic_invariant2 temp___1709 true true true true)) (forall ((temp___1711 Int)) (ite (= temp___1711 temp___1709) (= (select temp___1705 temp___1711) temp___1710) (ite (= temp___1711 temp___1707) (= (select temp___1705 temp___1711) temp___1708) (= (select temp___1705 temp___1711) (select temp___1706 temp___1711)))))))))))
(assert (forall ((temp___1714 (Array Int (Array Int et1)))) (forall ((temp___1715 Int)) (forall ((temp___1716 (Array Int et1))) (let ((temp___1713 (temp_____aggregate_def_1712 temp___1714 temp___1715 temp___1716))) (=> (dynamic_invariant1 temp___1715 true true true true) (forall ((temp___1717 Int)) (ite (= temp___1717 temp___1715) (= (select temp___1713 temp___1717) temp___1716) (= (select temp___1713 temp___1717) (select temp___1714 temp___1717))))))))))
(assert (forall ((temp___1721 (Array Int et1))) (forall ((temp___1722 Int) (temp___1723 Int)) (let ((temp___1720 (temp_____aggregate_def_1719 temp___1721 temp___1722 temp___1723))) (=> (and (dynamic_invariant temp___1722 true true true true) (dynamic_invariant3 temp___1723 true true true true)) (forall ((temp___1724 Int)) (ite (= temp___1724 temp___1722) (= (to_rep (select temp___1720 temp___1724)) temp___1723) (= (select temp___1720 temp___1724) (select temp___1721 temp___1724)))))))))
(assert (forall ((temp___1729 (Array Int (Array Int et1)))) (forall ((temp___1730 Int)) (forall ((temp___1731 (Array Int et1))) (let ((temp___1728 (temp_____aggregate_def_1727 temp___1729 temp___1730 temp___1731))) (=> (dynamic_invariant1 temp___1730 true true true true) (forall ((temp___1732 Int)) (ite (= temp___1732 temp___1730) (= (select temp___1728 temp___1732) temp___1731) (= (select temp___1728 temp___1732) (select temp___1729 temp___1732))))))))))
(assert (forall ((temp___1736 (Array Int et1))) (forall ((temp___1737 Int) (temp___1738 Int)) (let ((temp___1735 (temp_____aggregate_def_1734 temp___1736 temp___1737 temp___1738))) (=> (and (dynamic_invariant temp___1737 true true true true) (dynamic_invariant3 temp___1738 true true true true)) (forall ((temp___1739 Int)) (ite (= temp___1739 temp___1737) (= (to_rep (select temp___1735 temp___1739)) temp___1738) (= (select temp___1735 temp___1739) (select temp___1736 temp___1739)))))))))
(assert (forall ((temp___1745 (Array Int (Array Int (Array Int et1))))) (forall ((temp___1746 Int) (temp___1748 Int)) (forall ((temp___1747 (Array Int (Array Int et1))) (temp___1749 (Array Int (Array Int et1)))) (let ((temp___1744 (temp_____aggregate_def_1743 temp___1745 temp___1746 temp___1747 temp___1748 temp___1749))) (=> (and (dynamic_invariant2 temp___1746 true true true true) (dynamic_invariant2 temp___1748 true true true true)) (forall ((temp___1750 Int)) (ite (= temp___1750 temp___1748) (= (select temp___1744 temp___1750) temp___1749) (ite (= temp___1750 temp___1746) (= (select temp___1744 temp___1750) temp___1747) (= (select temp___1744 temp___1750) (select temp___1745 temp___1750)))))))))))
(assert (forall ((temp___1753 (Array Int (Array Int et1)))) (forall ((temp___1754 Int)) (forall ((temp___1755 (Array Int et1))) (let ((temp___1752 (temp_____aggregate_def_1751 temp___1753 temp___1754 temp___1755))) (=> (dynamic_invariant1 temp___1754 true true true true) (forall ((temp___1756 Int)) (ite (= temp___1756 temp___1754) (= (select temp___1752 temp___1756) temp___1755) (= (select temp___1752 temp___1756) (select temp___1753 temp___1756))))))))))
(assert (forall ((temp___1760 (Array Int et1))) (forall ((temp___1761 Int) (temp___1762 Int)) (let ((temp___1759 (temp_____aggregate_def_1758 temp___1760 temp___1761 temp___1762))) (=> (and (dynamic_invariant temp___1761 true true true true) (dynamic_invariant3 temp___1762 true true true true)) (forall ((temp___1763 Int)) (ite (= temp___1763 temp___1761) (= (to_rep (select temp___1759 temp___1763)) temp___1762) (= (select temp___1759 temp___1763) (select temp___1760 temp___1763)))))))))
(assert (forall ((temp___1768 (Array Int (Array Int et1)))) (forall ((temp___1769 Int)) (forall ((temp___1770 (Array Int et1))) (let ((temp___1767 (temp_____aggregate_def_1766 temp___1768 temp___1769 temp___1770))) (=> (dynamic_invariant1 temp___1769 true true true true) (forall ((temp___1771 Int)) (ite (= temp___1771 temp___1769) (= (select temp___1767 temp___1771) temp___1770) (= (select temp___1767 temp___1771) (select temp___1768 temp___1771))))))))))
(declare-const rliteral et1)
(assert (= (et1qtint rliteral) 99))
(assert (forall ((temp___1775 (Array Int et1))) (forall ((temp___1776 Int) (temp___1777 Int)) (let ((temp___1774 (temp_____aggregate_def_1773 temp___1775 temp___1776 temp___1777))) (=> (and (dynamic_invariant temp___1776 true true true true) (dynamic_invariant3 temp___1777 true true true true)) (forall ((temp___1778 Int)) (ite (= temp___1778 temp___1776) (= (select temp___1774 temp___1778) rliteral) (= (select temp___1774 temp___1778) (select temp___1775 temp___1778)))))))))
(assert (forall ((temp___1784 (Array Int (Array Int (Array Int et1))))) (forall ((temp___1785 Int) (temp___1787 Int)) (forall ((temp___1786 (Array Int (Array Int et1))) (temp___1788 (Array Int (Array Int et1)))) (let ((temp___1783 (temp_____aggregate_def_1782 temp___1784 temp___1785 temp___1786 temp___1787 temp___1788))) (=> (and (dynamic_invariant2 temp___1785 true true true true) (dynamic_invariant2 temp___1787 true true true true)) (forall ((temp___1789 Int)) (ite (= temp___1789 temp___1787) (= (select temp___1783 temp___1789) temp___1788) (ite (= temp___1789 temp___1785) (= (select temp___1783 temp___1789) temp___1786) (= (select temp___1783 temp___1789) (select temp___1784 temp___1789)))))))))))
(assert (forall ((temp___1792 (Array Int (Array Int et1)))) (forall ((temp___1793 Int)) (forall ((temp___1794 (Array Int et1))) (let ((temp___1791 (temp_____aggregate_def_1790 temp___1792 temp___1793 temp___1794))) (=> (dynamic_invariant1 temp___1793 true true true true) (forall ((temp___1795 Int)) (ite (= temp___1795 temp___1793) (= (select temp___1791 temp___1795) temp___1794) (= (select temp___1791 temp___1795) (select temp___1792 temp___1795))))))))))
(assert (forall ((temp___1799 (Array Int et1))) (forall ((temp___1800 Int) (temp___1801 Int)) (let ((temp___1798 (temp_____aggregate_def_1797 temp___1799 temp___1800 temp___1801))) (=> (and (dynamic_invariant temp___1800 true true true true) (dynamic_invariant3 temp___1801 true true true true)) (forall ((temp___1802 Int)) (ite (= temp___1802 temp___1800) (= (to_rep (select temp___1798 temp___1802)) temp___1801) (= (select temp___1798 temp___1802) (select temp___1799 temp___1802)))))))))
(assert (forall ((temp___1807 (Array Int (Array Int et1)))) (forall ((temp___1808 Int)) (forall ((temp___1809 (Array Int et1))) (let ((temp___1806 (temp_____aggregate_def_1805 temp___1807 temp___1808 temp___1809))) (=> (dynamic_invariant1 temp___1808 true true true true) (forall ((temp___1810 Int)) (ite (= temp___1810 temp___1808) (= (select temp___1806 temp___1810) temp___1809) (= (select temp___1806 temp___1810) (select temp___1807 temp___1810))))))))))
(assert (forall ((temp___1814 (Array Int et1))) (forall ((temp___1815 Int) (temp___1816 Int)) (let ((temp___1813 (temp_____aggregate_def_1812 temp___1814 temp___1815 temp___1816))) (=> (and (dynamic_invariant temp___1815 true true true true) (dynamic_invariant3 temp___1816 true true true true)) (forall ((temp___1817 Int)) (ite (= temp___1817 temp___1815) (= (to_rep (select temp___1813 temp___1817)) temp___1816) (= (select temp___1813 temp___1817) (select temp___1814 temp___1817)))))))))
(assert (forall ((temp___1823 (Array Int (Array Int (Array Int et1))))) (forall ((temp___1824 Int) (temp___1826 Int)) (forall ((temp___1825 (Array Int (Array Int et1))) (temp___1827 (Array Int (Array Int et1)))) (let ((temp___1822 (temp_____aggregate_def_1821 temp___1823 temp___1824 temp___1825 temp___1826 temp___1827))) (=> (and (dynamic_invariant2 temp___1824 true true true true) (dynamic_invariant2 temp___1826 true true true true)) (forall ((temp___1828 Int)) (ite (= temp___1828 temp___1826) (= (select temp___1822 temp___1828) temp___1827) (ite (= temp___1828 temp___1824) (= (select temp___1822 temp___1828) temp___1825) (= (select temp___1822 temp___1828) (select temp___1823 temp___1828)))))))))))
(assert (forall ((temp___1831 (Array Int (Array Int et1)))) (forall ((temp___1832 Int)) (forall ((temp___1833 (Array Int et1))) (let ((temp___1830 (temp_____aggregate_def_1829 temp___1831 temp___1832 temp___1833))) (=> (dynamic_invariant1 temp___1832 true true true true) (forall ((temp___1834 Int)) (ite (= temp___1834 temp___1832) (= (select temp___1830 temp___1834) temp___1833) (= (select temp___1830 temp___1834) (select temp___1831 temp___1834))))))))))
(assert (forall ((temp___1838 (Array Int et1))) (forall ((temp___1839 Int) (temp___1840 Int)) (let ((temp___1837 (temp_____aggregate_def_1836 temp___1838 temp___1839 temp___1840))) (=> (and (dynamic_invariant temp___1839 true true true true) (dynamic_invariant3 temp___1840 true true true true)) (forall ((temp___1841 Int)) (ite (= temp___1841 temp___1839) (= (to_rep (select temp___1837 temp___1841)) temp___1840) (= (select temp___1837 temp___1841) (select temp___1838 temp___1841)))))))))
(assert (forall ((temp___1846 (Array Int (Array Int et1)))) (forall ((temp___1847 Int)) (forall ((temp___1848 (Array Int et1))) (let ((temp___1845 (temp_____aggregate_def_1844 temp___1846 temp___1847 temp___1848))) (=> (dynamic_invariant1 temp___1847 true true true true) (forall ((temp___1849 Int)) (ite (= temp___1849 temp___1847) (= (select temp___1845 temp___1849) temp___1848) (= (select temp___1845 temp___1849) (select temp___1846 temp___1849))))))))))
(assert (forall ((temp___1853 (Array Int et1))) (forall ((temp___1854 Int) (temp___1855 Int)) (let ((temp___1852 (temp_____aggregate_def_1851 temp___1853 temp___1854 temp___1855))) (=> (and (dynamic_invariant temp___1854 true true true true) (dynamic_invariant3 temp___1855 true true true true)) (forall ((temp___1856 Int)) (ite (= temp___1856 temp___1854) (= (select temp___1852 temp___1856) rliteral) (= (select temp___1852 temp___1856) (select temp___1853 temp___1856)))))))))
(declare-const a (Array Int (Array Int (Array Int et1))))
(declare-const k_next Int)
(declare-const f Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 et1)
(declare-const o3 (Array Int et1))
(declare-const o4 (Array Int (Array Int et1)))
(declare-const o5 (Array Int (Array Int (Array Int et1))))
(declare-const t (Array Int (Array Int (Array Int et1))))
(declare-const a1 (Array Int (Array Int (Array Int et1))))
(declare-const result Int)
(declare-const k_next1 Int)
(declare-const result1 Int)
(declare-const k_next2 Int)
(declare-const result2 Int)
(declare-const f1 Int)
(declare-const result3 Int)
(declare-const f2 Int)
(declare-const result4 (Array Int (Array Int (Array Int et1))))
(declare-const a2 (Array Int (Array Int (Array Int et1))))
(declare-const a3 (Array Int (Array Int (Array Int et1))))
(declare-const k_next3 Int)
(declare-const f3 Int)
(declare-const t1 (Array Int (Array Int (Array Int et1))))
(declare-const a4 (Array Int (Array Int (Array Int et1))))
(declare-const k_next4 Int)
(declare-const f4 Int)
(declare-const t2 (Array Int (Array Int (Array Int et1))))
(define-fun f5 () int__ref (mk_int__ref f))
(define-fun k_next5 () int__ref (mk_int__ref k_next))
(assert (in_range i))
(assert (in_range1 j))
(assert (in_range2 k))
(assert (in_range3 e))
(assert (=> (<= 1 16) (in_range2 k_next)))
(assert (=> (<= 0 99) (in_range3 f)))
(assert (= (bool_eq2 a1 1 16 (temp_____aggregate_def_5380 t k (temp_____aggregate_def_5386 (select t k) j (temp_____aggregate_def_5392 (select (select t k) j) i e))) 1 16) true))
(assert (=> (= k 16) (= (mk_int__ref result) k_next5)))
(assert (=> (= k 16) (= k_next1 1)))
(assert (=> (not (= k 16)) (and (= o (+ k 1)) (in_range2 (+ k 1)))))
(assert (=> (not (= k 16)) (= (mk_int__ref result1) k_next5)))
(assert (=> (not (= k 16)) (= k_next2 o)))
(assert (=> (not (= k 16)) (= k_next1 k_next2)))
(assert (=> (= e 0) (= (mk_int__ref result2) f5)))
(assert (=> (= e 0) (= f1 99)))
(assert (=> (not (= e 0)) (and (= o1 (- e 1)) (in_range3 (- e 1)))))
(assert (=> (not (= e 0)) (= (mk_int__ref result3) f5)))
(assert (=> (not (= e 0)) (= f2 o1)))
(assert (=> (not (= e 0)) (= f1 f2)))
(assert (= (to_rep o2) f1))
(assert (= o3 (store (select (select a1 k_next1) j) i o2)))
(assert (= o4 (store (select a1 k_next1) j o3)))
(assert (= o5 (store a1 k_next1 o4)))
(assert (= a1 result4))
(assert (= a2 o5))
(assert (= t t1))
(assert (= f1 f3))
(assert (= k_next1 k_next3))
(assert (= a2 a3))
(assert (= t2 t))
(assert (= f4 f1))
(assert (= k_next4 k_next1))
(assert (= a4 a2))
(assert (not (or (and (< k 16) (or (and (< 0 e) (= (bool_eq2 a3 1 16 (temp_____aggregate_def_1704 a k (temp_____aggregate_def_1712 (select a k) j (temp_____aggregate_def_1719 (select (select a k) j) i e)) (+ k 1) (temp_____aggregate_def_1727 (select a (+ k 1)) j (temp_____aggregate_def_1734 (select (select a (+ k 1)) j) i (- e 1)))) 1 16) true)) (and (= e 0) (= (bool_eq2 a3 1 16 (temp_____aggregate_def_1743 a k (temp_____aggregate_def_1751 (select a k) j (temp_____aggregate_def_1758 (select (select a k) j) i e)) (+ k 1) (temp_____aggregate_def_1766 (select a (+ k 1)) j (temp_____aggregate_def_1773 (select (select a (+ k 1)) j) i 99))) 1 16) true)))) (and (= k 16) (or (and (< 0 e) (= (bool_eq2 a3 1 16 (temp_____aggregate_def_1782 a k (temp_____aggregate_def_1790 (select a k) j (temp_____aggregate_def_1797 (select (select a k) j) i e)) 1 (temp_____aggregate_def_1805 (select a 1) j (temp_____aggregate_def_1812 (select (select a 1) j) i (- e 1)))) 1 16) true)) (and (= e 0) (= (bool_eq2 a3 1 16 (temp_____aggregate_def_1821 a k (temp_____aggregate_def_1829 (select a k) j (temp_____aggregate_def_1836 (select (select a k) j) i e)) 1 (temp_____aggregate_def_1844 (select a 1) j (temp_____aggregate_def_1851 (select (select a 1) j) i 99))) 1 16) true)))))))
(check-sat)
(exit)
