(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(declare-sort character 0)
(define-fun in_range ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Int)
(declare-fun user_eq (character character) Bool)
(declare-const dummy character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(define-fun dynamic_invariant ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range temp___expr_74)))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(declare-sort index_type 0)
(declare-fun index_typeqtint (index_type) Int)
(assert (forall ((i index_type)) (and (<= 1 (index_typeqtint i)) (<= (index_typeqtint i) 65536))))
(define-fun in_range1 ((x Int)) Bool (and (<= 1 x) (<= x 65536)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq1 (index_type index_type) Bool)
(declare-const dummy1 index_type)
(declare-datatypes () ((index_type__ref (mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref___projection ((a index_type__ref)) index_type (index_type__content a))
(define-fun to_rep1 ((x index_type)) Int (index_typeqtint x))
(declare-fun of_rep1 (Int) index_type)
(assert (forall ((x index_type)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x index_type)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort length_type 0)
(declare-fun length_typeqtint (length_type) Int)
(assert (forall ((i length_type)) (and (<= 0 (length_typeqtint i)) (<= (length_typeqtint i) 65536))))
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 65536)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (length_type length_type) Bool)
(declare-const dummy2 length_type)
(declare-datatypes () ((length_type__ref (mk_length_type__ref (length_type__content length_type)))))
(define-fun length_type__ref___projection ((a length_type__ref)) length_type (length_type__content a))
(define-fun to_rep2 ((x length_type)) Int (length_typeqtint x))
(declare-fun of_rep2 (Int) length_type)
(assert (forall ((x length_type)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x length_type)) (! (in_range2 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range3 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (integer integer) Bool)
(declare-const dummy3 integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(define-fun to_rep3 ((x integer)) Int (integerqtint x))
(declare-fun of_rep3 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x integer)) (! (in_range3 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(define-fun dynamic_property ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (integer integer) Bool)
(declare-const dummy4 integer)
(declare-datatypes () ((t4s__ref (mk_t4s__ref (t4s__content integer)))))
(define-fun t4s__ref___projection ((a t4s__ref)) integer (t4s__content a))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range3 f) (=> (in_range3 l) (and (= (to_rep3 (first (mk f l))) f) (= (to_rep3 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range3 low) (and (in_range3 high) (=> (<= low high) (and (dynamic_property range_first range_last low) (dynamic_property range_first range_last high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep3 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep3 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep3 (first (rt x))) (to_rep3 (last (rt x))) (elts y) (to_rep3 (first (rt y))) (to_rep3 (last (rt y)))))
(declare-fun user_eq5 (us_t us_t) Bool)
(declare-const dummy5 us_t)
(declare-datatypes () ((t5s__ref (mk_t5s__ref (t5s__content us_t)))))
(define-fun t5s__ref___projection ((a t5s__ref)) us_t (t5s__content a))
(declare-datatypes () ((us_split_discrs (mk___split_discrs (rec__bounded_strings__bounded_string__bound index_type)))))
(define-fun us_split_discrs___projection ((a us_split_discrs)) index_type (rec__bounded_strings__bounded_string__bound a))
(declare-datatypes () ((us_split_discrs__ref (mk___split_discrs__ref (us_split_discrs__content us_split_discrs)))))
(define-fun us_split_discrs__ref___projection ((a us_split_discrs__ref)) us_split_discrs (us_split_discrs__content a))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__bounded_strings__bounded_string__text us_t) (rec__bounded_strings__bounded_string__length length_type)))))
(define-fun us_split_fields_Text__projection ((a us_split_fields)) us_t (rec__bounded_strings__bounded_string__text a))
(define-fun us_split_fields_Length__projection ((a us_split_fields)) length_type (rec__bounded_strings__bounded_string__length a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_discrs1 us_split_discrs) (us_split_fields1 us_split_fields)))))
(define-fun us_rep___projection ((a us_rep)) us_split_discrs (us_split_discrs1 a))
(define-fun us_rep___2__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (to_rep1 (rec__bounded_strings__bounded_string__bound (us_split_discrs1 a))) (to_rep1 (rec__bounded_strings__bounded_string__bound (us_split_discrs1 b)))) (and (= (bool_eq1 (rec__bounded_strings__bounded_string__text (us_split_fields1 a)) (rec__bounded_strings__bounded_string__text (us_split_fields1 b))) true) (= (to_rep2 (rec__bounded_strings__bounded_string__length (us_split_fields1 a))) (to_rep2 (rec__bounded_strings__bounded_string__length (us_split_fields1 b)))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep)) (<= 0 (object__alignment1 a))))
(declare-const bounded_strings__bounded_string__bound__first__bit Int)
(declare-const bounded_strings__bounded_string__bound__last__bit Int)
(declare-const bounded_strings__bounded_string__bound__position Int)
(assert (<= 0 bounded_strings__bounded_string__bound__first__bit))
(assert (< bounded_strings__bounded_string__bound__first__bit bounded_strings__bounded_string__bound__last__bit))
(assert (<= 0 bounded_strings__bounded_string__bound__position))
(declare-const bounded_strings__bounded_string__text__first__bit Int)
(declare-const bounded_strings__bounded_string__text__last__bit Int)
(declare-const bounded_strings__bounded_string__text__position Int)
(assert (<= 0 bounded_strings__bounded_string__text__first__bit))
(assert (< bounded_strings__bounded_string__text__first__bit bounded_strings__bounded_string__text__last__bit))
(assert (<= 0 bounded_strings__bounded_string__text__position))
(declare-const bounded_strings__bounded_string__length__first__bit Int)
(declare-const bounded_strings__bounded_string__length__last__bit Int)
(declare-const bounded_strings__bounded_string__length__position Int)
(assert (<= 0 bounded_strings__bounded_string__length__first__bit))
(assert (< bounded_strings__bounded_string__length__first__bit bounded_strings__bounded_string__length__last__bit))
(assert (<= 0 bounded_strings__bounded_string__length__position))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((bounded_string__ref (mk_bounded_string__ref (bounded_string__content us_rep)))))
(define-fun bounded_string__ref___projection ((a bounded_string__ref)) us_rep (bounded_string__content a))
(declare-fun length1 (us_rep) Int)
(declare-fun length__function_guard (Int us_rep) Bool)
(define-fun dynamic_invariant1 ((temp___expr_165 Int) (temp___is_init_161 Bool) (temp___skip_constant_162 Bool) (temp___do_toplevel_163 Bool) (temp___do_typ_inv_164 Bool)) Bool (=> (or (= temp___is_init_161 true) (<= 0 65536)) (in_range2 temp___expr_165)))
(define-fun dynamic_invariant2 ((temp___expr_172 us_rep) (temp___is_init_168 Bool) (temp___skip_constant_169 Bool) (temp___do_toplevel_170 Bool) (temp___do_typ_inv_171 Bool)) Bool (let ((temp___173 (rec__bounded_strings__bounded_string__bound (us_split_discrs1 temp___expr_172)))) (and (dynamic_property1 1 (to_rep1 temp___173) (first1 (rec__bounded_strings__bounded_string__text (us_split_fields1 temp___expr_172))) (last1 (rec__bounded_strings__bounded_string__text (us_split_fields1 temp___expr_172)))) (and (= (first1 (rec__bounded_strings__bounded_string__text (us_split_fields1 temp___expr_172))) 1) (= (last1 (rec__bounded_strings__bounded_string__text (us_split_fields1 temp___expr_172))) (to_rep1 temp___173))))))
(assert (forall ((source us_rep)) (! (=> (dynamic_invariant2 source true true true true) (dynamic_invariant1 (length1 source) true false true true)) :pattern ((length1 source)))))
(assert (forall ((source us_rep)) (! (=> (dynamic_invariant2 source true true true true) (= (length1 source) (to_rep2 (rec__bounded_strings__bounded_string__length (us_split_fields1 source))))) :pattern ((length1 source)))))
(declare-const target__split_discrs us_split_discrs)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const item Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range3 temp___expr_18)))
(define-fun dynamic_invariant4 ((temp___expr_158 Int) (temp___is_init_154 Bool) (temp___skip_constant_155 Bool) (temp___do_toplevel_156 Bool) (temp___do_typ_inv_157 Bool)) Bool (=> (or (= temp___is_init_154 true) (<= 1 65536)) (in_range1 temp___expr_158)))
(declare-const target__split_fields (Array Int character))
(declare-const target__split_fields1 t)
(declare-const target__split_fields2 length_type)
(declare-const o character)
(declare-const o1 Int)
(declare-const o2 (Array Int character))
(declare-const o3 (Array Int character))
(declare-const o4 t)
(declare-const o5 (Array Int character))
(declare-const o6 t)
(declare-const o7 length_type)
(declare-const temp___215 index_type)
(declare-const temp___2151 (Array Int character))
(declare-const temp___2152 t)
(declare-const temp___2153 length_type)
(declare-const result (Array Int character))
(declare-const result1 t)
(declare-const result2 length_type)
(declare-const target__split_fields3 (Array Int character))
(declare-const target__split_fields4 t)
(declare-const target__split_fields5 length_type)
(assert (dynamic_invariant2 (mk___rep target__split_discrs (mk___split_fields (mk___t target__split_fields target__split_fields1) target__split_fields2)) true false true true))
(assert (in_range item))
(assert (<= (+ (length1 (mk___rep target__split_discrs (mk___split_fields (mk___t target__split_fields target__split_fields1) target__split_fields2))) 1) (to_rep1 (rec__bounded_strings__bounded_string__bound target__split_discrs))))
(assert (= (to_rep o) item))
(assert (and (<= (to_rep3 (first target__split_fields1)) (+ (to_rep2 target__split_fields2) 1)) (<= (+ (to_rep2 target__split_fields2) 1) (to_rep3 (last target__split_fields1)))))
(assert (= o1 (+ (to_rep2 target__split_fields2) 1)))
(assert (= o2 (store target__split_fields o1 o)))
(assert (= o2 o3))
(assert (= target__split_fields1 o4))
(assert (= o5 o3))
(assert (= o6 o4))
(assert (= target__split_fields2 o7))
(assert (= target__split_discrs (mk___split_discrs temp___215)))
(assert (= temp___2151 o5))
(assert (= temp___2152 o6))
(assert (= temp___2153 o7))
(assert (= (mk___split_fields__ref (mk___split_fields (mk___t result result1) result2)) (mk___split_fields__ref (mk___split_fields (mk___t target__split_fields target__split_fields1) target__split_fields2))))
(assert (= temp___2151 target__split_fields3))
(assert (= temp___2152 target__split_fields4))
(assert (= temp___2153 target__split_fields5))
(assert (= target__split_discrs (mk___split_discrs temp___215)))
(assert (not (in_range2 (+ (to_rep2 target__split_fields5) 1))))
(check-sat)
(exit)
