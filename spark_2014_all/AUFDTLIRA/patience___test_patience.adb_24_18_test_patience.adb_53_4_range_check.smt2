(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_91 Int)) (=> (and (<= a__first temp___idx_91) (<= temp___idx_91 a__last)) (= (to_rep (select a temp___idx_91)) (to_rep (select b (+ (- b__first a__first) temp___idx_91)))))))))))
(define-fun to_rep1 ((x integer)) Int (integerqtint x))
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun concat_singleton_left (character Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a character)) (forall ((b (Array Int character))) (forall ((a_first Int) (b_first Int) (b_last Int)) (! (and (= (select (concat_singleton_left a a_first b b_first b_last) a_first) a) (forall ((i Int)) (! (=> (< a_first i) (= (select (concat_singleton_left a a_first b b_first b_last) i) (select b (+ (- i a_first) (- b_first 1))))) :pattern ((select (concat_singleton_left a a_first b b_first b_last) i))))) :pattern ((concat_singleton_left a a_first b b_first b_last)))))))
(declare-fun concat_singleton_right ((Array Int character) Int Int character) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((b character)) (forall ((a_first Int) (a_last Int)) (! (and (= (select (concat_singleton_right a a_first a_last b) (+ a_last 1)) b) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (concat_singleton_right a a_first a_last b) i) (select a i))) :pattern ((select (concat_singleton_right a a_first a_last b) i)) :pattern ((select a i))))) :pattern ((concat_singleton_right a a_first a_last b)))))))
(declare-fun concat_singletons (character Int character) (Array Int character))
(assert (forall ((a character) (b character)) (forall ((a_first Int)) (! (and (= (select (concat_singletons a a_first b) a_first) a) (= (select (concat_singletons a a_first b) (+ a_first 1)) b)) :pattern ((concat_singletons a a_first b))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(declare-sort cardindex 0)
(declare-fun cardindexqtint (cardindex) Int)
(assert (forall ((i cardindex)) (and (<= (- 1) (cardindexqtint i)) (<= (cardindexqtint i) 100))))
(define-fun in_range4 ((x Int)) Bool (and (<= (- 1) x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (cardindex cardindex) Bool)
(declare-const dummy4 cardindex)
(declare-datatypes () ((cardindex__ref (mk_cardindex__ref (cardindex__content cardindex)))))
(define-fun cardindex__ref___projection ((a cardindex__ref)) cardindex (cardindex__content a))
(define-fun to_rep2 ((x cardindex)) Int (cardindexqtint x))
(declare-fun of_rep2 (Int) cardindex)
(assert (forall ((x cardindex)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x cardindex)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-sort card1 0)
(declare-fun cardqtint (card1) Int)
(assert (forall ((i card1)) (and (<= 1 (cardqtint i)) (<= (cardqtint i) 52))))
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 52)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (card1 card1) Bool)
(declare-const dummy5 card1)
(declare-datatypes () ((card__ref (mk_card__ref (card__content card1)))))
(define-fun card__ref___projection ((a card__ref)) card1 (card__content a))
(define-fun to_rep3 ((x card1)) Int (cardqtint x))
(declare-fun of_rep3 (Int) card1)
(assert (forall ((x card1)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x card1)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int card1))))))
(declare-fun slide1 ((Array Int card1) Int Int) (Array Int card1))
(assert (forall ((a (Array Int card1))) (forall ((first2 Int)) (! (= (slide1 a first2 first2) a) :pattern ((slide1 a first2 first2))))))
(assert (forall ((a (Array Int card1))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int card1)) (a__first Int) (a__last Int) (b (Array Int card1)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep3 (select a temp___idx_173)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_173))))))) true false))
(assert (forall ((a (Array Int card1)) (b (Array Int card1))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_173 Int)) (=> (and (<= a__first temp___idx_173) (<= temp___idx_173 a__last)) (= (to_rep3 (select a temp___idx_173)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_173)))))))))))
(declare-const dummy6 (Array Int card1))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int card1)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int card1)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int card1)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int card1))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int card1))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int card1))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq6 ((Array Int card1) (Array Int card1)) Bool)
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int cardindex))))))
(declare-fun slide2 ((Array Int cardindex) Int Int) (Array Int cardindex))
(assert (forall ((a (Array Int cardindex))) (forall ((first2 Int)) (! (= (slide2 a first2 first2) a) :pattern ((slide2 a first2 first2))))))
(assert (forall ((a (Array Int cardindex))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq3 ((a (Array Int cardindex)) (a__first Int) (a__last Int) (b (Array Int cardindex)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (to_rep2 (select a temp___idx_174)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_174))))))) true false))
(assert (forall ((a (Array Int cardindex)) (b (Array Int cardindex))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq3 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_174 Int)) (=> (and (<= a__first temp___idx_174) (<= temp___idx_174 a__last)) (= (to_rep2 (select a temp___idx_174)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_174)))))))))))
(declare-const dummy7 (Array Int cardindex))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int cardindex)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int cardindex)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int cardindex)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int cardindex))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int cardindex))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int cardindex))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq7 ((Array Int cardindex) (Array Int cardindex)) Bool)
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int (Array Int cardindex)))))))
(declare-fun slide3 ((Array Int (Array Int cardindex)) Int Int) (Array Int (Array Int cardindex)))
(assert (forall ((a (Array Int (Array Int cardindex)))) (forall ((first2 Int)) (! (= (slide3 a first2 first2) a) :pattern ((slide3 a first2 first2))))))
(assert (forall ((a (Array Int (Array Int cardindex)))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq4 ((a (Array Int (Array Int cardindex))) (a__first Int) (a__last Int) (b (Array Int (Array Int cardindex))) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (bool_eq3 (select a temp___idx_175) 0 99 (select b (+ (- b__first a__first) temp___idx_175)) 0 99) true)))) true false))
(assert (forall ((a (Array Int (Array Int cardindex))) (b (Array Int (Array Int cardindex)))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_175 Int)) (=> (and (<= a__first temp___idx_175) (<= temp___idx_175 a__last)) (= (bool_eq3 (select a temp___idx_175) 0 99 (select b (+ (- b__first a__first) temp___idx_175)) 0 99) true))))))))
(declare-const dummy8 (Array Int (Array Int cardindex)))
(declare-const value__size3 Int)
(declare-fun object__size3 ((Array Int (Array Int cardindex))) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int (Array Int cardindex))) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 ((Array Int (Array Int cardindex))) Int)
(assert (<= 0 value__size3))
(assert (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__size3 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a (Array Int (Array Int cardindex)))) (<= 0 (object__alignment3 a))))
(declare-fun user_eq8 ((Array Int (Array Int cardindex)) (Array Int (Array Int cardindex))) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__patience__state__numelts cardindex) (rec__patience__state__values (Array Int card1)) (rec__patience__state__numstacks cardindex) (rec__patience__state__stacksizes (Array Int cardindex)) (rec__patience__state__stacks (Array Int (Array Int cardindex))) (rec__patience__state__posstack (Array Int cardindex)) (rec__patience__state__posheight (Array Int cardindex)) (rec__patience__state__preds (Array Int cardindex))))))
(define-fun us_split_fields_NumElts__projection ((a us_split_fields)) cardindex (rec__patience__state__numelts a))
(define-fun us_split_fields_Values__projection ((a us_split_fields)) (Array Int card1) (rec__patience__state__values a))
(define-fun us_split_fields_NumStacks__projection ((a us_split_fields)) cardindex (rec__patience__state__numstacks a))
(define-fun us_split_fields_StackSizes__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__stacksizes a))
(define-fun us_split_fields_Stacks__projection ((a us_split_fields)) (Array Int (Array Int cardindex)) (rec__patience__state__stacks a))
(define-fun us_split_fields_PosStack__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__posstack a))
(define-fun us_split_fields_PosHeight__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__posheight a))
(define-fun us_split_fields_Preds__projection ((a us_split_fields)) (Array Int cardindex) (rec__patience__state__preds a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___3__projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq5 ((a us_rep) (b us_rep)) Bool (ite (and (and (and (and (and (and (and (= (to_rep2 (rec__patience__state__numelts (us_split_fields1 a))) (to_rep2 (rec__patience__state__numelts (us_split_fields1 b)))) (= (bool_eq2 (rec__patience__state__values (us_split_fields1 a)) 0 99 (rec__patience__state__values (us_split_fields1 b)) 0 99) true)) (= (to_rep2 (rec__patience__state__numstacks (us_split_fields1 a))) (to_rep2 (rec__patience__state__numstacks (us_split_fields1 b))))) (= (bool_eq3 (rec__patience__state__stacksizes (us_split_fields1 a)) 0 99 (rec__patience__state__stacksizes (us_split_fields1 b)) 0 99) true)) (= (bool_eq4 (rec__patience__state__stacks (us_split_fields1 a)) 0 99 (rec__patience__state__stacks (us_split_fields1 b)) 0 99) true)) (= (bool_eq3 (rec__patience__state__posstack (us_split_fields1 a)) 0 99 (rec__patience__state__posstack (us_split_fields1 b)) 0 99) true)) (= (bool_eq3 (rec__patience__state__posheight (us_split_fields1 a)) 0 99 (rec__patience__state__posheight (us_split_fields1 b)) 0 99) true)) (= (bool_eq3 (rec__patience__state__preds (us_split_fields1 a)) 0 99 (rec__patience__state__preds (us_split_fields1 b)) 0 99) true)) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep)) (<= 0 (object__alignment4 a))))
(declare-const patience__state__numelts__first__bit Int)
(declare-const patience__state__numelts__last__bit Int)
(declare-const patience__state__numelts__position Int)
(assert (<= 0 patience__state__numelts__first__bit))
(assert (< patience__state__numelts__first__bit patience__state__numelts__last__bit))
(assert (<= 0 patience__state__numelts__position))
(declare-const patience__state__values__first__bit Int)
(declare-const patience__state__values__last__bit Int)
(declare-const patience__state__values__position Int)
(assert (<= 0 patience__state__values__first__bit))
(assert (< patience__state__values__first__bit patience__state__values__last__bit))
(assert (<= 0 patience__state__values__position))
(declare-const patience__state__numstacks__first__bit Int)
(declare-const patience__state__numstacks__last__bit Int)
(declare-const patience__state__numstacks__position Int)
(assert (<= 0 patience__state__numstacks__first__bit))
(assert (< patience__state__numstacks__first__bit patience__state__numstacks__last__bit))
(assert (<= 0 patience__state__numstacks__position))
(declare-const patience__state__stacksizes__first__bit Int)
(declare-const patience__state__stacksizes__last__bit Int)
(declare-const patience__state__stacksizes__position Int)
(assert (<= 0 patience__state__stacksizes__first__bit))
(assert (< patience__state__stacksizes__first__bit patience__state__stacksizes__last__bit))
(assert (<= 0 patience__state__stacksizes__position))
(declare-const patience__state__stacks__first__bit Int)
(declare-const patience__state__stacks__last__bit Int)
(declare-const patience__state__stacks__position Int)
(assert (<= 0 patience__state__stacks__first__bit))
(assert (< patience__state__stacks__first__bit patience__state__stacks__last__bit))
(assert (<= 0 patience__state__stacks__position))
(declare-const patience__state__posstack__first__bit Int)
(declare-const patience__state__posstack__last__bit Int)
(declare-const patience__state__posstack__position Int)
(assert (<= 0 patience__state__posstack__first__bit))
(assert (< patience__state__posstack__first__bit patience__state__posstack__last__bit))
(assert (<= 0 patience__state__posstack__position))
(declare-const patience__state__posheight__first__bit Int)
(declare-const patience__state__posheight__last__bit Int)
(declare-const patience__state__posheight__position Int)
(assert (<= 0 patience__state__posheight__first__bit))
(assert (< patience__state__posheight__first__bit patience__state__posheight__last__bit))
(assert (<= 0 patience__state__posheight__position))
(declare-const patience__state__preds__first__bit Int)
(declare-const patience__state__preds__last__bit Int)
(declare-const patience__state__preds__position Int)
(assert (<= 0 patience__state__preds__first__bit))
(assert (< patience__state__preds__first__bit patience__state__preds__last__bit))
(assert (<= 0 patience__state__preds__position))
(declare-fun user_eq9 (us_rep us_rep) Bool)
(declare-const dummy9 us_rep)
(declare-datatypes () ((state__ref (mk_state__ref (state__content us_rep)))))
(define-fun state__ref___projection ((a state__ref)) us_rep (state__content a))
(declare-fun inv (us_rep) Bool)
(declare-fun inv__function_guard (Bool us_rep) Bool)
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first2 (mk1 f l))) f) (= (to_rep1 (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property1 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int card1)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int card1) (elts1 a))
(define-fun of_array1 ((a (Array Int card1)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep1 (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep1 (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int card1)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int card1)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int card1)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int card1))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int card1))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int card1))) (<= 0 (object__alignment5 a))))
(define-fun bool_eq6 ((x us_t1) (y us_t1)) Bool (bool_eq2 (elts1 x) (to_rep1 (first2 (rt1 x))) (to_rep1 (last2 (rt1 x))) (elts1 y) (to_rep1 (first2 (rt1 y))) (to_rep1 (last2 (rt1 y)))))
(declare-fun user_eq10 (us_t1 us_t1) Bool)
(declare-const dummy10 us_t1)
(declare-datatypes () ((cardstack__ref (mk_cardstack__ref (cardstack__content us_t1)))))
(define-fun cardstack__ref___projection ((a cardstack__ref)) us_t1 (cardstack__content a))
(declare-fun playgame (us_t1) us_rep)
(declare-fun playgame__function_guard (us_rep us_t1) Bool)
(define-fun dynamic_invariant ((temp___expr_616 Int) (temp___is_init_612 Bool) (temp___skip_constant_613 Bool) (temp___do_toplevel_614 Bool) (temp___do_typ_inv_615 Bool)) Bool (=> (or (= temp___is_init_612 true) (<= (- 1) 100)) (in_range4 temp___expr_616)))
(declare-sort tcardarrayD1 0)
(declare-fun tcardarrayD1qtint (tcardarrayD1) Int)
(assert (forall ((i tcardarrayD1)) (and (<= 0 (tcardarrayD1qtint i)) (<= (tcardarrayD1qtint i) 99))))
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 99)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq11 (tcardarrayD1 tcardarrayD1) Bool)
(declare-const dummy11 tcardarrayD1)
(declare-datatypes () ((tcardarrayD1__ref (mk_tcardarrayD1__ref (tcardarrayD1__content tcardarrayD1)))))
(define-fun tcardarrayD1__ref___projection ((a tcardarrayD1__ref)) tcardarrayD1 (tcardarrayD1__content a))
(declare-sort tindexarrayD1 0)
(declare-fun tindexarrayD1qtint (tindexarrayD1) Int)
(assert (forall ((i tindexarrayD1)) (and (<= 0 (tindexarrayD1qtint i)) (<= (tindexarrayD1qtint i) 99))))
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 99)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq12 (tindexarrayD1 tindexarrayD1) Bool)
(declare-const dummy12 tindexarrayD1)
(declare-datatypes () ((tindexarrayD1__ref (mk_tindexarrayD1__ref (tindexarrayD1__content tindexarrayD1)))))
(define-fun tindexarrayD1__ref___projection ((a tindexarrayD1__ref)) tindexarrayD1 (tindexarrayD1__content a))
(declare-sort t48b 0)
(declare-fun t48bqtint (t48b) Int)
(assert (forall ((i t48b)) (and (<= 1 (t48bqtint i)) (<= (t48bqtint i) 7))))
(define-fun in_range8 ((x Int)) Bool (and (<= 1 x) (<= x 7)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq13 (t48b t48b) Bool)
(declare-const dummy13 t48b)
(declare-datatypes () ((t48b__ref (mk_t48b__ref (t48b__content t48b)))))
(define-fun t48b__ref___projection ((a t48b__ref)) t48b (t48b__content a))
(declare-const input__first integer)
(declare-const input__last integer)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const c60b us_rep)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-fun test_patience__input__aggregate_def (Int Int Int Int Int Int Int) (Array Int card1))
(declare-fun temp___String_Literal_841 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_841 us_void_param) 1)) 84) (= (to_rep (select (temp___String_Literal_841 us_void_param) 2)) 101)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 3)) 115)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 4)) 116)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 5)) 32)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 6)) 111)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 7)) 102)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 8)) 32)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 9)) 97)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 11)) 112)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 12)) 97)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 14)) 105)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 15)) 101)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 16)) 110)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 17)) 99)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 18)) 101)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 19)) 32)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 20)) 103)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 21)) 97)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 22)) 109)) (= (to_rep (select (temp___String_Literal_841 us_void_param) 23)) 101)) :pattern ((temp___String_Literal_841 us_void_param)))))
(declare-fun temp___String_Literal_842 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_842 us_void_param) 1)) 45) (= (to_rep (select (temp___String_Literal_842 us_void_param) 2)) 45)) (= (to_rep (select (temp___String_Literal_842 us_void_param) 3)) 45)) (= (to_rep (select (temp___String_Literal_842 us_void_param) 4)) 45)) (= (to_rep (select (temp___String_Literal_842 us_void_param) 5)) 45)) (= (to_rep (select (temp___String_Literal_842 us_void_param) 6)) 45)) (= (to_rep (select (temp___String_Literal_842 us_void_param) 7)) 45)) (= (to_rep (select (temp___String_Literal_842 us_void_param) 8)) 45)) :pattern ((temp___String_Literal_842 us_void_param)))))
(declare-fun temp___String_Literal_843 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_843 us_void_param) 1)) 67) (= (to_rep (select (temp___String_Literal_843 us_void_param) 2)) 97)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 3)) 114)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 4)) 100)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 5)) 83)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 6)) 116)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 7)) 97)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 8)) 99)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 9)) 107)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 11)) 40)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 12)) 102)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 13)) 105)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 14)) 114)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 15)) 115)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 16)) 116)) (= (to_rep (select (temp___String_Literal_843 us_void_param) 17)) 61)) :pattern ((temp___String_Literal_843 us_void_param)))))
(declare-fun temp___String_Literal_846 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (= (to_rep (select (temp___String_Literal_846 us_void_param) 1)) 41) (= (to_rep (select (temp___String_Literal_846 us_void_param) 2)) 32)) (= (to_rep (select (temp___String_Literal_846 us_void_param) 3)) 61)) (= (to_rep (select (temp___String_Literal_846 us_void_param) 4)) 32)) :pattern ((temp___String_Literal_846 us_void_param)))))
(declare-fun temp___String_Literal_851 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (= (to_rep (select (temp___String_Literal_851 us_void_param) 1)) 32) :pattern ((temp___String_Literal_851 us_void_param)))))
(declare-fun temp___String_Literal_854 (tuple0) (Array Int character))
(assert true)
(declare-fun temp___String_Literal_855 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_855 us_void_param) 1)) 45) (= (to_rep (select (temp___String_Literal_855 us_void_param) 2)) 45)) (= (to_rep (select (temp___String_Literal_855 us_void_param) 3)) 45)) (= (to_rep (select (temp___String_Literal_855 us_void_param) 4)) 45)) (= (to_rep (select (temp___String_Literal_855 us_void_param) 5)) 45)) (= (to_rep (select (temp___String_Literal_855 us_void_param) 6)) 45)) (= (to_rep (select (temp___String_Literal_855 us_void_param) 7)) 45)) (= (to_rep (select (temp___String_Literal_855 us_void_param) 8)) 45)) :pattern ((temp___String_Literal_855 us_void_param)))))
(declare-fun temp___String_Literal_857 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_857 us_void_param) 1)) 45) (= (to_rep (select (temp___String_Literal_857 us_void_param) 2)) 45)) (= (to_rep (select (temp___String_Literal_857 us_void_param) 3)) 45)) (= (to_rep (select (temp___String_Literal_857 us_void_param) 4)) 45)) (= (to_rep (select (temp___String_Literal_857 us_void_param) 5)) 45)) (= (to_rep (select (temp___String_Literal_857 us_void_param) 6)) 45)) (= (to_rep (select (temp___String_Literal_857 us_void_param) 7)) 45)) (= (to_rep (select (temp___String_Literal_857 us_void_param) 8)) 45)) :pattern ((temp___String_Literal_857 us_void_param)))))
(declare-fun temp___String_Literal_858 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_858 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_858 us_void_param) 2)) 117)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 3)) 109)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 4)) 98)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 8)) 111)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 9)) 102)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 11)) 101)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 12)) 108)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 13)) 116)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 14)) 115)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 15)) 32)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 16)) 61)) (= (to_rep (select (temp___String_Literal_858 us_void_param) 17)) 32)) :pattern ((temp___String_Literal_858 us_void_param)))))
(declare-fun temp___String_Literal_861 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_861 us_void_param) 1)) 67) (= (to_rep (select (temp___String_Literal_861 us_void_param) 2)) 97)) (= (to_rep (select (temp___String_Literal_861 us_void_param) 3)) 114)) (= (to_rep (select (temp___String_Literal_861 us_void_param) 4)) 100)) (= (to_rep (select (temp___String_Literal_861 us_void_param) 5)) 32)) (= (to_rep (select (temp___String_Literal_861 us_void_param) 6)) 118)) (= (to_rep (select (temp___String_Literal_861 us_void_param) 7)) 97)) (= (to_rep (select (temp___String_Literal_861 us_void_param) 8)) 108)) (= (to_rep (select (temp___String_Literal_861 us_void_param) 9)) 117)) (= (to_rep (select (temp___String_Literal_861 us_void_param) 10)) 101)) (= (to_rep (select (temp___String_Literal_861 us_void_param) 11)) 115)) (= (to_rep (select (temp___String_Literal_861 us_void_param) 12)) 32)) (= (to_rep (select (temp___String_Literal_861 us_void_param) 13)) 61)) :pattern ((temp___String_Literal_861 us_void_param)))))
(declare-fun temp___String_Literal_864 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (= (to_rep (select (temp___String_Literal_864 us_void_param) 1)) 32) :pattern ((temp___String_Literal_864 us_void_param)))))
(declare-fun temp___String_Literal_868 (tuple0) (Array Int character))
(assert true)
(declare-fun temp___String_Literal_869 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_869 us_void_param) 1)) 78) (= (to_rep (select (temp___String_Literal_869 us_void_param) 2)) 117)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 3)) 109)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 4)) 98)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 5)) 101)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 6)) 114)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 7)) 32)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 8)) 111)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 9)) 102)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 10)) 32)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 11)) 115)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 12)) 116)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 13)) 97)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 14)) 99)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 15)) 107)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 16)) 115)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 17)) 32)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 18)) 61)) (= (to_rep (select (temp___String_Literal_869 us_void_param) 19)) 32)) :pattern ((temp___String_Literal_869 us_void_param)))))
(declare-fun temp___String_Literal_875 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (= (to_rep (select (temp___String_Literal_875 us_void_param) 1)) 83) (= (to_rep (select (temp___String_Literal_875 us_void_param) 2)) 116)) (= (to_rep (select (temp___String_Literal_875 us_void_param) 3)) 97)) (= (to_rep (select (temp___String_Literal_875 us_void_param) 4)) 99)) (= (to_rep (select (temp___String_Literal_875 us_void_param) 5)) 107)) (= (to_rep (select (temp___String_Literal_875 us_void_param) 6)) 32)) :pattern ((temp___String_Literal_875 us_void_param)))))
(declare-fun temp___String_Literal_878 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_878 us_void_param) 1)) 32) (= (to_rep (select (temp___String_Literal_878 us_void_param) 2)) 104)) (= (to_rep (select (temp___String_Literal_878 us_void_param) 3)) 97)) (= (to_rep (select (temp___String_Literal_878 us_void_param) 4)) 115)) (= (to_rep (select (temp___String_Literal_878 us_void_param) 5)) 32)) (= (to_rep (select (temp___String_Literal_878 us_void_param) 6)) 115)) (= (to_rep (select (temp___String_Literal_878 us_void_param) 7)) 105)) (= (to_rep (select (temp___String_Literal_878 us_void_param) 8)) 122)) (= (to_rep (select (temp___String_Literal_878 us_void_param) 9)) 101)) (= (to_rep (select (temp___String_Literal_878 us_void_param) 10)) 32)) :pattern ((temp___String_Literal_878 us_void_param)))))
(declare-fun temp___String_Literal_884 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (= (to_rep (select (temp___String_Literal_884 us_void_param) 1)) 32) (= (to_rep (select (temp___String_Literal_884 us_void_param) 2)) 58)) :pattern ((temp___String_Literal_884 us_void_param)))))
(declare-fun temp___String_Literal_891 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (= (to_rep (select (temp___String_Literal_891 us_void_param) 1)) 32) :pattern ((temp___String_Literal_891 us_void_param)))))
(declare-fun temp___String_Literal_894 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (= (to_rep (select (temp___String_Literal_894 us_void_param) 1)) 32) (= (to_rep (select (temp___String_Literal_894 us_void_param) 2)) 61)) (= (to_rep (select (temp___String_Literal_894 us_void_param) 3)) 62)) :pattern ((temp___String_Literal_894 us_void_param)))))
(declare-fun temp___String_Literal_903 (tuple0) (Array Int character))
(assert true)
(declare-fun temp___String_Literal_904 (tuple0) (Array Int character))
(assert (forall ((us_void_param tuple0)) (! (and (and (and (and (and (and (and (= (to_rep (select (temp___String_Literal_904 us_void_param) 1)) 45) (= (to_rep (select (temp___String_Literal_904 us_void_param) 2)) 45)) (= (to_rep (select (temp___String_Literal_904 us_void_param) 3)) 45)) (= (to_rep (select (temp___String_Literal_904 us_void_param) 4)) 45)) (= (to_rep (select (temp___String_Literal_904 us_void_param) 5)) 45)) (= (to_rep (select (temp___String_Literal_904 us_void_param) 6)) 45)) (= (to_rep (select (temp___String_Literal_904 us_void_param) 7)) 45)) (= (to_rep (select (temp___String_Literal_904 us_void_param) 8)) 45)) :pattern ((temp___String_Literal_904 us_void_param)))))
(define-fun dynamic_invariant1 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant2 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant3 ((temp___expr_74 Int) (temp___is_init_70 Bool) (temp___skip_constant_71 Bool) (temp___do_toplevel_72 Bool) (temp___do_typ_inv_73 Bool)) Bool (=> (or (= temp___is_init_70 true) (<= 0 255)) (in_range3 temp___expr_74)))
(define-fun dynamic_invariant4 ((temp___expr_96 us_t) (temp___is_init_92 Bool) (temp___skip_constant_93 Bool) (temp___do_toplevel_94 Bool) (temp___do_typ_inv_95 Bool)) Bool (=> (not (= temp___skip_constant_93 true)) (dynamic_property 1 2147483647 (first1 temp___expr_96) (last1 temp___expr_96))))
(define-fun dynamic_invariant5 ((temp___expr_603 Int) (temp___is_init_599 Bool) (temp___skip_constant_600 Bool) (temp___do_toplevel_601 Bool) (temp___do_typ_inv_602 Bool)) Bool (=> (or (= temp___is_init_599 true) (<= 1 52)) (in_range5 temp___expr_603)))
(declare-const rliteral card1)
(assert (= (cardqtint rliteral) 9))
(declare-const rliteral1 card1)
(assert (= (cardqtint rliteral1) 7))
(declare-const rliteral2 card1)
(assert (= (cardqtint rliteral2) 10))
(declare-const rliteral3 card1)
(assert (= (cardqtint rliteral3) 5))
(declare-const rliteral4 card1)
(assert (= (cardqtint rliteral4) 4))
(assert (forall ((temp___830 Int) (temp___831 Int) (temp___832 Int) (temp___833 Int) (temp___834 Int) (temp___835 Int) (temp___836 Int)) (let ((temp___829 (test_patience__input__aggregate_def temp___830 temp___831 temp___832 temp___833 temp___834 temp___835 temp___836))) (=> (and (and (and (and (and (and (dynamic_invariant5 temp___830 true true true true) (dynamic_invariant5 temp___831 true true true true)) (dynamic_invariant5 temp___832 true true true true)) (dynamic_invariant5 temp___833 true true true true)) (dynamic_invariant5 temp___834 true true true true)) (dynamic_invariant5 temp___835 true true true true)) (dynamic_invariant5 temp___836 true true true true)) (and (and (and (and (and (and (= (select temp___829 1) rliteral) (= (select temp___829 2) rliteral1)) (= (select temp___829 3) rliteral2)) (= (select temp___829 4) rliteral)) (= (select temp___829 5) rliteral3)) (= (select temp___829 6) rliteral4)) (= (select temp___829 7) rliteral2))))))
(define-fun dynamic_invariant6 ((temp___expr_610 us_t1) (temp___is_init_606 Bool) (temp___skip_constant_607 Bool) (temp___do_toplevel_608 Bool) (temp___do_typ_inv_609 Bool)) Bool (=> (not (= temp___skip_constant_607 true)) (dynamic_property1 1 2147483647 (first3 temp___expr_610) (last3 temp___expr_610))))
(assert true)
(assert (forall ((s us_rep)) (! (= (= (inv s) true) (and (and (and (and (and (and (and (and (and (<= 0 (to_rep2 (rec__patience__state__numstacks (us_split_fields1 s)))) (<= (to_rep2 (rec__patience__state__numstacks (us_split_fields1 s))) (to_rep2 (rec__patience__state__numelts (us_split_fields1 s))))) (<= (to_rep2 (rec__patience__state__numelts (us_split_fields1 s))) 100)) (or (= (to_rep2 (rec__patience__state__numelts (us_split_fields1 s))) 0) (< 0 (to_rep2 (rec__patience__state__numstacks (us_split_fields1 s)))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep2 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (and (and (<= 1 (to_rep2 (let ((temp___749 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___749 i)))) (<= (to_rep2 (let ((temp___750 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___750 i))) (to_rep2 (rec__patience__state__numelts (us_split_fields1 s))))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep2 (let ((temp___751 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___751 i))) 1))) (and (<= 0 (to_rep2 (let ((temp___753 (let ((temp___752 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___752 i)))) (select temp___753 j)))) (< (to_rep2 (let ((temp___755 (let ((temp___754 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___754 i)))) (select temp___755 j))) (to_rep2 (rec__patience__state__numelts (us_split_fields1 s))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep2 (rec__patience__state__numelts (us_split_fields1 s))) 1))) (and (and (and (<= 0 (to_rep2 (let ((temp___756 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___756 i)))) (<= (to_rep2 (let ((temp___756 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___756 i))) (- (to_rep2 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (and (<= 0 (to_rep2 (let ((temp___757 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___757 i)))) (<= (to_rep2 (let ((temp___757 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___757 i))) (- (to_rep2 (let ((temp___758 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___758 (to_rep2 (let ((temp___759 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___759 i)))))) 1)))) (= (to_rep2 (let ((temp___762 (let ((temp___760 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___760 (to_rep2 (let ((temp___761 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___761 i))))))) (select temp___762 (to_rep2 (let ((temp___763 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___763 i)))))) i))))) (forall ((ist Int)) (=> (and (<= 0 ist) (<= ist (- (to_rep2 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (forall ((ip Int)) (=> (and (<= 0 ip) (<= ip (- (to_rep2 (let ((temp___764 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___764 ist))) 1))) (and (= ist (to_rep2 (let ((temp___765 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___765 (to_rep2 (let ((temp___767 (let ((temp___766 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___766 ist)))) (select temp___767 ip))))))) (= ip (to_rep2 (let ((temp___768 (rec__patience__state__posheight (us_split_fields1 s)))) (select temp___768 (to_rep2 (let ((temp___770 (let ((temp___769 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___769 ist)))) (select temp___770 ip))))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep2 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep2 (let ((temp___771 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___771 i))) 2))) (forall ((k Int)) (=> (and (<= (+ j 1) k) (<= k (- (to_rep2 (let ((temp___772 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___772 i))) 1))) (< (to_rep2 (let ((temp___774 (let ((temp___773 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___773 i)))) (select temp___774 j))) (to_rep2 (let ((temp___776 (let ((temp___775 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___775 i)))) (select temp___776 k))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep2 (rec__patience__state__numstacks (us_split_fields1 s))) 1))) (forall ((j Int)) (=> (and (<= 0 j) (<= j (- (to_rep2 (let ((temp___777 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___777 i))) 2))) (forall ((k Int)) (=> (and (<= (+ j 1) k) (<= k (- (to_rep2 (let ((temp___778 (rec__patience__state__stacksizes (us_split_fields1 s)))) (select temp___778 i))) 1))) (<= (to_rep3 (let ((temp___782 (rec__patience__state__values (us_split_fields1 s)))) (select temp___782 (to_rep2 (let ((temp___784 (let ((temp___783 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___783 i)))) (select temp___784 k)))))) (to_rep3 (let ((temp___779 (rec__patience__state__values (us_split_fields1 s)))) (select temp___779 (to_rep2 (let ((temp___781 (let ((temp___780 (rec__patience__state__stacks (us_split_fields1 s)))) (select temp___780 i)))) (select temp___781 j)))))))))))))) (forall ((i Int)) (=> (and (<= 0 i) (<= i (- (to_rep2 (rec__patience__state__numelts (us_split_fields1 s))) 1))) (and (and (and (<= (- 1) (to_rep2 (let ((temp___785 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___785 i)))) (<= (to_rep2 (let ((temp___785 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___785 i))) (- (to_rep2 (rec__patience__state__numelts (us_split_fields1 s))) 1))) (< (to_rep2 (let ((temp___786 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___786 i))) i)) (ite (< (to_rep2 (let ((temp___795 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___795 i))) 0) (= (to_rep2 (let ((temp___787 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___787 i))) 0) (and (and (< (to_rep3 (let ((temp___788 (rec__patience__state__values (us_split_fields1 s)))) (select temp___788 (to_rep2 (let ((temp___789 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___789 i)))))) (to_rep3 (let ((temp___790 (rec__patience__state__values (us_split_fields1 s)))) (select temp___790 i)))) (< 0 (to_rep2 (let ((temp___791 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___791 i))))) (= (to_rep2 (let ((temp___792 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___792 (to_rep2 (let ((temp___793 (rec__patience__state__preds (us_split_fields1 s)))) (select temp___793 i)))))) (- (to_rep2 (let ((temp___794 (rec__patience__state__posstack (us_split_fields1 s)))) (select temp___794 i))) 1))))))))) :pattern ((inv s)))))
(declare-const input (Array Int card1))
(declare-const s__split_fields cardindex)
(declare-const s__split_fields1 (Array Int card1))
(declare-const s__split_fields2 cardindex)
(declare-const s__split_fields3 (Array Int cardindex))
(declare-const s__split_fields4 (Array Int (Array Int cardindex)))
(declare-const s__split_fields5 (Array Int cardindex))
(declare-const s__split_fields6 (Array Int cardindex))
(declare-const s__split_fields7 (Array Int cardindex))
(declare-const i Int)
(declare-const i1 Int)
(declare-const o Int)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Int)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const temp___847 (Array Int character))
(declare-const temp___8471 t)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Int)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const o12 (Array Int character))
(declare-const o13 t)
(declare-const o14 Int)
(declare-const o15 card1)
(declare-const o16 Int)
(declare-const o17 us_image)
(declare-const temp___853 (Array Int character))
(declare-const temp___8531 t)
(declare-const o18 Int)
(declare-const o19 Int)
(declare-const o20 Int)
(declare-const o21 Int)
(declare-const o22 Int)
(declare-const o23 Int)
(declare-const o24 (Array Int character))
(declare-const o25 t)
(declare-const temp___856 cardindex)
(declare-const temp___8561 (Array Int card1))
(declare-const temp___8562 cardindex)
(declare-const temp___8563 (Array Int cardindex))
(declare-const temp___8564 (Array Int (Array Int cardindex)))
(declare-const temp___8565 (Array Int cardindex))
(declare-const temp___8566 (Array Int cardindex))
(declare-const temp___8567 (Array Int cardindex))
(declare-const o26 Int)
(declare-const o27 Int)
(declare-const o28 Int)
(declare-const o29 Int)
(declare-const o30 Int)
(declare-const o31 Int)
(declare-const o32 (Array Int character))
(declare-const o33 t)
(declare-const o34 Int)
(declare-const o35 Int)
(declare-const o36 Int)
(declare-const o37 Int)
(declare-const o38 Int)
(declare-const result map__ref1)
(declare-const input1 (Array Int card1))
(declare-const result1 int__ref)
(declare-const i2 Int)
(declare-const i3 Int)
(declare-const i4 int__ref)
(declare-const i5 Int)
(declare-const i6 int__ref)
(declare-const i7 Int)
(declare-const result2 us_split_fields__ref)
(declare-const s__split_fields8 us_split_fields)
(declare-const result3 int__ref)
(declare-const i8 Int)
(declare-const i9 Int)
(define-fun temp___8568 () us_rep (mk___rep (mk___split_fields temp___856 temp___8561 temp___8562 temp___8563 temp___8564 temp___8565 temp___8566 temp___8567)))
(assert (= result (mk_map__ref1 input)))
(assert (= input1 (test_patience__input__aggregate_def 9 7 10 9 5 4 10)))
(assert (= (to_rep1 input__first) (to_rep1 (first2 (mk1 1 7)))))
(assert (= (to_rep1 input__last) (to_rep1 (last2 (mk1 1 7)))))
(assert (dynamic_property1 1 2147483647 (to_rep1 input__first) (to_rep1 input__last)))
(assert (=> (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first))))))) (= o (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first))))))) 1))))
(assert (=> (not (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))))) (= o 0)))
(assert (=> (<= 1 17) (= o1 (+ (- 17 1) 1))))
(assert (=> (not (<= 1 17)) (= o1 0)))
(assert (= o2 (+ o1 o)))
(assert (= o3 (+ 1 o2)))
(assert (= o4 (- o3 1)))
(assert (and (= o5 o4) (in_range2 o4)))
(assert (= (concat1 (temp___String_Literal_843 Tuple0) 1 17 (elts (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first)))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE1 (to_rep1 input__first))))))) temp___847))
(assert (= (mk 1 o5) temp___8471))
(assert (=> (= (length (mk___t temp___847 temp___8471)) 0) (= (temp___String_Literal_846 Tuple0) o12)))
(assert (=> (= (length (mk___t temp___847 temp___8471)) 0) (= (mk 1 4) o13)))
(assert (=> (not (= (length (mk___t temp___847 temp___8471)) 0)) (=> (<= 1 4) (= o6 (+ (- 4 1) 1)))))
(assert (=> (not (= (length (mk___t temp___847 temp___8471)) 0)) (=> (not (<= 1 4)) (= o6 0))))
(assert (=> (not (= (length (mk___t temp___847 temp___8471)) 0)) (=> (<= (to_rep1 (first temp___8471)) (to_rep1 (last temp___8471))) (= o7 (+ (- (to_rep1 (last temp___8471)) (to_rep1 (first temp___8471))) 1)))))
(assert (=> (not (= (length (mk___t temp___847 temp___8471)) 0)) (=> (not (<= (to_rep1 (first temp___8471)) (to_rep1 (last temp___8471)))) (= o7 0))))
(assert (=> (not (= (length (mk___t temp___847 temp___8471)) 0)) (= o8 (+ o7 o6))))
(assert (=> (not (= (length (mk___t temp___847 temp___8471)) 0)) (= o9 (+ (to_rep1 (first temp___8471)) o8))))
(assert (=> (not (= (length (mk___t temp___847 temp___8471)) 0)) (= o10 (- o9 1))))
(assert (=> (not (= (length (mk___t temp___847 temp___8471)) 0)) (and (= o11 o10) (in_range2 o10))))
(assert (=> (not (= (length (mk___t temp___847 temp___8471)) 0)) (= (concat1 temp___847 (to_rep1 (first temp___8471)) (to_rep1 (last temp___8471)) (temp___String_Literal_846 Tuple0) 1 4) o12)))
(assert (=> (not (= (length (mk___t temp___847 temp___8471)) 0)) (= (mk (to_rep1 (first temp___8471)) o11) o13)))
(assert (= result1 (mk_int__ref i)))
(assert (= i2 (to_rep1 input__first)))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (and (<= (to_rep1 input__first) i3) (<= i3 (to_rep1 input__last)))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= o14 i3)))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= o15 (select input1 o14))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= o16 (to_rep3 o15))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= o17 (attr__ATTRIBUTE_IMAGE5 o16))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= (mk___t temp___853 temp___8531) (to_string o17))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (=> (<= (to_rep1 (first temp___8531)) (to_rep1 (last temp___8531))) (= o18 (+ (- (to_rep1 (last temp___8531)) (to_rep1 (first temp___8531))) 1)))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (=> (not (<= (to_rep1 (first temp___8531)) (to_rep1 (last temp___8531)))) (= o18 0))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (=> (<= 1 1) (= o19 (+ (- 1 1) 1)))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (=> (not (<= 1 1)) (= o19 0))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= o20 (+ o19 o18))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= o21 (+ 1 o20))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= o22 (- o21 1))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (and (= o23 o22) (in_range2 o22))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= o24 (concat1 (temp___String_Literal_851 Tuple0) 1 1 temp___853 (to_rep1 (first temp___8531)) (to_rep1 (last temp___8531))))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= o25 (mk 1 o23))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= i3 (to_rep1 input__last))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= i4 (mk_int__ref i3))))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= i5 i3)))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= i6 i4)))
(assert (=> (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last))) (= i7 i5)))
(assert (=> (not (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last)))) (= i6 (mk_int__ref i2))))
(assert (=> (not (and (<= (to_rep1 input__first) i2) (<= i2 (to_rep1 input__last)))) (= i7 i2)))
(assert (and (= temp___8568 (playgame (mk___t1 input1 (mk1 (to_rep1 input__first) (to_rep1 input__last))))) (= (inv temp___8568) true)))
(assert (= result2 (mk___split_fields__ref (mk___split_fields s__split_fields s__split_fields1 s__split_fields2 s__split_fields3 s__split_fields4 s__split_fields5 s__split_fields6 s__split_fields7))))
(assert (= s__split_fields8 (mk___split_fields temp___856 temp___8561 temp___8562 temp___8563 temp___8564 temp___8565 temp___8566 temp___8567)))
(assert (= (mk___rep s__split_fields8) c60b))
(assert (=> (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (rec__patience__state__numelts (us_split_fields1 c60b)))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (rec__patience__state__numelts (us_split_fields1 c60b))))))))) (= o26 (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (rec__patience__state__numelts (us_split_fields1 c60b)))))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (rec__patience__state__numelts (us_split_fields1 c60b))))))))) 1))))
(assert (=> (not (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (rec__patience__state__numelts (us_split_fields1 c60b)))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (rec__patience__state__numelts (us_split_fields1 c60b)))))))))) (= o26 0)))
(assert (=> (<= 1 17) (= o27 (+ (- 17 1) 1))))
(assert (=> (not (<= 1 17)) (= o27 0)))
(assert (= o28 (+ o27 o26)))
(assert (= o29 (+ 1 o28)))
(assert (= o30 (- o29 1)))
(assert (and (= o31 o30) (in_range2 o30)))
(assert (= o32 (concat1 (temp___String_Literal_858 Tuple0) 1 17 (elts (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (rec__patience__state__numelts (us_split_fields1 c60b)))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (rec__patience__state__numelts (us_split_fields1 c60b)))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE4 (to_rep2 (rec__patience__state__numelts (us_split_fields1 c60b)))))))))))
(assert (= o33 (mk 1 o31)))
(assert (= result3 (mk_int__ref i1)))
(assert (= i8 0))
(assert (<= 0 i8))
(assert (<= i8 (- (to_rep2 (rec__patience__state__numelts (us_split_fields1 c60b))) 1)))
(assert (and (<= 0 i9) (<= i9 (- (to_rep2 (rec__patience__state__numelts (us_split_fields1 c60b))) 1))))
(assert (=> (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__values (us_split_fields1 c60b)) i9))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__values (us_split_fields1 c60b)) i9)))))))) (= o34 (+ (- (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__values (us_split_fields1 c60b)) i9))))))) (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__values (us_split_fields1 c60b)) i9)))))))) 1))))
(assert (=> (not (<= (to_rep1 (first (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__values (us_split_fields1 c60b)) i9))))))) (to_rep1 (last (rt (to_string (attr__ATTRIBUTE_IMAGE5 (to_rep3 (select (rec__patience__state__values (us_split_fields1 c60b)) i9))))))))) (= o34 0)))
(assert (=> (<= 1 1) (= o35 (+ (- 1 1) 1))))
(assert (=> (not (<= 1 1)) (= o35 0)))
(assert (= o36 (+ o35 o34)))
(assert (= o37 (+ 1 o36)))
(assert (= o38 (- o37 1)))
(assert (not (in_range2 o38)))
(check-sat)
(exit)
