(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type integer

predicate in_range1(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : integer, integer -> bool

logic dummy : integer

type integer__ref = { integer__content : integer
}

function integer__ref___projection(a: integer__ref) : integer =
  (a).integer__content

type positive

predicate in_range2(x: int) = ((1 <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : positive, positive -> bool

logic dummy1 : positive

type positive__ref = { positive__content : positive
}

function positive__ref___projection(a: positive__ref) : positive =
  (a).positive__content

type character

predicate in_range3(x: int) = ((0 <= x) and (x <= 255))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : character, character -> bool

logic dummy2 : character

type character__ref = { character__content : character
}

function character__ref___projection(a: character__ref) : character =
  (a).character__content

logic to_rep : character -> int

logic of_rep : int -> character

axiom inversion_axiom :
  (forall x:character [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:character [to_rep(x)]. in_range3(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range3(x) ->
  (to_rep(of_rep(x)) = x)))

type map__ref = { map__content : (int,character) farray
}

logic slide : (int,character) farray, int, int -> (int,character) farray

axiom slide_eq :
  (forall a:(int,character) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,character) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq5 : (int,character) farray, int, int, (int,character) farray,
  int, int -> bool

axiom bool_eq_def4 :
  (forall a:(int,character) farray. forall a__first:int. forall a__last:int.
  forall b:(int,character) farray. forall b__first:int. forall b__last:int
  [bool_eq5(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_91:int. ((((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) and
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)])))) or
  (not ((a__first <= temp___idx_91) and (temp___idx_91 <= a__last)))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)]))))))) ->
  (bool_eq5(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,character) farray. forall b:(int,character) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq5(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_91:int. (((a__first <= temp___idx_91) and
  (temp___idx_91 <= a__last)) ->
  (to_rep((a[temp___idx_91])) = to_rep((b[((b__first - a__first) + temp___idx_91)])))))))))

logic to_rep1 : integer -> int

logic of_rep1 : int -> integer

axiom inversion_axiom1 :
  (forall x:integer [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 : (forall x:integer [to_rep1(x)]. in_range1(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range1(x) ->
  (to_rep1(of_rep1(x)) = x)))

type t

logic first : t -> integer

logic last : t -> integer

logic mk : int, int -> t

axiom mk_def :
  (forall f:int. forall l:int [mk(f, l)]. (in_range1(f) -> (in_range1(l) ->
  ((to_rep1(first(mk(f, l))) = f) and (to_rep1(last(mk(f, l))) = l)))))

predicate dynamic_property(range_first: int, range_last: int, low: int,
  high: int) = (in_range1(low) and (in_range1(high) and ((low <= high) ->
  (in_range2(low) and in_range2(high)))))

type us_t = { elts : (int,character) farray; rt : t
}

function to_array(a: us_t) : (int,character) farray = (a).elts

function of_array(a: (int,character) farray, f: int, l: int) : us_t = {
  elts = a; rt = mk(f, l) }

function first1(a: us_t) : int = to_rep1(first((a).rt))

function last1(a: us_t) : int = to_rep1(last((a).rt))

logic length : us_t -> int

axiom length_def :
  (forall a:us_t [length(a)]. (((first1(a) <= last1(a)) ->
  (length(a) = ((last1(a) - first1(a)) + 1))) and
  ((not (first1(a) <= last1(a))) -> (length(a) = 0))))

logic value__size : int

logic object__size : (int,character) farray -> int

logic value__component__size : int

logic object__component__size : (int,character) farray -> int

logic value__alignment : int

logic object__alignment : (int,character) farray -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom :
  (forall a:(int,character) farray. (0 <= object__size(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,character) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:(int,character) farray. (0 <= object__alignment(a)))

function bool_eq6(x: us_t, y: us_t) : bool = bool_eq5((x).elts,
  to_rep1(first((x).rt)), to_rep1(last((x).rt)), (y).elts,
  to_rep1(first((y).rt)), to_rep1(last((y).rt)))

logic user_eq3 : us_t, us_t -> bool

logic dummy3 : (int,character) farray

logic dummy4 : t

logic to_string : us_image -> us_t

logic from_string : us_t -> us_image

type string__ref = { string__content : us_t
}

function string__ref___projection(a: string__ref) : us_t =
  (a).string__content

type filesizet

predicate in_range4(x: int) = ((0 <= x) and (x <= 4194304))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : filesizet, filesizet -> bool

logic dummy5 : filesizet

type filesizet__ref = { filesizet__content : filesizet
}

function filesizet__ref___projection(a: filesizet__ref) : filesizet =
  (a).filesizet__content

logic to_rep2 : filesizet -> int

logic of_rep2 : int -> filesizet

axiom inversion_axiom2 :
  (forall x:filesizet [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 : (forall x:filesizet [to_rep2(x)]. in_range4(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range4(x) ->
  (to_rep2(of_rep2(x)) = x)))

type durationt

predicate in_range5(x: int) = ((0 <= x) and (x <= 864000))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : durationt, durationt -> bool

logic dummy6 : durationt

type durationt__ref = { durationt__content : durationt
}

function durationt__ref___projection(a: durationt__ref) : durationt =
  (a).durationt__content

logic to_rep3 : durationt -> int

logic of_rep3 : int -> durationt

axiom inversion_axiom3 :
  (forall x:durationt [to_rep3(x)]. (of_rep3(to_rep3(x)) = x))

axiom range_axiom3 : (forall x:durationt [to_rep3(x)]. in_range5(to_rep3(x)))

axiom coerce_axiom3 :
  (forall x:int [to_rep3(of_rep3(x))]. (in_range5(x) ->
  (to_rep3(of_rep3(x)) = x)))

type durationtexti

predicate in_range6(x: int) = ((1 <= x) and (x <= 10))

logic bool_eq9 : int, int -> bool

axiom bool_eq_def7 :
  (forall x:int. forall y:int [bool_eq9(x, y)]. (((x = y) -> (bool_eq9(x,
  y) = true)) and ((not (x = y)) -> (bool_eq9(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : durationtexti, durationtexti -> bool

logic dummy7 : durationtexti

type durationtexti__ref = { durationtexti__content : durationtexti
}

function durationtexti__ref___projection(a: durationtexti__ref) : durationtexti =
  (a).durationtexti__content

logic printduration : int -> (int,character) farray

logic printduration__function_guard : (int,character) farray, int -> prop

axiom printduration__post_axiom : true

type fart

predicate in_range7(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq10 : int, int -> bool

axiom bool_eq_def8 :
  (forall x:int. forall y:int [bool_eq10(x, y)]. (((x = y) -> (bool_eq10(x,
  y) = true)) and ((not (x = y)) -> (bool_eq10(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq7 : fart, fart -> bool

logic dummy8 : fart

type fart__ref = { fart__content : fart
}

function fart__ref___projection(a: fart__ref) : fart = (a).fart__content

logic to_rep4 : fart -> int

logic of_rep4 : int -> fart

axiom inversion_axiom4 :
  (forall x:fart [to_rep4(x)]. (of_rep4(to_rep4(x)) = x))

axiom range_axiom4 : (forall x:fart [to_rep4(x)]. in_range7(to_rep4(x)))

axiom coerce_axiom4 :
  (forall x:int [to_rep4(of_rep4(x))]. (in_range7(x) ->
  (to_rep4(of_rep4(x)) = x)))

type classt

predicate in_range8(x: int) = ((0 <= x) and (x <= 5))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq8 : classt, classt -> bool

logic dummy9 : classt

type classt__ref = { classt__content : classt
}

function classt__ref___projection(a: classt__ref) : classt =
  (a).classt__content

logic to_rep5 : classt -> int

logic of_rep5 : int -> classt

axiom inversion_axiom5 :
  (forall x:classt [to_rep5(x)]. (of_rep5(to_rep5(x)) = x))

axiom range_axiom5 : (forall x:classt [to_rep5(x)]. in_range8(to_rep5(x)))

axiom coerce_axiom5 :
  (forall x:int [to_rep5(of_rep5(x))]. (in_range8(x) ->
  (to_rep5(of_rep5(x)) = x)))

type durationt1

predicate in_range9(x: int) = ((0 <= x) and (x <= 2000))

logic bool_eq12 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq9 : durationt1, durationt1 -> bool

logic dummy10 : durationt1

type durationt__ref1 = { durationt__content1 : durationt1
}

function durationt__ref___2__projection(a: durationt__ref1) : durationt1 =
  (a).durationt__content1

type accesspolicyt

predicate in_range10(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq13 : int, int -> bool

axiom bool_eq_def11 :
  (forall x:int. forall y:int [bool_eq13(x, y)]. (((x = y) -> (bool_eq13(x,
  y) = true)) and ((not (x = y)) -> (bool_eq13(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE10 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check10 : us_image -> prop

logic attr__ATTRIBUTE_VALUE10 : us_image -> int

logic user_eq10 : accesspolicyt, accesspolicyt -> bool

logic dummy11 : accesspolicyt

type accesspolicyt__ref = { accesspolicyt__content : accesspolicyt
}

function accesspolicyt__ref___projection(a: accesspolicyt__ref) : accesspolicyt =
  (a).accesspolicyt__content

logic to_rep6 : accesspolicyt -> int

logic of_rep6 : int -> accesspolicyt

axiom inversion_axiom6 :
  (forall x:accesspolicyt [to_rep6(x)]. (of_rep6(to_rep6(x)) = x))

axiom range_axiom6 :
  (forall x:accesspolicyt [to_rep6(x)]. in_range10(to_rep6(x)))

axiom coerce_axiom6 :
  (forall x:int [to_rep6(of_rep6(x))]. (in_range10(x) ->
  (to_rep6(of_rep6(x)) = x)))

type us_split_fields = { rec__screen__displayedconfigt__latchunlock :
durationt; rec__screen__displayedconfigt__alarmsilent : durationt;
rec__screen__displayedconfigt__fingerwait : durationt;
rec__screen__displayedconfigt__tokenremove : durationt;
rec__screen__displayedconfigt__workstart : durationt;
rec__screen__displayedconfigt__workend : durationt;
rec__screen__displayedconfigt__authduration : durationt;
rec__screen__displayedconfigt__policy : accesspolicyt;
rec__screen__displayedconfigt__minpreservedlog : filesizet;
rec__screen__displayedconfigt__alarmthreshold : filesizet;
rec__screen__displayedconfigt__minentry : classt;
rec__screen__displayedconfigt__clearance : classt;
rec__screen__displayedconfigt__maxfar : fart
}

function us_split_fields_LatchUnlock__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__latchunlock

function us_split_fields_AlarmSilent__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__alarmsilent

function us_split_fields_FingerWait__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__fingerwait

function us_split_fields_TokenRemove__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__tokenremove

function us_split_fields_WorkStart__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__workstart

function us_split_fields_WorkEnd__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__workend

function us_split_fields_AuthDuration__projection(a: us_split_fields) : durationt =
  (a).rec__screen__displayedconfigt__authduration

function us_split_fields_Policy__projection(a: us_split_fields) : accesspolicyt =
  (a).rec__screen__displayedconfigt__policy

function us_split_fields_MinPreservedLog__projection(a: us_split_fields) : filesizet =
  (a).rec__screen__displayedconfigt__minpreservedlog

function us_split_fields_AlarmThreshold__projection(a: us_split_fields) : filesizet =
  (a).rec__screen__displayedconfigt__alarmthreshold

function us_split_fields_MinEntry__projection(a: us_split_fields) : classt =
  (a).rec__screen__displayedconfigt__minentry

function us_split_fields_Clearance__projection(a: us_split_fields) : classt =
  (a).rec__screen__displayedconfigt__clearance

function us_split_fields_MaxFAR__projection(a: us_split_fields) : fart =
  (a).rec__screen__displayedconfigt__maxfar

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___14__projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep = { us_split_fields1 : us_split_fields
}

function us_rep___15__projection(a: us_rep) : us_split_fields =
  (a).us_split_fields1

logic bool_eq14 : us_rep, us_rep -> bool

axiom bool_eq_def12 :
  (forall a:us_rep. forall b:us_rep [bool_eq14(a, b)].
  (((((((((((((((to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__latchunlock) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__latchunlock)) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__alarmsilent) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__alarmsilent))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__fingerwait) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__fingerwait))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__tokenremove) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__tokenremove))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__workstart) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__workstart))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__workend) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__workend))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__authduration) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__authduration))) and
  (to_rep6(((a).us_split_fields1).rec__screen__displayedconfigt__policy) = to_rep6(((b).us_split_fields1).rec__screen__displayedconfigt__policy))) and
  (to_rep2(((a).us_split_fields1).rec__screen__displayedconfigt__minpreservedlog) = to_rep2(((b).us_split_fields1).rec__screen__displayedconfigt__minpreservedlog))) and
  (to_rep2(((a).us_split_fields1).rec__screen__displayedconfigt__alarmthreshold) = to_rep2(((b).us_split_fields1).rec__screen__displayedconfigt__alarmthreshold))) and
  (to_rep5(((a).us_split_fields1).rec__screen__displayedconfigt__minentry) = to_rep5(((b).us_split_fields1).rec__screen__displayedconfigt__minentry))) and
  (to_rep5(((a).us_split_fields1).rec__screen__displayedconfigt__clearance) = to_rep5(((b).us_split_fields1).rec__screen__displayedconfigt__clearance))) and
  (to_rep4(((a).us_split_fields1).rec__screen__displayedconfigt__maxfar) = to_rep4(((b).us_split_fields1).rec__screen__displayedconfigt__maxfar))) ->
  (bool_eq14(a, b) = true)) and
  ((not (((((((((((((to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__latchunlock) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__latchunlock)) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__alarmsilent) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__alarmsilent))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__fingerwait) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__fingerwait))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__tokenremove) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__tokenremove))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__workstart) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__workstart))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__workend) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__workend))) and
  (to_rep3(((a).us_split_fields1).rec__screen__displayedconfigt__authduration) = to_rep3(((b).us_split_fields1).rec__screen__displayedconfigt__authduration))) and
  (to_rep6(((a).us_split_fields1).rec__screen__displayedconfigt__policy) = to_rep6(((b).us_split_fields1).rec__screen__displayedconfigt__policy))) and
  (to_rep2(((a).us_split_fields1).rec__screen__displayedconfigt__minpreservedlog) = to_rep2(((b).us_split_fields1).rec__screen__displayedconfigt__minpreservedlog))) and
  (to_rep2(((a).us_split_fields1).rec__screen__displayedconfigt__alarmthreshold) = to_rep2(((b).us_split_fields1).rec__screen__displayedconfigt__alarmthreshold))) and
  (to_rep5(((a).us_split_fields1).rec__screen__displayedconfigt__minentry) = to_rep5(((b).us_split_fields1).rec__screen__displayedconfigt__minentry))) and
  (to_rep5(((a).us_split_fields1).rec__screen__displayedconfigt__clearance) = to_rep5(((b).us_split_fields1).rec__screen__displayedconfigt__clearance))) and
  (to_rep4(((a).us_split_fields1).rec__screen__displayedconfigt__maxfar) = to_rep4(((b).us_split_fields1).rec__screen__displayedconfigt__maxfar)))) ->
  (bool_eq14(a, b) = false))))

logic value__size1 : int

logic object__size1 : us_rep -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:durationt. forall a1:durationt. forall a2:durationt.
  forall a3:durationt. forall a4:durationt. forall a5:durationt.
  forall a6:durationt. forall a7:accesspolicyt. forall a8:filesizet.
  forall a9:filesizet. forall a10:classt. forall a11:classt. forall a12:fart.
  (0 <= object__size1({ us_split_fields1 = {
  rec__screen__displayedconfigt__latchunlock = a;
  rec__screen__displayedconfigt__alarmsilent = a1;
  rec__screen__displayedconfigt__fingerwait = a2;
  rec__screen__displayedconfigt__tokenremove = a3;
  rec__screen__displayedconfigt__workstart = a4;
  rec__screen__displayedconfigt__workend = a5;
  rec__screen__displayedconfigt__authduration = a6;
  rec__screen__displayedconfigt__policy = a7;
  rec__screen__displayedconfigt__minpreservedlog = a8;
  rec__screen__displayedconfigt__alarmthreshold = a9;
  rec__screen__displayedconfigt__minentry = a10;
  rec__screen__displayedconfigt__clearance = a11;
  rec__screen__displayedconfigt__maxfar = a12 } })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:durationt. forall a1:durationt. forall a2:durationt.
  forall a3:durationt. forall a4:durationt. forall a5:durationt.
  forall a6:durationt. forall a7:accesspolicyt. forall a8:filesizet.
  forall a9:filesizet. forall a10:classt. forall a11:classt. forall a12:fart.
  (0 <= object__alignment1({ us_split_fields1 = {
  rec__screen__displayedconfigt__latchunlock = a;
  rec__screen__displayedconfigt__alarmsilent = a1;
  rec__screen__displayedconfigt__fingerwait = a2;
  rec__screen__displayedconfigt__tokenremove = a3;
  rec__screen__displayedconfigt__workstart = a4;
  rec__screen__displayedconfigt__workend = a5;
  rec__screen__displayedconfigt__authduration = a6;
  rec__screen__displayedconfigt__policy = a7;
  rec__screen__displayedconfigt__minpreservedlog = a8;
  rec__screen__displayedconfigt__alarmthreshold = a9;
  rec__screen__displayedconfigt__minentry = a10;
  rec__screen__displayedconfigt__clearance = a11;
  rec__screen__displayedconfigt__maxfar = a12 } })))

logic screen__displayedconfigt__latchunlock__first__bit : int

logic screen__displayedconfigt__latchunlock__last__bit : int

logic screen__displayedconfigt__latchunlock__position : int

axiom screen__displayedconfigt__latchunlock__first__bit_axiom :
  (0 <= screen__displayedconfigt__latchunlock__first__bit)

axiom screen__displayedconfigt__latchunlock__last__bit_axiom :
  (screen__displayedconfigt__latchunlock__first__bit <  screen__displayedconfigt__latchunlock__last__bit)

axiom screen__displayedconfigt__latchunlock__position_axiom :
  (0 <= screen__displayedconfigt__latchunlock__position)

logic screen__displayedconfigt__alarmsilent__first__bit : int

logic screen__displayedconfigt__alarmsilent__last__bit : int

logic screen__displayedconfigt__alarmsilent__position : int

axiom screen__displayedconfigt__alarmsilent__first__bit_axiom :
  (0 <= screen__displayedconfigt__alarmsilent__first__bit)

axiom screen__displayedconfigt__alarmsilent__last__bit_axiom :
  (screen__displayedconfigt__alarmsilent__first__bit <  screen__displayedconfigt__alarmsilent__last__bit)

axiom screen__displayedconfigt__alarmsilent__position_axiom :
  (0 <= screen__displayedconfigt__alarmsilent__position)

logic screen__displayedconfigt__fingerwait__first__bit : int

logic screen__displayedconfigt__fingerwait__last__bit : int

logic screen__displayedconfigt__fingerwait__position : int

axiom screen__displayedconfigt__fingerwait__first__bit_axiom :
  (0 <= screen__displayedconfigt__fingerwait__first__bit)

axiom screen__displayedconfigt__fingerwait__last__bit_axiom :
  (screen__displayedconfigt__fingerwait__first__bit <  screen__displayedconfigt__fingerwait__last__bit)

axiom screen__displayedconfigt__fingerwait__position_axiom :
  (0 <= screen__displayedconfigt__fingerwait__position)

logic screen__displayedconfigt__tokenremove__first__bit : int

logic screen__displayedconfigt__tokenremove__last__bit : int

logic screen__displayedconfigt__tokenremove__position : int

axiom screen__displayedconfigt__tokenremove__first__bit_axiom :
  (0 <= screen__displayedconfigt__tokenremove__first__bit)

axiom screen__displayedconfigt__tokenremove__last__bit_axiom :
  (screen__displayedconfigt__tokenremove__first__bit <  screen__displayedconfigt__tokenremove__last__bit)

axiom screen__displayedconfigt__tokenremove__position_axiom :
  (0 <= screen__displayedconfigt__tokenremove__position)

logic screen__displayedconfigt__workstart__first__bit : int

logic screen__displayedconfigt__workstart__last__bit : int

logic screen__displayedconfigt__workstart__position : int

axiom screen__displayedconfigt__workstart__first__bit_axiom :
  (0 <= screen__displayedconfigt__workstart__first__bit)

axiom screen__displayedconfigt__workstart__last__bit_axiom :
  (screen__displayedconfigt__workstart__first__bit <  screen__displayedconfigt__workstart__last__bit)

axiom screen__displayedconfigt__workstart__position_axiom :
  (0 <= screen__displayedconfigt__workstart__position)

logic screen__displayedconfigt__workend__first__bit : int

logic screen__displayedconfigt__workend__last__bit : int

logic screen__displayedconfigt__workend__position : int

axiom screen__displayedconfigt__workend__first__bit_axiom :
  (0 <= screen__displayedconfigt__workend__first__bit)

axiom screen__displayedconfigt__workend__last__bit_axiom :
  (screen__displayedconfigt__workend__first__bit <  screen__displayedconfigt__workend__last__bit)

axiom screen__displayedconfigt__workend__position_axiom :
  (0 <= screen__displayedconfigt__workend__position)

logic screen__displayedconfigt__authduration__first__bit : int

logic screen__displayedconfigt__authduration__last__bit : int

logic screen__displayedconfigt__authduration__position : int

axiom screen__displayedconfigt__authduration__first__bit_axiom :
  (0 <= screen__displayedconfigt__authduration__first__bit)

axiom screen__displayedconfigt__authduration__last__bit_axiom :
  (screen__displayedconfigt__authduration__first__bit <  screen__displayedconfigt__authduration__last__bit)

axiom screen__displayedconfigt__authduration__position_axiom :
  (0 <= screen__displayedconfigt__authduration__position)

logic screen__displayedconfigt__policy__first__bit : int

logic screen__displayedconfigt__policy__last__bit : int

logic screen__displayedconfigt__policy__position : int

axiom screen__displayedconfigt__policy__first__bit_axiom :
  (0 <= screen__displayedconfigt__policy__first__bit)

axiom screen__displayedconfigt__policy__last__bit_axiom :
  (screen__displayedconfigt__policy__first__bit <  screen__displayedconfigt__policy__last__bit)

axiom screen__displayedconfigt__policy__position_axiom :
  (0 <= screen__displayedconfigt__policy__position)

logic screen__displayedconfigt__minpreservedlog__first__bit : int

logic screen__displayedconfigt__minpreservedlog__last__bit : int

logic screen__displayedconfigt__minpreservedlog__position : int

axiom screen__displayedconfigt__minpreservedlog__first__bit_axiom :
  (0 <= screen__displayedconfigt__minpreservedlog__first__bit)

axiom screen__displayedconfigt__minpreservedlog__last__bit_axiom :
  (screen__displayedconfigt__minpreservedlog__first__bit <  screen__displayedconfigt__minpreservedlog__last__bit)

axiom screen__displayedconfigt__minpreservedlog__position_axiom :
  (0 <= screen__displayedconfigt__minpreservedlog__position)

logic screen__displayedconfigt__alarmthreshold__first__bit : int

logic screen__displayedconfigt__alarmthreshold__last__bit : int

logic screen__displayedconfigt__alarmthreshold__position : int

axiom screen__displayedconfigt__alarmthreshold__first__bit_axiom :
  (0 <= screen__displayedconfigt__alarmthreshold__first__bit)

axiom screen__displayedconfigt__alarmthreshold__last__bit_axiom :
  (screen__displayedconfigt__alarmthreshold__first__bit <  screen__displayedconfigt__alarmthreshold__last__bit)

axiom screen__displayedconfigt__alarmthreshold__position_axiom :
  (0 <= screen__displayedconfigt__alarmthreshold__position)

logic screen__displayedconfigt__minentry__first__bit : int

logic screen__displayedconfigt__minentry__last__bit : int

logic screen__displayedconfigt__minentry__position : int

axiom screen__displayedconfigt__minentry__first__bit_axiom :
  (0 <= screen__displayedconfigt__minentry__first__bit)

axiom screen__displayedconfigt__minentry__last__bit_axiom :
  (screen__displayedconfigt__minentry__first__bit <  screen__displayedconfigt__minentry__last__bit)

axiom screen__displayedconfigt__minentry__position_axiom :
  (0 <= screen__displayedconfigt__minentry__position)

logic screen__displayedconfigt__clearance__first__bit : int

logic screen__displayedconfigt__clearance__last__bit : int

logic screen__displayedconfigt__clearance__position : int

axiom screen__displayedconfigt__clearance__first__bit_axiom :
  (0 <= screen__displayedconfigt__clearance__first__bit)

axiom screen__displayedconfigt__clearance__last__bit_axiom :
  (screen__displayedconfigt__clearance__first__bit <  screen__displayedconfigt__clearance__last__bit)

axiom screen__displayedconfigt__clearance__position_axiom :
  (0 <= screen__displayedconfigt__clearance__position)

logic screen__displayedconfigt__maxfar__first__bit : int

logic screen__displayedconfigt__maxfar__last__bit : int

logic screen__displayedconfigt__maxfar__position : int

axiom screen__displayedconfigt__maxfar__first__bit_axiom :
  (0 <= screen__displayedconfigt__maxfar__first__bit)

axiom screen__displayedconfigt__maxfar__last__bit_axiom :
  (screen__displayedconfigt__maxfar__first__bit <  screen__displayedconfigt__maxfar__last__bit)

axiom screen__displayedconfigt__maxfar__position_axiom :
  (0 <= screen__displayedconfigt__maxfar__position)

logic user_eq11 : us_rep, us_rep -> bool

logic dummy12 : durationt

logic dummy13 : durationt

logic dummy14 : durationt

logic dummy15 : durationt

logic dummy16 : durationt

logic dummy17 : durationt

logic dummy18 : durationt

logic dummy19 : accesspolicyt

logic dummy20 : filesizet

logic dummy21 : filesizet

logic dummy22 : classt

logic dummy23 : classt

logic dummy24 : fart

type displayedconfigt__ref = { displayedconfigt__content : us_rep
}

function displayedconfigt__ref___projection(a: displayedconfigt__ref) : us_rep =
  (a).displayedconfigt__content

type us_split_fields2 = { rec__screen__screenconfigt__isdisplayed : bool;
rec__screen__screenconfigt__data : us_rep
}

function us_split_fields_IsDisplayed__2__projection(a: us_split_fields2) : bool =
  (a).rec__screen__screenconfigt__isdisplayed

function us_split_fields_Data__2__projection(a: us_split_fields2) : us_rep =
  (a).rec__screen__screenconfigt__data

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___15__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep1 = { us_split_fields3 : us_split_fields2
}

function us_rep___16__projection(a: us_rep1) : us_split_fields2 =
  (a).us_split_fields3

logic bool_eq15 : us_rep1, us_rep1 -> bool

axiom bool_eq_def13 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq15(a, b)].
  ((((((a).us_split_fields3).rec__screen__screenconfigt__isdisplayed = ((b).us_split_fields3).rec__screen__screenconfigt__isdisplayed) and
  (bool_eq14(((a).us_split_fields3).rec__screen__screenconfigt__data,
  ((b).us_split_fields3).rec__screen__screenconfigt__data) = true)) ->
  (bool_eq15(a, b) = true)) and
  ((not ((((a).us_split_fields3).rec__screen__screenconfigt__isdisplayed = ((b).us_split_fields3).rec__screen__screenconfigt__isdisplayed) and
  (bool_eq14(((a).us_split_fields3).rec__screen__screenconfigt__data,
  ((b).us_split_fields3).rec__screen__screenconfigt__data) = true))) ->
  (bool_eq15(a, b) = false))))

logic value__size2 : int

logic object__size2 : us_rep1 -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep1 -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:bool. forall a1:durationt. forall a2:durationt.
  forall a3:durationt. forall a4:durationt. forall a5:durationt.
  forall a6:durationt. forall a7:durationt. forall a8:accesspolicyt.
  forall a9:filesizet. forall a10:filesizet. forall a11:classt.
  forall a12:classt. forall a13:fart. (0 <= object__size2({
  us_split_fields3 = { rec__screen__screenconfigt__isdisplayed = a;
  rec__screen__screenconfigt__data = { us_split_fields1 = {
  rec__screen__displayedconfigt__latchunlock = a1;
  rec__screen__displayedconfigt__alarmsilent = a2;
  rec__screen__displayedconfigt__fingerwait = a3;
  rec__screen__displayedconfigt__tokenremove = a4;
  rec__screen__displayedconfigt__workstart = a5;
  rec__screen__displayedconfigt__workend = a6;
  rec__screen__displayedconfigt__authduration = a7;
  rec__screen__displayedconfigt__policy = a8;
  rec__screen__displayedconfigt__minpreservedlog = a9;
  rec__screen__displayedconfigt__alarmthreshold = a10;
  rec__screen__displayedconfigt__minentry = a11;
  rec__screen__displayedconfigt__clearance = a12;
  rec__screen__displayedconfigt__maxfar = a13 } } } })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:bool. forall a1:durationt. forall a2:durationt.
  forall a3:durationt. forall a4:durationt. forall a5:durationt.
  forall a6:durationt. forall a7:durationt. forall a8:accesspolicyt.
  forall a9:filesizet. forall a10:filesizet. forall a11:classt.
  forall a12:classt. forall a13:fart. (0 <= object__alignment2({
  us_split_fields3 = { rec__screen__screenconfigt__isdisplayed = a;
  rec__screen__screenconfigt__data = { us_split_fields1 = {
  rec__screen__displayedconfigt__latchunlock = a1;
  rec__screen__displayedconfigt__alarmsilent = a2;
  rec__screen__displayedconfigt__fingerwait = a3;
  rec__screen__displayedconfigt__tokenremove = a4;
  rec__screen__displayedconfigt__workstart = a5;
  rec__screen__displayedconfigt__workend = a6;
  rec__screen__displayedconfigt__authduration = a7;
  rec__screen__displayedconfigt__policy = a8;
  rec__screen__displayedconfigt__minpreservedlog = a9;
  rec__screen__displayedconfigt__alarmthreshold = a10;
  rec__screen__displayedconfigt__minentry = a11;
  rec__screen__displayedconfigt__clearance = a12;
  rec__screen__displayedconfigt__maxfar = a13 } } } })))

logic screen__screenconfigt__isdisplayed__first__bit : int

logic screen__screenconfigt__isdisplayed__last__bit : int

logic screen__screenconfigt__isdisplayed__position : int

axiom screen__screenconfigt__isdisplayed__first__bit_axiom :
  (0 <= screen__screenconfigt__isdisplayed__first__bit)

axiom screen__screenconfigt__isdisplayed__last__bit_axiom :
  (screen__screenconfigt__isdisplayed__first__bit <  screen__screenconfigt__isdisplayed__last__bit)

axiom screen__screenconfigt__isdisplayed__position_axiom :
  (0 <= screen__screenconfigt__isdisplayed__position)

logic screen__screenconfigt__data__first__bit : int

logic screen__screenconfigt__data__last__bit : int

logic screen__screenconfigt__data__position : int

axiom screen__screenconfigt__data__first__bit_axiom :
  (0 <= screen__screenconfigt__data__first__bit)

axiom screen__screenconfigt__data__last__bit_axiom :
  (screen__screenconfigt__data__first__bit <  screen__screenconfigt__data__last__bit)

axiom screen__screenconfigt__data__position_axiom :
  (0 <= screen__screenconfigt__data__position)

logic user_eq12 : us_rep1, us_rep1 -> bool

logic dummy25 : bool

logic dummy26 : durationt

logic dummy27 : durationt

logic dummy28 : durationt

logic dummy29 : durationt

logic dummy30 : durationt

logic dummy31 : durationt

logic dummy32 : durationt

logic dummy33 : accesspolicyt

logic dummy34 : filesizet

logic dummy35 : filesizet

logic dummy36 : classt

logic dummy37 : classt

logic dummy38 : fart

type screenconfigt__ref = { screenconfigt__content : us_rep1
}

function screenconfigt__ref___projection(a: screenconfigt__ref) : us_rep1 =
  (a).screenconfigt__content

logic attr__ATTRIBUTE_ADDRESS : int

type screenxcoordt

predicate in_range11(x: int) = ((0 <= x) and (x <= 79))

logic bool_eq16 : int, int -> bool

axiom bool_eq_def14 :
  (forall x:int. forall y:int [bool_eq16(x, y)]. (((x = y) -> (bool_eq16(x,
  y) = true)) and ((not (x = y)) -> (bool_eq16(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE11 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check11 : us_image -> prop

logic attr__ATTRIBUTE_VALUE11 : us_image -> int

logic user_eq13 : screenxcoordt, screenxcoordt -> bool

logic dummy39 : screenxcoordt

type screenxcoordt__ref = { screenxcoordt__content : screenxcoordt
}

function screenxcoordt__ref___projection(a: screenxcoordt__ref) : screenxcoordt =
  (a).screenxcoordt__content

logic to_rep7 : screenxcoordt -> int

logic of_rep7 : int -> screenxcoordt

axiom inversion_axiom7 :
  (forall x:screenxcoordt [to_rep7(x)]. (of_rep7(to_rep7(x)) = x))

axiom range_axiom7 :
  (forall x:screenxcoordt [to_rep7(x)]. in_range11(to_rep7(x)))

axiom coerce_axiom7 :
  (forall x:int [to_rep7(of_rep7(x))]. (in_range11(x) ->
  (to_rep7(of_rep7(x)) = x)))

type screenycoordt

predicate in_range12(x: int) = ((0 <= x) and (x <= 29))

logic bool_eq17 : int, int -> bool

axiom bool_eq_def15 :
  (forall x:int. forall y:int [bool_eq17(x, y)]. (((x = y) -> (bool_eq17(x,
  y) = true)) and ((not (x = y)) -> (bool_eq17(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE12 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check12 : us_image -> prop

logic attr__ATTRIBUTE_VALUE12 : us_image -> int

logic user_eq14 : screenycoordt, screenycoordt -> bool

logic dummy40 : screenycoordt

type screenycoordt__ref = { screenycoordt__content : screenycoordt
}

function screenycoordt__ref___projection(a: screenycoordt__ref) : screenycoordt =
  (a).screenycoordt__content

logic to_rep8 : screenycoordt -> int

logic of_rep8 : int -> screenycoordt

axiom inversion_axiom8 :
  (forall x:screenycoordt [to_rep8(x)]. (of_rep8(to_rep8(x)) = x))

axiom range_axiom8 :
  (forall x:screenycoordt [to_rep8(x)]. in_range12(to_rep8(x)))

axiom coerce_axiom8 :
  (forall x:int [to_rep8(of_rep8(x))]. (in_range12(x) ->
  (to_rep8(of_rep8(x)) = x)))

type us_split_fields4 = { rec__screen__interfac__xycoordt__x : screenxcoordt;
rec__screen__interfac__xycoordt__y : screenycoordt
}

function us_split_fields_X__projection(a: us_split_fields4) : screenxcoordt =
  (a).rec__screen__interfac__xycoordt__x

function us_split_fields_Y__projection(a: us_split_fields4) : screenycoordt =
  (a).rec__screen__interfac__xycoordt__y

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___12__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep2 = { us_split_fields5 : us_split_fields4
}

function us_rep___13__projection(a: us_rep2) : us_split_fields4 =
  (a).us_split_fields5

logic bool_eq18 : us_rep2, us_rep2 -> bool

axiom bool_eq_def16 :
  (forall a:us_rep2. forall b:us_rep2 [bool_eq18(a, b)].
  ((((to_rep7(((a).us_split_fields5).rec__screen__interfac__xycoordt__x) = to_rep7(((b).us_split_fields5).rec__screen__interfac__xycoordt__x)) and
  (to_rep8(((a).us_split_fields5).rec__screen__interfac__xycoordt__y) = to_rep8(((b).us_split_fields5).rec__screen__interfac__xycoordt__y))) ->
  (bool_eq18(a, b) = true)) and
  ((not ((to_rep7(((a).us_split_fields5).rec__screen__interfac__xycoordt__x) = to_rep7(((b).us_split_fields5).rec__screen__interfac__xycoordt__x)) and
  (to_rep8(((a).us_split_fields5).rec__screen__interfac__xycoordt__y) = to_rep8(((b).us_split_fields5).rec__screen__interfac__xycoordt__y)))) ->
  (bool_eq18(a, b) = false))))

logic value__size3 : int

logic object__size3 : us_rep2 -> int

logic value__alignment3 : int

logic object__alignment3 : us_rep2 -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:screenxcoordt. forall a1:screenycoordt. (0 <= object__size3({
  us_split_fields5 = { rec__screen__interfac__xycoordt__x = a;
  rec__screen__interfac__xycoordt__y = a1 } })))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:screenxcoordt. forall a1:screenycoordt.
  (0 <= object__alignment3({ us_split_fields5 = {
  rec__screen__interfac__xycoordt__x = a;
  rec__screen__interfac__xycoordt__y = a1 } })))

logic screen__interfac__xycoordt__x__first__bit : int

logic screen__interfac__xycoordt__x__last__bit : int

logic screen__interfac__xycoordt__x__position : int

axiom screen__interfac__xycoordt__x__first__bit_axiom :
  (0 <= screen__interfac__xycoordt__x__first__bit)

axiom screen__interfac__xycoordt__x__last__bit_axiom :
  (screen__interfac__xycoordt__x__first__bit <  screen__interfac__xycoordt__x__last__bit)

axiom screen__interfac__xycoordt__x__position_axiom :
  (0 <= screen__interfac__xycoordt__x__position)

logic screen__interfac__xycoordt__y__first__bit : int

logic screen__interfac__xycoordt__y__last__bit : int

logic screen__interfac__xycoordt__y__position : int

axiom screen__interfac__xycoordt__y__first__bit_axiom :
  (0 <= screen__interfac__xycoordt__y__first__bit)

axiom screen__interfac__xycoordt__y__last__bit_axiom :
  (screen__interfac__xycoordt__y__first__bit <  screen__interfac__xycoordt__y__last__bit)

axiom screen__interfac__xycoordt__y__position_axiom :
  (0 <= screen__interfac__xycoordt__y__position)

logic user_eq15 : us_rep2, us_rep2 -> bool

logic dummy41 : screenxcoordt

logic dummy42 : screenycoordt

type xycoordt__ref = { xycoordt__content : us_rep2
}

function xycoordt__ref___projection(a: xycoordt__ref) : us_rep2 =
  (a).xycoordt__content

type secondsstringi

predicate in_range13(x: int) = ((1 <= x) and (x <= 7))

logic bool_eq19 : int, int -> bool

axiom bool_eq_def17 :
  (forall x:int. forall y:int [bool_eq19(x, y)]. (((x = y) -> (bool_eq19(x,
  y) = true)) and ((not (x = y)) -> (bool_eq19(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE13 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check13 : us_image -> prop

logic attr__ATTRIBUTE_VALUE13 : us_image -> int

logic user_eq16 : secondsstringi, secondsstringi -> bool

logic dummy43 : secondsstringi

type secondsstringi__ref = { secondsstringi__content : secondsstringi
}

function secondsstringi__ref___projection(a: secondsstringi__ref) : secondsstringi =
  (a).secondsstringi__content

type hrsminsstringi

predicate in_range14(x: int) = ((1 <= x) and (x <= 5))

logic bool_eq20 : int, int -> bool

axiom bool_eq_def18 :
  (forall x:int. forall y:int [bool_eq20(x, y)]. (((x = y) -> (bool_eq20(x,
  y) = true)) and ((not (x = y)) -> (bool_eq20(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE14 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check14 : us_image -> prop

logic attr__ATTRIBUTE_VALUE14 : us_image -> int

logic user_eq17 : hrsminsstringi, hrsminsstringi -> bool

logic dummy44 : hrsminsstringi

type hrsminsstringi__ref = { hrsminsstringi__content : hrsminsstringi
}

function hrsminsstringi__ref___projection(a: hrsminsstringi__ref) : hrsminsstringi =
  (a).hrsminsstringi__content

type classstringi

predicate in_range15(x: int) = ((1 <= x) and (x <= 12))

logic bool_eq21 : int, int -> bool

axiom bool_eq_def19 :
  (forall x:int. forall y:int [bool_eq21(x, y)]. (((x = y) -> (bool_eq21(x,
  y) = true)) and ((not (x = y)) -> (bool_eq21(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE15 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check15 : us_image -> prop

logic attr__ATTRIBUTE_VALUE15 : us_image -> int

logic user_eq18 : classstringi, classstringi -> bool

logic dummy45 : classstringi

type classstringi__ref = { classstringi__content : classstringi
}

function classstringi__ref___projection(a: classstringi__ref) : classstringi =
  (a).classstringi__content

type filesizestringi

predicate in_range16(x: int) = ((1 <= x) and (x <= 15))

logic bool_eq22 : int, int -> bool

axiom bool_eq_def20 :
  (forall x:int. forall y:int [bool_eq22(x, y)]. (((x = y) -> (bool_eq22(x,
  y) = true)) and ((not (x = y)) -> (bool_eq22(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE16 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check16 : us_image -> prop

logic attr__ATTRIBUTE_VALUE16 : us_image -> int

logic user_eq19 : filesizestringi, filesizestringi -> bool

logic dummy46 : filesizestringi

type filesizestringi__ref = { filesizestringi__content : filesizestringi
}

function filesizestringi__ref___projection(a: filesizestringi__ref) : filesizestringi =
  (a).filesizestringi__content

type accesspolicystringi

predicate in_range17(x: int) = ((1 <= x) and (x <= 12))

logic bool_eq23 : int, int -> bool

axiom bool_eq_def21 :
  (forall x:int. forall y:int [bool_eq23(x, y)]. (((x = y) -> (bool_eq23(x,
  y) = true)) and ((not (x = y)) -> (bool_eq23(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE17 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check17 : us_image -> prop

logic attr__ATTRIBUTE_VALUE17 : us_image -> int

logic user_eq20 : accesspolicystringi, accesspolicystringi -> bool

logic dummy47 : accesspolicystringi

type accesspolicystringi__ref = { accesspolicystringi__content :
accesspolicystringi
}

function accesspolicystringi__ref___projection(a: accesspolicystringi__ref) : accesspolicystringi =
  (a).accesspolicystringi__content

logic attr__ATTRIBUTE_ADDRESS1 : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

logic attr__ATTRIBUTE_ADDRESS7 : int

logic attr__ATTRIBUTE_ADDRESS8 : int

logic attr__ATTRIBUTE_ADDRESS9 : int

logic attr__ATTRIBUTE_ADDRESS10 : int

logic attr__ATTRIBUTE_ADDRESS11 : int

logic attr__ATTRIBUTE_ADDRESS12 : int

logic attr__ATTRIBUTE_ADDRESS13 : int

logic attr__ATTRIBUTE_ADDRESS14 : int

logic attr__ATTRIBUTE_ADDRESS15 : int

logic attr__ATTRIBUTE_ADDRESS16 : int

logic column1 : int

logic attr__ATTRIBUTE_ADDRESS17 : int

logic column2 : int

logic attr__ATTRIBUTE_ADDRESS18 : int

logic row1 : int

logic attr__ATTRIBUTE_ADDRESS19 : int

logic row2 : int

logic attr__ATTRIBUTE_ADDRESS20 : int

logic row3 : int

logic attr__ATTRIBUTE_ADDRESS21 : int

logic row4 : int

logic attr__ATTRIBUTE_ADDRESS22 : int

logic row5 : int

logic attr__ATTRIBUTE_ADDRESS23 : int

logic row6 : int

logic attr__ATTRIBUTE_ADDRESS24 : int

logic row7 : int

logic attr__ATTRIBUTE_ADDRESS25 : int

logic secondsstring : int -> (int,character) farray

logic secondsstring__function_guard : (int,character) farray, int -> prop

axiom secondsstring__post_axiom : true

logic filesizestring : int -> (int,character) farray

logic filesizestring__function_guard : (int,character) farray, int -> prop

axiom filesizestring__post_axiom : true

logic accesspolicystring : int -> (int,character) farray

logic accesspolicystring__function_guard : (int,character) farray,
  int -> prop

axiom accesspolicystring__post_axiom : true

logic classstring : int -> (int,character) farray

logic classstring__function_guard : (int,character) farray, int -> prop

axiom classstring__post_axiom : true

logic farstring : int -> (int,character) farray

logic farstring__function_guard : (int,character) farray, int -> prop

axiom farstring__post_axiom : true

logic c111b : int

logic attr__ATTRIBUTE_ADDRESS26 : int

logic attr__ATTRIBUTE_ADDRESS27 : int

logic c117b : int

logic attr__ATTRIBUTE_ADDRESS28 : int

logic attr__ATTRIBUTE_ADDRESS29 : int

logic c123b : int

logic attr__ATTRIBUTE_ADDRESS30 : int

logic attr__ATTRIBUTE_ADDRESS31 : int

axiom column1__def_axiom : (column1 = 25)

axiom column2__def_axiom : (column2 = 63)

axiom row1__def_axiom : (row1 = 9)

axiom row2__def_axiom : (row2 = 10)

axiom row3__def_axiom : (row3 = 12)

axiom row4__def_axiom : (row4 = 13)

axiom row5__def_axiom : (row5 = 15)

axiom row6__def_axiom : (row6 = 16)

axiom row7__def_axiom : (row7 = 18)

 (* File "screen.adb", line 280, characters 0-0 *)
goal WP_parameter_def :
  (forall currentconfig__split_fields:bool.
  forall currentconfig__split_fields1:durationt.
  forall currentconfig__split_fields2:durationt.
  forall currentconfig__split_fields3:durationt.
  forall currentconfig__split_fields4:durationt.
  forall currentconfig__split_fields5:durationt.
  forall currentconfig__split_fields6:durationt.
  forall currentconfig__split_fields7:durationt.
  forall currentconfig__split_fields8:accesspolicyt.
  forall currentconfig__split_fields9:filesizet.
  forall currentconfig__split_fields10:filesizet.
  forall currentconfig__split_fields11:classt.
  forall currentconfig__split_fields12:classt.
  forall currentconfig__split_fields13:fart. forall latchunlock:int.
  forall alarmsilent:int. forall fingerwait:int. forall tokenremove:int.
  forall workstart:int. forall workend:int. forall authduration:int.
  forall policy:int. forall minpreservedlog:int. forall alarmthreshold:int.
  forall minentry:int. forall clearance:int. forall maxfar:int.
  forall newconfig__split_fields:durationt.
  forall newconfig__split_fields1:durationt.
  forall newconfig__split_fields2:durationt.
  forall newconfig__split_fields3:durationt.
  forall newconfig__split_fields4:durationt.
  forall newconfig__split_fields5:durationt.
  forall newconfig__split_fields6:durationt.
  forall newconfig__split_fields7:accesspolicyt.
  forall newconfig__split_fields8:filesizet.
  forall newconfig__split_fields9:filesizet.
  forall newconfig__split_fields10:classt.
  forall newconfig__split_fields11:classt.
  forall newconfig__split_fields12:fart. forall o:fart. forall o1:classt.
  forall o2:classt. forall o3:filesizet. forall o4:filesizet.
  forall o5:accesspolicyt. forall o6:durationt. forall o7:durationt.
  forall o8:durationt. forall o9:durationt. forall o10:durationt.
  forall o11:durationt. forall o12:durationt. forall o13:durationt.
  forall o14:durationt. forall o15:durationt. forall o16:durationt.
  forall o17:durationt. forall o18:durationt. forall o19:durationt.
  forall o20:accesspolicyt. forall o21:filesizet. forall o22:filesizet.
  forall o23:classt. forall o24:classt. forall o25:fart.
  forall temp___1968:durationt. forall temp___19681:durationt.
  forall temp___19682:durationt. forall temp___19683:durationt.
  forall temp___19684:durationt. forall temp___19685:durationt.
  forall temp___19686:durationt. forall temp___19687:accesspolicyt.
  forall temp___19688:filesizet. forall temp___19689:filesizet.
  forall temp___196810:classt. forall temp___196811:classt.
  forall temp___196812:fart. forall o26:int.
  forall o27:(int,character) farray. forall o28:(int,character) farray.
  forall o29:t. forall o30:screenycoordt. forall o31:screenxcoordt.
  forall o32:screenxcoordt. forall o33:screenycoordt.
  forall o34:screenxcoordt. forall o35:screenycoordt. forall o36:int.
  forall o37:(int,character) farray. forall o38:(int,character) farray.
  forall o39:t. forall o40:screenycoordt. forall o41:screenxcoordt.
  forall o42:screenxcoordt. forall o43:screenycoordt.
  forall o44:screenxcoordt. forall o45:screenycoordt. forall o46:int.
  forall o47:(int,character) farray. forall o48:(int,character) farray.
  forall o49:t. forall o50:screenycoordt. forall o51:screenxcoordt.
  forall o52:screenxcoordt. forall o53:screenycoordt.
  forall o54:screenxcoordt. forall o55:screenycoordt. forall o56:int.
  forall o57:(int,character) farray. forall o58:(int,character) farray.
  forall o59:t. forall o60:screenycoordt. forall o61:screenxcoordt.
  forall o62:screenxcoordt. forall o63:screenycoordt.
  forall o64:screenxcoordt. forall o65:screenycoordt.
  forall o66:(int,character) farray. forall o67:us_t.
  forall o68:screenycoordt. forall o69:screenxcoordt.
  forall o70:us_split_fields4. forall o71:us_rep2.
  forall temp___1971:(int,character) farray. forall workstart1:int.
  forall workend1:int. forall authduration1:int. forall policy1:int.
  forall minpreservedlog1:int. forall alarmthreshold1:int.
  forall minentry1:int. forall clearance1:int. forall maxfar1:int.
  forall configdata__thedisplayfields__thetokenremovalduration:int.
  forall configdata__thedisplayfields__thefingerwaitduration:int.
  forall configdata__thedisplayfields__thealarmsilentduration:int.
  forall configdata__thedisplayfields__thelatchunlockduration:int.
  forall result:int__ref. forall latchunlock1:int. forall result1:int__ref.
  forall alarmsilent1:int. forall result2:int__ref. forall fingerwait1:int.
  forall result3:int__ref. forall tokenremove1:int.
  forall result4:us_split_fields__ref.
  forall newconfig__split_fields13:us_split_fields. forall ok:bool.
  forall consoleok:bool. forall result5:bool__ref. forall ok1:bool.
  forall consoleok1:bool. forall result6:bool__ref. forall ok2:bool.
  forall consoleok2:bool. forall result7:bool__ref. forall ok3:bool.
  forall consoleok3:bool. forall result8:bool__ref. forall ok4:bool.
  forall consoleok4:bool. forall result9:bool__ref. forall ok5:bool.
  forall consoleok5:bool. forall result10:bool__ref. forall ok6:bool.
  (((0 <= 864000) -> in_range5(latchunlock)) -> (((0 <= 864000) ->
  in_range5(alarmsilent)) -> (((0 <= 864000) -> in_range5(fingerwait)) ->
  (((0 <= 864000) -> in_range5(tokenremove)) -> (((0 <= 864000) ->
  in_range5(workstart)) -> (((0 <= 864000) -> in_range5(workend)) ->
  (((0 <= 864000) -> in_range5(authduration)) -> (((0 <= 1) ->
  in_range10(policy)) -> (((0 <= 4194304) -> in_range4(minpreservedlog)) ->
  (((0 <= 4194304) -> in_range4(alarmthreshold)) -> (((0 <= 5) ->
  in_range8(minentry)) -> (((0 <= 5) -> in_range8(clearance)) ->
  (((0 <= 2147483647) -> in_range7(maxfar)) -> (in_range11(column1) ->
  (in_range11(column2) -> (in_range12(row1) -> (in_range12(row2) ->
  (in_range12(row3) -> (in_range12(row4) -> (in_range12(row5) ->
  (in_range12(row6) -> (in_range12(row7) ->
  ((((((((((((((in_range9(configdata__thedisplayfields__thelatchunlockduration) and
  in_range9(configdata__thedisplayfields__thealarmsilentduration)) and
  in_range9(configdata__thedisplayfields__thefingerwaitduration)) and
  in_range9(configdata__thedisplayfields__thetokenremovalduration)) and
  in_range8(clearance1)) and in_range5(workstart1)) and
  in_range5(workend1)) and in_range5(authduration1)) and
  in_range10(policy1)) and in_range8(minentry1)) and
  in_range4(minpreservedlog1)) and in_range4(alarmthreshold1)) and
  in_range7(maxfar1)) and (((result = { int__content = latchunlock }) and
  (latchunlock1 = configdata__thedisplayfields__thelatchunlockduration)) and
  (((result1 = { int__content = alarmsilent }) and
  (alarmsilent1 = configdata__thedisplayfields__thealarmsilentduration)) and
  (((result2 = { int__content = fingerwait }) and
  (fingerwait1 = configdata__thedisplayfields__thefingerwaitduration)) and
  ((result3 = { int__content = tokenremove }) and
  (tokenremove1 = configdata__thedisplayfields__thetokenremovalduration)))))) ->
  (((((to_rep4(o) = maxfar1) and ((to_rep5(o1) = clearance1) and
  ((to_rep5(o2) = minentry1) and ((to_rep2(o3) = alarmthreshold1) and
  ((to_rep2(o4) = minpreservedlog1) and ((to_rep6(o5) = policy1) and
  ((to_rep3(o6) = authduration1) and ((to_rep3(o7) = workend1) and
  ((to_rep3(o8) = workstart1) and ((to_rep3(o9) = tokenremove1) and
  ((to_rep3(o10) = fingerwait1) and ((to_rep3(o11) = alarmsilent1) and
  ((to_rep3(o12) = latchunlock1) and ((o12 = o13) and ((o11 = o14) and
  ((o10 = o15) and ((o9 = o16) and ((o8 = o17) and ((o7 = o18) and
  ((o6 = o19) and ((o5 = o20) and ((o4 = o21) and ((o3 = o22) and
  ((o2 = o23) and ((o1 = o24) and (o = o25)))))))))))))))))))))))))) and
  ((temp___1968 = o13) and ((temp___19681 = o14) and
  ((temp___19682 = o15) and ((temp___19683 = o16) and
  ((temp___19684 = o17) and ((temp___19685 = o18) and
  ((temp___19686 = o19) and ((temp___19687 = o20) and
  ((temp___19688 = o21) and ((temp___19689 = o22) and
  ((temp___196810 = o23) and ((temp___196811 = o24) and
  (temp___196812 = o25)))))))))))))) and ((result4 = {
  us_split_fields__content = { rec__screen__displayedconfigt__latchunlock =
  newconfig__split_fields; rec__screen__displayedconfigt__alarmsilent =
  newconfig__split_fields1; rec__screen__displayedconfigt__fingerwait =
  newconfig__split_fields2; rec__screen__displayedconfigt__tokenremove =
  newconfig__split_fields3; rec__screen__displayedconfigt__workstart =
  newconfig__split_fields4; rec__screen__displayedconfigt__workend =
  newconfig__split_fields5; rec__screen__displayedconfigt__authduration =
  newconfig__split_fields6; rec__screen__displayedconfigt__policy =
  newconfig__split_fields7; rec__screen__displayedconfigt__minpreservedlog =
  newconfig__split_fields8; rec__screen__displayedconfigt__alarmthreshold =
  newconfig__split_fields9; rec__screen__displayedconfigt__minentry =
  newconfig__split_fields10; rec__screen__displayedconfigt__clearance =
  newconfig__split_fields11; rec__screen__displayedconfigt__maxfar =
  newconfig__split_fields12 } }) and (newconfig__split_fields13 = {
  rec__screen__displayedconfigt__latchunlock = temp___1968;
  rec__screen__displayedconfigt__alarmsilent = temp___19681;
  rec__screen__displayedconfigt__fingerwait = temp___19682;
  rec__screen__displayedconfigt__tokenremove = temp___19683;
  rec__screen__displayedconfigt__workstart = temp___19684;
  rec__screen__displayedconfigt__workend = temp___19685;
  rec__screen__displayedconfigt__authduration = temp___19686;
  rec__screen__displayedconfigt__policy = temp___19687;
  rec__screen__displayedconfigt__minpreservedlog = temp___19688;
  rec__screen__displayedconfigt__alarmthreshold = temp___19689;
  rec__screen__displayedconfigt__minentry = temp___196810;
  rec__screen__displayedconfigt__clearance = temp___196811;
  rec__screen__displayedconfigt__maxfar = temp___196812 }))) ->
  (((currentconfig__split_fields = true) -> (not (bool_eq14({
  us_split_fields1 = { rec__screen__displayedconfigt__latchunlock =
  currentconfig__split_fields1; rec__screen__displayedconfigt__alarmsilent =
  currentconfig__split_fields2; rec__screen__displayedconfigt__fingerwait =
  currentconfig__split_fields3; rec__screen__displayedconfigt__tokenremove =
  currentconfig__split_fields4; rec__screen__displayedconfigt__workstart =
  currentconfig__split_fields5; rec__screen__displayedconfigt__workend =
  currentconfig__split_fields6; rec__screen__displayedconfigt__authduration =
  currentconfig__split_fields7; rec__screen__displayedconfigt__policy =
  currentconfig__split_fields8;
  rec__screen__displayedconfigt__minpreservedlog =
  currentconfig__split_fields9;
  rec__screen__displayedconfigt__alarmthreshold =
  currentconfig__split_fields10; rec__screen__displayedconfigt__minentry =
  currentconfig__split_fields11; rec__screen__displayedconfigt__clearance =
  currentconfig__split_fields12; rec__screen__displayedconfigt__maxfar =
  currentconfig__split_fields13 } }, { us_split_fields1 =
  newconfig__split_fields13 }) = true))) -> (((result5 = { bool__content = ok
  }) and (ok1 = match_bool(ok, consoleok, false))) ->
  (((((to_rep8(o30) = 9) and ((to_rep7(o31) = 25) and ((o31 = o32) and
  (o30 = o33)))) and ((o34 = o32) and (o35 = o33))) and
  ((((o26 = latchunlock1) and in_range9(latchunlock1)) and
  (o27 = secondsstring(o26))) and ((o28 = o27) and (o29 = mk(1, 7))))) ->
  (((result6 = { bool__content = ok1 }) and (ok2 = match_bool(ok1,
  consoleok1, false))) -> (((((to_rep8(o40) = 10) and
  ((to_rep7(o41) = 25) and ((o41 = o42) and (o40 = o43)))) and
  ((o44 = o42) and (o45 = o43))) and ((((o36 = alarmsilent1) and
  in_range9(alarmsilent1)) and (o37 = secondsstring(o36))) and
  ((o38 = o37) and (o39 = mk(1, 7))))) -> (((result7 = { bool__content = ok2
  }) and (ok3 = match_bool(ok2, consoleok2, false))) ->
  (((((to_rep8(o50) = 9) and ((to_rep7(o51) = 63) and ((o51 = o52) and
  (o50 = o53)))) and ((o54 = o52) and (o55 = o53))) and
  ((((o46 = fingerwait1) and in_range9(fingerwait1)) and
  (o47 = secondsstring(o46))) and ((o48 = o47) and (o49 = mk(1, 7))))) ->
  (((result8 = { bool__content = ok3 }) and (ok4 = match_bool(ok3,
  consoleok3, false))) -> (((((to_rep8(o60) = 10) and
  ((to_rep7(o61) = 63) and ((o61 = o62) and (o60 = o63)))) and
  ((o64 = o62) and (o65 = o63))) and ((((o56 = tokenremove1) and
  in_range9(tokenremove1)) and (o57 = secondsstring(o56))) and
  ((o58 = o57) and (o59 = mk(1, 7))))) -> (((result9 = { bool__content = ok4
  }) and (ok5 = match_bool(ok4, consoleok4, false))) ->
  (((((to_rep8(o68) = 12) and ((to_rep7(o69) = 25) and (o70 = {
  rec__screen__interfac__xycoordt__x = o69;
  rec__screen__interfac__xycoordt__y = o68 }))) and (o71 = {
  us_split_fields5 = o70 })) and ((o66 = accesspolicystring(policy1)) and
  (o67 = { elts = o66; rt = mk(1, 12) }))) -> (((result10 = { bool__content =
  ok5 }) and (ok6 = match_bool(ok5, consoleok5, false))) ->
  (((workstart1 = c111b) and in_range5(c111b)) ->
  ((temp___1971 = printduration(c111b)) -> ((1 <= 5) ->
  (1 <= 1)))))))))))))))))))))))))))))))))))))))))
