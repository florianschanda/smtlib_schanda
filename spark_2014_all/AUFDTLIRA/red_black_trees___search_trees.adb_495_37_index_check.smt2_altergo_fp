(* this is the prelude for Alt-Ergo, version >= 0.95.2 *)
(* this is a prelude for Alt-Ergo integer arithmetic *)
logic match_bool : bool, 'a, 'a -> 'a

axiom match_bool_True :
  (forall z:'a. forall z1:'a. (match_bool(true, z, z1) = z))

axiom match_bool_False :
  (forall z:'a. forall z1:'a. (match_bool(false, z, z1) = z1))

function andb(x: bool, y: bool) : bool = match_bool(x, y, false)

function orb(x: bool, y: bool) : bool = match_bool(x, true, y)

function notb(x: bool) : bool = match_bool(x, false, true)

function xorb(x: bool, y: bool) : bool = match_bool(x, notb(y), y)

function implb(x: bool, y: bool) : bool = match_bool(x, y, true)

type us_private

logic private__bool_eq : us_private, us_private -> bool

logic us_null_ext__ : us_private

type us_type_of_heap

type us_type_of_heap__ref = { us_type_of_heap__content : us_type_of_heap
}

type us_image

type int__ref = { int__content : int }

type bool__ref = { bool__content : bool }

type real__ref = { real__content : real }

type us_private__ref = { us_private__content : us_private
}

function int__ref___projection(a: int__ref) : int = (a).int__content

function bool__ref___projection(a: bool__ref) : bool = (a).bool__content

function real__ref___projection(a: real__ref) : real = (a).real__content

function us_private__ref___projection(a: us_private__ref) : us_private =
  (a).us_private__content

function ite(b: bool, x: 'a, y: 'a) : 'a = match_bool(b, x, y)

logic to_int : bool -> int

axiom to_int_def :
  (forall b:bool [to_int(b)]. (((b = true) -> (to_int(b) = 1)) and
  ((not (b = true)) -> (to_int(b) = 0))))

logic of_int : int -> bool

axiom of_int_def :
  (forall i:int [of_int(i)]. (((i = 0) -> (of_int(i) = false)) and
  ((not (i = 0)) -> (of_int(i) = true))))

logic bool_eq : bool, bool -> bool

axiom bool_eq_def :
  (forall x:bool. forall y:bool [bool_eq(x, y)]. (((x = y) -> (bool_eq(x,
  y) = true)) and ((not (x = y)) -> (bool_eq(x, y) = false))))

predicate in_range(x: int) = ((x = 0) or (x = 1))

logic attr__ATTRIBUTE_IMAGE : bool -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check : us_image -> prop

logic attr__ATTRIBUTE_VALUE : us_image -> bool

type natural

predicate in_range1(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq1 : int, int -> bool

logic bool_ne : int, int -> bool

logic bool_lt : int, int -> bool

logic bool_le : int, int -> bool

logic bool_gt : int, int -> bool

logic bool_ge : int, int -> bool

axiom bool_eq_axiom :
  (forall x:int. (forall y:int. ((bool_eq1(x, y) = true) <-> (x = y))))

axiom bool_ne_axiom :
  (forall x:int. (forall y:int. ((bool_ne(x, y) = true) <-> (not (x = y)))))

axiom bool_lt_axiom :
  (forall x:int. (forall y:int. ((bool_lt(x, y) = true) <-> (x <  y))))

axiom bool_int__le_axiom :
  (forall x:int. (forall y:int. ((bool_le(x, y) = true) <-> (x <= y))))

axiom bool_gt_axiom :
  (forall x:int. (forall y:int. ((bool_gt(x, y) = true) <-> (y <  x))))

axiom bool_ge_axiom :
  (forall x:int. (forall y:int. ((bool_ge(x, y) = true) <-> (y <= x))))

logic bool_eq2 : int, int -> bool

axiom bool_eq_def1 :
  (forall x:int. forall y:int [bool_eq2(x, y)]. (((x = y) -> (bool_eq2(x,
  y) = true)) and ((not (x = y)) -> (bool_eq2(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE1 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check1 : us_image -> prop

logic attr__ATTRIBUTE_VALUE1 : us_image -> int

logic user_eq : natural, natural -> bool

logic dummy : natural

type natural__ref = { natural__content : natural
}

function natural__ref___projection(a: natural__ref) : natural =
  (a).natural__content

logic to_rep : natural -> int

logic of_rep : int -> natural

axiom inversion_axiom :
  (forall x:natural [to_rep(x)]. (of_rep(to_rep(x)) = x))

axiom range_axiom : (forall x:natural [to_rep(x)]. in_range1(to_rep(x)))

axiom coerce_axiom :
  (forall x:int [to_rep(of_rep(x))]. (in_range1(x) ->
  (to_rep(of_rep(x)) = x)))

type tcount_typeB

predicate in_range2(x: int) = (((- 2147483648) <= x) and (x <= 2147483647))

logic bool_eq3 : int, int -> bool

axiom bool_eq_def2 :
  (forall x:int. forall y:int [bool_eq3(x, y)]. (((x = y) -> (bool_eq3(x,
  y) = true)) and ((not (x = y)) -> (bool_eq3(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE2 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check2 : us_image -> prop

logic attr__ATTRIBUTE_VALUE2 : us_image -> int

logic user_eq1 : tcount_typeB, tcount_typeB -> bool

logic dummy1 : tcount_typeB

type tcount_typeB__ref = { tcount_typeB__content : tcount_typeB
}

function tcount_typeB__ref___projection(a: tcount_typeB__ref) : tcount_typeB =
  (a).tcount_typeB__content

type index_type

predicate in_range3(x: int) = ((1 <= x) and (x <= 100))

logic bool_eq4 : int, int -> bool

axiom bool_eq_def3 :
  (forall x:int. forall y:int [bool_eq4(x, y)]. (((x = y) -> (bool_eq4(x,
  y) = true)) and ((not (x = y)) -> (bool_eq4(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE3 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check3 : us_image -> prop

logic attr__ATTRIBUTE_VALUE3 : us_image -> int

logic user_eq2 : index_type, index_type -> bool

logic dummy2 : index_type

type index_type__ref = { index_type__content : index_type
}

function index_type__ref___projection(a: index_type__ref) : index_type =
  (a).index_type__content

type us_main_type

logic us_main_eq : us_main_type, us_main_type -> bool

type us_rep

logic bool_eq5 : us_rep, us_rep -> bool

logic value__size : int

logic object__size : us_rep -> int

logic value__alignment : int

logic object__alignment : us_rep -> int

axiom value__size_axiom : (0 <= value__size)

axiom object__size_axiom : (forall a:us_rep. (0 <= object__size(a)))

axiom value__alignment_axiom : (0 <= value__alignment)

axiom object__alignment_axiom :
  (forall a:us_rep. (0 <= object__alignment(a)))

logic user_eq3 : us_rep, us_rep -> bool

logic dummy3 : us_rep

type sequence__ref = { sequence__content : us_rep
}

function sequence__ref___projection(a: sequence__ref) : us_rep =
  (a).sequence__content

logic length : us_rep -> int

logic length__function_guard : int, us_rep -> prop

type count_type

predicate in_range4(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq6 : int, int -> bool

axiom bool_eq_def4 :
  (forall x:int. forall y:int [bool_eq6(x, y)]. (((x = y) -> (bool_eq6(x,
  y) = true)) and ((not (x = y)) -> (bool_eq6(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE4 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check4 : us_image -> prop

logic attr__ATTRIBUTE_VALUE4 : us_image -> int

logic user_eq4 : count_type, count_type -> bool

logic dummy4 : count_type

type count_type__ref = { count_type__content : count_type
}

function count_type__ref___projection(a: count_type__ref) : count_type =
  (a).count_type__content

logic last__function_guard : int, us_rep -> prop

logic get : us_rep, int -> int

logic get__function_guard : int, us_rep, int -> prop

logic oeq__function_guard : bool, us_rep, us_rep -> prop

axiom user_eq__def_axiom :
  (forall a:us_rep. forall b:us_rep [user_eq3(a, b)].
  (((forall n:int. (((1 <= n) and (n <= (0 + length(a)))) -> (get(a,
    n) = get(b, n)))) ->
  (user_eq3(a, b) = match_bool(bool_eq1(length(a), length(b)), true,
  false))) and
  ((not (forall n:int. (((1 <= n) and (n <= (0 + length(a)))) -> (get(a,
        n) = get(b, n))))) ->
  (user_eq3(a, b) = match_bool(bool_eq1(length(a), length(b)), false,
  false)))))

axiom length__post_axiom :
  (forall container:us_rep [length(container)].
  (((0 + length(container)) <= 2147483647) and in_range4(length(container))))

type element_type

predicate in_range5(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq7 : int, int -> bool

axiom bool_eq_def5 :
  (forall x:int. forall y:int [bool_eq7(x, y)]. (((x = y) -> (bool_eq7(x,
  y) = true)) and ((not (x = y)) -> (bool_eq7(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE5 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check5 : us_image -> prop

logic attr__ATTRIBUTE_VALUE5 : us_image -> int

logic user_eq5 : element_type, element_type -> bool

logic dummy5 : element_type

type element_type__ref = { element_type__content : element_type
}

function element_type__ref___projection(a: element_type__ref) : element_type =
  (a).element_type__content

type extended_index

predicate in_range6(x: int) = ((0 <= x) and (x <= 2147483647))

logic bool_eq8 : int, int -> bool

axiom bool_eq_def6 :
  (forall x:int. forall y:int [bool_eq8(x, y)]. (((x = y) -> (bool_eq8(x,
  y) = true)) and ((not (x = y)) -> (bool_eq8(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE6 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check6 : us_image -> prop

logic attr__ATTRIBUTE_VALUE6 : us_image -> int

logic user_eq6 : extended_index, extended_index -> bool

logic dummy6 : extended_index

type extended_index__ref = { extended_index__content : extended_index
}

function extended_index__ref___projection(a: extended_index__ref) : extended_index =
  (a).extended_index__content

axiom get__post_axiom :
  (forall container:us_rep.
  (forall position:int [get(container, position)]. ((in_range6(position) and
  ((1 <= position) and (position <= (0 + length(container))))) ->
  in_range5(get(container, position)))))

logic olt__function_guard : bool, us_rep, us_rep -> prop

logic ole__function_guard : bool, us_rep, us_rep -> prop

type us_split_fields = { rec__tree_model__path_type__a : us_rep;
rec__tree_model__path_type__k : bool
}

function us_split_fields_A__projection(a: us_split_fields) : us_rep =
  (a).rec__tree_model__path_type__a

function us_split_fields_K__projection(a: us_split_fields) : bool =
  (a).rec__tree_model__path_type__k

type us_split_fields__ref = { us_split_fields__content : us_split_fields
}

function us_split_fields__ref___projection(a: us_split_fields__ref) : us_split_fields =
  (a).us_split_fields__content

type us_rep1 = { us_split_fields1 : us_split_fields
}

function us_rep___projection(a: us_rep1) : us_split_fields =
  (a).us_split_fields1

logic bool_eq9 : us_rep1, us_rep1 -> bool

axiom bool_eq_def7 :
  (forall a:us_rep1. forall b:us_rep1 [bool_eq9(a, b)].
  ((((user_eq3(((a).us_split_fields1).rec__tree_model__path_type__a,
  ((b).us_split_fields1).rec__tree_model__path_type__a) = true) and
  (((a).us_split_fields1).rec__tree_model__path_type__k = ((b).us_split_fields1).rec__tree_model__path_type__k)) ->
  (bool_eq9(a, b) = true)) and
  ((not ((user_eq3(((a).us_split_fields1).rec__tree_model__path_type__a,
  ((b).us_split_fields1).rec__tree_model__path_type__a) = true) and
  (((a).us_split_fields1).rec__tree_model__path_type__k = ((b).us_split_fields1).rec__tree_model__path_type__k))) ->
  (bool_eq9(a, b) = false))))

logic value__size1 : int

logic object__size1 : us_rep1 -> int

logic value__alignment1 : int

logic object__alignment1 : us_rep1 -> int

axiom value__size_axiom1 : (0 <= value__size1)

axiom object__size_axiom1 :
  (forall a:us_rep. forall a1:bool. (0 <= object__size1({ us_split_fields1 =
  { rec__tree_model__path_type__a = a; rec__tree_model__path_type__k = a1 }
  })))

axiom value__alignment_axiom1 : (0 <= value__alignment1)

axiom object__alignment_axiom1 :
  (forall a:us_rep. forall a1:bool. (0 <= object__alignment1({
  us_split_fields1 = { rec__tree_model__path_type__a = a;
  rec__tree_model__path_type__k = a1 } })))

logic tree_model__path_type__a__first__bit : int

logic tree_model__path_type__a__last__bit : int

logic tree_model__path_type__a__position : int

axiom tree_model__path_type__a__first__bit_axiom :
  (0 <= tree_model__path_type__a__first__bit)

axiom tree_model__path_type__a__last__bit_axiom :
  (tree_model__path_type__a__first__bit <  tree_model__path_type__a__last__bit)

axiom tree_model__path_type__a__position_axiom :
  (0 <= tree_model__path_type__a__position)

logic tree_model__path_type__k__first__bit : int

logic tree_model__path_type__k__last__bit : int

logic tree_model__path_type__k__position : int

axiom tree_model__path_type__k__first__bit_axiom :
  (0 <= tree_model__path_type__k__first__bit)

axiom tree_model__path_type__k__last__bit_axiom :
  (tree_model__path_type__k__first__bit <  tree_model__path_type__k__last__bit)

axiom tree_model__path_type__k__position_axiom :
  (0 <= tree_model__path_type__k__position)

logic user_eq7 : us_rep1, us_rep1 -> bool

logic dummy7 : us_rep

logic dummy8 : bool

type path_type__ref = { path_type__content : us_rep1
}

function path_type__ref___projection(a: path_type__ref) : us_rep1 =
  (a).path_type__content

logic is_concat : us_rep, us_rep, us_rep -> bool

logic is_concat__function_guard : bool, us_rep, us_rep, us_rep -> prop

axiom is_concat__post_axiom : true

axiom is_concat__def_axiom :
  (forall q:us_rep. forall v:us_rep. forall p:us_rep [is_concat(q, v, p)].
  ((is_concat(q, v, p) = true) <->
  (((((length(p) - length(v)) = length(q)) and
  (forall i:int. (((1 <= i) and (i <= length(q))) -> (get(p, i) = get(q,
  i))))) and
  (forall i:int. (((1 <= i) and (i <= length(v))) -> (get(p,
  (i + length(q))) = get(v, i))))) and
  (forall i:int. ((((length(q) + 1) <= i) and (i <= length(p))) -> (get(v,
  (i - length(q))) = get(p, i)))))))

type map__ref = { map__content : (int,us_rep1) farray
}

logic slide : (int,us_rep1) farray, int, int -> (int,us_rep1) farray

axiom slide_eq :
  (forall a:(int,us_rep1) farray.
  (forall first:int [slide(a, first, first)]. (slide(a, first, first) = a)))

axiom slide_def :
  (forall a:(int,us_rep1) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide(a, old_first, new_first)[i])]. ((slide(a, old_first,
  new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq10 : (int,us_rep1) farray, int, int, (int,us_rep1) farray, int,
  int -> bool

axiom bool_eq_def8 :
  (forall a:(int,us_rep1) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep1) farray. forall b__first:int. forall b__last:int
  [bool_eq10(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_154:int. ((((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) and (bool_eq9((a[temp___idx_154]),
  (b[((b__first - a__first) + temp___idx_154)])) = true)) or
  (not ((a__first <= temp___idx_154) and (temp___idx_154 <= a__last)))))) ->
  (bool_eq10(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) -> (bool_eq9((a[temp___idx_154]),
  (b[((b__first - a__first) + temp___idx_154)])) = true))))) -> (bool_eq10(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev :
  (forall a:(int,us_rep1) farray. forall b:(int,us_rep1) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq10(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_154:int. (((a__first <= temp___idx_154) and
  (temp___idx_154 <= a__last)) -> (bool_eq9((a[temp___idx_154]),
  (b[((b__first - a__first) + temp___idx_154)])) = true)))))))

type extended_index_type

predicate in_range7(x: int) = ((0 <= x) and (x <= 100))

logic bool_eq11 : int, int -> bool

axiom bool_eq_def9 :
  (forall x:int. forall y:int [bool_eq11(x, y)]. (((x = y) -> (bool_eq11(x,
  y) = true)) and ((not (x = y)) -> (bool_eq11(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE7 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check7 : us_image -> prop

logic attr__ATTRIBUTE_VALUE7 : us_image -> int

logic user_eq8 : extended_index_type, extended_index_type -> bool

logic dummy9 : extended_index_type

type extended_index_type__ref = { extended_index_type__content :
extended_index_type
}

function extended_index_type__ref___projection(a: extended_index_type__ref) : extended_index_type =
  (a).extended_index_type__content

logic to_rep1 : extended_index_type -> int

logic of_rep1 : int -> extended_index_type

axiom inversion_axiom1 :
  (forall x:extended_index_type [to_rep1(x)]. (of_rep1(to_rep1(x)) = x))

axiom range_axiom1 :
  (forall x:extended_index_type [to_rep1(x)]. in_range7(to_rep1(x)))

axiom coerce_axiom1 :
  (forall x:int [to_rep1(of_rep1(x))]. (in_range7(x) ->
  (to_rep1(of_rep1(x)) = x)))

type position_type

predicate in_range8(x: int) = ((0 <= x) and (x <= 2))

logic bool_eq12 : int, int -> bool

axiom bool_eq_def10 :
  (forall x:int. forall y:int [bool_eq12(x, y)]. (((x = y) -> (bool_eq12(x,
  y) = true)) and ((not (x = y)) -> (bool_eq12(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE8 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check8 : us_image -> prop

logic attr__ATTRIBUTE_VALUE8 : us_image -> int

logic user_eq9 : position_type, position_type -> bool

logic dummy10 : position_type

type position_type__ref = { position_type__content : position_type
}

function position_type__ref___projection(a: position_type__ref) : position_type =
  (a).position_type__content

logic to_rep2 : position_type -> int

logic of_rep2 : int -> position_type

axiom inversion_axiom2 :
  (forall x:position_type [to_rep2(x)]. (of_rep2(to_rep2(x)) = x))

axiom range_axiom2 :
  (forall x:position_type [to_rep2(x)]. in_range8(to_rep2(x)))

axiom coerce_axiom2 :
  (forall x:int [to_rep2(of_rep2(x))]. (in_range8(x) ->
  (to_rep2(of_rep2(x)) = x)))

type us_split_fields2 = { rec__binary_trees__cell__left :
extended_index_type; rec__binary_trees__cell__right : extended_index_type;
rec__binary_trees__cell__parent : extended_index_type;
rec__binary_trees__cell__position : position_type
}

function us_split_fields_Left__projection(a: us_split_fields2) : extended_index_type =
  (a).rec__binary_trees__cell__left

function us_split_fields_Right__projection(a: us_split_fields2) : extended_index_type =
  (a).rec__binary_trees__cell__right

function us_split_fields_Parent__projection(a: us_split_fields2) : extended_index_type =
  (a).rec__binary_trees__cell__parent

function us_split_fields_Position__projection(a: us_split_fields2) : position_type =
  (a).rec__binary_trees__cell__position

type us_split_fields__ref1 = { us_split_fields__content1 : us_split_fields2
}

function us_split_fields__ref___2__projection(a: us_split_fields__ref1) : us_split_fields2 =
  (a).us_split_fields__content1

type us_rep2 = { us_split_fields3 : us_split_fields2
}

function us_rep___2__projection(a: us_rep2) : us_split_fields2 =
  (a).us_split_fields3

logic bool_eq13 : us_rep2, us_rep2 -> bool

axiom bool_eq_def11 :
  (forall a:us_rep2. forall b:us_rep2 [bool_eq13(a, b)].
  ((((((to_rep1(((a).us_split_fields3).rec__binary_trees__cell__left) = to_rep1(((b).us_split_fields3).rec__binary_trees__cell__left)) and
  (to_rep1(((a).us_split_fields3).rec__binary_trees__cell__right) = to_rep1(((b).us_split_fields3).rec__binary_trees__cell__right))) and
  (to_rep1(((a).us_split_fields3).rec__binary_trees__cell__parent) = to_rep1(((b).us_split_fields3).rec__binary_trees__cell__parent))) and
  (to_rep2(((a).us_split_fields3).rec__binary_trees__cell__position) = to_rep2(((b).us_split_fields3).rec__binary_trees__cell__position))) ->
  (bool_eq13(a, b) = true)) and
  ((not ((((to_rep1(((a).us_split_fields3).rec__binary_trees__cell__left) = to_rep1(((b).us_split_fields3).rec__binary_trees__cell__left)) and
  (to_rep1(((a).us_split_fields3).rec__binary_trees__cell__right) = to_rep1(((b).us_split_fields3).rec__binary_trees__cell__right))) and
  (to_rep1(((a).us_split_fields3).rec__binary_trees__cell__parent) = to_rep1(((b).us_split_fields3).rec__binary_trees__cell__parent))) and
  (to_rep2(((a).us_split_fields3).rec__binary_trees__cell__position) = to_rep2(((b).us_split_fields3).rec__binary_trees__cell__position)))) ->
  (bool_eq13(a, b) = false))))

logic value__size2 : int

logic object__size2 : us_rep2 -> int

logic value__alignment2 : int

logic object__alignment2 : us_rep2 -> int

axiom value__size_axiom2 : (0 <= value__size2)

axiom object__size_axiom2 :
  (forall a:extended_index_type. forall a1:extended_index_type.
  forall a2:extended_index_type. forall a3:position_type.
  (0 <= object__size2({ us_split_fields3 = { rec__binary_trees__cell__left =
  a; rec__binary_trees__cell__right = a1; rec__binary_trees__cell__parent =
  a2; rec__binary_trees__cell__position = a3 } })))

axiom value__alignment_axiom2 : (0 <= value__alignment2)

axiom object__alignment_axiom2 :
  (forall a:extended_index_type. forall a1:extended_index_type.
  forall a2:extended_index_type. forall a3:position_type.
  (0 <= object__alignment2({ us_split_fields3 = {
  rec__binary_trees__cell__left = a; rec__binary_trees__cell__right = a1;
  rec__binary_trees__cell__parent = a2; rec__binary_trees__cell__position =
  a3 } })))

logic binary_trees__cell__left__first__bit : int

logic binary_trees__cell__left__last__bit : int

logic binary_trees__cell__left__position : int

axiom binary_trees__cell__left__first__bit_axiom :
  (0 <= binary_trees__cell__left__first__bit)

axiom binary_trees__cell__left__last__bit_axiom :
  (binary_trees__cell__left__first__bit <  binary_trees__cell__left__last__bit)

axiom binary_trees__cell__left__position_axiom :
  (0 <= binary_trees__cell__left__position)

logic binary_trees__cell__right__first__bit : int

logic binary_trees__cell__right__last__bit : int

logic binary_trees__cell__right__position : int

axiom binary_trees__cell__right__first__bit_axiom :
  (0 <= binary_trees__cell__right__first__bit)

axiom binary_trees__cell__right__last__bit_axiom :
  (binary_trees__cell__right__first__bit <  binary_trees__cell__right__last__bit)

axiom binary_trees__cell__right__position_axiom :
  (0 <= binary_trees__cell__right__position)

logic binary_trees__cell__parent__first__bit : int

logic binary_trees__cell__parent__last__bit : int

logic binary_trees__cell__parent__position : int

axiom binary_trees__cell__parent__first__bit_axiom :
  (0 <= binary_trees__cell__parent__first__bit)

axiom binary_trees__cell__parent__last__bit_axiom :
  (binary_trees__cell__parent__first__bit <  binary_trees__cell__parent__last__bit)

axiom binary_trees__cell__parent__position_axiom :
  (0 <= binary_trees__cell__parent__position)

logic binary_trees__cell__position__first__bit : int

logic binary_trees__cell__position__last__bit : int

logic binary_trees__cell__position__position : int

axiom binary_trees__cell__position__first__bit_axiom :
  (0 <= binary_trees__cell__position__first__bit)

axiom binary_trees__cell__position__last__bit_axiom :
  (binary_trees__cell__position__first__bit <  binary_trees__cell__position__last__bit)

axiom binary_trees__cell__position__position_axiom :
  (0 <= binary_trees__cell__position__position)

logic user_eq10 : us_rep2, us_rep2 -> bool

logic dummy11 : extended_index_type

logic dummy12 : extended_index_type

logic dummy13 : extended_index_type

logic dummy14 : position_type

type cell__ref = { cell__content : us_rep2
}

function cell__ref___projection(a: cell__ref) : us_rep2 = (a).cell__content

type map__ref1 = { map__content1 : (int,us_rep2) farray
}

logic slide1 : (int,us_rep2) farray, int, int -> (int,us_rep2) farray

axiom slide_eq1 :
  (forall a:(int,us_rep2) farray.
  (forall first:int [slide1(a, first, first)]. (slide1(a, first, first) = a)))

axiom slide_def1 :
  (forall a:(int,us_rep2) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide1(a, old_first, new_first)[i])]. ((slide1(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq14 : (int,us_rep2) farray, int, int, (int,us_rep2) farray, int,
  int -> bool

axiom bool_eq_def12 :
  (forall a:(int,us_rep2) farray. forall a__first:int. forall a__last:int.
  forall b:(int,us_rep2) farray. forall b__first:int. forall b__last:int
  [bool_eq14(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_155:int. ((((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) and (bool_eq13((a[temp___idx_155]),
  (b[((b__first - a__first) + temp___idx_155)])) = true)) or
  (not ((a__first <= temp___idx_155) and (temp___idx_155 <= a__last)))))) ->
  (bool_eq14(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq13((a[temp___idx_155]),
  (b[((b__first - a__first) + temp___idx_155)])) = true))))) -> (bool_eq14(a,
  a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev1 :
  (forall a:(int,us_rep2) farray. forall b:(int,us_rep2) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq14(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_155:int. (((a__first <= temp___idx_155) and
  (temp___idx_155 <= a__last)) -> (bool_eq13((a[temp___idx_155]),
  (b[((b__first - a__first) + temp___idx_155)])) = true)))))))

logic dummy15 : (int,us_rep2) farray

logic value__size3 : int

logic object__size3 : (int,us_rep2) farray -> int

logic value__component__size : int

logic object__component__size : (int,us_rep2) farray -> int

logic value__alignment3 : int

logic object__alignment3 : (int,us_rep2) farray -> int

axiom value__size_axiom3 : (0 <= value__size3)

axiom object__size_axiom3 :
  (forall a:(int,us_rep2) farray. (0 <= object__size3(a)))

axiom value__component__size_axiom : (0 <= value__component__size)

axiom object__component__size_axiom :
  (forall a:(int,us_rep2) farray. (0 <= object__component__size(a)))

axiom value__alignment_axiom3 : (0 <= value__alignment3)

axiom object__alignment_axiom3 :
  (forall a:(int,us_rep2) farray. (0 <= object__alignment3(a)))

logic user_eq11 : (int,us_rep2) farray, (int,us_rep2) farray -> bool

type us_split_fields4 = { rec__binary_trees__forest__s : extended_index_type;
rec__binary_trees__forest__c : (int,us_rep2) farray
}

function us_split_fields_S__projection(a: us_split_fields4) : extended_index_type =
  (a).rec__binary_trees__forest__s

function us_split_fields_C__projection(a: us_split_fields4) : (int,us_rep2) farray =
  (a).rec__binary_trees__forest__c

type us_split_fields__ref2 = { us_split_fields__content2 : us_split_fields4
}

function us_split_fields__ref___3__projection(a: us_split_fields__ref2) : us_split_fields4 =
  (a).us_split_fields__content2

type us_rep3 = { us_split_fields5 : us_split_fields4
}

function us_rep___3__projection(a: us_rep3) : us_split_fields4 =
  (a).us_split_fields5

logic bool_eq15 : us_rep3, us_rep3 -> bool

axiom bool_eq_def13 :
  (forall a:us_rep3. forall b:us_rep3 [bool_eq15(a, b)].
  ((((to_rep1(((a).us_split_fields5).rec__binary_trees__forest__s) = to_rep1(((b).us_split_fields5).rec__binary_trees__forest__s)) and
  (bool_eq14(((a).us_split_fields5).rec__binary_trees__forest__c, 1, 100,
  ((b).us_split_fields5).rec__binary_trees__forest__c, 1, 100) = true)) ->
  (bool_eq15(a, b) = true)) and
  ((not ((to_rep1(((a).us_split_fields5).rec__binary_trees__forest__s) = to_rep1(((b).us_split_fields5).rec__binary_trees__forest__s)) and
  (bool_eq14(((a).us_split_fields5).rec__binary_trees__forest__c, 1, 100,
  ((b).us_split_fields5).rec__binary_trees__forest__c, 1, 100) = true))) ->
  (bool_eq15(a, b) = false))))

logic value__size4 : int

logic object__size4 : us_rep3 -> int

logic value__alignment4 : int

logic object__alignment4 : us_rep3 -> int

axiom value__size_axiom4 : (0 <= value__size4)

axiom object__size_axiom4 :
  (forall a:extended_index_type. forall a1:(int,us_rep2) farray.
  (0 <= object__size4({ us_split_fields5 = { rec__binary_trees__forest__s =
  a; rec__binary_trees__forest__c = a1 } })))

axiom value__alignment_axiom4 : (0 <= value__alignment4)

axiom object__alignment_axiom4 :
  (forall a:extended_index_type. forall a1:(int,us_rep2) farray.
  (0 <= object__alignment4({ us_split_fields5 = {
  rec__binary_trees__forest__s = a; rec__binary_trees__forest__c = a1 } })))

logic binary_trees__forest__s__first__bit : int

logic binary_trees__forest__s__last__bit : int

logic binary_trees__forest__s__position : int

axiom binary_trees__forest__s__first__bit_axiom :
  (0 <= binary_trees__forest__s__first__bit)

axiom binary_trees__forest__s__last__bit_axiom :
  (binary_trees__forest__s__first__bit <  binary_trees__forest__s__last__bit)

axiom binary_trees__forest__s__position_axiom :
  (0 <= binary_trees__forest__s__position)

logic binary_trees__forest__c__first__bit : int

logic binary_trees__forest__c__last__bit : int

logic binary_trees__forest__c__position : int

axiom binary_trees__forest__c__first__bit_axiom :
  (0 <= binary_trees__forest__c__first__bit)

axiom binary_trees__forest__c__last__bit_axiom :
  (binary_trees__forest__c__first__bit <  binary_trees__forest__c__last__bit)

axiom binary_trees__forest__c__position_axiom :
  (0 <= binary_trees__forest__c__position)

logic user_eq12 : us_rep3, us_rep3 -> bool

logic dummy16 : extended_index_type

logic dummy17 : (int,us_rep2) farray

type forest__ref = { forest__content : us_rep3
}

function forest__ref___projection(a: forest__ref) : us_rep3 =
  (a).forest__content

logic size : us_rep3 -> int

logic size__function_guard : int, us_rep3 -> prop

logic tree_structure : us_rep3 -> bool

logic tree_structure__function_guard : bool, us_rep3 -> prop

logic valid_root : us_rep3, int -> bool

logic valid_root__function_guard : bool, us_rep3, int -> prop

axiom valid_root__post_axiom :
  (forall f:extended_index_type. forall f1:(int,us_rep2) farray.
  (forall i:int [valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  i)]. (((tree_structure({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 }
  }) = true) and in_range3(i)) -> ((size({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 }
  }) <  i) -> (not (valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  i) = true))))))

logic model__ : us_rep3, int -> (int,us_rep1) farray

logic model____function_guard : (int,us_rep1) farray, us_rep3, int -> prop

logic is_add : us_rep, int, us_rep -> bool

logic is_add__function_guard : bool, us_rep, int, us_rep -> prop

logic parent : us_rep3, int -> int

logic parent__function_guard : int, us_rep3, int -> prop

logic position : us_rep3, int -> int

logic position__function_guard : int, us_rep3, int -> prop

axiom model____post_axiom :
  (forall f:extended_index_type. forall f1:(int,us_rep2) farray.
  (forall root:int [model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)]. ((((tree_structure({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 }
  }) = true) and in_range3(root)) and (valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root) = true)) -> ((((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f; rec__binary_trees__forest__c = f1 } },
  root)[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i:int. (((1 <= i) and (i <= 100)) -> ((not (i = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i) = 0)) and ((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, root)[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i)])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i) = 0)) and ((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, root)[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i)])).us_split_fields1).rec__tree_model__path_type__k = true))) ->
   (not ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i:int. (((1 <= i) and (i <= 100)) -> (((((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i = root))) -> (is_add((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   i)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i), (((model__({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__a) = true)) and
   ((not (((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i = root)))) -> (length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i:int. (((1 <= i) and (i <= 100)) -> (((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j:int. (((1 <= j) and (j <= 100)) -> ((((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((bool_eq1(length((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
  (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f; rec__binary_trees__forest__c = f1 } },
  root)[j])).us_split_fields1).rec__tree_model__path_type__a, n)))))) ->
  (j = i))))))))))) and
  (forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100)))))))

type map__ref2 = { map__content2 : (int,natural) farray
}

logic slide2 : (int,natural) farray, int, int -> (int,natural) farray

axiom slide_eq2 :
  (forall a:(int,natural) farray.
  (forall first:int [slide2(a, first, first)]. (slide2(a, first, first) = a)))

axiom slide_def2 :
  (forall a:(int,natural) farray.
  (forall old_first:int.
  (forall new_first:int.
  (forall i:int [(slide2(a, old_first, new_first)[i])]. ((slide2(a,
  old_first, new_first)[i]) = (a[(i - (new_first - old_first))]))))))

logic bool_eq16 : (int,natural) farray, int, int, (int,natural) farray, int,
  int -> bool

axiom bool_eq_def14 :
  (forall a:(int,natural) farray. forall a__first:int. forall a__last:int.
  forall b:(int,natural) farray. forall b__first:int. forall b__last:int
  [bool_eq16(a, a__first, a__last, b, b__first, b__last)].
  ((((((a__first <= a__last) and ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) or
  ((not (a__first <= a__last)) and (b__last <  b__first))) and
  (forall temp___idx_156:int. ((((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) and
  (to_rep((a[temp___idx_156])) = to_rep((b[((b__first - a__first) + temp___idx_156)])))) or
  (not ((a__first <= temp___idx_156) and (temp___idx_156 <= a__last)))))) ->
  (bool_eq16(a, a__first, a__last, b, b__first, b__last) = true)) and
  ((not ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) ->
  (to_rep((a[temp___idx_156])) = to_rep((b[((b__first - a__first) + temp___idx_156)]))))))) ->
  (bool_eq16(a, a__first, a__last, b, b__first, b__last) = false))))

axiom bool_eq_rev2 :
  (forall a:(int,natural) farray. forall b:(int,natural) farray.
  (forall a__first:int. forall a__last:int. forall b__first:int.
  forall b__last:int. ((bool_eq16(b, b__first, b__last, a, a__first,
  a__last) = true) -> ((((a__first <= a__last) -> ((b__first <= b__last) and
  ((a__last - a__first) = (b__last - b__first)))) and
  ((not (a__first <= a__last)) -> (b__last <  b__first))) and
  (forall temp___idx_156:int. (((a__first <= temp___idx_156) and
  (temp___idx_156 <= a__last)) ->
  (to_rep((a[temp___idx_156])) = to_rep((b[((b__first - a__first) + temp___idx_156)])))))))))

logic ordered_leafs : us_rep3, int, (int,natural) farray -> bool

logic ordered_leafs__function_guard : bool, us_rep3, int,
  (int,natural) farray -> prop

axiom ordered_leafs__post_axiom : true

axiom ordered_leafs__def_axiom :
  (forall f:extended_index_type. forall f1:(int,us_rep2) farray.
  (forall root:int.
  (forall values:(int,natural) farray [ordered_leafs({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root, values)]. (((ordered_leafs({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root, values) = true) ->
  (forall i:int. (((1 <= i) and (i <= 100)) ->
  (forall j:int. (((1 <= j) and (j <= 100)) -> (((((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j])).us_split_fields1).rec__tree_model__path_type__k = true)) and
  ((bool_lt(length((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
  (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f; rec__binary_trees__forest__c = f1 } },
  root)[j])).us_split_fields1).rec__tree_model__path_type__a, n)))))) ->
  (((get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) ->
  (to_rep((values[j])) <  to_rep((values[i])))) and ((not (get((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) ->
  (to_rep((values[i])) <  to_rep((values[j]))))))))))) and
  ((forall i:int. (((1 <= i) and (i <= 100)) ->
   (forall j:int. (((1 <= j) and (j <= 100)) -> (((((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__k = true) and
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[j])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   (((bool_lt(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[j])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[j])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_lt(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[j])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
   (((get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[j])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) and
   (to_rep((values[j])) <  to_rep((values[i])))) or ((not (get((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[j])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[i])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) and
   (to_rep((values[i])) <  to_rep((values[j])))))))))) ->
  (ordered_leafs({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }, root, values) = true))))))

logic f : extended_index_type

logic f1 : (int,us_rep2) farray

logic attr__ATTRIBUTE_ADDRESS : int

logic f_old : extended_index_type

logic f_old1 : (int,us_rep2) farray

logic attr__ATTRIBUTE_ADDRESS1 : int

logic root : int

logic attr__ATTRIBUTE_ADDRESS2 : int

logic v : int

logic attr__ATTRIBUTE_ADDRESS3 : int

logic values : (int,natural) farray

logic attr__ATTRIBUTE_ADDRESS4 : int

logic attr__ATTRIBUTE_ADDRESS5 : int

logic attr__ATTRIBUTE_ADDRESS6 : int

type direction

predicate in_range9(x: int) = ((0 <= x) and (x <= 1))

logic bool_eq17 : int, int -> bool

axiom bool_eq_def15 :
  (forall x:int. forall y:int [bool_eq17(x, y)]. (((x = y) -> (bool_eq17(x,
  y) = true)) and ((not (x = y)) -> (bool_eq17(x, y) = false))))

logic attr__ATTRIBUTE_IMAGE9 : int -> us_image

logic attr__ATTRIBUTE_VALUE__pre_check9 : us_image -> prop

logic attr__ATTRIBUTE_VALUE9 : us_image -> int

logic user_eq13 : direction, direction -> bool

logic dummy18 : direction

type direction__ref = { direction__content : direction
}

function direction__ref___projection(a: direction__ref) : direction =
  (a).direction__content

axiom is_add__post_axiom : true

axiom is_add__def_axiom :
  (forall s1:us_rep. forall s2:us_rep.
  (forall d:int [is_add(s1, d, s2)]. (((is_add(s1, d, s2) = true) ->
  ((((length(s2) - 1) = length(s1)) and (((bool_lt(length(s1),
  length(s2)) = true) ->
  (forall n:int. (((1 <= n) and (n <= (0 + length(s1)))) -> (get(s1,
  n) = get(s2, n))))) and (not (bool_lt(length(s1),
  length(s2)) = false)))) and (get(s2, length(s2)) = d))) and
  (((((length(s2) - 1) = length(s1)) and ((bool_lt(length(s1),
  length(s2)) = true) and
  (forall n:int. (((1 <= n) and (n <= (0 + length(s1)))) -> (get(s1,
  n) = get(s2, n)))))) and (get(s2, length(s2)) = d)) -> (is_add(s1, d,
  s2) = true)))))

axiom size__post_axiom :
  (forall f2:extended_index_type. forall f3:(int,us_rep2) farray [size({
  us_split_fields5 = { rec__binary_trees__forest__s = f2;
  rec__binary_trees__forest__c = f3 } })]. ((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = f2;
  rec__binary_trees__forest__c = f3 } }) = true) -> in_range7(size({
  us_split_fields5 = { rec__binary_trees__forest__s = f2;
  rec__binary_trees__forest__c = f3 } }))))

axiom parent__post_axiom :
  (forall f2:extended_index_type. forall f3:(int,us_rep2) farray.
  (forall i:int [parent({ us_split_fields5 = { rec__binary_trees__forest__s =
  f2; rec__binary_trees__forest__c = f3 } }, i)]. (((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = f2;
  rec__binary_trees__forest__c = f3 } }) = true) and in_range3(i)) ->
  ((((valid_root({ us_split_fields5 = { rec__binary_trees__forest__s = f2;
  rec__binary_trees__forest__c = f3 } }, i) = true) -> (parent({
  us_split_fields5 = { rec__binary_trees__forest__s = f2;
  rec__binary_trees__forest__c = f3 } }, i) = 0)) and ((size({
  us_split_fields5 = { rec__binary_trees__forest__s = f2;
  rec__binary_trees__forest__c = f3 } }) = 0) -> (parent({ us_split_fields5 =
  { rec__binary_trees__forest__s = f2; rec__binary_trees__forest__c = f3 } },
  i) = 0))) and in_range7(parent({ us_split_fields5 = {
  rec__binary_trees__forest__s = f2; rec__binary_trees__forest__c = f3 } },
  i))))))

axiom position__post_axiom :
  (forall f2:extended_index_type. forall f3:(int,us_rep2) farray.
  (forall i:int [position({ us_split_fields5 = {
  rec__binary_trees__forest__s = f2; rec__binary_trees__forest__c = f3 } },
  i)]. ((((tree_structure({ us_split_fields5 = {
  rec__binary_trees__forest__s = f2; rec__binary_trees__forest__c = f3 }
  }) = true) and in_range3(i)) and (not (parent({ us_split_fields5 = {
  rec__binary_trees__forest__s = f2; rec__binary_trees__forest__c = f3 } },
  i) = 0))) -> in_range9(position({ us_split_fields5 = {
  rec__binary_trees__forest__s = f2; rec__binary_trees__forest__c = f3 } },
  i)))))

axiom tree_structure__post_axiom : true

 (* File "system.ads", line 1, characters 0-0 *)
goal WP_parameter_def :
  (forall i:int. forall temp___1580:(int,us_rep1) farray. forall o:us_rep1.
  forall o1:us_split_fields. forall o2:us_rep.
  forall temp___1581:(int,us_rep1) farray. forall o3:us_rep1.
  forall o4:us_split_fields. forall o5:us_rep.
  forall temp___1579:(int,us_rep1) farray. forall o6:us_rep1.
  forall o7:us_split_fields. forall temp___1578:(int,us_rep1) farray.
  forall o8:us_rep1. forall o9:us_split_fields.
  forall temp___1592:(int,us_rep1) farray. forall o10:us_rep1.
  forall o11:us_split_fields. forall o12:us_rep.
  forall temp___1593:(int,us_rep1) farray. forall o13:us_rep1.
  forall o14:us_split_fields. forall o15:us_rep.
  forall temp___1591:(int,us_rep1) farray. forall o16:us_rep1.
  forall o17:us_split_fields. forall temp___1590:(int,us_rep1) farray.
  forall o18:us_rep1. forall o19:us_split_fields.
  forall temp___1612:(int,us_rep1) farray. forall o20:us_rep1.
  forall o21:us_split_fields. forall o22:us_rep.
  forall temp___1613:(int,us_rep1) farray. forall o23:us_rep1.
  forall o24:us_split_fields. forall o25:us_rep.
  forall temp___1611:(int,us_rep1) farray. forall o26:us_rep1.
  forall o27:us_split_fields. forall temp___1610:(int,us_rep1) farray.
  forall o28:us_rep1. forall o29:us_split_fields.
  forall temp___1635:(int,us_rep1) farray. forall o30:us_rep1.
  forall o31:us_split_fields. forall temp___1634:(int,us_rep1) farray.
  forall o32:us_rep1. forall o33:us_split_fields. forall k:int.
  forall temp___1645:(int,us_rep1) farray. forall o34:us_rep1.
  forall o35:us_split_fields. forall o36:us_rep.
  forall temp___1646:(int,us_rep1) farray. forall o37:int.
  forall o38:us_rep1. forall o39:us_split_fields. forall o40:us_rep.
  forall temp___1644:(int,us_rep1) farray. forall o41:int.
  forall o42:us_rep1. forall o43:us_split_fields.
  forall temp___1643:(int,us_rep1) farray. forall o44:us_rep1.
  forall o45:us_split_fields. forall temp___1641:(int,us_rep1) farray.
  forall o46:int. forall o47:us_rep1. forall o48:us_split_fields.
  forall o49:us_rep. forall temp___1642:(int,us_rep1) farray.
  forall o50:us_rep1. forall o51:us_split_fields. forall o52:us_rep.
  forall o53:int. forall o54:int. forall o55:int. forall o56:int.
  forall result:int__ref. forall i1:int. forall i2:int. forall j:int.
  forall result1:int__ref. forall j1:int. forall result2:bool.
  forall result3:bool. forall result4:bool. forall result5:bool.
  forall result6:bool. forall result7:bool. forall result8:bool.
  forall result9:bool. forall result10:bool. forall result11:bool.
  forall result12:bool. forall j2:int. forall result13:bool.
  forall result14:bool. forall result15:bool. forall result16:bool.
  ((tree_structure({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }) = true) -> ((tree_structure({
  us_split_fields5 = { rec__binary_trees__forest__s = f_old;
  rec__binary_trees__forest__c = f_old1 } }) = true) -> (in_range3(root) ->
  (in_range3(v) -> (((valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, root) = true) and ((valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root) = true) and ((valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, v) = true) and ((not (valid_root({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  v) = true)) and (((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)[v])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((ordered_leafs({ us_split_fields5 = { rec__binary_trees__forest__s =
  f_old; rec__binary_trees__forest__c = f_old1 } }, root, values) = true) and
  ((ordered_leafs({ us_split_fields5 = { rec__binary_trees__forest__s =
  f_old; rec__binary_trees__forest__c = f_old1 } }, v, values) = true) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (((bool_lt(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } }, root)[i3])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[v])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[v])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_lt(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } }, root)[i3])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[v])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
   (((get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[v])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) and
   (forall j3:int. (((1 <= j3) and (j3 <= 100)) -> (((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } },
   v)[j3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   (to_rep((values[j3])) <  to_rep((values[i3]))))))) or
   ((not (get((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[v])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) and
   (forall j3:int. (((1 <= j3) and (j3 <= 100)) -> (((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } },
   v)[j3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   (to_rep((values[i3])) <  to_rep((values[j3]))))))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> (((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((bool_le(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[v])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[v])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[v])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } },
   v)[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not (((bool_le(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[v])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[v])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[v])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_le(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[v])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) and
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__k = true)))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> (((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> (((not (v = 0)) and
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } },
   v)[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__k = true)))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> (((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
   ((bool_eq1(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } }, root)[i3])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__a, n)))))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) -> (((not (v = 0)) and
  ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f_old;
  rec__binary_trees__forest__c = f_old1 } },
  v)[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) ->
  (is_concat((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f; rec__binary_trees__forest__c = f1 } },
  root)[v])).us_split_fields1).rec__tree_model__path_type__a, (((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f_old;
  rec__binary_trees__forest__c = f_old1 } },
  v)[i3])).us_split_fields1).rec__tree_model__path_type__a, (((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)))))))))))))))) ->
  (((result = { int__content = i }) and (i1 = 1)) -> (((1 <= i1) and
  (i1 <= 100)) ->
  ((forall k1:int. (((1 <= k1) and (k1 <= (i2 - 1))) ->
   (forall j3:int. (((1 <= j3) and (j3 <= 100)) -> (((((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__k = true) and
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[j3])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   (((bool_lt(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[j3])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_lt(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
   (((get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[j3])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) and
   (to_rep((values[j3])) <  to_rep((values[k1])))) or ((not (get((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[j3])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) and
   (to_rep((values[k1])) <  to_rep((values[j3])))))))))) ->
  ((((1 <= 100) -> in_range3(i2)) and ((1 <= i2) and (i2 <= 100))) ->
  (((result1 = { int__content = j }) and (j1 = 1)) -> (((1 <= j1) and
  (j1 <= 100)) -> (((((((((temp___1578 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1578[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1578[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1578[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1578[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1578[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1578[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1578[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1578[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1578[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } }, i3)])).us_split_fields1).rec__tree_model__path_type__a,
   position({ us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } }, i3),
   (((temp___1578[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1578[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1578[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1578[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1578[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1578[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1578[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1578[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1578[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1578[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1578[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1578[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o8 = (temp___1578[i2]))) and
  (o9 = (o8).us_split_fields1)) and
  (result4 = (o9).rec__tree_model__path_type__k)) and (((result4 = true) and
  (((((temp___1579 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1579[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1579[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1579[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1579[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1579[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1579[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1579[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1579[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1579[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } }, i3)])).us_split_fields1).rec__tree_model__path_type__a,
   position({ us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } }, i3),
   (((temp___1579[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1579[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1579[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1579[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1579[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1579[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1579[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1579[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1579[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1579[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1579[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1579[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o6 = (temp___1579[j1]))) and
  (o7 = (o6).us_split_fields1)) and
  (result3 = (o7).rec__tree_model__path_type__k))) or
  ((not (result4 = true)) and (result3 = false)))) and (((result3 = true) and
  ((((((temp___1581 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1581[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1581[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1581[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1581[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1581[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1581[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1581[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1581[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1581[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3),
   (((temp___1581[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1581[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1581[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1581[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1581[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1581[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1581[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1581[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1581[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1581[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1581[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1581[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o3 = (temp___1581[j1]))) and
  (o4 = (o3).us_split_fields1)) and
  (o5 = (o4).rec__tree_model__path_type__a)) and
  ((((((temp___1580 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1580[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1580[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1580[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1580[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1580[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1580[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1580[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1580[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1580[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3),
   (((temp___1580[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1580[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1580[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1580[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1580[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1580[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1580[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1580[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1580[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1580[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1580[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1580[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o = (temp___1580[i2]))) and
  (o1 = (o).us_split_fields1)) and
  (o2 = (o1).rec__tree_model__path_type__a)) and
  ((((forall n:int. (((1 <= n) and (n <= (0 + length(o2)))) -> (get(o2,
     n) = get(o5, n)))) and
  (result2 = match_bool(bool_lt(length(o2), length(o5)), true, false))) or
  ((not (forall n:int. (((1 <= n) and (n <= (0 + length(o2)))) -> (get(o2,
        n) = get(o5, n))))) and
  (result2 = match_bool(bool_lt(length(o2), length(o5)), false, false)))) and
  ((result2 = true) <-> ((length(o2) <  length(o5)) and
  (forall n:int. (((1 <= n) and (n <= (0 + length(o2)))) -> (get(o2,
  n) = get(o5, n)))))))))) or ((not (result3 = true)) and
  (result2 = false)))) and ((result2 = true) ->
  (((bool_lt(length((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, root)[i2])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f_old; rec__binary_trees__forest__c = f_old1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
  (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f_old;
  rec__binary_trees__forest__c = f_old1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f_old; rec__binary_trees__forest__c = f_old1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f_old; rec__binary_trees__forest__c = f_old1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
  (((get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) and
  (to_rep((values[j1])) <  to_rep((values[i2])))) or ((not (get((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) and
  (to_rep((values[i2])) <  to_rep((values[j1])))))))) ->
  (((((((((temp___1590 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, v)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1590[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1590[v])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1590[v])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = v)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1590[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1590[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1590[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1590[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1590[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = v))) and (is_add((((temp___1590[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } }, i3)])).us_split_fields1).rec__tree_model__path_type__a,
   position({ us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } }, i3),
   (((temp___1590[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1590[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = v)))) and
   (length((((temp___1590[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1590[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1590[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1590[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1590[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1590[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1590[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1590[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1590[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1590[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o18 = (temp___1590[i2]))) and
  (o19 = (o18).us_split_fields1)) and
  (result7 = (o19).rec__tree_model__path_type__k)) and (((result7 = true) and
  (((((temp___1591 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, v)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1591[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1591[v])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1591[v])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = v)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1591[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1591[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1591[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1591[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1591[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = v))) and (is_add((((temp___1591[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } }, i3)])).us_split_fields1).rec__tree_model__path_type__a,
   position({ us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } }, i3),
   (((temp___1591[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1591[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = v)))) and
   (length((((temp___1591[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1591[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1591[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1591[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1591[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1591[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1591[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1591[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1591[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1591[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o16 = (temp___1591[j1]))) and
  (o17 = (o16).us_split_fields1)) and
  (result6 = (o17).rec__tree_model__path_type__k))) or
  ((not (result7 = true)) and (result6 = false)))) and (((result6 = true) and
  ((((((temp___1593 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1593[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1593[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1593[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1593[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1593[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1593[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1593[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1593[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1593[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3),
   (((temp___1593[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1593[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1593[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1593[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1593[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1593[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1593[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1593[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1593[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1593[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1593[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1593[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o13 = (temp___1593[j1]))) and
  (o14 = (o13).us_split_fields1)) and
  (o15 = (o14).rec__tree_model__path_type__a)) and
  ((((((temp___1592 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1592[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1592[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1592[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1592[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1592[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1592[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1592[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1592[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1592[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3),
   (((temp___1592[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1592[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1592[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1592[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1592[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1592[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1592[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1592[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1592[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1592[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1592[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1592[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o10 = (temp___1592[i2]))) and
  (o11 = (o10).us_split_fields1)) and
  (o12 = (o11).rec__tree_model__path_type__a)) and
  ((((forall n:int. (((1 <= n) and (n <= (0 + length(o12)))) -> (get(o12,
     n) = get(o15, n)))) and
  (result5 = match_bool(bool_lt(length(o12), length(o15)), true, false))) or
  ((not (forall n:int. (((1 <= n) and (n <= (0 + length(o12)))) -> (get(o12,
        n) = get(o15, n))))) and
  (result5 = match_bool(bool_lt(length(o12), length(o15)), false,
  false)))) and ((result5 = true) <-> ((length(o12) <  length(o15)) and
  (forall n:int. (((1 <= n) and (n <= (0 + length(o12)))) -> (get(o12,
  n) = get(o15, n)))))))))) or ((not (result6 = true)) and
  (result5 = false)))) and ((result5 = true) ->
  (((bool_lt(length((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, v)[i2])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f_old; rec__binary_trees__forest__c = f_old1 } },
  v)[j1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
  (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f_old;
  rec__binary_trees__forest__c = f_old1 } },
  v)[i2])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f_old; rec__binary_trees__forest__c = f_old1 } },
  v)[i2])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f_old; rec__binary_trees__forest__c = f_old1 } },
  v)[j1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
  ((get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = get((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f_old;
  rec__binary_trees__forest__c = f_old1 } },
  v)[j1])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f_old; rec__binary_trees__forest__c = f_old1 } },
  v)[i2])).us_split_fields1).rec__tree_model__path_type__a) + 1))) and
  (((get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) and
  (to_rep((values[j1])) <  to_rep((values[i2])))) or ((not (get((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) and
  (to_rep((values[i2])) <  to_rep((values[j1]))))))))) ->
  (((((((((temp___1610 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1610[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1610[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1610[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1610[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1610[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1610[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1610[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1610[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1610[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } }, i3)])).us_split_fields1).rec__tree_model__path_type__a,
   position({ us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } }, i3),
   (((temp___1610[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1610[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1610[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1610[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1610[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1610[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1610[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1610[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1610[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1610[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1610[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1610[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o28 = (temp___1610[i2]))) and
  (o29 = (o28).us_split_fields1)) and
  (result10 = (o29).rec__tree_model__path_type__k)) and
  (((result10 = true) and (((((temp___1611 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, v)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1611[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1611[v])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1611[v])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = v)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1611[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1611[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1611[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1611[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1611[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = v))) and (is_add((((temp___1611[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } }, i3)])).us_split_fields1).rec__tree_model__path_type__a,
   position({ us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } }, i3),
   (((temp___1611[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1611[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = v)))) and
   (length((((temp___1611[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1611[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1611[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1611[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1611[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1611[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1611[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1611[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1611[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1611[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o26 = (temp___1611[j1]))) and
  (o27 = (o26).us_split_fields1)) and
  (result9 = (o27).rec__tree_model__path_type__k))) or
  ((not (result10 = true)) and (result9 = false)))) and
  (((result9 = true) and ((((((temp___1613 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1613[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1613[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1613[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1613[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1613[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1613[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1613[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1613[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1613[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3),
   (((temp___1613[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1613[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1613[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1613[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1613[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1613[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1613[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1613[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1613[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1613[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1613[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1613[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o23 = (temp___1613[j1]))) and
  (o24 = (o23).us_split_fields1)) and
  (o25 = (o24).rec__tree_model__path_type__a)) and
  ((((((temp___1612 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1612[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1612[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1612[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1612[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1612[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1612[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1612[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1612[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1612[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3),
   (((temp___1612[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1612[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1612[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1612[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1612[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1612[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1612[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1612[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1612[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1612[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1612[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1612[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o20 = (temp___1612[i2]))) and
  (o21 = (o20).us_split_fields1)) and
  (o22 = (o21).rec__tree_model__path_type__a)) and
  ((((forall n:int. (((1 <= n) and (n <= (0 + length(o22)))) -> (get(o22,
     n) = get(o25, n)))) and
  (result8 = match_bool(bool_lt(length(o22), length(o25)), true, false))) or
  ((not (forall n:int. (((1 <= n) and (n <= (0 + length(o22)))) -> (get(o22,
        n) = get(o25, n))))) and
  (result8 = match_bool(bool_lt(length(o22), length(o25)), false,
  false)))) and ((result8 = true) <-> ((length(o22) <  length(o25)) and
  (forall n:int. (((1 <= n) and (n <= (0 + length(o22)))) -> (get(o22,
  n) = get(o25, n)))))))))) or ((not (result9 = true)) and
  (result8 = false)))) and ((result8 = true) ->
  (((bool_le(length((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)[v])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
  (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[v])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[v])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f; rec__binary_trees__forest__c = f1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not ((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   (not ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } },
   v)[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))) and
  (((bool_lt(length((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, root)[i2])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[v])).us_split_fields1).rec__tree_model__path_type__a)) = true) and
  (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f_old;
  rec__binary_trees__forest__c = f_old1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f_old; rec__binary_trees__forest__c = f_old1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f; rec__binary_trees__forest__c = f1 } },
  root)[v])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
  (((get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) and
  (to_rep((values[j1])) <  to_rep((values[i2])))) or ((not (get((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a,
  (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) and
  (to_rep((values[i2])) <  to_rep((values[j1])))))))))) ->
  ((((((((temp___1634 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, v)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1634[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1634[v])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1634[v])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = v)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1634[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1634[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1634[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1634[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1634[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = v))) and (is_add((((temp___1634[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } }, i3)])).us_split_fields1).rec__tree_model__path_type__a,
   position({ us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } }, i3),
   (((temp___1634[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1634[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = v)))) and
   (length((((temp___1634[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1634[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1634[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1634[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1634[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1634[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1634[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1634[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1634[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1634[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o32 = (temp___1634[i2]))) and
  (o33 = (o32).us_split_fields1)) and
  (result12 = (o33).rec__tree_model__path_type__k)) and
  (((result12 = true) and (((((temp___1635 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c = f_old1
  } }, root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1635[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1635[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1635[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1635[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1635[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } }, i3) = 0)) and
   ((((temp___1635[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1635[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1635[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1635[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f_old; rec__binary_trees__forest__c =
   f_old1 } }, i3)])).us_split_fields1).rec__tree_model__path_type__a,
   position({ us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } }, i3),
   (((temp___1635[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1635[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1635[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1635[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1635[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1635[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1635[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1635[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1635[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1635[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1635[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1635[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o30 = (temp___1635[j1]))) and
  (o31 = (o30).us_split_fields1)) and
  (result11 = (o31).rec__tree_model__path_type__k))) or
  ((not (result12 = true)) and (result11 = false)))) and
  ((result11 = true) ->
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not ((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f_old;
   rec__binary_trees__forest__c = f_old1 } },
   root)[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   (not ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f_old; rec__binary_trees__forest__c = f_old1 } },
   v)[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))) and
  (not (((bool_lt(length((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
  f; rec__binary_trees__forest__c = f1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
  (not (bool_lt(length((((model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)[i2])).us_split_fields1).rec__tree_model__path_type__a),
  length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } },
  root)[j1])).us_split_fields1).rec__tree_model__path_type__a)) = false))))))) ->
  ((forall k1:int. (((1 <= k1) and (k1 <= j2)) -> (((((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i2])).us_split_fields1).rec__tree_model__path_type__k = true) and
   ((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   (((bool_lt(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[i2])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
   (forall n:int. (((1 <= n) and (n <= (0 + length((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i2])).us_split_fields1).rec__tree_model__path_type__a)))) ->
   (get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[i2])).us_split_fields1).rec__tree_model__path_type__a,
   n) = get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__a, n))))) and
   (not (bool_lt(length((((model__({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   root)[i2])).us_split_fields1).rec__tree_model__path_type__a),
   length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
   (((get((((model__({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[i2])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0) and
   (to_rep((values[k1])) <  to_rep((values[i2])))) or ((not (get((((model__({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } },
   root)[k1])).us_split_fields1).rec__tree_model__path_type__a,
   (length((((model__({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } },
   root)[i2])).us_split_fields1).rec__tree_model__path_type__a) + 1)) = 0)) and
   (to_rep((values[i2])) <  to_rep((values[k1])))))))) ->
  ((((1 <= 100) -> in_range3(j2)) and ((1 <= j2) and (j2 <= 100))) ->
  (((1 <= k) and (k <= j2)) -> ((((((((temp___1643 = model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }, root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1643[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1643[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1643[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1643[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1643[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1643[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1643[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1643[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1643[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3),
   (((temp___1643[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1643[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1643[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1643[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1643[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1643[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1643[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1643[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1643[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1643[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1643[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1643[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o44 = (temp___1643[i2]))) and
  (o45 = (o44).us_split_fields1)) and
  (result15 = (o45).rec__tree_model__path_type__k)) and
  (((result15 = true) and (((((temp___1644 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1644[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1644[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1644[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1644[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1644[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1644[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1644[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1644[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1644[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3),
   (((temp___1644[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1644[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1644[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1644[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1644[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1644[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1644[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1644[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1644[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1644[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1644[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1644[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and ((((1 <= k) and (k <= 100)) and (o41 = k)) and
  (o42 = (temp___1644[o41])))) and (o43 = (o42).us_split_fields1)) and
  (result14 = (o43).rec__tree_model__path_type__k))) or
  ((not (result15 = true)) and (result14 = false)))) and
  (((result14 = true) and ((((((temp___1646 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1646[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1646[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1646[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1646[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1646[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1646[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1646[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1646[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1646[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3),
   (((temp___1646[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1646[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1646[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1646[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1646[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1646[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1646[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1646[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1646[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1646[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1646[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1646[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and ((((1 <= k) and (k <= 100)) and (o37 = k)) and
  (o38 = (temp___1646[o37])))) and (o39 = (o38).us_split_fields1)) and
  (o40 = (o39).rec__tree_model__path_type__a)) and
  ((((((temp___1645 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1645[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1645[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1645[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1645[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1645[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1645[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1645[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1645[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1645[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3),
   (((temp___1645[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1645[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1645[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1645[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1645[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1645[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1645[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1645[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1645[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1645[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1645[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1645[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o34 = (temp___1645[i2]))) and
  (o35 = (o34).us_split_fields1)) and
  (o36 = (o35).rec__tree_model__path_type__a)) and
  ((((forall n:int. (((1 <= n) and (n <= (0 + length(o36)))) -> (get(o36,
     n) = get(o40, n)))) and
  (result13 = match_bool(bool_lt(length(o36), length(o40)), true, false))) or
  ((not (forall n:int. (((1 <= n) and (n <= (0 + length(o36)))) -> (get(o36,
        n) = get(o40, n))))) and
  (result13 = match_bool(bool_lt(length(o36), length(o40)), false,
  false)))) and ((result13 = true) <-> ((length(o36) <  length(o40)) and
  (forall n:int. (((1 <= n) and (n <= (0 + length(o36)))) -> (get(o36,
  n) = get(o40, n)))))))))) or ((not (result14 = true)) and
  (result13 = false)))) -> ((result13 = true) ->
  (((((((((((temp___1642 = model__({ us_split_fields5 = {
  rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
  root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1642[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1642[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1642[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1642[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1642[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1642[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1642[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1642[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1642[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3),
   (((temp___1642[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1642[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1642[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1642[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1642[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1642[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1642[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1642[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1642[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1642[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1642[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1642[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and (o50 = (temp___1642[i2]))) and
  (o51 = (o50).us_split_fields1)) and
  (o52 = (o51).rec__tree_model__path_type__a)) and ((o53 = length(o52)) and
  (in_range4(o53) and ((0 + o53) <= 2147483647)))) and (o54 = (o53 + 1))) and
  ((o55 = o54) and in_range2(o54))) and ((((((temp___1641 = model__({
  us_split_fields5 = { rec__binary_trees__forest__s = f;
  rec__binary_trees__forest__c = f1 } }, root)) and
  ((forall temp___252:int. (((1 <= temp___252) and (temp___252 <= 100)) ->
   (length((((temp___1641[temp___252])).us_split_fields1).rec__tree_model__path_type__a) <  100))) and
  (((((temp___1641[root])).us_split_fields1).rec__tree_model__path_type__k = true) and
  ((length((((temp___1641[root])).us_split_fields1).rec__tree_model__path_type__a) = 0) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) -> ((not (i3 = root)) ->
   ((((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1641[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true)) and
   ((((temp___1641[i3])).us_split_fields1).rec__tree_model__path_type__k = true)) or
   ((not ((not (parent({ us_split_fields5 = { rec__binary_trees__forest__s =
   f; rec__binary_trees__forest__c = f1 } }, i3) = 0)) and
   ((((temp___1641[parent({ us_split_fields5 = {
   rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__k = true))) and
   (not ((((temp___1641[i3])).us_split_fields1).rec__tree_model__path_type__k = true))))))) and
  ((forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
   (((((((temp___1641[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root))) and (is_add((((temp___1641[parent({ us_split_fields5 =
   { rec__binary_trees__forest__s = f; rec__binary_trees__forest__c = f1 } },
   i3)])).us_split_fields1).rec__tree_model__path_type__a, position({
   us_split_fields5 = { rec__binary_trees__forest__s = f;
   rec__binary_trees__forest__c = f1 } }, i3),
   (((temp___1641[i3])).us_split_fields1).rec__tree_model__path_type__a) = true)) or
   ((not (((((temp___1641[i3])).us_split_fields1).rec__tree_model__path_type__k = true) and
   (not (i3 = root)))) and
   (length((((temp___1641[i3])).us_split_fields1).rec__tree_model__path_type__a) = 0))))) and
  (forall i3:int. (((1 <= i3) and (i3 <= 100)) ->
  (((((temp___1641[i3])).us_split_fields1).rec__tree_model__path_type__k = true) ->
  (forall j3:int. (((1 <= j3) and (j3 <= 100)) ->
  ((((((temp___1641[j3])).us_split_fields1).rec__tree_model__path_type__k = true) and
  (((bool_eq1(length((((temp___1641[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1641[j3])).us_split_fields1).rec__tree_model__path_type__a)) = true) ->
  (forall n:int. (((1 <= n) and
  (n <= (0 + length((((temp___1641[i3])).us_split_fields1).rec__tree_model__path_type__a)))) ->
  (get((((temp___1641[i3])).us_split_fields1).rec__tree_model__path_type__a,
  n) = get((((temp___1641[j3])).us_split_fields1).rec__tree_model__path_type__a,
  n))))) and
  (not (bool_eq1(length((((temp___1641[i3])).us_split_fields1).rec__tree_model__path_type__a),
  length((((temp___1641[j3])).us_split_fields1).rec__tree_model__path_type__a)) = false)))) ->
  (j3 = i3))))))))))))) and ((((1 <= k) and (k <= 100)) and (o46 = k)) and
  (o47 = (temp___1641[o46])))) and (o48 = (o47).us_split_fields1)) and
  (o49 = (o48).rec__tree_model__path_type__a)) and ((o56 = get(o49, o55)) and
  in_range5(o56)))) and (((o56 = 0) and (result16 = true)) or
  ((not (o56 = 0)) and (result16 = false)))) -> ((not (result16 = true)) ->
  (1 <= k))))))))))))))))))))))))
