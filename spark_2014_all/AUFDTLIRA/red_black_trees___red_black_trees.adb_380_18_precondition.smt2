(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun dynamic_invariant ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range1 temp___expr_39)))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep 0)
(declare-fun bool_eq (us_rep us_rep) Bool)
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((set__ref (mk_set__ref (set__content us_rep)))))
(define-fun set__ref___projection ((a set__ref)) us_rep (set__content a))
(declare-fun oeq (us_rep us_rep) Bool)
(declare-fun oeq__function_guard (Bool us_rep us_rep) Bool)
(declare-fun ole (us_rep us_rep) Bool)
(declare-fun ole__function_guard (Bool us_rep us_rep) Bool)
(declare-fun is_empty (us_rep) Bool)
(declare-fun is_empty__function_guard (Bool us_rep) Bool)
(define-fun default_initial_assumption ((temp___expr_278 us_rep) (temp___skip_top_level_279 Bool)) Bool (=> (not (= temp___skip_top_level_279 true)) (= (is_empty temp___expr_278) true)))
(assert (forall ((left us_rep) (right us_rep)) (! (= (= (oeq left right) true) (and (= (ole left right) true) (= (ole right left) true))) :pattern ((oeq left right)))))
(declare-datatypes () ((value_set__ref (mk_value_set__ref (value_set__content us_rep)))))
(define-fun value_set__ref___projection ((a value_set__ref)) us_rep (value_set__content a))
(declare-fun is_add__2 (us_rep Int us_rep) Bool)
(declare-fun is_add__2__function_guard (Bool us_rep Int us_rep) Bool)
(declare-fun contains (us_rep Int) Bool)
(declare-fun contains__function_guard (Bool us_rep Int) Bool)
(declare-fun included_except (us_rep us_rep Int) Bool)
(declare-fun included_except__function_guard (Bool us_rep us_rep Int) Bool)
(define-fun default_initial_assumption1 ((temp___expr_293 us_rep) (temp___skip_top_level_294 Bool)) Bool (=> (not (= temp___skip_top_level_294 true)) (= (is_empty temp___expr_293) true)))
(assert true)
(assert (forall ((s1 us_rep) (s2 us_rep)) (forall ((e Int)) (! (= (= (is_add__2 s1 e s2) true) (and (and (and (not (= (contains s1 e) true)) (= (contains s2 e) true)) (= (ole s1 s2) true)) (= (included_except s2 s1 e) true))) :pattern ((is_add__2 s1 e s2))))))
(declare-sort extended_index_type 0)
(declare-fun extended_index_typeqtint (extended_index_type) Int)
(assert (forall ((i extended_index_type)) (and (<= 0 (extended_index_typeqtint i)) (<= (extended_index_typeqtint i) 100))))
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (extended_index_type extended_index_type) Bool)
(declare-const dummy2 extended_index_type)
(declare-datatypes () ((extended_index_type__ref (mk_extended_index_type__ref (extended_index_type__content extended_index_type)))))
(define-fun extended_index_type__ref___projection ((a extended_index_type__ref)) extended_index_type (extended_index_type__content a))
(define-fun to_rep ((x extended_index_type)) Int (extended_index_typeqtint x))
(declare-fun of_rep (Int) extended_index_type)
(assert (forall ((x extended_index_type)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x extended_index_type)) (! (in_range2 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range2 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort position_type 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (position_type position_type) Bool)
(declare-const dummy3 position_type)
(declare-datatypes () ((position_type__ref (mk_position_type__ref (position_type__content position_type)))))
(define-fun position_type__ref___projection ((a position_type__ref)) position_type (position_type__content a))
(declare-fun to_rep1 (position_type) Int)
(declare-fun of_rep1 (Int) position_type)
(assert (forall ((x position_type)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x position_type)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__binary_trees__cell__left extended_index_type) (rec__binary_trees__cell__right extended_index_type) (rec__binary_trees__cell__parent extended_index_type) (rec__binary_trees__cell__position position_type)))))
(define-fun us_split_fields_Left__projection ((a us_split_fields)) extended_index_type (rec__binary_trees__cell__left a))
(define-fun us_split_fields_Right__projection ((a us_split_fields)) extended_index_type (rec__binary_trees__cell__right a))
(define-fun us_split_fields_Parent__projection ((a us_split_fields)) extended_index_type (rec__binary_trees__cell__parent a))
(define-fun us_split_fields_Position__projection ((a us_split_fields)) position_type (rec__binary_trees__cell__position a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep1 (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___2__projection ((a us_rep1)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (to_rep (rec__binary_trees__cell__left (us_split_fields1 a))) (to_rep (rec__binary_trees__cell__left (us_split_fields1 b)))) (= (to_rep (rec__binary_trees__cell__right (us_split_fields1 a))) (to_rep (rec__binary_trees__cell__right (us_split_fields1 b))))) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields1 a))) (to_rep (rec__binary_trees__cell__parent (us_split_fields1 b))))) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields1 a))) (to_rep1 (rec__binary_trees__cell__position (us_split_fields1 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const binary_trees__cell__left__first__bit Int)
(declare-const binary_trees__cell__left__last__bit Int)
(declare-const binary_trees__cell__left__position Int)
(assert (<= 0 binary_trees__cell__left__first__bit))
(assert (< binary_trees__cell__left__first__bit binary_trees__cell__left__last__bit))
(assert (<= 0 binary_trees__cell__left__position))
(declare-const binary_trees__cell__right__first__bit Int)
(declare-const binary_trees__cell__right__last__bit Int)
(declare-const binary_trees__cell__right__position Int)
(assert (<= 0 binary_trees__cell__right__first__bit))
(assert (< binary_trees__cell__right__first__bit binary_trees__cell__right__last__bit))
(assert (<= 0 binary_trees__cell__right__position))
(declare-const binary_trees__cell__parent__first__bit Int)
(declare-const binary_trees__cell__parent__last__bit Int)
(declare-const binary_trees__cell__parent__position Int)
(assert (<= 0 binary_trees__cell__parent__first__bit))
(assert (< binary_trees__cell__parent__first__bit binary_trees__cell__parent__last__bit))
(assert (<= 0 binary_trees__cell__parent__position))
(declare-const binary_trees__cell__position__first__bit Int)
(declare-const binary_trees__cell__position__last__bit Int)
(declare-const binary_trees__cell__position__position Int)
(assert (<= 0 binary_trees__cell__position__first__bit))
(assert (< binary_trees__cell__position__first__bit binary_trees__cell__position__last__bit))
(assert (<= 0 binary_trees__cell__position__position))
(declare-fun user_eq4 (us_rep1 us_rep1) Bool)
(declare-const dummy4 us_rep1)
(declare-datatypes () ((cell__ref (mk_cell__ref (cell__content us_rep1)))))
(define-fun cell__ref___projection ((a cell__ref)) us_rep1 (cell__content a))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int us_rep1))))))
(declare-fun slide ((Array Int us_rep1) Int Int) (Array Int us_rep1))
(assert (forall ((a (Array Int us_rep1))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int us_rep1))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int us_rep1)) (a__first Int) (a__last Int) (b (Array Int us_rep1)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq1 (select a temp___idx_155) (select b (+ (- b__first a__first) temp___idx_155))) true)))) true false))
(assert (forall ((a (Array Int us_rep1)) (b (Array Int us_rep1))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq1 (select a temp___idx_155) (select b (+ (- b__first a__first) temp___idx_155))) true))))))))
(declare-const dummy5 (Array Int us_rep1))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int us_rep1)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int us_rep1)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int us_rep1)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int us_rep1))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int us_rep1))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int us_rep1))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq5 ((Array Int us_rep1) (Array Int us_rep1)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__binary_trees__forest__s extended_index_type) (rec__binary_trees__forest__c (Array Int us_rep1))))))
(define-fun us_split_fields_S__projection ((a us_split_fields2)) extended_index_type (rec__binary_trees__forest__s a))
(define-fun us_split_fields_C__projection ((a us_split_fields2)) (Array Int us_rep1) (rec__binary_trees__forest__c a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep2 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___3__projection ((a us_rep2)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq3 ((a us_rep2) (b us_rep2)) Bool (ite (and (= (to_rep (rec__binary_trees__forest__s (us_split_fields3 a))) (to_rep (rec__binary_trees__forest__s (us_split_fields3 b)))) (= (bool_eq2 (rec__binary_trees__forest__c (us_split_fields3 a)) 1 100 (rec__binary_trees__forest__c (us_split_fields3 b)) 1 100) true)) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep2) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep2) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep2)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment3 a))))
(declare-const binary_trees__forest__s__first__bit Int)
(declare-const binary_trees__forest__s__last__bit Int)
(declare-const binary_trees__forest__s__position Int)
(assert (<= 0 binary_trees__forest__s__first__bit))
(assert (< binary_trees__forest__s__first__bit binary_trees__forest__s__last__bit))
(assert (<= 0 binary_trees__forest__s__position))
(declare-const binary_trees__forest__c__first__bit Int)
(declare-const binary_trees__forest__c__last__bit Int)
(declare-const binary_trees__forest__c__position Int)
(assert (<= 0 binary_trees__forest__c__first__bit))
(assert (< binary_trees__forest__c__first__bit binary_trees__forest__c__last__bit))
(assert (<= 0 binary_trees__forest__c__position))
(declare-fun user_eq6 (us_rep2 us_rep2) Bool)
(declare-const dummy6 us_rep2)
(declare-datatypes () ((forest__ref (mk_forest__ref (forest__content us_rep2)))))
(define-fun forest__ref___projection ((a forest__ref)) us_rep2 (forest__content a))
(define-fun to_rep2 ((x natural)) Int (naturalqtint x))
(declare-fun of_rep2 (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int natural))))))
(declare-fun slide1 ((Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int natural))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq4 ((a (Array Int natural)) (a__first Int) (a__last Int) (b (Array Int natural)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (to_rep2 (select a temp___idx_156)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_156))))))) true false))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq4 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (to_rep2 (select a temp___idx_156)) (to_rep2 (select b (+ (- b__first a__first) temp___idx_156)))))))))))
(declare-const dummy7 (Array Int natural))
(declare-const value__size4 Int)
(declare-fun object__size4 ((Array Int natural)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int natural)) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 ((Array Int natural)) Int)
(assert (<= 0 value__size4))
(assert (forall ((a (Array Int natural))) (<= 0 (object__size4 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int natural))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a (Array Int natural))) (<= 0 (object__alignment4 a))))
(declare-fun user_eq7 ((Array Int natural) (Array Int natural)) Bool)
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__search_trees__search_tree__root extended_index_type) (rec__search_trees__search_tree__struct us_rep2) (rec__search_trees__search_tree__values (Array Int natural))))))
(define-fun us_split_fields_Root__projection ((a us_split_fields4)) extended_index_type (rec__search_trees__search_tree__root a))
(define-fun us_split_fields_Struct__projection ((a us_split_fields4)) us_rep2 (rec__search_trees__search_tree__struct a))
(define-fun us_split_fields_Values__projection ((a us_split_fields4)) (Array Int natural) (rec__search_trees__search_tree__values a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___4__projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep3 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___4__projection ((a us_rep3)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq5 ((a us_rep3) (b us_rep3)) Bool (ite (and (and (= (to_rep (rec__search_trees__search_tree__root (us_split_fields5 a))) (to_rep (rec__search_trees__search_tree__root (us_split_fields5 b)))) (= (bool_eq3 (rec__search_trees__search_tree__struct (us_split_fields5 a)) (rec__search_trees__search_tree__struct (us_split_fields5 b))) true)) (= (bool_eq4 (rec__search_trees__search_tree__values (us_split_fields5 a)) 1 100 (rec__search_trees__search_tree__values (us_split_fields5 b)) 1 100) true)) true false))
(declare-const value__size5 Int)
(declare-fun object__size5 (us_rep3) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 (us_rep3) Int)
(assert (<= 0 value__size5))
(assert (forall ((a us_rep3)) (<= 0 (object__size5 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment5 a))))
(declare-const search_trees__search_tree__root__first__bit Int)
(declare-const search_trees__search_tree__root__last__bit Int)
(declare-const search_trees__search_tree__root__position Int)
(assert (<= 0 search_trees__search_tree__root__first__bit))
(assert (< search_trees__search_tree__root__first__bit search_trees__search_tree__root__last__bit))
(assert (<= 0 search_trees__search_tree__root__position))
(declare-const search_trees__search_tree__struct__first__bit Int)
(declare-const search_trees__search_tree__struct__last__bit Int)
(declare-const search_trees__search_tree__struct__position Int)
(assert (<= 0 search_trees__search_tree__struct__first__bit))
(assert (< search_trees__search_tree__struct__first__bit search_trees__search_tree__struct__last__bit))
(assert (<= 0 search_trees__search_tree__struct__position))
(declare-const search_trees__search_tree__values__first__bit Int)
(declare-const search_trees__search_tree__values__last__bit Int)
(declare-const search_trees__search_tree__values__position Int)
(assert (<= 0 search_trees__search_tree__values__first__bit))
(assert (< search_trees__search_tree__values__first__bit search_trees__search_tree__values__last__bit))
(assert (<= 0 search_trees__search_tree__values__position))
(declare-fun user_eq8 (us_rep3 us_rep3) Bool)
(declare-const dummy8 us_rep3)
(declare-datatypes () ((search_tree__ref (mk_search_tree__ref (search_tree__content us_rep3)))))
(define-fun search_tree__ref___projection ((a search_tree__ref)) us_rep3 (search_tree__content a))
(declare-fun size (us_rep3) Int)
(declare-fun size__function_guard (Int us_rep3) Bool)
(declare-fun size1 (us_rep2) Int)
(declare-fun size__function_guard1 (Int us_rep2) Bool)
(define-fun dynamic_invariant1 ((temp___expr_184 Int) (temp___is_init_180 Bool) (temp___skip_constant_181 Bool) (temp___do_toplevel_182 Bool) (temp___do_typ_inv_183 Bool)) Bool (=> (or (= temp___is_init_180 true) (<= 0 100)) (in_range2 temp___expr_184)))
(declare-fun valid_root (us_rep2 Int) Bool)
(declare-fun valid_root__function_guard (Bool us_rep2 Int) Bool)
(declare-fun tree_structure (us_rep2) Bool)
(declare-fun tree_structure__function_guard (Bool us_rep2) Bool)
(declare-fun ordered_leafs (us_rep2 Int (Array Int natural)) Bool)
(declare-fun ordered_leafs__function_guard (Bool us_rep2 Int (Array Int natural)) Bool)
(declare-sort index_type 0)
(declare-fun index_typeqtint (index_type) Int)
(assert (forall ((i index_type)) (and (<= 1 (index_typeqtint i)) (<= (index_typeqtint i) 100))))
(define-fun in_range4 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq9 (index_type index_type) Bool)
(declare-const dummy9 index_type)
(declare-datatypes () ((index_type__ref (mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref___projection ((a index_type__ref)) index_type (index_type__content a))
(declare-fun temp_____aggregate_def_434 (Int) (Array Int natural))
(define-fun dynamic_invariant2 ((temp___expr_422 us_rep3) (temp___is_init_418 Bool) (temp___skip_constant_419 Bool) (temp___do_toplevel_420 Bool) (temp___do_typ_inv_421 Bool)) Bool (and (=> (= temp___do_typ_inv_421 true) (ite (= (size1 (rec__search_trees__search_tree__struct (us_split_fields5 temp___expr_422))) 0) (= (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___expr_422))) 0) (and (and (not (= (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___expr_422))) 0)) (= (valid_root (rec__search_trees__search_tree__struct (us_split_fields5 temp___expr_422)) (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___expr_422)))) true)) (= (ordered_leafs (rec__search_trees__search_tree__struct (us_split_fields5 temp___expr_422)) (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___expr_422))) (rec__search_trees__search_tree__values (us_split_fields5 temp___expr_422))) true)))) (=> (= temp___do_typ_inv_421 true) (= (tree_structure (rec__search_trees__search_tree__struct (us_split_fields5 temp___expr_422))) true))))
(define-fun default_initial_assumption2 ((temp___expr_427 us_rep3) (temp___skip_top_level_428 Bool)) Bool (and (and (and (= (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___expr_427))) 0) (and (and (= (to_rep (rec__binary_trees__forest__s (us_split_fields3 (rec__search_trees__search_tree__struct (us_split_fields5 temp___expr_427))))) 0) (forall ((temp___431 Int)) (=> (and (<= 1 temp___431) (<= temp___431 100)) (and (and (and (= (to_rep (rec__binary_trees__cell__left (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 (rec__search_trees__search_tree__struct (us_split_fields5 temp___expr_427)))) temp___431)))) 0) (= (to_rep (rec__binary_trees__cell__right (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 (rec__search_trees__search_tree__struct (us_split_fields5 temp___expr_427)))) temp___431)))) 0)) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 (rec__search_trees__search_tree__struct (us_split_fields5 temp___expr_427)))) temp___431)))) 0)) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 (rec__search_trees__search_tree__struct (us_split_fields5 temp___expr_427)))) temp___431)))) 2))))) (= (size1 (rec__search_trees__search_tree__struct (us_split_fields5 temp___expr_427))) 0))) (= (rec__search_trees__search_tree__values (us_split_fields5 temp___expr_427)) (temp_____aggregate_def_434 0))) (=> (not (= temp___skip_top_level_428 true)) (= (size temp___expr_427) 0))))
(define-fun type_invariant ((temp___439 us_rep3)) Bool (ite (= (size1 (rec__search_trees__search_tree__struct (us_split_fields5 temp___439))) 0) (= (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___439))) 0) (and (and (not (= (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___439))) 0)) (= (valid_root (rec__search_trees__search_tree__struct (us_split_fields5 temp___439)) (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___439)))) true)) (= (ordered_leafs (rec__search_trees__search_tree__struct (us_split_fields5 temp___439)) (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___439))) (rec__search_trees__search_tree__values (us_split_fields5 temp___439))) true))))
(assert (forall ((t us_rep3)) (! (=> (dynamic_invariant2 t true true true true) (dynamic_invariant1 (size t) true false true true)) :pattern ((size t)))))
(assert (forall ((t us_rep3)) (! (=> (dynamic_invariant2 t true true true true) (= (size t) (size1 (rec__search_trees__search_tree__struct (us_split_fields5 t))))) :pattern ((size t)))))
(declare-fun root (us_rep3) Int)
(declare-fun root__function_guard (Int us_rep3) Bool)
(define-fun dynamic_invariant3 ((temp___expr_177 Int) (temp___is_init_173 Bool) (temp___skip_constant_174 Bool) (temp___do_toplevel_175 Bool) (temp___do_typ_inv_176 Bool)) Bool (=> (or (= temp___is_init_173 true) (<= 1 100)) (in_range4 temp___expr_177)))
(assert (forall ((t us_rep3)) (! (=> (and (dynamic_invariant2 t true true true true) (not (= (size t) 0))) (dynamic_invariant3 (root t) true false true true)) :pattern ((root t)))))
(assert (forall ((t us_rep3)) (! (=> (dynamic_invariant2 t true true true true) (= (root t) (to_rep (rec__search_trees__search_tree__root (us_split_fields5 t))))) :pattern ((root t)))))
(declare-fun parent (us_rep3 Int) Int)
(declare-fun parent__function_guard (Int us_rep3 Int) Bool)
(declare-fun parent1 (us_rep2 Int) Int)
(declare-fun parent__function_guard1 (Int us_rep2 Int) Bool)
(assert (forall ((t us_rep3)) (forall ((i Int)) (! (=> (and (dynamic_invariant2 t true true true true) (dynamic_invariant3 i true true true true)) (let ((result (parent t i))) (and (=> (= (size t) 0) (= result 0)) (dynamic_invariant1 result true false true true)))) :pattern ((parent t i))))))
(assert (forall ((t us_rep3)) (forall ((i Int)) (! (=> (and (dynamic_invariant2 t true true true true) (dynamic_invariant3 i true true true true)) (= (parent t i) (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 t)) i))) :pattern ((parent t i))))))
(declare-fun position (us_rep2 Int) Int)
(declare-fun position__function_guard (Int us_rep2 Int) Bool)
(declare-fun position1 (us_rep3 Int) Int)
(declare-fun position__function_guard1 (Int us_rep3 Int) Bool)
(declare-sort direction 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq10 (direction direction) Bool)
(declare-const dummy10 direction)
(declare-datatypes () ((direction__ref (mk_direction__ref (direction__content direction)))))
(define-fun direction__ref___projection ((a direction__ref)) direction (direction__content a))
(define-fun dynamic_invariant4 ((temp___expr_198 Int) (temp___is_init_194 Bool) (temp___skip_constant_195 Bool) (temp___do_toplevel_196 Bool) (temp___do_typ_inv_197 Bool)) Bool (=> (or (= temp___is_init_194 true) (<= 0 1)) (in_range5 temp___expr_198)))
(assert (forall ((t us_rep3)) (forall ((i Int)) (! (=> (and (and (dynamic_invariant2 t true true true true) (dynamic_invariant3 i true true true true)) (not (= (parent t i) 0))) (dynamic_invariant4 (position1 t i) true false true true)) :pattern ((position1 t i))))))
(assert (forall ((t us_rep3)) (forall ((i Int)) (! (=> (and (dynamic_invariant2 t true true true true) (dynamic_invariant3 i true true true true)) (= (position1 t i) (position (rec__search_trees__search_tree__struct (us_split_fields5 t)) i))) :pattern ((position1 t i))))))
(declare-sort us_main_type1 0)
(declare-fun us_main_eq1 (us_main_type1 us_main_type1) Bool)
(declare-sort us_rep4 0)
(declare-fun bool_eq6 (us_rep4 us_rep4) Bool)
(declare-const value__size6 Int)
(declare-fun object__size6 (us_rep4) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 (us_rep4) Int)
(assert (<= 0 value__size6))
(assert (forall ((a us_rep4)) (<= 0 (object__size6 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a us_rep4)) (<= 0 (object__alignment6 a))))
(declare-fun user_eq11 (us_rep4 us_rep4) Bool)
(declare-const dummy11 us_rep4)
(declare-datatypes () ((sequence__ref (mk_sequence__ref (sequence__content us_rep4)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep4 (sequence__content a))
(declare-datatypes () ((us_split_fields6 (mk___split_fields3 (rec__tree_model__path_type__a us_rep4) (rec__tree_model__path_type__k Bool)))))
(define-fun us_split_fields_A__projection ((a us_split_fields6)) us_rep4 (rec__tree_model__path_type__a a))
(define-fun us_split_fields_K__projection ((a us_split_fields6)) Bool (rec__tree_model__path_type__k a))
(declare-datatypes () ((us_split_fields__ref3 (mk___split_fields__ref3 (us_split_fields__content3 us_split_fields6)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref3)) us_split_fields6 (us_split_fields__content3 a))
(declare-datatypes () ((us_rep5 (mk___rep3 (us_split_fields7 us_split_fields6)))))
(define-fun us_rep___projection ((a us_rep5)) us_split_fields6 (us_split_fields7 a))
(define-fun bool_eq7 ((a us_rep5) (b us_rep5)) Bool (ite (and (= (user_eq11 (rec__tree_model__path_type__a (us_split_fields7 a)) (rec__tree_model__path_type__a (us_split_fields7 b))) true) (= (rec__tree_model__path_type__k (us_split_fields7 a)) (rec__tree_model__path_type__k (us_split_fields7 b)))) true false))
(declare-const value__size7 Int)
(declare-fun object__size7 (us_rep5) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 (us_rep5) Int)
(assert (<= 0 value__size7))
(assert (forall ((a us_rep5)) (<= 0 (object__size7 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a us_rep5)) (<= 0 (object__alignment7 a))))
(declare-const tree_model__path_type__a__first__bit Int)
(declare-const tree_model__path_type__a__last__bit Int)
(declare-const tree_model__path_type__a__position Int)
(assert (<= 0 tree_model__path_type__a__first__bit))
(assert (< tree_model__path_type__a__first__bit tree_model__path_type__a__last__bit))
(assert (<= 0 tree_model__path_type__a__position))
(declare-const tree_model__path_type__k__first__bit Int)
(declare-const tree_model__path_type__k__last__bit Int)
(declare-const tree_model__path_type__k__position Int)
(assert (<= 0 tree_model__path_type__k__first__bit))
(assert (< tree_model__path_type__k__first__bit tree_model__path_type__k__last__bit))
(assert (<= 0 tree_model__path_type__k__position))
(declare-fun user_eq12 (us_rep5 us_rep5) Bool)
(declare-const dummy12 us_rep5)
(declare-datatypes () ((path_type__ref (mk_path_type__ref (path_type__content us_rep5)))))
(define-fun path_type__ref___projection ((a path_type__ref)) us_rep5 (path_type__content a))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int us_rep5))))))
(declare-fun slide2 ((Array Int us_rep5) Int Int) (Array Int us_rep5))
(assert (forall ((a (Array Int us_rep5))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int us_rep5))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq8 ((a (Array Int us_rep5)) (a__first Int) (a__last Int) (b (Array Int us_rep5)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq7 (select a temp___idx_154) (select b (+ (- b__first a__first) temp___idx_154))) true)))) true false))
(assert (forall ((a (Array Int us_rep5)) (b (Array Int us_rep5))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq8 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq7 (select a temp___idx_154) (select b (+ (- b__first a__first) temp___idx_154))) true))))))))
(declare-fun model__ (us_rep3) (Array Int us_rep5))
(declare-fun model____function_guard ((Array Int us_rep5) us_rep3) Bool)
(declare-fun model__1 (us_rep2 Int) (Array Int us_rep5))
(declare-fun model____function_guard1 ((Array Int us_rep5) us_rep2 Int) Bool)
(declare-fun length (us_rep4) Int)
(declare-fun length__function_guard (Int us_rep4) Bool)
(define-fun dynamic_invariant5 ((temp___expr_253 (Array Int us_rep5)) (temp___is_init_249 Bool) (temp___skip_constant_250 Bool) (temp___do_toplevel_251 Bool) (temp___do_typ_inv_252 Bool)) Bool (forall ((temp___254 Int)) (=> (and (<= 1 temp___254) (<= temp___254 100)) (=> (= temp___is_init_249 true) (< (length (rec__tree_model__path_type__a (us_split_fields7 (select temp___expr_253 temp___254)))) 100)))))
(define-fun default_initial_assumption3 ((temp___expr_256 (Array Int us_rep5)) (temp___skip_top_level_257 Bool)) Bool (forall ((temp___258 Int)) (=> (and (<= 1 temp___258) (<= temp___258 100)) (and (= (length (rec__tree_model__path_type__a (us_split_fields7 (select temp___expr_256 temp___258)))) 0) (= (rec__tree_model__path_type__k (us_split_fields7 (select temp___expr_256 temp___258))) (distinct 0 0))))))
(assert (forall ((t us_rep3)) (! (=> (and (dynamic_invariant2 t true true true true) (not (= (size t) 0))) (dynamic_invariant5 (model__ t) true false true true)) :pattern ((model__ t)))))
(assert (forall ((t us_rep3)) (! (=> (dynamic_invariant2 t true true true true) (= (model__ t) (model__1 (rec__search_trees__search_tree__struct (us_split_fields5 t)) (to_rep (rec__search_trees__search_tree__root (us_split_fields5 t)))))) :pattern ((model__ t)))))
(declare-fun peek (us_rep3 Int Int) Int)
(declare-fun peek__function_guard (Int us_rep3 Int Int) Bool)
(declare-fun peek1 (us_rep2 Int Int) Int)
(declare-fun peek__function_guard1 (Int us_rep2 Int Int) Bool)
(assert (forall ((t us_rep3)) (forall ((i Int) (d Int)) (! (=> (and (and (and (dynamic_invariant2 t true true true true) (dynamic_invariant3 i true true true true)) (dynamic_invariant4 d true true true true)) (and (not (= (size t) 0)) (= (rec__tree_model__path_type__k (us_split_fields7 (let ((temp___466 (model__ t))) (select temp___466 i)))) true))) (dynamic_invariant1 (peek t i d) true false true true)) :pattern ((peek t i d))))))
(assert (forall ((t us_rep3)) (forall ((i Int) (d Int)) (! (=> (and (and (dynamic_invariant2 t true true true true) (dynamic_invariant3 i true true true true)) (dynamic_invariant4 d true true true true)) (= (peek t i d) (peek1 (rec__search_trees__search_tree__struct (us_split_fields5 t)) i d))) :pattern ((peek t i d))))))
(declare-fun values (us_rep3) us_rep)
(declare-fun values__function_guard (us_rep us_rep3) Bool)
(assert (forall ((t us_rep3)) (! (=> (dynamic_invariant2 t true true true true) (=> (= (size t) 0) (= (is_empty (values t)) true))) :pattern ((values t)))))
(declare-sort color_type 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq13 (color_type color_type) Bool)
(declare-const dummy13 color_type)
(declare-datatypes () ((color_type__ref (mk_color_type__ref (color_type__content color_type)))))
(define-fun color_type__ref___projection ((a color_type__ref)) color_type (color_type__content a))
(declare-fun to_rep3 (color_type) Int)
(declare-fun of_rep3 (Int) color_type)
(assert (forall ((x color_type)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x color_type)) (! (in_range6 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((map__ref3 (mk_map__ref3 (map__content3 (Array Int color_type))))))
(declare-fun slide3 ((Array Int color_type) Int Int) (Array Int color_type))
(assert (forall ((a (Array Int color_type))) (forall ((first Int)) (! (= (slide3 a first first) a) :pattern ((slide3 a first first))))))
(assert (forall ((a (Array Int color_type))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide3 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide3 a old_first new_first) i))))))))
(define-fun bool_eq9 ((a (Array Int color_type)) (a__first Int) (a__last Int) (b (Array Int color_type)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_157 Int)) (=> (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last)) (= (to_rep3 (select a temp___idx_157)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_157))))))) true false))
(assert (forall ((a (Array Int color_type)) (b (Array Int color_type))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq9 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_157 Int)) (=> (and (<= a__first temp___idx_157) (<= temp___idx_157 a__last)) (= (to_rep3 (select a temp___idx_157)) (to_rep3 (select b (+ (- b__first a__first) temp___idx_157)))))))))))
(declare-const dummy14 (Array Int color_type))
(declare-const value__size8 Int)
(declare-fun object__size8 ((Array Int color_type)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int color_type)) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 ((Array Int color_type)) Int)
(assert (<= 0 value__size8))
(assert (forall ((a (Array Int color_type))) (<= 0 (object__size8 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int color_type))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a (Array Int color_type))) (<= 0 (object__alignment8 a))))
(declare-fun user_eq14 ((Array Int color_type) (Array Int color_type)) Bool)
(declare-datatypes () ((us_split_fields8 (mk___split_fields4 (rec__red_black_trees__rbt__struct us_rep3) (rec__red_black_trees__rbt__color (Array Int color_type))))))
(define-fun us_split_fields_Struct__2__projection ((a us_split_fields8)) us_rep3 (rec__red_black_trees__rbt__struct a))
(define-fun us_split_fields_Color__projection ((a us_split_fields8)) (Array Int color_type) (rec__red_black_trees__rbt__color a))
(declare-datatypes () ((us_split_fields__ref4 (mk___split_fields__ref4 (us_split_fields__content4 us_split_fields8)))))
(define-fun us_split_fields__ref___5__projection ((a us_split_fields__ref4)) us_split_fields8 (us_split_fields__content4 a))
(declare-datatypes () ((us_rep6 (mk___rep4 (us_split_fields9 us_split_fields8)))))
(define-fun us_rep___5__projection ((a us_rep6)) us_split_fields8 (us_split_fields9 a))
(define-fun bool_eq10 ((a us_rep6) (b us_rep6)) Bool (ite (and (= (bool_eq5 (rec__red_black_trees__rbt__struct (us_split_fields9 a)) (rec__red_black_trees__rbt__struct (us_split_fields9 b))) true) (= (bool_eq9 (rec__red_black_trees__rbt__color (us_split_fields9 a)) 1 100 (rec__red_black_trees__rbt__color (us_split_fields9 b)) 1 100) true)) true false))
(declare-const value__size9 Int)
(declare-fun object__size9 (us_rep6) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 (us_rep6) Int)
(assert (<= 0 value__size9))
(assert (forall ((a us_rep6)) (<= 0 (object__size9 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a us_rep6)) (<= 0 (object__alignment9 a))))
(declare-const red_black_trees__rbt__struct__first__bit Int)
(declare-const red_black_trees__rbt__struct__last__bit Int)
(declare-const red_black_trees__rbt__struct__position Int)
(assert (<= 0 red_black_trees__rbt__struct__first__bit))
(assert (< red_black_trees__rbt__struct__first__bit red_black_trees__rbt__struct__last__bit))
(assert (<= 0 red_black_trees__rbt__struct__position))
(declare-const red_black_trees__rbt__color__first__bit Int)
(declare-const red_black_trees__rbt__color__last__bit Int)
(declare-const red_black_trees__rbt__color__position Int)
(assert (<= 0 red_black_trees__rbt__color__first__bit))
(assert (< red_black_trees__rbt__color__first__bit red_black_trees__rbt__color__last__bit))
(assert (<= 0 red_black_trees__rbt__color__position))
(declare-fun user_eq15 (us_rep6 us_rep6) Bool)
(declare-const dummy15 us_rep6)
(declare-datatypes () ((rbt__ref (mk_rbt__ref (rbt__content us_rep6)))))
(define-fun rbt__ref___projection ((a rbt__ref)) us_rep6 (rbt__content a))
(declare-fun size2 (us_rep6) Int)
(declare-fun size__function_guard2 (Int us_rep6) Bool)
(declare-fun invariant__ (us_rep6) Bool)
(declare-fun invariant____function_guard (Bool us_rep6) Bool)
(declare-fun temp_____aggregate_def_549 (Int) (Array Int color_type))
(define-fun dynamic_invariant6 ((temp___expr_534 us_rep6) (temp___is_init_530 Bool) (temp___skip_constant_531 Bool) (temp___do_toplevel_532 Bool) (temp___do_typ_inv_533 Bool)) Bool (and (=> (= temp___do_typ_inv_533 true) (let ((temp___535 (rec__red_black_trees__rbt__struct (us_split_fields9 temp___expr_534)))) (ite (= (size1 (rec__search_trees__search_tree__struct (us_split_fields5 temp___535))) 0) (= (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___535))) 0) (and (and (not (= (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___535))) 0)) (= (valid_root (rec__search_trees__search_tree__struct (us_split_fields5 temp___535)) (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___535)))) true)) (= (ordered_leafs (rec__search_trees__search_tree__struct (us_split_fields5 temp___535)) (to_rep (rec__search_trees__search_tree__root (us_split_fields5 temp___535))) (rec__search_trees__search_tree__values (us_split_fields5 temp___535))) true))))) (=> (= temp___do_typ_inv_533 true) (= (tree_structure (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 temp___expr_534))))) true))))
(define-fun default_initial_assumption4 ((temp___expr_540 us_rep6) (temp___skip_top_level_541 Bool)) Bool (and (and (and (and (= (to_rep (rec__search_trees__search_tree__root (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 temp___expr_540))))) 0) (and (and (= (to_rep (rec__binary_trees__forest__s (us_split_fields3 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 temp___expr_540))))))) 0) (forall ((temp___545 Int)) (=> (and (<= 1 temp___545) (<= temp___545 100)) (and (and (and (= (to_rep (rec__binary_trees__cell__left (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 temp___expr_540)))))) temp___545)))) 0) (= (to_rep (rec__binary_trees__cell__right (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 temp___expr_540)))))) temp___545)))) 0)) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 temp___expr_540)))))) temp___545)))) 0)) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 temp___expr_540)))))) temp___545)))) 2))))) (= (size1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 temp___expr_540))))) 0))) (= (rec__search_trees__search_tree__values (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 temp___expr_540)))) (temp_____aggregate_def_434 0))) (= (size (rec__red_black_trees__rbt__struct (us_split_fields9 temp___expr_540))) 0)) (= (rec__red_black_trees__rbt__color (us_split_fields9 temp___expr_540)) (temp_____aggregate_def_549 0))))
(define-fun type_invariant1 ((temp___554 us_rep6)) Bool (= (invariant__ temp___554) true))
(assert (forall ((t us_rep6)) (! (=> (and (dynamic_invariant6 t true true true true) (type_invariant1 t)) (dynamic_invariant1 (size2 t) true false true true)) :pattern ((size2 t)))))
(assert (forall ((t us_rep6)) (! (=> (dynamic_invariant6 t true true true true) (= (size2 t) (size (rec__red_black_trees__rbt__struct (us_split_fields9 t))))) :pattern ((size2 t)))))
(declare-fun values1 (us_rep6) us_rep)
(declare-fun values__function_guard1 (us_rep us_rep6) Bool)
(assert (forall ((t us_rep6)) (! (=> (and (dynamic_invariant6 t true true true true) (type_invariant1 t)) (=> (= (size2 t) 0) (= (is_empty (values1 t)) true))) :pattern ((values1 t)))))
(assert (forall ((t us_rep6)) (! (=> (dynamic_invariant6 t true true true true) (= (values1 t) (values (rec__red_black_trees__rbt__struct (us_split_fields9 t))))) :pattern ((values1 t)))))
(declare-fun contains1 (us_rep6 Int) Bool)
(declare-fun contains__function_guard1 (Bool us_rep6 Int) Bool)
(declare-fun contains2 (us_rep3 Int) Bool)
(declare-fun contains__function_guard2 (Bool us_rep3 Int) Bool)
(assert (forall ((t us_rep6)) (forall ((v Int)) (! (=> (and (and (dynamic_invariant6 t true true true true) (dynamic_invariant v true true true true)) (type_invariant1 t)) (= (= (contains1 t v) true) (= (contains (values1 t) v) true))) :pattern ((contains1 t v))))))
(assert (forall ((t us_rep6)) (forall ((v Int)) (! (= (= (contains1 t v) true) (= (contains2 (rec__red_black_trees__rbt__struct (us_split_fields9 t)) v) true)) :pattern ((contains1 t v))))))
(declare-fun color (us_rep6 Int) Int)
(declare-fun color__function_guard (Int us_rep6 Int) Bool)
(define-fun dynamic_invariant7 ((temp___expr_517 Int) (temp___is_init_513 Bool) (temp___skip_constant_514 Bool) (temp___do_toplevel_515 Bool) (temp___do_typ_inv_516 Bool)) Bool (=> (or (= temp___is_init_513 true) (<= 0 1)) (in_range6 temp___expr_517)))
(assert (forall ((t us_rep6)) (forall ((i Int)) (! (=> (and (dynamic_invariant6 t true true true true) (dynamic_invariant1 i true true true true)) (dynamic_invariant7 (color t i) true false true true)) :pattern ((color t i))))))
(assert (forall ((t us_rep6)) (forall ((i Int)) (! (=> (and (dynamic_invariant6 t true true true true) (dynamic_invariant1 i true true true true)) (= (color t i) (ite (= i 0) 0 (to_rep3 (let ((temp___581 (rec__red_black_trees__rbt__color (us_split_fields9 t)))) (select temp___581 i)))))) :pattern ((color t i))))))
(declare-fun same_nb_blacks (us_rep6) Bool)
(declare-fun same_nb_blacks__function_guard (Bool us_rep6) Bool)
(declare-datatypes () ((us_split_fields10 (mk___split_fields5 (rec__red_black_trees__black_count__status Bool) (rec__red_black_trees__black_count__depth extended_index_type) (rec__red_black_trees__black_count__count extended_index_type)))))
(define-fun us_split_fields_Status__projection ((a us_split_fields10)) Bool (rec__red_black_trees__black_count__status a))
(define-fun us_split_fields_Depth__projection ((a us_split_fields10)) extended_index_type (rec__red_black_trees__black_count__depth a))
(define-fun us_split_fields_Count__projection ((a us_split_fields10)) extended_index_type (rec__red_black_trees__black_count__count a))
(declare-datatypes () ((us_split_fields__ref5 (mk___split_fields__ref5 (us_split_fields__content5 us_split_fields10)))))
(define-fun us_split_fields__ref___6__projection ((a us_split_fields__ref5)) us_split_fields10 (us_split_fields__content5 a))
(declare-datatypes () ((us_rep7 (mk___rep5 (us_split_fields11 us_split_fields10)))))
(define-fun us_rep___6__projection ((a us_rep7)) us_split_fields10 (us_split_fields11 a))
(define-fun bool_eq11 ((a us_rep7) (b us_rep7)) Bool (ite (and (and (= (rec__red_black_trees__black_count__status (us_split_fields11 a)) (rec__red_black_trees__black_count__status (us_split_fields11 b))) (= (to_rep (rec__red_black_trees__black_count__depth (us_split_fields11 a))) (to_rep (rec__red_black_trees__black_count__depth (us_split_fields11 b))))) (= (to_rep (rec__red_black_trees__black_count__count (us_split_fields11 a))) (to_rep (rec__red_black_trees__black_count__count (us_split_fields11 b))))) true false))
(declare-const value__size10 Int)
(declare-fun object__size10 (us_rep7) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 (us_rep7) Int)
(assert (<= 0 value__size10))
(assert (forall ((a us_rep7)) (<= 0 (object__size10 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a us_rep7)) (<= 0 (object__alignment10 a))))
(declare-const red_black_trees__black_count__status__first__bit Int)
(declare-const red_black_trees__black_count__status__last__bit Int)
(declare-const red_black_trees__black_count__status__position Int)
(assert (<= 0 red_black_trees__black_count__status__first__bit))
(assert (< red_black_trees__black_count__status__first__bit red_black_trees__black_count__status__last__bit))
(assert (<= 0 red_black_trees__black_count__status__position))
(declare-const red_black_trees__black_count__depth__first__bit Int)
(declare-const red_black_trees__black_count__depth__last__bit Int)
(declare-const red_black_trees__black_count__depth__position Int)
(assert (<= 0 red_black_trees__black_count__depth__first__bit))
(assert (< red_black_trees__black_count__depth__first__bit red_black_trees__black_count__depth__last__bit))
(assert (<= 0 red_black_trees__black_count__depth__position))
(declare-const red_black_trees__black_count__count__first__bit Int)
(declare-const red_black_trees__black_count__count__last__bit Int)
(declare-const red_black_trees__black_count__count__position Int)
(assert (<= 0 red_black_trees__black_count__count__first__bit))
(assert (< red_black_trees__black_count__count__first__bit red_black_trees__black_count__count__last__bit))
(assert (<= 0 red_black_trees__black_count__count__position))
(declare-fun user_eq16 (us_rep7 us_rep7) Bool)
(declare-const dummy16 us_rep7)
(declare-datatypes () ((black_count__ref (mk_black_count__ref (black_count__content us_rep7)))))
(define-fun black_count__ref___projection ((a black_count__ref)) us_rep7 (black_count__content a))
(declare-datatypes () ((map__ref4 (mk_map__ref4 (map__content4 (Array Int us_rep7))))))
(declare-fun slide4 ((Array Int us_rep7) Int Int) (Array Int us_rep7))
(assert (forall ((a (Array Int us_rep7))) (forall ((first Int)) (! (= (slide4 a first first) a) :pattern ((slide4 a first first))))))
(assert (forall ((a (Array Int us_rep7))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide4 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide4 a old_first new_first) i))))))))
(define-fun bool_eq12 ((a (Array Int us_rep7)) (a__first Int) (a__last Int) (b (Array Int us_rep7)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_158 Int)) (=> (and (<= a__first temp___idx_158) (<= temp___idx_158 a__last)) (= (bool_eq11 (select a temp___idx_158) (select b (+ (- b__first a__first) temp___idx_158))) true)))) true false))
(assert (forall ((a (Array Int us_rep7)) (b (Array Int us_rep7))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq12 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_158 Int)) (=> (and (<= a__first temp___idx_158) (<= temp___idx_158 a__last)) (= (bool_eq11 (select a temp___idx_158) (select b (+ (- b__first a__first) temp___idx_158))) true))))))))
(declare-fun nb_blacks (us_rep6) (Array Int us_rep7))
(declare-fun nb_blacks__function_guard ((Array Int us_rep7) us_rep6) Bool)
(assert true)
(assert (forall ((t us_rep6)) (! (= (= (same_nb_blacks t) true) (or (= (size (rec__red_black_trees__rbt__struct (us_split_fields9 t))) 0) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (let ((temp___585 (model__ (rec__red_black_trees__rbt__struct (us_split_fields9 t))))) (select temp___585 i)))) true) (= (rec__red_black_trees__black_count__status (us_split_fields11 (let ((temp___584 (nb_blacks t))) (select temp___584 i)))) true)))))) :pattern ((same_nb_blacks t)))))
(declare-fun eq (us_rep7 us_rep7) Bool)
(declare-fun eq__function_guard (Bool us_rep7 us_rep7) Bool)
(assert true)
(assert (forall ((x us_rep7) (y us_rep7)) (! (= (= (eq x y) true) (and (= (= (rec__red_black_trees__black_count__status (us_split_fields11 x)) true) (= (rec__red_black_trees__black_count__status (us_split_fields11 y)) true)) (= (to_rep (rec__red_black_trees__black_count__count (us_split_fields11 x))) (to_rep (rec__red_black_trees__black_count__count (us_split_fields11 y)))))) :pattern ((eq x y)))))
(declare-const rliteral extended_index_type)
(assert (= (extended_index_typeqtint rliteral) 0))
(assert (forall ((t us_rep6)) (! (=> (and (dynamic_invariant6 t true true true true) (not (= (size (rec__red_black_trees__rbt__struct (us_split_fields9 t))) 0))) (let ((result (nb_blacks t))) (and (= (bool_eq11 (select result 0) (mk___rep5 (mk___split_fields5 (distinct 1 0) rliteral rliteral))) true) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (let ((temp___616 (model__ (rec__red_black_trees__rbt__struct (us_split_fields9 t))))) (select temp___616 i)))) true) (and (and (= (= (rec__red_black_trees__black_count__status (us_split_fields11 (select result i))) true) (= (to_rep (rec__red_black_trees__black_count__count (us_split_fields11 (select result (peek (rec__red_black_trees__rbt__struct (us_split_fields9 t)) i 0))))) (to_rep (rec__red_black_trees__black_count__count (us_split_fields11 (select result (peek (rec__red_black_trees__rbt__struct (us_split_fields9 t)) i 1))))))) (= (to_rep (rec__red_black_trees__black_count__depth (us_split_fields11 (select result i)))) (+ 1 (ite (< (to_rep (rec__red_black_trees__black_count__depth (us_split_fields11 (select result (peek (rec__red_black_trees__rbt__struct (us_split_fields9 t)) i 0))))) (to_rep (rec__red_black_trees__black_count__depth (us_split_fields11 (select result (peek (rec__red_black_trees__rbt__struct (us_split_fields9 t)) i 1)))))) (to_rep (rec__red_black_trees__black_count__depth (us_split_fields11 (select result (peek (rec__red_black_trees__rbt__struct (us_split_fields9 t)) i 1))))) (to_rep (rec__red_black_trees__black_count__depth (us_split_fields11 (select result (peek (rec__red_black_trees__rbt__struct (us_split_fields9 t)) i 0))))))))) (= (to_rep (rec__red_black_trees__black_count__count (us_split_fields11 (select result i)))) (+ (ite (= (to_rep3 (let ((temp___615 (rec__red_black_trees__rbt__color (us_split_fields9 t)))) (select temp___615 i))) 0) 1 0) (to_rep (rec__red_black_trees__black_count__count (us_split_fields11 (select result (peek (rec__red_black_trees__rbt__struct (us_split_fields9 t)) i 0)))))))))))))) :pattern ((nb_blacks t)))))
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const v Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const c61b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const c62b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(declare-const attr__ATTRIBUTE_ADDRESS7 Int)
(declare-const c67b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS8 Int)
(declare-const c68b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS9 Int)
(declare-const attr__ATTRIBUTE_ADDRESS10 Int)
(declare-const c75b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS11 Int)
(declare-const c76b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS12 Int)
(declare-const c77b Int)
(declare-const attr__ATTRIBUTE_ADDRESS13 Int)
(declare-const attr__ATTRIBUTE_ADDRESS14 Int)
(declare-const c81b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS15 Int)
(declare-const c82b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS16 Int)
(declare-const c83b Int)
(declare-const attr__ATTRIBUTE_ADDRESS17 Int)
(declare-const y Int)
(declare-const attr__ATTRIBUTE_ADDRESS18 Int)
(declare-const attr__ATTRIBUTE_ADDRESS19 Int)
(declare-const c87b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS20 Int)
(declare-const c88b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS21 Int)
(declare-const c89b Int)
(declare-const attr__ATTRIBUTE_ADDRESS22 Int)
(declare-const y1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS23 Int)
(declare-const attr__ATTRIBUTE_ADDRESS24 Int)
(declare-const c94b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS25 Int)
(declare-const c95b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS26 Int)
(declare-const c96b Int)
(declare-const attr__ATTRIBUTE_ADDRESS27 Int)
(declare-const attr__ATTRIBUTE_ADDRESS28 Int)
(declare-const c100b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS29 Int)
(declare-const c101b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS30 Int)
(declare-const c102b Int)
(declare-const attr__ATTRIBUTE_ADDRESS31 Int)
(declare-const y2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS32 Int)
(declare-const attr__ATTRIBUTE_ADDRESS33 Int)
(declare-const c106b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS34 Int)
(declare-const c107b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS35 Int)
(declare-const c108b Int)
(declare-const attr__ATTRIBUTE_ADDRESS36 Int)
(declare-const y3 Int)
(declare-const attr__ATTRIBUTE_ADDRESS37 Int)
(declare-const attr__ATTRIBUTE_ADDRESS38 Int)
(declare-const c114b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS39 Int)
(declare-const c115b us_rep6)
(declare-const attr__ATTRIBUTE_ADDRESS40 Int)
(declare-const attr__ATTRIBUTE_ADDRESS41 Int)
(assert (forall ((temp___551 Int)) (=> (dynamic_invariant7 temp___551 true true true true) (forall ((temp___552 Int)) (= (to_rep3 (select (temp_____aggregate_def_549 temp___551) temp___552)) temp___551)))))
(assert true)
(assert (forall ((t us_rep6)) (! (= (= (invariant__ t) true) (and (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (or (= (parent (rec__red_black_trees__rbt__struct (us_split_fields9 t)) i) 0) (= (to_rep3 (let ((temp___589 (rec__red_black_trees__rbt__color (us_split_fields9 t)))) (select temp___589 (parent (rec__red_black_trees__rbt__struct (us_split_fields9 t)) i)))) 1)) (= (to_rep3 (let ((temp___588 (rec__red_black_trees__rbt__color (us_split_fields9 t)))) (select temp___588 i))) 0)))) (= (same_nb_blacks t) true))) :pattern ((invariant__ t)))))
(define-fun dynamic_invariant8 ((temp___expr_191 Int) (temp___is_init_187 Bool) (temp___skip_constant_188 Bool) (temp___do_toplevel_189 Bool) (temp___do_typ_inv_190 Bool)) Bool (=> (or (= temp___is_init_187 true) (<= 0 2)) (in_range3 temp___expr_191)))
(define-fun dynamic_invariant9 ((temp___expr_241 us_rep5) (temp___is_init_237 Bool) (temp___skip_constant_238 Bool) (temp___do_toplevel_239 Bool) (temp___do_typ_inv_240 Bool)) Bool (=> (= temp___do_toplevel_239 true) (=> (= temp___is_init_237 true) (< (length (rec__tree_model__path_type__a (us_split_fields7 temp___expr_241))) 100))))
(define-fun default_initial_assumption5 ((temp___expr_243 us_rep5) (temp___skip_top_level_244 Bool)) Bool (and (= (length (rec__tree_model__path_type__a (us_split_fields7 temp___expr_243))) 0) (= (rec__tree_model__path_type__k (us_split_fields7 temp___expr_243)) (distinct 0 0))))
(define-fun dynamic_predicate ((temp___247 us_rep5)) Bool (< (length (rec__tree_model__path_type__a (us_split_fields7 temp___247))) 100))
(declare-fun get (us_rep4 Int) Int)
(declare-fun get__function_guard (Int us_rep4 Int) Bool)
(define-fun last ((container us_rep4)) Int (+ 0 (length container)))
(declare-fun last__function_guard (Int us_rep4) Bool)
(define-fun olt ((left us_rep4) (right us_rep4)) Bool (and (< (length left) (length right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun olt__function_guard (Bool us_rep4 us_rep4) Bool)
(declare-fun is_add (us_rep4 Int us_rep4) Bool)
(declare-fun is_add__function_guard (Bool us_rep4 Int us_rep4) Bool)
(define-fun oeq1 ((left us_rep4) (right us_rep4)) Bool (and (= (length left) (length right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun oeq__function_guard1 (Bool us_rep4 us_rep4) Bool)
(assert (forall ((a us_rep4) (b us_rep4)) (! (= (user_eq11 a b) (oeq1 a b)) :pattern ((user_eq11 a b)))))
(define-fun default_initial_assumption6 ((temp___expr_234 us_rep4) (temp___skip_top_level_235 Bool)) Bool (=> (not (= temp___skip_top_level_235 true)) (= (length temp___expr_234) 0)))
(assert true)
(assert (forall ((s1 us_rep4) (s2 us_rep4)) (forall ((d Int)) (! (= (= (is_add s1 d s2) true) (and (and (= (- (length s2) 1) (length s1)) (= (olt s1 s2) true)) (= (get s2 (length s2)) d))) :pattern ((is_add s1 d s2))))))
(declare-sort count_type 0)
(declare-fun count_typeqtint (count_type) Int)
(assert (forall ((i count_type)) (and (<= 0 (count_typeqtint i)) (<= (count_typeqtint i) 2147483647))))
(define-fun in_range7 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq17 (count_type count_type) Bool)
(declare-const dummy17 count_type)
(declare-datatypes () ((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type (count_type__content a))
(define-fun dynamic_invariant10 ((temp___expr_170 Int) (temp___is_init_166 Bool) (temp___skip_constant_167 Bool) (temp___do_toplevel_168 Bool) (temp___do_typ_inv_169 Bool)) Bool (=> (or (= temp___is_init_166 true) (<= 0 2147483647)) (in_range7 temp___expr_170)))
(assert (forall ((t us_rep3)) (forall ((v1 Int)) (! (=> (and (dynamic_invariant2 t true true true true) (dynamic_invariant v1 true true true true)) (= (= (contains2 t v1) true) (= (contains (values t) v1) true))) :pattern ((contains2 t v1))))))
(declare-const rliteral1 natural)
(assert (= (naturalqtint rliteral1) 0))
(assert (forall ((temp___436 Int)) (=> (dynamic_invariant temp___436 true true true true) (forall ((temp___437 Int)) (= (select (temp_____aggregate_def_434 temp___436) temp___437) rliteral1)))))
(define-fun dynamic_invariant11 ((temp___expr_317 us_rep2) (temp___is_init_313 Bool) (temp___skip_constant_314 Bool) (temp___do_toplevel_315 Bool) (temp___do_typ_inv_316 Bool)) Bool (=> (= temp___do_typ_inv_316 true) (= (tree_structure temp___expr_317) true)))
(define-fun default_initial_assumption7 ((temp___expr_320 us_rep2) (temp___skip_top_level_321 Bool)) Bool (and (and (= (to_rep (rec__binary_trees__forest__s (us_split_fields3 temp___expr_320))) 0) (forall ((temp___323 Int)) (=> (and (<= 1 temp___323) (<= temp___323 100)) (and (and (and (= (to_rep (rec__binary_trees__cell__left (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 temp___expr_320)) temp___323)))) 0) (= (to_rep (rec__binary_trees__cell__right (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 temp___expr_320)) temp___323)))) 0)) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 temp___expr_320)) temp___323)))) 0)) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 temp___expr_320)) temp___323)))) 2))))) (=> (not (= temp___skip_top_level_321 true)) (= (size1 temp___expr_320) 0))))
(define-fun type_invariant2 ((temp___326 us_rep2)) Bool (= (tree_structure temp___326) true))
(assert true)
(assert (forall ((f us_rep2)) (! (=> (dynamic_invariant11 f true true true true) (dynamic_invariant1 (size1 f) true false true true)) :pattern ((size1 f)))))
(assert (forall ((f us_rep2)) (forall ((i Int)) (! (=> (and (dynamic_invariant11 f true true true true) (dynamic_invariant3 i true true true true)) (=> (< (size1 f) i) (not (= (valid_root f i) true)))) :pattern ((valid_root f i))))))
(assert (forall ((f us_rep2)) (forall ((i Int)) (! (=> (and (dynamic_invariant11 f true true true true) (dynamic_invariant3 i true true true true)) (let ((result (parent1 f i))) (and (and (=> (= (valid_root f i) true) (= result 0)) (=> (= (size1 f) 0) (= result 0))) (dynamic_invariant1 result true false true true)))) :pattern ((parent1 f i))))))
(assert (forall ((f us_rep2)) (forall ((i Int)) (! (=> (and (and (dynamic_invariant11 f true true true true) (dynamic_invariant3 i true true true true)) (not (= (parent1 f i) 0))) (dynamic_invariant4 (position f i) true false true true)) :pattern ((position f i))))))
(assert (forall ((f us_rep2)) (forall ((i Int) (d Int)) (! (=> (and (and (dynamic_invariant11 f true true true true) (dynamic_invariant3 i true true true true)) (dynamic_invariant4 d true true true true)) (let ((result (peek1 f i d))) (and (and (ite (not (= result 0)) (and (= (position f result) d) (= (parent1 f result) i)) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (= (parent1 f j) i) (not (= (position f j) d)))))) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (parent1 f j) i) (= (position f j) d)) (= result j))))) (dynamic_invariant1 result true false true true)))) :pattern ((peek1 f i d))))))
(assert (forall ((f us_rep2)) (forall ((root1 Int)) (! (=> (and (and (dynamic_invariant11 f true true true true) (dynamic_invariant3 root1 true true true true)) (= (valid_root f root1) true)) (let ((result (model__1 f root1))) (and (and (= (rec__tree_model__path_type__k (us_split_fields7 (select result root1))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields7 (select result root1)))) 0) (and (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (not (= i root1)) (ite (and (not (= (parent1 f i) 0)) (= (rec__tree_model__path_type__k (us_split_fields7 (select result (parent1 f i)))) true)) (= (rec__tree_model__path_type__k (us_split_fields7 (select result i))) true) (not (= (rec__tree_model__path_type__k (us_split_fields7 (select result i))) true)))))) (and (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields7 (select result i))) true) (not (= i root1))) (= (is_add (rec__tree_model__path_type__a (us_split_fields7 (select result (parent1 f i)))) (position f i) (rec__tree_model__path_type__a (us_split_fields7 (select result i)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields7 (select result i)))) 0)))) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select result i))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields7 (select result j))) true) (= (oeq1 (rec__tree_model__path_type__a (us_split_fields7 (select result i))) (rec__tree_model__path_type__a (us_split_fields7 (select result j)))) true)) (= j i))))))))))) (dynamic_invariant5 result true false true true)))) :pattern ((model__1 f root1))))))
(define-fun default_initial_assumption8 ((temp___expr_301 us_rep1) (temp___skip_top_level_302 Bool)) Bool (and (and (and (= (to_rep (rec__binary_trees__cell__left (us_split_fields1 temp___expr_301))) 0) (= (to_rep (rec__binary_trees__cell__right (us_split_fields1 temp___expr_301))) 0)) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields1 temp___expr_301))) 0)) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields1 temp___expr_301))) 2)))
(define-fun default_initial_assumption9 ((temp___expr_309 (Array Int us_rep1)) (temp___skip_top_level_310 Bool)) Bool (forall ((temp___311 Int)) (=> (and (<= 1 temp___311) (<= temp___311 100)) (and (and (and (= (to_rep (rec__binary_trees__cell__left (us_split_fields1 (select temp___expr_309 temp___311)))) 0) (= (to_rep (rec__binary_trees__cell__right (us_split_fields1 (select temp___expr_309 temp___311)))) 0)) (= (to_rep (rec__binary_trees__cell__parent (us_split_fields1 (select temp___expr_309 temp___311)))) 0)) (= (to_rep1 (rec__binary_trees__cell__position (us_split_fields1 (select temp___expr_309 temp___311)))) 2)))))
(assert true)
(declare-sort extended_index 0)
(declare-fun extended_indexqtint (extended_index) Int)
(assert (forall ((i extended_index)) (and (<= 0 (extended_indexqtint i)) (<= (extended_indexqtint i) 2147483647))))
(define-fun in_range8 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq18 (extended_index extended_index) Bool)
(declare-const dummy18 extended_index)
(declare-datatypes () ((extended_index__ref (mk_extended_index__ref (extended_index__content extended_index)))))
(define-fun extended_index__ref___projection ((a extended_index__ref)) extended_index (extended_index__content a))
(define-fun dynamic_invariant12 ((temp___expr_226 Int) (temp___is_init_222 Bool) (temp___skip_constant_223 Bool) (temp___do_toplevel_224 Bool) (temp___do_typ_inv_225 Bool)) Bool (=> (or (= temp___is_init_222 true) (<= 0 2147483647)) (in_range8 temp___expr_226)))
(assert (forall ((container us_rep4)) (! (let ((result (length container))) (and (<= (+ 0 result) 2147483647) (dynamic_invariant10 result true false true true))) :pattern ((length container)))))
(declare-sort element_type 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq19 (element_type element_type) Bool)
(declare-const dummy19 element_type)
(declare-datatypes () ((element_type__ref (mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___projection ((a element_type__ref)) element_type (element_type__content a))
(define-fun dynamic_invariant13 ((temp___expr_219 Int) (temp___is_init_215 Bool) (temp___skip_constant_216 Bool) (temp___do_toplevel_217 Bool) (temp___do_typ_inv_218 Bool)) Bool (=> (or (= temp___is_init_215 true) (<= 0 1)) (in_range9 temp___expr_219)))
(assert (forall ((container us_rep4)) (forall ((position2 Int)) (! (=> (and (dynamic_invariant12 position2 true true true true) (and (<= 1 position2) (<= position2 (last container)))) (dynamic_invariant13 (get container position2) true false true true)) :pattern ((get container position2))))))
(declare-sort element_type1 0)
(declare-fun element_typeqtint (element_type1) Int)
(assert (forall ((i element_type1)) (and (<= 0 (element_typeqtint i)) (<= (element_typeqtint i) 2147483647))))
(define-fun in_range10 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq20 (element_type1 element_type1) Bool)
(declare-const dummy20 element_type1)
(declare-datatypes () ((element_type__ref1 (mk_element_type__ref1 (element_type__content1 element_type1)))))
(define-fun element_type__ref___2__projection ((a element_type__ref1)) element_type1 (element_type__content1 a))
(define-fun dynamic_invariant14 ((temp___expr_270 Int) (temp___is_init_266 Bool) (temp___skip_constant_267 Bool) (temp___do_toplevel_268 Bool) (temp___do_typ_inv_269 Bool)) Bool (=> (or (= temp___is_init_266 true) (<= 0 2147483647)) (in_range10 temp___expr_270)))
(assert (forall ((container us_rep)) (forall ((item Int)) (! (=> (dynamic_invariant14 item true true true true) (=> (= (distinct 1 0) true) (=> (exists ((e Int)) (and (and (in_range10 e) (= (contains container e) true)) (= e item))) (= (contains container item) true)))) :pattern ((contains container item))))))
(declare-fun length1 (us_rep) Int)
(declare-fun length__function_guard1 (Int us_rep) Bool)
(assert (forall ((container us_rep)) (! (dynamic_invariant10 (length1 container) true false true true) :pattern ((length1 container)))))
(assert (forall ((left us_rep) (right us_rep)) (! (= (= (ole left right) true) (forall ((item Int)) (=> (and (in_range10 item) (= (contains left item) true)) (= (contains right item) true)))) :pattern ((ole left right)))))
(assert (forall ((container us_rep)) (! (let ((result (is_empty container))) (and (= (= result true) (forall ((item Int)) (not (and (in_range10 item) (= (contains container item) true))))) (= (= result true) (= (length1 container) 0)))) :pattern ((is_empty container)))))
(assert (forall ((left us_rep) (right us_rep)) (forall ((item Int)) (! (=> (dynamic_invariant14 item true true true true) (= (= (included_except left right item) true) (forall ((e Int)) (=> (and (in_range10 e) (= (contains left e) true)) (or (= (contains right e) true) (= e item)))))) :pattern ((included_except left right item))))))
(declare-const t__split_fields extended_index_type)
(declare-const t__split_fields1 extended_index_type)
(declare-const t__split_fields2 (Array Int us_rep1))
(declare-const t__split_fields3 (Array Int natural))
(declare-const t__split_fields4 (Array Int color_type))
(declare-const x Int)
(declare-const y4 Int)
(declare-const t_old__split_fields extended_index_type)
(declare-const t_old__split_fields1 extended_index_type)
(declare-const t_old__split_fields2 (Array Int us_rep1))
(declare-const t_old__split_fields3 (Array Int natural))
(declare-const t_old__split_fields4 (Array Int color_type))
(declare-const n Int)
(declare-const n1 int__ref)
(declare-const o color_type)
(declare-const o1 Int)
(declare-const o2 (Array Int color_type))
(declare-const o3 us_split_fields8)
(declare-const temp___653 us_rep6)
(declare-const o4 Int)
(declare-const o5 Int)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Bool)
(declare-const o9 Int)
(declare-const o10 Int)
(declare-const o11 Int)
(declare-const o12 Int)
(declare-const o13 Int)
(declare-const o14 Int)
(declare-const o15 Int)
(declare-const o16 Int)
(declare-const o17 Int)
(declare-const o18 Int)
(declare-const o19 Int)
(declare-const o20 color_type)
(declare-const o21 Int)
(declare-const o22 (Array Int color_type))
(declare-const o23 us_split_fields8)
(declare-const temp___941 us_rep6)
(declare-const o24 Int)
(declare-const temp___943 Int)
(declare-const o25 color_type)
(declare-const o26 Int)
(declare-const o27 (Array Int color_type))
(declare-const o28 us_split_fields8)
(declare-const temp___945 us_rep6)
(declare-const o29 Int)
(declare-const temp___947 Int)
(declare-const o30 color_type)
(declare-const o31 Int)
(declare-const o32 (Array Int color_type))
(declare-const o33 us_split_fields8)
(declare-const temp___949 us_rep6)
(declare-const o34 Int)
(declare-const o35 Int)
(declare-const o36 Int)
(declare-const o37 Int)
(declare-const red_black_trees__insert__L_8__C77b__assume Int)
(declare-const o38 Int)
(declare-const o39 Int)
(declare-const o40 Int)
(declare-const o41 Int)
(declare-const o42 Int)
(declare-const o43 Int)
(declare-const o44 Int)
(declare-const red_black_trees__insert__L_8__C83b__assume Int)
(declare-const o45 Int)
(declare-const red_black_trees__insert__L_8__B84b__y__assume Int)
(declare-const o46 Int)
(declare-const temp___866 Int)
(declare-const o47 color_type)
(declare-const o48 Int)
(declare-const o49 (Array Int color_type))
(declare-const o50 us_split_fields8)
(declare-const temp___868 us_rep6)
(declare-const o51 Int)
(declare-const o52 Int)
(declare-const o53 Int)
(declare-const temp___870 Int)
(declare-const o54 color_type)
(declare-const o55 Int)
(declare-const o56 (Array Int color_type))
(declare-const o57 us_split_fields8)
(declare-const temp___872 us_rep6)
(declare-const o58 Int)
(declare-const o59 Int)
(declare-const o60 Int)
(declare-const o61 Int)
(declare-const o62 Int)
(declare-const o63 Int)
(declare-const o64 Int)
(declare-const o65 Int)
(declare-const o66 Int)
(declare-const red_black_trees__insert__L_8__C89b__assume Int)
(declare-const o67 Int)
(declare-const red_black_trees__insert__L_8__B90b__y__assume Int)
(declare-const o68 Int)
(declare-const o69 Int)
(declare-const o70 Int)
(declare-const o71 Int)
(declare-const o72 Int)
(declare-const o73 Int)
(declare-const o74 Int)
(declare-const o75 color_type)
(declare-const o76 Int)
(declare-const o77 (Array Int color_type))
(declare-const o78 us_split_fields8)
(declare-const temp___789 us_rep6)
(declare-const o79 Int)
(declare-const temp___791 Int)
(declare-const o80 color_type)
(declare-const o81 Int)
(declare-const o82 (Array Int color_type))
(declare-const o83 us_split_fields8)
(declare-const temp___793 us_rep6)
(declare-const o84 Int)
(declare-const temp___795 Int)
(declare-const o85 color_type)
(declare-const o86 Int)
(declare-const o87 (Array Int color_type))
(declare-const o88 us_split_fields8)
(declare-const temp___797 us_rep6)
(declare-const o89 Int)
(declare-const o90 Int)
(declare-const o91 Int)
(declare-const o92 Int)
(declare-const red_black_trees__insert__L_8__C96b__assume Int)
(declare-const o93 Int)
(declare-const o94 Int)
(declare-const o95 Int)
(declare-const o96 Int)
(declare-const o97 Int)
(declare-const o98 Int)
(declare-const o99 Int)
(declare-const red_black_trees__insert__L_8__C102b__assume Int)
(declare-const o100 Int)
(declare-const red_black_trees__insert__L_8__B103b__y__assume Int)
(declare-const o101 Int)
(declare-const temp___714 Int)
(declare-const o102 color_type)
(declare-const o103 Int)
(declare-const o104 (Array Int color_type))
(declare-const o105 us_split_fields8)
(declare-const temp___716 us_rep6)
(declare-const o106 Int)
(declare-const o107 Int)
(declare-const o108 Int)
(declare-const temp___718 Int)
(declare-const o109 color_type)
(declare-const o110 Int)
(declare-const o111 (Array Int color_type))
(declare-const o112 us_split_fields8)
(declare-const temp___720 us_rep6)
(declare-const o113 Int)
(declare-const o114 Int)
(declare-const o115 Int)
(declare-const o116 Int)
(declare-const o117 Int)
(declare-const o118 Int)
(declare-const o119 Int)
(declare-const o120 Int)
(declare-const o121 Int)
(declare-const red_black_trees__insert__L_8__C108b__assume Int)
(declare-const o122 Int)
(declare-const red_black_trees__insert__L_8__B109b__y__assume Int)
(declare-const n2 Int)
(declare-const result us_split_fields__ref4)
(declare-const t_old__split_fields5 us_split_fields8)
(declare-const x1 Int)
(declare-const search_trees__insert__t__fields us_split_fields4)
(declare-const result1 us_split_fields__ref4)
(declare-const t__split_fields5 us_split_fields8)
(declare-const n3 int__ref)
(declare-const n4 Int)
(declare-const result2 us_split_fields__ref4)
(declare-const t__split_fields6 us_split_fields8)
(declare-const result3 Bool)
(declare-const result4 Bool)
(declare-const t__split_fields7 us_split_fields8)
(declare-const x2 Int)
(declare-const y5 Int)
(declare-const t_old__split_fields6 us_split_fields8)
(declare-const n5 Int)
(declare-const n6 Int)
(declare-const n7 Int)
(declare-const n8 Int)
(declare-const n9 Int)
(declare-const n10 Int)
(declare-const rho us_split_fields4)
(declare-const rho1 us_split_fields4)
(declare-const rho2 us_split_fields4)
(declare-const rho3 us_split_fields4)
(declare-const result5 us_split_fields__ref4)
(declare-const t_old__split_fields7 us_split_fields8)
(declare-const result6 Bool)
(declare-const result7 int__ref)
(declare-const y6 Int)
(declare-const result8 Bool)
(declare-const result9 us_split_fields__ref4)
(declare-const t__split_fields8 us_split_fields8)
(declare-const result10 us_split_fields__ref4)
(declare-const t__split_fields9 us_split_fields8)
(declare-const result11 us_split_fields__ref4)
(declare-const t__split_fields10 us_split_fields8)
(declare-const result12 int__ref)
(declare-const x3 Int)
(declare-const n11 int__ref)
(declare-const n12 Int)
(declare-const result13 Bool)
(declare-const result14 int__ref)
(declare-const x4 Int)
(declare-const search_trees__left_rotate__t__fields us_split_fields4)
(declare-const result15 us_split_fields__ref4)
(declare-const t__split_fields11 us_split_fields8)
(declare-const n13 int__ref)
(declare-const n14 Int)
(declare-const result16 us_split_fields__ref4)
(declare-const t_old__split_fields8 us_split_fields8)
(declare-const t__split_fields12 us_split_fields__ref4)
(declare-const x5 int__ref)
(declare-const t_old__split_fields9 us_split_fields__ref4)
(declare-const n15 int__ref)
(declare-const t__split_fields13 us_split_fields8)
(declare-const x6 Int)
(declare-const t_old__split_fields10 us_split_fields8)
(declare-const n16 Int)
(declare-const rho4 us_split_fields4)
(declare-const result17 us_split_fields__ref4)
(declare-const t__split_fields14 us_split_fields8)
(declare-const result18 us_split_fields__ref4)
(declare-const t__split_fields15 us_split_fields8)
(declare-const search_trees__right_rotate__t__fields us_split_fields4)
(declare-const result19 us_split_fields__ref4)
(declare-const t__split_fields16 us_split_fields8)
(declare-const n17 int__ref)
(declare-const n18 Int)
(declare-const t__split_fields17 us_split_fields__ref4)
(declare-const x7 int__ref)
(declare-const t_old__split_fields11 us_split_fields__ref4)
(declare-const n19 int__ref)
(declare-const n20 int__ref)
(declare-const n21 int__ref)
(declare-const t__split_fields18 us_split_fields8)
(declare-const x8 Int)
(declare-const t_old__split_fields12 us_split_fields8)
(declare-const n22 Int)
(declare-const n23 Int)
(declare-const n24 Int)
(declare-const rho5 us_split_fields4)
(declare-const rho6 us_split_fields4)
(declare-const result20 int__ref)
(declare-const y7 Int)
(declare-const result21 Bool)
(declare-const result22 us_split_fields__ref4)
(declare-const t__split_fields19 us_split_fields8)
(declare-const result23 us_split_fields__ref4)
(declare-const t__split_fields20 us_split_fields8)
(declare-const result24 us_split_fields__ref4)
(declare-const t__split_fields21 us_split_fields8)
(declare-const result25 int__ref)
(declare-const x9 Int)
(declare-const n25 int__ref)
(declare-const n26 Int)
(declare-const result26 Bool)
(declare-const result27 int__ref)
(declare-const x10 Int)
(declare-const search_trees__right_rotate__t__fields1 us_split_fields4)
(declare-const result28 us_split_fields__ref4)
(declare-const t__split_fields22 us_split_fields8)
(declare-const n27 int__ref)
(declare-const n28 Int)
(declare-const result29 us_split_fields__ref4)
(declare-const t_old__split_fields13 us_split_fields8)
(declare-const t__split_fields23 us_split_fields__ref4)
(declare-const x11 int__ref)
(declare-const t_old__split_fields14 us_split_fields__ref4)
(declare-const n29 int__ref)
(declare-const t__split_fields24 us_split_fields8)
(declare-const x12 Int)
(declare-const t_old__split_fields15 us_split_fields8)
(declare-const n30 Int)
(declare-const rho7 us_split_fields4)
(declare-const result30 us_split_fields__ref4)
(declare-const t__split_fields25 us_split_fields8)
(declare-const result31 us_split_fields__ref4)
(declare-const t__split_fields26 us_split_fields8)
(declare-const search_trees__left_rotate__t__fields1 us_split_fields4)
(declare-const result32 us_split_fields__ref4)
(declare-const t__split_fields27 us_split_fields8)
(declare-const n31 int__ref)
(declare-const n32 Int)
(declare-const t__split_fields28 us_split_fields__ref4)
(declare-const x13 int__ref)
(declare-const t_old__split_fields16 us_split_fields__ref4)
(declare-const n33 int__ref)
(declare-const n34 int__ref)
(declare-const n35 int__ref)
(declare-const t__split_fields29 us_split_fields8)
(declare-const x14 Int)
(declare-const t_old__split_fields17 us_split_fields8)
(declare-const n36 Int)
(declare-const n37 Int)
(declare-const n38 Int)
(declare-const rho8 us_split_fields4)
(declare-const rho9 us_split_fields4)
(declare-const t__split_fields30 us_split_fields__ref4)
(declare-const x15 int__ref)
(declare-const y8 int__ref)
(declare-const t_old__split_fields18 us_split_fields__ref4)
(declare-const n39 int__ref)
(declare-const n40 int__ref)
(declare-const n41 int__ref)
(declare-const n42 int__ref)
(declare-const n43 int__ref)
(declare-const n44 int__ref)
(declare-const t__split_fields31 us_split_fields8)
(declare-const x16 Int)
(declare-const y9 Int)
(declare-const t_old__split_fields19 us_split_fields8)
(declare-const n45 Int)
(declare-const n46 Int)
(declare-const n47 Int)
(declare-const n48 Int)
(declare-const n49 Int)
(declare-const n50 Int)
(declare-const rho10 us_split_fields4)
(declare-const rho11 us_split_fields4)
(declare-const rho12 us_split_fields4)
(declare-const rho13 us_split_fields4)
(assert (dynamic_invariant6 (mk___rep4 (mk___split_fields4 (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) t__split_fields4)) true false true true))
(assert (in_range1 v))
(assert (= (invariant__ (mk___rep4 (mk___split_fields4 (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) t__split_fields4))) true))
(assert (< (size2 (mk___rep4 (mk___split_fields4 (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) t__split_fields4))) 100))
(assert (=> (<= 0 100) (in_range2 x)))
(assert (=> (<= 0 100) (in_range2 y4)))
(assert (= result (mk___split_fields__ref4 (mk___split_fields4 (mk___rep2 (mk___split_fields2 t_old__split_fields (mk___rep1 (mk___split_fields1 t_old__split_fields1 t_old__split_fields2)) t_old__split_fields3)) t_old__split_fields4))))
(assert (= t_old__split_fields5 (mk___split_fields4 (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) t__split_fields4)))
(assert (dynamic_invariant6 (mk___rep4 t_old__split_fields5) true false true true))
(assert (and (ite (= (contains (values (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3))) v) true) (and (and (and (and (and (and (= x1 0) (= (oeq (values (mk___rep2 search_trees__insert__t__fields)) (values (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)))) true)) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (= (parent (mk___rep2 search_trees__insert__t__fields) j) (parent (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) j))))) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (not (= (parent (mk___rep2 search_trees__insert__t__fields) j) 0)) (= (position1 (mk___rep2 search_trees__insert__t__fields) j) (position1 (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) j)))))) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__insert__t__fields)) j))) true) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3))) j))) true))))) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3))) j))) true) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__insert__t__fields)) j))) true))))) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (forall ((d Int)) (=> (and (<= 0 d) (<= d 1)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__insert__t__fields)) j))) true) (= (peek (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) j d) (peek (mk___rep2 search_trees__insert__t__fields) j d)))))))) (ite (= (= (size (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3))) 0) true) (and (and (and (and (and (not (= x1 0)) (= (size (mk___rep2 search_trees__insert__t__fields)) 1)) (= (root (mk___rep2 search_trees__insert__t__fields)) x1)) (= (is_add__2 (values (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3))) v (values (mk___rep2 search_trees__insert__t__fields))) true)) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (not (= i (root (mk___rep2 search_trees__insert__t__fields)))) (not (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__insert__t__fields)) i))) true)))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (= (parent (mk___rep2 search_trees__insert__t__fields) i) (parent (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) i))))) (and (and (and (and (and (and (and (and (and (and (and (not (= x1 0)) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__insert__t__fields)) x1))) true)) (= (root (mk___rep2 search_trees__insert__t__fields)) (root (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3))))) (= (size (mk___rep2 search_trees__insert__t__fields)) (+ (size (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3))) 1))) (= (is_add__2 (values (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3))) v (values (mk___rep2 search_trees__insert__t__fields))) true)) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (not (= x1 j)) (= (parent (mk___rep2 search_trees__insert__t__fields) j) (parent (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) j)))))) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (not (= x1 j)) (not (= (parent (mk___rep2 search_trees__insert__t__fields) j) 0))) (= (position1 (mk___rep2 search_trees__insert__t__fields) j) (position1 (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) j)))))) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (not (= x1 j)) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__insert__t__fields)) j))) true)) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3))) j))) true))))) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3))) j))) true) (and (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__insert__t__fields)) j))) true) (not (= x1 j))))))) (forall ((d Int)) (=> (and (<= 0 d) (<= d 1)) (= (peek (mk___rep2 search_trees__insert__t__fields) x1 d) 0)))) (= (peek (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) (parent (mk___rep2 search_trees__insert__t__fields) x1) (position1 (mk___rep2 search_trees__insert__t__fields) x1)) 0)) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (forall ((d Int)) (=> (and (<= 0 d) (<= d 1)) (=> (and (and (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__insert__t__fields)) j))) true) (not (= x1 j))) (or (not (= j (parent (mk___rep2 search_trees__insert__t__fields) x1))) (not (= d (position1 (mk___rep2 search_trees__insert__t__fields) x1))))) (= (peek (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) j d) (peek (mk___rep2 search_trees__insert__t__fields) j d)))))))))) (and (dynamic_invariant2 (mk___rep2 search_trees__insert__t__fields) true true true true) (in_range2 x1))))
(assert (= result1 (mk___split_fields__ref4 (mk___split_fields4 (mk___rep2 (mk___split_fields2 t__split_fields (mk___rep1 (mk___split_fields1 t__split_fields1 t__split_fields2)) t__split_fields3)) t__split_fields4))))
(assert (= t__split_fields5 (mk___split_fields4 (mk___rep2 search_trees__insert__t__fields) t__split_fields4)))
(assert (not (= x1 0)))
(assert (= n3 (mk_int__ref n)))
(assert (= n4 n2))
(assert (= (to_rep3 o) 1))
(assert (and (<= 1 x1) (<= x1 100)))
(assert (= o1 x1))
(assert (= o2 (store (rec__red_black_trees__rbt__color t__split_fields5) o1 o)))
(assert (= o3 (mk___split_fields4 (rec__red_black_trees__rbt__struct t__split_fields5) o2)))
(assert (= temp___653 (mk___rep4 o3)))
(assert (= result2 (mk___split_fields__ref4 t__split_fields5)))
(assert (= t__split_fields6 (us_split_fields9 temp___653)))
(assert (= (mk___rep4 t_old__split_fields5) c67b))
(assert (dynamic_invariant6 c67b true false true true))
(assert (= (mk___rep4 t__split_fields6) c68b))
(assert (dynamic_invariant6 c68b true false true true))
(assert (= (same_nb_blacks c68b) true))
(assert (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (and (not (= i x1)) (or (= (parent (rec__red_black_trees__rbt__struct t__split_fields6) i) 0) (= (to_rep3 (select (rec__red_black_trees__rbt__color t__split_fields6) (parent (rec__red_black_trees__rbt__struct t__split_fields6) i))) 1))) (= (to_rep3 (select (rec__red_black_trees__rbt__color t__split_fields6) i)) 0)))))
(assert (and (= o7 (root (rec__red_black_trees__rbt__struct t__split_fields6))) (and (in_range4 o7) (= o7 (to_rep (rec__search_trees__search_tree__root (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields6))))))))
(assert (= o8 (ite (= x1 o7) true false)))
(assert (= result4 (ite (not (= o8 true)) true false)))
(assert (=> (= result4 true) (and (= o4 x1) (in_range4 x1))))
(assert (=> (= result4 true) (and (= o5 (parent (rec__red_black_trees__rbt__struct t__split_fields6) o4)) (and (in_range2 o5) (and (= o5 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields6))) o4)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields6)) 0) (= o5 0)))))))
(assert (=> (= result4 true) (and (= o6 (color (mk___rep4 t__split_fields6) o5)) (and (in_range6 o6) (= o6 (ite (= o5 0) 0 (to_rep3 (select (rec__red_black_trees__rbt__color t__split_fields6) o5))))))))
(assert (=> (= result4 true) (= result3 (ite (= o6 1) true false))))
(assert (=> (not (= result4 true)) (= result3 false)))
(assert (= result3 true))
(assert (not (= x2 0)))
(assert (= (size (rec__red_black_trees__rbt__struct t__split_fields7)) (size (rec__red_black_trees__rbt__struct t__split_fields6))))
(assert (= (root (rec__red_black_trees__rbt__struct t__split_fields7)) (root (rec__red_black_trees__rbt__struct t__split_fields6))))
(assert (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (rec__red_black_trees__rbt__struct t__split_fields7)) x2))) true))
(assert (= (color (mk___rep4 t__split_fields7) x2) 1))
(assert (= (color (mk___rep4 t__split_fields7) (root (rec__red_black_trees__rbt__struct t__split_fields7))) 0))
(assert (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (and (not (= i x2)) (or (= (parent (rec__red_black_trees__rbt__struct t__split_fields7) i) 0) (= (to_rep3 (select (rec__red_black_trees__rbt__color t__split_fields7) (parent (rec__red_black_trees__rbt__struct t__split_fields7) i))) 1))) (= (to_rep3 (select (rec__red_black_trees__rbt__color t__split_fields7) i)) 0)))))
(assert (= (oeq (values (rec__red_black_trees__rbt__struct t__split_fields7)) (values (rec__red_black_trees__rbt__struct t__split_fields6))) true))
(assert (= (same_nb_blacks (mk___rep4 t__split_fields7)) true))
(assert (and (and (and (=> (<= 0 100) (in_range2 x2)) (dynamic_invariant6 (mk___rep4 t__split_fields7) true true true true)) (=> (<= 0 100) (in_range2 y5))) (dynamic_invariant6 (mk___rep4 t_old__split_fields6) false true true true)))
(assert (= result5 (mk___split_fields__ref4 t_old__split_fields6)))
(assert (= t_old__split_fields7 t__split_fields7))
(assert (and (= o9 x2) (in_range4 x2)))
(assert (and (= o10 (parent (rec__red_black_trees__rbt__struct t__split_fields7) o9)) (and (in_range2 o10) (and (= o10 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o9)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields7)) 0) (= o10 0))))))
(assert (and (= o11 o10) (in_range4 o10)))
(assert (and (= o12 (position1 (rec__red_black_trees__rbt__struct t__split_fields7) o11)) (and (in_range5 o12) (= o12 (position (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o11)))))
(assert (= result6 (ite (= o12 0) true false)))
(assert (=> (= result6 true) (and (= o13 x2) (in_range4 x2))))
(assert (=> (= result6 true) (and (= o14 (parent (rec__red_black_trees__rbt__struct t__split_fields7) o13)) (and (in_range2 o14) (and (= o14 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o13)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields7)) 0) (= o14 0)))))))
(assert (=> (= result6 true) (and (= o15 o14) (in_range4 o14))))
(assert (=> (= result6 true) (and (= o16 (parent (rec__red_black_trees__rbt__struct t__split_fields7) o15)) (and (in_range2 o16) (and (= o16 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o15)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields7)) 0) (= o16 0)))))))
(assert (=> (= result6 true) (and (= o17 o16) (in_range4 o16))))
(assert (=> (= result6 true) (and (= o18 (peek (rec__red_black_trees__rbt__struct t__split_fields7) o17 1)) (and (in_range2 o18) (= o18 (peek1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o17 1))))))
(assert (=> (= result6 true) (= result7 (mk_int__ref y5))))
(assert (=> (= result6 true) (= y6 o18)))
(assert (=> (= result6 true) (and (= o19 (color (mk___rep4 t__split_fields7) y6)) (and (in_range6 o19) (= o19 (ite (= y6 0) 0 (to_rep3 (select (rec__red_black_trees__rbt__color t__split_fields7) y6))))))))
(assert (=> (= result6 true) (= result8 (ite (= o19 1) true false))))
(assert (=> (= result6 true) (=> (= result8 true) (= (to_rep3 o20) 0))))
(assert (=> (= result6 true) (=> (= result8 true) (and (<= 1 y6) (<= y6 100)))))
(assert (=> (= result6 true) (=> (= result8 true) (= o21 y6))))
(assert (=> (= result6 true) (=> (= result8 true) (= o22 (store (rec__red_black_trees__rbt__color t__split_fields7) o21 o20)))))
(assert (=> (= result6 true) (=> (= result8 true) (= o23 (mk___split_fields4 (rec__red_black_trees__rbt__struct t__split_fields7) o22)))))
(assert (=> (= result6 true) (=> (= result8 true) (= temp___941 (mk___rep4 o23)))))
(assert (=> (= result6 true) (=> (= result8 true) (= result9 (mk___split_fields__ref4 t__split_fields7)))))
(assert (=> (= result6 true) (=> (= result8 true) (= t__split_fields8 (us_split_fields9 temp___941)))))
(assert (=> (= result6 true) (=> (= result8 true) (= (to_rep3 o25) 0))))
(assert (=> (= result6 true) (=> (= result8 true) (and (= o24 x2) (in_range4 x2)))))
(assert (=> (= result6 true) (=> (= result8 true) (and (= temp___943 (parent (rec__red_black_trees__rbt__struct t__split_fields8) o24)) (and (in_range2 temp___943) (and (= temp___943 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields8))) o24)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields8)) 0) (= temp___943 0))))))))
(assert (=> (= result6 true) (=> (= result8 true) (and (<= 1 temp___943) (<= temp___943 100)))))
(assert (=> (= result6 true) (=> (= result8 true) (= o26 temp___943))))
(assert (=> (= result6 true) (=> (= result8 true) (= o27 (store (rec__red_black_trees__rbt__color t__split_fields8) o26 o25)))))
(assert (=> (= result6 true) (=> (= result8 true) (= o28 (mk___split_fields4 (rec__red_black_trees__rbt__struct t__split_fields8) o27)))))
(assert (=> (= result6 true) (=> (= result8 true) (= temp___945 (mk___rep4 o28)))))
(assert (=> (= result6 true) (=> (= result8 true) (= result10 (mk___split_fields__ref4 t__split_fields8)))))
(assert (=> (= result6 true) (=> (= result8 true) (= t__split_fields9 (us_split_fields9 temp___945)))))
(assert (=> (= result6 true) (=> (= result8 true) (= (to_rep3 o30) 1))))
(assert (=> (= result6 true) (=> (= result8 true) (and (= o29 y6) (in_range4 y6)))))
(assert (=> (= result6 true) (=> (= result8 true) (and (= temp___947 (parent (rec__red_black_trees__rbt__struct t__split_fields9) o29)) (and (in_range2 temp___947) (and (= temp___947 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields9))) o29)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields9)) 0) (= temp___947 0))))))))
(assert (=> (= result6 true) (=> (= result8 true) (and (<= 1 temp___947) (<= temp___947 100)))))
(assert (=> (= result6 true) (=> (= result8 true) (= o31 temp___947))))
(assert (=> (= result6 true) (=> (= result8 true) (= o32 (store (rec__red_black_trees__rbt__color t__split_fields9) o31 o30)))))
(assert (=> (= result6 true) (=> (= result8 true) (= o33 (mk___split_fields4 (rec__red_black_trees__rbt__struct t__split_fields9) o32)))))
(assert (=> (= result6 true) (=> (= result8 true) (= temp___949 (mk___rep4 o33)))))
(assert (=> (= result6 true) (=> (= result8 true) (= result11 (mk___split_fields__ref4 t__split_fields9)))))
(assert (=> (= result6 true) (=> (= result8 true) (= t__split_fields10 (us_split_fields9 temp___949)))))
(assert (=> (= result6 true) (=> (= result8 true) (and (= o34 y6) (in_range4 y6)))))
(assert (=> (= result6 true) (=> (= result8 true) (and (= o35 (parent (rec__red_black_trees__rbt__struct t__split_fields10) o34)) (and (in_range2 o35) (and (= o35 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields10))) o34)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields10)) 0) (= o35 0))))))))
(assert (=> (= result6 true) (=> (= result8 true) (= result12 (mk_int__ref x2)))))
(assert (=> (= result6 true) (=> (= result8 true) (= x3 o35))))
(assert (=> (= result6 true) (=> (= result8 true) (= (mk___rep4 t_old__split_fields7) c75b))))
(assert (=> (= result6 true) (=> (= result8 true) (dynamic_invariant6 c75b true false true true))))
(assert (=> (= result6 true) (=> (= result8 true) (= (mk___rep4 t__split_fields10) c76b))))
(assert (=> (= result6 true) (=> (= result8 true) (dynamic_invariant6 c76b true false true true))))
(assert (=> (= result6 true) (=> (= result8 true) (and (= o36 y6) (in_range4 y6)))))
(assert (=> (= result6 true) (=> (= result8 true) (and (= o37 (parent (rec__red_black_trees__rbt__struct t__split_fields10) o36)) (and (in_range2 o37) (and (= o37 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields10))) o36)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields10)) 0) (= o37 0))))))))
(assert (=> (= result6 true) (=> (= result8 true) (and (= red_black_trees__insert__L_8__C77b__assume o37) (in_range4 o37)))))
(assert (=> (= result6 true) (=> (= result8 true) (= red_black_trees__insert__L_8__C77b__assume c77b))))
(assert (=> (= result6 true) (=> (= result8 true) (in_range4 c77b))))
(assert (=> (= result6 true) (=> (= result8 true) (= (same_nb_blacks c76b) true))))
(assert (=> (= result6 true) (=> (= result8 true) (= n21 (mk_int__ref n7)))))
(assert (=> (= result6 true) (=> (= result8 true) (= n20 (mk_int__ref n6)))))
(assert (=> (= result6 true) (=> (= result8 true) (= n19 n11))))
(assert (=> (= result6 true) (=> (= result8 true) (= t_old__split_fields11 (mk___split_fields__ref4 t_old__split_fields7)))))
(assert (=> (= result6 true) (=> (= result8 true) (= x7 (mk_int__ref x3)))))
(assert (=> (= result6 true) (=> (= result8 true) (= t__split_fields17 (mk___split_fields__ref4 t__split_fields10)))))
(assert (=> (= result6 true) (=> (= result8 true) (= rho6 rho1))))
(assert (=> (= result6 true) (=> (= result8 true) (= rho5 rho))))
(assert (=> (= result6 true) (=> (= result8 true) (= n24 n7))))
(assert (=> (= result6 true) (=> (= result8 true) (= n23 n6))))
(assert (=> (= result6 true) (=> (= result8 true) (= n22 n12))))
(assert (=> (= result6 true) (=> (= result8 true) (= t_old__split_fields12 t_old__split_fields7))))
(assert (=> (= result6 true) (=> (= result8 true) (= x8 x3))))
(assert (=> (= result6 true) (=> (= result8 true) (= t__split_fields18 t__split_fields10))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o38 x2) (in_range4 x2)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o39 (parent (rec__red_black_trees__rbt__struct t__split_fields7) o38)) (and (in_range2 o39) (and (= o39 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o38)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields7)) 0) (= o39 0))))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o40 o39) (in_range4 o39)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o41 (peek (rec__red_black_trees__rbt__struct t__split_fields7) o40 1)) (and (in_range2 o41) (= o41 (peek1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o40 1)))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= result13 (ite (= x2 o41) true false)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (and (= o42 x2) (in_range4 x2))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (and (= o43 (parent (rec__red_black_trees__rbt__struct t__split_fields7) o42)) (and (in_range2 o43) (and (= o43 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o42)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields7)) 0) (= o43 0)))))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= result14 (mk_int__ref x2))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= x4 o43)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (and (= o44 x4) (in_range4 x4))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (and (and (= (size (mk___rep2 search_trees__left_rotate__t__fields)) (size (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))))) (and (ite (not (= (root (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7)))) o44)) (= (root (mk___rep2 search_trees__left_rotate__t__fields)) (root (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))))) (= (root (mk___rep2 search_trees__left_rotate__t__fields)) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44 1))) (and (= (parent (mk___rep2 search_trees__left_rotate__t__fields) o44) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44 1)) (and (= (position1 (mk___rep2 search_trees__left_rotate__t__fields) o44) 0) (and (= (parent (mk___rep2 search_trees__left_rotate__t__fields) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44 1)) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44)) (and (=> (not (= (root (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7)))) o44)) (= (position1 (mk___rep2 search_trees__left_rotate__t__fields) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44 1)) (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44))) (and (=> (not (= (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44 1) 0) 0)) (and (= (parent (mk___rep2 search_trees__left_rotate__t__fields) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44 1) 0)) o44) (= (position1 (mk___rep2 search_trees__left_rotate__t__fields) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44 1) 0)) 1))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (and (not (= j o44)) (or (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) o44)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) 0))) (or (or (or (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) 0) (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j)) o44))) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j)) 0)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) 1))) (= (parent (mk___rep2 search_trees__left_rotate__t__fields) j) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j))))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (and (and (not (= j o44)) (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) 0))) (or (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) o44)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) 0))) (or (or (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j)) o44)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j)) 0)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) 1))) (= (position1 (mk___rep2 search_trees__left_rotate__t__fields) j) (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j))))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__left_rotate__t__fields)) j))) true) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7)))) j))) true)))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7)))) j))) true) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__left_rotate__t__fields)) j))) true)))) (and (= (oeq (values (mk___rep2 search_trees__left_rotate__t__fields)) (values (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))))) true) (and (= (peek (mk___rep2 search_trees__left_rotate__t__fields) o44 1) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44 1) 0)) (and (=> (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44) 0)) (= (peek (mk___rep2 search_trees__left_rotate__t__fields) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44) (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44)) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44 1))) (and (= (peek (mk___rep2 search_trees__left_rotate__t__fields) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44 1) 0) o44) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (forall ((d Int)) (=> (and (<= 0 d) (<= d 1)) (=> (and (and (and (or (not (= j o44)) (= d 0)) (or (not (= j (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44))) (not (= d (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44))))) (or (not (= j (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o44 1))) (= d 1))) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__left_rotate__t__fields)) j))) true)) (= (peek (mk___rep2 search_trees__left_rotate__t__fields) j d) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j d)))))))))))))))))))))) (dynamic_invariant2 (mk___rep2 search_trees__left_rotate__t__fields) true true true true))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= result15 (mk___split_fields__ref4 t__split_fields7))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= t__split_fields11 (mk___split_fields4 (mk___rep2 search_trees__left_rotate__t__fields) (rec__red_black_trees__rbt__color t__split_fields7)))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= (mk___rep4 t_old__split_fields7) c81b)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (dynamic_invariant6 c81b true false true true)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= (mk___rep4 t__split_fields11) c82b)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (dynamic_invariant6 c82b true false true true)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (and (= red_black_trees__insert__L_8__C83b__assume x4) (in_range4 x4))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= red_black_trees__insert__L_8__C83b__assume c83b)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (in_range4 c83b)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (and (= o45 (parent (rec__red_black_trees__rbt__struct (us_split_fields9 c82b)) c83b)) (and (in_range2 o45) (and (= o45 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 c82b)))) c83b)) (=> (= (size (rec__red_black_trees__rbt__struct (us_split_fields9 c82b))) 0) (= o45 0)))))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (and (= red_black_trees__insert__L_8__B84b__y__assume o45) (in_range4 o45))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= red_black_trees__insert__L_8__B84b__y__assume y)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (in_range4 y)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= (same_nb_blacks c82b) true)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= result16 (mk___split_fields__ref4 t_old__split_fields7))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= t_old__split_fields8 t__split_fields11)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= n15 n13)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= t_old__split_fields9 (mk___split_fields__ref4 t_old__split_fields8))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= x5 (mk_int__ref x4))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= t__split_fields12 (mk___split_fields__ref4 t__split_fields11))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= rho4 search_trees__left_rotate__t__fields)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= n16 n14)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= t_old__split_fields10 t_old__split_fields8)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= x6 x4)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (= result13 true) (= t__split_fields13 t__split_fields11)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (not (= result13 true)) (= n15 (mk_int__ref n6))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (not (= result13 true)) (= t_old__split_fields9 (mk___split_fields__ref4 t_old__split_fields7))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (not (= result13 true)) (= x5 (mk_int__ref x2))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (not (= result13 true)) (= t__split_fields12 (mk___split_fields__ref4 t__split_fields7))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (not (= result13 true)) (= rho4 rho)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (not (= result13 true)) (= n16 n6)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (not (= result13 true)) (= t_old__split_fields10 t_old__split_fields7)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (not (= result13 true)) (= x6 x2)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (=> (not (= result13 true)) (= t__split_fields13 t__split_fields7)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (not (= (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields12)) (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields12)) (int__content x5))) 0)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (not (= (peek (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields12)) (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields12)) (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields12)) (int__content x5))) 0) 0)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= (to_rep3 o47) 0))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o46 (int__content x5)) (in_range4 (int__content x5))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= temp___866 (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields12)) o46)) (and (in_range2 temp___866) (and (= temp___866 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields12)))) o46)) (=> (= (size (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields12))) 0) (= temp___866 0))))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (<= 1 temp___866) (<= temp___866 100)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= o48 temp___866))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= o49 (store (rec__red_black_trees__rbt__color (us_split_fields__content4 t__split_fields12)) o48 o47)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= o50 (mk___split_fields4 (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields12)) o49)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= temp___868 (mk___rep4 o50)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= result17 t__split_fields12))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= t__split_fields14 (us_split_fields9 temp___868)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= (to_rep3 o54) 1))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o51 (int__content x5)) (in_range4 (int__content x5))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o52 (parent (rec__red_black_trees__rbt__struct t__split_fields14) o51)) (and (in_range2 o52) (and (= o52 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields14))) o51)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields14)) 0) (= o52 0))))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o53 o52) (in_range4 o52)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= temp___870 (parent (rec__red_black_trees__rbt__struct t__split_fields14) o53)) (and (in_range2 temp___870) (and (= temp___870 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields14))) o53)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields14)) 0) (= temp___870 0))))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (<= 1 temp___870) (<= temp___870 100)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= o55 temp___870))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= o56 (store (rec__red_black_trees__rbt__color t__split_fields14) o55 o54)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= o57 (mk___split_fields4 (rec__red_black_trees__rbt__struct t__split_fields14) o56)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= temp___872 (mk___rep4 o57)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= result18 (mk___split_fields__ref4 t__split_fields14)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= t__split_fields15 (us_split_fields9 temp___872)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o58 (int__content x5)) (in_range4 (int__content x5))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o59 (parent (rec__red_black_trees__rbt__struct t__split_fields15) o58)) (and (in_range2 o59) (and (= o59 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o58)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields15)) 0) (= o59 0))))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o60 o59) (in_range4 o59)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o61 (parent (rec__red_black_trees__rbt__struct t__split_fields15) o60)) (and (in_range2 o61) (and (= o61 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o60)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields15)) 0) (= o61 0))))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o62 o61) (in_range4 o61)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (and (= (size (mk___rep2 search_trees__right_rotate__t__fields)) (size (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))))) (and (ite (not (= (root (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15)))) o62)) (= (root (mk___rep2 search_trees__right_rotate__t__fields)) (root (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))))) (= (root (mk___rep2 search_trees__right_rotate__t__fields)) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62 0))) (and (= (parent (mk___rep2 search_trees__right_rotate__t__fields) o62) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62 0)) (and (= (position1 (mk___rep2 search_trees__right_rotate__t__fields) o62) 1) (and (= (parent (mk___rep2 search_trees__right_rotate__t__fields) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62 0)) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62)) (and (=> (not (= (root (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15)))) o62)) (= (position1 (mk___rep2 search_trees__right_rotate__t__fields) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62 0)) (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62))) (and (=> (not (= (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62 0) 1) 0)) (and (= (parent (mk___rep2 search_trees__right_rotate__t__fields) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62 0) 1)) o62) (= (position1 (mk___rep2 search_trees__right_rotate__t__fields) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62 0) 1)) 0))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (and (not (= j o62)) (or (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j) o62)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j) 1))) (or (or (or (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j) 0) (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j)) o62))) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j)) 1)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j) 0))) (= (parent (mk___rep2 search_trees__right_rotate__t__fields) j) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j))))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (and (and (not (= j o62)) (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j) 0))) (or (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j) o62)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j) 1))) (or (or (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j)) o62)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j)) 1)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j) 0))) (= (position1 (mk___rep2 search_trees__right_rotate__t__fields) j) (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j))))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__right_rotate__t__fields)) j))) true) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15)))) j))) true)))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15)))) j))) true) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__right_rotate__t__fields)) j))) true)))) (and (= (oeq (values (mk___rep2 search_trees__right_rotate__t__fields)) (values (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))))) true) (and (= (peek (mk___rep2 search_trees__right_rotate__t__fields) o62 0) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62 0) 1)) (and (=> (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62) 0)) (= (peek (mk___rep2 search_trees__right_rotate__t__fields) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62) (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62)) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62 0))) (and (= (peek (mk___rep2 search_trees__right_rotate__t__fields) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62 0) 1) o62) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (forall ((d Int)) (=> (and (<= 0 d) (<= d 1)) (=> (and (and (and (or (not (= j o62)) (= d 1)) (or (not (= j (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62))) (not (= d (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62))))) (or (not (= j (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) o62 0))) (= d 0))) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__right_rotate__t__fields)) j))) true)) (= (peek (mk___rep2 search_trees__right_rotate__t__fields) j d) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields15))) j d)))))))))))))))))))))) (dynamic_invariant2 (mk___rep2 search_trees__right_rotate__t__fields) true true true true)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= result19 (mk___split_fields__ref4 t__split_fields15)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= t__split_fields16 (mk___split_fields4 (mk___rep2 search_trees__right_rotate__t__fields) (rec__red_black_trees__rbt__color t__split_fields15))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= (mk___rep4 (us_split_fields__content4 t_old__split_fields9)) c87b))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (dynamic_invariant6 c87b true false true true))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= (mk___rep4 t__split_fields16) c88b))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (dynamic_invariant6 c88b true false true true))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o63 (int__content x5)) (in_range4 (int__content x5))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o64 (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t_old__split_fields9)) o63)) (and (in_range2 o64) (and (= o64 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields__content4 t_old__split_fields9)))) o63)) (=> (= (size (rec__red_black_trees__rbt__struct (us_split_fields__content4 t_old__split_fields9))) 0) (= o64 0))))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o65 o64) (in_range4 o64)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o66 (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t_old__split_fields9)) o65)) (and (in_range2 o66) (and (= o66 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields__content4 t_old__split_fields9)))) o65)) (=> (= (size (rec__red_black_trees__rbt__struct (us_split_fields__content4 t_old__split_fields9))) 0) (= o66 0))))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= red_black_trees__insert__L_8__C89b__assume o66) (in_range4 o66)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= red_black_trees__insert__L_8__C89b__assume c89b))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (in_range4 c89b))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= o67 (parent (rec__red_black_trees__rbt__struct (us_split_fields9 c88b)) c89b)) (and (in_range2 o67) (and (= o67 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 c88b)))) c89b)) (=> (= (size (rec__red_black_trees__rbt__struct (us_split_fields9 c88b))) 0) (= o67 0))))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (and (= red_black_trees__insert__L_8__B90b__y__assume o67) (in_range4 o67)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= red_black_trees__insert__L_8__B90b__y__assume y1))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (in_range4 y1))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= (same_nb_blacks c88b) true))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= (color (mk___rep4 t__split_fields16) (parent (rec__red_black_trees__rbt__struct t__split_fields16) (int__content x5))) 0))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (or (= (parent (rec__red_black_trees__rbt__struct t__split_fields16) i) 0) (= (to_rep3 (select (rec__red_black_trees__rbt__color t__split_fields16) (parent (rec__red_black_trees__rbt__struct t__split_fields16) i))) 1)) (= (to_rep3 (select (rec__red_black_trees__rbt__color t__split_fields16) i)) 0)))))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= n21 n17))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= n20 n15))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= n19 (mk_int__ref n5)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= t_old__split_fields11 t_old__split_fields9))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= x7 x5))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= t__split_fields17 (mk___split_fields__ref4 t__split_fields16)))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= rho6 search_trees__right_rotate__t__fields))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= rho5 rho4))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= n24 n18))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= n23 n16))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= n22 n5))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= t_old__split_fields12 t_old__split_fields10))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= x8 x6))))
(assert (=> (= result6 true) (=> (not (= result8 true)) (= t__split_fields18 t__split_fields16))))
(assert (=> (= result6 true) (= n44 (let ((subject n1)) (mk_int__ref n10)))))
(assert (=> (= result6 true) (= n43 (mk_int__ref n9))))
(assert (=> (= result6 true) (= n42 (mk_int__ref n8))))
(assert (=> (= result6 true) (= n41 n21)))
(assert (=> (= result6 true) (= n40 n20)))
(assert (=> (= result6 true) (= n39 n19)))
(assert (=> (= result6 true) (= t_old__split_fields18 t_old__split_fields11)))
(assert (=> (= result6 true) (= y8 (mk_int__ref y6))))
(assert (=> (= result6 true) (= x15 x7)))
(assert (=> (= result6 true) (= t__split_fields30 t__split_fields17)))
(assert (=> (= result6 true) (= rho13 rho3)))
(assert (=> (= result6 true) (= rho12 rho2)))
(assert (=> (= result6 true) (= rho11 rho6)))
(assert (=> (= result6 true) (= rho10 rho5)))
(assert (=> (= result6 true) (= n50 n10)))
(assert (=> (= result6 true) (= n49 n9)))
(assert (=> (= result6 true) (= n48 n8)))
(assert (=> (= result6 true) (= n47 n24)))
(assert (=> (= result6 true) (= n46 n23)))
(assert (=> (= result6 true) (= n45 n22)))
(assert (=> (= result6 true) (= t_old__split_fields19 t_old__split_fields12)))
(assert (=> (= result6 true) (= y9 y6)))
(assert (=> (= result6 true) (= x16 x8)))
(assert (=> (= result6 true) (= t__split_fields31 t__split_fields18)))
(assert (=> (not (= result6 true)) (and (= o68 x2) (in_range4 x2))))
(assert (=> (not (= result6 true)) (and (= o69 (parent (rec__red_black_trees__rbt__struct t__split_fields7) o68)) (and (in_range2 o69) (and (= o69 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o68)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields7)) 0) (= o69 0)))))))
(assert (=> (not (= result6 true)) (and (= o70 o69) (in_range4 o69))))
(assert (=> (not (= result6 true)) (and (= o71 (parent (rec__red_black_trees__rbt__struct t__split_fields7) o70)) (and (in_range2 o71) (and (= o71 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o70)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields7)) 0) (= o71 0)))))))
(assert (=> (not (= result6 true)) (and (= o72 o71) (in_range4 o71))))
(assert (=> (not (= result6 true)) (and (= o73 (peek (rec__red_black_trees__rbt__struct t__split_fields7) o72 0)) (and (in_range2 o73) (= o73 (peek1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o72 0))))))
(assert (=> (not (= result6 true)) (= result20 (mk_int__ref y5))))
(assert (=> (not (= result6 true)) (= y7 o73)))
(assert (=> (not (= result6 true)) (and (= o74 (color (mk___rep4 t__split_fields7) y7)) (and (in_range6 o74) (= o74 (ite (= y7 0) 0 (to_rep3 (select (rec__red_black_trees__rbt__color t__split_fields7) y7))))))))
(assert (=> (not (= result6 true)) (= result21 (ite (= o74 1) true false))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= (to_rep3 o75) 0))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (and (<= 1 y7) (<= y7 100)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= o76 y7))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= o77 (store (rec__red_black_trees__rbt__color t__split_fields7) o76 o75)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= o78 (mk___split_fields4 (rec__red_black_trees__rbt__struct t__split_fields7) o77)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= temp___789 (mk___rep4 o78)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= result22 (mk___split_fields__ref4 t__split_fields7)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= t__split_fields19 (us_split_fields9 temp___789)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= (to_rep3 o80) 0))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (and (= o79 x2) (in_range4 x2)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (and (= temp___791 (parent (rec__red_black_trees__rbt__struct t__split_fields19) o79)) (and (in_range2 temp___791) (and (= temp___791 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields19))) o79)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields19)) 0) (= temp___791 0))))))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (and (<= 1 temp___791) (<= temp___791 100)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= o81 temp___791))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= o82 (store (rec__red_black_trees__rbt__color t__split_fields19) o81 o80)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= o83 (mk___split_fields4 (rec__red_black_trees__rbt__struct t__split_fields19) o82)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= temp___793 (mk___rep4 o83)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= result23 (mk___split_fields__ref4 t__split_fields19)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= t__split_fields20 (us_split_fields9 temp___793)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= (to_rep3 o85) 1))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (and (= o84 y7) (in_range4 y7)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (and (= temp___795 (parent (rec__red_black_trees__rbt__struct t__split_fields20) o84)) (and (in_range2 temp___795) (and (= temp___795 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields20))) o84)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields20)) 0) (= temp___795 0))))))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (and (<= 1 temp___795) (<= temp___795 100)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= o86 temp___795))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= o87 (store (rec__red_black_trees__rbt__color t__split_fields20) o86 o85)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= o88 (mk___split_fields4 (rec__red_black_trees__rbt__struct t__split_fields20) o87)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= temp___797 (mk___rep4 o88)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= result24 (mk___split_fields__ref4 t__split_fields20)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= t__split_fields21 (us_split_fields9 temp___797)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (and (= o89 y7) (in_range4 y7)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (and (= o90 (parent (rec__red_black_trees__rbt__struct t__split_fields21) o89)) (and (in_range2 o90) (and (= o90 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields21))) o89)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields21)) 0) (= o90 0))))))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= result25 (mk_int__ref x2)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= x9 o90))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= (mk___rep4 t_old__split_fields7) c94b))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (dynamic_invariant6 c94b true false true true))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= (mk___rep4 t__split_fields21) c95b))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (dynamic_invariant6 c95b true false true true))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (and (= o91 y7) (in_range4 y7)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (and (= o92 (parent (rec__red_black_trees__rbt__struct t__split_fields21) o91)) (and (in_range2 o92) (and (= o92 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields21))) o91)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields21)) 0) (= o92 0))))))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (and (= red_black_trees__insert__L_8__C96b__assume o92) (in_range4 o92)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= red_black_trees__insert__L_8__C96b__assume c96b))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (in_range4 c96b))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= (same_nb_blacks c95b) true))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= n35 (let ((subject n1)) (mk_int__ref n10))))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= n34 (mk_int__ref n9)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= n33 n25))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= t_old__split_fields16 (mk___split_fields__ref4 t_old__split_fields7)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= x13 (mk_int__ref x9)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= t__split_fields28 (mk___split_fields__ref4 t__split_fields21)))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= rho9 rho3))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= rho8 rho2))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= n38 n10))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= n37 n9))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= n36 n26))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= t_old__split_fields17 t_old__split_fields7))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= x14 x9))))
(assert (=> (not (= result6 true)) (=> (= result21 true) (= t__split_fields29 t__split_fields21))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o93 x2) (in_range4 x2)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o94 (parent (rec__red_black_trees__rbt__struct t__split_fields7) o93)) (and (in_range2 o94) (and (= o94 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o93)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields7)) 0) (= o94 0))))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o95 o94) (in_range4 o94)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o96 (peek (rec__red_black_trees__rbt__struct t__split_fields7) o95 0)) (and (in_range2 o96) (= o96 (peek1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o95 0)))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= result26 (ite (= x2 o96) true false)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (and (= o97 x2) (in_range4 x2))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (and (= o98 (parent (rec__red_black_trees__rbt__struct t__split_fields7) o97)) (and (in_range2 o98) (and (= o98 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o97)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields7)) 0) (= o98 0)))))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= result27 (mk_int__ref x2))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= x10 o98)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (and (= o99 x10) (in_range4 x10))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (and (and (= (size (mk___rep2 search_trees__right_rotate__t__fields1)) (size (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))))) (and (ite (not (= (root (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7)))) o99)) (= (root (mk___rep2 search_trees__right_rotate__t__fields1)) (root (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))))) (= (root (mk___rep2 search_trees__right_rotate__t__fields1)) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99 0))) (and (= (parent (mk___rep2 search_trees__right_rotate__t__fields1) o99) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99 0)) (and (= (position1 (mk___rep2 search_trees__right_rotate__t__fields1) o99) 1) (and (= (parent (mk___rep2 search_trees__right_rotate__t__fields1) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99 0)) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99)) (and (=> (not (= (root (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7)))) o99)) (= (position1 (mk___rep2 search_trees__right_rotate__t__fields1) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99 0)) (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99))) (and (=> (not (= (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99 0) 1) 0)) (and (= (parent (mk___rep2 search_trees__right_rotate__t__fields1) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99 0) 1)) o99) (= (position1 (mk___rep2 search_trees__right_rotate__t__fields1) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99 0) 1)) 0))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (and (not (= j o99)) (or (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) o99)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) 1))) (or (or (or (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) 0) (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j)) o99))) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j)) 1)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) 0))) (= (parent (mk___rep2 search_trees__right_rotate__t__fields1) j) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j))))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (and (and (not (= j o99)) (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) 0))) (or (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) o99)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) 1))) (or (or (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j)) o99)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j)) 1)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j) 0))) (= (position1 (mk___rep2 search_trees__right_rotate__t__fields1) j) (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j))))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__right_rotate__t__fields1)) j))) true) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7)))) j))) true)))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7)))) j))) true) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__right_rotate__t__fields1)) j))) true)))) (and (= (oeq (values (mk___rep2 search_trees__right_rotate__t__fields1)) (values (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))))) true) (and (= (peek (mk___rep2 search_trees__right_rotate__t__fields1) o99 0) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99 0) 1)) (and (=> (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99) 0)) (= (peek (mk___rep2 search_trees__right_rotate__t__fields1) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99) (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99)) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99 0))) (and (= (peek (mk___rep2 search_trees__right_rotate__t__fields1) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99 0) 1) o99) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (forall ((d Int)) (=> (and (<= 0 d) (<= d 1)) (=> (and (and (and (or (not (= j o99)) (= d 1)) (or (not (= j (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99))) (not (= d (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99))))) (or (not (= j (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) o99 0))) (= d 0))) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__right_rotate__t__fields1)) j))) true)) (= (peek (mk___rep2 search_trees__right_rotate__t__fields1) j d) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields7))) j d)))))))))))))))))))))) (dynamic_invariant2 (mk___rep2 search_trees__right_rotate__t__fields1) true true true true))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= result28 (mk___split_fields__ref4 t__split_fields7))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= t__split_fields22 (mk___split_fields4 (mk___rep2 search_trees__right_rotate__t__fields1) (rec__red_black_trees__rbt__color t__split_fields7)))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= (mk___rep4 t_old__split_fields7) c100b)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (dynamic_invariant6 c100b true false true true)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= (mk___rep4 t__split_fields22) c101b)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (dynamic_invariant6 c101b true false true true)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (and (= red_black_trees__insert__L_8__C102b__assume x10) (in_range4 x10))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= red_black_trees__insert__L_8__C102b__assume c102b)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (in_range4 c102b)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (and (= o100 (parent (rec__red_black_trees__rbt__struct (us_split_fields9 c101b)) c102b)) (and (in_range2 o100) (and (= o100 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 c101b)))) c102b)) (=> (= (size (rec__red_black_trees__rbt__struct (us_split_fields9 c101b))) 0) (= o100 0)))))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (and (= red_black_trees__insert__L_8__B103b__y__assume o100) (in_range4 o100))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= red_black_trees__insert__L_8__B103b__y__assume y2)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (in_range4 y2)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= (same_nb_blacks c101b) true)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= result29 (mk___split_fields__ref4 t_old__split_fields7))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= t_old__split_fields13 t__split_fields22)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= n29 n27)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= t_old__split_fields14 (mk___split_fields__ref4 t_old__split_fields13))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= x11 (mk_int__ref x10))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= t__split_fields23 (mk___split_fields__ref4 t__split_fields22))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= rho7 search_trees__right_rotate__t__fields1)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= n30 n28)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= t_old__split_fields15 t_old__split_fields13)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= x12 x10)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (= result26 true) (= t__split_fields24 t__split_fields22)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (not (= result26 true)) (= n29 (mk_int__ref n9))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (not (= result26 true)) (= t_old__split_fields14 (mk___split_fields__ref4 t_old__split_fields7))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (not (= result26 true)) (= x11 (mk_int__ref x2))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (not (= result26 true)) (= t__split_fields23 (mk___split_fields__ref4 t__split_fields7))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (not (= result26 true)) (= rho7 rho2)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (not (= result26 true)) (= n30 n9)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (not (= result26 true)) (= t_old__split_fields15 t_old__split_fields7)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (not (= result26 true)) (= x12 x2)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (=> (not (= result26 true)) (= t__split_fields24 t__split_fields7)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (not (= (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields23)) (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields23)) (int__content x11))) 0)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (not (= (peek (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields23)) (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields23)) (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields23)) (int__content x11))) 1) 0)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= (to_rep3 o102) 0))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o101 (int__content x11)) (in_range4 (int__content x11))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= temp___714 (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields23)) o101)) (and (in_range2 temp___714) (and (= temp___714 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields23)))) o101)) (=> (= (size (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields23))) 0) (= temp___714 0))))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (<= 1 temp___714) (<= temp___714 100)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= o103 temp___714))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= o104 (store (rec__red_black_trees__rbt__color (us_split_fields__content4 t__split_fields23)) o103 o102)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= o105 (mk___split_fields4 (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields23)) o104)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= temp___716 (mk___rep4 o105)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= result30 t__split_fields23))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= t__split_fields25 (us_split_fields9 temp___716)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= (to_rep3 o109) 1))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o106 (int__content x11)) (in_range4 (int__content x11))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o107 (parent (rec__red_black_trees__rbt__struct t__split_fields25) o106)) (and (in_range2 o107) (and (= o107 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields25))) o106)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields25)) 0) (= o107 0))))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o108 o107) (in_range4 o107)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= temp___718 (parent (rec__red_black_trees__rbt__struct t__split_fields25) o108)) (and (in_range2 temp___718) (and (= temp___718 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields25))) o108)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields25)) 0) (= temp___718 0))))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (<= 1 temp___718) (<= temp___718 100)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= o110 temp___718))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= o111 (store (rec__red_black_trees__rbt__color t__split_fields25) o110 o109)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= o112 (mk___split_fields4 (rec__red_black_trees__rbt__struct t__split_fields25) o111)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= temp___720 (mk___rep4 o112)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= result31 (mk___split_fields__ref4 t__split_fields25)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= t__split_fields26 (us_split_fields9 temp___720)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o113 (int__content x11)) (in_range4 (int__content x11))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o114 (parent (rec__red_black_trees__rbt__struct t__split_fields26) o113)) (and (in_range2 o114) (and (= o114 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o113)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields26)) 0) (= o114 0))))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o115 o114) (in_range4 o114)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o116 (parent (rec__red_black_trees__rbt__struct t__split_fields26) o115)) (and (in_range2 o116) (and (= o116 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o115)) (=> (= (size (rec__red_black_trees__rbt__struct t__split_fields26)) 0) (= o116 0))))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o117 o116) (in_range4 o116)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (and (= (size (mk___rep2 search_trees__left_rotate__t__fields1)) (size (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))))) (and (ite (not (= (root (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26)))) o117)) (= (root (mk___rep2 search_trees__left_rotate__t__fields1)) (root (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))))) (= (root (mk___rep2 search_trees__left_rotate__t__fields1)) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117 1))) (and (= (parent (mk___rep2 search_trees__left_rotate__t__fields1) o117) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117 1)) (and (= (position1 (mk___rep2 search_trees__left_rotate__t__fields1) o117) 0) (and (= (parent (mk___rep2 search_trees__left_rotate__t__fields1) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117 1)) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117)) (and (=> (not (= (root (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26)))) o117)) (= (position1 (mk___rep2 search_trees__left_rotate__t__fields1) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117 1)) (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117))) (and (=> (not (= (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117 1) 0) 0)) (and (= (parent (mk___rep2 search_trees__left_rotate__t__fields1) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117 1) 0)) o117) (= (position1 (mk___rep2 search_trees__left_rotate__t__fields1) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117 1) 0)) 1))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (and (not (= j o117)) (or (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j) o117)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j) 0))) (or (or (or (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j) 0) (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j)) o117))) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j)) 0)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j) 1))) (= (parent (mk___rep2 search_trees__left_rotate__t__fields1) j) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j))))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (and (and (not (= j o117)) (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j) 0))) (or (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j) o117)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j) 0))) (or (or (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j)) o117)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j)) 0)) (= (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j) 1))) (= (position1 (mk___rep2 search_trees__left_rotate__t__fields1) j) (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j))))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__left_rotate__t__fields1)) j))) true) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26)))) j))) true)))) (and (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26)))) j))) true) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__left_rotate__t__fields1)) j))) true)))) (and (= (oeq (values (mk___rep2 search_trees__left_rotate__t__fields1)) (values (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))))) true) (and (= (peek (mk___rep2 search_trees__left_rotate__t__fields1) o117 1) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117 1) 0)) (and (=> (not (= (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117) 0)) (= (peek (mk___rep2 search_trees__left_rotate__t__fields1) (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117) (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117)) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117 1))) (and (= (peek (mk___rep2 search_trees__left_rotate__t__fields1) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117 1) 0) o117) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (forall ((d Int)) (=> (and (<= 0 d) (<= d 1)) (=> (and (and (and (or (not (= j o117)) (= d 0)) (or (not (= j (parent (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117))) (not (= d (position1 (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117))))) (or (not (= j (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) o117 1))) (= d 1))) (= (rec__tree_model__path_type__k (us_split_fields7 (select (model__ (mk___rep2 search_trees__left_rotate__t__fields1)) j))) true)) (= (peek (mk___rep2 search_trees__left_rotate__t__fields1) j d) (peek (mk___rep2 (us_split_fields5 (rec__red_black_trees__rbt__struct t__split_fields26))) j d)))))))))))))))))))))) (dynamic_invariant2 (mk___rep2 search_trees__left_rotate__t__fields1) true true true true)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= result32 (mk___split_fields__ref4 t__split_fields26)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= t__split_fields27 (mk___split_fields4 (mk___rep2 search_trees__left_rotate__t__fields1) (rec__red_black_trees__rbt__color t__split_fields26))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= (mk___rep4 (us_split_fields__content4 t_old__split_fields14)) c106b))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (dynamic_invariant6 c106b true false true true))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= (mk___rep4 t__split_fields27) c107b))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (dynamic_invariant6 c107b true false true true))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o118 (int__content x11)) (in_range4 (int__content x11))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o119 (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t_old__split_fields14)) o118)) (and (in_range2 o119) (and (= o119 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields__content4 t_old__split_fields14)))) o118)) (=> (= (size (rec__red_black_trees__rbt__struct (us_split_fields__content4 t_old__split_fields14))) 0) (= o119 0))))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o120 o119) (in_range4 o119)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o121 (parent (rec__red_black_trees__rbt__struct (us_split_fields__content4 t_old__split_fields14)) o120)) (and (in_range2 o121) (and (= o121 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields__content4 t_old__split_fields14)))) o120)) (=> (= (size (rec__red_black_trees__rbt__struct (us_split_fields__content4 t_old__split_fields14))) 0) (= o121 0))))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= red_black_trees__insert__L_8__C108b__assume o121) (in_range4 o121)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= red_black_trees__insert__L_8__C108b__assume c108b))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (in_range4 c108b))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= o122 (parent (rec__red_black_trees__rbt__struct (us_split_fields9 c107b)) c108b)) (and (in_range2 o122) (and (= o122 (parent1 (rec__search_trees__search_tree__struct (us_split_fields5 (rec__red_black_trees__rbt__struct (us_split_fields9 c107b)))) c108b)) (=> (= (size (rec__red_black_trees__rbt__struct (us_split_fields9 c107b))) 0) (= o122 0))))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (and (= red_black_trees__insert__L_8__B109b__y__assume o122) (in_range4 o122)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= red_black_trees__insert__L_8__B109b__y__assume y3))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (in_range4 y3))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= (same_nb_blacks c107b) true))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= (color (mk___rep4 t__split_fields27) (parent (rec__red_black_trees__rbt__struct t__split_fields27) (int__content x11))) 0))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (or (= (parent (rec__red_black_trees__rbt__struct t__split_fields27) i) 0) (= (to_rep3 (select (rec__red_black_trees__rbt__color t__split_fields27) (parent (rec__red_black_trees__rbt__struct t__split_fields27) i))) 1)) (= (to_rep3 (select (rec__red_black_trees__rbt__color t__split_fields27) i)) 0)))))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= n35 n31))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= n34 n29))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= n33 (mk_int__ref n8)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= t_old__split_fields16 t_old__split_fields14))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= x13 x11))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= t__split_fields28 (mk___split_fields__ref4 t__split_fields27)))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= rho9 search_trees__left_rotate__t__fields1))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= rho8 rho7))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= n38 n32))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= n37 n30))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= n36 n8))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= t_old__split_fields17 t_old__split_fields15))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= x14 x12))))
(assert (=> (not (= result6 true)) (=> (not (= result21 true)) (= t__split_fields29 t__split_fields27))))
(assert (=> (not (= result6 true)) (= n44 n35)))
(assert (=> (not (= result6 true)) (= n43 n34)))
(assert (=> (not (= result6 true)) (= n42 n33)))
(assert (=> (not (= result6 true)) (= n41 (mk_int__ref n7))))
(assert (=> (not (= result6 true)) (= n40 (mk_int__ref n6))))
(assert (=> (not (= result6 true)) (= n39 (mk_int__ref n5))))
(assert (=> (not (= result6 true)) (= t_old__split_fields18 t_old__split_fields16)))
(assert (=> (not (= result6 true)) (= y8 (mk_int__ref y7))))
(assert (=> (not (= result6 true)) (= x15 x13)))
(assert (=> (not (= result6 true)) (= t__split_fields30 t__split_fields28)))
(assert (=> (not (= result6 true)) (= rho13 rho9)))
(assert (=> (not (= result6 true)) (= rho12 rho8)))
(assert (=> (not (= result6 true)) (= rho11 rho1)))
(assert (=> (not (= result6 true)) (= rho10 rho)))
(assert (=> (not (= result6 true)) (= n50 n38)))
(assert (=> (not (= result6 true)) (= n49 n37)))
(assert (=> (not (= result6 true)) (= n48 n36)))
(assert (=> (not (= result6 true)) (= n47 n7)))
(assert (=> (not (= result6 true)) (= n46 n6)))
(assert (=> (not (= result6 true)) (= n45 n5)))
(assert (=> (not (= result6 true)) (= t_old__split_fields19 t_old__split_fields17)))
(assert (=> (not (= result6 true)) (= y9 y7)))
(assert (=> (not (= result6 true)) (= x16 x14)))
(assert (=> (not (= result6 true)) (= t__split_fields31 t__split_fields29)))
(assert (not (not (= (size (rec__red_black_trees__rbt__struct (us_split_fields__content4 t__split_fields30))) 0))))
(check-sat)
(exit)
