(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort natural 0)
(declare-fun naturalqtint (natural) Int)
(assert (forall ((i natural)) (and (<= 0 (naturalqtint i)) (<= (naturalqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (natural natural) Bool)
(declare-const dummy natural)
(declare-datatypes () ((natural__ref (mk_natural__ref (natural__content natural)))))
(define-fun natural__ref___projection ((a natural__ref)) natural (natural__content a))
(define-fun to_rep ((x natural)) Int (naturalqtint x))
(declare-fun of_rep (Int) natural)
(assert (forall ((x natural)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x natural)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort us_main_type 0)
(declare-fun us_main_eq (us_main_type us_main_type) Bool)
(declare-sort us_rep 0)
(declare-fun bool_eq (us_rep us_rep) Bool)
(declare-const value__size Int)
(declare-fun object__size (us_rep) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment (us_rep) Int)
(assert (<= 0 value__size))
(assert (forall ((a us_rep)) (<= 0 (object__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a us_rep)) (<= 0 (object__alignment a))))
(declare-fun user_eq1 (us_rep us_rep) Bool)
(declare-const dummy1 us_rep)
(declare-datatypes () ((sequence__ref (mk_sequence__ref (sequence__content us_rep)))))
(define-fun sequence__ref___projection ((a sequence__ref)) us_rep (sequence__content a))
(declare-fun length (us_rep) Int)
(declare-fun length__function_guard (Int us_rep) Bool)
(declare-sort count_type 0)
(declare-fun count_typeqtint (count_type) Int)
(assert (forall ((i count_type)) (and (<= 0 (count_typeqtint i)) (<= (count_typeqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq2 (count_type count_type) Bool)
(declare-const dummy2 count_type)
(declare-datatypes () ((count_type__ref (mk_count_type__ref (count_type__content count_type)))))
(define-fun count_type__ref___projection ((a count_type__ref)) count_type (count_type__content a))
(define-fun dynamic_invariant ((temp___expr_168 Int) (temp___is_init_164 Bool) (temp___skip_constant_165 Bool) (temp___do_toplevel_166 Bool) (temp___do_typ_inv_167 Bool)) Bool (=> (or (= temp___is_init_164 true) (<= 0 2147483647)) (in_range2 temp___expr_168)))
(define-fun last ((container us_rep)) Int (+ 0 (length container)))
(declare-fun last__function_guard (Int us_rep) Bool)
(declare-fun get (us_rep Int) Int)
(declare-fun get__function_guard (Int us_rep Int) Bool)
(define-fun oeq ((left us_rep) (right us_rep)) Bool (and (= (length left) (length right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun oeq__function_guard (Bool us_rep us_rep) Bool)
(assert (forall ((a us_rep) (b us_rep)) (! (= (user_eq1 a b) (oeq a b)) :pattern ((user_eq1 a b)))))
(define-fun default_initial_assumption ((temp___expr_232 us_rep) (temp___skip_top_level_233 Bool)) Bool (=> (not (= temp___skip_top_level_233 true)) (= (length temp___expr_232) 0)))
(assert (forall ((container us_rep)) (! (let ((result (length container))) (and (<= (+ 0 result) 2147483647) (dynamic_invariant result true false true true))) :pattern ((length container)))))
(declare-sort element_type 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq3 (element_type element_type) Bool)
(declare-const dummy3 element_type)
(declare-datatypes () ((element_type__ref (mk_element_type__ref (element_type__content element_type)))))
(define-fun element_type__ref___projection ((a element_type__ref)) element_type (element_type__content a))
(define-fun dynamic_invariant1 ((temp___expr_217 Int) (temp___is_init_213 Bool) (temp___skip_constant_214 Bool) (temp___do_toplevel_215 Bool) (temp___do_typ_inv_216 Bool)) Bool (=> (or (= temp___is_init_213 true) (<= 0 1)) (in_range3 temp___expr_217)))
(declare-sort extended_index 0)
(declare-fun extended_indexqtint (extended_index) Int)
(assert (forall ((i extended_index)) (and (<= 0 (extended_indexqtint i)) (<= (extended_indexqtint i) 2147483647))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (extended_index extended_index) Bool)
(declare-const dummy4 extended_index)
(declare-datatypes () ((extended_index__ref (mk_extended_index__ref (extended_index__content extended_index)))))
(define-fun extended_index__ref___projection ((a extended_index__ref)) extended_index (extended_index__content a))
(define-fun dynamic_invariant2 ((temp___expr_224 Int) (temp___is_init_220 Bool) (temp___skip_constant_221 Bool) (temp___do_toplevel_222 Bool) (temp___do_typ_inv_223 Bool)) Bool (=> (or (= temp___is_init_220 true) (<= 0 2147483647)) (in_range4 temp___expr_224)))
(assert (forall ((container us_rep)) (forall ((position Int)) (! (=> (and (dynamic_invariant2 position true true true true) (and (<= 1 position) (<= position (last container)))) (dynamic_invariant1 (get container position) true false true true)) :pattern ((get container position))))))
(define-fun olt ((left us_rep) (right us_rep)) Bool (and (< (length left) (length right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun olt__function_guard (Bool us_rep us_rep) Bool)
(define-fun ole ((left us_rep) (right us_rep)) Bool (and (<= (length left) (length right)) (ite (forall ((n Int)) (=> (and (<= 1 n) (<= n (last left))) (= (get left n) (get right n)))) true false)))
(declare-fun ole__function_guard (Bool us_rep us_rep) Bool)
(declare-fun is_concat (us_rep us_rep us_rep) Bool)
(declare-fun is_concat__function_guard (Bool us_rep us_rep us_rep) Bool)
(assert true)
(assert (forall ((q us_rep) (v us_rep) (p us_rep)) (! (= (= (is_concat q v p) true) (and (and (and (= (- (length p) (length v)) (length q)) (forall ((i Int)) (=> (and (<= 1 i) (<= i (length q))) (= (get p i) (get q i))))) (forall ((i Int)) (=> (and (<= 1 i) (<= i (length v))) (= (get p (+ i (length q))) (get v i))))) (forall ((i Int)) (=> (and (<= (+ (length q) 1) i) (<= i (length p))) (= (get v (- i (length q))) (get p i)))))) :pattern ((is_concat q v p)))))
(declare-sort extended_index_type 0)
(declare-fun extended_index_typeqtint (extended_index_type) Int)
(assert (forall ((i extended_index_type)) (and (<= 0 (extended_index_typeqtint i)) (<= (extended_index_typeqtint i) 100))))
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (extended_index_type extended_index_type) Bool)
(declare-const dummy5 extended_index_type)
(declare-datatypes () ((extended_index_type__ref (mk_extended_index_type__ref (extended_index_type__content extended_index_type)))))
(define-fun extended_index_type__ref___projection ((a extended_index_type__ref)) extended_index_type (extended_index_type__content a))
(define-fun to_rep1 ((x extended_index_type)) Int (extended_index_typeqtint x))
(declare-fun of_rep1 (Int) extended_index_type)
(assert (forall ((x extended_index_type)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x extended_index_type)) (! (in_range5 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort position_type 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (position_type position_type) Bool)
(declare-const dummy6 position_type)
(declare-datatypes () ((position_type__ref (mk_position_type__ref (position_type__content position_type)))))
(define-fun position_type__ref___projection ((a position_type__ref)) position_type (position_type__content a))
(declare-fun to_rep2 (position_type) Int)
(declare-fun of_rep2 (Int) position_type)
(assert (forall ((x position_type)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x position_type)) (! (in_range6 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range6 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__binary_trees__cell__left extended_index_type) (rec__binary_trees__cell__right extended_index_type) (rec__binary_trees__cell__parent extended_index_type) (rec__binary_trees__cell__position position_type)))))
(define-fun us_split_fields_Left__projection ((a us_split_fields)) extended_index_type (rec__binary_trees__cell__left a))
(define-fun us_split_fields_Right__projection ((a us_split_fields)) extended_index_type (rec__binary_trees__cell__right a))
(define-fun us_split_fields_Parent__projection ((a us_split_fields)) extended_index_type (rec__binary_trees__cell__parent a))
(define-fun us_split_fields_Position__projection ((a us_split_fields)) position_type (rec__binary_trees__cell__position a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep1 (mk___rep (us_split_fields1 us_split_fields)))))
(define-fun us_rep___2__projection ((a us_rep1)) us_split_fields (us_split_fields1 a))
(define-fun bool_eq1 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (and (= (to_rep1 (rec__binary_trees__cell__left (us_split_fields1 a))) (to_rep1 (rec__binary_trees__cell__left (us_split_fields1 b)))) (= (to_rep1 (rec__binary_trees__cell__right (us_split_fields1 a))) (to_rep1 (rec__binary_trees__cell__right (us_split_fields1 b))))) (= (to_rep1 (rec__binary_trees__cell__parent (us_split_fields1 a))) (to_rep1 (rec__binary_trees__cell__parent (us_split_fields1 b))))) (= (to_rep2 (rec__binary_trees__cell__position (us_split_fields1 a))) (to_rep2 (rec__binary_trees__cell__position (us_split_fields1 b))))) true false))
(declare-const value__size1 Int)
(declare-fun object__size1 (us_rep1) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 (us_rep1) Int)
(assert (<= 0 value__size1))
(assert (forall ((a us_rep1)) (<= 0 (object__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment1 a))))
(declare-const binary_trees__cell__left__first__bit Int)
(declare-const binary_trees__cell__left__last__bit Int)
(declare-const binary_trees__cell__left__position Int)
(assert (<= 0 binary_trees__cell__left__first__bit))
(assert (< binary_trees__cell__left__first__bit binary_trees__cell__left__last__bit))
(assert (<= 0 binary_trees__cell__left__position))
(declare-const binary_trees__cell__right__first__bit Int)
(declare-const binary_trees__cell__right__last__bit Int)
(declare-const binary_trees__cell__right__position Int)
(assert (<= 0 binary_trees__cell__right__first__bit))
(assert (< binary_trees__cell__right__first__bit binary_trees__cell__right__last__bit))
(assert (<= 0 binary_trees__cell__right__position))
(declare-const binary_trees__cell__parent__first__bit Int)
(declare-const binary_trees__cell__parent__last__bit Int)
(declare-const binary_trees__cell__parent__position Int)
(assert (<= 0 binary_trees__cell__parent__first__bit))
(assert (< binary_trees__cell__parent__first__bit binary_trees__cell__parent__last__bit))
(assert (<= 0 binary_trees__cell__parent__position))
(declare-const binary_trees__cell__position__first__bit Int)
(declare-const binary_trees__cell__position__last__bit Int)
(declare-const binary_trees__cell__position__position Int)
(assert (<= 0 binary_trees__cell__position__first__bit))
(assert (< binary_trees__cell__position__first__bit binary_trees__cell__position__last__bit))
(assert (<= 0 binary_trees__cell__position__position))
(declare-fun user_eq7 (us_rep1 us_rep1) Bool)
(declare-const dummy7 us_rep1)
(declare-datatypes () ((cell__ref (mk_cell__ref (cell__content us_rep1)))))
(define-fun cell__ref___projection ((a cell__ref)) us_rep1 (cell__content a))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int us_rep1))))))
(declare-fun slide ((Array Int us_rep1) Int Int) (Array Int us_rep1))
(assert (forall ((a (Array Int us_rep1))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int us_rep1))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq2 ((a (Array Int us_rep1)) (a__first Int) (a__last Int) (b (Array Int us_rep1)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq1 (select a temp___idx_155) (select b (+ (- b__first a__first) temp___idx_155))) true)))) true false))
(assert (forall ((a (Array Int us_rep1)) (b (Array Int us_rep1))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq2 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_155 Int)) (=> (and (<= a__first temp___idx_155) (<= temp___idx_155 a__last)) (= (bool_eq1 (select a temp___idx_155) (select b (+ (- b__first a__first) temp___idx_155))) true))))))))
(declare-const dummy8 (Array Int us_rep1))
(declare-const value__size2 Int)
(declare-fun object__size2 ((Array Int us_rep1)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int us_rep1)) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 ((Array Int us_rep1)) Int)
(assert (<= 0 value__size2))
(assert (forall ((a (Array Int us_rep1))) (<= 0 (object__size2 a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int us_rep1))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a (Array Int us_rep1))) (<= 0 (object__alignment2 a))))
(declare-fun user_eq8 ((Array Int us_rep1) (Array Int us_rep1)) Bool)
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__binary_trees__forest__s extended_index_type) (rec__binary_trees__forest__c (Array Int us_rep1))))))
(define-fun us_split_fields_S__projection ((a us_split_fields2)) extended_index_type (rec__binary_trees__forest__s a))
(define-fun us_split_fields_C__projection ((a us_split_fields2)) (Array Int us_rep1) (rec__binary_trees__forest__c a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___3__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep2 (mk___rep1 (us_split_fields3 us_split_fields2)))))
(define-fun us_rep___3__projection ((a us_rep2)) us_split_fields2 (us_split_fields3 a))
(define-fun bool_eq3 ((a us_rep2) (b us_rep2)) Bool (ite (and (= (to_rep1 (rec__binary_trees__forest__s (us_split_fields3 a))) (to_rep1 (rec__binary_trees__forest__s (us_split_fields3 b)))) (= (bool_eq2 (rec__binary_trees__forest__c (us_split_fields3 a)) 1 100 (rec__binary_trees__forest__c (us_split_fields3 b)) 1 100) true)) true false))
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep2) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep2) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep2)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep2)) (<= 0 (object__alignment3 a))))
(declare-const binary_trees__forest__s__first__bit Int)
(declare-const binary_trees__forest__s__last__bit Int)
(declare-const binary_trees__forest__s__position Int)
(assert (<= 0 binary_trees__forest__s__first__bit))
(assert (< binary_trees__forest__s__first__bit binary_trees__forest__s__last__bit))
(assert (<= 0 binary_trees__forest__s__position))
(declare-const binary_trees__forest__c__first__bit Int)
(declare-const binary_trees__forest__c__last__bit Int)
(declare-const binary_trees__forest__c__position Int)
(assert (<= 0 binary_trees__forest__c__first__bit))
(assert (< binary_trees__forest__c__first__bit binary_trees__forest__c__last__bit))
(assert (<= 0 binary_trees__forest__c__position))
(declare-fun user_eq9 (us_rep2 us_rep2) Bool)
(declare-const dummy9 us_rep2)
(declare-datatypes () ((forest__ref (mk_forest__ref (forest__content us_rep2)))))
(define-fun forest__ref___projection ((a forest__ref)) us_rep2 (forest__content a))
(declare-fun valid_root (us_rep2 Int) Bool)
(declare-fun valid_root__function_guard (Bool us_rep2 Int) Bool)
(declare-fun size (us_rep2) Int)
(declare-fun size__function_guard (Int us_rep2) Bool)
(declare-sort index_type 0)
(declare-fun index_typeqtint (index_type) Int)
(assert (forall ((i index_type)) (and (<= 1 (index_typeqtint i)) (<= (index_typeqtint i) 100))))
(define-fun in_range7 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq10 (index_type index_type) Bool)
(declare-const dummy10 index_type)
(declare-datatypes () ((index_type__ref (mk_index_type__ref (index_type__content index_type)))))
(define-fun index_type__ref___projection ((a index_type__ref)) index_type (index_type__content a))
(define-fun dynamic_invariant3 ((temp___expr_175 Int) (temp___is_init_171 Bool) (temp___skip_constant_172 Bool) (temp___do_toplevel_173 Bool) (temp___do_typ_inv_174 Bool)) Bool (=> (or (= temp___is_init_171 true) (<= 1 100)) (in_range7 temp___expr_175)))
(declare-fun tree_structure (us_rep2) Bool)
(declare-fun tree_structure__function_guard (Bool us_rep2) Bool)
(define-fun dynamic_invariant4 ((temp___expr_315 us_rep2) (temp___is_init_311 Bool) (temp___skip_constant_312 Bool) (temp___do_toplevel_313 Bool) (temp___do_typ_inv_314 Bool)) Bool (=> (= temp___do_typ_inv_314 true) (= (tree_structure temp___expr_315) true)))
(define-fun default_initial_assumption1 ((temp___expr_318 us_rep2) (temp___skip_top_level_319 Bool)) Bool (and (and (= (to_rep1 (rec__binary_trees__forest__s (us_split_fields3 temp___expr_318))) 0) (forall ((temp___321 Int)) (=> (and (<= 1 temp___321) (<= temp___321 100)) (and (and (and (= (to_rep1 (rec__binary_trees__cell__left (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 temp___expr_318)) temp___321)))) 0) (= (to_rep1 (rec__binary_trees__cell__right (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 temp___expr_318)) temp___321)))) 0)) (= (to_rep1 (rec__binary_trees__cell__parent (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 temp___expr_318)) temp___321)))) 0)) (= (to_rep2 (rec__binary_trees__cell__position (us_split_fields1 (select (rec__binary_trees__forest__c (us_split_fields3 temp___expr_318)) temp___321)))) 2))))) (=> (not (= temp___skip_top_level_319 true)) (= (size temp___expr_318) 0))))
(define-fun type_invariant ((temp___324 us_rep2)) Bool (= (tree_structure temp___324) true))
(assert (forall ((f us_rep2)) (forall ((i Int)) (! (=> (and (dynamic_invariant4 f true true true true) (dynamic_invariant3 i true true true true)) (=> (< (size f) i) (not (= (valid_root f i) true)))) :pattern ((valid_root f i))))))
(declare-datatypes () ((us_split_fields4 (mk___split_fields2 (rec__tree_model__path_type__a us_rep) (rec__tree_model__path_type__k Bool)))))
(define-fun us_split_fields_A__projection ((a us_split_fields4)) us_rep (rec__tree_model__path_type__a a))
(define-fun us_split_fields_K__projection ((a us_split_fields4)) Bool (rec__tree_model__path_type__k a))
(declare-datatypes () ((us_split_fields__ref2 (mk___split_fields__ref2 (us_split_fields__content2 us_split_fields4)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref2)) us_split_fields4 (us_split_fields__content2 a))
(declare-datatypes () ((us_rep3 (mk___rep2 (us_split_fields5 us_split_fields4)))))
(define-fun us_rep___projection ((a us_rep3)) us_split_fields4 (us_split_fields5 a))
(define-fun bool_eq4 ((a us_rep3) (b us_rep3)) Bool (ite (and (= (user_eq1 (rec__tree_model__path_type__a (us_split_fields5 a)) (rec__tree_model__path_type__a (us_split_fields5 b))) true) (= (rec__tree_model__path_type__k (us_split_fields5 a)) (rec__tree_model__path_type__k (us_split_fields5 b)))) true false))
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep3) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep3) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep3)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep3)) (<= 0 (object__alignment4 a))))
(declare-const tree_model__path_type__a__first__bit Int)
(declare-const tree_model__path_type__a__last__bit Int)
(declare-const tree_model__path_type__a__position Int)
(assert (<= 0 tree_model__path_type__a__first__bit))
(assert (< tree_model__path_type__a__first__bit tree_model__path_type__a__last__bit))
(assert (<= 0 tree_model__path_type__a__position))
(declare-const tree_model__path_type__k__first__bit Int)
(declare-const tree_model__path_type__k__last__bit Int)
(declare-const tree_model__path_type__k__position Int)
(assert (<= 0 tree_model__path_type__k__first__bit))
(assert (< tree_model__path_type__k__first__bit tree_model__path_type__k__last__bit))
(assert (<= 0 tree_model__path_type__k__position))
(declare-fun user_eq11 (us_rep3 us_rep3) Bool)
(declare-const dummy11 us_rep3)
(declare-datatypes () ((path_type__ref (mk_path_type__ref (path_type__content us_rep3)))))
(define-fun path_type__ref___projection ((a path_type__ref)) us_rep3 (path_type__content a))
(declare-datatypes () ((map__ref1 (mk_map__ref1 (map__content1 (Array Int us_rep3))))))
(declare-fun slide1 ((Array Int us_rep3) Int Int) (Array Int us_rep3))
(assert (forall ((a (Array Int us_rep3))) (forall ((first Int)) (! (= (slide1 a first first) a) :pattern ((slide1 a first first))))))
(assert (forall ((a (Array Int us_rep3))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide1 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide1 a old_first new_first) i))))))))
(define-fun bool_eq5 ((a (Array Int us_rep3)) (a__first Int) (a__last Int) (b (Array Int us_rep3)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq4 (select a temp___idx_154) (select b (+ (- b__first a__first) temp___idx_154))) true)))) true false))
(assert (forall ((a (Array Int us_rep3)) (b (Array Int us_rep3))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq5 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (bool_eq4 (select a temp___idx_154) (select b (+ (- b__first a__first) temp___idx_154))) true))))))))
(declare-fun model__ (us_rep2 Int) (Array Int us_rep3))
(declare-fun model____function_guard ((Array Int us_rep3) us_rep2 Int) Bool)
(declare-fun is_add (us_rep Int us_rep) Bool)
(declare-fun is_add__function_guard (Bool us_rep Int us_rep) Bool)
(declare-fun parent (us_rep2 Int) Int)
(declare-fun parent__function_guard (Int us_rep2 Int) Bool)
(declare-fun position (us_rep2 Int) Int)
(declare-fun position__function_guard (Int us_rep2 Int) Bool)
(define-fun dynamic_invariant5 ((temp___expr_251 (Array Int us_rep3)) (temp___is_init_247 Bool) (temp___skip_constant_248 Bool) (temp___do_toplevel_249 Bool) (temp___do_typ_inv_250 Bool)) Bool (forall ((temp___252 Int)) (=> (and (<= 1 temp___252) (<= temp___252 100)) (=> (= temp___is_init_247 true) (< (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___expr_251 temp___252)))) 100)))))
(define-fun default_initial_assumption2 ((temp___expr_254 (Array Int us_rep3)) (temp___skip_top_level_255 Bool)) Bool (forall ((temp___256 Int)) (=> (and (<= 1 temp___256) (<= temp___256 100)) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___expr_254 temp___256)))) 0) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___expr_254 temp___256))) (distinct 0 0))))))
(assert (forall ((f us_rep2)) (forall ((root Int)) (! (=> (and (and (dynamic_invariant4 f true true true true) (dynamic_invariant3 root true true true true)) (= (valid_root f root) true)) (let ((result (model__ f root))) (and (and (= (rec__tree_model__path_type__k (us_split_fields5 (select result root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select result root)))) 0) (and (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (not (= i root)) (ite (and (not (= (parent f i) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select result (parent f i)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select result i))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select result i))) true)))))) (and (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select result i))) true) (not (= i root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select result (parent f i)))) (position f i) (rec__tree_model__path_type__a (us_split_fields5 (select result i)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select result i)))) 0)))) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select result i))) true) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select result j))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select result i))) (rec__tree_model__path_type__a (us_split_fields5 (select result j)))) true)) (= j i))))))))))) (dynamic_invariant5 result true false true true)))) :pattern ((model__ f root))))))
(declare-datatypes () ((map__ref2 (mk_map__ref2 (map__content2 (Array Int natural))))))
(declare-fun slide2 ((Array Int natural) Int Int) (Array Int natural))
(assert (forall ((a (Array Int natural))) (forall ((first Int)) (! (= (slide2 a first first) a) :pattern ((slide2 a first first))))))
(assert (forall ((a (Array Int natural))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide2 a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide2 a old_first new_first) i))))))))
(define-fun bool_eq6 ((a (Array Int natural)) (a__first Int) (a__last Int) (b (Array Int natural)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (to_rep (select a temp___idx_156)) (to_rep (select b (+ (- b__first a__first) temp___idx_156))))))) true false))
(assert (forall ((a (Array Int natural)) (b (Array Int natural))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq6 b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_156 Int)) (=> (and (<= a__first temp___idx_156) (<= temp___idx_156 a__last)) (= (to_rep (select a temp___idx_156)) (to_rep (select b (+ (- b__first a__first) temp___idx_156)))))))))))
(declare-fun ordered_leafs (us_rep2 Int (Array Int natural)) Bool)
(declare-fun ordered_leafs__function_guard (Bool us_rep2 Int (Array Int natural)) Bool)
(assert true)
(assert (forall ((f us_rep2)) (forall ((root Int)) (forall ((values (Array Int natural))) (! (= (= (ordered_leafs f root values) true) (forall ((i Int)) (=> (and (<= 1 i) (<= i 100)) (forall ((j Int)) (=> (and (<= 1 j) (<= j 100)) (=> (and (and (= (rec__tree_model__path_type__k (us_split_fields5 (let ((temp___526 (model__ f root))) (select temp___526 i)))) true) (= (rec__tree_model__path_type__k (us_split_fields5 (let ((temp___527 (model__ f root))) (select temp___527 j)))) true)) (= (olt (rec__tree_model__path_type__a (us_split_fields5 (let ((temp___528 (model__ f root))) (select temp___528 i)))) (rec__tree_model__path_type__a (us_split_fields5 (let ((temp___529 (model__ f root))) (select temp___529 j))))) true)) (ite (= (get (rec__tree_model__path_type__a (us_split_fields5 (let ((temp___524 (model__ f root))) (select temp___524 j)))) (+ (length (rec__tree_model__path_type__a (us_split_fields5 (let ((temp___525 (model__ f root))) (select temp___525 i))))) 1)) 0) (< (to_rep (select values j)) (to_rep (select values i))) (< (to_rep (select values i)) (to_rep (select values j)))))))))) :pattern ((ordered_leafs f root values)))))))
(declare-sort tcount_typeB 0)
(declare-fun tcount_typeBqtint (tcount_typeB) Int)
(assert (forall ((i tcount_typeB)) (and (<= (- 2147483648) (tcount_typeBqtint i)) (<= (tcount_typeBqtint i) 2147483647))))
(define-fun in_range8 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq12 (tcount_typeB tcount_typeB) Bool)
(declare-const dummy12 tcount_typeB)
(declare-datatypes () ((tcount_typeB__ref (mk_tcount_typeB__ref (tcount_typeB__content tcount_typeB)))))
(define-fun tcount_typeB__ref___projection ((a tcount_typeB__ref)) tcount_typeB (tcount_typeB__content a))
(declare-const f us_rep2)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const f_old us_rep2)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const root Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const v Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(declare-const values (Array Int natural))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(declare-const attr__ATTRIBUTE_ADDRESS5 Int)
(declare-const attr__ATTRIBUTE_ADDRESS6 Int)
(define-fun dynamic_invariant6 ((temp___expr_39 Int) (temp___is_init_35 Bool) (temp___skip_constant_36 Bool) (temp___do_toplevel_37 Bool) (temp___do_typ_inv_38 Bool)) Bool (=> (or (= temp___is_init_35 true) (<= 0 2147483647)) (in_range1 temp___expr_39)))
(define-fun dynamic_invariant7 ((temp___expr_182 Int) (temp___is_init_178 Bool) (temp___skip_constant_179 Bool) (temp___do_toplevel_180 Bool) (temp___do_typ_inv_181 Bool)) Bool (=> (or (= temp___is_init_178 true) (<= 0 100)) (in_range5 temp___expr_182)))
(define-fun dynamic_invariant8 ((temp___expr_189 Int) (temp___is_init_185 Bool) (temp___skip_constant_186 Bool) (temp___do_toplevel_187 Bool) (temp___do_typ_inv_188 Bool)) Bool (=> (or (= temp___is_init_185 true) (<= 0 2)) (in_range6 temp___expr_189)))
(declare-sort direction 0)
(define-fun in_range9 ((x Int)) Bool (and (<= 0 x) (<= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq13 (direction direction) Bool)
(declare-const dummy13 direction)
(declare-datatypes () ((direction__ref (mk_direction__ref (direction__content direction)))))
(define-fun direction__ref___projection ((a direction__ref)) direction (direction__content a))
(define-fun dynamic_invariant9 ((temp___expr_196 Int) (temp___is_init_192 Bool) (temp___skip_constant_193 Bool) (temp___do_toplevel_194 Bool) (temp___do_typ_inv_195 Bool)) Bool (=> (or (= temp___is_init_192 true) (<= 0 1)) (in_range9 temp___expr_196)))
(define-fun dynamic_invariant10 ((temp___expr_239 us_rep3) (temp___is_init_235 Bool) (temp___skip_constant_236 Bool) (temp___do_toplevel_237 Bool) (temp___do_typ_inv_238 Bool)) Bool (=> (= temp___do_toplevel_237 true) (=> (= temp___is_init_235 true) (< (length (rec__tree_model__path_type__a (us_split_fields5 temp___expr_239))) 100))))
(define-fun default_initial_assumption3 ((temp___expr_241 us_rep3) (temp___skip_top_level_242 Bool)) Bool (and (= (length (rec__tree_model__path_type__a (us_split_fields5 temp___expr_241))) 0) (= (rec__tree_model__path_type__k (us_split_fields5 temp___expr_241)) (distinct 0 0))))
(define-fun dynamic_predicate ((temp___245 us_rep3)) Bool (< (length (rec__tree_model__path_type__a (us_split_fields5 temp___245))) 100))
(assert true)
(assert (forall ((s1 us_rep) (s2 us_rep)) (forall ((d Int)) (! (= (= (is_add s1 d s2) true) (and (and (= (- (length s2) 1) (length s1)) (= (olt s1 s2) true)) (= (get s2 (length s2)) d))) :pattern ((is_add s1 d s2))))))
(assert (forall ((f1 us_rep2)) (! (=> (dynamic_invariant4 f1 true true true true) (dynamic_invariant7 (size f1) true false true true)) :pattern ((size f1)))))
(assert (forall ((f1 us_rep2)) (forall ((i Int)) (! (=> (and (dynamic_invariant4 f1 true true true true) (dynamic_invariant3 i true true true true)) (let ((result (parent f1 i))) (and (and (=> (= (valid_root f1 i) true) (= result 0)) (=> (= (size f1) 0) (= result 0))) (dynamic_invariant7 result true false true true)))) :pattern ((parent f1 i))))))
(assert (forall ((f1 us_rep2)) (forall ((i Int)) (! (=> (and (and (dynamic_invariant4 f1 true true true true) (dynamic_invariant3 i true true true true)) (not (= (parent f1 i) 0))) (dynamic_invariant9 (position f1 i) true false true true)) :pattern ((position f1 i))))))
(define-fun default_initial_assumption4 ((temp___expr_299 us_rep1) (temp___skip_top_level_300 Bool)) Bool (and (and (and (= (to_rep1 (rec__binary_trees__cell__left (us_split_fields1 temp___expr_299))) 0) (= (to_rep1 (rec__binary_trees__cell__right (us_split_fields1 temp___expr_299))) 0)) (= (to_rep1 (rec__binary_trees__cell__parent (us_split_fields1 temp___expr_299))) 0)) (= (to_rep2 (rec__binary_trees__cell__position (us_split_fields1 temp___expr_299))) 2)))
(define-fun default_initial_assumption5 ((temp___expr_307 (Array Int us_rep1)) (temp___skip_top_level_308 Bool)) Bool (forall ((temp___309 Int)) (=> (and (<= 1 temp___309) (<= temp___309 100)) (and (and (and (= (to_rep1 (rec__binary_trees__cell__left (us_split_fields1 (select temp___expr_307 temp___309)))) 0) (= (to_rep1 (rec__binary_trees__cell__right (us_split_fields1 (select temp___expr_307 temp___309)))) 0)) (= (to_rep1 (rec__binary_trees__cell__parent (us_split_fields1 (select temp___expr_307 temp___309)))) 0)) (= (to_rep2 (rec__binary_trees__cell__position (us_split_fields1 (select temp___expr_307 temp___309)))) 2)))))
(assert true)
(declare-const i Int)
(declare-const temp___1584 (Array Int us_rep3))
(declare-const o us_rep3)
(declare-const o1 us_split_fields4)
(declare-const o2 us_rep)
(declare-const temp___1585 (Array Int us_rep3))
(declare-const o3 us_rep3)
(declare-const o4 us_split_fields4)
(declare-const o5 us_rep)
(declare-const temp___1583 (Array Int us_rep3))
(declare-const o6 us_rep3)
(declare-const o7 us_split_fields4)
(declare-const temp___1582 (Array Int us_rep3))
(declare-const o8 us_rep3)
(declare-const o9 us_split_fields4)
(declare-const temp___1596 (Array Int us_rep3))
(declare-const o10 us_rep3)
(declare-const o11 us_split_fields4)
(declare-const o12 us_rep)
(declare-const temp___1597 (Array Int us_rep3))
(declare-const o13 us_rep3)
(declare-const o14 us_split_fields4)
(declare-const o15 us_rep)
(declare-const temp___1595 (Array Int us_rep3))
(declare-const o16 us_rep3)
(declare-const o17 us_split_fields4)
(declare-const temp___1594 (Array Int us_rep3))
(declare-const o18 us_rep3)
(declare-const o19 us_split_fields4)
(declare-const temp___1616 (Array Int us_rep3))
(declare-const o20 us_rep3)
(declare-const o21 us_split_fields4)
(declare-const o22 us_rep)
(declare-const temp___1617 (Array Int us_rep3))
(declare-const o23 us_rep3)
(declare-const o24 us_split_fields4)
(declare-const o25 us_rep)
(declare-const temp___1615 (Array Int us_rep3))
(declare-const o26 us_rep3)
(declare-const o27 us_split_fields4)
(declare-const temp___1614 (Array Int us_rep3))
(declare-const o28 us_rep3)
(declare-const o29 us_split_fields4)
(declare-const temp___1639 (Array Int us_rep3))
(declare-const o30 us_rep3)
(declare-const o31 us_split_fields4)
(declare-const temp___1638 (Array Int us_rep3))
(declare-const o32 us_rep3)
(declare-const o33 us_split_fields4)
(declare-const k Int)
(declare-const temp___1649 (Array Int us_rep3))
(declare-const o34 us_rep3)
(declare-const o35 us_split_fields4)
(declare-const o36 us_rep)
(declare-const temp___1650 (Array Int us_rep3))
(declare-const o37 Int)
(declare-const o38 us_rep3)
(declare-const o39 us_split_fields4)
(declare-const o40 us_rep)
(declare-const temp___1648 (Array Int us_rep3))
(declare-const o41 Int)
(declare-const o42 us_rep3)
(declare-const o43 us_split_fields4)
(declare-const temp___1647 (Array Int us_rep3))
(declare-const o44 us_rep3)
(declare-const o45 us_split_fields4)
(declare-const temp___1645 (Array Int us_rep3))
(declare-const o46 Int)
(declare-const o47 us_rep3)
(declare-const o48 us_split_fields4)
(declare-const o49 us_rep)
(declare-const temp___1646 (Array Int us_rep3))
(declare-const o50 us_rep3)
(declare-const o51 us_split_fields4)
(declare-const o52 us_rep)
(declare-const o53 Int)
(declare-const o54 Int)
(declare-const o55 Int)
(declare-const o56 Int)
(declare-const result int__ref)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const j Int)
(declare-const result1 int__ref)
(declare-const j1 Int)
(declare-const result2 Bool)
(declare-const result3 Bool)
(declare-const result4 Bool)
(declare-const result5 Bool)
(declare-const result6 Bool)
(declare-const result7 Bool)
(declare-const result8 Bool)
(declare-const result9 Bool)
(declare-const result10 Bool)
(declare-const result11 Bool)
(declare-const result12 Bool)
(declare-const j2 Int)
(declare-const result13 Bool)
(declare-const result14 Bool)
(declare-const result15 Bool)
(declare-const result16 Bool)
(assert (= (tree_structure f) true))
(assert (= (tree_structure f_old) true))
(assert (in_range7 root))
(assert (in_range7 v))
(assert (and (= (valid_root f_old root) true) (and (= (valid_root f root) true) (and (= (valid_root f_old v) true) (and (not (= (valid_root f v) true)) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f root) v))) true) (and (= (ordered_leafs f_old root values) true) (and (= (ordered_leafs f_old v values) true) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old root) i3))) true) (= (olt (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f_old root) i3))) (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) v)))) true)) (ite (= (get (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) v))) (+ (length (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f_old root) i3)))) 1)) 0) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old v) j3))) true) (< (to_rep (select values j3)) (to_rep (select values i3)))))) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old v) j3))) true) (< (to_rep (select values i3)) (to_rep (select values j3)))))))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f root) i3))) true) (ite (= (ole (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) v))) (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) i3)))) true) (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old v) i3))) true) (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old root) i3))) true))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old root) i3))) true) (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f root) i3))) true)))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (and (not (= v 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old v) i3))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f root) i3))) true)))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old root) i3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f_old root) i3))) (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) i3)))) true)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (and (not (= v 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old v) i3))) true)) (= (is_concat (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) v))) (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f_old v) i3))) (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) i3)))) true)))))))))))))))))
(assert (= result (mk_int__ref i)))
(assert (= i1 1))
(assert (<= 1 i1))
(assert (<= i1 100))
(assert (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 (- i2 1))) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (and (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f root) k1))) true) (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f root) j3))) true)) (= (olt (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) k1))) (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) j3)))) true)) (ite (= (get (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) j3))) (+ (length (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) k1)))) 1)) 0) (< (to_rep (select values j3)) (to_rep (select values k1))) (< (to_rep (select values k1)) (to_rep (select values j3))))))))))
(assert (and (=> (<= 1 100) (in_range7 i2)) (and (<= 1 i2) (<= i2 100))))
(assert (= result1 (mk_int__ref j)))
(assert (= j1 1))
(assert (<= 1 j1))
(assert (<= j1 100))
(assert (and (= temp___1582 (model__ f_old root)) (and (dynamic_invariant5 temp___1582 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1582 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1582 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f_old i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1582 (parent f_old i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1582 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1582 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1582 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1582 (parent f_old i3)))) (position f_old i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1582 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1582 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1582 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1582 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1582 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1582 j3)))) true)) (= j3 i3))))))))))))))
(assert (= o8 (select temp___1582 i2)))
(assert (= o9 (us_split_fields5 o8)))
(assert (= result4 (rec__tree_model__path_type__k o9)))
(assert (=> (= result4 true) (and (= temp___1583 (model__ f_old root)) (and (dynamic_invariant5 temp___1583 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1583 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1583 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f_old i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1583 (parent f_old i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1583 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1583 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1583 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1583 (parent f_old i3)))) (position f_old i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1583 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1583 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1583 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1583 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1583 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1583 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result4 true) (= o6 (select temp___1583 j1))))
(assert (=> (= result4 true) (= o7 (us_split_fields5 o6))))
(assert (=> (= result4 true) (= result3 (rec__tree_model__path_type__k o7))))
(assert (=> (not (= result4 true)) (= result3 false)))
(assert (=> (= result3 true) (and (= temp___1585 (model__ f root)) (and (dynamic_invariant5 temp___1585 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1585 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1585 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1585 (parent f i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1585 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1585 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1585 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1585 (parent f i3)))) (position f i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1585 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1585 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1585 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1585 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1585 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1585 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result3 true) (= o3 (select temp___1585 j1))))
(assert (=> (= result3 true) (= o4 (us_split_fields5 o3))))
(assert (=> (= result3 true) (= o5 (rec__tree_model__path_type__a o4))))
(assert (=> (= result3 true) (and (= temp___1584 (model__ f root)) (and (dynamic_invariant5 temp___1584 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1584 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1584 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1584 (parent f i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1584 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1584 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1584 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1584 (parent f i3)))) (position f i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1584 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1584 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1584 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1584 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1584 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1584 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result3 true) (= o (select temp___1584 i2))))
(assert (=> (= result3 true) (= o1 (us_split_fields5 o))))
(assert (=> (= result3 true) (= o2 (rec__tree_model__path_type__a o1))))
(assert (=> (= result3 true) (and (= result2 (olt o2 o5)) (= (= result2 true) (and (< (length o2) (length o5)) (forall ((n Int)) (=> (and (<= 1 n) (<= n (last o2))) (= (get o2 n) (get o5 n)))))))))
(assert (=> (not (= result3 true)) (= result2 false)))
(assert (=> (= result2 true) (= (olt (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f_old root) i2))) (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f_old root) j1)))) true)))
(assert (=> (= result2 true) (ite (= (get (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) j1))) (+ (length (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) i2)))) 1)) 0) (< (to_rep (select values j1)) (to_rep (select values i2))) (< (to_rep (select values i2)) (to_rep (select values j1))))))
(assert (and (= temp___1594 (model__ f_old v)) (and (dynamic_invariant5 temp___1594 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1594 v))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1594 v)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 v)) (ite (and (not (= (parent f_old i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1594 (parent f_old i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1594 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1594 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1594 i3))) true) (not (= i3 v))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1594 (parent f_old i3)))) (position f_old i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1594 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1594 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1594 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1594 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1594 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1594 j3)))) true)) (= j3 i3))))))))))))))
(assert (= o18 (select temp___1594 i2)))
(assert (= o19 (us_split_fields5 o18)))
(assert (= result7 (rec__tree_model__path_type__k o19)))
(assert (=> (= result7 true) (and (= temp___1595 (model__ f_old v)) (and (dynamic_invariant5 temp___1595 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1595 v))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1595 v)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 v)) (ite (and (not (= (parent f_old i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1595 (parent f_old i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1595 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1595 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1595 i3))) true) (not (= i3 v))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1595 (parent f_old i3)))) (position f_old i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1595 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1595 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1595 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1595 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1595 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1595 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result7 true) (= o16 (select temp___1595 j1))))
(assert (=> (= result7 true) (= o17 (us_split_fields5 o16))))
(assert (=> (= result7 true) (= result6 (rec__tree_model__path_type__k o17))))
(assert (=> (not (= result7 true)) (= result6 false)))
(assert (=> (= result6 true) (and (= temp___1597 (model__ f root)) (and (dynamic_invariant5 temp___1597 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1597 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1597 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1597 (parent f i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1597 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1597 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1597 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1597 (parent f i3)))) (position f i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1597 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1597 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1597 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1597 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1597 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1597 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result6 true) (= o13 (select temp___1597 j1))))
(assert (=> (= result6 true) (= o14 (us_split_fields5 o13))))
(assert (=> (= result6 true) (= o15 (rec__tree_model__path_type__a o14))))
(assert (=> (= result6 true) (and (= temp___1596 (model__ f root)) (and (dynamic_invariant5 temp___1596 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1596 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1596 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1596 (parent f i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1596 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1596 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1596 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1596 (parent f i3)))) (position f i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1596 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1596 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1596 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1596 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1596 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1596 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result6 true) (= o10 (select temp___1596 i2))))
(assert (=> (= result6 true) (= o11 (us_split_fields5 o10))))
(assert (=> (= result6 true) (= o12 (rec__tree_model__path_type__a o11))))
(assert (=> (= result6 true) (and (= result5 (olt o12 o15)) (= (= result5 true) (and (< (length o12) (length o15)) (forall ((n Int)) (=> (and (<= 1 n) (<= n (last o12))) (= (get o12 n) (get o15 n)))))))))
(assert (=> (not (= result6 true)) (= result5 false)))
(assert (=> (= result5 true) (= (olt (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f_old v) i2))) (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f_old v) j1)))) true)))
(assert (=> (= result5 true) (= (get (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) j1))) (+ (length (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) i2)))) 1)) (get (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f_old v) j1))) (+ (length (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f_old v) i2)))) 1)))))
(assert (=> (= result5 true) (ite (= (get (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) j1))) (+ (length (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) i2)))) 1)) 0) (< (to_rep (select values j1)) (to_rep (select values i2))) (< (to_rep (select values i2)) (to_rep (select values j1))))))
(assert (and (= temp___1614 (model__ f_old root)) (and (dynamic_invariant5 temp___1614 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1614 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1614 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f_old i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1614 (parent f_old i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1614 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1614 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1614 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1614 (parent f_old i3)))) (position f_old i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1614 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1614 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1614 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1614 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1614 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1614 j3)))) true)) (= j3 i3))))))))))))))
(assert (= o28 (select temp___1614 i2)))
(assert (= o29 (us_split_fields5 o28)))
(assert (= result10 (rec__tree_model__path_type__k o29)))
(assert (=> (= result10 true) (and (= temp___1615 (model__ f_old v)) (and (dynamic_invariant5 temp___1615 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1615 v))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1615 v)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 v)) (ite (and (not (= (parent f_old i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1615 (parent f_old i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1615 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1615 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1615 i3))) true) (not (= i3 v))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1615 (parent f_old i3)))) (position f_old i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1615 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1615 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1615 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1615 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1615 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1615 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result10 true) (= o26 (select temp___1615 j1))))
(assert (=> (= result10 true) (= o27 (us_split_fields5 o26))))
(assert (=> (= result10 true) (= result9 (rec__tree_model__path_type__k o27))))
(assert (=> (not (= result10 true)) (= result9 false)))
(assert (=> (= result9 true) (and (= temp___1617 (model__ f root)) (and (dynamic_invariant5 temp___1617 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1617 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1617 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1617 (parent f i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1617 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1617 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1617 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1617 (parent f i3)))) (position f i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1617 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1617 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1617 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1617 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1617 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1617 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result9 true) (= o23 (select temp___1617 j1))))
(assert (=> (= result9 true) (= o24 (us_split_fields5 o23))))
(assert (=> (= result9 true) (= o25 (rec__tree_model__path_type__a o24))))
(assert (=> (= result9 true) (and (= temp___1616 (model__ f root)) (and (dynamic_invariant5 temp___1616 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1616 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1616 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1616 (parent f i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1616 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1616 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1616 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1616 (parent f i3)))) (position f i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1616 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1616 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1616 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1616 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1616 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1616 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result9 true) (= o20 (select temp___1616 i2))))
(assert (=> (= result9 true) (= o21 (us_split_fields5 o20))))
(assert (=> (= result9 true) (= o22 (rec__tree_model__path_type__a o21))))
(assert (=> (= result9 true) (and (= result8 (olt o22 o25)) (= (= result8 true) (and (< (length o22) (length o25)) (forall ((n Int)) (=> (and (<= 1 n) (<= n (last o22))) (= (get o22 n) (get o25 n)))))))))
(assert (=> (not (= result9 true)) (= result8 false)))
(assert (=> (= result8 true) (= (ole (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) v))) (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) j1)))) true)))
(assert (=> (= result8 true) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (or (not (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old root) i3))) true)) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old v) i3))) true)))))))
(assert (=> (= result8 true) (= (olt (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f_old root) i2))) (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) v)))) true)))
(assert (=> (= result8 true) (ite (= (get (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) j1))) (+ (length (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) i2)))) 1)) 0) (< (to_rep (select values j1)) (to_rep (select values i2))) (< (to_rep (select values i2)) (to_rep (select values j1))))))
(assert (and (= temp___1638 (model__ f_old v)) (and (dynamic_invariant5 temp___1638 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1638 v))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1638 v)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 v)) (ite (and (not (= (parent f_old i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1638 (parent f_old i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1638 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1638 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1638 i3))) true) (not (= i3 v))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1638 (parent f_old i3)))) (position f_old i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1638 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1638 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1638 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1638 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1638 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1638 j3)))) true)) (= j3 i3))))))))))))))
(assert (= o32 (select temp___1638 i2)))
(assert (= o33 (us_split_fields5 o32)))
(assert (= result12 (rec__tree_model__path_type__k o33)))
(assert (=> (= result12 true) (and (= temp___1639 (model__ f_old root)) (and (dynamic_invariant5 temp___1639 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1639 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1639 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f_old i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1639 (parent f_old i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1639 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1639 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1639 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1639 (parent f_old i3)))) (position f_old i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1639 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1639 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1639 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1639 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1639 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1639 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result12 true) (= o30 (select temp___1639 j1))))
(assert (=> (= result12 true) (= o31 (us_split_fields5 o30))))
(assert (=> (= result12 true) (= result11 (rec__tree_model__path_type__k o31))))
(assert (=> (not (= result12 true)) (= result11 false)))
(assert (=> (= result11 true) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (or (not (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old root) i3))) true)) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f_old v) i3))) true)))))))
(assert (=> (= result11 true) (not (= (olt (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) i2))) (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) j1)))) true))))
(assert (forall ((k1 Int)) (=> (and (<= 1 k1) (<= k1 j2)) (=> (and (and (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f root) i2))) true) (= (rec__tree_model__path_type__k (us_split_fields5 (select (model__ f root) k1))) true)) (= (olt (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) i2))) (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) k1)))) true)) (ite (= (get (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) k1))) (+ (length (rec__tree_model__path_type__a (us_split_fields5 (select (model__ f root) i2)))) 1)) 0) (< (to_rep (select values k1)) (to_rep (select values i2))) (< (to_rep (select values i2)) (to_rep (select values k1))))))))
(assert (and (=> (<= 1 100) (in_range7 j2)) (and (<= 1 j2) (<= j2 100))))
(assert (<= 1 k))
(assert (<= k j2))
(assert (and (= temp___1647 (model__ f root)) (and (dynamic_invariant5 temp___1647 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1647 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1647 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1647 (parent f i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1647 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1647 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1647 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1647 (parent f i3)))) (position f i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1647 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1647 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1647 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1647 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1647 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1647 j3)))) true)) (= j3 i3))))))))))))))
(assert (= o44 (select temp___1647 i2)))
(assert (= o45 (us_split_fields5 o44)))
(assert (= result15 (rec__tree_model__path_type__k o45)))
(assert (=> (= result15 true) (and (= temp___1648 (model__ f root)) (and (dynamic_invariant5 temp___1648 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1648 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1648 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1648 (parent f i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1648 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1648 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1648 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1648 (parent f i3)))) (position f i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1648 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1648 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1648 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1648 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1648 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1648 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result15 true) (and (<= 1 k) (<= k 100))))
(assert (=> (= result15 true) (= o41 k)))
(assert (=> (= result15 true) (= o42 (select temp___1648 o41))))
(assert (=> (= result15 true) (= o43 (us_split_fields5 o42))))
(assert (=> (= result15 true) (= result14 (rec__tree_model__path_type__k o43))))
(assert (=> (not (= result15 true)) (= result14 false)))
(assert (=> (= result14 true) (and (= temp___1650 (model__ f root)) (and (dynamic_invariant5 temp___1650 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1650 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1650 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1650 (parent f i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1650 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1650 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1650 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1650 (parent f i3)))) (position f i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1650 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1650 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1650 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1650 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1650 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1650 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result14 true) (and (<= 1 k) (<= k 100))))
(assert (=> (= result14 true) (= o37 k)))
(assert (=> (= result14 true) (= o38 (select temp___1650 o37))))
(assert (=> (= result14 true) (= o39 (us_split_fields5 o38))))
(assert (=> (= result14 true) (= o40 (rec__tree_model__path_type__a o39))))
(assert (=> (= result14 true) (and (= temp___1649 (model__ f root)) (and (dynamic_invariant5 temp___1649 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1649 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1649 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1649 (parent f i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1649 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1649 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1649 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1649 (parent f i3)))) (position f i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1649 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1649 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1649 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1649 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1649 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1649 j3)))) true)) (= j3 i3)))))))))))))))
(assert (=> (= result14 true) (= o34 (select temp___1649 i2))))
(assert (=> (= result14 true) (= o35 (us_split_fields5 o34))))
(assert (=> (= result14 true) (= o36 (rec__tree_model__path_type__a o35))))
(assert (=> (= result14 true) (and (= result13 (olt o36 o40)) (= (= result13 true) (and (< (length o36) (length o40)) (forall ((n Int)) (=> (and (<= 1 n) (<= n (last o36))) (= (get o36 n) (get o40 n)))))))))
(assert (=> (not (= result14 true)) (= result13 false)))
(assert (= result13 true))
(assert (and (= temp___1646 (model__ f root)) (and (dynamic_invariant5 temp___1646 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1646 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1646 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1646 (parent f i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1646 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1646 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1646 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1646 (parent f i3)))) (position f i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1646 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1646 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1646 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1646 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1646 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1646 j3)))) true)) (= j3 i3))))))))))))))
(assert (= o50 (select temp___1646 i2)))
(assert (= o51 (us_split_fields5 o50)))
(assert (= o52 (rec__tree_model__path_type__a o51)))
(assert (and (= o53 (length o52)) (and (in_range2 o53) (<= (+ 0 o53) 2147483647))))
(assert (= o54 (+ o53 1)))
(assert (and (= o55 o54) (in_range8 o54)))
(assert (and (= temp___1645 (model__ f root)) (and (dynamic_invariant5 temp___1645 true false true true) (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1645 root))) true) (and (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1645 root)))) 0) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (not (= i3 root)) (ite (and (not (= (parent f i3) 0)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1645 (parent f i3)))) true)) (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1645 i3))) true) (not (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1645 i3))) true)))))) (and (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (ite (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1645 i3))) true) (not (= i3 root))) (= (is_add (rec__tree_model__path_type__a (us_split_fields5 (select temp___1645 (parent f i3)))) (position f i3) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1645 i3)))) true) (= (length (rec__tree_model__path_type__a (us_split_fields5 (select temp___1645 i3)))) 0)))) (forall ((i3 Int)) (=> (and (<= 1 i3) (<= i3 100)) (=> (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1645 i3))) true) (forall ((j3 Int)) (=> (and (<= 1 j3) (<= j3 100)) (=> (and (= (rec__tree_model__path_type__k (us_split_fields5 (select temp___1645 j3))) true) (= (oeq (rec__tree_model__path_type__a (us_split_fields5 (select temp___1645 i3))) (rec__tree_model__path_type__a (us_split_fields5 (select temp___1645 j3)))) true)) (= j3 i3))))))))))))))
(assert (and (<= 1 k) (<= k 100)))
(assert (= o46 k))
(assert (= o47 (select temp___1645 o46)))
(assert (= o48 (us_split_fields5 o47)))
(assert (= o49 (rec__tree_model__path_type__a o48)))
(assert (and (= o56 (get o49 o55)) (in_range3 o56)))
(assert (= result16 (ite (= o56 0) true false)))
(assert (= result16 true))
(assert (not (<= 1 k)))
(check-sat)
(exit)
