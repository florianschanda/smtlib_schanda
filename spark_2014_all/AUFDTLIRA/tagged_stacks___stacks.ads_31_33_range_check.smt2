(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(declare-fun integerqtint (integer) Int)
(assert (forall ((i integer)) (and (<= (- 2147483648) (integerqtint i)) (<= (integerqtint i) 2147483647))))
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(declare-fun positiveqtint (positive) Int)
(assert (forall ((i positive)) (and (<= 1 (positiveqtint i)) (<= (positiveqtint i) 2147483647))))
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(define-fun to_rep ((x integer)) Int (integerqtint x))
(declare-fun of_rep (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-sort element 0)
(declare-fun elementqtint (element) Int)
(assert (forall ((i element)) (and (<= 0 (elementqtint i)) (<= (elementqtint i) 2147483647))))
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (element element) Bool)
(declare-const dummy2 element)
(declare-datatypes () ((element__ref (mk_element__ref (element__content element)))))
(define-fun element__ref___projection ((a element__ref)) element (element__content a))
(define-fun to_rep1 ((x element)) Int (elementqtint x))
(declare-fun of_rep1 (Int) element)
(assert (forall ((x element)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x element)) (! (in_range3 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int element))))))
(declare-fun slide ((Array Int element) Int Int) (Array Int element))
(assert (forall ((a (Array Int element))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int element))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(define-fun bool_eq ((a (Array Int element)) (a__first Int) (a__last Int) (b (Array Int element)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154))))))) true false))
(assert (forall ((a (Array Int element)) (b (Array Int element))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_154 Int)) (=> (and (<= a__first temp___idx_154) (<= temp___idx_154 a__last)) (= (to_rep1 (select a temp___idx_154)) (to_rep1 (select b (+ (- b__first a__first) temp___idx_154)))))))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first (mk f l))) f) (= (to_rep (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int element)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int element) (elts a))
(define-fun of_array ((a (Array Int element)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int element)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int element)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int element)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int element))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep (first (rt x))) (to_rep (last (rt x))) (elts y) (to_rep (first (rt y))) (to_rep (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-datatypes () ((model____ref (mk_model____ref (model____content us_t)))))
(define-fun model____ref___projection ((a model____ref)) us_t (model____content a))
(declare-sort less_than_max 0)
(declare-fun less_than_maxqtint (less_than_max) Int)
(assert (forall ((i less_than_max)) (and (<= 0 (less_than_maxqtint i)) (<= (less_than_maxqtint i) 100))))
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (less_than_max less_than_max) Bool)
(declare-const dummy4 less_than_max)
(declare-datatypes () ((less_than_max__ref (mk_less_than_max__ref (less_than_max__content less_than_max)))))
(define-fun less_than_max__ref___projection ((a less_than_max__ref)) less_than_max (less_than_max__content a))
(define-fun to_rep2 ((x less_than_max)) Int (less_than_maxqtint x))
(declare-fun of_rep2 (Int) less_than_max)
(assert (forall ((x less_than_max)) (! (= (of_rep2 (to_rep2 x)) x) :pattern ((to_rep2 x)))))
(assert (forall ((x less_than_max)) (! (in_range4 (to_rep2 x)) :pattern ((to_rep2 x)))))
(assert (forall ((x Int)) (! (=> (in_range4 x) (= (to_rep2 (of_rep2 x)) x)) :pattern ((to_rep2 (of_rep2 x))))))
(declare-const dummy5 (Array Int element))
(declare-const value__size1 Int)
(declare-fun object__size1 ((Array Int element)) Int)
(declare-const value__component__size1 Int)
(declare-fun object__component__size1 ((Array Int element)) Int)
(declare-const value__alignment1 Int)
(declare-fun object__alignment1 ((Array Int element)) Int)
(assert (<= 0 value__size1))
(assert (forall ((a (Array Int element))) (<= 0 (object__size1 a))))
(assert (<= 0 value__component__size1))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size1 a))))
(assert (<= 0 value__alignment1))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment1 a))))
(declare-fun user_eq5 ((Array Int element) (Array Int element)) Bool)
(declare-datatypes () ((us_split_fields (mk___split_fields (rec__stacks__stack_root__content (Array Int element)) (rec__stacks__stack_root__length less_than_max) (rec__ext__ us_private)))))
(define-fun us_split_fields_Content__projection ((a us_split_fields)) (Array Int element) (rec__stacks__stack_root__content a))
(define-fun us_split_fields_Length__projection ((a us_split_fields)) less_than_max (rec__stacks__stack_root__length a))
(define-fun us_split_fields___projection ((a us_split_fields)) us_private (rec__ext__ a))
(declare-datatypes () ((us_split_fields__ref (mk___split_fields__ref (us_split_fields__content us_split_fields)))))
(define-fun us_split_fields__ref___projection ((a us_split_fields__ref)) us_split_fields (us_split_fields__content a))
(declare-datatypes () ((us_rep (mk___rep (us_split_fields1 us_split_fields) (attr__tag Int)))))
(define-fun us_rep___projection ((a us_rep)) us_split_fields (us_split_fields1 a))
(define-fun us_rep___2__projection ((a us_rep)) Int (attr__tag a))
(define-fun bool_eq2 ((a us_rep) (b us_rep)) Bool (ite (and (= (bool_eq (rec__stacks__stack_root__content (us_split_fields1 a)) 1 100 (rec__stacks__stack_root__content (us_split_fields1 b)) 1 100) true) (= (to_rep2 (rec__stacks__stack_root__length (us_split_fields1 a))) (to_rep2 (rec__stacks__stack_root__length (us_split_fields1 b))))) true false))
(declare-fun us_dispatch_eq (us_rep us_rep) Bool)
(declare-const us_tag Int)
(declare-const value__size2 Int)
(declare-fun object__size2 (us_rep) Int)
(declare-const value__alignment2 Int)
(declare-fun object__alignment2 (us_rep) Int)
(assert (<= 0 value__size2))
(assert (forall ((a us_rep)) (<= 0 (object__size2 a))))
(assert (<= 0 value__alignment2))
(assert (forall ((a us_rep)) (<= 0 (object__alignment2 a))))
(declare-const stacks__stack_root__content__first__bit Int)
(declare-const stacks__stack_root__content__last__bit Int)
(declare-const stacks__stack_root__content__position Int)
(assert (<= 0 stacks__stack_root__content__first__bit))
(assert (< stacks__stack_root__content__first__bit stacks__stack_root__content__last__bit))
(assert (<= 0 stacks__stack_root__content__position))
(declare-const stacks__stack_root__length__first__bit Int)
(declare-const stacks__stack_root__length__last__bit Int)
(declare-const stacks__stack_root__length__position Int)
(assert (<= 0 stacks__stack_root__length__first__bit))
(assert (< stacks__stack_root__length__first__bit stacks__stack_root__length__last__bit))
(assert (<= 0 stacks__stack_root__length__position))
(declare-fun user_eq6 (us_rep us_rep) Bool)
(declare-const dummy6 us_rep)
(declare-datatypes () ((stack_root__ref (mk_stack_root__ref (stack_root__content us_rep)))))
(define-fun stack_root__ref___projection ((a stack_root__ref)) us_rep (stack_root__content a))
(declare-fun get_model (us_rep) us_t)
(declare-fun get_model__function_guard (us_t us_rep) Bool)
(declare-fun get_model1 (Int us_rep) us_t)
(declare-fun get_model__function_guard1 (us_t Int us_rep) Bool)
(declare-fun size (us_rep) Int)
(declare-fun size__function_guard (Int us_rep) Bool)
(declare-const us_tag1 Int)
(declare-const value__size3 Int)
(declare-fun object__size3 (us_rep) Int)
(declare-const value__alignment3 Int)
(declare-fun object__alignment3 (us_rep) Int)
(assert (<= 0 value__size3))
(assert (forall ((a us_rep)) (<= 0 (object__size3 a))))
(assert (<= 0 value__alignment3))
(assert (forall ((a us_rep)) (<= 0 (object__alignment3 a))))
(declare-const stacks__stack_root__content__first__bit1 Int)
(declare-const stacks__stack_root__content__last__bit1 Int)
(declare-const stacks__stack_root__content__position1 Int)
(assert (<= 0 stacks__stack_root__content__first__bit1))
(assert (< stacks__stack_root__content__first__bit1 stacks__stack_root__content__last__bit1))
(assert (<= 0 stacks__stack_root__content__position1))
(declare-const stacks__stack_root__length__first__bit1 Int)
(declare-const stacks__stack_root__length__last__bit1 Int)
(declare-const stacks__stack_root__length__position1 Int)
(assert (<= 0 stacks__stack_root__length__first__bit1))
(assert (< stacks__stack_root__length__first__bit1 stacks__stack_root__length__last__bit1))
(assert (<= 0 stacks__stack_root__length__position1))
(declare-fun user_eq7 (us_rep us_rep) Bool)
(declare-const dummy7 us_rep)
(declare-datatypes () ((stack__ref (mk_stack__ref (stack__content us_rep)))))
(define-fun stack__ref___projection ((a stack__ref)) us_rep (stack__content a))
(declare-fun get_model__2 (us_rep) us_t)
(declare-fun get_model__2__function_guard (us_t us_rep) Bool)
(declare-fun get_model__21 (Int us_rep) us_t)
(declare-fun get_model__2__function_guard1 (us_t Int us_rep) Bool)
(declare-sort positive_less_than_max 0)
(declare-fun positive_less_than_maxqtint (positive_less_than_max) Int)
(assert (forall ((i positive_less_than_max)) (and (<= 1 (positive_less_than_maxqtint i)) (<= (positive_less_than_maxqtint i) 100))))
(define-fun in_range5 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq8 (positive_less_than_max positive_less_than_max) Bool)
(declare-const dummy8 positive_less_than_max)
(declare-datatypes () ((positive_less_than_max__ref (mk_positive_less_than_max__ref (positive_less_than_max__content positive_less_than_max)))))
(define-fun positive_less_than_max__ref___projection ((a positive_less_than_max__ref)) positive_less_than_max (positive_less_than_max__content a))
(define-fun to_rep3 ((x positive_less_than_max)) Int (positive_less_than_maxqtint x))
(declare-fun of_rep3 (Int) positive_less_than_max)
(assert (forall ((x positive_less_than_max)) (! (= (of_rep3 (to_rep3 x)) x) :pattern ((to_rep3 x)))))
(assert (forall ((x positive_less_than_max)) (! (in_range5 (to_rep3 x)) :pattern ((to_rep3 x)))))
(assert (forall ((x Int)) (! (=> (in_range5 x) (= (to_rep3 (of_rep3 x)) x)) :pattern ((to_rep3 (of_rep3 x))))))
(declare-datatypes () ((us_split_fields2 (mk___split_fields1 (rec__stacks__buffer__first positive_less_than_max) (rec__stacks__stack_root__content1 (Array Int element)) (rec__stacks__stack_root__length1 less_than_max) (rec__ext__1 us_private)))))
(define-fun us_split_fields_First__projection ((a us_split_fields2)) positive_less_than_max (rec__stacks__buffer__first a))
(define-fun us_split_fields_Content__2__projection ((a us_split_fields2)) (Array Int element) (rec__stacks__stack_root__content1 a))
(define-fun us_split_fields_Length__2__projection ((a us_split_fields2)) less_than_max (rec__stacks__stack_root__length1 a))
(define-fun us_split_fields___2__projection ((a us_split_fields2)) us_private (rec__ext__1 a))
(declare-datatypes () ((us_split_fields__ref1 (mk___split_fields__ref1 (us_split_fields__content1 us_split_fields2)))))
(define-fun us_split_fields__ref___2__projection ((a us_split_fields__ref1)) us_split_fields2 (us_split_fields__content1 a))
(declare-datatypes () ((us_rep1 (mk___rep1 (us_split_fields3 us_split_fields2) (attr__tag1 Int)))))
(define-fun us_rep___3__projection ((a us_rep1)) us_split_fields2 (us_split_fields3 a))
(define-fun us_rep___4__projection ((a us_rep1)) Int (attr__tag1 a))
(declare-fun hide_ext__ (positive_less_than_max us_private) us_private)
(declare-fun extract__first (us_private) positive_less_than_max)
(assert (forall ((first2 positive_less_than_max)) (forall ((rec__ext__2 us_private)) (= (extract__first (hide_ext__ first2 rec__ext__2)) first2))))
(declare-fun extract__ext__ (us_private) us_private)
(define-fun to_base ((a us_rep1)) us_rep (mk___rep (mk___split_fields (rec__stacks__stack_root__content1 (us_split_fields3 a)) (rec__stacks__stack_root__length1 (us_split_fields3 a)) (hide_ext__ (rec__stacks__buffer__first (us_split_fields3 a)) (rec__ext__1 (us_split_fields3 a)))) (attr__tag1 a)))
(define-fun of_base ((r us_rep)) us_rep1 (mk___rep1 (mk___split_fields1 (extract__first (rec__ext__ (us_split_fields1 r))) (rec__stacks__stack_root__content (us_split_fields1 r)) (rec__stacks__stack_root__length (us_split_fields1 r)) (extract__ext__ (rec__ext__ (us_split_fields1 r)))) (attr__tag r)))
(define-fun bool_eq3 ((a us_rep1) (b us_rep1)) Bool (ite (and (and (= (to_rep3 (rec__stacks__buffer__first (us_split_fields3 a))) (to_rep3 (rec__stacks__buffer__first (us_split_fields3 b)))) (= (bool_eq (rec__stacks__stack_root__content1 (us_split_fields3 a)) 1 100 (rec__stacks__stack_root__content1 (us_split_fields3 b)) 1 100) true)) (= (to_rep2 (rec__stacks__stack_root__length1 (us_split_fields3 a))) (to_rep2 (rec__stacks__stack_root__length1 (us_split_fields3 b))))) true false))
(declare-const us_tag2 Int)
(declare-const value__size4 Int)
(declare-fun object__size4 (us_rep1) Int)
(declare-const value__alignment4 Int)
(declare-fun object__alignment4 (us_rep1) Int)
(assert (<= 0 value__size4))
(assert (forall ((a us_rep1)) (<= 0 (object__size4 a))))
(assert (<= 0 value__alignment4))
(assert (forall ((a us_rep1)) (<= 0 (object__alignment4 a))))
(declare-const stacks__buffer__first__first__bit Int)
(declare-const stacks__buffer__first__last__bit Int)
(declare-const stacks__buffer__first__position Int)
(assert (<= 0 stacks__buffer__first__first__bit))
(assert (< stacks__buffer__first__first__bit stacks__buffer__first__last__bit))
(assert (<= 0 stacks__buffer__first__position))
(declare-const stacks__stack_root__content__first__bit2 Int)
(declare-const stacks__stack_root__content__last__bit2 Int)
(declare-const stacks__stack_root__content__position2 Int)
(assert (<= 0 stacks__stack_root__content__first__bit2))
(assert (< stacks__stack_root__content__first__bit2 stacks__stack_root__content__last__bit2))
(assert (<= 0 stacks__stack_root__content__position2))
(declare-const stacks__stack_root__length__first__bit2 Int)
(declare-const stacks__stack_root__length__last__bit2 Int)
(declare-const stacks__stack_root__length__position2 Int)
(assert (<= 0 stacks__stack_root__length__first__bit2))
(assert (< stacks__stack_root__length__first__bit2 stacks__stack_root__length__last__bit2))
(assert (<= 0 stacks__stack_root__length__position2))
(declare-fun user_eq9 (us_rep1 us_rep1) Bool)
(declare-const dummy9 us_rep1)
(declare-datatypes () ((buffer__ref (mk_buffer__ref (buffer__content us_rep1)))))
(define-fun buffer__ref___projection ((a buffer__ref)) us_rep1 (buffer__content a))
(declare-fun get_model__3 (us_rep1) us_t)
(declare-fun get_model__3__function_guard (us_t us_rep1) Bool)
(declare-fun get_model__31 (Int us_rep1) us_t)
(declare-fun get_model__3__function_guard1 (us_t Int us_rep1) Bool)
(declare-fun temp_____aggregate_def_187 (Int) (Array Int element))
(define-fun default_initial_assumption ((temp___expr_185 us_rep) (temp___skip_top_level_186 Bool)) Bool (and (and (= (attr__tag temp___expr_185) us_tag) (and (= (rec__stacks__stack_root__content (us_split_fields1 temp___expr_185)) (temp_____aggregate_def_187 0)) (= (to_rep2 (rec__stacks__stack_root__length (us_split_fields1 temp___expr_185))) 0))) (=> (not (= temp___skip_top_level_186 true)) (= (size temp___expr_185) 0))))
(define-fun dynamic_invariant ((temp___expr_196 us_t) (temp___is_init_192 Bool) (temp___skip_constant_193 Bool) (temp___do_toplevel_194 Bool) (temp___do_typ_inv_195 Bool)) Bool (=> (not (= temp___skip_constant_193 true)) (dynamic_property 1 2147483647 (first1 temp___expr_196) (last1 temp___expr_196))))
(assert (forall ((s us_rep)) (! (let ((result (get_model s))) (and (and (in_range4 (first1 result)) (and (in_range4 (last1 result)) (= (length result) (size s)))) (dynamic_invariant result true false true true))) :pattern ((get_model s)))))
(assert (forall ((attr__tag2 Int)) (forall ((s us_rep)) (! (let ((result (get_model1 attr__tag2 s))) (and (and (in_range4 (first1 result)) (and (in_range4 (last1 result)) (= (length result) (size s)))) (dynamic_invariant result true false true true))) :pattern ((get_model1 attr__tag2 s))))))
(assert (forall ((s us_rep)) (! (= (get_model s) (get_model1 us_tag s)) :pattern ((get_model1 us_tag s)))))
(assert (forall ((s us_rep)) (! (= (get_model__2 s) (get_model1 us_tag1 s)) :pattern ((get_model1 us_tag1 s)))))
(assert (forall ((s us_rep)) (! (= (get_model__3 (of_base s)) (get_model1 us_tag2 s)) :pattern ((get_model1 us_tag2 s)))))
(declare-fun is_empty (us_rep) Bool)
(declare-fun is_empty__function_guard (Bool us_rep) Bool)
(assert true)
(assert (forall ((s us_rep)) (! (= (= (is_empty s) true) (= (size s) 0)) :pattern ((is_empty s)))))
(declare-fun peek (us_rep) Int)
(declare-fun peek__function_guard (Int us_rep) Bool)
(declare-fun peek1 (Int us_rep) Int)
(declare-fun peek__function_guard1 (Int Int us_rep) Bool)
(define-fun dynamic_invariant1 ((temp___expr_166 Int) (temp___is_init_162 Bool) (temp___skip_constant_163 Bool) (temp___do_toplevel_164 Bool) (temp___do_typ_inv_165 Bool)) Bool (=> (or (= temp___is_init_162 true) (<= 0 2147483647)) (in_range3 temp___expr_166)))
(declare-const s__attr__tag Int)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq10 (integer integer) Bool)
(declare-const dummy10 integer)
(declare-datatypes () ((t16s__ref (mk_t16s__ref (t16s__content integer)))))
(define-fun t16s__ref___projection ((a t16s__ref)) integer (t16s__content a))
(declare-sort t1 0)
(declare-fun first2 (t1) integer)
(declare-fun last2 (t1) integer)
(declare-fun mk1 (Int Int) t1)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first2 (mk1 f l))) f) (= (to_rep (last2 (mk1 f l))) l)))) :pattern ((mk1 f l)))))
(define-fun dynamic_property2 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property1 range_first range_last low) (dynamic_property1 range_first range_last high))))))
(declare-datatypes () ((us_t1 (mk___t1 (elts1 (Array Int element)) (rt1 t1)))))
(define-fun to_array1 ((a us_t1)) (Array Int element) (elts1 a))
(define-fun of_array1 ((a (Array Int element)) (f Int) (l Int)) us_t1 (mk___t1 a (mk1 f l)))
(define-fun first3 ((a us_t1)) Int (to_rep (first2 (rt1 a))))
(define-fun last3 ((a us_t1)) Int (to_rep (last2 (rt1 a))))
(define-fun length1 ((a us_t1)) Int (ite (<= (first3 a) (last3 a)) (+ (- (last3 a) (first3 a)) 1) 0))
(declare-const value__size5 Int)
(declare-fun object__size5 ((Array Int element)) Int)
(declare-const value__component__size2 Int)
(declare-fun object__component__size2 ((Array Int element)) Int)
(declare-const value__alignment5 Int)
(declare-fun object__alignment5 ((Array Int element)) Int)
(assert (<= 0 value__size5))
(assert (forall ((a (Array Int element))) (<= 0 (object__size5 a))))
(assert (<= 0 value__component__size2))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size2 a))))
(assert (<= 0 value__alignment5))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment5 a))))
(define-fun bool_eq4 ((x us_t1) (y us_t1)) Bool (bool_eq (elts1 x) (to_rep (first2 (rt1 x))) (to_rep (last2 (rt1 x))) (elts1 y) (to_rep (first2 (rt1 y))) (to_rep (last2 (rt1 y)))))
(declare-fun user_eq11 (us_t1 us_t1) Bool)
(declare-const dummy11 us_t1)
(declare-datatypes () ((t17s__ref (mk_t17s__ref (t17s__content us_t1)))))
(define-fun t17s__ref___projection ((a t17s__ref)) us_t1 (t17s__content a))
(define-fun dynamic_invariant2 ((temp___expr_46 Int) (temp___is_init_42 Bool) (temp___skip_constant_43 Bool) (temp___do_toplevel_44 Bool) (temp___do_typ_inv_45 Bool)) Bool (=> (or (= temp___is_init_42 true) (<= 1 2147483647)) (in_range2 temp___expr_46)))
(define-fun dynamic_invariant3 ((temp___expr_18 Int) (temp___is_init_14 Bool) (temp___skip_constant_15 Bool) (temp___do_toplevel_16 Bool) (temp___do_typ_inv_17 Bool)) Bool (=> (or (= temp___is_init_14 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_18)))
(define-fun dynamic_invariant4 ((temp___expr_159 Int) (temp___is_init_155 Bool) (temp___skip_constant_156 Bool) (temp___do_toplevel_157 Bool) (temp___do_typ_inv_158 Bool)) Bool (=> (or (= temp___is_init_155 true) (<= 0 100)) (in_range4 temp___expr_159)))
(assert (forall ((s us_rep)) (! (dynamic_invariant4 (size s) true false true true) :pattern ((size s)))))
(assert (forall ((s us_rep)) (! (= (size s) (to_rep2 (rec__stacks__stack_root__length (us_split_fields1 s)))) :pattern ((size s)))))
(declare-fun peek__2 (us_rep) Int)
(declare-fun peek__2__function_guard (Int us_rep) Bool)
(declare-fun peek__21 (Int us_rep) Int)
(declare-fun peek__2__function_guard1 (Int Int us_rep) Bool)
(declare-fun peek__3 (us_rep1) Int)
(declare-fun peek__3__function_guard (Int us_rep1) Bool)
(declare-fun peek__31 (Int us_rep1) Int)
(declare-fun peek__3__function_guard1 (Int Int us_rep1) Bool)
(assert (forall ((s us_rep)) (! (=> (not (= (is_empty s) true)) (let ((result (peek s))) (and (and (not (= (is_empty s) true)) (= result (to_rep1 (let ((temp___223 (get_model s))) (select (to_array temp___223) (last1 (get_model s))))))) (dynamic_invariant1 result true false true true)))) :pattern ((peek s)))))
(assert (forall ((attr__tag2 Int)) (forall ((s us_rep)) (! (=> (not (= (is_empty s) true)) (let ((result (peek1 attr__tag2 s))) (and (and (not (= (is_empty s) true)) (= result (to_rep1 (let ((temp___222 (get_model1 (attr__tag s) s))) (select (to_array temp___222) (last1 (get_model1 (attr__tag s) s))))))) (dynamic_invariant1 result true false true true)))) :pattern ((peek1 attr__tag2 s))))))
(assert (forall ((s us_rep)) (! (= (peek s) (peek1 us_tag s)) :pattern ((peek1 us_tag s)))))
(assert (forall ((s us_rep)) (! (= (peek__2 s) (peek1 us_tag1 s)) :pattern ((peek1 us_tag1 s)))))
(assert (forall ((s us_rep)) (! (= (peek__3 (of_base s)) (peek1 us_tag2 s)) :pattern ((peek1 us_tag2 s)))))
(define-fun default_initial_assumption1 ((temp___expr_290 us_rep) (temp___skip_top_level_291 Bool)) Bool (and (and (= (attr__tag temp___expr_290) us_tag1) (and (= (rec__stacks__stack_root__content (us_split_fields1 temp___expr_290)) (temp_____aggregate_def_187 0)) (= (to_rep2 (rec__stacks__stack_root__length (us_split_fields1 temp___expr_290))) 0))) (=> (not (= temp___skip_top_level_291 true)) (= (size temp___expr_290) 0))))
(define-fun dynamic_property3 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq12 (integer integer) Bool)
(declare-const dummy12 integer)
(declare-datatypes () ((t50s__ref (mk_t50s__ref (t50s__content integer)))))
(define-fun t50s__ref___projection ((a t50s__ref)) integer (t50s__content a))
(declare-sort t2 0)
(declare-fun first4 (t2) integer)
(declare-fun last4 (t2) integer)
(declare-fun mk2 (Int Int) t2)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first4 (mk2 f l))) f) (= (to_rep (last4 (mk2 f l))) l)))) :pattern ((mk2 f l)))))
(define-fun dynamic_property4 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property3 range_first range_last low) (dynamic_property3 range_first range_last high))))))
(declare-datatypes () ((us_t2 (mk___t2 (elts2 (Array Int element)) (rt2 t2)))))
(define-fun to_array2 ((a us_t2)) (Array Int element) (elts2 a))
(define-fun of_array2 ((a (Array Int element)) (f Int) (l Int)) us_t2 (mk___t2 a (mk2 f l)))
(define-fun first5 ((a us_t2)) Int (to_rep (first4 (rt2 a))))
(define-fun last5 ((a us_t2)) Int (to_rep (last4 (rt2 a))))
(define-fun length2 ((a us_t2)) Int (ite (<= (first5 a) (last5 a)) (+ (- (last5 a) (first5 a)) 1) 0))
(declare-const value__size6 Int)
(declare-fun object__size6 ((Array Int element)) Int)
(declare-const value__component__size3 Int)
(declare-fun object__component__size3 ((Array Int element)) Int)
(declare-const value__alignment6 Int)
(declare-fun object__alignment6 ((Array Int element)) Int)
(assert (<= 0 value__size6))
(assert (forall ((a (Array Int element))) (<= 0 (object__size6 a))))
(assert (<= 0 value__component__size3))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size3 a))))
(assert (<= 0 value__alignment6))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment6 a))))
(define-fun bool_eq5 ((x us_t2) (y us_t2)) Bool (bool_eq (elts2 x) (to_rep (first4 (rt2 x))) (to_rep (last4 (rt2 x))) (elts2 y) (to_rep (first4 (rt2 y))) (to_rep (last4 (rt2 y)))))
(declare-fun user_eq13 (us_t2 us_t2) Bool)
(declare-const dummy13 us_t2)
(declare-datatypes () ((t51s__ref (mk_t51s__ref (t51s__content us_t2)))))
(define-fun t51s__ref___projection ((a t51s__ref)) us_t2 (t51s__content a))
(assert (forall ((s us_rep)) (! (let ((result (get_model__2 s))) (and (and (= (length result) (size s)) (and (in_range4 (last1 result)) (in_range4 (first1 result)))) (dynamic_invariant result true false true true))) :pattern ((get_model__2 s)))))
(assert (forall ((attr__tag2 Int)) (forall ((s us_rep)) (! (let ((result (get_model__21 attr__tag2 s))) (and (and (= (length result) (size s)) (and (in_range4 (last1 result)) (in_range4 (first1 result)))) (dynamic_invariant result true false true true))) :pattern ((get_model__21 attr__tag2 s))))))
(assert (forall ((s us_rep)) (! (= (get_model__2 s) (get_model__21 us_tag1 s)) :pattern ((get_model__21 us_tag1 s)))))
(assert (forall ((s us_rep)) (! (= (get_model__3 (of_base s)) (get_model__21 us_tag2 s)) :pattern ((get_model__21 us_tag2 s)))))
(assert (forall ((s us_rep)) (! (= (get_model__2 s) (let ((temp___310 (let ((temp___308 (to_rep2 (rec__stacks__stack_root__length (us_split_fields1 s))))) (let ((temp___307 1)) (let ((temp___309 (rec__stacks__stack_root__content (us_split_fields1 s)))) (of_array2 temp___309 temp___307 temp___308)))))) (of_array (to_array2 temp___310) (first5 temp___310) (last5 temp___310)))) :pattern ((get_model__2 s)))))
(assert (forall ((s us_rep)) (! (=> (not (= (is_empty s) true)) (let ((result (peek__2 s))) (and (and (= result (to_rep1 (let ((temp___320 (get_model__2 s))) (select (to_array temp___320) (last1 (get_model__2 s)))))) (not (= (is_empty s) true))) (dynamic_invariant1 result true false true true)))) :pattern ((peek__2 s)))))
(assert (forall ((attr__tag2 Int)) (forall ((s us_rep)) (! (=> (not (= (is_empty s) true)) (let ((result (peek__21 attr__tag2 s))) (and (and (= result (to_rep1 (let ((temp___319 (get_model__21 (attr__tag s) s))) (select (to_array temp___319) (last1 (get_model__21 (attr__tag s) s)))))) (not (= (is_empty s) true))) (dynamic_invariant1 result true false true true)))) :pattern ((peek__21 attr__tag2 s))))))
(assert (forall ((s us_rep)) (! (= (peek__2 s) (peek__21 us_tag1 s)) :pattern ((peek__21 us_tag1 s)))))
(assert (forall ((s us_rep)) (! (= (peek__3 (of_base s)) (peek__21 us_tag2 s)) :pattern ((peek__21 us_tag2 s)))))
(assert (forall ((s us_rep)) (! (= (peek__2 s) (to_rep1 (let ((temp___322 (rec__stacks__stack_root__content (us_split_fields1 s)))) (select temp___322 (to_rep2 (rec__stacks__stack_root__length (us_split_fields1 s))))))) :pattern ((peek__2 s)))))
(declare-fun wraps_around (us_rep1) Bool)
(declare-fun wraps_around__function_guard (Bool us_rep1) Bool)
(declare-fun wraps_around1 (Int us_rep1) Bool)
(declare-fun wraps_around__function_guard1 (Bool Int us_rep1) Bool)
(declare-fun last6 (us_rep1) Int)
(declare-fun last__function_guard (Int us_rep1) Bool)
(declare-fun last7 (Int us_rep1) Int)
(declare-fun last__function_guard1 (Int Int us_rep1) Bool)
(declare-sort telement_arrayD1 0)
(declare-fun telement_arrayD1qtint (telement_arrayD1) Int)
(assert (forall ((i telement_arrayD1)) (and (<= 1 (telement_arrayD1qtint i)) (<= (telement_arrayD1qtint i) 100))))
(define-fun in_range6 ((x Int)) Bool (and (<= 1 x) (<= x 100)))
(declare-fun attr__ATTRIBUTE_IMAGE8 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check8 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE8 (us_image) Int)
(declare-fun user_eq14 (telement_arrayD1 telement_arrayD1) Bool)
(declare-const dummy14 telement_arrayD1)
(declare-datatypes () ((telement_arrayD1__ref (mk_telement_arrayD1__ref (telement_arrayD1__content telement_arrayD1)))))
(define-fun telement_arrayD1__ref___projection ((a telement_arrayD1__ref)) telement_arrayD1 (telement_arrayD1__content a))
(declare-fun concat1 ((Array Int element) Int Int (Array Int element) Int Int) (Array Int element))
(assert (forall ((a (Array Int element)) (b (Array Int element))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun concat_singleton_left (element Int (Array Int element) Int Int) (Array Int element))
(assert (forall ((a element)) (forall ((b (Array Int element))) (forall ((a_first Int) (b_first Int) (b_last Int)) (! (and (= (select (concat_singleton_left a a_first b b_first b_last) a_first) a) (forall ((i Int)) (! (=> (< a_first i) (= (select (concat_singleton_left a a_first b b_first b_last) i) (select b (+ (- i a_first) (- b_first 1))))) :pattern ((select (concat_singleton_left a a_first b b_first b_last) i))))) :pattern ((concat_singleton_left a a_first b b_first b_last)))))))
(declare-fun concat_singleton_right ((Array Int element) Int Int element) (Array Int element))
(assert (forall ((a (Array Int element))) (forall ((b element)) (forall ((a_first Int) (a_last Int)) (! (and (= (select (concat_singleton_right a a_first a_last b) (+ a_last 1)) b) (forall ((i Int)) (! (=> (and (<= a_first i) (<= i a_last)) (= (select (concat_singleton_right a a_first a_last b) i) (select a i))) :pattern ((select (concat_singleton_right a a_first a_last b) i)) :pattern ((select a i))))) :pattern ((concat_singleton_right a a_first a_last b)))))))
(declare-fun concat_singletons (element Int element) (Array Int element))
(assert (forall ((a element) (b element)) (forall ((a_first Int)) (! (and (= (select (concat_singletons a a_first b) a_first) a) (= (select (concat_singletons a a_first b) (+ a_first 1)) b)) :pattern ((concat_singletons a a_first b))))))
(declare-fun singleton1 (element Int) (Array Int element))
(assert (forall ((v element)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(declare-sort t3 0)
(declare-fun first6 (t3) integer)
(declare-fun last8 (t3) integer)
(declare-fun mk3 (Int Int) t3)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first6 (mk3 f l))) f) (= (to_rep (last8 (mk3 f l))) l)))) :pattern ((mk3 f l)))))
(define-fun dynamic_property5 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range6 low) (in_range6 high))))))
(declare-datatypes () ((us_t3 (mk___t3 (elts3 (Array Int element)) (rt3 t3)))))
(define-fun to_array3 ((a us_t3)) (Array Int element) (elts3 a))
(define-fun of_array3 ((a (Array Int element)) (f Int) (l Int)) us_t3 (mk___t3 a (mk3 f l)))
(define-fun first7 ((a us_t3)) Int (to_rep (first6 (rt3 a))))
(define-fun last9 ((a us_t3)) Int (to_rep (last8 (rt3 a))))
(define-fun length3 ((a us_t3)) Int (ite (<= (first7 a) (last9 a)) (+ (- (last9 a) (first7 a)) 1) 0))
(declare-const value__size7 Int)
(declare-fun object__size7 ((Array Int element)) Int)
(declare-const value__component__size4 Int)
(declare-fun object__component__size4 ((Array Int element)) Int)
(declare-const value__alignment7 Int)
(declare-fun object__alignment7 ((Array Int element)) Int)
(assert (<= 0 value__size7))
(assert (forall ((a (Array Int element))) (<= 0 (object__size7 a))))
(assert (<= 0 value__component__size4))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size4 a))))
(assert (<= 0 value__alignment7))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment7 a))))
(define-fun bool_eq6 ((x us_t3) (y us_t3)) Bool (bool_eq (elts3 x) (to_rep (first6 (rt3 x))) (to_rep (last8 (rt3 x))) (elts3 y) (to_rep (first6 (rt3 y))) (to_rep (last8 (rt3 y)))))
(declare-fun user_eq15 (us_t3 us_t3) Bool)
(declare-const dummy15 us_t3)
(declare-datatypes () ((telement_arrayB__ref (mk_telement_arrayB__ref (telement_arrayB__content us_t3)))))
(define-fun telement_arrayB__ref___projection ((a telement_arrayB__ref)) us_t3 (telement_arrayB__content a))
(define-fun default_initial_assumption2 ((temp___expr_382 us_rep1) (temp___skip_top_level_383 Bool)) Bool (and (and (= (attr__tag1 temp___expr_382) us_tag2) (and (and (= (to_rep3 (rec__stacks__buffer__first (us_split_fields3 temp___expr_382))) 1) (= (rec__stacks__stack_root__content1 (us_split_fields3 temp___expr_382)) (temp_____aggregate_def_187 0))) (= (to_rep2 (rec__stacks__stack_root__length1 (us_split_fields3 temp___expr_382))) 0))) (=> (not (= temp___skip_top_level_383 true)) (= (size (to_base temp___expr_382)) 0))))
(define-fun dynamic_property6 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE9 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check9 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE9 (us_image) Int)
(declare-fun user_eq16 (integer integer) Bool)
(declare-const dummy16 integer)
(declare-datatypes () ((t84s__ref (mk_t84s__ref (t84s__content integer)))))
(define-fun t84s__ref___projection ((a t84s__ref)) integer (t84s__content a))
(declare-sort t4 0)
(declare-fun first8 (t4) integer)
(declare-fun last10 (t4) integer)
(declare-fun mk4 (Int Int) t4)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first8 (mk4 f l))) f) (= (to_rep (last10 (mk4 f l))) l)))) :pattern ((mk4 f l)))))
(define-fun dynamic_property7 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property6 range_first range_last low) (dynamic_property6 range_first range_last high))))))
(declare-datatypes () ((us_t4 (mk___t4 (elts4 (Array Int element)) (rt4 t4)))))
(define-fun to_array4 ((a us_t4)) (Array Int element) (elts4 a))
(define-fun of_array4 ((a (Array Int element)) (f Int) (l Int)) us_t4 (mk___t4 a (mk4 f l)))
(define-fun first9 ((a us_t4)) Int (to_rep (first8 (rt4 a))))
(define-fun last11 ((a us_t4)) Int (to_rep (last10 (rt4 a))))
(define-fun length4 ((a us_t4)) Int (ite (<= (first9 a) (last11 a)) (+ (- (last11 a) (first9 a)) 1) 0))
(declare-const value__size8 Int)
(declare-fun object__size8 ((Array Int element)) Int)
(declare-const value__component__size5 Int)
(declare-fun object__component__size5 ((Array Int element)) Int)
(declare-const value__alignment8 Int)
(declare-fun object__alignment8 ((Array Int element)) Int)
(assert (<= 0 value__size8))
(assert (forall ((a (Array Int element))) (<= 0 (object__size8 a))))
(assert (<= 0 value__component__size5))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size5 a))))
(assert (<= 0 value__alignment8))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment8 a))))
(define-fun bool_eq7 ((x us_t4) (y us_t4)) Bool (bool_eq (elts4 x) (to_rep (first8 (rt4 x))) (to_rep (last10 (rt4 x))) (elts4 y) (to_rep (first8 (rt4 y))) (to_rep (last10 (rt4 y)))))
(declare-fun user_eq17 (us_t4 us_t4) Bool)
(declare-const dummy17 us_t4)
(declare-datatypes () ((t85s__ref (mk_t85s__ref (t85s__content us_t4)))))
(define-fun t85s__ref___projection ((a t85s__ref)) us_t4 (t85s__content a))
(define-fun dynamic_property8 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE10 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check10 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE10 (us_image) Int)
(declare-fun user_eq18 (integer integer) Bool)
(declare-const dummy18 integer)
(declare-datatypes () ((t87s__ref (mk_t87s__ref (t87s__content integer)))))
(define-fun t87s__ref___projection ((a t87s__ref)) integer (t87s__content a))
(declare-sort t5 0)
(declare-fun first10 (t5) integer)
(declare-fun last12 (t5) integer)
(declare-fun mk5 (Int Int) t5)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first10 (mk5 f l))) f) (= (to_rep (last12 (mk5 f l))) l)))) :pattern ((mk5 f l)))))
(define-fun dynamic_property9 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property8 range_first range_last low) (dynamic_property8 range_first range_last high))))))
(declare-datatypes () ((us_t5 (mk___t5 (elts5 (Array Int element)) (rt5 t5)))))
(define-fun to_array5 ((a us_t5)) (Array Int element) (elts5 a))
(define-fun of_array5 ((a (Array Int element)) (f Int) (l Int)) us_t5 (mk___t5 a (mk5 f l)))
(define-fun first11 ((a us_t5)) Int (to_rep (first10 (rt5 a))))
(define-fun last13 ((a us_t5)) Int (to_rep (last12 (rt5 a))))
(define-fun length5 ((a us_t5)) Int (ite (<= (first11 a) (last13 a)) (+ (- (last13 a) (first11 a)) 1) 0))
(declare-const value__size9 Int)
(declare-fun object__size9 ((Array Int element)) Int)
(declare-const value__component__size6 Int)
(declare-fun object__component__size6 ((Array Int element)) Int)
(declare-const value__alignment9 Int)
(declare-fun object__alignment9 ((Array Int element)) Int)
(assert (<= 0 value__size9))
(assert (forall ((a (Array Int element))) (<= 0 (object__size9 a))))
(assert (<= 0 value__component__size6))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size6 a))))
(assert (<= 0 value__alignment9))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment9 a))))
(define-fun bool_eq8 ((x us_t5) (y us_t5)) Bool (bool_eq (elts5 x) (to_rep (first10 (rt5 x))) (to_rep (last12 (rt5 x))) (elts5 y) (to_rep (first10 (rt5 y))) (to_rep (last12 (rt5 y)))))
(declare-fun user_eq19 (us_t5 us_t5) Bool)
(declare-const dummy19 us_t5)
(declare-datatypes () ((t88s__ref (mk_t88s__ref (t88s__content us_t5)))))
(define-fun t88s__ref___projection ((a t88s__ref)) us_t5 (t88s__content a))
(define-fun dynamic_property10 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE11 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check11 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE11 (us_image) Int)
(declare-fun user_eq20 (integer integer) Bool)
(declare-const dummy20 integer)
(declare-datatypes () ((t90s__ref (mk_t90s__ref (t90s__content integer)))))
(define-fun t90s__ref___projection ((a t90s__ref)) integer (t90s__content a))
(declare-sort t6 0)
(declare-fun first12 (t6) integer)
(declare-fun last14 (t6) integer)
(declare-fun mk6 (Int Int) t6)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep (first12 (mk6 f l))) f) (= (to_rep (last14 (mk6 f l))) l)))) :pattern ((mk6 f l)))))
(define-fun dynamic_property11 ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (dynamic_property10 range_first range_last low) (dynamic_property10 range_first range_last high))))))
(declare-datatypes () ((us_t6 (mk___t6 (elts6 (Array Int element)) (rt6 t6)))))
(define-fun to_array6 ((a us_t6)) (Array Int element) (elts6 a))
(define-fun of_array6 ((a (Array Int element)) (f Int) (l Int)) us_t6 (mk___t6 a (mk6 f l)))
(define-fun first13 ((a us_t6)) Int (to_rep (first12 (rt6 a))))
(define-fun last15 ((a us_t6)) Int (to_rep (last14 (rt6 a))))
(define-fun length6 ((a us_t6)) Int (ite (<= (first13 a) (last15 a)) (+ (- (last15 a) (first13 a)) 1) 0))
(declare-const value__size10 Int)
(declare-fun object__size10 ((Array Int element)) Int)
(declare-const value__component__size7 Int)
(declare-fun object__component__size7 ((Array Int element)) Int)
(declare-const value__alignment10 Int)
(declare-fun object__alignment10 ((Array Int element)) Int)
(assert (<= 0 value__size10))
(assert (forall ((a (Array Int element))) (<= 0 (object__size10 a))))
(assert (<= 0 value__component__size7))
(assert (forall ((a (Array Int element))) (<= 0 (object__component__size7 a))))
(assert (<= 0 value__alignment10))
(assert (forall ((a (Array Int element))) (<= 0 (object__alignment10 a))))
(define-fun bool_eq9 ((x us_t6) (y us_t6)) Bool (bool_eq (elts6 x) (to_rep (first12 (rt6 x))) (to_rep (last14 (rt6 x))) (elts6 y) (to_rep (first12 (rt6 y))) (to_rep (last14 (rt6 y)))))
(declare-fun user_eq21 (us_t6 us_t6) Bool)
(declare-const dummy21 us_t6)
(declare-datatypes () ((t91s__ref (mk_t91s__ref (t91s__content us_t6)))))
(define-fun t91s__ref___projection ((a t91s__ref)) us_t6 (t91s__content a))
(assert (forall ((s us_rep1)) (! (let ((result (get_model__3 s))) (and (and (in_range4 (first1 result)) (and (in_range4 (last1 result)) (= (length result) (size (to_base s))))) (dynamic_invariant result true false true true))) :pattern ((get_model__3 s)))))
(assert (forall ((attr__tag2 Int)) (forall ((s us_rep1)) (! (let ((result (get_model__31 attr__tag2 s))) (and (and (in_range4 (first1 result)) (and (in_range4 (last1 result)) (= (length result) (size (to_base s))))) (dynamic_invariant result true false true true))) :pattern ((get_model__31 attr__tag2 s))))))
(assert (forall ((s us_rep1)) (! (= (get_model__3 s) (get_model__31 us_tag2 s)) :pattern ((get_model__31 us_tag2 s)))))
(assert (forall ((s us_rep1)) (! (= (get_model__3 s) (ite (= (wraps_around s) true) (let ((stacks__get_model__3__R86s (last6 s))) (let ((temp___413 (let ((temp___412 (let ((temp___409 1)) (let ((temp___410 (rec__stacks__stack_root__content1 (us_split_fields3 s)))) (of_array5 temp___410 temp___409 stacks__get_model__3__R86s))))) (let ((temp___411 (let ((temp___407 100)) (let ((temp___406 (to_rep3 (rec__stacks__buffer__first (us_split_fields3 s))))) (let ((temp___408 (rec__stacks__stack_root__content1 (us_split_fields3 s)))) (of_array4 temp___408 temp___406 temp___407)))))) (ite (= (length4 temp___411) 0) (of_array3 (to_array5 temp___412) (first11 temp___412) (last13 temp___412)) (of_array3 (slide (concat1 (to_array4 temp___411) (first9 temp___411) (last11 temp___411) (to_array5 temp___412) (first11 temp___412) (last13 temp___412)) (first9 temp___411) 1) 1 (- (+ 1 (+ (ite (<= (first9 temp___411) (last11 temp___411)) (+ (- (last11 temp___411) (first9 temp___411)) 1) 0) (ite (<= (first11 temp___412) (last13 temp___412)) (+ (- (last13 temp___412) (first11 temp___412)) 1) 0))) 1))))))) (of_array (to_array3 temp___413) (first7 temp___413) (last9 temp___413)))) (let ((stacks__get_model__3__R89s (last6 s))) (let ((temp___416 (let ((temp___414 (to_rep3 (rec__stacks__buffer__first (us_split_fields3 s))))) (let ((temp___415 (rec__stacks__stack_root__content1 (us_split_fields3 s)))) (of_array6 temp___415 temp___414 stacks__get_model__3__R89s))))) (of_array (to_array6 temp___416) (first13 temp___416) (last15 temp___416)))))) :pattern ((get_model__3 s)))))
(assert (forall ((s us_rep1)) (! (=> (not (= (is_empty (to_base s)) true)) (let ((result (peek__3 s))) (and (and (not (= (is_empty (to_base s)) true)) (= result (to_rep1 (let ((temp___437 (get_model__3 s))) (select (to_array temp___437) (last1 (get_model__3 s))))))) (dynamic_invariant1 result true false true true)))) :pattern ((peek__3 s)))))
(assert (forall ((attr__tag2 Int)) (forall ((s us_rep1)) (! (=> (not (= (is_empty (to_base s)) true)) (let ((result (peek__31 attr__tag2 s))) (and (and (not (= (is_empty (to_base s)) true)) (= result (to_rep1 (let ((temp___436 (get_model__31 (attr__tag1 s) s))) (select (to_array temp___436) (last1 (get_model__31 (attr__tag1 s) s))))))) (dynamic_invariant1 result true false true true)))) :pattern ((peek__31 attr__tag2 s))))))
(assert (forall ((s us_rep1)) (! (= (peek__3 s) (peek__31 us_tag2 s)) :pattern ((peek__31 us_tag2 s)))))
(assert (forall ((s us_rep1)) (! (= (peek__3 s) (to_rep1 (let ((temp___439 (rec__stacks__stack_root__content1 (us_split_fields3 s)))) (select temp___439 (last6 s))))) :pattern ((peek__3 s)))))
(declare-const rliteral element)
(assert (= (elementqtint rliteral) 0))
(assert (forall ((temp___189 Int)) (=> (dynamic_invariant1 temp___189 true true true true) (forall ((temp___190 Int)) (= (select (temp_____aggregate_def_187 temp___189) temp___190) rliteral)))))
(define-fun dynamic_invariant5 ((temp___expr_373 Int) (temp___is_init_369 Bool) (temp___skip_constant_370 Bool) (temp___do_toplevel_371 Bool) (temp___do_typ_inv_372 Bool)) Bool (=> (or (= temp___is_init_369 true) (<= 1 100)) (in_range5 temp___expr_373)))
(assert true)
(assert true)
(assert (forall ((s us_rep1)) (! (= (ite (wraps_around s) 1 0) (ite (wraps_around1 us_tag2 s) 1 0)) :pattern ((wraps_around1 us_tag2 s)))))
(assert (forall ((s us_rep1)) (! (= (= (wraps_around s) true) (< 100 (- (+ (to_rep3 (rec__stacks__buffer__first (us_split_fields3 s))) (to_rep2 (rec__stacks__stack_root__length1 (us_split_fields3 s)))) 1))) :pattern ((wraps_around s)))))
(assert (forall ((s us_rep1)) (! (dynamic_invariant4 (last6 s) true false true true) :pattern ((last6 s)))))
(assert (forall ((attr__tag2 Int)) (forall ((s us_rep1)) (! (dynamic_invariant4 (last7 attr__tag2 s) true false true true) :pattern ((last7 attr__tag2 s))))))
(assert (forall ((s us_rep1)) (! (= (last6 s) (last7 us_tag2 s)) :pattern ((last7 us_tag2 s)))))
(assert (forall ((s us_rep1)) (! (= (last6 s) (ite (not (= (wraps_around s) true)) (- (+ (to_rep3 (rec__stacks__buffer__first (us_split_fields3 s))) (to_rep2 (rec__stacks__stack_root__length1 (us_split_fields3 s)))) 1) (- (- (+ (to_rep3 (rec__stacks__buffer__first (us_split_fields3 s))) (to_rep2 (rec__stacks__stack_root__length1 (us_split_fields3 s)))) 1) 100))) :pattern ((last6 s)))))
(declare-const s__split_fields (Array Int element))
(declare-const s__split_fields1 less_than_max)
(declare-const s__split_fields2 us_private)
(declare-const e Int)
(declare-const temp___495 Int)
(declare-const e1 Int)
(assert (=> (<= 0 2147483647) (in_range3 e)))
(assert (in_range3 e1))
(assert (and (= temp___495 (- (to_rep (last (rt (get_model (mk___rep (mk___split_fields s__split_fields s__split_fields1 s__split_fields2) s__attr__tag))))) 1)) (in_range1 (- (to_rep (last (rt (get_model (mk___rep (mk___split_fields s__split_fields s__split_fields1 s__split_fields2) s__attr__tag))))) 1))))
(assert (<= (to_rep (first (rt (get_model (mk___rep (mk___split_fields s__split_fields s__split_fields1 s__split_fields2) s__attr__tag))))) temp___495))
(assert (not (<= (to_rep (first (rt (get_model (mk___rep (mk___split_fields s__split_fields s__split_fields1 s__split_fields2) s__attr__tag))))) (to_rep (last (rt (get_model (mk___rep (mk___split_fields s__split_fields s__split_fields1 s__split_fields2) s__attr__tag))))))))
(check-sat)
(exit)
