(set-info :smt-lib-version 2.5)
(set-info :license |https://www.gnu.org/licenses/gpl-3.0.html|)
(set-logic AUFDTLIRA)
(set-info :source |Benchmarks generated by Florian Schanda from the public SPARK 2014 testsuite and post-processed with a script to set more precise logics.|)
(set-info :category industrial)
(set-info :status unknown)

(declare-datatypes () ((tuple0 (Tuple0))))
(declare-sort us_private 0)
(declare-fun private__bool_eq (us_private us_private) Bool)
(declare-const us_null_ext__ us_private)
(declare-sort us_type_of_heap 0)
(declare-datatypes () ((us_type_of_heap__ref (mk___type_of_heap__ref (us_type_of_heap__content us_type_of_heap)))))
(declare-sort us_image 0)
(declare-datatypes () ((int__ref (mk_int__ref (int__content Int)))))
(declare-datatypes () ((bool__ref (mk_bool__ref (bool__content Bool)))))
(declare-datatypes () ((real__ref (mk_real__ref (real__content Real)))))
(declare-datatypes () ((us_private__ref (mk___private__ref (us_private__content us_private)))))
(define-fun int__ref___projection ((a int__ref)) Int (int__content a))
(define-fun bool__ref___projection ((a bool__ref)) Bool (bool__content a))
(define-fun real__ref___projection ((a real__ref)) Real (real__content a))
(define-fun us_private__ref___projection ((a us_private__ref)) us_private (us_private__content a))
(define-fun to_int1 ((b Bool)) Int (ite (= b true) 1 0))
(define-fun of_int ((i Int)) Bool (ite (= i 0) false true))
(define-fun in_range ((x Int)) Bool (or (= x 0) (= x 1)))
(declare-fun attr__ATTRIBUTE_IMAGE (Bool) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE (us_image) Bool)
(declare-sort integer 0)
(define-fun in_range1 ((x Int)) Bool (and (<= (- 2147483648) x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE1 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check1 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE1 (us_image) Int)
(declare-fun user_eq (integer integer) Bool)
(declare-const dummy integer)
(declare-datatypes () ((integer__ref (mk_integer__ref (integer__content integer)))))
(define-fun integer__ref___projection ((a integer__ref)) integer (integer__content a))
(declare-sort positive 0)
(define-fun in_range2 ((x Int)) Bool (and (<= 1 x) (<= x 2147483647)))
(declare-fun attr__ATTRIBUTE_IMAGE2 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check2 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE2 (us_image) Int)
(declare-fun user_eq1 (positive positive) Bool)
(declare-const dummy1 positive)
(declare-datatypes () ((positive__ref (mk_positive__ref (positive__content positive)))))
(define-fun positive__ref___projection ((a positive__ref)) positive (positive__content a))
(declare-sort character 0)
(define-fun in_range3 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE3 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check3 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE3 (us_image) Int)
(declare-fun user_eq2 (character character) Bool)
(declare-const dummy2 character)
(declare-datatypes () ((character__ref (mk_character__ref (character__content character)))))
(define-fun character__ref___projection ((a character__ref)) character (character__content a))
(declare-fun to_rep (character) Int)
(declare-fun of_rep (Int) character)
(assert (forall ((x character)) (! (= (of_rep (to_rep x)) x) :pattern ((to_rep x)))))
(assert (forall ((x character)) (! (in_range3 (to_rep x)) :pattern ((to_rep x)))))
(assert (forall ((x Int)) (! (=> (in_range3 x) (= (to_rep (of_rep x)) x)) :pattern ((to_rep (of_rep x))))))
(declare-datatypes () ((map__ref (mk_map__ref (map__content (Array Int character))))))
(declare-fun slide ((Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character))) (forall ((first Int)) (! (= (slide a first first) a) :pattern ((slide a first first))))))
(assert (forall ((a (Array Int character))) (forall ((old_first Int)) (forall ((new_first Int)) (forall ((i Int)) (! (= (select (slide a old_first new_first) i) (select a (- i (- new_first old_first)))) :pattern ((select (slide a old_first new_first) i))))))))
(declare-fun concat1 ((Array Int character) Int Int (Array Int character) Int Int) (Array Int character))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (forall ((i Int)) (! (and (=> (and (<= a_first i) (<= i a_last)) (= (select (concat1 a a_first a_last b b_first b_last) i) (select a i))) (=> (< a_last i) (= (select (concat1 a a_first a_last b b_first b_last) i) (select b (+ (- i a_last) (- b_first 1)))))) :pattern ((select (concat1 a a_first a_last b b_first b_last) i)))))))
(declare-fun singleton1 (character Int) (Array Int character))
(assert (forall ((v character)) (forall ((i Int)) (! (= (select (singleton1 v i) i) v) :pattern ((select (singleton1 v i) i))))))
(define-fun bool_eq ((a (Array Int character)) (a__first Int) (a__last Int) (b (Array Int character)) (b__first Int) (b__last Int)) Bool (ite (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78))))))) true false))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a__first Int) (a__last Int) (b__first Int) (b__last Int)) (=> (= (bool_eq b b__first b__last a a__first a__last) true) (and (ite (<= a__first a__last) (and (<= b__first b__last) (= (- a__last a__first) (- b__last b__first))) (< b__last b__first)) (forall ((temp___idx_78 Int)) (=> (and (<= a__first temp___idx_78) (<= temp___idx_78 a__last)) (= (to_rep (select a temp___idx_78)) (to_rep (select b (+ (- b__first a__first) temp___idx_78)))))))))))
(declare-fun compare ((Array Int character) Int Int (Array Int character) Int Int) Int)
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (= (compare a a_first a_last b b_first b_last) 0) (= (bool_eq a a_first a_last b b_first b_last) true)) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< (compare a a_first a_last b b_first b_last) 0) (exists ((i Int) (j Int)) (and (<= i a_last) (and (< j b_last) (and (= (bool_eq a a_first i b b_first j) true) (or (= i a_last) (and (< i a_last) (< (to_rep (select a (+ i 1))) (to_rep (select b (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(assert (forall ((a (Array Int character)) (b (Array Int character))) (forall ((a_first Int) (a_last Int) (b_first Int) (b_last Int)) (! (= (< 0 (compare a a_first a_last b b_first b_last)) (exists ((i Int) (j Int)) (and (<= i b_last) (and (< j a_last) (and (= (bool_eq a a_first j b b_first i) true) (or (= i b_last) (and (< i b_last) (< (to_rep (select b (+ i 1))) (to_rep (select a (+ j 1))))))))))) :pattern ((compare a a_first a_last b b_first b_last))))))
(declare-fun to_rep1 (integer) Int)
(declare-fun of_rep1 (Int) integer)
(assert (forall ((x integer)) (! (= (of_rep1 (to_rep1 x)) x) :pattern ((to_rep1 x)))))
(assert (forall ((x integer)) (! (in_range1 (to_rep1 x)) :pattern ((to_rep1 x)))))
(assert (forall ((x Int)) (! (=> (in_range1 x) (= (to_rep1 (of_rep1 x)) x)) :pattern ((to_rep1 (of_rep1 x))))))
(declare-sort t 0)
(declare-fun first (t) integer)
(declare-fun last (t) integer)
(declare-fun mk (Int Int) t)
(assert (forall ((f Int) (l Int)) (! (=> (in_range1 f) (=> (in_range1 l) (and (= (to_rep1 (first (mk f l))) f) (= (to_rep1 (last (mk f l))) l)))) :pattern ((mk f l)))))
(define-fun dynamic_property ((range_first Int) (range_last Int) (low Int) (high Int)) Bool (and (in_range1 low) (and (in_range1 high) (=> (<= low high) (and (in_range2 low) (in_range2 high))))))
(declare-datatypes () ((us_t (mk___t (elts (Array Int character)) (rt t)))))
(define-fun to_array ((a us_t)) (Array Int character) (elts a))
(define-fun of_array ((a (Array Int character)) (f Int) (l Int)) us_t (mk___t a (mk f l)))
(define-fun first1 ((a us_t)) Int (to_rep1 (first (rt a))))
(define-fun last1 ((a us_t)) Int (to_rep1 (last (rt a))))
(define-fun length ((a us_t)) Int (ite (<= (first1 a) (last1 a)) (+ (- (last1 a) (first1 a)) 1) 0))
(declare-const value__size Int)
(declare-fun object__size ((Array Int character)) Int)
(declare-const value__component__size Int)
(declare-fun object__component__size ((Array Int character)) Int)
(declare-const value__alignment Int)
(declare-fun object__alignment ((Array Int character)) Int)
(assert (<= 0 value__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__size a))))
(assert (<= 0 value__component__size))
(assert (forall ((a (Array Int character))) (<= 0 (object__component__size a))))
(assert (<= 0 value__alignment))
(assert (forall ((a (Array Int character))) (<= 0 (object__alignment a))))
(define-fun bool_eq1 ((x us_t) (y us_t)) Bool (bool_eq (elts x) (to_rep1 (first (rt x))) (to_rep1 (last (rt x))) (elts y) (to_rep1 (first (rt y))) (to_rep1 (last (rt y)))))
(declare-fun user_eq3 (us_t us_t) Bool)
(declare-const dummy3 us_t)
(declare-fun to_string (us_image) us_t)
(declare-fun from_string (us_t) us_image)
(declare-datatypes () ((string__ref (mk_string__ref (string__content us_t)))))
(define-fun string__ref___projection ((a string__ref)) us_t (string__content a))
(define-fun dynamic_invariant ((temp___expr_63 Int) (temp___is_init_60 Bool) (temp___skip_constant_61 Bool) (temp___do_toplevel_62 Bool)) Bool (=> (or (= temp___is_init_60 true) (<= 0 255)) (in_range3 temp___expr_63)))
(define-fun dynamic_invariant1 ((temp___expr_82 us_t) (temp___is_init_79 Bool) (temp___skip_constant_80 Bool) (temp___do_toplevel_81 Bool)) Bool (=> (not (= temp___skip_constant_80 true)) (dynamic_property 1 2147483647 (first1 temp___expr_82) (last1 temp___expr_82))))
(declare-fun is_letter (Int) Bool)
(declare-fun is_letter__function_guard (Bool Int) Bool)
(assert true)
(declare-fun is_digit (Int) Bool)
(declare-fun is_digit__function_guard (Bool Int) Bool)
(assert true)
(declare-sort iso_646 0)
(define-fun in_range4 ((x Int)) Bool (and (<= 0 x) (<= x 127)))
(declare-fun attr__ATTRIBUTE_IMAGE4 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check4 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE4 (us_image) Int)
(declare-fun user_eq4 (iso_646 iso_646) Bool)
(declare-const dummy4 iso_646)
(declare-datatypes () ((iso_646__ref (mk_iso_646__ref (iso_646__content iso_646)))))
(define-fun iso_646__ref___projection ((a iso_646__ref)) iso_646 (iso_646__content a))
(declare-const name us_t)
(declare-const attr__ATTRIBUTE_ADDRESS Int)
(declare-sort state_type 0)
(define-fun in_range5 ((x Int)) Bool (and (<= 0 x) (<= x 2)))
(declare-fun attr__ATTRIBUTE_IMAGE5 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check5 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE5 (us_image) Int)
(declare-fun user_eq5 (state_type state_type) Bool)
(declare-const dummy5 state_type)
(declare-datatypes () ((state_type__ref (mk_state_type__ref (state_type__content state_type)))))
(define-fun state_type__ref___projection ((a state_type__ref)) state_type (state_type__content a))
(define-fun dynamic_invariant2 ((temp___expr_190 Int) (temp___is_init_187 Bool) (temp___skip_constant_188 Bool) (temp___do_toplevel_189 Bool)) Bool (=> (or (= temp___is_init_187 true) (<= 0 2)) (in_range5 temp___expr_190)))
(declare-sort length_type 0)
(define-fun in_range6 ((x Int)) Bool (and (<= 0 x) (<= x 255)))
(declare-fun attr__ATTRIBUTE_IMAGE6 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check6 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE6 (us_image) Int)
(declare-fun user_eq6 (length_type length_type) Bool)
(declare-const dummy6 length_type)
(declare-datatypes () ((length_type__ref (mk_length_type__ref (length_type__content length_type)))))
(define-fun length_type__ref___projection ((a length_type__ref)) length_type (length_type__content a))
(define-fun dynamic_invariant3 ((temp___expr_196 Int) (temp___is_init_193 Bool) (temp___skip_constant_194 Bool) (temp___do_toplevel_195 Bool)) Bool (=> (or (= temp___is_init_193 true) (<= 0 255)) (in_range6 temp___expr_196)))
(declare-const attr__ATTRIBUTE_ADDRESS1 Int)
(declare-const attr__ATTRIBUTE_ADDRESS2 Int)
(declare-const attr__ATTRIBUTE_ADDRESS3 Int)
(define-fun dynamic_property1 ((first_int Int) (last_int Int) (x Int)) Bool (and (<= first_int x) (<= x last_int)))
(declare-fun attr__ATTRIBUTE_IMAGE7 (Int) us_image)
(declare-fun attr__ATTRIBUTE_VALUE__pre_check7 (us_image) Bool)
(declare-fun attr__ATTRIBUTE_VALUE7 (us_image) Int)
(declare-fun user_eq7 (integer integer) Bool)
(declare-const dummy7 integer)
(declare-datatypes () ((t3b__ref (mk_t3b__ref (t3b__content integer)))))
(define-fun t3b__ref___projection ((a t3b__ref)) integer (t3b__content a))
(declare-const attr__ATTRIBUTE_ADDRESS4 Int)
(define-fun dynamic_invariant4 ((temp___expr_39 Int) (temp___is_init_36 Bool) (temp___skip_constant_37 Bool) (temp___do_toplevel_38 Bool)) Bool (=> (or (= temp___is_init_36 true) (<= 1 2147483647)) (in_range2 temp___expr_39)))
(define-fun dynamic_invariant5 ((temp___expr_15 Int) (temp___is_init_12 Bool) (temp___skip_constant_13 Bool) (temp___do_toplevel_14 Bool)) Bool (=> (or (= temp___is_init_12 true) (<= (- 2147483648) 2147483647)) (in_range1 temp___expr_15)))
(define-fun dynamic_invariant6 ((temp___expr_147 Int) (temp___is_init_144 Bool) (temp___skip_constant_145 Bool) (temp___do_toplevel_146 Bool)) Bool (=> (or (= temp___is_init_144 true) (<= 0 127)) (in_range4 temp___expr_147)))
(declare-const state Int)
(declare-const label_length Int)
(declare-const ch Int)
(declare-const i Int)
(declare-const names__is_domain_name__result Bool)
(declare-const temp___204 Int)
(declare-const temp___205 Int)
(declare-const temp___203 Int)
(declare-const temp___202 Int)
(declare-const temp___201 Int)
(declare-const temp___200 Int)
(declare-const o Bool)
(declare-const o1 Int)
(declare-const o2 Int)
(declare-const o3 Bool)
(declare-const o4 Bool)
(declare-const o5 Bool)
(declare-const o6 Int)
(declare-const o7 Int)
(declare-const o8 Bool)
(declare-const o9 Bool)
(declare-const o10 Bool)
(declare-const o11 Int)
(declare-const ch1 Int)
(declare-const i1 Int)
(declare-const names__is_domain_name__result1 Bool)
(declare-const result Int)
(declare-const state1 Int)
(declare-const result1 Int)
(declare-const label_length1 Int)
(declare-const result2 Bool)
(declare-const names__is_domain_name__result2 Bool)
(declare-const result3 Int)
(declare-const i2 Int)
(declare-const state2 Int)
(declare-const label_length2 Int)
(declare-const ch2 Int)
(declare-const i3 Int)
(declare-const names__is_domain_name__result3 Bool)
(declare-const result4 Int)
(declare-const ch3 Int)
(declare-const result5 Bool)
(declare-const names__is_domain_name__result4 Bool)
(declare-const result6 Bool)
(declare-const result7 Bool)
(declare-const names__is_domain_name__result5 Bool)
(declare-const result8 Int)
(declare-const state3 Int)
(declare-const result9 Int)
(declare-const label_length3 Int)
(declare-const result10 Bool)
(declare-const names__is_domain_name__result6 Bool)
(declare-const result11 Int)
(declare-const state4 Int)
(declare-const result12 Int)
(declare-const label_length4 Int)
(declare-const result13 Int)
(declare-const state5 Int)
(declare-const result14 Int)
(declare-const label_length5 Int)
(declare-const result15 Bool)
(declare-const result16 Bool)
(declare-const names__is_domain_name__result7 Bool)
(declare-const result17 Int)
(declare-const label_length6 Int)
(declare-const names__is_domain_name__result8 bool__ref)
(declare-const names__is_domain_name__result9 Bool)
(declare-const result18 int__ref)
(declare-const label_length7 Int)
(declare-const result19 Bool)
(declare-const result20 bool__ref)
(declare-const names__is_domain_name__result10 Bool)
(declare-const result21 int__ref)
(declare-const state6 Int)
(declare-const result22 int__ref)
(declare-const label_length8 Int)
(declare-const names__is_domain_name__result11 bool__ref)
(declare-const names__is_domain_name__result12 Bool)
(declare-const names__is_domain_name__result13 bool__ref)
(declare-const names__is_domain_name__result14 Bool)
(declare-const names__is_domain_name__result15 bool__ref)
(declare-const names__is_domain_name__result16 Bool)
(declare-const state7 int__ref)
(declare-const label_length9 int__ref)
(declare-const ch4 int__ref)
(declare-const i4 int__ref)
(declare-const names__is_domain_name__result17 bool__ref)
(declare-const state8 Int)
(declare-const label_length10 Int)
(declare-const ch5 Int)
(declare-const i5 Int)
(declare-const names__is_domain_name__result18 Bool)
(declare-const state9 int__ref)
(declare-const label_length11 int__ref)
(declare-const ch6 int__ref)
(declare-const i6 int__ref)
(declare-const names__is_domain_name__result19 bool__ref)
(declare-const state10 Int)
(declare-const label_length12 Int)
(declare-const ch7 Int)
(declare-const i7 Int)
(declare-const names__is_domain_name__result20 Bool)
(declare-const result23 bool__ref)
(declare-const names__is_domain_name__result21 Bool)
(declare-const result24 bool__ref)
(declare-const names__is_domain_name__result22 Bool)
(declare-const names__is_domain_name__result23 bool__ref)
(declare-const names__is_domain_name__result24 Bool)
(declare-const names__is_domain_name__result25 bool__ref)
(declare-const names__is_domain_name__result26 Bool)
(declare-const names__is_domain_name__result27 bool__ref)
(declare-const names__is_domain_name__result28 Bool)
(declare-const result25 bool__ref)
(declare-const names__is_domain_name__result29 Bool)
(declare-const names__is_domain_name__result30 bool__ref)
(declare-const names__is_domain_name__result31 Bool)
(declare-const state11 int__ref)
(declare-const label_length13 int__ref)
(declare-const ch8 int__ref)
(declare-const i8 int__ref)
(declare-const names__is_domain_name__result32 bool__ref)
(declare-const state12 Int)
(declare-const label_length14 Int)
(declare-const ch9 Int)
(declare-const i9 Int)
(declare-const names__is_domain_name__result33 Bool)
(declare-const state13 int__ref)
(declare-const label_length15 int__ref)
(declare-const ch10 int__ref)
(declare-const i10 int__ref)
(declare-const names__is_domain_name__result34 bool__ref)
(declare-const state14 Int)
(declare-const label_length16 Int)
(declare-const ch11 Int)
(declare-const i11 Int)
(declare-const names__is_domain_name__result35 Bool)
(declare-const state15 int__ref)
(declare-const label_length17 int__ref)
(declare-const ch12 int__ref)
(declare-const i12 int__ref)
(declare-const names__is_domain_name__result36 bool__ref)
(declare-const state16 Int)
(declare-const label_length18 Int)
(declare-const ch13 Int)
(declare-const i13 Int)
(declare-const names__is_domain_name__result37 Bool)
(declare-const state17 int__ref)
(declare-const label_length19 int__ref)
(declare-const ch14 int__ref)
(declare-const i14 int__ref)
(declare-const names__is_domain_name__result38 bool__ref)
(declare-const state18 Int)
(declare-const label_length20 Int)
(declare-const ch15 Int)
(declare-const i15 Int)
(declare-const names__is_domain_name__result39 Bool)
(define-fun result26 () int__ref (mk_int__ref result3))
(define-fun names__is_domain_name__result40 () bool__ref (mk_bool__ref names__is_domain_name__result))
(define-fun i16 () int__ref (mk_int__ref i))
(define-fun ch16 () int__ref (mk_int__ref ch))
(declare-const result27 Bool)
(assert (dynamic_invariant1 name true false true))
(assert (=> (<= 0 2) (in_range5 state)))
(assert (=> (<= 0 255) (in_range6 label_length)))
(assert (=> (<= 0 255) (in_range3 ch)))
(assert (= (mk_int__ref result) (mk_int__ref state)))
(assert (= state1 0))
(assert (= (mk_int__ref result1) (mk_int__ref label_length)))
(assert (= label_length1 0))
(assert (= names__is_domain_name__result36 names__is_domain_name__result34))
(assert (= i12 i10))
(assert (= ch12 ch10))
(assert (= label_length17 label_length15))
(assert (= state15 state13))
(assert (= names__is_domain_name__result37 names__is_domain_name__result35))
(assert (= i13 i11))
(assert (= ch13 ch11))
(assert (= label_length18 label_length16))
(assert (= state16 state14))
(assert (=> (=> (not (< (length name) 1)) (< 255 (length name))) (= names__is_domain_name__result34 (mk_bool__ref names__is_domain_name__result2))))
(assert (=> (=> (not (< (length name) 1)) (< 255 (length name))) (= i10 i16)))
(assert (=> (=> (not (< (length name) 1)) (< 255 (length name))) (= ch10 ch16)))
(assert (=> (=> (not (< (length name) 1)) (< 255 (length name))) (= label_length15 (mk_int__ref label_length1))))
(assert (=> (=> (not (< (length name) 1)) (< 255 (length name))) (= state13 (mk_int__ref state1))))
(assert (=> (=> (not (< (length name) 1)) (< 255 (length name))) (= names__is_domain_name__result35 names__is_domain_name__result2)))
(assert (=> (=> (not (< (length name) 1)) (< 255 (length name))) (= i11 i1)))
(assert (=> (=> (not (< (length name) 1)) (< 255 (length name))) (= ch11 ch1)))
(assert (=> (=> (not (< (length name) 1)) (< 255 (length name))) (= label_length16 label_length1)))
(assert (=> (=> (not (< (length name) 1)) (< 255 (length name))) (= state14 state1)))
(assert (=> (=> (not (< (length name) 1)) (< 255 (length name))) (= (mk_bool__ref result2) names__is_domain_name__result40)))
(assert (=> (=> (not (< (length name) 1)) (< 255 (length name))) (= names__is_domain_name__result2 (of_int 0))))
(assert (=> (not (=> (not (< (length name) 1)) (< 255 (length name)))) (= names__is_domain_name__result34 names__is_domain_name__result32)))
(assert (=> (not (=> (not (< (length name) 1)) (< 255 (length name)))) (= i10 i8)))
(assert (=> (not (=> (not (< (length name) 1)) (< 255 (length name)))) (= ch10 ch8)))
(assert (=> (not (=> (not (< (length name) 1)) (< 255 (length name)))) (= label_length15 label_length13)))
(assert (=> (not (=> (not (< (length name) 1)) (< 255 (length name)))) (= state13 state11)))
(assert (=> (not (=> (not (< (length name) 1)) (< 255 (length name)))) (= names__is_domain_name__result35 names__is_domain_name__result33)))
(assert (=> (not (=> (not (< (length name) 1)) (< 255 (length name)))) (= i11 i9)))
(assert (=> (not (=> (not (< (length name) 1)) (< 255 (length name)))) (= ch11 ch9)))
(assert (=> (not (=> (not (< (length name) 1)) (< 255 (length name)))) (= label_length16 label_length14)))
(assert (=> (not (=> (not (< (length name) 1)) (< 255 (length name)))) (= state14 state12)))
(assert (=> (not (=> (not (< (length name) 1)) (< 255 (length name)))) (or (and (and (and (= names__is_domain_name__result32 names__is_domain_name__result15) (and (= i8 (mk_int__ref i3)) (and (= ch8 (mk_int__ref ch3)) (and (= label_length13 (mk_int__ref label_length2)) (= state11 (mk_int__ref state2)))))) (and (= names__is_domain_name__result33 names__is_domain_name__result16) (and (= i9 i3) (and (= ch9 ch3) (and (= label_length14 label_length2) (= state12 state2)))))) (and (= temp___204 (to_rep1 (first (rt name)))) (and (= temp___205 (to_rep1 (last (rt name)))) (and (and (= result26 i16) (= i2 temp___204)) (and (and (<= temp___204 i2) (<= i2 temp___205)) (and (= temp___203 ch) (and (= temp___202 label_length1) (and (= temp___201 state1) (and (= temp___200 i2) (and (< label_length2 (+ (- i3 (to_rep1 (first (rt name)))) 1)) (and (and (and (and (and (=> (<= (to_rep1 (first (rt name))) (to_rep1 (last (rt name)))) (dynamic_property1 (to_rep1 (first (rt name))) (to_rep1 (last (rt name))) i3)) (=> (<= 0 2) (in_range5 state2))) (=> (<= 0 255) (in_range6 label_length2))) (=> (<= 0 255) (in_range3 ch2))) (and (<= (to_rep1 (first (rt name))) i3) (<= i3 (to_rep1 (last (rt name)))))) (and (and (= ch2 result4) (= ch3 (to_rep (select (elts name) i3)))) (or (and (and (= names__is_domain_name__result15 (mk_bool__ref names__is_domain_name__result4)) (= names__is_domain_name__result16 names__is_domain_name__result4)) (and (not (in_range4 ch3)) (and (= names__is_domain_name__result3 result5) (= names__is_domain_name__result4 (of_int 0))))) (and (and (in_range4 ch3) (= names__is_domain_name__result4 names__is_domain_name__result3)) (and (and (= names__is_domain_name__result15 names__is_domain_name__result13) (= names__is_domain_name__result16 names__is_domain_name__result14)) (ite (= state2 0) (and (and (= names__is_domain_name__result13 (mk_bool__ref names__is_domain_name__result5)) (= names__is_domain_name__result14 names__is_domain_name__result5)) (and (and (= o (is_letter ch3)) (= result6 (ite (not (= o true)) true false))) (and (= result6 true) (and (= names__is_domain_name__result4 result7) (= names__is_domain_name__result5 (of_int 0)))))) (and (and (= names__is_domain_name__result13 names__is_domain_name__result11) (= names__is_domain_name__result14 names__is_domain_name__result12)) (ite (= state2 1) (and (and (= names__is_domain_name__result11 names__is_domain_name__result8) (= names__is_domain_name__result12 names__is_domain_name__result9)) (ite (= ch3 46) (and (and (= names__is_domain_name__result8 (mk_bool__ref names__is_domain_name__result6)) (= names__is_domain_name__result9 names__is_domain_name__result6)) (and (< 63 label_length2) (and (= names__is_domain_name__result4 result10) (= names__is_domain_name__result6 (of_int 0))))) (and (and (= names__is_domain_name__result8 (mk_bool__ref names__is_domain_name__result7)) (= names__is_domain_name__result9 names__is_domain_name__result7)) (and (not (= ch3 45)) (and (and (and (= o3 (is_digit ch3)) (and (= o4 (is_letter ch3)) (= o5 (ite (= o4 false) o3 true)))) (= result15 (ite (not (= o5 true)) true false))) (and (= result15 true) (and (= names__is_domain_name__result4 result16) (= names__is_domain_name__result7 (of_int 0))))))))) (and (and (= names__is_domain_name__result11 (mk_bool__ref names__is_domain_name__result10)) (= names__is_domain_name__result12 names__is_domain_name__result10)) (and (not (= ch3 45)) (and (and (and (= o8 (is_digit ch3)) (and (= o9 (is_letter ch3)) (= o10 (ite (= o9 false) o8 true)))) (= result19 (ite (not (= o10 true)) true false))) (and (= result19 true) (and (= result20 (mk_bool__ref names__is_domain_name__result4)) (= names__is_domain_name__result10 (of_int 0))))))))))))))))))))))))) (and (and (and (= result26 i16) (= i2 (to_rep1 (first (rt name))))) (ite (and (<= (to_rep1 (first (rt name))) i2) (<= i2 (to_rep1 (last (rt name))))) (and (and (and (= temp___203 ch) (and (= temp___202 label_length1) (and (= temp___201 state1) (and (= temp___200 i2) (and (< label_length2 (+ (- i3 (to_rep1 (first (rt name)))) 1)) (and (and (and (and (and (=> (<= (to_rep1 (first (rt name))) (to_rep1 (last (rt name)))) (dynamic_property1 (to_rep1 (first (rt name))) (to_rep1 (last (rt name))) i3)) (=> (<= 0 2) (in_range5 state2))) (=> (<= 0 255) (in_range6 label_length2))) (=> (<= 0 255) (in_range3 ch2))) (and (<= (to_rep1 (first (rt name))) i3) (<= i3 (to_rep1 (last (rt name)))))) (and (and (= ch2 result4) (= ch3 (to_rep (select (elts name) i3)))) (and (and (in_range4 ch3) (= names__is_domain_name__result4 names__is_domain_name__result3)) (and (ite (= state2 0) (and (and (= o (is_letter ch3)) (= result6 (ite (not (= o true)) true false))) (and (not (= result6 true)) (and (and (and (= state2 result8) (= state3 1)) (and (and (= o1 (+ label_length2 1)) (in_range6 (+ label_length2 1))) (and (= label_length2 result9) (= label_length3 o1)))) (= names__is_domain_name__result5 names__is_domain_name__result4)))) (and (ite (= state2 1) (ite (= ch3 46) (and (and (not (< 63 label_length2)) (= names__is_domain_name__result6 names__is_domain_name__result4)) (and (and (= state2 result11) (= state4 0)) (and (= label_length2 result12) (= label_length4 0)))) (and (ite (= ch3 45) (and (and (and (= state2 result13) (= state5 2)) (and (and (= o2 (+ label_length2 1)) (in_range6 (+ label_length2 1))) (and (= label_length2 result14) (= label_length5 o2)))) (= names__is_domain_name__result7 names__is_domain_name__result4)) (and (and (and (and (= o3 (is_digit ch3)) (and (= o4 (is_letter ch3)) (= o5 (ite (= o4 false) o3 true)))) (= result15 (ite (not (= o5 true)) true false))) (and (not (= result15 true)) (and (and (and (= o6 (+ label_length2 1)) (in_range6 (+ label_length2 1))) (and (= label_length2 result17) (= label_length6 o6))) (= names__is_domain_name__result7 names__is_domain_name__result4)))) (and (= label_length5 label_length6) (= state5 state2)))) (and (= names__is_domain_name__result6 names__is_domain_name__result7) (and (= label_length4 label_length5) (= state4 state5))))) (and (ite (= ch3 45) (and (and (and (= o7 (+ label_length2 1)) (in_range6 (+ label_length2 1))) (and (= result18 (mk_int__ref label_length2)) (= label_length7 o7))) (and (= names__is_domain_name__result10 names__is_domain_name__result4) (= state6 state2))) (and (and (and (and (= o8 (is_digit ch3)) (and (= o9 (is_letter ch3)) (= o10 (ite (= o9 false) o8 true)))) (= result19 (ite (not (= o10 true)) true false))) (and (not (= result19 true)) (and (and (and (= result21 (mk_int__ref state2)) (= state6 1)) (and (and (= o11 (+ label_length2 1)) (in_range6 (+ label_length2 1))) (and (= result22 (mk_int__ref label_length2)) (= label_length8 o11)))) (= names__is_domain_name__result10 names__is_domain_name__result4)))) (= label_length7 label_length8))) (and (= names__is_domain_name__result6 names__is_domain_name__result10) (and (= label_length4 label_length7) (= state4 state6))))) (and (= names__is_domain_name__result5 names__is_domain_name__result6) (and (= label_length3 label_length4) (= state3 state4))))) (= i3 (to_rep1 (last (rt name))))))))))))) (and (and (= names__is_domain_name__result17 (mk_bool__ref names__is_domain_name__result5)) (and (= i4 (mk_int__ref i3)) (and (= ch4 (mk_int__ref ch3)) (and (= label_length9 (mk_int__ref label_length3)) (= state7 (mk_int__ref state3)))))) (and (= names__is_domain_name__result18 names__is_domain_name__result5) (and (= i5 i3) (and (= ch5 ch3) (and (= label_length10 label_length3) (= state8 state3))))))) (and (and (= names__is_domain_name__result19 names__is_domain_name__result17) (and (= i6 i4) (and (= ch6 ch4) (and (= label_length11 label_length9) (= state9 state7))))) (and (= names__is_domain_name__result20 names__is_domain_name__result18) (and (= i7 i5) (and (= ch7 ch5) (and (= label_length12 label_length10) (= state10 state8))))))) (and (and (= names__is_domain_name__result19 names__is_domain_name__result40) (and (= i6 (mk_int__ref i2)) (and (= ch6 ch16) (and (= label_length11 (mk_int__ref label_length1)) (= state9 (mk_int__ref state1)))))) (and (= names__is_domain_name__result20 names__is_domain_name__result1) (and (= i7 i2) (and (= ch7 ch1) (and (= label_length12 label_length1) (= state10 state1)))))))) (and (and (and (= names__is_domain_name__result32 names__is_domain_name__result30) (and (= i8 i6) (and (= ch8 ch6) (and (= label_length13 label_length11) (= state11 state9))))) (and (= names__is_domain_name__result33 names__is_domain_name__result31) (and (= i9 i7) (and (= ch9 ch7) (and (= label_length14 label_length12) (= state12 state10)))))) (or (and (and (= names__is_domain_name__result30 names__is_domain_name__result27) (= names__is_domain_name__result31 names__is_domain_name__result28)) (ite (= (int__content state9) 0) (and (and (= names__is_domain_name__result27 (mk_bool__ref names__is_domain_name__result21)) (= names__is_domain_name__result28 names__is_domain_name__result21)) (and (= result23 names__is_domain_name__result19) (= names__is_domain_name__result21 (of_int 0)))) (and (and (= names__is_domain_name__result27 (mk_bool__ref names__is_domain_name__result22)) (= names__is_domain_name__result28 names__is_domain_name__result22)) (and (not (= (int__content state9) 1)) (and (= result24 names__is_domain_name__result19) (= names__is_domain_name__result22 (of_int 0))))))) (and (and (not (= (int__content state9) 0)) (and (and (= (int__content state9) 1) (and (= names__is_domain_name__result23 names__is_domain_name__result19) (= names__is_domain_name__result24 names__is_domain_name__result20))) (and (= names__is_domain_name__result25 names__is_domain_name__result23) (= names__is_domain_name__result26 names__is_domain_name__result24)))) (and (and (= names__is_domain_name__result30 (mk_bool__ref names__is_domain_name__result29)) (= names__is_domain_name__result31 names__is_domain_name__result29)) (and (= result25 names__is_domain_name__result25) (= names__is_domain_name__result29 (of_int 1)))))))))))
(assert (= names__is_domain_name__result38 names__is_domain_name__result36))
(assert (= i14 i12))
(assert (= ch14 ch12))
(assert (= label_length19 label_length17))
(assert (= state17 state15))
(assert (= names__is_domain_name__result39 names__is_domain_name__result37))
(assert (= i15 i13))
(assert (= ch15 ch13))
(assert (= label_length20 label_length18))
(assert (= state18 state16))
(assert (= result27 (bool__content names__is_domain_name__result38)))
(assert (= (bool__content names__is_domain_name__result38) true))
(declare-const i17 Int)
(assert (<= (to_rep1 (first (rt name))) i17))
(assert (<= i17 (to_rep1 (last (rt name)))))
(assert (not (or (or (= (is_letter (to_rep (select (elts name) i17))) true) (= (is_digit (to_rep (select (elts name) i17))) true)) (= (to_rep (select (elts name) i17)) 45))))
(check-sat)
(exit)
